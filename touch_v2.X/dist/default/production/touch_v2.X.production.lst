

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb  6 21:30:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=4,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=4,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=4,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text163,global,reloc=4,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=4,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=4,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=4,class=CODE,delta=1
   207                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   208                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   211                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   212  0000                     
   213                           ; Version 2.10
   214                           ; Generated 31/07/2019 GMT
   215                           ; 
   216                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   217                           ; All rights reserved.
   218                           ; 
   219                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   220                           ; 
   221                           ; Redistribution and use in source and binary forms, with or without modification, are
   222                           ; permitted provided that the following conditions are met:
   223                           ; 
   224                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   225                           ;        conditions and the following disclaimer.
   226                           ; 
   227                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   228                           ;        of conditions and the following disclaimer in the documentation and/or other
   229                           ;        materials provided with the distribution.
   230                           ; 
   231                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   232                           ;        software without specific prior written permission.
   233                           ; 
   234                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   235                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   236                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   237                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   238                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   239                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   240                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   241                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   242                           ; 
   243                           ; 
   244                           ; Code-generator required, PIC18F57K42 Definitions
   245                           ; 
   246                           ; SFR Addresses
   247  0000                     
   248 ;;_main$3785	offset	0
   249 ;;_main$3781	offset	2
   250 ;;_esr_temp	offset	4
   251 ;;_i_esr	offset	8
   252 ;;_shape	offset	10
   253 ;;_inp_index	offset	11
   254 ;;_k	offset	12
   255 ;;_j	offset	13
   256 ;;_i	offset	14
   257 ;;_mode	offset	15
   258 ;;_i_ror	offset	16
   259 ;;_s	offset=-2 (param)
   260 ;;_c	offset	0
   261 ;;_shape	offset=-1 (param)
   262 ;;_reset	offset=-2 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_voltage	offset=-4 (param)
   266 ;;_set	offset=-1 (param)
   267 ;;_data	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_cmd	offset=-1 (param)
   270 ;;_data	offset=-1 (param)
   271 ;;__this	offset=-2 (param)
   272 ;;_soc	offset	0
   273 ;;_slot	offset	2
   274 ;;_cvoltage	offset=-4 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_h	offset=-2 (param)
   277 ;;_i	offset=-1 (param)
   278 ;;_fsm	offset=-1 (param)
   279 ;;_channel	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_mode	offset=-1 (param)
   282 ;;_cmd	offset=-1 (param)
   283 ;;_i	offset	0
   284 ;;_h	offset=-2 (param)
   285 ;;_flipper	offset=-1 (param)
   286 ;;_f	offset	0
   287 ;;_ap	offset	6
   288 ;;_s	offset=-3 (param)
   289 ;;_fmt	offset=-5 (param)
   290 ;;_line	offset=-1 (param)
   291 ;;_vterm	offset=-2 (param)
   292 ;;_numMilliseconds	offset=-2 (param)
   293 ;;_vterm	offset=-1 (param)
   294 ;;_row	offset	0
   295 ;;_r	offset=-1 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_strPtr	offset=-4 (param)
   298 ;;_strPtr	offset=-1 (param)
   299 ;;_delay	offset=-4 (param)
   300 ;;_strPtr	offset=-1 (param)
   301 ;;_strPtr	offset=-2 (param)
   302 ;;__this	offset=-2 (param)
   303 ;;_clearBuffer	offset=-3 (param)
   304 ;;_s	offset	0
   305 ;;_k	offset	2
   306 ;;_dest	offset=-2 (param)
   307 ;;_c	offset=-4 (param)
   308 ;;_n	offset=-6 (param)
   309 ;;_ap	offset	0
   310 ;;_fmt	offset=-3 (param)
   311 ;;_cfmt	offset	0
   312 ;;_fp	offset=-2 (param)
   313 ;;_fmt	offset=-4 (param)
   314 ;;_ap	offset=-6 (param)
   315 ;;_vfpfcnvrt$5894	offset	0
   316 ;;_vfpfcnvrt$5905	offset	2
   317 ;;_vfpfcnvrt$5893	offset	4
   318 ;;_llu	offset	6
   319 ;;_ll	offset	14
   320 ;;_f	offset	22
   321 ;;_ct	offset	26
   322 ;;_cp	offset	29
   323 ;;_c	offset	31
   324 ;;_fp	offset=-2 (param)
   325 ;;_fmt	offset=-4 (param)
   326 ;;_ap	offset=-6 (param)
   327 ;;_xtoa$5879	offset	0
   328 ;;_xtoa$5878	offset	2
   329 ;;_n	offset	4
   330 ;;_c	offset	12
   331 ;;_i	offset	14
   332 ;;_w	offset	16
   333 ;;_p	offset	18
   334 ;;_fp	offset=-2 (param)
   335 ;;_d	offset=-10 (param)
   336 ;;_x	offset=-11 (param)
   337 ;;_toupper$6685	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_c	offset=-2 (param)
   341 ;;_n	offset	0
   342 ;;_i	offset	8
   343 ;;_w	offset	10
   344 ;;_p	offset	12
   345 ;;_fp	offset=-2 (param)
   346 ;;_d	offset=-10 (param)
   347 ;;_counter	offset	0
   348 ;;_dividend	offset=-8 (param)
   349 ;;_divisor	offset=-16 (param)
   350 ;;_quotient	offset	0
   351 ;;_counter	offset	8
   352 ;;_dividend	offset=-8 (param)
   353 ;;_divisor	offset=-16 (param)
   354 ;;_r	offset	0
   355 ;;_l	offset	2
   356 ;;__l	offset=-2 (param)
   357 ;;__r	offset=-4 (param)
   358 ;;_n	offset=-6 (param)
   359 ;;_nuls	offset	0
   360 ;;_l	offset	7
   361 ;;_p	offset	9
   362 ;;_cp	offset	11
   363 ;;_w	offset	13
   364 ;;_i	offset	15
   365 ;;_fp	offset=-2 (param)
   366 ;;_s	offset=-4 (param)
   367 ;;_efgtoa$5851	offset	0
   368 ;;_efgtoa$5850	offset	2
   369 ;;_efgtoa$5849	offset	4
   370 ;;_efgtoa$5845	offset	6
   371 ;;_efgtoa$5841	offset	8
   372 ;;_efgtoa$5840	offset	10
   373 ;;_u	offset	12
   374 ;;_g	offset	16
   375 ;;_l	offset	20
   376 ;;_h	offset	24
   377 ;;_ou	offset	28
   378 ;;_n	offset	32
   379 ;;_e	offset	34
   380 ;;_i	offset	36
   381 ;;_w	offset	38
   382 ;;_p	offset	40
   383 ;;_sign	offset	42
   384 ;;_d	offset	44
   385 ;;_ne	offset	46
   386 ;;_m	offset	48
   387 ;;_pp	offset	50
   388 ;;_t	offset	52
   389 ;;_mode	offset	54
   390 ;;_nmode	offset	55
   391 ;;_fp	offset=-2 (param)
   392 ;;_f	offset=-6 (param)
   393 ;;_c	offset=-7 (param)
   394 ;;_tolower$6670	offset	0
   395 ;;_c	offset=-2 (param)
   396 ;;_c	offset=-2 (param)
   397 ;;_d	offset	0
   398 ;;_s	offset	2
   399 ;;_dest	offset=-2 (param)
   400 ;;_src	offset=-4 (param)
   401 ;;_u	offset	0
   402 ;;_m	offset	4
   403 ;;_e	offset	8
   404 ;;_x	offset=-4 (param)
   405 ;;_u	offset	0
   406 ;;_e	offset	4
   407 ;;_x	offset=-4 (param)
   408 ;;_exp1	offset	0
   409 ;;_sign1	offset	1
   410 ;;_f1	offset=-4 (param)
   411 ;;_f1	offset=-4 (param)
   412 ;;_ff1	offset=-4 (param)
   413 ;;_ff2	offset=-8 (param)
   414 ;;_sign	offset	0
   415 ;;_counter	offset	1
   416 ;;_dividend	offset=-2 (param)
   417 ;;_divisor	offset=-4 (param)
   418 ;;_quotient	offset	0
   419 ;;_sign	offset	2
   420 ;;_counter	offset	3
   421 ;;_dividend	offset=-2 (param)
   422 ;;_divisor	offset=-4 (param)
   423 ;;_dtoa$5817	offset	0
   424 ;;_n	offset	2
   425 ;;_i	offset	10
   426 ;;_s	offset	12
   427 ;;_w	offset	14
   428 ;;_p	offset	16
   429 ;;_fp	offset=-2 (param)
   430 ;;_d	offset=-10 (param)
   431 ;;_a	offset=-2 (param)
   432 ;;_sign	offset	0
   433 ;;_counter	offset	1
   434 ;;_dividend	offset=-8 (param)
   435 ;;_divisor	offset=-16 (param)
   436 ;;_quotient	offset	0
   437 ;;_sign	offset	8
   438 ;;_counter	offset	9
   439 ;;_dividend	offset=-8 (param)
   440 ;;_divisor	offset=-16 (param)
   441 ;;_w	offset	0
   442 ;;_fp	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_w	offset	0
   445 ;;_i	offset	2
   446 ;;_fp	offset=-2 (param)
   447 ;;_buf	offset=-4 (param)
   448 ;;_p	offset=-6 (param)
   449 ;;_a	offset	0
   450 ;;_s	offset=-2 (param)
   451 ;;_i	offset	0
   452 ;;_c	offset	2
   453 ;;_s	offset=-2 (param)
   454 ;;_fp	offset=-4 (param)
   455 ;;_c	offset=-2 (param)
   456 ;;_fp	offset=-4 (param)
   457 ;;_c	offset=-1 (param)
   458 ;;__this	offset=-2 (param)
   459 ;;_c	offset=-3 (param)
   460 ;;_atoi$6401	offset	0
   461 ;;_atoi$6399	offset	2
   462 ;;_atoi$6400	offset	4
   463 ;;_n	offset	5
   464 ;;_neg	offset	7
   465 ;;_s	offset=-2 (param)
   466 ;;_isspace$6450	offset	0
   467 ;;_c	offset=-2 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_vterm	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_new_response_info	offset=-1 (param)
   472 ;;_level	offset=-2 (param)
   473 ;;_dutyValue	offset=-2 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_timer	offset=-1 (param)
   476 ;;_count	offset=-3 (param)
   477 ;;_h	offset=-2 (param)
   478 ;;_u	offset	0
   479 ;;_x	offset=-4 (param)
   480 ;;_chan	offset=-1 (param)
   481 ;;_to_what	offset=-2 (param)
   482 ;;_u	offset	0
   483 ;;_s	offset=-2 (param)
   484 ;;_index	offset=-1 (param)
   485 ;;_arg	offset	0
   486 ;;_exp	offset	4
   487 ;;_sign	offset=-1 (param)
   488 ;;_val	offset=-5 (param)
   489 ;;_grs	offset	0
   490 ;;_rem	offset	4
   491 ;;_new_exp	offset	8
   492 ;;_aexp	offset	10
   493 ;;_bexp	offset	11
   494 ;;_sign	offset	12
   495 ;;_b	offset=-4 (param)
   496 ;;_a	offset=-8 (param)
   497 ;;_ff1	offset=-4 (param)
   498 ;;_ff2	offset=-8 (param)
   499 ;;_lp_speed	offset	0
   500 ;;_new	offset=-4 (param)
   501 ;;_bn	offset=-5 (param)
   502 ;;_slow	offset=-6 (param)
   503 ;;_b	offset=-4 (param)
   504 ;;_a	offset=-8 (param)
   505 ;;_grs	offset	0
   506 ;;_bexp	offset	1
   507 ;;_aexp	offset	2
   508 ;;_signs	offset	3
   509 ;;_b	offset=-4 (param)
   510 ;;_a	offset=-8 (param)
   511 ;;_prod	offset	0
   512 ;;_grs	offset	4
   513 ;;_temp	offset	8
   514 ;;_bexp	offset	10
   515 ;;_aexp	offset	11
   516 ;;_sign	offset	12
   517 ;;_b	offset=-4 (param)
   518 ;;_a	offset=-8 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_InterruptHandler	offset=-3 (param)
   525 ;;_state	offset	0
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_InterruptHandler	offset=-3 (param)
   530 ;;_i	offset	0
   531 ;;_sw_value	offset	1
   532 ;;_timerVal	offset=-2 (param)
   533 ;;_light	offset	0
   534 ;;_mode	offset=-1 (param)
   535 ;;_chan	offset=-1 (param)
   536 ;;_to_what	offset=-2 (param)
   537 ;;_u	offset	0
   538 ;;_s	offset=-2 (param)
   539 ;;_index	offset=-1 (param)
   540 ;;_arg	offset	0
   541 ;;_exp	offset	4
   542 ;;_sign	offset=-1 (param)
   543 ;;_val	offset=-5 (param)
   544 ;;_b	offset=-4 (param)
   545 ;;_a	offset=-8 (param)
   546 ;;_grs	offset	0
   547 ;;_bexp	offset	1
   548 ;;_aexp	offset	2
   549 ;;_signs	offset	3
   550 ;;_b	offset=-4 (param)
   551 ;;_a	offset=-8 (param)
   552 ;;_prod	offset	0
   553 ;;_grs	offset	4
   554 ;;_temp	offset	8
   555 ;;_bexp	offset	10
   556 ;;_aexp	offset	11
   557 ;;_sign	offset	12
   558 ;;_b	offset=-4 (param)
   559 ;;_a	offset=-8 (param)
   560 ;;_grs	offset	0
   561 ;;_rem	offset	4
   562 ;;_new_exp	offset	8
   563 ;;_aexp	offset	10
   564 ;;_bexp	offset	11
   565 ;;_sign	offset	12
   566 ;;_b	offset=-4 (param)
   567 ;;_a	offset=-8 (param)
   568 ;;_ff1	offset=-4 (param)
   569 ;;_ff2	offset=-8 (param)
   570 ;;_timerVal	offset=-2 (param)
   571 ;;_adj	offset	0
   572 ;;_log_ptr	offset	4
   573 ;;_f	offset	0
   574 ;;_ap	offset	6
   575 ;;_s	offset=-3 (param)
   576 ;;_fmt	offset=-5 (param)
   577 ;;_cfmt	offset	0
   578 ;;_fp	offset=-2 (param)
   579 ;;_fmt	offset=-4 (param)
   580 ;;_ap	offset=-6 (param)
   581 ;;_vfpfcnvrt$5894	offset	0
   582 ;;_vfpfcnvrt$5905	offset	2
   583 ;;_vfpfcnvrt$5893	offset	4
   584 ;;_llu	offset	6
   585 ;;_ll	offset	14
   586 ;;_f	offset	22
   587 ;;_ct	offset	26
   588 ;;_cp	offset	29
   589 ;;_c	offset	31
   590 ;;_fp	offset=-2 (param)
   591 ;;_fmt	offset=-4 (param)
   592 ;;_ap	offset=-6 (param)
   593 ;;_xtoa$5879	offset	0
   594 ;;_xtoa$5878	offset	2
   595 ;;_n	offset	4
   596 ;;_c	offset	12
   597 ;;_i	offset	14
   598 ;;_w	offset	16
   599 ;;_p	offset	18
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_x	offset=-11 (param)
   603 ;;_toupper$6685	offset	0
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_c	offset=-2 (param)
   607 ;;_n	offset	0
   608 ;;_i	offset	8
   609 ;;_w	offset	10
   610 ;;_p	offset	12
   611 ;;_fp	offset=-2 (param)
   612 ;;_d	offset=-10 (param)
   613 ;;_counter	offset	0
   614 ;;_dividend	offset=-8 (param)
   615 ;;_divisor	offset=-16 (param)
   616 ;;_quotient	offset	0
   617 ;;_counter	offset	8
   618 ;;_dividend	offset=-8 (param)
   619 ;;_divisor	offset=-16 (param)
   620 ;;_r	offset	0
   621 ;;_l	offset	2
   622 ;;__l	offset=-2 (param)
   623 ;;__r	offset=-4 (param)
   624 ;;_n	offset=-6 (param)
   625 ;;_nuls	offset	0
   626 ;;_l	offset	7
   627 ;;_p	offset	9
   628 ;;_cp	offset	11
   629 ;;_w	offset	13
   630 ;;_i	offset	15
   631 ;;_fp	offset=-2 (param)
   632 ;;_s	offset=-4 (param)
   633 ;;_efgtoa$5851	offset	0
   634 ;;_efgtoa$5850	offset	2
   635 ;;_efgtoa$5849	offset	4
   636 ;;_efgtoa$5845	offset	6
   637 ;;_efgtoa$5841	offset	8
   638 ;;_efgtoa$5840	offset	10
   639 ;;_u	offset	12
   640 ;;_g	offset	16
   641 ;;_l	offset	20
   642 ;;_h	offset	24
   643 ;;_ou	offset	28
   644 ;;_n	offset	32
   645 ;;_e	offset	34
   646 ;;_i	offset	36
   647 ;;_w	offset	38
   648 ;;_p	offset	40
   649 ;;_sign	offset	42
   650 ;;_d	offset	44
   651 ;;_ne	offset	46
   652 ;;_m	offset	48
   653 ;;_pp	offset	50
   654 ;;_t	offset	52
   655 ;;_mode	offset	54
   656 ;;_nmode	offset	55
   657 ;;_fp	offset=-2 (param)
   658 ;;_f	offset=-6 (param)
   659 ;;_c	offset=-7 (param)
   660 ;;_tolower$6670	offset	0
   661 ;;_c	offset=-2 (param)
   662 ;;_c	offset=-2 (param)
   663 ;;_d	offset	0
   664 ;;_s	offset	2
   665 ;;_dest	offset=-2 (param)
   666 ;;_src	offset=-4 (param)
   667 ;;_u	offset	0
   668 ;;_m	offset	4
   669 ;;_e	offset	8
   670 ;;_x	offset=-4 (param)
   671 ;;_u	offset	0
   672 ;;_e	offset	4
   673 ;;_x	offset=-4 (param)
   674 ;;_exp1	offset	0
   675 ;;_sign1	offset	1
   676 ;;_f1	offset=-4 (param)
   677 ;;_f1	offset=-4 (param)
   678 ;;_ff1	offset=-4 (param)
   679 ;;_ff2	offset=-8 (param)
   680 ;;_sign	offset	0
   681 ;;_counter	offset	1
   682 ;;_dividend	offset=-2 (param)
   683 ;;_divisor	offset=-4 (param)
   684 ;;_quotient	offset	0
   685 ;;_sign	offset	2
   686 ;;_counter	offset	3
   687 ;;_dividend	offset=-2 (param)
   688 ;;_divisor	offset=-4 (param)
   689 ;;_dtoa$5817	offset	0
   690 ;;_n	offset	2
   691 ;;_i	offset	10
   692 ;;_s	offset	12
   693 ;;_w	offset	14
   694 ;;_p	offset	16
   695 ;;_fp	offset=-2 (param)
   696 ;;_d	offset=-10 (param)
   697 ;;_a	offset=-2 (param)
   698 ;;_sign	offset	0
   699 ;;_counter	offset	1
   700 ;;_dividend	offset=-8 (param)
   701 ;;_divisor	offset=-16 (param)
   702 ;;_quotient	offset	0
   703 ;;_sign	offset	8
   704 ;;_counter	offset	9
   705 ;;_dividend	offset=-8 (param)
   706 ;;_divisor	offset=-16 (param)
   707 ;;_w	offset	0
   708 ;;_fp	offset=-2 (param)
   709 ;;_c	offset=-3 (param)
   710 ;;_w	offset	0
   711 ;;_i	offset	2
   712 ;;_fp	offset=-2 (param)
   713 ;;_buf	offset=-4 (param)
   714 ;;_p	offset=-6 (param)
   715 ;;_a	offset	0
   716 ;;_s	offset=-2 (param)
   717 ;;_i	offset	0
   718 ;;_c	offset	2
   719 ;;_s	offset=-2 (param)
   720 ;;_fp	offset=-4 (param)
   721 ;;_c	offset=-2 (param)
   722 ;;_fp	offset=-4 (param)
   723 ;;_c	offset=-1 (param)
   724 ;;__this	offset=-2 (param)
   725 ;;_c	offset=-3 (param)
   726 ;;_atoi$6401	offset	0
   727 ;;_atoi$6399	offset	2
   728 ;;_atoi$6400	offset	4
   729 ;;_n	offset	5
   730 ;;_neg	offset	7
   731 ;;_s	offset=-2 (param)
   732 ;;_isspace$6450	offset	0
   733 ;;_c	offset=-2 (param)
   734 ;;_c	offset=-2 (param)
   735 ;;_dsize	offset=-2 (param)
   736 ;;_u	offset	0
   737 ;;_x	offset=-4 (param)
   738 ;;_f1p	offset=-2 (param)
   739 ;;_f2	offset=-6 (param)
   740 ;;_timer	offset=-1 (param)
   741 ;;_count	offset=-3 (param)
   742 ;;_channel	offset=-1 (param)
   743 ;;_i	offset	0
   744                           
   745                           	psect	idataBIGRAM
   746  016B8E                     __pidataBIGRAM:
   747                           	opt callstack 0
   748                           
   749                           ;initializer for _port_data
   750  016B8E  FF                 	db	255
   751  016B8F  00                 	db	0
   752  016B90  FF                 	db	255
   753  016B91  00                 	db	0
   754  016B92  FF                 	db	255
   755  016B93  00                 	db	0
   756  016B94  FF                 	db	255
   757  016B95  00                 	db	0
   758  016B96  FF                 	db	255
   759  016B97  00                 	db	0
   760  016B98  FF                 	db	255
   761  016B99  00                 	db	0
   762  016B9A  FF                 	db	255
   763  016B9B  00                 	db	0
   764  016B9C  FF                 	db	255
   765  016B9D  00                 	db	0
   766  016B9E  00                 	db	0
   767  016B9F  00                 	db	0
   768  016BA0  00                 	db	0
   769  016BA1  00                 	db	0
   770  016BA2  00                 	db	0
   771  016BA3  00                 	db	0
   772  016BA4  00                 	db	0
   773  016BA5  00                 	db	0
   774  016BA6  00                 	db	0
   775  016BA7  00                 	db	0
   776  016BA8  00                 	db	0
   777  016BA9  00                 	db	0
   778  016BAA  00                 	db	0
   779  016BAB  00                 	db	0
   780  016BAC  00                 	db	0
   781  016BAD  00                 	db	0
   782  016BAE  00                 	db	0
   783  016BAF  00                 	db	0
   784  016BB0  00                 	db	0
   785  016BB1  00                 	db	0
   786  016BB2  00                 	db	0
   787  016BB3  00                 	db	0
   788  016BB4  00                 	db	0
   789  016BB5  00                 	db	0
   790  016BB6  00                 	db	0
   791  016BB7  00                 	db	0
   792  016BB8  00                 	db	0
   793  016BB9  00                 	db	0
   794  016BBA  00                 	db	0
   795  016BBB  00                 	db	0
   796  016BBC  00                 	db	0
   797  016BBD  00                 	db	0
   798  016BBE  00                 	db	0
   799  016BBF  00                 	db	0
   800  016BC0  00                 	db	0
   801  016BC1  00                 	db	0
   802  016BC2  00                 	db	0
   803  016BC3  00                 	db	0
   804  016BC4  00                 	db	0
   805  016BC5  00                 	db	0
   806  016BC6  00                 	db	0
   807  016BC7  00                 	db	0
   808  016BC8  00                 	db	0
   809  016BC9  00                 	db	0
   810  016BCA  00                 	db	0
   811  016BCB  00                 	db	0
   812  016BCC  00                 	db	0
   813  016BCD  00                 	db	0
   814  016BCE  00                 	db	0
   815  016BCF  00                 	db	0
   816  016BD0  00                 	db	0
   817  016BD1  00                 	db	0
   818  016BD2  00                 	db	0
   819  016BD3  00                 	db	0
   820  016BD4  00                 	db	0
   821  016BD5  00                 	db	0
   822  016BD6  00                 	db	0
   823  016BD7  00                 	db	0
   824  016BD8  00                 	db	0
   825  016BD9  00                 	db	0
   826  016BDA  00                 	db	0
   827  016BDB  00                 	db	0
   828  016BDC  00                 	db	0
   829  016BDD  00                 	db	0
   830  016BDE  00                 	db	0
   831  016BDF  00                 	db	0
   832  016BE0  00                 	db	0
   833  016BE1  00                 	db	0
   834  016BE2  00                 	db	0
   835  016BE3  00                 	db	0
   836  016BE4  00                 	db	0
   837  016BE5  00                 	db	0
   838  016BE6  00                 	db	0
   839  016BE7  00                 	db	0
   840  016BE8  00                 	db	0
   841  016BE9  00                 	db	0
   842  016BEA  00                 	db	0
   843  016BEB  00                 	db	0
   844  016BEC  00                 	db	0
   845  016BED  00                 	db	0
   846  016BEE  00                 	db	0
   847  016BEF  00                 	db	0
   848  016BF0  00                 	db	0
   849  016BF1  00                 	db	0
   850  016BF2  00                 	db	0
   851  016BF3  00                 	db	0
   852  016BF4  00                 	db	0
   853  016BF5  00                 	db	0
   854  016BF6  00                 	db	0
   855  016BF7  00                 	db	0
   856  016BF8  00                 	db	0
   857  016BF9  00                 	db	0
   858  016BFA  00                 	db	0
   859  016BFB  00                 	db	0
   860  016BFC  00                 	db	0
   861  016BFD  00                 	db	0
   862  016BFE  00                 	db	0
   863  016BFF  00                 	db	0
   864  016C00  00                 	db	0
   865  016C01  00                 	db	0
   866  016C02  00                 	db	0
   867  016C03  00                 	db	0
   868  016C04  00                 	db	0
   869  016C05  00                 	db	0
   870  016C06  00                 	db	0
   871  016C07  00                 	db	0
   872  016C08  00                 	db	0
   873  016C09  00                 	db	0
   874  016C0A  00                 	db	0
   875  016C0B  00                 	db	0
   876  016C0C  00                 	db	0
   877  016C0D  00                 	db	0
   878  016C0E  00                 	db	0
   879  016C0F  00                 	db	0
   880  016C10  00                 	db	0
   881  016C11  00                 	db	0
   882  016C12  00                 	db	0
   883  016C13  00                 	db	0
   884  016C14  00                 	db	0
   885  016C15  00                 	db	0
   886  016C16  00                 	db	0
   887  016C17  00                 	db	0
   888  016C18  00                 	db	0
   889  016C19  00                 	db	0
   890  016C1A  00                 	db	0
   891  016C1B  00                 	db	0
   892  016C1C  00                 	db	0
   893  016C1D  00                 	db	0
   894  016C1E  00                 	db	0
   895  016C1F  00                 	db	0
   896  016C20  00                 	db	0
   897  016C21  00                 	db	0
   898  016C22  00                 	db	0
   899  016C23  00                 	db	0
   900  016C24  00                 	db	0
   901  016C25  00                 	db	0
   902  016C26  00                 	db	0
   903  016C27  00                 	db	0
   904  016C28  00                 	db	0
   905  016C29  00                 	db	0
   906  016C2A  00                 	db	0
   907  016C2B  00                 	db	0
   908  016C2C  00                 	db	0
   909  016C2D  00                 	db	0
   910  016C2E  00                 	db	0
   911  016C2F  00                 	db	0
   912  016C30  00                 	db	0
   913  016C31  00                 	db	0
   914  016C32  00                 	db	0
   915  016C33  00                 	db	0
   916  016C34  00                 	db	0
   917  016C35  00                 	db	0
   918  016C36  00                 	db	0
   919  016C37  00                 	db	0
   920  016C38  00                 	db	0
   921  016C39  00                 	db	0
   922  016C3A  00                 	db	0
   923  016C3B  00                 	db	0
   924  016C3C  00                 	db	0
   925  016C3D  00                 	db	0
   926  016C3E  00                 	db	0
   927  016C3F  00                 	db	0
   928  016C40  00                 	db	0
   929  016C41  00                 	db	0
   930  016C42  00                 	db	0
   931  016C43  00                 	db	0
   932  016C44  00                 	db	0
   933  016C45  00                 	db	0
   934  016C46  00                 	db	0
   935  016C47  00                 	db	0
   936  016C48  00                 	db	0
   937  016C49  00                 	db	0
   938  016C4A  00                 	db	0
   939  016C4B  00                 	db	0
   940  016C4C  00                 	db	0
   941  016C4D  00                 	db	0
   942  016C4E  00                 	db	0
   943  016C4F  00                 	db	0
   944  016C50  00                 	db	0
   945  016C51  00                 	db	0
   946  016C52  00                 	db	0
   947  016C53  00                 	db	0
   948  016C54  00                 	db	0
   949  016C55  00                 	db	0
   950  016C56  00                 	db	0
   951  016C57  00                 	db	0
   952  016C58  00                 	db	0
   953  016C59  00                 	db	0
   954  016C5A  00                 	db	0
   955  016C5B  00                 	db	0
   956  016C5C  00                 	db	0
   957  016C5D  00                 	db	0
   958  016C5E  00                 	db	0
   959  016C5F  00                 	db	0
   960  016C60  00                 	db	0
   961  016C61  00                 	db	0
   962  016C62  00                 	db	0
   963  016C63  00                 	db	0
   964  016C64  00                 	db	0
   965  016C65  00                 	db	0
   966  016C66  00                 	db	0
   967  016C67  00                 	db	0
   968  016C68  00                 	db	0
   969  016C69  00                 	db	0
   970  016C6A  00                 	db	0
   971  016C6B  00                 	db	0
   972  016C6C  00                 	db	0
   973  016C6D  00                 	db	0
   974  016C6E  00                 	db	0
   975  016C6F  00                 	db	0
   976  016C70  00                 	db	0
   977  016C71  00                 	db	0
   978  016C72  00                 	db	0
   979  016C73  00                 	db	0
   980  016C74  00                 	db	0
   981  016C75  00                 	db	0
   982  016C76  00                 	db	0
   983  016C77  00                 	db	0
   984  016C78  00                 	db	0
   985  016C79  00                 	db	0
   986  016C7A  00                 	db	0
   987  016C7B  00                 	db	0
   988  016C7C  00                 	db	0
   989  016C7D  00                 	db	0
   990  016C7E  00                 	db	0
   991  016C7F  00                 	db	0
   992  016C80  00                 	db	0
   993  016C81  00                 	db	0
   994  016C82  00                 	db	0
   995  016C83  00                 	db	0
   996  016C84  00                 	db	0
   997  016C85  00                 	db	0
   998  016C86  00                 	db	0
   999  016C87  00                 	db	0
  1000  016C88  00                 	db	0
  1001  016C89  00                 	db	0
  1002  016C8A  00                 	db	0
  1003  016C8B  00                 	db	0
  1004  016C8C  00                 	db	0
  1005  016C8D  00                 	db	0
  1006  016C8E  00                 	db	0
  1007  016C8F  00                 	db	0
  1008  016C90  00                 	db	0
  1009  016C91  00                 	db	0
  1010  016C92  00                 	db	0
  1011  016C93  00                 	db	0
  1012  016C94  00                 	db	0
  1013  016C95  00                 	db	0
  1014  016C96  00                 	db	0
  1015  016C97  00                 	db	0
  1016  016C98  00                 	db	0
  1017  016C99  00                 	db	0
  1018  016C9A  00                 	db	0
  1019  016C9B  00                 	db	0
  1020  016C9C  00                 	db	0
  1021  016C9D  00                 	db	0
  1022  016C9E  00                 	db	0
  1023  016C9F  00                 	db	0
  1024  016CA0  00                 	db	0
  1025  016CA1  00                 	db	0
  1026  016CA2  00                 	db	0
  1027  016CA3  00                 	db	0
  1028  016CA4  00                 	db	0
  1029  016CA5  00                 	db	0
  1030  016CA6  00                 	db	0
  1031  016CA7  00                 	db	0
  1032  016CA8  00                 	db	0
  1033  016CA9  00                 	db	0
  1034  016CAA  00                 	db	0
  1035  016CAB  00                 	db	0
  1036  016CAC  00                 	db	0
  1037  016CAD  00                 	db	0
  1038  016CAE  00                 	db	0
  1039  016CAF  00                 	db	0
  1040  016CB0  00                 	db	0
  1041  016CB1  00                 	db	0
  1042  016CB2  00                 	db	0
  1043  016CB3  00                 	db	0
  1044  016CB4  00                 	db	0
  1045  016CB5  00                 	db	0
  1046  016CB6  00                 	db	0
  1047  016CB7  00                 	db	0
  1048  016CB8  00                 	db	0
  1049  016CB9  00                 	db	0
  1050  016CBA  00                 	db	0
  1051  016CBB  00                 	db	0
  1052  016CBC  00                 	db	0
  1053  016CBD  00                 	db	0
  1054  016CBE  00                 	db	0
  1055  016CBF  00                 	db	0
  1056  016CC0  00                 	db	0
  1057  016CC1  00                 	db	0
  1058  016CC2  00                 	db	0
  1059  016CC3  00                 	db	0
  1060  016CC4  00                 	db	0
  1061  016CC5  00                 	db	0
  1062  016CC6  00                 	db	0
  1063  016CC7  00                 	db	0
  1064  016CC8  00                 	db	0
  1065  016CC9  00                 	db	0
  1066  016CCA  00                 	db	0
  1067  016CCB  00                 	db	0
  1068  016CCC  00                 	db	0
  1069  016CCD  00                 	db	0
  1070  016CCE  00                 	db	0
  1071  016CCF  00                 	db	0
  1072  016CD0  00                 	db	0
  1073  016CD1  00                 	db	0
  1074  016CD2  00                 	db	0
  1075  016CD3  00                 	db	0
  1076  016CD4  00                 	db	0
  1077  016CD5  00                 	db	0
  1078  016CD6  00                 	db	0
  1079  016CD7  00                 	db	0
  1080  016CD8  00                 	db	0
  1081  016CD9  00                 	db	0
  1082  016CDA  00                 	db	0
  1083  016CDB  00                 	db	0
  1084  016CDC  00                 	db	0
  1085  016CDD  00                 	db	0
  1086  016CDE  00                 	db	0
  1087  016CDF  00                 	db	0
  1088  016CE0  00                 	db	0
  1089  016CE1  00                 	db	0
  1090  016CE2  00                 	db	0
  1091  016CE3  00                 	db	0
  1092  016CE4  00                 	db	0
  1093  016CE5  00                 	db	0
  1094  016CE6  00                 	db	0
  1095  016CE7  00                 	db	0
  1096  016CE8  00                 	db	0
  1097  016CE9  00                 	db	0
  1098  016CEA  00                 	db	0
  1099  016CEB  00                 	db	0
  1100  016CEC  00                 	db	0
  1101  016CED  00                 	db	0
  1102  016CEE  00                 	db	0
  1103  016CEF  00                 	db	0
  1104  016CF0  00                 	db	0
  1105  016CF1  00                 	db	0
  1106  016CF2  00                 	db	0
  1107  016CF3  00                 	db	0
  1108  016CF4  00                 	db	0
  1109  016CF5  00                 	db	0
  1110  016CF6  00                 	db	0
  1111  016CF7  00                 	db	0
  1112  016CF8  00                 	db	0
  1113  016CF9  00                 	db	0
  1114  016CFA  00                 	db	0
  1115  016CFB  00                 	db	0
  1116  016CFC  00                 	db	0
  1117  016CFD  00                 	db	0
  1118  016CFE  00                 	db	0
  1119  016CFF  00                 	db	0
  1120  016D00  00                 	db	0
  1121  016D01  00                 	db	0
  1122  016D02  00                 	db	0
  1123  016D03  00                 	db	0
  1124  016D04  00                 	db	0
  1125  016D05  00                 	db	0
  1126  016D06  00                 	db	0
  1127  016D07  00                 	db	0
  1128  016D08  00                 	db	0
  1129  016D09  00                 	db	0
  1130  016D0A  00                 	db	0
  1131  016D0B  00                 	db	0
  1132  016D0C  00                 	db	0
  1133  016D0D  00                 	db	0
  1134  016D0E  00                 	db	0
  1135  016D0F  00                 	db	0
  1136  016D10  00                 	db	0
  1137  016D11  00                 	db	0
  1138  016D12  00                 	db	0
  1139  016D13  00                 	db	0
  1140  016D14  00                 	db	0
  1141  016D15  00                 	db	0
  1142  016D16  00                 	db	0
  1143  016D17  00                 	db	0
  1144  016D18  00                 	db	0
  1145  016D19  00                 	db	0
  1146  016D1A  00                 	db	0
  1147  016D1B  00                 	db	0
  1148  016D1C  00                 	db	0
  1149  016D1D  00                 	db	0
  1150  016D1E  00                 	db	0
  1151  016D1F  00                 	db	0
  1152  016D20  00                 	db	0
  1153  016D21  00                 	db	0
  1154  016D22  00                 	db	0
  1155  016D23  00                 	db	0
  1156  016D24  00                 	db	0
  1157  016D25  00                 	db	0
  1158  016D26  00                 	db	0
  1159  016D27  00                 	db	0
  1160  016D28  00                 	db	0
  1161  016D29  00                 	db	0
  1162  016D2A  00                 	db	0
  1163  016D2B  00                 	db	0
  1164  016D2C  00                 	db	0
  1165  016D2D  00                 	db	0
  1166  016D2E  00                 	db	0
  1167  016D2F  00                 	db	0
  1168  016D30  00                 	db	0
  1169  016D31  00                 	db	0
  1170  016D32  00                 	db	0
  1171  016D33  00                 	db	0
  1172  016D34  00                 	db	0
  1173  016D35  00                 	db	0
  1174  016D36  00                 	db	0
  1175  016D37  00                 	db	0
  1176  016D38  00                 	db	0
  1177  016D39  00                 	db	0
  1178  016D3A  00                 	db	0
  1179  016D3B  00                 	db	0
  1180  016D3C  00                 	db	0
  1181  016D3D  00                 	db	0
  1182  016D3E  00                 	db	0
  1183  016D3F  00                 	db	0
  1184  016D40  00                 	db	0
  1185  016D41  00                 	db	0
  1186  016D42  00                 	db	0
  1187  016D43  00                 	db	0
  1188  016D44  00                 	db	0
  1189  016D45  00                 	db	0
  1190  016D46  00                 	db	0
  1191  016D47  00                 	db	0
  1192  016D48  00                 	db	0
  1193  016D49  00                 	db	0
  1194  016D4A  00                 	db	0
  1195  016D4B  00                 	db	0
  1196  016D4C  00                 	db	0
  1197  016D4D  00                 	db	0
  1198  016D4E  00                 	db	0
  1199  016D4F  00                 	db	0
  1200  016D50  00                 	db	0
  1201  016D51  00                 	db	0
  1202  016D52  00                 	db	0
  1203  016D53  00                 	db	0
  1204  016D54  00                 	db	0
  1205  016D55  00                 	db	0
  1206  016D56  00                 	db	0
  1207  016D57  00                 	db	0
  1208  016D58  00                 	db	0
  1209  016D59  00                 	db	0
  1210  016D5A  00                 	db	0
  1211  016D5B  00                 	db	0
  1212  016D5C  00                 	db	0
  1213  016D5D  00                 	db	0
  1214  016D5E  00                 	db	0
  1215  016D5F  00                 	db	0
  1216  016D60  00                 	db	0
  1217  016D61  00                 	db	0
  1218  016D62  00                 	db	0
  1219  016D63  00                 	db	0
  1220  016D64  00                 	db	0
  1221  016D65  00                 	db	0
  1222  016D66  00                 	db	0
  1223  016D67  00                 	db	0
  1224  016D68  00                 	db	0
  1225  016D69  00                 	db	0
  1226  016D6A  00                 	db	0
  1227  016D6B  00                 	db	0
  1228  016D6C  00                 	db	0
  1229  016D6D  00                 	db	0
  1230  016D6E  00                 	db	0
  1231  016D6F  00                 	db	0
  1232  016D70  00                 	db	0
  1233  016D71  00                 	db	0
  1234  016D72  00                 	db	0
  1235  016D73  00                 	db	0
  1236  016D74  00                 	db	0
  1237  016D75  00                 	db	0
  1238  016D76  00                 	db	0
  1239  016D77  00                 	db	0
  1240  016D78  00                 	db	0
  1241  016D79  00                 	db	0
  1242  016D7A  00                 	db	0
  1243  016D7B  00                 	db	0
  1244  016D7C  00                 	db	0
  1245  016D7D  00                 	db	0
  1246  016D7E  00                 	db	0
  1247  016D7F  00                 	db	0
  1248  016D80  00                 	db	0
  1249  016D81  00                 	db	0
  1250  016D82  00                 	db	0
  1251  016D83  00                 	db	0
  1252  016D84  00                 	db	0
  1253  016D85  00                 	db	0
  1254  016D86  00                 	db	0
  1255  016D87  00                 	db	0
  1256  016D88  00                 	db	0
  1257  016D89  00                 	db	0
  1258  016D8A  00                 	db	0
  1259  016D8B  00                 	db	0
  1260  016D8C  00                 	db	0
  1261  016D8D  00                 	db	0
  1262                           
  1263                           ;initializer for _C
  1264  016D8E  0000               	dw	0
  1265  016D90  0000               	dw	0
  1266  016D92  0000               	dw	0
  1267  016D94  0000               	dw	0
  1268  016D96  0000               	dw	0
  1269  016D98  0000               	dw	0
  1270  016D9A  0000               	dw	0
  1271  016D9C  0000               	dw	0
  1272  016D9E  0000               	dw	0
  1273  016DA0  0000               	dw	0
  1274  016DA2  0000               	dw	0
  1275  016DA4  0000               	dw	0
  1276  016DA6  0000               	dw	0
  1277  016DA8  0000               	dw	0
  1278  016DAA  0000               	dw	0
  1279  016DAC  0000               	dw	0
  1280  016DAE  0000               	dw	0
  1281  016DB0  0000               	dw	0
  1282  016DB2  0000               	dw	0
  1283  016DB4  0000               	dw	0
  1284  016DB6  0000               	dw	0
  1285  016DB8  0000               	dw	0
  1286  016DBA  0000               	dw	0
  1287  016DBC  0000               	dw	0
  1288  016DBE  0000               	dw	0
  1289  016DC0  0000               	dw	0
  1290  016DC2  0000               	dw	0
  1291  016DC4  0000               	dw	0
  1292  016DC6  0000               	dw	0
  1293  016DC8  0000               	dw	0
  1294  016DCA  0000               	dw	0
  1295  016DCC  0000               	dw	0
  1296  016DCE  0000               	dw	0
  1297  016DD0  0000               	dw	0
  1298  016DD2  0000               	dw	0
  1299  016DD4  0000               	dw	0
  1300  016DD6  0000               	dw	0
  1301  016DD8  0000               	dw	0
  1302  016DDA  0000               	dw	0
  1303  016DDC  0000               	dw	0
  1304  016DDE  0000               	dw	0
  1305  016DE0  0000               	dw	0
  1306  016DE2  0000               	dw	0
  1307  016DE4  0000               	dw	0
  1308  016DE6  0000               	dw	0
  1309  016DE8  0000               	dw	0
  1310  016DEA  0000               	dw	0
  1311  016DEC  0000               	dw	0
  1312  016DEE  0000               	dw	0
  1313  016DF0  0000               	dw	0
  1314  016DF2  0000               	dw	0
  1315  016DF4  0000               	dw	0
  1316  016DF6  0000               	dw	0
  1317  016DF8  0000               	dw	0
  1318  016DFA  0000               	dw	0
  1319  016DFC  0000               	dw	0
  1320  016DFE  0000               	dw	0
  1321  016E00  0000               	dw	0
  1322  016E02  0000               	dw	0
  1323  016E04  0000               	dw	0
  1324  016E06  0000               	dw	0
  1325  016E08  0000               	dw	0
  1326  016E0A  0000               	dw	0
  1327  016E0C  0000               	dw	0
  1328  016E0E  0000               	dw	0
  1329  016E10  0000               	dw	0
  1330  016E12  0000               	dw	0
  1331  016E14  0000               	dw	0
  1332  016E16  0000               	dw	0
  1333  016E18  0000               	dw	0
  1334  016E1A  0000               	dw	0
  1335  016E1C  42FA               	dw	17146
  1336  016E1E  0000               	dw	0
  1337  016E20  0000               	dw	0
  1338  016E22  0000               	dw	0
  1339  016E24  0000               	dw	0
  1340  016E26  0000               	dw	0
  1341  016E28  0000               	dw	0
  1342  016E2A  0000               	dw	0
  1343  016E2C  0000               	dw	0
  1344  016E2E  0000               	dw	0
  1345  016E30  0000               	dw	0
  1346  016E32  0000               	dw	0
  1347  016E34  0000               	dw	0
  1348  016E36  0000               	dw	0
  1349  016E38  0000               	dw	0
  1350  016E3A  0000               	dw	0
  1351  016E3C  0000               	dw	0
  1352  016E3E  0000               	dw	0
  1353  016E40  0000               	dw	0
  1354  016E42  0000               	dw	0
  1355  016E44  0000               	dw	0
  1356  016E46  00                 	db	0
  1357  016E47  01                 	db	1
  1358  016E48  0000               	dw	0
  1359  016E4A  3F80               	dw	16256
  1360  016E4C  0000               	dw	0
  1361  016E4E  3F80               	dw	16256
  1362  016E50  00                 	db	0
  1363  016E51  00                 	db	0
  1364  016E52  00                 	db	0
  1365  016E53  00                 	db	0
  1366  016E54  00                 	db	0
  1367  016E55  00                 	db	0
  1368  016E56  00                 	db	0
  1369  016E57  00                 	db	0
  1370  016E58  00                 	db	0
  1371  016E59  00                 	db	0
  1372  016E5A  00                 	db	0
  1373  016E5B  00                 	db	0
  1374  016E5C  00                 	db	0
  1375  016E5D  00                 	db	0
  1376  016E5E  00                 	db	0
  1377  016E5F  00                 	db	0
  1378  016E60  00                 	db	0
  1379  016E61  00                 	db	0
  1380  016E62  00                 	db	0
  1381  016E63  00                 	db	0
  1382  016E64  00                 	db	0
  1383  016E65  00                 	db	0
  1384  016E66  00                 	db	0
  1385  016E67  00                 	db	0
  1386  016E68  00                 	db	0
  1387  016E69  00                 	db	0
  1388  016E6A  00                 	db	0
  1389  016E6B  00                 	db	0
  1390  016E6C  00                 	db	0
  1391  016E6D  00                 	db	0
  1392  016E6E  00                 	db	0
  1393  016E6F  00                 	db	0
  1394  016E70  00                 	db	0
  1395  016E71  00                 	db	0
  1396  016E72  00                 	db	0
  1397  016E73  00                 	db	0
  1398  016E74  00                 	db	0
  1399  016E75  00                 	db	0
  1400  016E76  00                 	db	0
  1401  016E77  00                 	db	0
  1402  016E78  00                 	db	0
  1403  016E79  00                 	db	0
  1404  016E7A  00                 	db	0
  1405  016E7B  00                 	db	0
  1406  016E7C  00                 	db	0
  1407  016E7D  00                 	db	0
  1408  016E7E  00                 	db	0
  1409  016E7F  00                 	db	0
  1410  016E80  00                 	db	0
  1411  016E81  00                 	db	0
  1412  016E82  00                 	db	0
  1413  016E83  00                 	db	0
  1414  016E84  00                 	db	0
  1415  016E85  00                 	db	0
  1416  016E86  00                 	db	0
  1417  016E87  00                 	db	0
  1418  016E88  00                 	db	0
  1419  016E89  00                 	db	0
  1420  016E8A  00                 	db	0
  1421  016E8B  00                 	db	0
  1422  016E8C  00                 	db	0
  1423  016E8D  00                 	db	0
  1424  016E8E  00                 	db	0
  1425  016E8F  00                 	db	0
  1426  016E90  00                 	db	0
  1427  016E91  00                 	db	0
  1428  016E92  00                 	db	0
  1429  016E93  00                 	db	0
  1430  016E94  00                 	db	0
  1431  016E95  00                 	db	0
  1432  016E96  00                 	db	0
  1433  016E97  00                 	db	0
  1434  016E98  00                 	db	0
  1435  016E99  00                 	db	0
  1436  016E9A  00                 	db	0
  1437  016E9B  00                 	db	0
  1438  016E9C  0000               	dw	0
  1439  016E9E  0000               	dw	0
  1440  016EA0  0000               	dw	0
  1441  016EA2  0000               	dw	0
  1442  016EA4  0000               	dw	0
  1443  016EA6  0000               	dw	0
  1444  016EA8  0000               	dw	0
  1445  016EAA  0000               	dw	0
  1446  016EAC  0000               	dw	0
  1447  016EAE  0000               	dw	0
  1448  016EB0  01                 	db	1
  1449  016EB1  00                 	db	0
  1450  016EB2  00                 	db	0
  1451  016EB3  00                 	db	0
  1452  016EB4  00                 	db	0
  1453  016EB5  00                 	db	0
  1454  016EB6  00                 	db	0
  1455  016EB7  00                 	db	0
  1456  016EB8  00                 	db	0
  1457                           
  1458                           	psect	idataBANK0
  1459  01BE48                     __pidataBANK0:
  1460                           	opt callstack 0
  1461                           
  1462                           ;initializer for _R
  1463  01BE48  0000               	dw	0
  1464  01BE4A  0000               	dw	0
  1465  01BE4C  0000               	dw	0
  1466  01BE4E  0000               	dw	0
  1467  01BE50  0000               	dw	0
  1468  01BE52  0000               	dw	0
  1469  01BE54  0000               	dw	0
  1470  01BE56  0000               	dw	0
  1471  01BE58  0000               	dw	0
  1472  01BE5A  0000               	dw	0
  1473  01BE5C  0000               	dw	0
  1474  01BE5E  0000               	dw	0
  1475  01BE60  0000               	dw	0
  1476  01BE62  0000               	dw	0
  1477  01BE64  0000               	dw	0
  1478  01BE66  0000               	dw	0
  1479  01BE68  0000               	dw	0
  1480  01BE6A  0000               	dw	0
  1481  01BE6C  0000               	dw	0
  1482  01BE6E  0F62               	dw	3938
  1483  01BE70  0FA4               	dw	4004
  1484  01BE72  2D0E               	dw	11534
  1485  01BE74  3DB2               	dw	15794
  1486  01BE76  DD98               	dw	56728
  1487  01BE78  3D13               	dw	15635
  1488  01BE7A  00                 	db	0
  1489  01BE7B  0000               	dw	0
  1490  01BE7D  00                 	db	0
  1491                           
  1492                           	psect	idataBANK1
  1493  01A666                     __pidataBANK1:
  1494                           	opt callstack 0
  1495                           
  1496                           ;initializer for stoa@F1166
  1497  01A666  28                 	db	40
  1498  01A667  6E                 	db	110
  1499  01A668  75                 	db	117
  1500  01A669  6C                 	db	108
  1501  01A66A  6C                 	db	108
  1502  01A66B  29                 	db	41
  1503  01A66C  00                 	db	0
  1504                           
  1505                           ;initializer for _V
  1506  01A66D  00                 	db	0
  1507  01A66E  00                 	db	0
  1508  01A66F  00                 	db	0
  1509  01A670  00                 	db	0
  1510  01A671  00                 	db	0
  1511  01A672  00                 	db	0
  1512  01A673  00                 	db	0
  1513  01A674  00                 	db	0
  1514  01A675  00                 	db	0
  1515  01A676  00                 	db	0
  1516  01A677  00                 	db	0
  1517  01A678  00                 	db	0
  1518  01A679  00                 	db	0
  1519  01A67A  00                 	db	0
  1520  01A67B  00                 	db	0
  1521  01A67C  00                 	db	0
  1522  01A67D  00                 	db	0
  1523  01A67E  00                 	db	0
  1524  01A67F  00                 	db	0
  1525  01A680  00                 	db	0
  1526  01A681  00                 	db	0
  1527  01A682  00                 	db	0
  1528  01A683  00                 	db	0
  1529  01A684  00                 	db	0
  1530  01A685  00                 	db	0
  1531  01A686  00                 	db	0
  1532  01A687  00                 	db	0
  1533  01A688  00                 	db	0
  1534  01A689  00                 	db	0
  1535  01A68A  00                 	db	0
  1536  01A68B  00                 	db	0
  1537  01A68C  00                 	db	0
  1538  01A68D  00                 	db	0
  1539  01A68E  00                 	db	0
  1540  01A68F  00                 	db	0
  1541  01A690  00                 	db	0
  1542  01A691  00                 	db	0
  1543  01A692  00                 	db	0
  1544  01A693  00                 	db	0
  1545  01A694  00                 	db	0
  1546  01A695  00                 	db	0
  1547  01A696  00                 	db	0
  1548  01A697  00                 	db	0
  1549  01A698  00                 	db	0
  1550  01A699  00                 	db	0
  1551  01A69A  00                 	db	0
  1552  01A69B  00                 	db	0
  1553  01A69C  00                 	db	0
  1554  01A69D  00                 	db	0
  1555  01A69E  00                 	db	0
  1556  01A69F  00                 	db	0
  1557  01A6A0  00                 	db	0
  1558  01A6A1  00                 	db	0
  1559  01A6A2  00                 	db	0
  1560  01A6A3  00                 	db	0
  1561  01A6A4  00                 	db	0
  1562  01A6A5  00                 	db	0
  1563  01A6A6  00                 	db	0
  1564  01A6A7  00                 	db	0
  1565  01A6A8  00                 	db	0
  1566  01A6A9  00                 	db	0
  1567  01A6AA  00                 	db	0
  1568  01A6AB  00                 	db	0
  1569  01A6AC  00                 	db	0
  1570  01A6AD  00                 	db	0
  1571  01A6AE  00                 	db	0
  1572  01A6AF  00                 	db	0
  1573  01A6B0  00                 	db	0
  1574  01A6B1  00                 	db	0
  1575  01A6B2  00                 	db	0
  1576  01A6B3  00                 	db	0
  1577  01A6B4  00                 	db	0
  1578  01A6B5  00                 	db	0
  1579  01A6B6  00                 	db	0
  1580  01A6B7  00                 	db	0
  1581  01A6B8  00                 	db	0
  1582  01A6B9  00                 	db	0
  1583  01A6BA  00                 	db	0
  1584  01A6BB  00                 	db	0
  1585  01A6BC  00                 	db	0
  1586  01A6BD  00                 	db	0
  1587  01A6BE  00                 	db	0
  1588  01A6BF  00                 	db	0
  1589  01A6C0  00                 	db	0
  1590  01A6C1  00                 	db	0
  1591  01A6C2  00                 	db	0
  1592  01A6C3  00                 	db	0
  1593  01A6C4  00                 	db	0
  1594  01A6C5  00                 	db	0
  1595  01A6C6  00                 	db	0
  1596  01A6C7  00                 	db	0
  1597  01A6C8  00                 	db	0
  1598  01A6C9  00                 	db	0
  1599  01A6CA  00                 	db	0
  1600  01A6CB  00                 	db	0
  1601  01A6CC  00                 	db	0
  1602  01A6CD  00                 	db	0
  1603  01A6CE  00                 	db	0
  1604  01A6CF  00                 	db	0
  1605  01A6D0  00                 	db	0
  1606  01A6D1  00                 	db	0
  1607  01A6D2  00                 	db	0
  1608  01A6D3  00                 	db	0
  1609  01A6D4  00                 	db	0
  1610  01A6D5  00                 	db	0
  1611  01A6D6  00                 	db	0
  1612  01A6D7  00                 	db	0
  1613  01A6D8  00                 	db	0
  1614  01A6D9  00                 	db	0
  1615  01A6DA  00                 	db	0
  1616  01A6DB  00                 	db	0
  1617  01A6DC  00                 	db	0
  1618  01A6DD  00                 	db	0
  1619  01A6DE  00                 	db	0
  1620  01A6DF  00                 	db	0
  1621  01A6E0  00                 	db	0
  1622  01A6E1  00                 	db	0
  1623  01A6E2  00                 	db	0
  1624  01A6E3  00                 	db	0
  1625  01A6E4  00                 	db	0
  1626  01A6E5  00                 	db	0
  1627  01A6E6  00                 	db	0
  1628  01A6E7  00                 	db	0
  1629  01A6E8  00                 	db	0
  1630  01A6E9  00                 	db	0
  1631  01A6EA  00                 	db	0
  1632  01A6EB  00                 	db	0
  1633  01A6EC  00                 	db	0
  1634  01A6ED  00                 	db	0
  1635  01A6EE  0000               	dw	0
  1636  01A6F0  0000               	dw	0
  1637  01A6F2  0000               	dw	0
  1638  01A6F4  0000               	dw	0
  1639  01A6F6  00                 	db	0
  1640  01A6F7  00                 	db	0
  1641  01A6F8  00                 	db	0
  1642  01A6F9  00                 	db	0
  1643  01A6FA  00                 	db	0
  1644  01A6FB  00                 	db	0
  1645  01A6FC  0000               	dw	0
  1646  01A6FE  0000               	dw	0
  1647  01A700  0000               	dw	0
  1648  01A702  0000               	dw	0
  1649  01A704  0000               	dw	0
  1650  01A706  0000               	dw	0
  1651  01A708  00                 	db	0
  1652  01A709  00                 	db	0
  1653  01A70A  00                 	db	0
  1654  01A70B  00                 	db	0
  1655  01A70C  00                 	db	0
  1656  01A70D  00                 	db	0
  1657  01A70E  00                 	db	0
  1658  01A70F  00                 	db	0
  1659  01A710  00                 	db	0
  1660  01A711  00                 	db	0
  1661  01A712  00                 	db	0
  1662  01A713  0000               	dw	0
  1663  01A715  0000               	dw	0
  1664  01A717  2D                 	db	45
  1665  01A718  00                 	db	0
  1666  01A719  00                 	db	0
  1667  01A71A  00                 	db	0
  1668  01A71B  00                 	db	0
  1669  01A71C  00                 	db	0
  1670  01A71D  0000               	dw	0
  1671  01A71F  0000               	dw	0
  1672  01A721  0000               	dw	0
  1673  01A723  0000               	dw	0
  1674  01A725  0000               	dw	0
  1675  01A727  0000               	dw	0
  1676  01A729  0000               	dw	0
  1677  01A72B  0000               	dw	0
  1678                           
  1679                           ;initializer for _H
  1680  01A72D  00                 	db	0
  1681  01A72E  00                 	db	0
  1682  01A72F  01                 	db	1
  1683  01A730  00                 	db	0
  1684  01A731  01                 	db	1
  1685  01A732  00                 	db	0
  1686  01A733  01                 	db	1
  1687  01A734  00                 	db	0
  1688  01A735  00                 	db	0
  1689                           
  1690                           	psect	mediumconst
  1691  00F99E                     __pmediumconst:
  1692                           	opt callstack 0
  1693  00F99E  00                 	db	0
  1694  00F99F                     _BVSOC_TABLE:
  1695                           	opt callstack 0
  1696  00F99F  59D8               	dw	23000
  1697  00F9A1  0000               	dw	0
  1698  00F9A3  0005               	dw	5
  1699  00F9A5  0000               	dw	0
  1700  00F9A7  5B68               	dw	23400
  1701  00F9A9  0000               	dw	0
  1702  00F9AB  000A               	dw	10
  1703  00F9AD  0000               	dw	0
  1704  00F9AF  5C30               	dw	23600
  1705  00F9B1  0000               	dw	0
  1706  00F9B3  0014               	dw	20
  1707  00F9B5  0000               	dw	0
  1708  00F9B7  5E38               	dw	24120
  1709  00F9B9  0000               	dw	0
  1710  00F9BB  0019               	dw	25
  1711  00F9BD  0000               	dw	0
  1712  00F9BF  5E88               	dw	24200
  1713  00F9C1  0000               	dw	0
  1714  00F9C3  001E               	dw	30
  1715  00F9C5  0000               	dw	0
  1716  00F9C7  5F78               	dw	24440
  1717  00F9C9  0000               	dw	0
  1718  00F9CB  0028               	dw	40
  1719  00F9CD  0000               	dw	0
  1720  00F9CF  5FDC               	dw	24540
  1721  00F9D1  0000               	dw	0
  1722  00F9D3  002D               	dw	45
  1723  00F9D5  0000               	dw	0
  1724  00F9D7  6018               	dw	24600
  1725  00F9D9  0000               	dw	0
  1726  00F9DB  0032               	dw	50
  1727  00F9DD  0000               	dw	0
  1728  00F9DF  6046               	dw	24646
  1729  00F9E1  0000               	dw	0
  1730  00F9E3  0035               	dw	53
  1731  00F9E5  0000               	dw	0
  1732  00F9E7  607C               	dw	24700
  1733  00F9E9  0000               	dw	0
  1734  00F9EB  0037               	dw	55
  1735  00F9ED  0000               	dw	0
  1736  00F9EF  60AE               	dw	24750
  1737  00F9F1  0000               	dw	0
  1738  00F9F3  0039               	dw	57
  1739  00F9F5  0000               	dw	0
  1740  00F9F7  60E0               	dw	24800
  1741  00F9F9  0000               	dw	0
  1742  00F9FB  003C               	dw	60
  1743  00F9FD  0000               	dw	0
  1744  00F9FF  6112               	dw	24850
  1745  00FA01  0000               	dw	0
  1746  00FA03  003F               	dw	63
  1747  00FA05  0000               	dw	0
  1748  00FA07  615D               	dw	24925
  1749  00FA09  0000               	dw	0
  1750  00FA0B  0043               	dw	67
  1751  00FA0D  0000               	dw	0
  1752  00FA0F  61A8               	dw	25000
  1753  00FA11  0000               	dw	0
  1754  00FA13  0046               	dw	70
  1755  00FA15  0000               	dw	0
  1756  00FA17  61BC               	dw	25020
  1757  00FA19  0000               	dw	0
  1758  00FA1B  0048               	dw	72
  1759  00FA1D  0000               	dw	0
  1760  00FA1F  61D0               	dw	25040
  1761  00FA21  0000               	dw	0
  1762  00FA23  004B               	dw	75
  1763  00FA25  0000               	dw	0
  1764  00FA27  61DA               	dw	25050
  1765  00FA29  0000               	dw	0
  1766  00FA2B  0050               	dw	80
  1767  00FA2D  0000               	dw	0
  1768  00FA2F  61E4               	dw	25060
  1769  00FA31  0000               	dw	0
  1770  00FA33  0055               	dw	85
  1771  00FA35  0000               	dw	0
  1772  00FA37  61F8               	dw	25080
  1773  00FA39  0000               	dw	0
  1774  00FA3B  005A               	dw	90
  1775  00FA3D  0000               	dw	0
  1776  00FA3F  6208               	dw	25096
  1777  00FA41  0000               	dw	0
  1778  00FA43  005C               	dw	92
  1779  00FA45  0000               	dw	0
  1780  00FA47  6222               	dw	25122
  1781  00FA49  0000               	dw	0
  1782  00FA4B  005D               	dw	93
  1783  00FA4D  0000               	dw	0
  1784  00FA4F  6234               	dw	25140
  1785  00FA51  0000               	dw	0
  1786  00FA53  005F               	dw	95
  1787  00FA55  0000               	dw	0
  1788  00FA57  6248               	dw	25160
  1789  00FA59  0000               	dw	0
  1790  00FA5B  0061               	dw	97
  1791  00FA5D  0000               	dw	0
  1792  00FA5F  625C               	dw	25180
  1793  00FA61  0000               	dw	0
  1794  00FA63  0064               	dw	100
  1795  00FA65  0000               	dw	0
  1796  00FA67  6784               	dw	26500
  1797  00FA69  0000               	dw	0
  1798  00FA6B  0062               	dw	98
  1799  00FA6D  0000               	dw	0
  1800  00FA6F                     __end_of_BVSOC_TABLE:
  1801                           	opt callstack 0
  1802  00FA6F                     _T:
  1803                           	opt callstack 0
  1804  00FA6F  63                 	db	99
  1805  00FA70  6F                 	db	111
  1806  00FA71  6D                 	db	109
  1807  00FA72  6D                 	db	109
  1808  00FA73  61                 	db	97
  1809  00FA74  6E                 	db	110
  1810  00FA75  64                 	db	100
  1811  00FA76  73                 	db	115
  1812  00FA77  20                 	db	32
  1813  00FA78  31                 	db	49
  1814  00FA79  00                 	db	0
  1815  00FA7A  00                 	db	0
  1816  00FA7B  00                 	db	0
  1817  00FA7C  00                 	db	0
  1818  00FA7D  00                 	db	0
  1819  00FA7E  00                 	db	0
  1820  00FA7F  00                 	db	0
  1821  00FA80  00                 	db	0
  1822  00FA81  64                 	db	100
  1823  00FA82  69                 	db	105
  1824  00FA83  73                 	db	115
  1825  00FA84  70                 	db	112
  1826  00FA85  6C                 	db	108
  1827  00FA86  61                 	db	97
  1828  00FA87  79                 	db	121
  1829  00FA88  73                 	db	115
  1830  00FA89  20                 	db	32
  1831  00FA8A  31                 	db	49
  1832  00FA8B  00                 	db	0
  1833  00FA8C  00                 	db	0
  1834  00FA8D  00                 	db	0
  1835  00FA8E  00                 	db	0
  1836  00FA8F  00                 	db	0
  1837  00FA90  00                 	db	0
  1838  00FA91  00                 	db	0
  1839  00FA92  00                 	db	0
  1840  00FA93  63                 	db	99
  1841  00FA94  6F                 	db	111
  1842  00FA95  6D                 	db	109
  1843  00FA96  6D                 	db	109
  1844  00FA97  61                 	db	97
  1845  00FA98  6E                 	db	110
  1846  00FA99  64                 	db	100
  1847  00FA9A  73                 	db	115
  1848  00FA9B  20                 	db	32
  1849  00FA9C  32                 	db	50
  1850  00FA9D  00                 	db	0
  1851  00FA9E  00                 	db	0
  1852  00FA9F  00                 	db	0
  1853  00FAA0  00                 	db	0
  1854  00FAA1  00                 	db	0
  1855  00FAA2  00                 	db	0
  1856  00FAA3  00                 	db	0
  1857  00FAA4  00                 	db	0
  1858  00FAA5  64                 	db	100
  1859  00FAA6  69                 	db	105
  1860  00FAA7  73                 	db	115
  1861  00FAA8  70                 	db	112
  1862  00FAA9  6C                 	db	108
  1863  00FAAA  61                 	db	97
  1864  00FAAB  79                 	db	121
  1865  00FAAC  73                 	db	115
  1866  00FAAD  20                 	db	32
  1867  00FAAE  32                 	db	50
  1868  00FAAF  00                 	db	0
  1869  00FAB0  00                 	db	0
  1870  00FAB1  00                 	db	0
  1871  00FAB2  00                 	db	0
  1872  00FAB3  00                 	db	0
  1873  00FAB4  00                 	db	0
  1874  00FAB5  00                 	db	0
  1875  00FAB6  00                 	db	0
  1876  00FAB7  63                 	db	99
  1877  00FAB8  6F                 	db	111
  1878  00FAB9  6D                 	db	109
  1879  00FABA  6D                 	db	109
  1880  00FABB  61                 	db	97
  1881  00FABC  6E                 	db	110
  1882  00FABD  64                 	db	100
  1883  00FABE  73                 	db	115
  1884  00FABF  20                 	db	32
  1885  00FAC0  33                 	db	51
  1886  00FAC1  00                 	db	0
  1887  00FAC2  00                 	db	0
  1888  00FAC3  00                 	db	0
  1889  00FAC4  00                 	db	0
  1890  00FAC5  00                 	db	0
  1891  00FAC6  00                 	db	0
  1892  00FAC7  00                 	db	0
  1893  00FAC8  00                 	db	0
  1894  00FAC9  64                 	db	100
  1895  00FACA  69                 	db	105
  1896  00FACB  73                 	db	115
  1897  00FACC  70                 	db	112
  1898  00FACD  6C                 	db	108
  1899  00FACE  61                 	db	97
  1900  00FACF  79                 	db	121
  1901  00FAD0  73                 	db	115
  1902  00FAD1  20                 	db	32
  1903  00FAD2  33                 	db	51
  1904  00FAD3  00                 	db	0
  1905  00FAD4  00                 	db	0
  1906  00FAD5  00                 	db	0
  1907  00FAD6  00                 	db	0
  1908  00FAD7  00                 	db	0
  1909  00FAD8  00                 	db	0
  1910  00FAD9  00                 	db	0
  1911  00FADA  00                 	db	0
  1912  00FADB  63                 	db	99
  1913  00FADC  6F                 	db	111
  1914  00FADD  6D                 	db	109
  1915  00FADE  6D                 	db	109
  1916  00FADF  61                 	db	97
  1917  00FAE0  6E                 	db	110
  1918  00FAE1  64                 	db	100
  1919  00FAE2  73                 	db	115
  1920  00FAE3  20                 	db	32
  1921  00FAE4  34                 	db	52
  1922  00FAE5  00                 	db	0
  1923  00FAE6  00                 	db	0
  1924  00FAE7  00                 	db	0
  1925  00FAE8  00                 	db	0
  1926  00FAE9  00                 	db	0
  1927  00FAEA  00                 	db	0
  1928  00FAEB  00                 	db	0
  1929  00FAEC  00                 	db	0
  1930  00FAED  64                 	db	100
  1931  00FAEE  69                 	db	105
  1932  00FAEF  73                 	db	115
  1933  00FAF0  70                 	db	112
  1934  00FAF1  6C                 	db	108
  1935  00FAF2  61                 	db	97
  1936  00FAF3  79                 	db	121
  1937  00FAF4  73                 	db	115
  1938  00FAF5  20                 	db	32
  1939  00FAF6  34                 	db	52
  1940  00FAF7  00                 	db	0
  1941  00FAF8  00                 	db	0
  1942  00FAF9  00                 	db	0
  1943  00FAFA  00                 	db	0
  1944  00FAFB  00                 	db	0
  1945  00FAFC  00                 	db	0
  1946  00FAFD  00                 	db	0
  1947  00FAFE  00                 	db	0
  1948  00FAFF                     __end_of_T:
  1949                           	opt callstack 0
  1950  00FAFF                     _spin:
  1951                           	opt callstack 0
  1952  00FAFF  7C                 	db	124
  1953  00FB00  7C                 	db	124
  1954  00FB01  2F                 	db	47
  1955  00FB02  2F                 	db	47
  1956  00FB03  2D                 	db	45
  1957  00FB04  2D                 	db	45
  1958  00FB05  00                 	db	0
  1959  00FB06  00                 	db	0
  1960  00FB07  00                 	db	0
  1961  00FB08  00                 	db	0
  1962  00FB09  00                 	db	0
  1963  00FB0A  00                 	db	0
  1964  00FB0B  00                 	db	0
  1965  00FB0C  00                 	db	0
  1966  00FB0D  00                 	db	0
  1967  00FB0E  00                 	db	0
  1968  00FB0F  00                 	db	0
  1969  00FB10  00                 	db	0
  1970  00FB11  00                 	db	0
  1971  00FB12  00                 	db	0
  1972  00FB13  7C                 	db	124
  1973  00FB14  7C                 	db	124
  1974  00FB15  2F                 	db	47
  1975  00FB16  2F                 	db	47
  1976  00FB17  2D                 	db	45
  1977  00FB18  2D                 	db	45
  1978  00FB19  5C                 	db	92
  1979  00FB1A  5C                 	db	92
  1980  00FB1B  00                 	db	0
  1981  00FB1C  00                 	db	0
  1982  00FB1D  00                 	db	0
  1983  00FB1E  00                 	db	0
  1984  00FB1F  00                 	db	0
  1985  00FB20  00                 	db	0
  1986  00FB21  00                 	db	0
  1987  00FB22  00                 	db	0
  1988  00FB23  00                 	db	0
  1989  00FB24  00                 	db	0
  1990  00FB25  00                 	db	0
  1991  00FB26  00                 	db	0
  1992  00FB27  4F                 	db	79
  1993  00FB28  4F                 	db	79
  1994  00FB29  4F                 	db	79
  1995  00FB2A  4F                 	db	79
  1996  00FB2B  4F                 	db	79
  1997  00FB2C  4F                 	db	79
  1998  00FB2D  2D                 	db	45
  1999  00FB2E  2D                 	db	45
  2000  00FB2F  5F                 	db	95
  2001  00FB30  5F                 	db	95
  2002  00FB31  2D                 	db	45
  2003  00FB32  00                 	db	0
  2004  00FB33  00                 	db	0
  2005  00FB34  00                 	db	0
  2006  00FB35  00                 	db	0
  2007  00FB36  00                 	db	0
  2008  00FB37  00                 	db	0
  2009  00FB38  00                 	db	0
  2010  00FB39  00                 	db	0
  2011  00FB3A  00                 	db	0
  2012  00FB3B  76                 	db	118
  2013  00FB3C  76                 	db	118
  2014  00FB3D  3C                 	db	60
  2015  00FB3E  3C                 	db	60
  2016  00FB3F  5E                 	db	94
  2017  00FB40  5E                 	db	94
  2018  00FB41  3E                 	db	62
  2019  00FB42  3E                 	db	62
  2020  00FB43  00                 	db	0
  2021  00FB44  00                 	db	0
  2022  00FB45  00                 	db	0
  2023  00FB46  00                 	db	0
  2024  00FB47  00                 	db	0
  2025  00FB48  00                 	db	0
  2026  00FB49  00                 	db	0
  2027  00FB4A  00                 	db	0
  2028  00FB4B  00                 	db	0
  2029  00FB4C  00                 	db	0
  2030  00FB4D  00                 	db	0
  2031  00FB4E  00                 	db	0
  2032  00FB4F  2E                 	db	46
  2033  00FB50  2E                 	db	46
  2034  00FB51  2A                 	db	42
  2035  00FB52  2A                 	db	42
  2036  00FB53  78                 	db	120
  2037  00FB54  23                 	db	35
  2038  00FB55  78                 	db	120
  2039  00FB56  23                 	db	35
  2040  00FB57  58                 	db	88
  2041  00FB58  58                 	db	88
  2042  00FB59  7C                 	db	124
  2043  00FB5A  7C                 	db	124
  2044  00FB5B  2D                 	db	45
  2045  00FB5C  2D                 	db	45
  2046  00FB5D  00                 	db	0
  2047  00FB5E  00                 	db	0
  2048  00FB5F  00                 	db	0
  2049  00FB60  00                 	db	0
  2050  00FB61  00                 	db	0
  2051  00FB62  00                 	db	0
  2052  00FB63  2E                 	db	46
  2053  00FB64  2E                 	db	46
  2054  00FB65  6F                 	db	111
  2055  00FB66  6F                 	db	111
  2056  00FB67  4F                 	db	79
  2057  00FB68  4F                 	db	79
  2058  00FB69  6F                 	db	111
  2059  00FB6A  6F                 	db	111
  2060  00FB6B  00                 	db	0
  2061  00FB6C  00                 	db	0
  2062  00FB6D  00                 	db	0
  2063  00FB6E  00                 	db	0
  2064  00FB6F  00                 	db	0
  2065  00FB70  00                 	db	0
  2066  00FB71  00                 	db	0
  2067  00FB72  00                 	db	0
  2068  00FB73  00                 	db	0
  2069  00FB74  00                 	db	0
  2070  00FB75  00                 	db	0
  2071  00FB76  00                 	db	0
  2072  00FB77                     __end_of_spin:
  2073                           	opt callstack 0
  2074  00FB77  0000               	dw	0
  2075  00FB79  3F80               	dw	16256
  2076  00FB7B  0000               	dw	0
  2077  00FB7D  3FC0               	dw	16320
  2078  00FB7F                     __end_of_bp:
  2079                           	opt callstack 0
  2080  00FB7F  AA00               	dw	43520
  2081  00FB81  3FB8               	dw	16312
  2082  00FB83                     __end_of_ivln2_h:
  2083                           	opt callstack 0
  2084  00FB83  23C6               	dw	9158
  2085  00FB85  B8F6               	dw	47350
  2086  00FB87                     __end_of_cp_l:
  2087                           	opt callstack 0
  2088  00FB87  4000               	dw	16384
  2089  00FB89  3F76               	dw	16246
  2090  00FB8B                     __end_of_cp_h:
  2091                           	opt callstack 0
  2092  0000                     _IVTADL	set	14493
  2093  0000                     _IVTADH	set	14494
  2094  0000                     _IVTADU	set	14495
  2095  0000                     _PIR6bits	set	14758
  2096  0000                     _PIR4bits	set	14756
  2097  0000                     _PIE8bits	set	14744
  2098  0000                     _PIR8bits	set	14760
  2099  0000                     _SCANPR	set	14839
  2100  0000                     _DMA2PR	set	14836
  2101  0000                     _DMA1PR	set	14835
  2102  0000                     _MAINPR	set	14834
  2103  0000                     _ISRPR	set	14833
  2104  0000                     _PIE2bits	set	14738
  2105  0000                     _PIR2bits	set	14754
  2106  0000                     _PIE9bits	set	14745
  2107  0000                     _PIR9bits	set	14761
  2108  0000                     _PIE6bits	set	14742
  2109  0000                     _PIE3bits	set	14739
  2110  0000                     _PMD7	set	14791
  2111  0000                     _PMD6	set	14790
  2112  0000                     _PMD5	set	14789
  2113  0000                     _PMD4	set	14788
  2114  0000                     _PMD3	set	14787
  2115  0000                     _PMD2	set	14786
  2116  0000                     _PMD1	set	14785
  2117  0000                     _PMD0	set	14784
  2118  0000                     _OSCTUNE	set	14814
  2119  0000                     _OSCFRQ	set	14815
  2120  0000                     _OSCEN	set	14813
  2121  0000                     _OSCCON3	set	14811
  2122  0000                     _OSCCON1	set	14809
  2123  0000                     _IPR8bits	set	14728
  2124  0000                     _IPR9bits	set	14729
  2125  0000                     _IPR5bits	set	14725
  2126  0000                     _IPR1bits	set	14721
  2127  0000                     _IPR3bits	set	14723
  2128  0000                     _IPR6bits	set	14726
  2129  0000                     _IPR2bits	set	14722
  2130  0000                     _PIE5bits	set	14741
  2131  0000                     _PIE1bits	set	14737
  2132  0000                     _PIR5bits	set	14757
  2133  0000                     _PIR1bits	set	14753
  2134  0000                     _PLLR	set	118496
  2135  0000                     _SPI1SDIPPS	set	15071
  2136  0000                     _U1RXPPS	set	15077
  2137  0000                     _RC6PPS	set	14870
  2138  0000                     _RC5PPS	set	14869
  2139  0000                     _INT1PPS	set	15041
  2140  0000                     _RD1PPS	set	14873
  2141  0000                     _INT0PPS	set	15040
  2142  0000                     _RC3PPS	set	14867
  2143  0000                     _RB6PPS	set	14862
  2144  0000                     _SPI1SCKPPS	set	15070
  2145  0000                     _U2RXPPS	set	15080
  2146  0000                     _SLRCONF	set	14995
  2147  0000                     _SLRCONE	set	14979
  2148  0000                     _SLRCOND	set	14963
  2149  0000                     _SLRCONC	set	14947
  2150  0000                     _SLRCONB	set	14931
  2151  0000                     _SLRCONA	set	14915
  2152  0000                     _ODCOND	set	14962
  2153  0000                     _ODCONC	set	14946
  2154  0000                     _ODCONB	set	14930
  2155  0000                     _ODCONA	set	14914
  2156  0000                     _ODCONF	set	14994
  2157  0000                     _ODCONE	set	14978
  2158  0000                     _WPUC	set	14945
  2159  0000                     _WPUA	set	14913
  2160  0000                     _WPUB	set	14929
  2161  0000                     _WPUE	set	14977
  2162  0000                     _WPUF	set	14993
  2163  0000                     _WPUD	set	14961
  2164  0000                     _ANSELA	set	14912
  2165  0000                     _ANSELF	set	14992
  2166  0000                     _ANSELE	set	14976
  2167  0000                     _ANSELB	set	14928
  2168  0000                     _ANSELC	set	14944
  2169  0000                     _ANSELD	set	14960
  2170  0000                     _DMA2SSA	set	15321
  2171  0000                     _DMA1SSA	set	15353
  2172  0000                     _DMA2DSZ	set	15310
  2173  0000                     _DMA2SSZ	set	15319
  2174  0000                     _DMA2DSA	set	15312
  2175  0000                     _DMA1DSZ	set	15342
  2176  0000                     _DMA1SSZ	set	15351
  2177  0000                     _DMA1DSA	set	15344
  2178  0000                     _DMA2CON0bits	set	15324
  2179  0000                     _DMA2CON1bits	set	15325
  2180  0000                     _DMA1CON0bits	set	15356
  2181  0000                     _DMA1CON1bits	set	15357
  2182  0000                     _DMA2CON0	set	15324
  2183  0000                     _DMA2AIRQ	set	15326
  2184  0000                     _DMA2SIRQ	set	15327
  2185  0000                     _DMA2CON1	set	15325
  2186  0000                     _DMA1CON0	set	15356
  2187  0000                     _DMA1AIRQ	set	15358
  2188  0000                     _DMA1SIRQ	set	15359
  2189  0000                     _DMA1CON1	set	15357
  2190  0000                     _CLKRCON	set	15589
  2191  0000                     _CLKRCLK	set	15590
  2192  0000                     _SPI1CON1bits	set	15637
  2193  0000                     _SPI1STATUSbits	set	15639
  2194  0000                     _SPI1INTFbits	set	15642
  2195  0000                     _SPI1CON0bits	set	15636
  2196  0000                     _SPI1RXB	set	15632
  2197  0000                     _SPI1TXB	set	15633
  2198  0000                     _SPI1TCNTL	set	15634
  2199  0000                     _SPI1CON0	set	15636
  2200  0000                     _SPI1CLK	set	15644
  2201  0000                     _SPI1BAUD	set	15641
  2202  0000                     _SPI1CON2	set	15638
  2203  0000                     _SPI1CON1	set	15637
  2204  0000                     _U2RXB	set	15824
  2205  0000                     _U2TXB	set	15826
  2206  0000                     _U2ERRIE	set	15842
  2207  0000                     _U2ERRIR	set	15841
  2208  0000                     _U2UIR	set	15840
  2209  0000                     _U2FIFO	set	15839
  2210  0000                     _U2BRGH	set	15838
  2211  0000                     _U2BRGL	set	15837
  2212  0000                     _U2CON2	set	15836
  2213  0000                     _U2CON1	set	15835
  2214  0000                     _U2CON0	set	15834
  2215  0000                     _U2P3L	set	15832
  2216  0000                     _U2P2L	set	15830
  2217  0000                     _U2P1L	set	15828
  2218  0000                     _U1RXB	set	15848
  2219  0000                     _U1ERRIE	set	15866
  2220  0000                     _U1ERRIR	set	15865
  2221  0000                     _U1UIR	set	15864
  2222  0000                     _U1FIFO	set	15863
  2223  0000                     _U1BRGH	set	15862
  2224  0000                     _U1BRGL	set	15861
  2225  0000                     _U1CON2	set	15860
  2226  0000                     _U1CON1	set	15859
  2227  0000                     _U1CON0	set	15858
  2228  0000                     _U1P3H	set	15857
  2229  0000                     _U1P3L	set	15856
  2230  0000                     _U1P2H	set	15855
  2231  0000                     _U1P2L	set	15854
  2232  0000                     _U1P1H	set	15853
  2233  0000                     _U1P1L	set	15852
  2234  0000                     _FVRCON	set	16065
  2235  0000                     _ADFLTRL	set	16102
  2236  0000                     _ADFLTRH	set	16103
  2237  0000                     _ADCON0bits	set	16120
  2238  0000                     _ADCON0	set	16120
  2239  0000                     _ADCLK	set	16127
  2240  0000                     _ADACT	set	16126
  2241  0000                     _ADREF	set	16125
  2242  0000                     _ADSTAT	set	16124
  2243  0000                     _ADCON3	set	16123
  2244  0000                     _ADCON2	set	16122
  2245  0000                     _ADCON1	set	16121
  2246  0000                     _ADPREH	set	16119
  2247  0000                     _ADPREL	set	16118
  2248  0000                     _ADCAP	set	16117
  2249  0000                     _ADACQH	set	16116
  2250  0000                     _ADACQL	set	16115
  2251  0000                     _ADPCH	set	16113
  2252  0000                     _ADRPT	set	16108
  2253  0000                     _ADACCU	set	16106
  2254  0000                     _ADSTPTH	set	16101
  2255  0000                     _ADSTPTL	set	16100
  2256  0000                     _ADUTHH	set	16097
  2257  0000                     _ADUTHL	set	16096
  2258  0000                     _ADLTHH	set	16095
  2259  0000                     _ADLTHL	set	16094
  2260  0000                     _CCPTMRS1bits	set	16223
  2261  0000                     _PORTDbits	set	16333
  2262  0000                     _PORTFbits	set	16335
  2263  0000                     _LATFbits	set	16319
  2264  0000                     _LATCbits	set	16316
  2265  0000                     _LATDbits	set	16317
  2266  0000                     _PORTBbits	set	16331
  2267  0000                     _T3CONbits	set	16294
  2268  0000                     _T3CON	set	16294
  2269  0000                     _TMR3L	set	16292
  2270  0000                     _TMR3H	set	16293
  2271  0000                     _T3CLK	set	16297
  2272  0000                     _T3GATE	set	16296
  2273  0000                     _T3GCON	set	16295
  2274  0000                     _T2CON	set	16300
  2275  0000                     _T2TMR	set	16298
  2276  0000                     _T2PR	set	16299
  2277  0000                     _T2RST	set	16303
  2278  0000                     _T2HLT	set	16301
  2279  0000                     _T2CLKCON	set	16302
  2280  0000                     _PWM8DCL	set	16224
  2281  0000                     _PWM8DCH	set	16225
  2282  0000                     _PWM8CON	set	16226
  2283  0000                     _LATEbits	set	16318
  2284  0000                     _T5CONbits	set	16282
  2285  0000                     _T5CON	set	16282
  2286  0000                     _TMR5L	set	16280
  2287  0000                     _TMR5H	set	16281
  2288  0000                     _T5CLK	set	16285
  2289  0000                     _T5GATE	set	16284
  2290  0000                     _T5GCON	set	16283
  2291  0000                     _T6CON	set	16276
  2292  0000                     _T6TMR	set	16274
  2293  0000                     _T6PR	set	16275
  2294  0000                     _T6RST	set	16279
  2295  0000                     _T6HLT	set	16277
  2296  0000                     _T6CLKCON	set	16278
  2297  0000                     _TRISD	set	16325
  2298  0000                     _TRISC	set	16324
  2299  0000                     _TRISB	set	16323
  2300  0000                     _TRISA	set	16322
  2301  0000                     _TRISF	set	16327
  2302  0000                     _TRISE	set	16326
  2303  0000                     _LATC	set	16316
  2304  0000                     _LATB	set	16315
  2305  0000                     _LATF	set	16319
  2306  0000                     _LATA	set	16314
  2307  0000                     _LATD	set	16317
  2308  0000                     _LATE	set	16318
  2309  0000                     _IVTLOCKbits	set	16340
  2310  0000                     _IVTLOCK	set	16340
  2311  0000                     _INTCON0bits	set	16338
  2312  0000                     _GIE	set	130711
  2313  00FB8B                     STR_67:
  2314                           
  2315                           ; BSR set to: 57
  2316  00FB8B  20                 	db	32
  2317  00FB8C  25                 	db	37
  2318  00FB8D  63                 	db	99	;'c'
  2319  00FB8E  20                 	db	32
  2320  00FB8F  2C                 	db	44
  2321  00FB90  25                 	db	37
  2322  00FB91  6C                 	db	108	;'l'
  2323  00FB92  75                 	db	117	;'u'
  2324  00FB93  2C                 	db	44
  2325  00FB94  25                 	db	37
  2326  00FB95  34                 	db	52	;'4'
  2327  00FB96  2E                 	db	46
  2328  00FB97  34                 	db	52	;'4'
  2329  00FB98  66                 	db	102	;'f'
  2330  00FB99  2C                 	db	44
  2331  00FB9A  25                 	db	37
  2332  00FB9B  34                 	db	52	;'4'
  2333  00FB9C  2E                 	db	46
  2334  00FB9D  34                 	db	52	;'4'
  2335  00FB9E  66                 	db	102	;'f'
  2336  00FB9F  2C                 	db	44
  2337  00FBA0  25                 	db	37
  2338  00FBA1  34                 	db	52	;'4'
  2339  00FBA2  2E                 	db	46
  2340  00FBA3  34                 	db	52	;'4'
  2341  00FBA4  66                 	db	102	;'f'
  2342  00FBA5  2C                 	db	44
  2343  00FBA6  25                 	db	37
  2344  00FBA7  34                 	db	52	;'4'
  2345  00FBA8  2E                 	db	46
  2346  00FBA9  34                 	db	52	;'4'
  2347  00FBAA  66                 	db	102	;'f'
  2348  00FBAB  2C                 	db	44
  2349  00FBAC  25                 	db	37
  2350  00FBAD  34                 	db	52	;'4'
  2351  00FBAE  2E                 	db	46
  2352  00FBAF  34                 	db	52	;'4'
  2353  00FBB0  66                 	db	102	;'f'
  2354  00FBB1  2C                 	db	44
  2355  00FBB2  25                 	db	37
  2356  00FBB3  34                 	db	52	;'4'
  2357  00FBB4  2E                 	db	46
  2358  00FBB5  33                 	db	51	;'3'
  2359  00FBB6  66                 	db	102	;'f'
  2360  00FBB7  2C                 	db	44
  2361  00FBB8  25                 	db	37
  2362  00FBB9  34                 	db	52	;'4'
  2363  00FBBA  2E                 	db	46
  2364  00FBBB  33                 	db	51	;'3'
  2365  00FBBC  66                 	db	102	;'f'
  2366  00FBBD  2C                 	db	44
  2367  00FBBE  25                 	db	37
  2368  00FBBF  34                 	db	52	;'4'
  2369  00FBC0  2E                 	db	46
  2370  00FBC1  33                 	db	51	;'3'
  2371  00FBC2  66                 	db	102	;'f'
  2372  00FBC3  2C                 	db	44
  2373  00FBC4  25                 	db	37
  2374  00FBC5  34                 	db	52	;'4'
  2375  00FBC6  2E                 	db	46
  2376  00FBC7  33                 	db	51	;'3'
  2377  00FBC8  66                 	db	102	;'f'
  2378  00FBC9  2C                 	db	44
  2379  00FBCA  25                 	db	37
  2380  00FBCB  34                 	db	52	;'4'
  2381  00FBCC  2E                 	db	46
  2382  00FBCD  33                 	db	51	;'3'
  2383  00FBCE  66                 	db	102	;'f'
  2384  00FBCF  2C                 	db	44
  2385  00FBD0  25                 	db	37
  2386  00FBD1  34                 	db	52	;'4'
  2387  00FBD2  2E                 	db	46
  2388  00FBD3  33                 	db	51	;'3'
  2389  00FBD4  66                 	db	102	;'f'
  2390  00FBD5  2C                 	db	44
  2391  00FBD6  25                 	db	37
  2392  00FBD7  64                 	db	100	;'d'
  2393  00FBD8  2C                 	db	44
  2394  00FBD9  25                 	db	37
  2395  00FBDA  64                 	db	100	;'d'
  2396  00FBDB  2C                 	db	44
  2397  00FBDC  25                 	db	37
  2398  00FBDD  32                 	db	50	;'2'
  2399  00FBDE  2E                 	db	46
  2400  00FBDF  36                 	db	54	;'6'
  2401  00FBE0  66                 	db	102	;'f'
  2402  00FBE1  2C                 	db	44
  2403  00FBE2  25                 	db	37
  2404  00FBE3  34                 	db	52	;'4'
  2405  00FBE4  2E                 	db	46
  2406  00FBE5  33                 	db	51	;'3'
  2407  00FBE6  66                 	db	102	;'f'
  2408  00FBE7  2C                 	db	44
  2409  00FBE8  25                 	db	37
  2410  00FBE9  64                 	db	100	;'d'
  2411  00FBEA  2C                 	db	44
  2412  00FBEB  25                 	db	37
  2413  00FBEC  64                 	db	100	;'d'
  2414  00FBED  2C                 	db	44
  2415  00FBEE  25                 	db	37
  2416  00FBEF  6C                 	db	108	;'l'
  2417  00FBF0  75                 	db	117	;'u'
  2418  00FBF1  2C                 	db	44
  2419  00FBF2  25                 	db	37
  2420  00FBF3  6C                 	db	108	;'l'
  2421  00FBF4  75                 	db	117	;'u'
  2422  00FBF5  2C                 	db	44
  2423  00FBF6  25                 	db	37
  2424  00FBF7  34                 	db	52	;'4'
  2425  00FBF8  2E                 	db	46
  2426  00FBF9  33                 	db	51	;'3'
  2427  00FBFA  66                 	db	102	;'f'
  2428  00FBFB  2C                 	db	44
  2429  00FBFC  25                 	db	37
  2430  00FBFD  34                 	db	52	;'4'
  2431  00FBFE  2E                 	db	46
  2432  00FBFF  33                 	db	51	;'3'
  2433  00FC00  66                 	db	102	;'f'
  2434  00FC01  2C                 	db	44
  2435  00FC02  25                 	db	37
  2436  00FC03  34                 	db	52	;'4'
  2437  00FC04  2E                 	db	46
  2438  00FC05  33                 	db	51	;'3'
  2439  00FC06  66                 	db	102	;'f'
  2440  00FC07  0D                 	db	13
  2441  00FC08  0A                 	db	10
  2442  00FC09  00                 	db	0
  2443  00FC0A                     STR_36:
  2444                           
  2445                           ; BSR set to: 57
  2446  00FC0A  53                 	db	83	;'S'
  2447  00FC0B  25                 	db	37
  2448  00FC0C  63                 	db	99	;'c'
  2449  00FC0D  43                 	db	67	;'C'
  2450  00FC0E  20                 	db	32
  2451  00FC0F  25                 	db	37
  2452  00FC10  64                 	db	100	;'d'
  2453  00FC11  20                 	db	32
  2454  00FC12  52                 	db	82	;'R'
  2455  00FC13  55                 	db	85	;'U'
  2456  00FC14  4E                 	db	78	;'N'
  2457  00FC15  20                 	db	32
  2458  00FC16  25                 	db	37
  2459  00FC17  64                 	db	100	;'d'
  2460  00FC18  20                 	db	32
  2461  00FC19  56                 	db	86	;'V'
  2462  00FC1A  25                 	db	37
  2463  00FC1B  32                 	db	50	;'2'
  2464  00FC1C  2E                 	db	46
  2465  00FC1D  32                 	db	50	;'2'
  2466  00FC1E  66                 	db	102	;'f'
  2467  00FC1F  20                 	db	32
  2468  00FC20  20                 	db	32
  2469  00FC21  20                 	db	32
  2470  00FC22  20                 	db	32
  2471  00FC23  20                 	db	32
  2472  00FC24  20                 	db	32
  2473  00FC25  20                 	db	32
  2474  00FC26  00                 	db	0
  2475  00FC27                     STR_17:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FC27  52                 	db	82	;'R'
  2479  00FC28  31                 	db	49	;'1'
  2480  00FC29  20                 	db	32
  2481  00FC2A  25                 	db	37
  2482  00FC2B  32                 	db	50	;'2'
  2483  00FC2C  2E                 	db	46
  2484  00FC2D  33                 	db	51	;'3'
  2485  00FC2E  66                 	db	102	;'f'
  2486  00FC2F  20                 	db	32
  2487  00FC30  25                 	db	37
  2488  00FC31  33                 	db	51	;'3'
  2489  00FC32  2E                 	db	46
  2490  00FC33  34                 	db	52	;'4'
  2491  00FC34  66                 	db	102	;'f'
  2492  00FC35  20                 	db	32
  2493  00FC36  20                 	db	32
  2494  00FC37  20                 	db	32
  2495  00FC38  20                 	db	32
  2496  00FC39  20                 	db	32
  2497  00FC3A  20                 	db	32
  2498  00FC3B  20                 	db	32
  2499  00FC3C  20                 	db	32
  2500  00FC3D  20                 	db	32
  2501  00FC3E  20                 	db	32
  2502  00FC3F  20                 	db	32
  2503  00FC40  00                 	db	0
  2504  00FC41                     STR_18:
  2505                           
  2506                           ; BSR set to: 57
  2507  00FC41  52                 	db	82	;'R'
  2508  00FC42  32                 	db	50	;'2'
  2509  00FC43  20                 	db	32
  2510  00FC44  25                 	db	37
  2511  00FC45  32                 	db	50	;'2'
  2512  00FC46  2E                 	db	46
  2513  00FC47  33                 	db	51	;'3'
  2514  00FC48  66                 	db	102	;'f'
  2515  00FC49  20                 	db	32
  2516  00FC4A  25                 	db	37
  2517  00FC4B  33                 	db	51	;'3'
  2518  00FC4C  2E                 	db	46
  2519  00FC4D  34                 	db	52	;'4'
  2520  00FC4E  66                 	db	102	;'f'
  2521  00FC4F  20                 	db	32
  2522  00FC50  20                 	db	32
  2523  00FC51  20                 	db	32
  2524  00FC52  20                 	db	32
  2525  00FC53  20                 	db	32
  2526  00FC54  20                 	db	32
  2527  00FC55  20                 	db	32
  2528  00FC56  20                 	db	32
  2529  00FC57  20                 	db	32
  2530  00FC58  20                 	db	32
  2531  00FC59  20                 	db	32
  2532  00FC5A  00                 	db	0
  2533  00FC5B                     STR_9:
  2534                           
  2535                           ; BSR set to: 57
  2536  00FC5B  53                 	db	83	;'S'
  2537  00FC5C  20                 	db	32
  2538  00FC5D  53                 	db	83	;'S'
  2539  00FC5E  25                 	db	37
  2540  00FC5F  63                 	db	99	;'c'
  2541  00FC60  43                 	db	67	;'C'
  2542  00FC61  20                 	db	32
  2543  00FC62  25                 	db	37
  2544  00FC63  64                 	db	100	;'d'
  2545  00FC64  20                 	db	32
  2546  00FC65  25                 	db	37
  2547  00FC66  32                 	db	50	;'2'
  2548  00FC67  2E                 	db	46
  2549  00FC68  34                 	db	52	;'4'
  2550  00FC69  66                 	db	102	;'f'
  2551  00FC6A  20                 	db	32
  2552  00FC6B  20                 	db	32
  2553  00FC6C  20                 	db	32
  2554  00FC6D  20                 	db	32
  2555  00FC6E  20                 	db	32
  2556  00FC6F  20                 	db	32
  2557  00FC70  20                 	db	32
  2558  00FC71  20                 	db	32
  2559  00FC72  20                 	db	32
  2560  00FC73  20                 	db	32
  2561  00FC74  00                 	db	0
  2562  00FC75                     
  2563                           ; BSR set to: 57
  2564  00FC75  20                 	db	32
  2565  00FC76  4D                 	db	77	;'M'
  2566  00FC77  65                 	db	101	;'e'
  2567  00FC78  73                 	db	115	;'s'
  2568  00FC79  67                 	db	103	;'g'
  2569  00FC7A  20                 	db	32
  2570  00FC7B  25                 	db	37
  2571  00FC7C  64                 	db	100	;'d'
  2572  00FC7D  20                 	db	32
  2573  00FC7E  53                 	db	83	;'S'
  2574  00FC7F  74                 	db	116	;'t'
  2575  00FC80  61                 	db	97	;'a'
  2576  00FC81  63                 	db	99	;'c'
  2577  00FC82  6B                 	db	107	;'k'
  2578  00FC83  20                 	db	32
  2579  00FC84  25                 	db	37
  2580  00FC85  64                 	db	100	;'d'
  2581  00FC86  20                 	db	32
  2582  00FC87  20                 	db	32
  2583  00FC88  20                 	db	32
  2584  00FC89  20                 	db	32
  2585  00FC8A  20                 	db	32
  2586  00FC8B  20                 	db	32
  2587  00FC8C  00                 	db	0
  2588  00FC8D                     STR_37:
  2589                           
  2590                           ; BSR set to: 57
  2591  00FC8D  45                 	db	69	;'E'
  2592  00FC8E  53                 	db	83	;'S'
  2593  00FC8F  52                 	db	82	;'R'
  2594  00FC90  20                 	db	32
  2595  00FC91  20                 	db	32
  2596  00FC92  25                 	db	37
  2597  00FC93  32                 	db	50	;'2'
  2598  00FC94  2E                 	db	46
  2599  00FC95  36                 	db	54	;'6'
  2600  00FC96  66                 	db	102	;'f'
  2601  00FC97  20                 	db	32
  2602  00FC98  20                 	db	32
  2603  00FC99  20                 	db	32
  2604  00FC9A  20                 	db	32
  2605  00FC9B  20                 	db	32
  2606  00FC9C  20                 	db	32
  2607  00FC9D  20                 	db	32
  2608  00FC9E  20                 	db	32
  2609  00FC9F  20                 	db	32
  2610  00FCA0  20                 	db	32
  2611  00FCA1  20                 	db	32
  2612  00FCA2  20                 	db	32
  2613  00FCA3  00                 	db	0
  2614  00FCA4                     STR_34:
  2615                           
  2616                           ; BSR set to: 57
  2617  00FCA4  42                 	db	66	;'B'
  2618  00FCA5  41                 	db	65	;'A'
  2619  00FCA6  54                 	db	84	;'T'
  2620  00FCA7  54                 	db	84	;'T'
  2621  00FCA8  20                 	db	32
  2622  00FCA9  50                 	db	80	;'P'
  2623  00FCAA  57                 	db	87	;'W'
  2624  00FCAB  52                 	db	82	;'R'
  2625  00FCAC  20                 	db	32
  2626  00FCAD  25                 	db	37
  2627  00FCAE  33                 	db	51	;'3'
  2628  00FCAF  2E                 	db	46
  2629  00FCB0  32                 	db	50	;'2'
  2630  00FCB1  66                 	db	102	;'f'
  2631  00FCB2  20                 	db	32
  2632  00FCB3  20                 	db	32
  2633  00FCB4  20                 	db	32
  2634  00FCB5  20                 	db	32
  2635  00FCB6  20                 	db	32
  2636  00FCB7  20                 	db	32
  2637  00FCB8  20                 	db	32
  2638  00FCB9  20                 	db	32
  2639  00FCBA  00                 	db	0
  2640  00FCBB                     STR_38:
  2641                           
  2642                           ; BSR set to: 57
  2643  00FCBB  52                 	db	82	;'R'
  2644  00FCBC  31                 	db	49	;'1'
  2645  00FCBD  20                 	db	32
  2646  00FCBE  25                 	db	37
  2647  00FCBF  32                 	db	50	;'2'
  2648  00FCC0  2E                 	db	46
  2649  00FCC1  33                 	db	51	;'3'
  2650  00FCC2  66                 	db	102	;'f'
  2651  00FCC3  20                 	db	32
  2652  00FCC4  25                 	db	37
  2653  00FCC5  33                 	db	51	;'3'
  2654  00FCC6  2E                 	db	46
  2655  00FCC7  34                 	db	52	;'4'
  2656  00FCC8  66                 	db	102	;'f'
  2657  00FCC9  20                 	db	32
  2658  00FCCA  20                 	db	32
  2659  00FCCB  20                 	db	32
  2660  00FCCC  20                 	db	32
  2661  00FCCD  20                 	db	32
  2662  00FCCE  20                 	db	32
  2663  00FCCF  20                 	db	32
  2664  00FCD0  20                 	db	32
  2665  00FCD1  00                 	db	0
  2666  00FCD2                     STR_39:
  2667                           
  2668                           ; BSR set to: 57
  2669  00FCD2  52                 	db	82	;'R'
  2670  00FCD3  32                 	db	50	;'2'
  2671  00FCD4  20                 	db	32
  2672  00FCD5  25                 	db	37
  2673  00FCD6  32                 	db	50	;'2'
  2674  00FCD7  2E                 	db	46
  2675  00FCD8  33                 	db	51	;'3'
  2676  00FCD9  66                 	db	102	;'f'
  2677  00FCDA  20                 	db	32
  2678  00FCDB  25                 	db	37
  2679  00FCDC  33                 	db	51	;'3'
  2680  00FCDD  2E                 	db	46
  2681  00FCDE  34                 	db	52	;'4'
  2682  00FCDF  66                 	db	102	;'f'
  2683  00FCE0  20                 	db	32
  2684  00FCE1  20                 	db	32
  2685  00FCE2  20                 	db	32
  2686  00FCE3  20                 	db	32
  2687  00FCE4  20                 	db	32
  2688  00FCE5  20                 	db	32
  2689  00FCE6  20                 	db	32
  2690  00FCE7  20                 	db	32
  2691  00FCE8  00                 	db	0
  2692  00FCE9                     STR_35:
  2693                           
  2694                           ; BSR set to: 57
  2695  00FCE9  42                 	db	66	;'B'
  2696  00FCEA  41                 	db	65	;'A'
  2697  00FCEB  48                 	db	72	;'H'
  2698  00FCEC  20                 	db	32
  2699  00FCED  25                 	db	37
  2700  00FCEE  33                 	db	51	;'3'
  2701  00FCEF  2E                 	db	46
  2702  00FCF0  32                 	db	50	;'2'
  2703  00FCF1  66                 	db	102	;'f'
  2704  00FCF2  20                 	db	32
  2705  00FCF3  50                 	db	80	;'P'
  2706  00FCF4  25                 	db	37
  2707  00FCF5  33                 	db	51	;'3'
  2708  00FCF6  2E                 	db	46
  2709  00FCF7  32                 	db	50	;'2'
  2710  00FCF8  66                 	db	102	;'f'
  2711  00FCF9  20                 	db	32
  2712  00FCFA  20                 	db	32
  2713  00FCFB  20                 	db	32
  2714  00FCFC  20                 	db	32
  2715  00FCFD  20                 	db	32
  2716  00FCFE  20                 	db	32
  2717  00FCFF  00                 	db	0
  2718  00FD00                     STR_16:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FD00  45                 	db	69	;'E'
  2722  00FD01  53                 	db	83	;'S'
  2723  00FD02  52                 	db	82	;'R'
  2724  00FD03  20                 	db	32
  2725  00FD04  20                 	db	32
  2726  00FD05  25                 	db	37
  2727  00FD06  32                 	db	50	;'2'
  2728  00FD07  2E                 	db	46
  2729  00FD08  36                 	db	54	;'6'
  2730  00FD09  66                 	db	102	;'f'
  2731  00FD0A  20                 	db	32
  2732  00FD0B  20                 	db	32
  2733  00FD0C  20                 	db	32
  2734  00FD0D  20                 	db	32
  2735  00FD0E  20                 	db	32
  2736  00FD0F  20                 	db	32
  2737  00FD10  20                 	db	32
  2738  00FD11  20                 	db	32
  2739  00FD12  20                 	db	32
  2740  00FD13  20                 	db	32
  2741  00FD14  20                 	db	32
  2742  00FD15  00                 	db	0
  2743  00FD16                     STR_10:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FD16  53                 	db	83	;'S'
  2747  00FD17  74                 	db	116	;'t'
  2748  00FD18  61                 	db	97	;'a'
  2749  00FD19  74                 	db	116	;'t'
  2750  00FD1A  69                 	db	105	;'i'
  2751  00FD1B  63                 	db	99	;'c'
  2752  00FD1C  20                 	db	32
  2753  00FD1D  53                 	db	83	;'S'
  2754  00FD1E  4F                 	db	79	;'O'
  2755  00FD1F  43                 	db	67	;'C'
  2756  00FD20  20                 	db	32
  2757  00FD21  25                 	db	37
  2758  00FD22  64                 	db	100	;'d'
  2759  00FD23  20                 	db	32
  2760  00FD24  20                 	db	32
  2761  00FD25  20                 	db	32
  2762  00FD26  20                 	db	32
  2763  00FD27  20                 	db	32
  2764  00FD28  20                 	db	32
  2765  00FD29  20                 	db	32
  2766  00FD2A  20                 	db	32
  2767  00FD2B  00                 	db	0
  2768  00FD2C                     STR_31:
  2769                           
  2770                           ; BSR set to: 57
  2771  00FD2C  42                 	db	66	;'B'
  2772  00FD2D  41                 	db	65	;'A'
  2773  00FD2E  54                 	db	84	;'T'
  2774  00FD2F  20                 	db	32
  2775  00FD30  49                 	db	73	;'I'
  2776  00FD31  57                 	db	87	;'W'
  2777  00FD32  48                 	db	72	;'H'
  2778  00FD33  20                 	db	32
  2779  00FD34  25                 	db	37
  2780  00FD35  34                 	db	52	;'4'
  2781  00FD36  2E                 	db	46
  2782  00FD37  31                 	db	49	;'1'
  2783  00FD38  66                 	db	102	;'f'
  2784  00FD39  20                 	db	32
  2785  00FD3A  20                 	db	32
  2786  00FD3B  20                 	db	32
  2787  00FD3C  20                 	db	32
  2788  00FD3D  20                 	db	32
  2789  00FD3E  20                 	db	32
  2790  00FD3F  20                 	db	32
  2791  00FD40  20                 	db	32
  2792  00FD41  00                 	db	0
  2793  00FD42                     STR_32:
  2794                           
  2795                           ; BSR set to: 57
  2796  00FD42  42                 	db	66	;'B'
  2797  00FD43  41                 	db	65	;'A'
  2798  00FD44  54                 	db	84	;'T'
  2799  00FD45  20                 	db	32
  2800  00FD46  4F                 	db	79	;'O'
  2801  00FD47  57                 	db	87	;'W'
  2802  00FD48  48                 	db	72	;'H'
  2803  00FD49  20                 	db	32
  2804  00FD4A  25                 	db	37
  2805  00FD4B  34                 	db	52	;'4'
  2806  00FD4C  2E                 	db	46
  2807  00FD4D  31                 	db	49	;'1'
  2808  00FD4E  66                 	db	102	;'f'
  2809  00FD4F  20                 	db	32
  2810  00FD50  20                 	db	32
  2811  00FD51  20                 	db	32
  2812  00FD52  20                 	db	32
  2813  00FD53  20                 	db	32
  2814  00FD54  20                 	db	32
  2815  00FD55  20                 	db	32
  2816  00FD56  20                 	db	32
  2817  00FD57  00                 	db	0
  2818  00FD58                     STR_33:
  2819                           
  2820                           ; BSR set to: 57
  2821  00FD58  42                 	db	66	;'B'
  2822  00FD59  41                 	db	65	;'A'
  2823  00FD5A  54                 	db	84	;'T'
  2824  00FD5B  20                 	db	32
  2825  00FD5C  54                 	db	84	;'T'
  2826  00FD5D  57                 	db	87	;'W'
  2827  00FD5E  48                 	db	72	;'H'
  2828  00FD5F  20                 	db	32
  2829  00FD60  25                 	db	37
  2830  00FD61  34                 	db	52	;'4'
  2831  00FD62  2E                 	db	46
  2832  00FD63  31                 	db	49	;'1'
  2833  00FD64  66                 	db	102	;'f'
  2834  00FD65  20                 	db	32
  2835  00FD66  20                 	db	32
  2836  00FD67  20                 	db	32
  2837  00FD68  20                 	db	32
  2838  00FD69  20                 	db	32
  2839  00FD6A  20                 	db	32
  2840  00FD6B  20                 	db	32
  2841  00FD6C  20                 	db	32
  2842  00FD6D  00                 	db	0
  2843  00FD6E                     STR_27:
  2844                           
  2845                           ; BSR set to: 57
  2846  00FD6E  49                 	db	73	;'I'
  2847  00FD6F  4E                 	db	78	;'N'
  2848  00FD70  56                 	db	86	;'V'
  2849  00FD71  20                 	db	32
  2850  00FD72  20                 	db	32
  2851  00FD73  57                 	db	87	;'W'
  2852  00FD74  48                 	db	72	;'H'
  2853  00FD75  20                 	db	32
  2854  00FD76  25                 	db	37
  2855  00FD77  33                 	db	51	;'3'
  2856  00FD78  2E                 	db	46
  2857  00FD79  32                 	db	50	;'2'
  2858  00FD7A  66                 	db	102	;'f'
  2859  00FD7B  20                 	db	32
  2860  00FD7C  20                 	db	32
  2861  00FD7D  20                 	db	32
  2862  00FD7E  20                 	db	32
  2863  00FD7F  20                 	db	32
  2864  00FD80  20                 	db	32
  2865  00FD81  20                 	db	32
  2866  00FD82  20                 	db	32
  2867  00FD83  00                 	db	0
  2868  00FD84                     STR_26:
  2869                           
  2870                           ; BSR set to: 57
  2871  00FD84  4C                 	db	76	;'L'
  2872  00FD85  4F                 	db	79	;'O'
  2873  00FD86  41                 	db	65	;'A'
  2874  00FD87  44                 	db	68	;'D'
  2875  00FD88  20                 	db	32
  2876  00FD89  57                 	db	87	;'W'
  2877  00FD8A  48                 	db	72	;'H'
  2878  00FD8B  20                 	db	32
  2879  00FD8C  25                 	db	37
  2880  00FD8D  33                 	db	51	;'3'
  2881  00FD8E  2E                 	db	46
  2882  00FD8F  32                 	db	50	;'2'
  2883  00FD90  66                 	db	102	;'f'
  2884  00FD91  20                 	db	32
  2885  00FD92  20                 	db	32
  2886  00FD93  20                 	db	32
  2887  00FD94  20                 	db	32
  2888  00FD95  20                 	db	32
  2889  00FD96  20                 	db	32
  2890  00FD97  20                 	db	32
  2891  00FD98  20                 	db	32
  2892  00FD99  00                 	db	0
  2893  00FD9A                     STR_25:
  2894                           
  2895                           ; BSR set to: 57
  2896  00FD9A  50                 	db	80	;'P'
  2897  00FD9B  56                 	db	86	;'V'
  2898  00FD9C  20                 	db	32
  2899  00FD9D  25                 	db	37
  2900  00FD9E  63                 	db	99	;'c'
  2901  00FD9F  20                 	db	32
  2902  00FDA0  57                 	db	87	;'W'
  2903  00FDA1  48                 	db	72	;'H'
  2904  00FDA2  20                 	db	32
  2905  00FDA3  25                 	db	37
  2906  00FDA4  33                 	db	51	;'3'
  2907  00FDA5  2E                 	db	46
  2908  00FDA6  32                 	db	50	;'2'
  2909  00FDA7  66                 	db	102	;'f'
  2910  00FDA8  20                 	db	32
  2911  00FDA9  20                 	db	32
  2912  00FDAA  20                 	db	32
  2913  00FDAB  20                 	db	32
  2914  00FDAC  20                 	db	32
  2915  00FDAD  20                 	db	32
  2916  00FDAE  20                 	db	32
  2917  00FDAF  00                 	db	0
  2918  00FDB0                     STR_24:
  2919                           
  2920                           ; BSR set to: 57
  2921  00FDB0  49                 	db	73	;'I'
  2922  00FDB1  4E                 	db	78	;'N'
  2923  00FDB2  56                 	db	86	;'V'
  2924  00FDB3  20                 	db	32
  2925  00FDB4  20                 	db	32
  2926  00FDB5  50                 	db	80	;'P'
  2927  00FDB6  57                 	db	87	;'W'
  2928  00FDB7  52                 	db	82	;'R'
  2929  00FDB8  20                 	db	32
  2930  00FDB9  25                 	db	37
  2931  00FDBA  33                 	db	51	;'3'
  2932  00FDBB  2E                 	db	46
  2933  00FDBC  32                 	db	50	;'2'
  2934  00FDBD  66                 	db	102	;'f'
  2935  00FDBE  20                 	db	32
  2936  00FDBF  20                 	db	32
  2937  00FDC0  20                 	db	32
  2938  00FDC1  20                 	db	32
  2939  00FDC2  20                 	db	32
  2940  00FDC3  20                 	db	32
  2941  00FDC4  20                 	db	32
  2942  00FDC5  00                 	db	0
  2943  00FDC6                     STR_23:
  2944                           
  2945                           ; BSR set to: 57
  2946  00FDC6  4C                 	db	76	;'L'
  2947  00FDC7  4F                 	db	79	;'O'
  2948  00FDC8  41                 	db	65	;'A'
  2949  00FDC9  44                 	db	68	;'D'
  2950  00FDCA  20                 	db	32
  2951  00FDCB  50                 	db	80	;'P'
  2952  00FDCC  57                 	db	87	;'W'
  2953  00FDCD  52                 	db	82	;'R'
  2954  00FDCE  20                 	db	32
  2955  00FDCF  25                 	db	37
  2956  00FDD0  33                 	db	51	;'3'
  2957  00FDD1  2E                 	db	46
  2958  00FDD2  32                 	db	50	;'2'
  2959  00FDD3  66                 	db	102	;'f'
  2960  00FDD4  20                 	db	32
  2961  00FDD5  20                 	db	32
  2962  00FDD6  20                 	db	32
  2963  00FDD7  20                 	db	32
  2964  00FDD8  20                 	db	32
  2965  00FDD9  20                 	db	32
  2966  00FDDA  20                 	db	32
  2967  00FDDB  00                 	db	0
  2968  00FDDC                     STR_22:
  2969                           
  2970                           ; BSR set to: 57
  2971  00FDDC  50                 	db	80	;'P'
  2972  00FDDD  56                 	db	86	;'V'
  2973  00FDDE  20                 	db	32
  2974  00FDDF  25                 	db	37
  2975  00FDE0  63                 	db	99	;'c'
  2976  00FDE1  20                 	db	32
  2977  00FDE2  50                 	db	80	;'P'
  2978  00FDE3  57                 	db	87	;'W'
  2979  00FDE4  52                 	db	82	;'R'
  2980  00FDE5  20                 	db	32
  2981  00FDE6  25                 	db	37
  2982  00FDE7  33                 	db	51	;'3'
  2983  00FDE8  2E                 	db	46
  2984  00FDE9  32                 	db	50	;'2'
  2985  00FDEA  66                 	db	102	;'f'
  2986  00FDEB  20                 	db	32
  2987  00FDEC  20                 	db	32
  2988  00FDED  20                 	db	32
  2989  00FDEE  20                 	db	32
  2990  00FDEF  20                 	db	32
  2991  00FDF0  20                 	db	32
  2992  00FDF1  00                 	db	0
  2993  00FDF2                     STR_11:
  2994                           
  2995                           ; BSR set to: 57
  2996  00FDF2  42                 	db	66	;'B'
  2997  00FDF3  61                 	db	97	;'a'
  2998  00FDF4  74                 	db	116	;'t'
  2999  00FDF5  74                 	db	116	;'t'
  3000  00FDF6  65                 	db	101	;'e'
  3001  00FDF7  72                 	db	114	;'r'
  3002  00FDF8  79                 	db	121	;'y'
  3003  00FDF9  20                 	db	32
  3004  00FDFA  41                 	db	65	;'A'
  3005  00FDFB  68                 	db	104	;'h'
  3006  00FDFC  20                 	db	32
  3007  00FDFD  25                 	db	37
  3008  00FDFE  33                 	db	51	;'3'
  3009  00FDFF  2E                 	db	46
  3010  00FE00  32                 	db	50	;'2'
  3011  00FE01  66                 	db	102	;'f'
  3012  00FE02  20                 	db	32
  3013  00FE03  20                 	db	32
  3014  00FE04  20                 	db	32
  3015  00FE05  20                 	db	32
  3016  00FE06  20                 	db	32
  3017  00FE07  00                 	db	0
  3018  00FE08                     STR_29:
  3019                           
  3020                           ; BSR set to: 57
  3021  00FE08  42                 	db	66	;'B'
  3022  00FE09  56                 	db	86	;'V'
  3023  00FE0A  20                 	db	32
  3024  00FE0B  25                 	db	37
  3025  00FE0C  32                 	db	50	;'2'
  3026  00FE0D  2E                 	db	46
  3027  00FE0E  32                 	db	50	;'2'
  3028  00FE0F  66                 	db	102	;'f'
  3029  00FE10  20                 	db	32
  3030  00FE11  42                 	db	66	;'B'
  3031  00FE12  41                 	db	65	;'A'
  3032  00FE13  20                 	db	32
  3033  00FE14  25                 	db	37
  3034  00FE15  32                 	db	50	;'2'
  3035  00FE16  2E                 	db	46
  3036  00FE17  32                 	db	50	;'2'
  3037  00FE18  66                 	db	102	;'f'
  3038  00FE19  20                 	db	32
  3039  00FE1A  20                 	db	32
  3040  00FE1B  20                 	db	32
  3041  00FE1C  20                 	db	32
  3042  00FE1D  00                 	db	0
  3043  00FE1E                     STR_30:
  3044                           
  3045                           ; BSR set to: 57
  3046  00FE1E  43                 	db	67	;'C'
  3047  00FE1F  56                 	db	86	;'V'
  3048  00FE20  20                 	db	32
  3049  00FE21  25                 	db	37
  3050  00FE22  32                 	db	50	;'2'
  3051  00FE23  2E                 	db	46
  3052  00FE24  32                 	db	50	;'2'
  3053  00FE25  66                 	db	102	;'f'
  3054  00FE26  20                 	db	32
  3055  00FE27  4C                 	db	76	;'L'
  3056  00FE28  41                 	db	65	;'A'
  3057  00FE29  20                 	db	32
  3058  00FE2A  25                 	db	37
  3059  00FE2B  32                 	db	50	;'2'
  3060  00FE2C  2E                 	db	46
  3061  00FE2D  32                 	db	50	;'2'
  3062  00FE2E  66                 	db	102	;'f'
  3063  00FE2F  20                 	db	32
  3064  00FE30  20                 	db	32
  3065  00FE31  20                 	db	32
  3066  00FE32  20                 	db	32
  3067  00FE33  00                 	db	0
  3068  00FE34                     STR_28:
  3069                           
  3070                           ; BSR set to: 57
  3071  00FE34  50                 	db	80	;'P'
  3072  00FE35  56                 	db	86	;'V'
  3073  00FE36  20                 	db	32
  3074  00FE37  25                 	db	37
  3075  00FE38  32                 	db	50	;'2'
  3076  00FE39  2E                 	db	46
  3077  00FE3A  32                 	db	50	;'2'
  3078  00FE3B  66                 	db	102	;'f'
  3079  00FE3C  20                 	db	32
  3080  00FE3D  50                 	db	80	;'P'
  3081  00FE3E  41                 	db	65	;'A'
  3082  00FE3F  20                 	db	32
  3083  00FE40  25                 	db	37
  3084  00FE41  32                 	db	50	;'2'
  3085  00FE42  2E                 	db	46
  3086  00FE43  32                 	db	50	;'2'
  3087  00FE44  66                 	db	102	;'f'
  3088  00FE45  20                 	db	32
  3089  00FE46  20                 	db	32
  3090  00FE47  20                 	db	32
  3091  00FE48  20                 	db	32
  3092  00FE49  00                 	db	0
  3093  00FE4A                     STR_40:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FE4A  25                 	db	37
  3097  00FE4B  64                 	db	100	;'d'
  3098  00FE4C  20                 	db	32
  3099  00FE4D  25                 	db	37
  3100  00FE4E  32                 	db	50	;'2'
  3101  00FE4F  2E                 	db	46
  3102  00FE50  34                 	db	52	;'4'
  3103  00FE51  66                 	db	102	;'f'
  3104  00FE52  2C                 	db	44
  3105  00FE53  20                 	db	32
  3106  00FE54  25                 	db	37
  3107  00FE55  64                 	db	100	;'d'
  3108  00FE56  20                 	db	32
  3109  00FE57  20                 	db	32
  3110  00FE58  54                 	db	84	;'T'
  3111  00FE59  52                 	db	82	;'R'
  3112  00FE5A  49                 	db	73	;'I'
  3113  00FE5B  4D                 	db	77	;'M'
  3114  00FE5C  20                 	db	32
  3115  00FE5D  20                 	db	32
  3116  00FE5E  20                 	db	32
  3117  00FE5F  00                 	db	0
  3118  00FE60                     STR_5:
  3119                           
  3120                           ; BSR set to: 57
  3121  00FE60  20                 	db	32
  3122  00FE61  20                 	db	32
  3123  00FE62  20                 	db	32
  3124  00FE63  20                 	db	32
  3125  00FE64  20                 	db	32
  3126  00FE65  20                 	db	32
  3127  00FE66  20                 	db	32
  3128  00FE67  20                 	db	32
  3129  00FE68  20                 	db	32
  3130  00FE69  20                 	db	32
  3131  00FE6A  20                 	db	32
  3132  00FE6B  20                 	db	32
  3133  00FE6C  20                 	db	32
  3134  00FE6D  20                 	db	32
  3135  00FE6E  20                 	db	32
  3136  00FE6F  20                 	db	32
  3137  00FE70  20                 	db	32
  3138  00FE71  20                 	db	32
  3139  00FE72  20                 	db	32
  3140  00FE73  20                 	db	32
  3141  00FE74  00                 	db	0
  3142  00FE75                     STR_44:
  3143                           
  3144                           ; BSR set to: 57
  3145  00FE75  53                 	db	83	;'S'
  3146  00FE76  65                 	db	101	;'e'
  3147  00FE77  6E                 	db	110	;'n'
  3148  00FE78  73                 	db	115	;'s'
  3149  00FE79  6F                 	db	111	;'o'
  3150  00FE7A  72                 	db	114	;'r'
  3151  00FE7B  20                 	db	32
  3152  00FE7C  20                 	db	32
  3153  00FE7D  20                 	db	32
  3154  00FE7E  20                 	db	32
  3155  00FE7F  20                 	db	32
  3156  00FE80  20                 	db	32
  3157  00FE81  20                 	db	32
  3158  00FE82  20                 	db	32
  3159  00FE83  20                 	db	32
  3160  00FE84  20                 	db	32
  3161  00FE85  20                 	db	32
  3162  00FE86  20                 	db	32
  3163  00FE87  20                 	db	32
  3164  00FE88  20                 	db	32
  3165  00FE89  00                 	db	0
  3166  00FE8A                     STR_8:
  3167                           
  3168                           ; BSR set to: 57
  3169  00FE8A  42                 	db	66	;'B'
  3170  00FE8B  56                 	db	86	;'V'
  3171  00FE8C  20                 	db	32
  3172  00FE8D  25                 	db	37
  3173  00FE8E  32                 	db	50	;'2'
  3174  00FE8F  2E                 	db	46
  3175  00FE90  34                 	db	52	;'4'
  3176  00FE91  66                 	db	102	;'f'
  3177  00FE92  20                 	db	32
  3178  00FE93  20                 	db	32
  3179  00FE94  20                 	db	32
  3180  00FE95  20                 	db	32
  3181  00FE96  20                 	db	32
  3182  00FE97  20                 	db	32
  3183  00FE98  20                 	db	32
  3184  00FE99  20                 	db	32
  3185  00FE9A  20                 	db	32
  3186  00FE9B  20                 	db	32
  3187  00FE9C  20                 	db	32
  3188  00FE9D  20                 	db	32
  3189  00FE9E  00                 	db	0
  3190  00FE9F                     STR_4:
  3191                           
  3192                           ; BSR set to: 57
  3193  00FE9F  20                 	db	32
  3194  00FEA0  4E                 	db	78	;'N'
  3195  00FEA1  53                 	db	83	;'S'
  3196  00FEA2  41                 	db	65	;'A'
  3197  00FEA3  53                 	db	83	;'S'
  3198  00FEA4  50                 	db	80	;'P'
  3199  00FEA5  4F                 	db	79	;'O'
  3200  00FEA6  4F                 	db	79	;'O'
  3201  00FEA7  4B                 	db	75	;'K'
  3202  00FEA8  20                 	db	32
  3203  00FEA9  20                 	db	32
  3204  00FEAA  20                 	db	32
  3205  00FEAB  20                 	db	32
  3206  00FEAC  20                 	db	32
  3207  00FEAD  20                 	db	32
  3208  00FEAE  20                 	db	32
  3209  00FEAF  20                 	db	32
  3210  00FEB0  20                 	db	32
  3211  00FEB1  20                 	db	32
  3212  00FEB2  20                 	db	32
  3213  00FEB3  00                 	db	0
  3214  00FEB4                     STR_12:
  3215                           
  3216                           ; BSR set to: 57
  3217  00FEB4  42                 	db	66	;'B'
  3218  00FEB5  61                 	db	97	;'a'
  3219  00FEB6  74                 	db	116	;'t'
  3220  00FEB7  74                 	db	116	;'t'
  3221  00FEB8  65                 	db	101	;'e'
  3222  00FEB9  72                 	db	114	;'r'
  3223  00FEBA  79                 	db	121	;'y'
  3224  00FEBB  20                 	db	32
  3225  00FEBC  45                 	db	69	;'E'
  3226  00FEBD  53                 	db	83	;'S'
  3227  00FEBE  52                 	db	82	;'R'
  3228  00FEBF  20                 	db	32
  3229  00FEC0  20                 	db	32
  3230  00FEC1  20                 	db	32
  3231  00FEC2  20                 	db	32
  3232  00FEC3  20                 	db	32
  3233  00FEC4  20                 	db	32
  3234  00FEC5  20                 	db	32
  3235  00FEC6  20                 	db	32
  3236  00FEC7  20                 	db	32
  3237  00FEC8  00                 	db	0
  3238  00FEC9                     STR_13:
  3239                           
  3240                           ; BSR set to: 57
  3241  00FEC9  43                 	db	67	;'C'
  3242  00FECA  61                 	db	97	;'a'
  3243  00FECB  6C                 	db	108	;'l'
  3244  00FECC  63                 	db	99	;'c'
  3245  00FECD  75                 	db	117	;'u'
  3246  00FECE  6C                 	db	108	;'l'
  3247  00FECF  61                 	db	97	;'a'
  3248  00FED0  74                 	db	116	;'t'
  3249  00FED1  69                 	db	105	;'i'
  3250  00FED2  6F                 	db	111	;'o'
  3251  00FED3  6E                 	db	110	;'n'
  3252  00FED4  20                 	db	32
  3253  00FED5  20                 	db	32
  3254  00FED6  20                 	db	32
  3255  00FED7  20                 	db	32
  3256  00FED8  20                 	db	32
  3257  00FED9  20                 	db	32
  3258  00FEDA  20                 	db	32
  3259  00FEDB  20                 	db	32
  3260  00FEDC  20                 	db	32
  3261  00FEDD  00                 	db	0
  3262  00FEDE                     STR_45:
  3263                           
  3264                           ; BSR set to: 57
  3265  00FEDE  43                 	db	67	;'C'
  3266  00FEDF  61                 	db	97	;'a'
  3267  00FEE0  6C                 	db	108	;'l'
  3268  00FEE1  69                 	db	105	;'i'
  3269  00FEE2  62                 	db	98	;'b'
  3270  00FEE3  72                 	db	114	;'r'
  3271  00FEE4  61                 	db	97	;'a'
  3272  00FEE5  74                 	db	116	;'t'
  3273  00FEE6  69                 	db	105	;'i'
  3274  00FEE7  6F                 	db	111	;'o'
  3275  00FEE8  6E                 	db	110	;'n'
  3276  00FEE9  20                 	db	32
  3277  00FEEA  20                 	db	32
  3278  00FEEB  20                 	db	32
  3279  00FEEC  20                 	db	32
  3280  00FEED  20                 	db	32
  3281  00FEEE  20                 	db	32
  3282  00FEEF  20                 	db	32
  3283  00FEF0  20                 	db	32
  3284  00FEF1  20                 	db	32
  3285  00FEF2  00                 	db	0
  3286  00FEF3                     STR_2:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FEF3  20                 	db	32
  3290  00FEF4  56                 	db	86	;'V'
  3291  00FEF5  65                 	db	101	;'e'
  3292  00FEF6  72                 	db	114	;'r'
  3293  00FEF7  73                 	db	115	;'s'
  3294  00FEF8  69                 	db	105	;'i'
  3295  00FEF9  6F                 	db	111	;'o'
  3296  00FEFA  6E                 	db	110	;'n'
  3297  00FEFB  20                 	db	32
  3298  00FEFC  25                 	db	37
  3299  00FEFD  73                 	db	115	;'s'
  3300  00FEFE  20                 	db	32
  3301  00FEFF  20                 	db	32
  3302  00FF00  20                 	db	32
  3303  00FF01  20                 	db	32
  3304  00FF02  20                 	db	32
  3305  00FF03  20                 	db	32
  3306  00FF04  20                 	db	32
  3307  00FF05  20                 	db	32
  3308  00FF06  20                 	db	32
  3309  00FF07  00                 	db	0
  3310  00FF08                     STR_1:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FF08  20                 	db	32
  3314  00FF09  4D                 	db	77	;'M'
  3315  00FF0A  42                 	db	66	;'B'
  3316  00FF0B  4D                 	db	77	;'M'
  3317  00FF0C  43                 	db	67	;'C'
  3318  00FF0D  20                 	db	32
  3319  00FF0E  53                 	db	83	;'S'
  3320  00FF0F  4F                 	db	79	;'O'
  3321  00FF10  4C                 	db	76	;'L'
  3322  00FF11  41                 	db	65	;'A'
  3323  00FF12  52                 	db	82	;'R'
  3324  00FF13  4D                 	db	77	;'M'
  3325  00FF14  4F                 	db	79	;'O'
  3326  00FF15  4E                 	db	78	;'N'
  3327  00FF16  20                 	db	32
  3328  00FF17  20                 	db	32
  3329  00FF18  20                 	db	32
  3330  00FF19  20                 	db	32
  3331  00FF1A  20                 	db	32
  3332  00FF1B  20                 	db	32
  3333  00FF1C  00                 	db	0
  3334  00FF1D                     STR_43:
  3335                           
  3336                           ; BSR set to: 57
  3337  00FF1D  50                 	db	80	;'P'
  3338  00FF1E  56                 	db	86	;'V'
  3339  00FF1F  20                 	db	32
  3340  00FF20  61                 	db	97	;'a'
  3341  00FF21  6E                 	db	110	;'n'
  3342  00FF22  64                 	db	100	;'d'
  3343  00FF23  20                 	db	32
  3344  00FF24  42                 	db	66	;'B'
  3345  00FF25  41                 	db	65	;'A'
  3346  00FF26  54                 	db	84	;'T'
  3347  00FF27  54                 	db	84	;'T'
  3348  00FF28  45                 	db	69	;'E'
  3349  00FF29  52                 	db	82	;'R'
  3350  00FF2A  59                 	db	89	;'Y'
  3351  00FF2B  20                 	db	32
  3352  00FF2C  20                 	db	32
  3353  00FF2D  20                 	db	32
  3354  00FF2E  20                 	db	32
  3355  00FF2F  20                 	db	32
  3356  00FF30  20                 	db	32
  3357  00FF31  00                 	db	0
  3358  00FF32                     STR_15:
  3359                           
  3360                           ; BSR set to: 57
  3361  00FF32  43                 	db	67	;'C'
  3362  00FF33  68                 	db	104	;'h'
  3363  00FF34  65                 	db	101	;'e'
  3364  00FF35  63                 	db	99	;'c'
  3365  00FF36  6B                 	db	107	;'k'
  3366  00FF37  69                 	db	105	;'i'
  3367  00FF38  6E                 	db	110	;'n'
  3368  00FF39  67                 	db	103	;'g'
  3369  00FF3A  20                 	db	32
  3370  00FF3B  25                 	db	37
  3371  00FF3C  63                 	db	99	;'c'
  3372  00FF3D  20                 	db	32
  3373  00FF3E  25                 	db	37
  3374  00FF3F  63                 	db	99	;'c'
  3375  00FF40  20                 	db	32
  3376  00FF41  20                 	db	32
  3377  00FF42  20                 	db	32
  3378  00FF43  20                 	db	32
  3379  00FF44  20                 	db	32
  3380  00FF45  20                 	db	32
  3381  00FF46  00                 	db	0
  3382  00FF47                     STR_14:
  3383                           
  3384                           ; BSR set to: 57
  3385  00FF47  43                 	db	67	;'C'
  3386  00FF48  68                 	db	104	;'h'
  3387  00FF49  65                 	db	101	;'e'
  3388  00FF4A  63                 	db	99	;'c'
  3389  00FF4B  6B                 	db	107	;'k'
  3390  00FF4C  20                 	db	32
  3391  00FF4D  33                 	db	51	;'3'
  3392  00FF4E  30                 	db	48	;'0'
  3393  00FF4F  20                 	db	32
  3394  00FF50  73                 	db	115	;'s'
  3395  00FF51  65                 	db	101	;'e'
  3396  00FF52  63                 	db	99	;'c'
  3397  00FF53  6F                 	db	111	;'o'
  3398  00FF54  6E                 	db	110	;'n'
  3399  00FF55  64                 	db	100	;'d'
  3400  00FF56  73                 	db	115	;'s'
  3401  00FF57  20                 	db	32
  3402  00FF58  20                 	db	32
  3403  00FF59  20                 	db	32
  3404  00FF5A  20                 	db	32
  3405  00FF5B  00                 	db	0
  3406  00FF5C                     STR_50:
  3407                           
  3408                           ; BSR set to: 57
  3409  00FF5C  48                 	db	72	;'H'
  3410  00FF5D  45                 	db	69	;'E'
  3411  00FF5E  4C                 	db	76	;'L'
  3412  00FF5F  50                 	db	80	;'P'
  3413  00FF60  20                 	db	32
  3414  00FF61  25                 	db	37
  3415  00FF62  73                 	db	115	;'s'
  3416  00FF63  20                 	db	32
  3417  00FF64  20                 	db	32
  3418  00FF65  20                 	db	32
  3419  00FF66  20                 	db	32
  3420  00FF67  20                 	db	32
  3421  00FF68  20                 	db	32
  3422  00FF69  20                 	db	32
  3423  00FF6A  20                 	db	32
  3424  00FF6B  20                 	db	32
  3425  00FF6C  20                 	db	32
  3426  00FF6D  20                 	db	32
  3427  00FF6E  00                 	db	0
  3428  00FF6F                     
  3429                           ; BSR set to: 57
  3430  00FF6F  44                 	db	68	;'D'
  3431  00FF70  49                 	db	73	;'I'
  3432  00FF71  53                 	db	83	;'S'
  3433  00FF72  50                 	db	80	;'P'
  3434  00FF73  4C                 	db	76	;'L'
  3435  00FF74  41                 	db	65	;'A'
  3436  00FF75  59                 	db	89	;'Y'
  3437  00FF76  20                 	db	32
  3438  00FF77  25                 	db	37
  3439  00FF78  73                 	db	115	;'s'
  3440  00FF79  20                 	db	32
  3441  00FF7A  20                 	db	32
  3442  00FF7B  20                 	db	32
  3443  00FF7C  20                 	db	32
  3444  00FF7D  20                 	db	32
  3445  00FF7E  20                 	db	32
  3446  00FF7F  20                 	db	32
  3447  00FF80  20                 	db	32
  3448  00FF81  00                 	db	0
  3449  00FF82                     
  3450                           ; BSR set to: 57
  3451  00FF82  25                 	db	37
  3452  00FF83  64                 	db	100	;'d'
  3453  00FF84  20                 	db	32
  3454  00FF85  25                 	db	37
  3455  00FF86  32                 	db	50	;'2'
  3456  00FF87  2E                 	db	46
  3457  00FF88  34                 	db	52	;'4'
  3458  00FF89  66                 	db	102	;'f'
  3459  00FF8A  2C                 	db	44
  3460  00FF8B  20                 	db	32
  3461  00FF8C  25                 	db	37
  3462  00FF8D  64                 	db	100	;'d'
  3463  00FF8E  20                 	db	32
  3464  00FF8F  20                 	db	32
  3465  00FF90  20                 	db	32
  3466  00FF91  23                 	db	35
  3467  00FF92  00                 	db	0
  3468  00FF93                     STR_19:
  3469                           
  3470                           ; BSR set to: 57
  3471  00FF93  25                 	db	37
  3472  00FF94  64                 	db	100	;'d'
  3473  00FF95  20                 	db	32
  3474  00FF96  25                 	db	37
  3475  00FF97  32                 	db	50	;'2'
  3476  00FF98  2E                 	db	46
  3477  00FF99  34                 	db	52	;'4'
  3478  00FF9A  66                 	db	102	;'f'
  3479  00FF9B  20                 	db	32
  3480  00FF9C  20                 	db	32
  3481  00FF9D  20                 	db	32
  3482  00FF9E  25                 	db	37
  3483  00FF9F  64                 	db	100	;'d'
  3484  00FFA0  20                 	db	32
  3485  00FFA1  20                 	db	32
  3486  00FFA2  00                 	db	0
  3487  00FFA3                     STR_54:
  3488                           
  3489                           ; BSR set to: 57
  3490  00FFA3  76                 	db	118	;'v'
  3491  00FFA4  74                 	db	116	;'t'
  3492  00FFA5  65                 	db	101	;'e'
  3493  00FFA6  72                 	db	114	;'r'
  3494  00FFA7  6D                 	db	109	;'m'
  3495  00FFA8  20                 	db	32
  3496  00FFA9  25                 	db	37
  3497  00FFAA  78                 	db	120	;'x'
  3498  00FFAB  3A                 	db	58	;':'
  3499  00FFAC  25                 	db	37
  3500  00FFAD  78                 	db	120	;'x'
  3501  00FFAE  20                 	db	32
  3502  00FFAF  20                 	db	32
  3503  00FFB0  20                 	db	32
  3504  00FFB1  00                 	db	0
  3505  00FFB2                     STR_48:
  3506                           
  3507                           ; BSR set to: 57
  3508  00FFB2  46                 	db	70	;'F'
  3509  00FFB3  65                 	db	101	;'e'
  3510  00FFB4  62                 	db	98	;'b'
  3511  00FFB5  20                 	db	32
  3512  00FFB6  20                 	db	32
  3513  00FFB7  36                 	db	54	;'6'
  3514  00FFB8  20                 	db	32
  3515  00FFB9  32                 	db	50	;'2'
  3516  00FFBA  30                 	db	48	;'0'
  3517  00FFBB  32                 	db	50	;'2'
  3518  00FFBC  30                 	db	48	;'0'
  3519  00FFBD  00                 	db	0
  3520  00FFBE                     STR_52:
  3521                           
  3522                           ; BSR set to: 57
  3523  00FFBE  25                 	db	37
  3524  00FFBF  73                 	db	115	;'s'
  3525  00FFC0  20                 	db	32
  3526  00FFC1  20                 	db	32
  3527  00FFC2  20                 	db	32
  3528  00FFC3  20                 	db	32
  3529  00FFC4  20                 	db	32
  3530  00FFC5  20                 	db	32
  3531  00FFC6  20                 	db	32
  3532  00FFC7  00                 	db	0
  3533  00FFC8                     STR_49:
  3534                           
  3535                           ; BSR set to: 57
  3536  00FFC8  31                 	db	49	;'1'
  3537  00FFC9  31                 	db	49	;'1'
  3538  00FFCA  3A                 	db	58	;':'
  3539  00FFCB  34                 	db	52	;'4'
  3540  00FFCC  39                 	db	57	;'9'
  3541  00FFCD  3A                 	db	58	;':'
  3542  00FFCE  34                 	db	52	;'4'
  3543  00FFCF  37                 	db	55	;'7'
  3544  00FFD0  00                 	db	0
  3545  00FFD1                     STR_3:
  3546                           
  3547                           ; BSR set to: 57
  3548  00FFD1  31                 	db	49	;'1'
  3549  00FFD2  2E                 	db	46
  3550  00FFD3  31                 	db	49	;'1'
  3551  00FFD4  37                 	db	55	;'7'
  3552  00FFD5  00                 	db	0
  3553  00FFD6                     STR_68:
  3554                           
  3555                           ; BSR set to: 57
  3556  00FFD6  49                 	db	73	;'I'
  3557  00FFD7  4E                 	db	78	;'N'
  3558  00FFD8  46                 	db	70	;'F'
  3559  00FFD9  00                 	db	0
  3560  00FFDA                     STR_72:
  3561                           
  3562                           ; BSR set to: 57
  3563  00FFDA  4E                 	db	78	;'N'
  3564  00FFDB  41                 	db	65	;'A'
  3565  00FFDC  4E                 	db	78	;'N'
  3566  00FFDD  00                 	db	0
  3567  00FFDE                     STR_69:
  3568                           
  3569                           ; BSR set to: 57
  3570  00FFDE  69                 	db	105	;'i'
  3571  00FFDF  6E                 	db	110	;'n'
  3572  00FFE0  66                 	db	102	;'f'
  3573  00FFE1  00                 	db	0
  3574  00FFE2                     STR_73:
  3575                           
  3576                           ; BSR set to: 57
  3577  00FFE2  6E                 	db	110	;'n'
  3578  00FFE3  61                 	db	97	;'a'
  3579  00FFE4  6E                 	db	110	;'n'
  3580  00FFE5  00                 	db	0
  3581  00FFE6                     STR_99:
  3582                           
  3583                           ; BSR set to: 57
  3584  00FFE6  6C                 	db	108	;'l'
  3585  00FFE7  58                 	db	88	;'X'
  3586  00FFE8  00                 	db	0
  3587  00FFE9                     STR_76:
  3588                           
  3589                           ; BSR set to: 57
  3590  00FFE9  6C                 	db	108	;'l'
  3591  00FFEA  64                 	db	100	;'d'
  3592  00FFEB  00                 	db	0
  3593  00FFEC                     STR_85:
  3594                           
  3595                           ; BSR set to: 57
  3596  00FFEC  6C                 	db	108	;'l'
  3597  00FFED  66                 	db	102	;'f'
  3598  00FFEE  00                 	db	0
  3599  00FFEF                     STR_80:
  3600                           
  3601                           ; BSR set to: 57
  3602  00FFEF  6C                 	db	108	;'l'
  3603  00FFF0  69                 	db	105	;'i'
  3604  00FFF1  00                 	db	0
  3605  00FFF2                     STR_90:
  3606                           
  3607                           ; BSR set to: 57
  3608  00FFF2  6C                 	db	108	;'l'
  3609  00FFF3  75                 	db	117	;'u'
  3610  00FFF4  00                 	db	0
  3611  00FFF5                     STR_95:
  3612                           
  3613                           ; BSR set to: 57
  3614  00FFF5  6C                 	db	108	;'l'
  3615  00FFF6  78                 	db	120	;'x'
  3616  00FFF7  00                 	db	0
  3617  00FFF8                     STR_47:
  3618                           
  3619                           ; BSR set to: 57
  3620  00FFF8  25                 	db	37
  3621  00FFF9  63                 	db	99	;'c'
  3622  00FFFA  00                 	db	0
  3623  00FFFB                     STR_46:
  3624                           
  3625                           ; BSR set to: 57
  3626  00FFFB  25                 	db	37
  3627  00FFFC  73                 	db	115	;'s'
  3628  00FFFD  00                 	db	0
  3629  0000                     
  3630                           ; #config settings
  3631  00FFFE  00                 	db	0	; dummy byte at the end
  3632  0000                     
  3633                           	psect	cinit
  3634  01A4B2                     __pcinit:
  3635                           	opt callstack 0
  3636  01A4B2                     start_initialization:
  3637                           	opt callstack 0
  3638  01A4B2                     __initialization:
  3639                           	opt callstack 0
  3640                           
  3641                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3642                           ; load TBLPTR registers with __pidataBIGRAM
  3643  01A4B2  0E8E               	movlw	low __pidataBIGRAM
  3644  01A4B4  6EF6               	movwf	tblptrl,c
  3645  01A4B6  0E6B               	movlw	high __pidataBIGRAM
  3646  01A4B8  6EF7               	movwf	tblptrh,c
  3647  01A4BA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3648  01A4BC  6EF8               	movwf	tblptru,c
  3649  01A4BE  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3650  01A4C2  EE20 F32B          	lfsr	2,811
  3651  01A4C6                     copy_data0:
  3652  01A4C6  0009               	tblrd		*+
  3653  01A4C8  006F FFD7 FFEE     	movff	tablat,postinc0
  3654  01A4CE  50DD               	movf	postdec2,w,c
  3655  01A4D0  50D9               	movf	fsr2l,w,c
  3656  01A4D2  E1F9               	bnz	copy_data0
  3657  01A4D4  50DA               	movf	fsr2h,w,c
  3658  01A4D6  E1F7               	bnz	copy_data0
  3659                           
  3660                           ; Initialize objects allocated to BANK1 (208 bytes)
  3661                           ; load TBLPTR registers with __pidataBANK1
  3662  01A4D8  0E66               	movlw	low __pidataBANK1
  3663  01A4DA  6EF6               	movwf	tblptrl,c
  3664  01A4DC  0EA6               	movlw	high __pidataBANK1
  3665  01A4DE  6EF7               	movwf	tblptrh,c
  3666  01A4E0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3667  01A4E2  6EF8               	movwf	tblptru,c
  3668  01A4E4  EE00  F100         	lfsr	0,__pdataBANK1
  3669  01A4E8  EE20 F0D0          	lfsr	2,208
  3670  01A4EC                     copy_data1:
  3671  01A4EC  0009               	tblrd		*+
  3672  01A4EE  006F FFD7 FFEE     	movff	tablat,postinc0
  3673  01A4F4  50DD               	movf	postdec2,w,c
  3674  01A4F6  50D9               	movf	fsr2l,w,c
  3675  01A4F8  E1F9               	bnz	copy_data1
  3676                           
  3677                           ; Initialize objects allocated to BANK0 (54 bytes)
  3678                           ; load TBLPTR registers with __pidataBANK0
  3679  01A4FA  0E48               	movlw	low __pidataBANK0
  3680  01A4FC  6EF6               	movwf	tblptrl,c
  3681  01A4FE  0EBE               	movlw	high __pidataBANK0
  3682  01A500  6EF7               	movwf	tblptrh,c
  3683  01A502  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3684  01A504  6EF8               	movwf	tblptru,c
  3685  01A506  EE00  F0AF         	lfsr	0,__pdataBANK0
  3686  01A50A  EE20 F036          	lfsr	2,54
  3687  01A50E                     copy_data2:
  3688  01A50E  0009               	tblrd		*+
  3689  01A510  006F FFD7 FFEE     	movff	tablat,postinc0
  3690  01A516  50DD               	movf	postdec2,w,c
  3691  01A518  50D9               	movf	fsr2l,w,c
  3692  01A51A  E1F9               	bnz	copy_data2
  3693                           
  3694                           ; Clear objects allocated to BIGRAM (482 bytes)
  3695  01A51C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3696  01A520  EE20 F1E2          	lfsr	2,482
  3697  01A524                     clear_0:
  3698  01A524  6AEE               	clrf	postinc0,c
  3699  01A526  50DD               	movf	postdec2,w,c
  3700  01A528  50D9               	movf	fsr2l,w,c
  3701  01A52A  E1FC               	bnz	clear_0
  3702  01A52C  50DA               	movf	fsr2h,w,c
  3703  01A52E  E1FA               	bnz	clear_0
  3704                           
  3705                           ; Clear objects allocated to BANK4 (255 bytes)
  3706  01A530  EE01  F000         	lfsr	0,__pbssBANK4
  3707  01A534  EE20 F0FF          	lfsr	2,255
  3708  01A538                     clear_1:
  3709  01A538  6AEE               	clrf	postinc0,c
  3710  01A53A  50DD               	movf	postdec2,w,c
  3711  01A53C  50D9               	movf	fsr2l,w,c
  3712  01A53E  E1FC               	bnz	clear_1
  3713  01A540  50DA               	movf	fsr2h,w,c
  3714  01A542  E1FA               	bnz	clear_1
  3715                           
  3716                           ; Clear objects allocated to BANK3 (198 bytes)
  3717  01A544  EE00  F300         	lfsr	0,__pbssBANK3
  3718  01A548  0EC6               	movlw	198
  3719  01A54A                     clear_2:
  3720  01A54A  6AEE               	clrf	postinc0,c
  3721  01A54C  06E8               	decf	wreg,f,c
  3722  01A54E  E1FD               	bnz	clear_2
  3723                           
  3724                           ; Clear objects allocated to BANK2 (231 bytes)
  3725  01A550  EE00  F200         	lfsr	0,__pbssBANK2
  3726  01A554  0EE7               	movlw	231
  3727  01A556                     clear_3:
  3728  01A556  6AEE               	clrf	postinc0,c
  3729  01A558  06E8               	decf	wreg,f,c
  3730  01A55A  E1FD               	bnz	clear_3
  3731                           
  3732                           ; Clear objects allocated to BANK1 (46 bytes)
  3733  01A55C  EE00  F1D0         	lfsr	0,__pbssBANK1
  3734  01A560  0E2E               	movlw	46
  3735  01A562                     clear_4:
  3736  01A562  6AEE               	clrf	postinc0,c
  3737  01A564  06E8               	decf	wreg,f,c
  3738  01A566  E1FD               	bnz	clear_4
  3739                           
  3740                           ; Clear objects allocated to BANK0 (79 bytes)
  3741  01A568  EE00  F060         	lfsr	0,__pbssBANK0
  3742  01A56C  0E4F               	movlw	79
  3743  01A56E                     clear_5:
  3744  01A56E  6AEE               	clrf	postinc0,c
  3745  01A570  06E8               	decf	wreg,f,c
  3746  01A572  E1FD               	bnz	clear_5
  3747                           
  3748                           ; Clear objects allocated to COMRAM (14 bytes)
  3749  01A574  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3750  01A578  0E0E               	movlw	14
  3751  01A57A                     clear_6:
  3752  01A57A  6AEE               	clrf	postinc0,c
  3753  01A57C  06E8               	decf	wreg,f,c
  3754  01A57E  E1FD               	bnz	clear_6
  3755                           
  3756                           ;
  3757                           ; Setup IVTBASE
  3758                           ;
  3759  01A580  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3760  01A582  6ED5               	movwf	213,c
  3761  01A584  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3762  01A586  6ED6               	movwf	214,c
  3763  01A588  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3764  01A58A  6ED7               	movwf	215,c
  3765  01A58C                     end_of_initialization:
  3766                           	opt callstack 0
  3767  01A58C                     __end_of__initialization:
  3768                           	opt callstack 0
  3769  01A58C  0100               	movlb	0
  3770  01A58E  EF22  F089         	goto	_main	;jump to C main() function
  3771                           
  3772                           	psect	bssCOMRAM
  3773  00003A                     __pbssCOMRAM:
  3774                           	opt callstack 0
  3775  00003A                     _width:
  3776                           	opt callstack 0
  3777  00003A                     	ds	2
  3778  00003C                     _prec:
  3779                           	opt callstack 0
  3780  00003C                     	ds	2
  3781  00003E                     _flags:
  3782                           	opt callstack 0
  3783  00003E                     	ds	2
  3784  000040                     calc_bsoc@log_update_wait:
  3785                           	opt callstack 0
  3786  000040                     	ds	1
  3787  000041                     check_day_time@day_delay:
  3788                           	opt callstack 0
  3789  000041                     	ds	1
  3790  000042                     dac_spi_control@S0:
  3791                           	opt callstack 0
  3792  000042                     	ds	1
  3793  000043                     dac_spi_control@init:
  3794                           	opt callstack 0
  3795  000043                     	ds	1
  3796  000044                     _uart2RxHead:
  3797                           	opt callstack 0
  3798  000044                     	ds	1
  3799  000045                     _uart2TxBufferRemaining:
  3800                           	opt callstack 0
  3801  000045                     	ds	1
  3802  000046                     _uart2TxTail:
  3803                           	opt callstack 0
  3804  000046                     	ds	1
  3805  000047                     _uart1RxHead:
  3806                           	opt callstack 0
  3807  000047                     	ds	1
  3808                           
  3809                           	psect	bssBANK0
  3810  000060                     __pbssBANK0:
  3811                           	opt callstack 0
  3812  000060                     fabsf@F463:
  3813                           	opt callstack 0
  3814  000060                     	ds	4
  3815  000064                     ___fpclassifyf@F463:
  3816                           	opt callstack 0
  3817  000064                     	ds	4
  3818  000068                     calc_ror_data@bcror:
  3819                           	opt callstack 0
  3820  000068                     	ds	4
  3821  00006C                     calc_ror_data@bvror:
  3822                           	opt callstack 0
  3823  00006C                     	ds	4
  3824  000070                     calc_model_data@bcror:
  3825                           	opt callstack 0
  3826  000070                     	ds	4
  3827  000074                     calc_model_data@bvror:
  3828                           	opt callstack 0
  3829  000074                     	ds	4
  3830  000078                     wdtdelay@dcount:
  3831                           	opt callstack 0
  3832  000078                     	ds	4
  3833  00007C                     _TMR3_InterruptHandler:
  3834                           	opt callstack 0
  3835  00007C                     	ds	3
  3836  00007F                     _TMR5_InterruptHandler:
  3837                           	opt callstack 0
  3838  00007F                     	ds	3
  3839  000082                     _TMR6_InterruptHandler:
  3840                           	opt callstack 0
  3841  000082                     	ds	3
  3842  000085                     _ADCC_ADTI_InterruptHandler:
  3843                           	opt callstack 0
  3844  000085                     	ds	3
  3845  000088                     _ADCC_ADI_InterruptHandler:
  3846                           	opt callstack 0
  3847  000088                     	ds	3
  3848  00008B                     _UART1_RxInterruptHandler:
  3849                           	opt callstack 0
  3850  00008B                     	ds	3
  3851  00008E                     _UART2_TxInterruptHandler:
  3852                           	opt callstack 0
  3853  00008E                     	ds	3
  3854  000091                     _UART2_RxInterruptHandler:
  3855                           	opt callstack 0
  3856  000091                     	ds	3
  3857  000094                     _INT1_InterruptHandler:
  3858                           	opt callstack 0
  3859  000094                     	ds	3
  3860  000097                     _INT0_InterruptHandler:
  3861                           	opt callstack 0
  3862  000097                     	ds	3
  3863  00009A                     _nout:
  3864                           	opt callstack 0
  3865  00009A                     	ds	2
  3866  00009C                     TMR3_ISR@CountCallBack:
  3867                           	opt callstack 0
  3868  00009C                     	ds	2
  3869  00009E                     _timer3ReloadVal:
  3870                           	opt callstack 0
  3871  00009E                     	ds	2
  3872  0000A0                     TMR5_ISR@CountCallBack:
  3873                           	opt callstack 0
  3874  0000A0                     	ds	2
  3875  0000A2                     _timer5ReloadVal:
  3876                           	opt callstack 0
  3877  0000A2                     	ds	2
  3878  0000A4                     esr_check@esr_state:
  3879                           	opt callstack 0
  3880  0000A4                     	ds	1
  3881  0000A5                     dac_spi_control@SB:
  3882                           	opt callstack 0
  3883  0000A5                     	ds	1
  3884  0000A6                     dac_spi_control@SC:
  3885                           	opt callstack 0
  3886  0000A6                     	ds	1
  3887  0000A7                     dac_spi_control@S2:
  3888                           	opt callstack 0
  3889  0000A7                     	ds	1
  3890  0000A8                     dac_spi_control@S1:
  3891                           	opt callstack 0
  3892  0000A8                     	ds	1
  3893  0000A9                     _mode_sw:
  3894                           	opt callstack 0
  3895  0000A9                     	ds	1
  3896  0000AA                     _uart2RxCount:
  3897                           	opt callstack 0
  3898  0000AA                     	ds	1
  3899  0000AB                     _uart2RxTail:
  3900                           	opt callstack 0
  3901  0000AB                     	ds	1
  3902  0000AC                     _uart2TxHead:
  3903                           	opt callstack 0
  3904  0000AC                     	ds	1
  3905  0000AD                     _uart1RxCount:
  3906                           	opt callstack 0
  3907  0000AD                     	ds	1
  3908  0000AE                     _uart1RxTail:
  3909                           	opt callstack 0
  3910  0000AE                     	ds	1
  3911                           
  3912                           	psect	dataBANK0
  3913  0000AF                     __pdataBANK0:
  3914                           	opt callstack 0
  3915  0000AF                     _R:
  3916                           	opt callstack 0
  3917  0000AF                     	ds	54
  3918                           
  3919                           	psect	bssBANK1
  3920  0001D0                     __pbssBANK1:
  3921                           	opt callstack 0
  3922  0001D0                     _spi_link:
  3923                           	opt callstack 0
  3924  0001D0                     	ds	12
  3925  0001DC                     _uart1RxBuffer:
  3926                           	opt callstack 0
  3927  0001DC                     	ds	8
  3928  0001E4                     spinners@s:
  3929                           	opt callstack 0
  3930  0001E4                     	ds	6
  3931  0001EA                     floorf@F524:
  3932                           	opt callstack 0
  3933  0001EA                     	ds	4
  3934  0001EE                     _utctime:
  3935                           	opt callstack 0
  3936  0001EE                     	ds	4
  3937  0001F2                     _P:
  3938                           	opt callstack 0
  3939  0001F2                     	ds	4
  3940  0001F6                     _seed:
  3941                           	opt callstack 0
  3942  0001F6                     	ds	8
  3943                           
  3944                           	psect	dataBANK1
  3945  000100                     __pdataBANK1:
  3946                           	opt callstack 0
  3947  000100                     stoa@F1166:
  3948                           	opt callstack 0
  3949  000100                     	ds	7
  3950  000107                     _V:
  3951                           	opt callstack 0
  3952  000107                     	ds	192
  3953  0001C7                     _H:
  3954                           	opt callstack 0
  3955  0001C7                     	ds	9
  3956                           
  3957                           	psect	bssBANK2
  3958  000200                     __pbssBANK2:
  3959                           	opt callstack 0
  3960  000200                     lp_filter@smooth:
  3961                           	opt callstack 0
  3962  000200                     	ds	84
  3963  000254                     _S:
  3964                           	opt callstack 0
  3965  000254                     	ds	41
  3966  00027D                     _tickCount:
  3967                           	opt callstack 0
  3968  00027D                     	ds	26
  3969  000297                     _dbuf:
  3970                           	opt callstack 0
  3971  000297                     	ds	80
  3972                           
  3973                           	psect	bssBANK3
  3974  000300                     __pbssBANK3:
  3975                           	opt callstack 0
  3976  000300                     _uart2TxBuffer:
  3977                           	opt callstack 0
  3978  000300                     	ds	64
  3979  000340                     _ring_buf2:
  3980                           	opt callstack 0
  3981  000340                     	ds	67
  3982  000383                     _ring_buf1:
  3983                           	opt callstack 0
  3984  000383                     	ds	67
  3985                           
  3986                           	psect	bssBANK4
  3987  000400                     __pbssBANK4:
  3988                           	opt callstack 0
  3989  000400                     _uart2RxBuffer:
  3990                           	opt callstack 0
  3991  000400                     	ds	255
  3992                           
  3993                           	psect	bssBIGRAM
  3994  00082A                     __pbssBIGRAM:
  3995                           	opt callstack 0
  3996  00082A                     _D:
  3997                           	opt callstack 0
  3998  00082A                     	ds	482
  3999                           
  4000                           	psect	dataBIGRAM
  4001  0004FF                     __pdataBIGRAM:
  4002                           	opt callstack 0
  4003  0004FF                     _port_data:
  4004                           	opt callstack 0
  4005  0004FF                     	ds	512
  4006  0006FF                     _C:
  4007                           	opt callstack 0
  4008  0006FF                     	ds	299
  4009                           
  4010                           	psect	cstackBANK0
  4011  0000E5                     __pcstackBANK0:
  4012                           	opt callstack 0
  4013  0000E5                     ??_TMR3_ISR:
  4014                           
  4015                           ; 1 bytes @ 0x0
  4016  0000E5                     	ds	25
  4017                           
  4018                           	psect	cstackCOMRAM
  4019  000021                     __pcstackCOMRAM:
  4020                           	opt callstack 0
  4021  000021                     ??_ADCC_ThresholdISR:
  4022  000021                     
  4023                           ; 1 bytes @ 0x0
  4024  000021                     	ds	5
  4025  000026                     ??_TMR6_ISR:
  4026                           
  4027                           ; 1 bytes @ 0x5
  4028  000026                     	ds	1
  4029  000027                     ??_INT1_ISR:
  4030  000027                     
  4031                           ; 1 bytes @ 0x6
  4032  000027                     	ds	4
  4033  00002B                     ??_TMR5_ISR:
  4034                           
  4035                           ; 1 bytes @ 0xA
  4036  00002B                     	ds	15
  4037                           
  4038 ;;
  4039 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4040 ;;
  4041 ;; *************** function _main *****************
  4042 ;; Defined at:
  4043 ;;		line 189 in file "main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  esr_temp        4  [STACK] float 
  4048 ;;  i_esr           2  [STACK] unsigned short 
  4049 ;;  shape           1  [STACK] unsigned char 
  4050 ;;  inp_index       1  [STACK] unsigned char 
  4051 ;;  k               1  [STACK] unsigned char 
  4052 ;;  j               1  [STACK] unsigned char 
  4053 ;;  i               1  [STACK] unsigned char 
  4054 ;;  mode            1  [STACK] enum E17013
  4055 ;;  i_ror           1  [STACK] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1  [STACK] void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels required when called:   29
  4071 ;; This function calls:
  4072 ;;		_SYSTEM_Initialize
  4073 ;;		_StartTimer
  4074 ;;		_TimerDone
  4075 ;;		_WaitMs
  4076 ;;		___fladd
  4077 ;;		___flge
  4078 ;;		___fltol
  4079 ;;		_calc_model_data
  4080 ;;		_calc_ror_data
  4081 ;;		_check_adc_scan
  4082 ;;		_check_enter_button
  4083 ;;		_check_help
  4084 ;;		_clear_adc_scan
  4085 ;;		_clear_hid_pflags
  4086 ;;		_conv_raw_result
  4087 ;;		_convert_adc_data
  4088 ;;		_current_sensor_cal
  4089 ;;		_eaDogM_WriteCommand
  4090 ;;		_esr_check
  4091 ;;		_fabsf
  4092 ;;		_get_raw_result
  4093 ;;		_get_switch
  4094 ;;		_get_vterm_ptr
  4095 ;;		_hid_display
  4096 ;;		_init_bsoc
  4097 ;;		_init_display
  4098 ;;		_init_port_dma
  4099 ;;		_lp_filter
  4100 ;;		_mode_lamp_dim
  4101 ;;		_set_dac
  4102 ;;		_set_dac_a
  4103 ;;		_set_dac_b
  4104 ;;		_set_display_info
  4105 ;;		_set_load_relay_one
  4106 ;;		_set_load_relay_two
  4107 ;;		_set_vterm
  4108 ;;		_spinners
  4109 ;;		_sprintf
  4110 ;;		_srand
  4111 ;;		_start_adc_scan
  4112 ;;		_start_switch_handler
  4113 ;;		_static_soc
  4114 ;;		_update_lcd
  4115 ;;		_wait_lcd_done
  4116 ;; This function is called by:
  4117 ;;		Startup code after reset
  4118 ;; This function uses a reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text0
  4122  011244                     __ptext0:
  4123                           	opt callstack 0
  4124  011244                     _main:
  4125                           	opt callstack 0
  4126                           
  4127                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4128  011244  0E11               	movlw	17
  4129  011246  26E1               	addwf	fsr1l,f,c
  4130  011248  0E00               	movlw	0
  4131  01124A  22E2               	addwfc	fsr1h,f,c
  4132                           
  4133                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4134                           ;stkvar	_inp_index @ sp[(-17)+11]
  4135                           
  4136                           ;incstack = 0
  4137  01124C  0EFA               	movlw	-6
  4138  01124E  6AE3               	clrf	plusw1,c
  4139                           
  4140                           ;stkvar	_i @ sp[(-17)+14]
  4141  011250  0EFD               	movlw	-3
  4142  011252  6AE3               	clrf	plusw1,c
  4143                           
  4144                           ;stkvar	_j @ sp[(-17)+13]
  4145  011254  0EFC               	movlw	-4
  4146  011256  6AE3               	clrf	plusw1,c
  4147  011258  2AE3               	incf	plusw1,f,c
  4148                           
  4149                           ;stkvar	_k @ sp[(-17)+12]
  4150  01125A  0EFB               	movlw	-5
  4151  01125C  6AE3               	clrf	plusw1,c
  4152  01125E  82E3               	bsf	plusw1,1,c
  4153                           
  4154                           ;main.c: 195:  SYSTEM_Initialize();
  4155  011260  ECD2  F0DC         	call	_SYSTEM_Initialize	;wreg free
  4156                           
  4157                           ; BSR set to: 60
  4158                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4159  011264  8ED2               	bsf	210,7,c	;volatile
  4160                           
  4161                           ; BSR set to: 60
  4162                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4163  011266  8CD2               	bsf	210,6,c	;volatile
  4164                           
  4165                           ; BSR set to: 60
  4166                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4167  011268  0101               	movlb	1	; () banked
  4168  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;main.c: 208:  WaitMs(300);
  4172  01126C  0E2C               	movlw	44
  4173  01126E  6EE6               	movwf	postinc1,c
  4174  011270  0E01               	movlw	1
  4175  011272  6EE6               	movwf	postinc1,c
  4176  011274  EC3F  F0DF         	call	_WaitMs	;wreg free
  4177                           
  4178                           ;main.c: 209:  if (PORTBbits.RB0) {
  4179  011278  A0CB               	btfss	203,0,c	;volatile
  4180  01127A  D004               	goto	l13492
  4181                           
  4182                           ;main.c: 210:   mode = UI_STATE_HOST;
  4183                           ;stkvar	_mode @ sp[(-17)+15]
  4184  01127C  0EFE               	movlw	-2
  4185  01127E  6AE3               	clrf	plusw1,c
  4186  011280  2AE3               	incf	plusw1,f,c
  4187                           
  4188                           ;main.c: 211:  } else {
  4189  011282  D004               	goto	l13494
  4190  011284                     l13492:
  4191                           
  4192                           ;main.c: 212:   mode = UI_STATE_LOG;
  4193                           ;stkvar	_mode @ sp[(-17)+15]
  4194  011284  0EFE               	movlw	-2
  4195  011286  6AE3               	clrf	plusw1,c
  4196  011288  80E3               	bsf	plusw1,0,c
  4197  01128A  82E3               	bsf	plusw1,1,c	;indir
  4198  01128C                     l13494:
  4199                           
  4200                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4201                           ;stkvar	_mode @ sp[(-17)+15]
  4202  01128C  0EFE               	movlw	-2
  4203  01128E  04E3               	decf	plusw1,w,c
  4204  011290  A4D8               	btfss	status,2,c
  4205  011292  D007               	goto	l1334
  4206                           
  4207                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4208  011294  80BD               	bsf	189,0,c	;volatile
  4209                           
  4210                           ;main.c: 217:   V.mode_pwm = 70;
  4211  011296  0E00               	movlw	0
  4212  011298  0101               	movlb	1	; () banked
  4213  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4214  01129C  0E46               	movlw	70
  4215  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4216                           
  4217                           ;main.c: 218:  } else {
  4218  0112A0  D004               	goto	l13498
  4219  0112A2                     l1334:
  4220  0112A2  90BD               	bcf	189,0,c	;volatile
  4221                           
  4222                           ;main.c: 220:   V.mode_pwm = 0;
  4223  0112A4  0101               	movlb	1	; () banked
  4224  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4225  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4226  0112AA                     l13498:
  4227                           
  4228                           ; BSR set to: 1
  4229                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4230  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4231  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4232  0112B6  ECE3  F0E2         	call	_mode_lamp_dim	;wreg free
  4233  0112BA  D34D               	goto	l13634
  4234  0112BC                     l13500:
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;main.c: 230:    init_port_dma();
  4238  0112BC  ECC2  F0DF         	call	_init_port_dma	;wreg free
  4239                           
  4240                           ; BSR set to: 59
  4241                           ;main.c: 232:    init_display();
  4242  0112C0  EC72  F0D1         	call	_init_display	;wreg free
  4243                           
  4244                           ; BSR set to: 61
  4245                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4246  0112C4  0E0C               	movlw	12
  4247  0112C6  6EE6               	movwf	postinc1,c
  4248  0112C8  EC4F  F0E3         	call	_eaDogM_WriteCommand	;wreg free
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 234:    set_dac();
  4252  0112CC  ECB6  F0D4         	call	_set_dac	;wreg free
  4253                           
  4254                           ;main.c: 238:    set_load_relay_one(1);
  4255  0112D0  0E01               	movlw	1
  4256  0112D2  6EE6               	movwf	postinc1,c
  4257  0112D4  EC37  F0E3         	call	_set_load_relay_one	;wreg free
  4258                           
  4259                           ;main.c: 239:    set_load_relay_two(1);
  4260  0112D8  0E01               	movlw	1
  4261  0112DA  6EE6               	movwf	postinc1,c
  4262  0112DC  EC2F  F0E3         	call	_set_load_relay_two	;wreg free
  4263                           
  4264                           ;main.c: 241:    V.ui_state = mode;
  4265                           ;stkvar	_mode @ sp[(-17)+15]
  4266  0112E0  0EFE               	movlw	-2
  4267  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4268                           
  4269                           ;main.c: 242:    srand(1957);
  4270  0112E8  0EA5               	movlw	165
  4271  0112EA  6EE6               	movwf	postinc1,c
  4272  0112EC  0E07               	movlw	7
  4273  0112EE  6EE6               	movwf	postinc1,c
  4274  0112F0  EC5A  F0DF         	call	_srand	;wreg free
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 243:    set_vterm(0);
  4278  0112F4  0E00               	movlw	0
  4279  0112F6  6EE6               	movwf	postinc1,c
  4280  0112F8  EC9B  F0E2         	call	_set_vterm	;wreg free
  4281                           
  4282                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4283  0112FC  0E08               	movlw	low STR_1
  4284  0112FE  6EE6               	movwf	postinc1,c
  4285  011300  0EFF               	movlw	high STR_1
  4286  011302  6EE6               	movwf	postinc1,c
  4287  011304  0E00               	movlw	0
  4288  011306  6EE6               	movwf	postinc1,c
  4289  011308  0E00               	movlw	0
  4290  01130A  6EE6               	movwf	postinc1,c
  4291  01130C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4292  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4293  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4294  01131C  0E04               	movlw	4
  4295  01131E  6EE6               	movwf	postinc1,c
  4296  011320  EC72  F0D0         	call	_sprintf	;wreg free
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.17");
  4300  011324  0ED1               	movlw	low STR_3
  4301  011326  6EE6               	movwf	postinc1,c
  4302  011328  0EFF               	movlw	high STR_3
  4303  01132A  6EE6               	movwf	postinc1,c
  4304  01132C  0EF3               	movlw	low STR_2
  4305  01132E  6EE6               	movwf	postinc1,c
  4306  011330  0EFE               	movlw	high STR_2
  4307  011332  6EE6               	movwf	postinc1,c
  4308  011334  0E00               	movlw	0
  4309  011336  6EE6               	movwf	postinc1,c
  4310  011338  0E01               	movlw	1
  4311  01133A  6EE6               	movwf	postinc1,c
  4312  01133C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4313  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4314  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4315  01134C  0E06               	movlw	6
  4316  01134E  6EE6               	movwf	postinc1,c
  4317  011350  EC72  F0D0         	call	_sprintf	;wreg free
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4321  011354  0E9F               	movlw	low STR_4
  4322  011356  6EE6               	movwf	postinc1,c
  4323  011358  0EFE               	movlw	high STR_4
  4324  01135A  6EE6               	movwf	postinc1,c
  4325  01135C  0E00               	movlw	0
  4326  01135E  6EE6               	movwf	postinc1,c
  4327  011360  0E02               	movlw	2
  4328  011362  6EE6               	movwf	postinc1,c
  4329  011364  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4330  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4331  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4332  011374  0E04               	movlw	4
  4333  011376  6EE6               	movwf	postinc1,c
  4334  011378  EC72  F0D0         	call	_sprintf	;wreg free
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4338  01137C  0E60               	movlw	low STR_5
  4339  01137E  6EE6               	movwf	postinc1,c
  4340  011380  0EFE               	movlw	high STR_5
  4341  011382  6EE6               	movwf	postinc1,c
  4342  011384  0E02               	movlw	2
  4343  011386  6EE6               	movwf	postinc1,c
  4344  011388  0E00               	movlw	0
  4345  01138A  6EE6               	movwf	postinc1,c
  4346  01138C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4347  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4348  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4349  01139C  0E04               	movlw	4
  4350  01139E  6EE6               	movwf	postinc1,c
  4351  0113A0  EC72  F0D0         	call	_sprintf	;wreg free
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4355  0113A4  0E60               	movlw	low STR_5
  4356  0113A6  6EE6               	movwf	postinc1,c
  4357  0113A8  0EFE               	movlw	high STR_5
  4358  0113AA  6EE6               	movwf	postinc1,c
  4359  0113AC  0E02               	movlw	2
  4360  0113AE  6EE6               	movwf	postinc1,c
  4361  0113B0  0E01               	movlw	1
  4362  0113B2  6EE6               	movwf	postinc1,c
  4363  0113B4  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4364  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4365  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4366  0113C4  0E04               	movlw	4
  4367  0113C6  6EE6               	movwf	postinc1,c
  4368  0113C8  EC72  F0D0         	call	_sprintf	;wreg free
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4372  0113CC  0E60               	movlw	low STR_5
  4373  0113CE  6EE6               	movwf	postinc1,c
  4374  0113D0  0EFE               	movlw	high STR_5
  4375  0113D2  6EE6               	movwf	postinc1,c
  4376  0113D4  0E02               	movlw	2
  4377  0113D6  6EE6               	movwf	postinc1,c
  4378  0113D8  0E02               	movlw	2
  4379  0113DA  6EE6               	movwf	postinc1,c
  4380  0113DC  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4381  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4382  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4383  0113EC  0E04               	movlw	4
  4384  0113EE  6EE6               	movwf	postinc1,c
  4385  0113F0  EC72  F0D0         	call	_sprintf	;wreg free
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;main.c: 250:    update_lcd(0);
  4389  0113F4  0E00               	movlw	0
  4390  0113F6  6EE6               	movwf	postinc1,c
  4391  0113F8  ECEA  F0CF         	call	_update_lcd	;wreg free
  4392                           
  4393                           ;main.c: 251:    WaitMs(1000);
  4394  0113FC  0EE8               	movlw	232
  4395  0113FE  6EE6               	movwf	postinc1,c
  4396  011400  0E03               	movlw	3
  4397  011402  6EE6               	movwf	postinc1,c
  4398  011404  EC3F  F0DF         	call	_WaitMs	;wreg free
  4399                           
  4400                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4401  011408  0EFA               	movlw	250
  4402  01140A  6EE6               	movwf	postinc1,c
  4403  01140C  0E00               	movlw	0
  4404  01140E  6EE6               	movwf	postinc1,c
  4405  011410  0E0A               	movlw	10
  4406  011412  6EE6               	movwf	postinc1,c
  4407  011414  EC50  F0DE         	call	_StartTimer	;wreg free
  4408                           
  4409                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4410  011418  0EC8               	movlw	200
  4411  01141A  6EE6               	movwf	postinc1,c
  4412  01141C  0E00               	movlw	0
  4413  01141E  6EE6               	movwf	postinc1,c
  4414  011420  0E01               	movlw	1
  4415  011422  6EE6               	movwf	postinc1,c
  4416  011424  EC50  F0DE         	call	_StartTimer	;wreg free
  4417                           
  4418                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4419  011428  0EB8               	movlw	184
  4420  01142A  6EE6               	movwf	postinc1,c
  4421  01142C  0E0B               	movlw	11
  4422  01142E  6EE6               	movwf	postinc1,c
  4423  011430  0E07               	movlw	7
  4424  011432  6EE6               	movwf	postinc1,c
  4425  011434  EC50  F0DE         	call	_StartTimer	;wreg free
  4426                           
  4427                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4428  011438  0EDC               	movlw	220
  4429  01143A  6EE6               	movwf	postinc1,c
  4430  01143C  0E05               	movlw	5
  4431  01143E  6EE6               	movwf	postinc1,c
  4432  011440  0E0B               	movlw	11
  4433  011442  6EE6               	movwf	postinc1,c
  4434  011444  EC50  F0DE         	call	_StartTimer	;wreg free
  4435                           
  4436                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4437  011448  0EB8               	movlw	184
  4438  01144A  6EE6               	movwf	postinc1,c
  4439  01144C  0E0B               	movlw	11
  4440  01144E  6EE6               	movwf	postinc1,c
  4441  011450  0E09               	movlw	9
  4442  011452  6EE6               	movwf	postinc1,c
  4443  011454  EC50  F0DE         	call	_StartTimer	;wreg free
  4444                           
  4445                           ;main.c: 258:    start_adc_scan();
  4446  011458  ECE9  F0DA         	call	_start_adc_scan	;wreg free
  4447                           
  4448                           ;main.c: 259:    start_switch_handler();
  4449  01145C  EC5D  F0E2         	call	_start_switch_handler	;wreg free
  4450                           
  4451                           ; BSR set to: 57
  4452                           ;main.c: 260:    WaitMs(1000);
  4453  011460  0EE8               	movlw	232
  4454  011462  6EE6               	movwf	postinc1,c
  4455  011464  0E03               	movlw	3
  4456  011466  6EE6               	movwf	postinc1,c
  4457  011468  EC3F  F0DF         	call	_WaitMs	;wreg free
  4458                           
  4459                           ;main.c: 265:    i_ror = 1;
  4460                           ;stkvar	_i_ror @ sp[(-17)+16]
  4461  01146C  0EFF               	movlw	-1
  4462  01146E  6AE3               	clrf	plusw1,c
  4463  011470  2AE3               	incf	plusw1,f,c
  4464  011472                     l13552:
  4465                           
  4466                           ;main.c: 267:     calc_ror_data();
  4467  011472  ECFD  F0C6         	call	_calc_ror_data	;wreg free
  4468                           
  4469                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4470  011476  0E00               	movlw	0
  4471  011478  6EE6               	movwf	postinc1,c
  4472  01147A  0E04               	movlw	4
  4473  01147C  6EE6               	movwf	postinc1,c
  4474  01147E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  4475  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4476  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4477  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4478  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4479  01149A  0E8A               	movlw	low STR_8
  4480  01149C  6EE6               	movwf	postinc1,c
  4481  01149E  0EFE               	movlw	high STR_8
  4482  0114A0  6EE6               	movwf	postinc1,c
  4483  0114A2  0E00               	movlw	0
  4484  0114A4  6EE6               	movwf	postinc1,c
  4485  0114A6  0E01               	movlw	1
  4486  0114A8  6EE6               	movwf	postinc1,c
  4487  0114AA  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4488  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4489  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4490  0114BA  0E08               	movlw	8
  4491  0114BC  6EE6               	movwf	postinc1,c
  4492  0114BE  EC72  F0D0         	call	_sprintf	;wreg free
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4496  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4497  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4498  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4499  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4500  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4501                           
  4502                           ;stkvar	_i_ror @ sp[(-21)+16]
  4503  0114DE  0EFB               	movlw	-5
  4504  0114E0  50E3               	movf	plusw1,w,c
  4505  0114E2  6EE6               	movwf	postinc1,c
  4506  0114E4  0E00               	movlw	0
  4507  0114E6  6EE6               	movwf	postinc1,c
  4508  0114E8  0E00               	movlw	0
  4509  0114EA  6EE6               	movwf	postinc1,c
  4510  0114EC  0E05               	movlw	5
  4511  0114EE  6EE6               	movwf	postinc1,c
  4512  0114F0  ECF7  F0D0         	call	_spinners	;wreg free
  4513  0114F4  5001               	movf	btemp^0,w,c
  4514  0114F6  6EE6               	movwf	postinc1,c
  4515  0114F8  0E00               	movlw	0
  4516  0114FA  6EE6               	movwf	postinc1,c
  4517  0114FC  0E5B               	movlw	low STR_9
  4518  0114FE  6EE6               	movwf	postinc1,c
  4519  011500  0EFC               	movlw	high STR_9
  4520  011502  6EE6               	movwf	postinc1,c
  4521  011504  0E00               	movlw	0
  4522  011506  6EE6               	movwf	postinc1,c
  4523  011508  0E02               	movlw	2
  4524  01150A  6EE6               	movwf	postinc1,c
  4525  01150C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4526  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4527  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4528  01151C  0E0C               	movlw	12
  4529  01151E  6EE6               	movwf	postinc1,c
  4530  011520  EC72  F0D0         	call	_sprintf	;wreg free
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;main.c: 270:     update_lcd(0);
  4534  011524  0E00               	movlw	0
  4535  011526  6EE6               	movwf	postinc1,c
  4536  011528  ECEA  F0CF         	call	_update_lcd	;wreg free
  4537                           
  4538                           ;main.c: 271:     clear_adc_scan();
  4539  01152C  ECA3  F0E3         	call	_clear_adc_scan	;wreg free
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;main.c: 272:     start_adc_scan();
  4543  011530  ECE9  F0DA         	call	_start_adc_scan	;wreg free
  4544                           
  4545                           ;main.c: 273:     WaitMs(2000);
  4546  011534  0ED0               	movlw	208
  4547  011536  6EE6               	movwf	postinc1,c
  4548  011538  0E07               	movlw	7
  4549  01153A  6EE6               	movwf	postinc1,c
  4550  01153C  EC3F  F0DF         	call	_WaitMs	;wreg free
  4551                           
  4552                           ;main.c: 276:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4553                           ;stkvar	_i_ror @ sp[(-17)+16]
  4554  011540  0EFF               	movlw	-1
  4555  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4556  011548  2A0C               	incf	(btemp+11)^0,f,c
  4557  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4558  011550  060C               	decf	(btemp+11)^0,f,c
  4559  011552  0E1E               	movlw	30
  4560  011554  600C               	cpfslt	(btemp+11)^0,c
  4561  011556  D01A               	goto	u13010
  4562  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4563  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4564  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4565  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4566  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4567  011574  0E42               	movlw	66
  4568  011576  6EE6               	movwf	postinc1,c
  4569  011578  0E60               	movlw	96
  4570  01157A  6EE6               	movwf	postinc1,c
  4571  01157C  0E65               	movlw	101
  4572  01157E  6EE6               	movwf	postinc1,c
  4573  011580  0E3C               	movlw	60
  4574  011582  6EE6               	movwf	postinc1,c
  4575  011584  EC39  F0C9         	call	___flge	;wreg free
  4576  011588  A001               	btfss	btemp& (0+255),0,c
  4577  01158A  D773               	goto	l13552
  4578  01158C                     u13010:
  4579                           
  4580                           ;main.c: 278:    static_soc();
  4581  01158C  ECAD  F0DB         	call	_static_soc	;wreg free
  4582                           
  4583                           ;main.c: 279:    init_bsoc();
  4584  011590  EC18  F0BE         	call	_init_bsoc	;wreg free
  4585                           
  4586                           ;main.c: 280:    set_load_relay_one(0);
  4587  011594  0E00               	movlw	0
  4588  011596  6EE6               	movwf	postinc1,c
  4589  011598  EC37  F0E3         	call	_set_load_relay_one	;wreg free
  4590                           
  4591                           ;main.c: 281:    set_load_relay_two(0);
  4592  01159C  0E00               	movlw	0
  4593  01159E  6EE6               	movwf	postinc1,c
  4594  0115A0  EC2F  F0E3         	call	_set_load_relay_two	;wreg free
  4595                           
  4596                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4597  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4598  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4599  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4600  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4601  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4602  0115C0  0E16               	movlw	low STR_10
  4603  0115C2  6EE6               	movwf	postinc1,c
  4604  0115C4  0EFD               	movlw	high STR_10
  4605  0115C6  6EE6               	movwf	postinc1,c
  4606  0115C8  0E00               	movlw	0
  4607  0115CA  6EE6               	movwf	postinc1,c
  4608  0115CC  0E00               	movlw	0
  4609  0115CE  6EE6               	movwf	postinc1,c
  4610  0115D0  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4611  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4612  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4613  0115E0  0E06               	movlw	6
  4614  0115E2  6EE6               	movwf	postinc1,c
  4615  0115E4  EC72  F0D0         	call	_sprintf	;wreg free
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4619  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4620  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4621  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4622  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4623  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4624  011604  0EF2               	movlw	low STR_11
  4625  011606  6EE6               	movwf	postinc1,c
  4626  011608  0EFD               	movlw	high STR_11
  4627  01160A  6EE6               	movwf	postinc1,c
  4628  01160C  0E00               	movlw	0
  4629  01160E  6EE6               	movwf	postinc1,c
  4630  011610  0E01               	movlw	1
  4631  011612  6EE6               	movwf	postinc1,c
  4632  011614  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4633  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4634  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4635  011624  0E08               	movlw	8
  4636  011626  6EE6               	movwf	postinc1,c
  4637  011628  EC72  F0D0         	call	_sprintf	;wreg free
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;main.c: 284:    update_lcd(0);
  4641  01162C  0E00               	movlw	0
  4642  01162E  6EE6               	movwf	postinc1,c
  4643  011630  ECEA  F0CF         	call	_update_lcd	;wreg free
  4644                           
  4645                           ;main.c: 285:    WaitMs(2000);
  4646  011634  0ED0               	movlw	208
  4647  011636  6EE6               	movwf	postinc1,c
  4648  011638  0E07               	movlw	7
  4649  01163A  6EE6               	movwf	postinc1,c
  4650  01163C  EC3F  F0DF         	call	_WaitMs	;wreg free
  4651                           
  4652                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4653  011640  0EB4               	movlw	low STR_12
  4654  011642  6EE6               	movwf	postinc1,c
  4655  011644  0EFE               	movlw	high STR_12
  4656  011646  6EE6               	movwf	postinc1,c
  4657  011648  0E00               	movlw	0
  4658  01164A  6EE6               	movwf	postinc1,c
  4659  01164C  0E00               	movlw	0
  4660  01164E  6EE6               	movwf	postinc1,c
  4661  011650  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4662  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4663  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4664  011660  0E04               	movlw	4
  4665  011662  6EE6               	movwf	postinc1,c
  4666  011664  EC72  F0D0         	call	_sprintf	;wreg free
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4670  011668  0EC9               	movlw	low STR_13
  4671  01166A  6EE6               	movwf	postinc1,c
  4672  01166C  0EFE               	movlw	high STR_13
  4673  01166E  6EE6               	movwf	postinc1,c
  4674  011670  0E00               	movlw	0
  4675  011672  6EE6               	movwf	postinc1,c
  4676  011674  0E01               	movlw	1
  4677  011676  6EE6               	movwf	postinc1,c
  4678  011678  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4679  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4680  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4681  011688  0E04               	movlw	4
  4682  01168A  6EE6               	movwf	postinc1,c
  4683  01168C  EC72  F0D0         	call	_sprintf	;wreg free
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4687  011690  0E47               	movlw	low STR_14
  4688  011692  6EE6               	movwf	postinc1,c
  4689  011694  0EFF               	movlw	high STR_14
  4690  011696  6EE6               	movwf	postinc1,c
  4691  011698  0E00               	movlw	0
  4692  01169A  6EE6               	movwf	postinc1,c
  4693  01169C  0E02               	movlw	2
  4694  01169E  6EE6               	movwf	postinc1,c
  4695  0116A0  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4696  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4697  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4698  0116B0  0E04               	movlw	4
  4699  0116B2  6EE6               	movwf	postinc1,c
  4700  0116B4  EC72  F0D0         	call	_sprintf	;wreg free
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;main.c: 289:    update_lcd(0);
  4704  0116B8  0E00               	movlw	0
  4705  0116BA  6EE6               	movwf	postinc1,c
  4706  0116BC  ECEA  F0CF         	call	_update_lcd	;wreg free
  4707                           
  4708                           ;main.c: 290:    uint16_t i_esr = 1;
  4709  0116C0  0E01               	movlw	1
  4710  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4711  0116C4  0E00               	movlw	0
  4712  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4713                           
  4714                           ;stkvar	_i_esr @ sp[(-17)+8]
  4715  0116C8  0EF7               	movlw	-9
  4716  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4717  0116D0  0EF8               	movlw	-8
  4718  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4719                           
  4720                           ;main.c: 292:    float esr_temp;;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4721  0116D8  D06D               	goto	l13610
  4722  0116DA                     l13598:
  4723                           
  4724                           ;main.c: 294:     WaitMs(110);
  4725  0116DA  0E6E               	movlw	110
  4726  0116DC  6EE6               	movwf	postinc1,c
  4727  0116DE  0E00               	movlw	0
  4728  0116E0  6EE6               	movwf	postinc1,c
  4729  0116E2  EC3F  F0DF         	call	_WaitMs	;wreg free
  4730                           
  4731                           ;main.c: 295:     shape = (uint8_t) fabsf(esr_temp);
  4732                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4733  0116E6  0EF3               	movlw	-13
  4734  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4735  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4736  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4737  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4738  011700  EC11  F0D5         	call	_fabsf	;wreg free
  4739  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4740  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4741  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4742  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4743  01171C  EC80  F0C8         	call	___fltol	;wreg free
  4744  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4745                           
  4746                           ;stkvar	_shape @ sp[(-17)+10]
  4747  011726  0EF9               	movlw	-7
  4748  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4749                           
  4750                           ;main.c: 296:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4751  01172E  0E00               	movlw	0
  4752  011730  6EE6               	movwf	postinc1,c
  4753                           
  4754                           ;stkvar	_shape @ sp[(-18)+10]
  4755  011732  0EF8               	movlw	-8
  4756  011734  50E3               	movf	plusw1,w,c
  4757  011736  6EE6               	movwf	postinc1,c
  4758  011738  ECF7  F0D0         	call	_spinners	;wreg free
  4759  01173C  5001               	movf	btemp^0,w,c
  4760  01173E  6EE6               	movwf	postinc1,c
  4761  011740  0E00               	movlw	0
  4762  011742  6EE6               	movwf	postinc1,c
  4763  011744  0E00               	movlw	0
  4764  011746  6EE6               	movwf	postinc1,c
  4765  011748  0E00               	movlw	0
  4766  01174A  6EE6               	movwf	postinc1,c
  4767  01174C  ECF7  F0D0         	call	_spinners	;wreg free
  4768  011750  5001               	movf	btemp^0,w,c
  4769  011752  6EE6               	movwf	postinc1,c
  4770  011754  0E00               	movlw	0
  4771  011756  6EE6               	movwf	postinc1,c
  4772  011758  0E32               	movlw	low STR_15
  4773  01175A  6EE6               	movwf	postinc1,c
  4774  01175C  0EFF               	movlw	high STR_15
  4775  01175E  6EE6               	movwf	postinc1,c
  4776  011760  0E00               	movlw	0
  4777  011762  6EE6               	movwf	postinc1,c
  4778  011764  0E02               	movlw	2
  4779  011766  6EE6               	movwf	postinc1,c
  4780  011768  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4781  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4782  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4783  011778  0E08               	movlw	8
  4784  01177A  6EE6               	movwf	postinc1,c
  4785  01177C  EC72  F0D0         	call	_sprintf	;wreg free
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;main.c: 297:     update_lcd(0);
  4789  011780  0E00               	movlw	0
  4790  011782  6EE6               	movwf	postinc1,c
  4791  011784  ECEA  F0CF         	call	_update_lcd	;wreg free
  4792                           
  4793                           ;main.c: 299:     if (i_esr++ > 512)
  4794                           ;stkvar	_i_esr @ sp[(-17)+8]
  4795  011788  50E1               	movf	fsr1l,w,c
  4796  01178A  0FF7               	addlw	-9
  4797  01178C  6ED9               	movwf	fsr2l,c
  4798  01178E  50E2               	movf	fsr1h,w,c
  4799  011790  6EDA               	movwf	fsr2h,c
  4800  011792  0EFF               	movlw	255
  4801  011794  22DA               	addwfc	fsr2h,f,c
  4802  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4803  01179C  0E01               	movlw	1
  4804  01179E  26DE               	addwf	postinc2,f,c
  4805  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4806  0117A6  0E00               	movlw	0
  4807  0117A8  22DD               	addwfc	postdec2,f,c
  4808  0117AA  040B               	decf	(btemp+10)^0,w,c
  4809  0117AC  0E02               	movlw	2
  4810  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4811  0117B0  B0D8               	btfsc	status,0,c
  4812  0117B2  D017               	goto	u13030
  4813  0117B4                     l13610:
  4814                           
  4815                           ;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0) {
  4816  0117B4  0E00               	movlw	0
  4817  0117B6  6EE6               	movwf	postinc1,c
  4818  0117B8  ECD3  F0B8         	call	_esr_check	;wreg free
  4819                           
  4820                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4821  0117BC  0EF3               	movlw	-13
  4822  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4823  0117C4  0EF4               	movlw	-12
  4824  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4825  0117CC  0EF5               	movlw	-11
  4826  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4827  0117D4  0EF6               	movlw	-10
  4828  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  4829  0117DC  0EF6               	movlw	-10
  4830  0117DE  BEE3               	btfsc	plusw1,7,c
  4831  0117E0  D77C               	goto	l13598
  4832  0117E2                     u13030:
  4833                           
  4834                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4835  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  4836  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4837  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4838  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4839  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4840  0117FE  0E00               	movlw	low STR_16
  4841  011800  6EE6               	movwf	postinc1,c
  4842  011802  0EFD               	movlw	high STR_16
  4843  011804  6EE6               	movwf	postinc1,c
  4844  011806  0E00               	movlw	0
  4845  011808  6EE6               	movwf	postinc1,c
  4846  01180A  0E00               	movlw	0
  4847  01180C  6EE6               	movwf	postinc1,c
  4848  01180E  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4849  011812  0060  F007  FFE6   	movff	btemp,postinc1
  4850  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4851  01181E  0E08               	movlw	8
  4852  011820  6EE6               	movwf	postinc1,c
  4853  011822  EC72  F0D0         	call	_sprintf	;wreg free
  4854                           
  4855                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4856  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  4857  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  4858  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  4859  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  4860  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  4861  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  4862  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  4863  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  4864  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  4865  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  4866  01185E  0E27               	movlw	low STR_17
  4867  011860  6EE6               	movwf	postinc1,c
  4868  011862  0EFC               	movlw	high STR_17
  4869  011864  6EE6               	movwf	postinc1,c
  4870  011866  0E00               	movlw	0
  4871  011868  6EE6               	movwf	postinc1,c
  4872  01186A  0E01               	movlw	1
  4873  01186C  6EE6               	movwf	postinc1,c
  4874  01186E  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4875  011872  0060  F007  FFE6   	movff	btemp,postinc1
  4876  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4877  01187E  0E0C               	movlw	12
  4878  011880  6EE6               	movwf	postinc1,c
  4879  011882  EC72  F0D0         	call	_sprintf	;wreg free
  4880                           
  4881                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4882  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  4883  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  4884  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  4885  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  4886  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  4887  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4888  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  4889  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  4890  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  4891  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  4892  0118BE  0E41               	movlw	low STR_18
  4893  0118C0  6EE6               	movwf	postinc1,c
  4894  0118C2  0EFC               	movlw	high STR_18
  4895  0118C4  6EE6               	movwf	postinc1,c
  4896  0118C6  0E00               	movlw	0
  4897  0118C8  6EE6               	movwf	postinc1,c
  4898  0118CA  0E02               	movlw	2
  4899  0118CC  6EE6               	movwf	postinc1,c
  4900  0118CE  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  4901  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  4902  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4903  0118DE  0E0C               	movlw	12
  4904  0118E0  6EE6               	movwf	postinc1,c
  4905  0118E2  EC72  F0D0         	call	_sprintf	;wreg free
  4906                           
  4907                           ;main.c: 305:    update_lcd(0);
  4908  0118E6  0E00               	movlw	0
  4909  0118E8  6EE6               	movwf	postinc1,c
  4910  0118EA  ECEA  F0CF         	call	_update_lcd	;wreg free
  4911                           
  4912                           ;main.c: 306:    WaitMs(4000);
  4913  0118EE  0EA0               	movlw	160
  4914  0118F0  6EE6               	movwf	postinc1,c
  4915  0118F2  0E0F               	movlw	15
  4916  0118F4  6EE6               	movwf	postinc1,c
  4917  0118F6  EC3F  F0DF         	call	_WaitMs	;wreg free
  4918                           
  4919                           ;main.c: 307:    V.sensor_set = get_switch(SCALIB);
  4920  0118FA  0E04               	movlw	4
  4921  0118FC  6EE6               	movwf	postinc1,c
  4922  0118FE  EC39  F0E0         	call	_get_switch	;wreg free
  4923  011902  5001               	movf	btemp^0,w,c
  4924  011904  B4D8               	btfsc	status,2,c
  4925  011906  D002               	goto	u13040
  4926  011908  0E01               	movlw	1
  4927  01190A  D001               	goto	u13050
  4928  01190C                     u13040:
  4929  01190C  0E00               	movlw	0
  4930  01190E                     u13050:
  4931  01190E  0101               	movlb	1	; () banked
  4932  011910  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4933                           
  4934                           ; BSR set to: 1
  4935                           ;main.c: 308:    WaitMs(1000);
  4936  011912  0EE8               	movlw	232
  4937  011914  6EE6               	movwf	postinc1,c
  4938  011916  0E03               	movlw	3
  4939  011918  6EE6               	movwf	postinc1,c
  4940  01191A  EC3F  F0DF         	call	_WaitMs	;wreg free
  4941                           
  4942                           ;main.c: 309:    if (V.sensor_set && get_switch(SCALIB)) {
  4943  01191E  0101               	movlb	1	; () banked
  4944  011920  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  4945  011922  B4D8               	btfsc	status,2,c
  4946  011924  D00F               	goto	l13628
  4947                           
  4948                           ; BSR set to: 1
  4949  011926  0E04               	movlw	4
  4950  011928  6EE6               	movwf	postinc1,c
  4951  01192A  EC39  F0E0         	call	_get_switch	;wreg free
  4952  01192E  5001               	movf	btemp^0,w,c
  4953  011930  B4D8               	btfsc	status,2,c
  4954  011932  D008               	goto	l13628
  4955                           
  4956                           ;main.c: 310:     current_sensor_cal();
  4957  011934  ECB1  F0D8         	call	_current_sensor_cal	;wreg free
  4958                           
  4959                           ;main.c: 311:     WaitMs(4000);
  4960  011938  0EA0               	movlw	160
  4961  01193A  6EE6               	movwf	postinc1,c
  4962  01193C  0E0F               	movlw	15
  4963  01193E  6EE6               	movwf	postinc1,c
  4964  011940  EC3F  F0DF         	call	_WaitMs	;wreg free
  4965  011944                     l13628:
  4966                           
  4967                           ;main.c: 313:    V.sensor_set = 0;
  4968  011944  0101               	movlb	1	; () banked
  4969  011946  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  4970                           
  4971                           ; BSR set to: 1
  4972                           ;main.c: 314:    V.system_stable = 1;
  4973  011948  0E01               	movlw	1
  4974  01194A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  4975                           
  4976                           ;main.c: 315:    break;
  4977  01194C  D01B               	goto	l13636
  4978  01194E                     l1351:
  4979                           
  4980                           ; BSR set to: 1
  4981                           ;main.c: 321:    P.SYSTEM_STABLE = 1;
  4982  01194E  81F3               	bsf	(_P+1)& (0+255),0,b	;volatile
  4983                           
  4984                           ;main.c: 322:    break;
  4985  011950  D019               	goto	l13636
  4986  011952                     l1353:
  4987                           
  4988                           ; BSR set to: 1
  4989                           ;main.c: 325:    V.ui_state = UI_STATE_INIT;
  4990  011952  6B07               	clrf	_V& (0+255),b	;volatile
  4991                           
  4992                           ;main.c: 326:    break;
  4993  011954  D017               	goto	l13636
  4994  011956                     l13634:
  4995  011956  0101               	movlb	1	; () banked
  4996  011958  5107               	movf	_V& (0+255),w,b	;volatile
  4997  01195A  6E0B               	movwf	(btemp+10)^0,c
  4998  01195C  6A0C               	clrf	(btemp+11)^0,c
  4999                           
  5000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5001                           ; Switch size 1, requested type "simple"
  5002                           ; Number of cases is 1, Range of values is 0 to 0
  5003                           ; switch strategies available:
  5004                           ; Name         Instructions Cycles
  5005                           ; simple_byte            4     3 (average)
  5006                           ;	Chosen strategy is simple_byte
  5007  01195E  500C               	movf	(btemp+11)^0,w,c
  5008  011960  0A00               	xorlw	0	; case 0
  5009  011962  A4D8               	btfss	status,2,c
  5010  011964  D7F6               	goto	l1353
  5011                           
  5012                           ; BSR set to: 1
  5013                           ; Switch size 1, requested type "simple"
  5014                           ; Number of cases is 5, Range of values is 0 to 5
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte           16     9 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  011966  500B               	movf	(btemp+10)^0,w,c
  5020  011968  0A00               	xorlw	0	; case 0
  5021  01196A  B4D8               	btfsc	status,2,c
  5022  01196C  D4A7               	goto	l13500
  5023  01196E  0A01               	xorlw	1	; case 1
  5024  011970  B4D8               	btfsc	status,2,c
  5025  011972  D008               	goto	l13636
  5026  011974  0A02               	xorlw	2	; case 3
  5027  011976  B4D8               	btfsc	status,2,c
  5028  011978  D005               	goto	l13636
  5029  01197A  0A07               	xorlw	7	; case 4
  5030  01197C  B4D8               	btfsc	status,2,c
  5031  01197E  D7E7               	goto	l1351
  5032  011980  0A01               	xorlw	1	; case 5
  5033  011982  D7E7               	goto	l1353
  5034  011984                     l13636:
  5035                           
  5036                           ; BSR set to: 1
  5037                           ;main.c: 329:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5038  011984  0E01               	movlw	1
  5039  011986  6EE6               	movwf	postinc1,c
  5040  011988  ECA5  F0E0         	call	_TimerDone	;wreg free
  5041  01198C  5001               	movf	btemp^0,w,c
  5042  01198E  B4D8               	btfsc	status,2,c
  5043  011990  D013               	goto	l13648
  5044  011992  EC93  F0E3         	call	_check_adc_scan	;wreg free
  5045  011996  5001               	movf	btemp^0,w,c
  5046  011998  B4D8               	btfsc	status,2,c
  5047  01199A  D00E               	goto	l13648
  5048                           
  5049                           ;main.c: 333:    convert_adc_data();
  5050  01199C  EC5A  F0D4         	call	_convert_adc_data	;wreg free
  5051                           
  5052                           ;main.c: 337:    clear_adc_scan();
  5053  0119A0  ECA3  F0E3         	call	_clear_adc_scan	;wreg free
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 338:    start_adc_scan();
  5057  0119A4  ECE9  F0DA         	call	_start_adc_scan	;wreg free
  5058                           
  5059                           ;main.c: 339:    StartTimer(TMR_ADC, 200);
  5060  0119A8  0EC8               	movlw	200
  5061  0119AA  6EE6               	movwf	postinc1,c
  5062  0119AC  0E00               	movlw	0
  5063  0119AE  6EE6               	movwf	postinc1,c
  5064  0119B0  0E01               	movlw	1
  5065  0119B2  6EE6               	movwf	postinc1,c
  5066  0119B4  EC50  F0DE         	call	_StartTimer	;wreg free
  5067  0119B8                     l13648:
  5068                           
  5069                           ;main.c: 346:   if (TimerDone(TMR_DISPLAY)) {
  5070                           
  5071                           ;main.c: 342:   if (V.ticks) {
  5072  0119B8  0E0A               	movlw	10
  5073  0119BA  6EE6               	movwf	postinc1,c
  5074  0119BC  ECA5  F0E0         	call	_TimerDone	;wreg free
  5075  0119C0  5001               	movf	btemp^0,w,c
  5076  0119C2  B4D8               	btfsc	status,2,c
  5077  0119C4  EF88  F091         	goto	l13732
  5078                           
  5079                           ;main.c: 347:    if (TimerDone(TMR_HELPDIS)) {
  5080  0119C8  0E09               	movlw	9
  5081  0119CA  6EE6               	movwf	postinc1,c
  5082  0119CC  ECA5  F0E0         	call	_TimerDone	;wreg free
  5083  0119D0  5001               	movf	btemp^0,w,c
  5084  0119D2  B4D8               	btfsc	status,2,c
  5085  0119D4  D004               	goto	l13656
  5086                           
  5087                           ;main.c: 348:     set_display_info(DIS_STR);
  5088  0119D6  0E00               	movlw	0
  5089  0119D8  6EE6               	movwf	postinc1,c
  5090  0119DA  ECAA  F0E2         	call	_set_display_info	;wreg free
  5091  0119DE                     l13656:
  5092                           
  5093                           ;main.c: 350:    calc_model_data();
  5094  0119DE  EC6E  F0AE         	call	_calc_model_data	;wreg free
  5095                           
  5096                           ; BSR set to: 57
  5097                           ;main.c: 357:     hid_display(&H);
  5098                           
  5099                           ;main.c: 352:    if (0) {
  5100  0119E2  0EC7               	movlw	low _H
  5101  0119E4  6EE6               	movwf	postinc1,c
  5102  0119E6  0E01               	movlw	high _H
  5103  0119E8  6EE6               	movwf	postinc1,c
  5104  0119EA  EC6B  F0C1         	call	_hid_display	;wreg free
  5105                           
  5106                           ;main.c: 358:     switch (H.hid_display) {
  5107  0119EE  EF1E  F091         	goto	l13704
  5108  0119F2                     l1361:
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;main.c: 360:      V.calib = 0;
  5112  0119F2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5113                           
  5114                           ; BSR set to: 1
  5115                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5116  0119F4  EE22  F021         	lfsr	2,_C+290	;volatile
  5117  0119F8  50DF               	movf	indf2,w,c
  5118  0119FA  A4D8               	btfss	status,2,c
  5119  0119FC  D002               	goto	l13666
  5120                           
  5121                           ; BSR set to: 1
  5122  0119FE  0E20               	movlw	32
  5123  011A00  D001               	goto	L1
  5124  011A02                     l13666:
  5125                           
  5126                           ; BSR set to: 1
  5127  011A02  0E44               	movlw	68
  5128  011A04                     L1:
  5129  011A04  6E0B               	movwf	(btemp+10)^0,c
  5130  011A06  0E00               	movlw	0
  5131  011A08  6E0C               	movwf	(btemp+11)^0,c
  5132                           
  5133                           ;stkvar	_main$3781 @ sp[(-17)+2]
  5134  011A0A  0EF1               	movlw	-15
  5135  011A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5136  011A12  0EF2               	movlw	-14
  5137  011A14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5138                           
  5139                           ; BSR set to: 1
  5140  011A1A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5141  011A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5142  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5143  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5144  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5145                           
  5146                           ;stkvar	_main$3781 @ sp[(-21)+2]
  5147  011A36  0EED               	movlw	-19
  5148  011A38  006F FF8F FFE6     	movff	plusw1,postinc1
  5149  011A3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5150  011A44  0EDC               	movlw	low STR_22
  5151  011A46  6EE6               	movwf	postinc1,c
  5152  011A48  0EFD               	movlw	high STR_22
  5153  011A4A  6EE6               	movwf	postinc1,c
  5154  011A4C  0E00               	movlw	0
  5155  011A4E  6EE6               	movwf	postinc1,c
  5156  011A50  0E00               	movlw	0
  5157  011A52  6EE6               	movwf	postinc1,c
  5158  011A54  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5159  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  5160  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5161  011A64  0E0A               	movlw	10
  5162  011A66  6EE6               	movwf	postinc1,c
  5163  011A68  EC72  F0D0         	call	_sprintf	;wreg free
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5167  011A6C  EE21  F373         	lfsr	2,_C+116	;volatile
  5168  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5170  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  011A88  0EC6               	movlw	low STR_23
  5173  011A8A  6EE6               	movwf	postinc1,c
  5174  011A8C  0EFD               	movlw	high STR_23
  5175  011A8E  6EE6               	movwf	postinc1,c
  5176  011A90  0E00               	movlw	0
  5177  011A92  6EE6               	movwf	postinc1,c
  5178  011A94  0E01               	movlw	1
  5179  011A96  6EE6               	movwf	postinc1,c
  5180  011A98  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5181  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5182  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5183  011AA8  0E08               	movlw	8
  5184  011AAA  6EE6               	movwf	postinc1,c
  5185  011AAC  EC72  F0D0         	call	_sprintf	;wreg free
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5189  011AB0  EE21  F377         	lfsr	2,_C+120	;volatile
  5190  011AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5191  011ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5192  011AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  011AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011ACC  0EB0               	movlw	low STR_24
  5195  011ACE  6EE6               	movwf	postinc1,c
  5196  011AD0  0EFD               	movlw	high STR_24
  5197  011AD2  6EE6               	movwf	postinc1,c
  5198  011AD4  0E00               	movlw	0
  5199  011AD6  6EE6               	movwf	postinc1,c
  5200  011AD8  0E02               	movlw	2
  5201  011ADA  6EE6               	movwf	postinc1,c
  5202  011ADC  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5203  011AE0  0060  F007  FFE6   	movff	btemp,postinc1
  5204  011AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5205  011AEC  0E08               	movlw	8
  5206  011AEE  6EE6               	movwf	postinc1,c
  5207  011AF0  EC72  F0D0         	call	_sprintf	;wreg free
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5211  011AF4  EE22  F021         	lfsr	2,_C+290	;volatile
  5212  011AF8  50DF               	movf	indf2,w,c
  5213  011AFA  A4D8               	btfss	status,2,c
  5214  011AFC  D002               	goto	l13678
  5215                           
  5216                           ; BSR set to: 0
  5217  011AFE  0E20               	movlw	32
  5218  011B00  D001               	goto	L2
  5219  011B02                     l13678:
  5220                           
  5221                           ; BSR set to: 0
  5222  011B02  0E44               	movlw	68
  5223  011B04                     L2:
  5224  011B04  6E0B               	movwf	(btemp+10)^0,c
  5225  011B06  0E00               	movlw	0
  5226  011B08  6E0C               	movwf	(btemp+11)^0,c
  5227                           
  5228                           ;stkvar	_main$3785 @ sp[(-17)+0]
  5229  011B0A  0EEF               	movlw	-17
  5230  011B0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5231  011B12  0EF0               	movlw	-16
  5232  011B14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5233                           
  5234                           ; BSR set to: 0
  5235  011B1A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5236  011B1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5237  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5238  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5239  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5240                           
  5241                           ;stkvar	_main$3785 @ sp[(-21)+0]
  5242  011B36  0EEB               	movlw	-21
  5243  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
  5244  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5245  011B44  0E9A               	movlw	low STR_25
  5246  011B46  6EE6               	movwf	postinc1,c
  5247  011B48  0EFD               	movlw	high STR_25
  5248  011B4A  6EE6               	movwf	postinc1,c
  5249  011B4C  0E01               	movlw	1
  5250  011B4E  6EE6               	movwf	postinc1,c
  5251  011B50  0E00               	movlw	0
  5252  011B52  6EE6               	movwf	postinc1,c
  5253  011B54  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5254  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5255  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5256  011B64  0E0A               	movlw	10
  5257  011B66  6EE6               	movwf	postinc1,c
  5258  011B68  EC72  F0D0         	call	_sprintf	;wreg free
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5262  011B6C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5263  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5264  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5265  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5266  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  011B88  0E84               	movlw	low STR_26
  5268  011B8A  6EE6               	movwf	postinc1,c
  5269  011B8C  0EFD               	movlw	high STR_26
  5270  011B8E  6EE6               	movwf	postinc1,c
  5271  011B90  0E01               	movlw	1
  5272  011B92  6EE6               	movwf	postinc1,c
  5273  011B94  0E01               	movlw	1
  5274  011B96  6EE6               	movwf	postinc1,c
  5275  011B98  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5276  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5277  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5278  011BA8  0E08               	movlw	8
  5279  011BAA  6EE6               	movwf	postinc1,c
  5280  011BAC  EC72  F0D0         	call	_sprintf	;wreg free
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5284  011BB0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5285  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5287  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5288  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011BCC  0E6E               	movlw	low STR_27
  5290  011BCE  6EE6               	movwf	postinc1,c
  5291  011BD0  0EFD               	movlw	high STR_27
  5292  011BD2  6EE6               	movwf	postinc1,c
  5293  011BD4  0E01               	movlw	1
  5294  011BD6  6EE6               	movwf	postinc1,c
  5295  011BD8  0E02               	movlw	2
  5296  011BDA  6EE6               	movwf	postinc1,c
  5297  011BDC  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5298  011BE0  0060  F007  FFE6   	movff	btemp,postinc1
  5299  011BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5300  011BEC  0E08               	movlw	8
  5301  011BEE  6EE6               	movwf	postinc1,c
  5302  011BF0  EC72  F0D0         	call	_sprintf	;wreg free
  5303                           
  5304                           ;main.c: 368:      break;
  5305  011BF4  D339               	goto	l13706
  5306  011BF6                     l1371:
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;main.c: 370:      V.calib = 0;
  5310  011BF6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5314  011BF8  EE21  F303         	lfsr	2,_C+4	;volatile
  5315  011BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5316  011C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5317  011C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5318  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011C14  EE21  F313         	lfsr	2,_C+20	;volatile
  5320  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011C30  0E34               	movlw	low STR_28
  5325  011C32  6EE6               	movwf	postinc1,c
  5326  011C34  0EFE               	movlw	high STR_28
  5327  011C36  6EE6               	movwf	postinc1,c
  5328  011C38  0E00               	movlw	0
  5329  011C3A  6EE6               	movwf	postinc1,c
  5330  011C3C  0E00               	movlw	0
  5331  011C3E  6EE6               	movwf	postinc1,c
  5332  011C40  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5333  011C44  0060  F007  FFE6   	movff	btemp,postinc1
  5334  011C4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5335  011C50  0E0C               	movlw	12
  5336  011C52  6EE6               	movwf	postinc1,c
  5337  011C54  EC72  F0D0         	call	_sprintf	;wreg free
  5338                           
  5339                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5340  011C58  EE21  F2FF         	lfsr	2,_C
  5341  011C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011C74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5346  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5348  011C84  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  011C90  0E08               	movlw	low STR_29
  5351  011C92  6EE6               	movwf	postinc1,c
  5352  011C94  0EFE               	movlw	high STR_29
  5353  011C96  6EE6               	movwf	postinc1,c
  5354  011C98  0E00               	movlw	0
  5355  011C9A  6EE6               	movwf	postinc1,c
  5356  011C9C  0E01               	movlw	1
  5357  011C9E  6EE6               	movwf	postinc1,c
  5358  011CA0  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5359  011CA4  0060  F007  FFE6   	movff	btemp,postinc1
  5360  011CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5361  011CB0  0E0C               	movlw	12
  5362  011CB2  6EE6               	movwf	postinc1,c
  5363  011CB4  EC72  F0D0         	call	_sprintf	;wreg free
  5364                           
  5365                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5366  011CB8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5367  011CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  011CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  011CD4  EE21  F307         	lfsr	2,_C+8	;volatile
  5372  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  011CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5375  011CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5376  011CF0  0E1E               	movlw	low STR_30
  5377  011CF2  6EE6               	movwf	postinc1,c
  5378  011CF4  0EFE               	movlw	high STR_30
  5379  011CF6  6EE6               	movwf	postinc1,c
  5380  011CF8  0E00               	movlw	0
  5381  011CFA  6EE6               	movwf	postinc1,c
  5382  011CFC  0E02               	movlw	2
  5383  011CFE  6EE6               	movwf	postinc1,c
  5384  011D00  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5385  011D04  0060  F007  FFE6   	movff	btemp,postinc1
  5386  011D0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5387  011D10  0E0C               	movlw	12
  5388  011D12  6EE6               	movwf	postinc1,c
  5389  011D14  EC72  F0D0         	call	_sprintf	;wreg free
  5390                           
  5391                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5392  011D18  EE21  F39F         	lfsr	2,_C+160	;volatile
  5393  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5395  011D28  006F FF7B FFE6     	movff	postinc2,postinc1
  5396  011D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5397  011D34  0E2C               	movlw	low STR_31
  5398  011D36  6EE6               	movwf	postinc1,c
  5399  011D38  0EFD               	movlw	high STR_31
  5400  011D3A  6EE6               	movwf	postinc1,c
  5401  011D3C  0E01               	movlw	1
  5402  011D3E  6EE6               	movwf	postinc1,c
  5403  011D40  0E00               	movlw	0
  5404  011D42  6EE6               	movwf	postinc1,c
  5405  011D44  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5406  011D48  0060  F007  FFE6   	movff	btemp,postinc1
  5407  011D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5408  011D54  0E08               	movlw	8
  5409  011D56  6EE6               	movwf	postinc1,c
  5410  011D58  EC72  F0D0         	call	_sprintf	;wreg free
  5411                           
  5412                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5413  011D5C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5414  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5416  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  011D78  0E42               	movlw	low STR_32
  5419  011D7A  6EE6               	movwf	postinc1,c
  5420  011D7C  0EFD               	movlw	high STR_32
  5421  011D7E  6EE6               	movwf	postinc1,c
  5422  011D80  0E01               	movlw	1
  5423  011D82  6EE6               	movwf	postinc1,c
  5424  011D84  0E01               	movlw	1
  5425  011D86  6EE6               	movwf	postinc1,c
  5426  011D88  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5427  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5428  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5429  011D98  0E08               	movlw	8
  5430  011D9A  6EE6               	movwf	postinc1,c
  5431  011D9C  EC72  F0D0         	call	_sprintf	;wreg free
  5432                           
  5433                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5434  011DA0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5435  011DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5436  011DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  011DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  011DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  011DBC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5440  011DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5441  011DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5442  011DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5443  011DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5444  011DD8  EC35  F0A3         	call	___fladd	;wreg free
  5445  011DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5446  011DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5447  011DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5448  011DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5449  011DF4  0E58               	movlw	low STR_33
  5450  011DF6  6EE6               	movwf	postinc1,c
  5451  011DF8  0EFD               	movlw	high STR_33
  5452  011DFA  6EE6               	movwf	postinc1,c
  5453  011DFC  0E01               	movlw	1
  5454  011DFE  6EE6               	movwf	postinc1,c
  5455  011E00  0E02               	movlw	2
  5456  011E02  6EE6               	movwf	postinc1,c
  5457  011E04  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5458  011E08  0060  F007  FFE6   	movff	btemp,postinc1
  5459  011E0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5460  011E14  0E08               	movlw	8
  5461  011E16  6EE6               	movwf	postinc1,c
  5462  011E18  EC72  F0D0         	call	_sprintf	;wreg free
  5463                           
  5464                           ;main.c: 378:      break;
  5465  011E1C  D225               	goto	l13706
  5466  011E1E                     l1372:
  5467                           
  5468                           ; BSR set to: 1
  5469                           ;main.c: 380:      V.calib = 0;
  5470  011E1E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5471                           
  5472                           ; BSR set to: 1
  5473                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5474  011E20  EE21  F37F         	lfsr	2,_C+128	;volatile
  5475  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011E30  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011E36  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  011E3C  0EA4               	movlw	low STR_34
  5480  011E3E  6EE6               	movwf	postinc1,c
  5481  011E40  0EFC               	movlw	high STR_34
  5482  011E42  6EE6               	movwf	postinc1,c
  5483  011E44  0E00               	movlw	0
  5484  011E46  6EE6               	movwf	postinc1,c
  5485  011E48  0E00               	movlw	0
  5486  011E4A  6EE6               	movwf	postinc1,c
  5487  011E4C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5488  011E50  0060  F007  FFE6   	movff	btemp,postinc1
  5489  011E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5490  011E5C  0E08               	movlw	8
  5491  011E5E  6EE6               	movwf	postinc1,c
  5492  011E60  EC72  F0D0         	call	_sprintf	;wreg free
  5493                           
  5494                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5495  011E64  EE21  F393         	lfsr	2,_C+148	;volatile
  5496  011E68  006F FF7B FFE6     	movff	postinc2,postinc1
  5497  011E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  011E74  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  011E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5500  011E80  EE21  F38F         	lfsr	2,_C+144	;volatile
  5501  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5502  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5503  011E90  006F FF7B FFE6     	movff	postinc2,postinc1
  5504  011E96  006F FF7B FFE6     	movff	postinc2,postinc1
  5505  011E9C  0EE9               	movlw	low STR_35
  5506  011E9E  6EE6               	movwf	postinc1,c
  5507  011EA0  0EFC               	movlw	high STR_35
  5508  011EA2  6EE6               	movwf	postinc1,c
  5509  011EA4  0E00               	movlw	0
  5510  011EA6  6EE6               	movwf	postinc1,c
  5511  011EA8  0E01               	movlw	1
  5512  011EAA  6EE6               	movwf	postinc1,c
  5513  011EAC  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5514  011EB0  0060  F007  FFE6   	movff	btemp,postinc1
  5515  011EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5516  011EBC  0E0C               	movlw	12
  5517  011EBE  6EE6               	movwf	postinc1,c
  5518  011EC0  EC72  F0D0         	call	_sprintf	;wreg free
  5519                           
  5520                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5521  011EC4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5522  011EC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5523  011ECE  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  011ED4  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  011EDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  011EE0  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5527  011EE4  006F FF78  F00B    	movff	postinc2,btemp+10
  5528  011EEA  006F FF74  F00C    	movff	postdec2,btemp+11
  5529  011EF0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5530  011EF6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5531  011EFC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5532  011F00  006F FF78  F00B    	movff	postinc2,btemp+10
  5533  011F06  006F FF74  F00C    	movff	postdec2,btemp+11
  5534  011F0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5535  011F12  0060  F033  FFE6   	movff	btemp+11,postinc1
  5536  011F18  0E00               	movlw	0
  5537  011F1A  6EE6               	movwf	postinc1,c
  5538  011F1C  0E05               	movlw	5
  5539  011F1E  6EE6               	movwf	postinc1,c
  5540  011F20  ECF7  F0D0         	call	_spinners	;wreg free
  5541  011F24  5001               	movf	btemp^0,w,c
  5542  011F26  6EE6               	movwf	postinc1,c
  5543  011F28  0E00               	movlw	0
  5544  011F2A  6EE6               	movwf	postinc1,c
  5545  011F2C  0E0A               	movlw	low STR_36
  5546  011F2E  6EE6               	movwf	postinc1,c
  5547  011F30  0EFC               	movlw	high STR_36
  5548  011F32  6EE6               	movwf	postinc1,c
  5549  011F34  0E00               	movlw	0
  5550  011F36  6EE6               	movwf	postinc1,c
  5551  011F38  0E02               	movlw	2
  5552  011F3A  6EE6               	movwf	postinc1,c
  5553  011F3C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5554  011F40  0060  F007  FFE6   	movff	btemp,postinc1
  5555  011F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5556  011F4C  0E0E               	movlw	14
  5557  011F4E  6EE6               	movwf	postinc1,c
  5558  011F50  EC72  F0D0         	call	_sprintf	;wreg free
  5559                           
  5560                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5561  011F54  EE21  F387         	lfsr	2,_C+136	;volatile
  5562  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5563  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5564  011F64  006F FF7B FFE6     	movff	postinc2,postinc1
  5565  011F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  011F70  0E8D               	movlw	low STR_37
  5567  011F72  6EE6               	movwf	postinc1,c
  5568  011F74  0EFC               	movlw	high STR_37
  5569  011F76  6EE6               	movwf	postinc1,c
  5570  011F78  0E01               	movlw	1
  5571  011F7A  6EE6               	movwf	postinc1,c
  5572  011F7C  0E00               	movlw	0
  5573  011F7E  6EE6               	movwf	postinc1,c
  5574  011F80  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5575  011F84  0060  F007  FFE6   	movff	btemp,postinc1
  5576  011F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5577  011F90  0E08               	movlw	8
  5578  011F92  6EE6               	movwf	postinc1,c
  5579  011F94  EC72  F0D0         	call	_sprintf	;wreg free
  5580                           
  5581                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5582  011F98  EE22  F00D         	lfsr	2,_C+270	;volatile
  5583  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5584  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5585  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5586  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5587  011FB4  EE22  F019         	lfsr	2,_C+282	;volatile
  5588  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5589  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5590  011FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  011FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  011FD0  0EBB               	movlw	low STR_38
  5593  011FD2  6EE6               	movwf	postinc1,c
  5594  011FD4  0EFC               	movlw	high STR_38
  5595  011FD6  6EE6               	movwf	postinc1,c
  5596  011FD8  0E01               	movlw	1
  5597  011FDA  6EE6               	movwf	postinc1,c
  5598  011FDC  0E01               	movlw	1
  5599  011FDE  6EE6               	movwf	postinc1,c
  5600  011FE0  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5601  011FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5602  011FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5603  011FF0  0E0C               	movlw	12
  5604  011FF2  6EE6               	movwf	postinc1,c
  5605  011FF4  EC72  F0D0         	call	_sprintf	;wreg free
  5606                           
  5607                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5608  011FF8  EE22  F011         	lfsr	2,_C+274	;volatile
  5609  011FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5610  012002  006F FF7B FFE6     	movff	postinc2,postinc1
  5611  012008  006F FF7B FFE6     	movff	postinc2,postinc1
  5612  01200E  006F FF7B FFE6     	movff	postinc2,postinc1
  5613  012014  EE22  F01D         	lfsr	2,_C+286	;volatile
  5614  012018  006F FF7B FFE6     	movff	postinc2,postinc1
  5615  01201E  006F FF7B FFE6     	movff	postinc2,postinc1
  5616  012024  006F FF7B FFE6     	movff	postinc2,postinc1
  5617  01202A  006F FF7B FFE6     	movff	postinc2,postinc1
  5618  012030  0ED2               	movlw	low STR_39
  5619  012032  6EE6               	movwf	postinc1,c
  5620  012034  0EFC               	movlw	high STR_39
  5621  012036  6EE6               	movwf	postinc1,c
  5622  012038  0E01               	movlw	1
  5623  01203A  6EE6               	movwf	postinc1,c
  5624  01203C  0E02               	movlw	2
  5625  01203E  6EE6               	movwf	postinc1,c
  5626  012040  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5627  012044  0060  F007  FFE6   	movff	btemp,postinc1
  5628  01204A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5629  012050  0E0C               	movlw	12
  5630  012052  6EE6               	movwf	postinc1,c
  5631  012054  EC72  F0D0         	call	_sprintf	;wreg free
  5632                           
  5633                           ;main.c: 388:      break;
  5634  012058  D107               	goto	l13706
  5635  01205A                     l13690:
  5636                           
  5637                           ; BSR set to: 1
  5638                           ;main.c: 390:      if (!V.calib) {
  5639  01205A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5640  01205C  A4D8               	btfss	status,2,c
  5641  01205E  D02D               	goto	l13694
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;main.c: 391:       lp_filter(0.0, i, -1);
  5645  012060  0EFF               	movlw	255
  5646  012062  6EE6               	movwf	postinc1,c
  5647                           
  5648                           ;stkvar	_i @ sp[(-18)+14]
  5649  012064  0EFC               	movlw	-4
  5650  012066  50E3               	movf	plusw1,w,c
  5651  012068  6EE6               	movwf	postinc1,c
  5652  01206A  0E00               	movlw	0
  5653  01206C  6EE6               	movwf	postinc1,c
  5654  01206E  0E00               	movlw	0
  5655  012070  6EE6               	movwf	postinc1,c
  5656  012072  0E00               	movlw	0
  5657  012074  6EE6               	movwf	postinc1,c
  5658  012076  0E00               	movlw	0
  5659  012078  6EE6               	movwf	postinc1,c
  5660  01207A  EC84  F0C4         	call	_lp_filter	;wreg free
  5661                           
  5662                           ;main.c: 392:       lp_filter(0.0, j, -1);
  5663  01207E  0EFF               	movlw	255
  5664  012080  6EE6               	movwf	postinc1,c
  5665                           
  5666                           ;stkvar	_j @ sp[(-18)+13]
  5667  012082  0EFB               	movlw	-5
  5668  012084  50E3               	movf	plusw1,w,c
  5669  012086  6EE6               	movwf	postinc1,c
  5670  012088  0E00               	movlw	0
  5671  01208A  6EE6               	movwf	postinc1,c
  5672  01208C  0E00               	movlw	0
  5673  01208E  6EE6               	movwf	postinc1,c
  5674  012090  0E00               	movlw	0
  5675  012092  6EE6               	movwf	postinc1,c
  5676  012094  0E00               	movlw	0
  5677  012096  6EE6               	movwf	postinc1,c
  5678  012098  EC84  F0C4         	call	_lp_filter	;wreg free
  5679                           
  5680                           ;main.c: 393:       lp_filter(0.0, k, -1);
  5681  01209C  0EFF               	movlw	255
  5682  01209E  6EE6               	movwf	postinc1,c
  5683                           
  5684                           ;stkvar	_k @ sp[(-18)+12]
  5685  0120A0  0EFA               	movlw	-6
  5686  0120A2  50E3               	movf	plusw1,w,c
  5687  0120A4  6EE6               	movwf	postinc1,c
  5688  0120A6  0E00               	movlw	0
  5689  0120A8  6EE6               	movwf	postinc1,c
  5690  0120AA  0E00               	movlw	0
  5691  0120AC  6EE6               	movwf	postinc1,c
  5692  0120AE  0E00               	movlw	0
  5693  0120B0  6EE6               	movwf	postinc1,c
  5694  0120B2  0E00               	movlw	0
  5695  0120B4  6EE6               	movwf	postinc1,c
  5696  0120B6  EC84  F0C4         	call	_lp_filter	;wreg free
  5697  0120BA                     l13694:
  5698                           
  5699                           ;main.c: 395:      V.calib = 1;
  5700  0120BA  0E01               	movlw	1
  5701  0120BC  0101               	movlb	1	; () banked
  5702  0120BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  5706                           ;stkvar	_inp_index @ sp[(-17)+11]
  5707  0120C0  0EFA               	movlw	-6
  5708  0120C2  50E3               	movf	plusw1,w,c
  5709  0120C4  6EE6               	movwf	postinc1,c
  5710  0120C6  0E00               	movlw	0
  5711  0120C8  6EE6               	movwf	postinc1,c
  5712                           
  5713                           ;stkvar	_i @ sp[(-19)+14]
  5714  0120CA  0EFB               	movlw	-5
  5715  0120CC  50E3               	movf	plusw1,w,c
  5716  0120CE  0D04               	mullw	4
  5717  0120D0  0EFF               	movlw	low _C
  5718  0120D2  24F3               	addwf	243,w,c
  5719  0120D4  6ED9               	movwf	fsr2l,c
  5720  0120D6  0E06               	movlw	high _C
  5721  0120D8  20F4               	addwfc	prodh,w,c
  5722  0120DA  6EDA               	movwf	fsr2h,c
  5723  0120DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5724  0120E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5725  0120E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5726  0120EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5727                           
  5728                           ;stkvar	_i @ sp[(-23)+14]
  5729  0120F4  0EF7               	movlw	-9
  5730  0120F6  50E3               	movf	plusw1,w,c
  5731  0120F8  6EE6               	movwf	postinc1,c
  5732  0120FA  ECB9  F0E2         	call	_get_raw_result	;wreg free
  5733  0120FE  0060  F007  FFE6   	movff	btemp,postinc1
  5734  012104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5735  01210A  0E4A               	movlw	low STR_40
  5736  01210C  6EE6               	movwf	postinc1,c
  5737  01210E  0EFE               	movlw	high STR_40
  5738  012110  6EE6               	movwf	postinc1,c
  5739  012112  0E00               	movlw	0
  5740  012114  6EE6               	movwf	postinc1,c
  5741  012116  0E00               	movlw	0
  5742  012118  6EE6               	movwf	postinc1,c
  5743  01211A  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5744  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5745  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5746  01212A  0E0C               	movlw	12
  5747  01212C  6EE6               	movwf	postinc1,c
  5748  01212E  EC72  F0D0         	call	_sprintf	;wreg free
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  5752                           ;stkvar	_inp_index @ sp[(-17)+11]
  5753  012132  0EFA               	movlw	-6
  5754  012134  50E3               	movf	plusw1,w,c
  5755  012136  6E0B               	movwf	(btemp+10)^0,c
  5756  012138  6A0C               	clrf	(btemp+11)^0,c
  5757  01213A  0E01               	movlw	1
  5758  01213C  260B               	addwf	(btemp+10)^0,f,c
  5759  01213E  0E00               	movlw	0
  5760  012140  220C               	addwfc	(btemp+11)^0,f,c
  5761  012142  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5762  012148  0060  F033  FFE6   	movff	btemp+11,postinc1
  5763                           
  5764                           ;stkvar	_j @ sp[(-19)+13]
  5765  01214E  0EFA               	movlw	-6
  5766  012150  50E3               	movf	plusw1,w,c
  5767  012152  0D04               	mullw	4
  5768  012154  0EFF               	movlw	low _C
  5769  012156  24F3               	addwf	243,w,c
  5770  012158  6ED9               	movwf	fsr2l,c
  5771  01215A  0E06               	movlw	high _C
  5772  01215C  20F4               	addwfc	prodh,w,c
  5773  01215E  6EDA               	movwf	fsr2h,c
  5774  012160  006F FF7B FFE6     	movff	postinc2,postinc1
  5775  012166  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  01216C  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  012172  006F FF7B FFE6     	movff	postinc2,postinc1
  5778                           
  5779                           ;stkvar	_j @ sp[(-23)+13]
  5780  012178  0EF6               	movlw	-10
  5781  01217A  50E3               	movf	plusw1,w,c
  5782  01217C  6EE6               	movwf	postinc1,c
  5783  01217E  ECB9  F0E2         	call	_get_raw_result	;wreg free
  5784  012182  0060  F007  FFE6   	movff	btemp,postinc1
  5785  012188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5786  01218E  0E4A               	movlw	low STR_40
  5787  012190  6EE6               	movwf	postinc1,c
  5788  012192  0EFE               	movlw	high STR_40
  5789  012194  6EE6               	movwf	postinc1,c
  5790  012196  0E00               	movlw	0
  5791  012198  6EE6               	movwf	postinc1,c
  5792  01219A  0E01               	movlw	1
  5793  01219C  6EE6               	movwf	postinc1,c
  5794  01219E  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5795  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5796  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5797  0121AE  0E0C               	movlw	12
  5798  0121B0  6EE6               	movwf	postinc1,c
  5799  0121B2  EC72  F0D0         	call	_sprintf	;wreg free
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  5803                           ;stkvar	_inp_index @ sp[(-17)+11]
  5804  0121B6  0EFA               	movlw	-6
  5805  0121B8  50E3               	movf	plusw1,w,c
  5806  0121BA  6E0B               	movwf	(btemp+10)^0,c
  5807  0121BC  6A0C               	clrf	(btemp+11)^0,c
  5808  0121BE  0E02               	movlw	2
  5809  0121C0  260B               	addwf	(btemp+10)^0,f,c
  5810  0121C2  0E00               	movlw	0
  5811  0121C4  220C               	addwfc	(btemp+11)^0,f,c
  5812  0121C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5813  0121CC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5814                           
  5815                           ;stkvar	_k @ sp[(-19)+12]
  5816  0121D2  0EF9               	movlw	-7
  5817  0121D4  50E3               	movf	plusw1,w,c
  5818  0121D6  0D04               	mullw	4
  5819  0121D8  0EFF               	movlw	low _C
  5820  0121DA  24F3               	addwf	243,w,c
  5821  0121DC  6ED9               	movwf	fsr2l,c
  5822  0121DE  0E06               	movlw	high _C
  5823  0121E0  20F4               	addwfc	prodh,w,c
  5824  0121E2  6EDA               	movwf	fsr2h,c
  5825  0121E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  0121EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5827  0121F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  0121F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5829                           
  5830                           ;stkvar	_k @ sp[(-23)+12]
  5831  0121FC  0EF5               	movlw	-11
  5832  0121FE  50E3               	movf	plusw1,w,c
  5833  012200  6EE6               	movwf	postinc1,c
  5834  012202  ECB9  F0E2         	call	_get_raw_result	;wreg free
  5835  012206  0060  F007  FFE6   	movff	btemp,postinc1
  5836  01220C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5837  012212  0E4A               	movlw	low STR_40
  5838  012214  6EE6               	movwf	postinc1,c
  5839  012216  0EFE               	movlw	high STR_40
  5840  012218  6EE6               	movwf	postinc1,c
  5841  01221A  0E00               	movlw	0
  5842  01221C  6EE6               	movwf	postinc1,c
  5843  01221E  0E02               	movlw	2
  5844  012220  6EE6               	movwf	postinc1,c
  5845  012222  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  5846  012226  0060  F007  FFE6   	movff	btemp,postinc1
  5847  01222C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5848  012232  0E0C               	movlw	12
  5849  012234  6EE6               	movwf	postinc1,c
  5850  012236  EC72  F0D0         	call	_sprintf	;wreg free
  5851                           
  5852                           ;main.c: 399:      break;
  5853  01223A  D016               	goto	l13706
  5854  01223C                     l13704:
  5855  01223C  0101               	movlb	1	; () banked
  5856  01223E  51C7               	movf	_H& (0+255),w,b
  5857  012240  6E0B               	movwf	(btemp+10)^0,c
  5858  012242  6A0C               	clrf	(btemp+11)^0,c
  5859                           
  5860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5861                           ; Switch size 1, requested type "simple"
  5862                           ; Number of cases is 1, Range of values is 0 to 0
  5863                           ; switch strategies available:
  5864                           ; Name         Instructions Cycles
  5865                           ; simple_byte            4     3 (average)
  5866                           ;	Chosen strategy is simple_byte
  5867  012244  500C               	movf	(btemp+11)^0,w,c
  5868  012246  0A00               	xorlw	0	; case 0
  5869  012248  A4D8               	btfss	status,2,c
  5870  01224A  D00E               	goto	l13706
  5871                           
  5872                           ; BSR set to: 1
  5873                           ; Switch size 1, requested type "simple"
  5874                           ; Number of cases is 4, Range of values is 0 to 3
  5875                           ; switch strategies available:
  5876                           ; Name         Instructions Cycles
  5877                           ; simple_byte           13     7 (average)
  5878                           ;	Chosen strategy is simple_byte
  5879  01224C  500B               	movf	(btemp+10)^0,w,c
  5880  01224E  0A00               	xorlw	0	; case 0
  5881  012250  B4D8               	btfsc	status,2,c
  5882  012252  D4D1               	goto	l1371
  5883  012254  0A01               	xorlw	1	; case 1
  5884  012256  B4D8               	btfsc	status,2,c
  5885  012258  EFF9  F08C         	goto	l1361
  5886  01225C  0A03               	xorlw	3	; case 2
  5887  01225E  B4D8               	btfsc	status,2,c
  5888  012260  D5DE               	goto	l1372
  5889  012262  0A01               	xorlw	1	; case 3
  5890  012264  B4D8               	btfsc	status,2,c
  5891  012266  D6F9               	goto	l13690
  5892  012268                     l13706:
  5893                           
  5894                           ;main.c: 403:     clear_hid_pflags(&H);
  5895  012268  0EC7               	movlw	low _H
  5896  01226A  6EE6               	movwf	postinc1,c
  5897  01226C  0E01               	movlw	high _H
  5898  01226E  6EE6               	movwf	postinc1,c
  5899  012270  EC83  F0DA         	call	_clear_hid_pflags	;wreg free
  5900                           
  5901                           ;main.c: 405:    StartTimer(TMR_DISPLAY, 250);
  5902  012274  0EFA               	movlw	250
  5903  012276  6EE6               	movwf	postinc1,c
  5904  012278  0E00               	movlw	0
  5905  01227A  6EE6               	movwf	postinc1,c
  5906  01227C  0E0A               	movlw	10
  5907  01227E  6EE6               	movwf	postinc1,c
  5908  012280  EC50  F0DE         	call	_StartTimer	;wreg free
  5909                           
  5910                           ;main.c: 406:    V.enter = check_enter_button(&H);
  5911  012284  0EC7               	movlw	low _H
  5912  012286  6EE6               	movwf	postinc1,c
  5913  012288  0E01               	movlw	high _H
  5914  01228A  6EE6               	movwf	postinc1,c
  5915  01228C  ECAA  F0D9         	call	_check_enter_button	;wreg free
  5916  012290  5001               	movf	btemp^0,w,c
  5917  012292  0101               	movlb	1	; () banked
  5918  012294  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5919                           
  5920                           ; BSR set to: 1
  5921                           ;main.c: 407:    if (V.enter && (H.hid_display != HID_AUX)) {
  5922  012296  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5923  012298  B4D8               	btfsc	status,2,c
  5924  01229A  D011               	goto	l13720
  5925                           
  5926                           ; BSR set to: 1
  5927  01229C  0E03               	movlw	3
  5928  01229E  19C7               	xorwf	_H& (0+255),w,b
  5929  0122A0  B4D8               	btfsc	status,2,c
  5930  0122A2  D00D               	goto	l13720
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;main.c: 408:     V.enter = 0;
  5934  0122A4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;main.c: 409:     V.screen = ~V.screen;
  5938  0122A6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5939  0122A8  D002               	goto	u13170
  5940  0122AA  0E01               	movlw	1
  5941  0122AC  D001               	goto	u13176
  5942  0122AE                     u13170:
  5943  0122AE  0E00               	movlw	0
  5944  0122B0                     u13176:
  5945  0122B0  0AFF               	xorlw	255
  5946  0122B2  6E0C               	movwf	(btemp+11)^0,c
  5947  0122B4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5948  0122B6  180C               	xorwf	(btemp+11)^0,w,c
  5949  0122B8  0BFE               	andlw	-2
  5950  0122BA  180C               	xorwf	(btemp+11)^0,w,c
  5951  0122BC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5952  0122BE                     l13720:
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;main.c: 411:    set_vterm(V.screen);
  5956  0122BE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5957  0122C0  D002               	goto	u13180
  5958  0122C2  0E01               	movlw	1
  5959  0122C4  D001               	goto	u13186
  5960  0122C6                     u13180:
  5961  0122C6  0E00               	movlw	0
  5962  0122C8                     u13186:
  5963  0122C8  6EE6               	movwf	postinc1,c
  5964  0122CA  EC9B  F0E2         	call	_set_vterm	;wreg free
  5965                           
  5966                           ;main.c: 412:    update_lcd(V.screen);
  5967  0122CE  0101               	movlb	1	; () banked
  5968  0122D0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5969  0122D2  D002               	goto	u13190
  5970  0122D4  0E01               	movlw	1
  5971  0122D6  D001               	goto	u13196
  5972  0122D8                     u13190:
  5973  0122D8  0E00               	movlw	0
  5974  0122DA                     u13196:
  5975  0122DA  6EE6               	movwf	postinc1,c
  5976  0122DC  ECEA  F0CF         	call	_update_lcd	;wreg free
  5977                           
  5978                           ;main.c: 414:    wait_lcd_done();
  5979  0122E0  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;main.c: 415:    set_dac_a(3.333);
  5983  0122E4  0EDF               	movlw	223
  5984  0122E6  6EE6               	movwf	postinc1,c
  5985  0122E8  0E4F               	movlw	79
  5986  0122EA  6EE6               	movwf	postinc1,c
  5987  0122EC  0E55               	movlw	85
  5988  0122EE  6EE6               	movwf	postinc1,c
  5989  0122F0  0E40               	movlw	64
  5990  0122F2  6EE6               	movwf	postinc1,c
  5991  0122F4  EC8E  F0DF         	call	_set_dac_a	;wreg free
  5992                           
  5993                           ;main.c: 416:    set_dac_b(6.666);
  5994  0122F8  0EDF               	movlw	223
  5995  0122FA  6EE6               	movwf	postinc1,c
  5996  0122FC  0E4F               	movlw	79
  5997  0122FE  6EE6               	movwf	postinc1,c
  5998  012300  0ED5               	movlw	213
  5999  012302  6EE6               	movwf	postinc1,c
  6000  012304  0E40               	movlw	64
  6001  012306  6EE6               	movwf	postinc1,c
  6002  012308  EC74  F0DF         	call	_set_dac_b	;wreg free
  6003                           
  6004                           ;main.c: 417:    set_dac();
  6005  01230C  ECB6  F0D4         	call	_set_dac	;wreg free
  6006  012310                     l13732:
  6007                           
  6008                           ;main.c: 423:   check_help(V.flipper);
  6009  012310  0101               	movlb	1	; () banked
  6010  012312  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6011  012314  6EE6               	movwf	postinc1,c
  6012  012316  EC79  F0C2         	call	_check_help	;wreg free
  6013                           
  6014                           ;main.c: 425:   if (V.enter) {
  6015  01231A  0101               	movlb	1	; () banked
  6016  01231C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6017  01231E  B4D8               	btfsc	status,2,c
  6018  012320  D062               	goto	l1377
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;main.c: 426:    V.enter = 0;
  6022  012322  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6023                           
  6024                           ;main.c: 427:    V.calib = 0;
  6025  012324  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6026                           
  6027                           ; BSR set to: 1
  6028                           ;main.c: 428:    inp_index += 3;
  6029                           ;stkvar	_inp_index @ sp[(-17)+11]
  6030  012326  0EFA               	movlw	-6
  6031  012328  006F FF8C  F001    	movff	plusw1,btemp
  6032  01232E  0E03               	movlw	3
  6033  012330  2601               	addwf	btemp^0,f,c
  6034  012332  0EFA               	movlw	-6
  6035  012334  0060  F007  FFE3   	movff	btemp,plusw1
  6036                           
  6037                           ;main.c: 429:    if (inp_index > 9)
  6038                           ;stkvar	_inp_index @ sp[(-17)+11]
  6039  01233A  0EFA               	movlw	-6
  6040  01233C  006F FF8C  F001    	movff	plusw1,btemp
  6041  012342  0E09               	movlw	9
  6042  012344  6401               	cpfsgt	btemp^0,c
  6043  012346  D03A               	goto	l13760
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;main.c: 430:     inp_index = 0;
  6047                           ;stkvar	_inp_index @ sp[(-17)+11]
  6048  012348  0EFA               	movlw	-6
  6049  01234A  6AE3               	clrf	plusw1,c
  6050  01234C  D037               	goto	l13760
  6051  01234E                     l13742:
  6052                           
  6053                           ; BSR set to: 1
  6054                           ;main.c: 433:     i = C_BATT;
  6055                           ;stkvar	_i @ sp[(-17)+14]
  6056  01234E  0EFD               	movlw	-3
  6057  012350  6AE3               	clrf	plusw1,c
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;main.c: 434:     j = C_PV;
  6061                           ;stkvar	_j @ sp[(-17)+13]
  6062  012352  0EFC               	movlw	-4
  6063  012354  6AE3               	clrf	plusw1,c
  6064  012356  2AE3               	incf	plusw1,f,c
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;main.c: 435:     k = V_CC;
  6068                           ;stkvar	_k @ sp[(-17)+12]
  6069  012358  0EFB               	movlw	-5
  6070  01235A  6AE3               	clrf	plusw1,c
  6071  01235C  82E3               	bsf	plusw1,1,c
  6072                           
  6073                           ;main.c: 436:     break;
  6074  01235E  D043               	goto	l1377
  6075  012360                     l13748:
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;main.c: 438:     i = V_BAT;
  6079                           ;stkvar	_i @ sp[(-17)+14]
  6080  012360  0EFD               	movlw	-3
  6081  012362  6AE3               	clrf	plusw1,c
  6082  012364  84E3               	bsf	plusw1,2,c
  6083                           
  6084                           ;main.c: 439:     j = V_PV;
  6085                           ;stkvar	_j @ sp[(-17)+13]
  6086  012366  0EFC               	movlw	-4
  6087  012368  6AE3               	clrf	plusw1,c
  6088  01236A  80E3               	bsf	plusw1,0,c
  6089  01236C  84E3               	bsf	plusw1,2,c	;indir
  6090                           
  6091                           ;main.c: 440:     k = V_CBUS;
  6092                           ;stkvar	_k @ sp[(-17)+12]
  6093  01236E  0EFB               	movlw	-5
  6094  012370  6AE3               	clrf	plusw1,c
  6095  012372  82E3               	bsf	plusw1,1,c
  6096  012374  84E3               	bsf	plusw1,2,c	;indir
  6097                           
  6098                           ;main.c: 441:     break;
  6099  012376  D037               	goto	l1377
  6100  012378                     l13750:
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;main.c: 443:     i = V_BBAT;
  6104                           ;stkvar	_i @ sp[(-17)+14]
  6105  012378  0EFD               	movlw	-3
  6106  01237A  6AE3               	clrf	plusw1,c
  6107  01237C  82E3               	bsf	plusw1,1,c
  6108  01237E  86E3               	bsf	plusw1,3,c	;indir
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;main.c: 444:     j = V_TEMP;
  6112  012380  0E0B               	movlw	11
  6113  012382  6E0C               	movwf	(btemp+11)^0,c
  6114                           
  6115                           ;stkvar	_j @ sp[(-17)+13]
  6116  012384  0EFC               	movlw	-4
  6117  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;main.c: 445:     k = V_INVERTER;
  6121                           ;stkvar	_k @ sp[(-17)+12]
  6122  01238C  0EFB               	movlw	-5
  6123  01238E  6AE3               	clrf	plusw1,c
  6124  012390  84E3               	bsf	plusw1,2,c
  6125  012392  86E3               	bsf	plusw1,3,c	;indir
  6126                           
  6127                           ;main.c: 446:     break;
  6128  012394  D028               	goto	l1377
  6129  012396                     l13756:
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;main.c: 448:     i = V_LIGHT_SENSOR;
  6133  012396  0E0D               	movlw	13
  6134  012398  6E0C               	movwf	(btemp+11)^0,c
  6135                           
  6136                           ;stkvar	_i @ sp[(-17)+14]
  6137  01239A  0EFD               	movlw	-3
  6138  01239C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6139                           
  6140                           ;main.c: 449:     j = V_LIGHT_SENSOR;
  6141  0123A2  0E0D               	movlw	13
  6142  0123A4  6E0C               	movwf	(btemp+11)^0,c
  6143                           
  6144                           ;stkvar	_j @ sp[(-17)+13]
  6145  0123A6  0EFC               	movlw	-4
  6146  0123A8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6147                           
  6148                           ;main.c: 450:     k = V_LIGHT_SENSOR;
  6149  0123AE  0E0D               	movlw	13
  6150  0123B0  6E0C               	movwf	(btemp+11)^0,c
  6151                           
  6152                           ;stkvar	_k @ sp[(-17)+12]
  6153  0123B2  0EFB               	movlw	-5
  6154  0123B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6155                           
  6156                           ;main.c: 451:     break;
  6157  0123BA  D015               	goto	l1377
  6158  0123BC                     l13760:
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;stkvar	_inp_index @ sp[(-17)+11]
  6162  0123BC  0EFA               	movlw	-6
  6163  0123BE  50E3               	movf	plusw1,w,c
  6164  0123C0  6E0B               	movwf	(btemp+10)^0,c
  6165  0123C2  6A0C               	clrf	(btemp+11)^0,c
  6166                           
  6167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6168                           ; Switch size 1, requested type "simple"
  6169                           ; Number of cases is 1, Range of values is 0 to 0
  6170                           ; switch strategies available:
  6171                           ; Name         Instructions Cycles
  6172                           ; simple_byte            4     3 (average)
  6173                           ;	Chosen strategy is simple_byte
  6174  0123C4  500C               	movf	(btemp+11)^0,w,c
  6175  0123C6  0A00               	xorlw	0	; case 0
  6176  0123C8  A4D8               	btfss	status,2,c
  6177  0123CA  D00D               	goto	l1377
  6178                           
  6179                           ; BSR set to: 1
  6180                           ; Switch size 1, requested type "simple"
  6181                           ; Number of cases is 4, Range of values is 0 to 9
  6182                           ; switch strategies available:
  6183                           ; Name         Instructions Cycles
  6184                           ; simple_byte           13     7 (average)
  6185                           ;	Chosen strategy is simple_byte
  6186  0123CC  500B               	movf	(btemp+10)^0,w,c
  6187  0123CE  0A00               	xorlw	0	; case 0
  6188  0123D0  B4D8               	btfsc	status,2,c
  6189  0123D2  D7BD               	goto	l13742
  6190  0123D4  0A03               	xorlw	3	; case 3
  6191  0123D6  B4D8               	btfsc	status,2,c
  6192  0123D8  D7C3               	goto	l13748
  6193  0123DA  0A05               	xorlw	5	; case 6
  6194  0123DC  B4D8               	btfsc	status,2,c
  6195  0123DE  D7CC               	goto	l13750
  6196  0123E0  0A0F               	xorlw	15	; case 9
  6197  0123E2  B4D8               	btfsc	status,2,c
  6198  0123E4  D7D8               	goto	l13756
  6199  0123E6                     l1377:
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;main.c: 460:   if (V.set_sequ) {
  6203  0123E6  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6204  0123E8  EFAB  F08C         	goto	l13634
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;main.c: 461:    if (TimerDone(TMR_INFO)) {
  6208  0123EC  0E07               	movlw	7
  6209  0123EE  6EE6               	movwf	postinc1,c
  6210  0123F0  ECA5  F0E0         	call	_TimerDone	;wreg free
  6211  0123F4  5001               	movf	btemp^0,w,c
  6212  0123F6  B4D8               	btfsc	status,2,c
  6213  0123F8  D00C               	goto	l13770
  6214                           
  6215                           ;main.c: 462:     V.set_sequ = 0;
  6216  0123FA  0101               	movlb	1	; () banked
  6217  0123FC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;main.c: 463:     set_vterm(0);
  6221  0123FE  0E00               	movlw	0
  6222  012400  6EE6               	movwf	postinc1,c
  6223  012402  EC9B  F0E2         	call	_set_vterm	;wreg free
  6224                           
  6225                           ;main.c: 464:     update_lcd(0);
  6226  012406  0E00               	movlw	0
  6227  012408  6EE6               	movwf	postinc1,c
  6228  01240A  ECEA  F0CF         	call	_update_lcd	;wreg free
  6229                           
  6230                           ;main.c: 465:    } else {
  6231  01240E  EFAB  F08C         	goto	l13634
  6232  012412                     l13770:
  6233                           
  6234                           ;main.c: 466:     set_vterm(2);
  6235  012412  0E02               	movlw	2
  6236  012414  6EE6               	movwf	postinc1,c
  6237  012416  EC9B  F0E2         	call	_set_vterm	;wreg free
  6238                           
  6239                           ;main.c: 467:     update_lcd(2);
  6240  01241A  0E02               	movlw	2
  6241  01241C  6EE6               	movwf	postinc1,c
  6242  01241E  ECEA  F0CF         	call	_update_lcd	;wreg free
  6243  012422  EFAB  F08C         	goto	l13634
  6244  012426                     __end_of_main:
  6245                           	opt callstack 0
  6246                           
  6247 ;; *************** function _static_soc *****************
  6248 ;; Defined at:
  6249 ;;		line 117 in file "mbmc.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1  [STACK] void 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr2l, fsr2h
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:   15
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_main
  6274 ;; This function uses a reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text1
  6278  01B75A                     __ptext1:
  6279                           	opt callstack 0
  6280  01B75A                     _static_soc:
  6281                           	opt callstack 15
  6282                           
  6283                           ;mbmc.c: 119:  C.runtime = 120;
  6284                           
  6285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6286                           ;incstack = 0
  6287  01B75A  0E78               	movlw	120
  6288  01B75C  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6289  01B762  0E00               	movlw	0
  6290  01B764  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6291                           
  6292                           ;mbmc.c: 120:  C.soc = 100;
  6293  01B76A  0E64               	movlw	100
  6294  01B76C  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6295  01B772  0E00               	movlw	0
  6296  01B774  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6297                           
  6298                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6299  01B77A  EE21  F38B         	lfsr	2,_C+140	;volatile
  6300  01B77E  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6301  01B784  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6302  01B78A  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6303  01B790  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6304                           
  6305                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6306  01B796  EE21  F38F         	lfsr	2,_C+144	;volatile
  6307  01B79A  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6308  01B7A0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6309  01B7A6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6310  01B7AC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6311                           
  6312                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6313  01B7B2  0012               	return		;funcret
  6314  01B7B4                     __end_of_static_soc:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _start_switch_handler *****************
  6318 ;; Defined at:
  6319 ;;		line 125 in file "dio.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1  [STACK] void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6328 ;; Tracked objects:
  6329 ;;		On entry : 1/0
  6330 ;;		On exit  : 3F/39
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:   16
  6340 ;; This function calls:
  6341 ;;		_INT1_SetInterruptHandler
  6342 ;; This function is called by:
  6343 ;;		_main
  6344 ;; This function uses a reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text2
  6348  01C4BA                     __ptext2:
  6349                           	opt callstack 0
  6350  01C4BA                     _start_switch_handler:
  6351                           	opt callstack 14
  6352                           
  6353                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6354                           
  6355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6356                           ;incstack = 0
  6357  01C4BA  0139               	movlb	57	; () banked
  6358  01C4BC  9195               	bcf	149,0,b	;volatile
  6359                           
  6360                           ; BSR set to: 57
  6361                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6362  01C4BE  0E84               	movlw	low _switch_handler
  6363  01C4C0  6EE6               	movwf	postinc1,c
  6364  01C4C2  0E96               	movlw	high _switch_handler
  6365  01C4C4  6EE6               	movwf	postinc1,c
  6366  01C4C6  0E01               	movlw	low (_switch_handler shr (0+16))
  6367  01C4C8  6EE6               	movwf	postinc1,c
  6368  01C4CA  EC31  F0E1         	call	_INT1_SetInterruptHandler	;wreg free
  6369                           
  6370                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6371  01C4CE  0E02               	movlw	2
  6372  01C4D0  0102               	movlb	2	; () banked
  6373  01C4D2  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6374                           
  6375                           ; BSR set to: 2
  6376                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6377  01C4D4  0139               	movlb	57	; () banked
  6378  01C4D6  8195               	bsf	149,0,b	;volatile
  6379                           
  6380                           ; BSR set to: 57
  6381                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6382  01C4D8  0012               	return		;funcret
  6383  01C4DA                     __end_of_start_switch_handler:
  6384                           	opt callstack 0
  6385                           
  6386 ;; *************** function _srand *****************
  6387 ;; Defined at:
  6388 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  s               2  [STACK] unsigned int 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1  [STACK] void 
  6395 ;; Registers used:
  6396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 3F/1
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:   15
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_main
  6413 ;; This function uses a reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text3
  6417  01BEB4                     __ptext3:
  6418                           	opt callstack 0
  6419  01BEB4                     _srand:
  6420                           	opt callstack 15
  6421                           
  6422                           ;stkvar	_s @ sp[(0)+-2]
  6423                           
  6424                           ; BSR set to: 57
  6425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6426                           ;incstack = 0
  6427  01BEB4  0EFE               	movlw	-2
  6428  01BEB6  50E3               	movf	plusw1,w,c
  6429  01BEB8  0FFF               	addlw	255
  6430  01BEBA  6E0B               	movwf	(btemp+10)^0,c
  6431  01BEBC  0EFF               	movlw	-1
  6432  01BEBE  006F FF8C  F00C    	movff	plusw1,btemp+11
  6433  01BEC4  0EFF               	movlw	255
  6434  01BEC6  220C               	addwfc	(btemp+11)^0,f,c
  6435  01BEC8  0060  F02C  F1F6   	movff	btemp+10,_seed
  6436  01BECE  0060  F030  F1F7   	movff	btemp+11,_seed+1
  6437  01BED4  0101               	movlb	1	; () banked
  6438  01BED6  6BF8               	clrf	(_seed+2)& (0+255),b
  6439  01BED8  6BF9               	clrf	(_seed+3)& (0+255),b
  6440  01BEDA  6BFA               	clrf	(_seed+4)& (0+255),b
  6441  01BEDC  6BFB               	clrf	(_seed+5)& (0+255),b
  6442  01BEDE  6BFC               	clrf	(_seed+6)& (0+255),b
  6443  01BEE0  6BFD               	clrf	(_seed+7)& (0+255),b
  6444                           
  6445                           ; BSR set to: 1
  6446                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6447  01BEE2  52E5               	movf	postdec1,f,c
  6448  01BEE4  52E5               	movf	postdec1,f,c
  6449  01BEE6  0012               	return		;funcret
  6450  01BEE8                     __end_of_srand:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function _spinners *****************
  6454 ;; Defined at:
  6455 ;;		line 146 in file "mbmc.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  shape           1  [STACK] unsigned char 
  6458 ;;  reset           1  [STACK] const unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  c               1  [STACK] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1  [STACK] unsigned char 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:   16
  6477 ;; This function calls:
  6478 ;;		_strlen
  6479 ;; This function is called by:
  6480 ;;		_main
  6481 ;; This function uses a reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text4
  6485  01A1EE                     __ptext4:
  6486                           	opt callstack 0
  6487  01A1EE                     _spinners:
  6488                           	opt callstack 0
  6489                           
  6490                           ; BSR set to: 1
  6491                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6492  01A1EE  52E6               	movf	postinc1,f,c
  6493                           
  6494                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6495                           ;stkvar	_shape @ sp[(-1)+-1]
  6496                           
  6497                           ;incstack = 0
  6498  01A1F0  0EFE               	movlw	-2
  6499  01A1F2  006F FF8C  F001    	movff	plusw1,btemp
  6500  01A1F8  0E05               	movlw	5
  6501  01A1FA  6401               	cpfsgt	btemp^0,c
  6502  01A1FC  D002               	goto	l1985
  6503                           
  6504                           ;mbmc.c: 152:   shape = 0;
  6505                           ;stkvar	_shape @ sp[(-1)+-1]
  6506  01A1FE  0EFE               	movlw	-2
  6507  01A200  6AE3               	clrf	plusw1,c
  6508  01A202                     l1985:
  6509                           
  6510                           ;mbmc.c: 153:  if (reset)
  6511                           ;stkvar	_reset @ sp[(-1)+-2]
  6512  01A202  0EFD               	movlw	-3
  6513  01A204  50E3               	movf	plusw1,w,c
  6514  01A206  B4D8               	btfsc	status,2,c
  6515  01A208  D00C               	goto	l11220
  6516                           
  6517                           ;mbmc.c: 154:   s[shape] = 0;
  6518                           ;stkvar	_shape @ sp[(-1)+-1]
  6519  01A20A  0EFE               	movlw	-2
  6520  01A20C  50E3               	movf	plusw1,w,c
  6521  01A20E  6E0B               	movwf	(btemp+10)^0,c
  6522  01A210  6A0C               	clrf	(btemp+11)^0,c
  6523  01A212  0EE4               	movlw	low spinners@s
  6524  01A214  240B               	addwf	(btemp+10)^0,w,c
  6525  01A216  6ED9               	movwf	fsr2l,c
  6526  01A218  0E01               	movlw	high spinners@s
  6527  01A21A  200C               	addwfc	(btemp+11)^0,w,c
  6528  01A21C  6EDA               	movwf	fsr2h,c
  6529  01A21E  0E00               	movlw	0
  6530  01A220  6EDF               	movwf	indf2,c
  6531  01A222                     l11220:
  6532                           
  6533                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6534                           ;stkvar	_shape @ sp[(-1)+-1]
  6535  01A222  0EFE               	movlw	-2
  6536  01A224  50E3               	movf	plusw1,w,c
  6537  01A226  0D14               	mullw	20
  6538  01A228  0EFF               	movlw	low _spin
  6539  01A22A  6E0B               	movwf	(btemp+10)^0,c
  6540  01A22C  0EFA               	movlw	high _spin
  6541  01A22E  6E0C               	movwf	(btemp+11)^0,c
  6542  01A230  50F3               	movf	243,w,c
  6543  01A232  260B               	addwf	(btemp+10)^0,f,c
  6544  01A234  50F4               	movf	244,w,c
  6545  01A236  220C               	addwfc	(btemp+11)^0,f,c
  6546                           
  6547                           ;stkvar	_shape @ sp[(-1)+-1]
  6548  01A238  0EFE               	movlw	-2
  6549  01A23A  50E3               	movf	plusw1,w,c
  6550  01A23C  6E09               	movwf	(btemp+8)^0,c
  6551  01A23E  6A0A               	clrf	(btemp+9)^0,c
  6552  01A240  0EE4               	movlw	low spinners@s
  6553  01A242  2409               	addwf	(btemp+8)^0,w,c
  6554  01A244  6ED9               	movwf	fsr2l,c
  6555  01A246  0E01               	movlw	high spinners@s
  6556  01A248  200A               	addwfc	(btemp+9)^0,w,c
  6557  01A24A  6EDA               	movwf	fsr2h,c
  6558  01A24C  50DF               	movf	indf2,w,c
  6559  01A24E  260B               	addwf	(btemp+10)^0,f,c
  6560  01A250  0E00               	movlw	0
  6561  01A252  220C               	addwfc	(btemp+11)^0,f,c
  6562  01A254  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6563  01A25A  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6564  01A260                     	if	0	;tblptru may be non-zero
  6565  01A260                     	endif
  6566  01A260                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6567  01A260  0E00               	movlw	low (__mediumconst shr (0+16))
  6568  01A262  6EF8               	movwf	tblptru,c
  6569  01A264                     	endif
  6570                           
  6571                           ;stkvar	_c @ sp[(-1)+0]
  6572  01A264  0008               	tblrd		*
  6573  01A266  0EFF               	movlw	-1
  6574  01A268  006F FFD7 FFE3     	movff	tablat,plusw1
  6575                           
  6576                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6577                           ;stkvar	_shape @ sp[(-1)+-1]
  6578  01A26E  0EFE               	movlw	-2
  6579  01A270  50E3               	movf	plusw1,w,c
  6580  01A272  0D14               	mullw	20
  6581  01A274  0EFF               	movlw	low _spin
  6582  01A276  6E0B               	movwf	(btemp+10)^0,c
  6583  01A278  0EFA               	movlw	high _spin
  6584  01A27A  6E0C               	movwf	(btemp+11)^0,c
  6585  01A27C  50F3               	movf	243,w,c
  6586  01A27E  260B               	addwf	(btemp+10)^0,f,c
  6587  01A280  50F4               	movf	244,w,c
  6588  01A282  220C               	addwfc	(btemp+11)^0,f,c
  6589  01A284  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6590  01A28A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6591  01A290  ECBA  F0D6         	call	_strlen	;wreg free
  6592                           
  6593                           ;stkvar	_shape @ sp[(-1)+-1]
  6594  01A294  0EFE               	movlw	-2
  6595  01A296  50E3               	movf	plusw1,w,c
  6596  01A298  6E0B               	movwf	(btemp+10)^0,c
  6597  01A29A  6A0C               	clrf	(btemp+11)^0,c
  6598  01A29C  0EE4               	movlw	low spinners@s
  6599  01A29E  240B               	addwf	(btemp+10)^0,w,c
  6600  01A2A0  6ED9               	movwf	fsr2l,c
  6601  01A2A2  0E01               	movlw	high spinners@s
  6602  01A2A4  200C               	addwfc	(btemp+11)^0,w,c
  6603  01A2A6  6EDA               	movwf	fsr2h,c
  6604  01A2A8  2ADF               	incf	indf2,f,c
  6605  01A2AA  50DF               	movf	indf2,w,c
  6606  01A2AC  6E0B               	movwf	(btemp+10)^0,c
  6607  01A2AE  6A0C               	clrf	(btemp+11)^0,c
  6608  01A2B0  5001               	movf	btemp^0,w,c
  6609  01A2B2  5C0B               	subwf	(btemp+10)^0,w,c
  6610  01A2B4  5002               	movf	(btemp+1)^0,w,c
  6611  01A2B6  580C               	subwfb	(btemp+11)^0,w,c
  6612  01A2B8  A0D8               	btfss	status,0,c
  6613  01A2BA  D00C               	goto	l11226
  6614                           
  6615                           ;mbmc.c: 157:   s[shape] = 0;
  6616                           ;stkvar	_shape @ sp[(-1)+-1]
  6617  01A2BC  0EFE               	movlw	-2
  6618  01A2BE  50E3               	movf	plusw1,w,c
  6619  01A2C0  6E0B               	movwf	(btemp+10)^0,c
  6620  01A2C2  6A0C               	clrf	(btemp+11)^0,c
  6621  01A2C4  0EE4               	movlw	low spinners@s
  6622  01A2C6  240B               	addwf	(btemp+10)^0,w,c
  6623  01A2C8  6ED9               	movwf	fsr2l,c
  6624  01A2CA  0E01               	movlw	high spinners@s
  6625  01A2CC  200C               	addwfc	(btemp+11)^0,w,c
  6626  01A2CE  6EDA               	movwf	fsr2h,c
  6627  01A2D0  0E00               	movlw	0
  6628  01A2D2  6EDF               	movwf	indf2,c
  6629  01A2D4                     l11226:
  6630                           
  6631                           ;mbmc.c: 158:  return c;
  6632                           ;stkvar	_c @ sp[(-1)+0]
  6633  01A2D4  0EFF               	movlw	-1
  6634  01A2D6  006F FF8C  F001    	movff	plusw1,btemp
  6635                           
  6636                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6637  01A2DC  52E5               	movf	postdec1,f,c
  6638  01A2DE  52E5               	movf	postdec1,f,c
  6639  01A2E0  52E5               	movf	postdec1,f,c
  6640  01A2E2  0012               	return		;funcret
  6641  01A2E4                     __end_of_spinners:
  6642                           	opt callstack 0
  6643                           
  6644 ;; *************** function _set_dac_b *****************
  6645 ;; Defined at:
  6646 ;;		line 296 in file "daq.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  voltage         4  [STACK] const float 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2  [STACK] unsigned short 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   17
  6667 ;; This function calls:
  6668 ;;		_convert_dac_raw
  6669 ;; This function is called by:
  6670 ;;		_main
  6671 ;; This function uses a reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text5
  6675  01BEE8                     __ptext5:
  6676                           	opt callstack 0
  6677  01BEE8                     _set_dac_b:
  6678                           	opt callstack 13
  6679                           
  6680                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6681                           ;stkvar	_voltage @ sp[(0)+-4]
  6682                           
  6683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6684                           ;incstack = 0
  6685  01BEE8  0EFC               	movlw	-4
  6686  01BEEA  006F FF8F FFE6     	movff	plusw1,postinc1
  6687  01BEF0  006F FF8F FFE6     	movff	plusw1,postinc1
  6688  01BEF6  006F FF8F FFE6     	movff	plusw1,postinc1
  6689  01BEFC  006F FF8F FFE6     	movff	plusw1,postinc1
  6690  01BF02  EC48  F0CE         	call	_convert_dac_raw	;wreg free
  6691  01BF06  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6692  01BF0C  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6693                           
  6694                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6695                           
  6696                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6697  01BF12  52E5               	movf	postdec1,f,c
  6698  01BF14  52E5               	movf	postdec1,f,c
  6699  01BF16  52E5               	movf	postdec1,f,c
  6700  01BF18  52E5               	movf	postdec1,f,c
  6701  01BF1A  0012               	return		;funcret
  6702  01BF1C                     __end_of_set_dac_b:
  6703                           	opt callstack 0
  6704                           
  6705 ;; *************** function _set_dac_a *****************
  6706 ;; Defined at:
  6707 ;;		line 287 in file "daq.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  voltage         4  [STACK] const float 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  2  [STACK] unsigned short 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6716 ;; Tracked objects:
  6717 ;;		On entry : 3F/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:   17
  6728 ;; This function calls:
  6729 ;;		_convert_dac_raw
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text6
  6736  01BF1C                     __ptext6:
  6737                           	opt callstack 0
  6738  01BF1C                     _set_dac_a:
  6739                           	opt callstack 13
  6740                           
  6741                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6742                           ;stkvar	_voltage @ sp[(0)+-4]
  6743                           
  6744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6745                           ;incstack = 0
  6746  01BF1C  0EFC               	movlw	-4
  6747  01BF1E  006F FF8F FFE6     	movff	plusw1,postinc1
  6748  01BF24  006F FF8F FFE6     	movff	plusw1,postinc1
  6749  01BF2A  006F FF8F FFE6     	movff	plusw1,postinc1
  6750  01BF30  006F FF8F FFE6     	movff	plusw1,postinc1
  6751  01BF36  EC48  F0CE         	call	_convert_dac_raw	;wreg free
  6752  01BF3A  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6753  01BF40  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6754                           
  6755                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6756                           
  6757                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6758  01BF46  52E5               	movf	postdec1,f,c
  6759  01BF48  52E5               	movf	postdec1,f,c
  6760  01BF4A  52E5               	movf	postdec1,f,c
  6761  01BF4C  52E5               	movf	postdec1,f,c
  6762  01BF4E  0012               	return		;funcret
  6763  01BF50                     __end_of_set_dac_a:
  6764                           	opt callstack 0
  6765                           
  6766 ;; *************** function _convert_dac_raw *****************
  6767 ;; Defined at:
  6768 ;;		line 269 in file "daq.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  voltage         4  [STACK] float 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  2  [STACK] unsigned short 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:   16
  6789 ;; This function calls:
  6790 ;;		___fldiv
  6791 ;;		___flge
  6792 ;;		___fltol
  6793 ;; This function is called by:
  6794 ;;		_set_dac_a
  6795 ;;		_set_dac_b
  6796 ;; This function uses a reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text7
  6800  019C90                     __ptext7:
  6801                           	opt callstack 0
  6802  019C90                     _convert_dac_raw:
  6803                           	opt callstack 13
  6804                           
  6805                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6806                           
  6807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6808                           ;incstack = 0
  6809  019C90  0E6F               	movlw	111
  6810  019C92  6EE6               	movwf	postinc1,c
  6811  019C94  0E12               	movlw	18
  6812  019C96  6EE6               	movwf	postinc1,c
  6813  019C98  0E83               	movlw	131
  6814  019C9A  6EE6               	movwf	postinc1,c
  6815  019C9C  0E3A               	movlw	58
  6816  019C9E  6EE6               	movwf	postinc1,c
  6817                           
  6818                           ;stkvar	_voltage @ sp[(-4)+-4]
  6819  019CA0  0EF8               	movlw	-8
  6820  019CA2  006F FF8F FFE6     	movff	plusw1,postinc1
  6821  019CA8  006F FF8F FFE6     	movff	plusw1,postinc1
  6822  019CAE  006F FF8F FFE6     	movff	plusw1,postinc1
  6823  019CB4  006F FF8F FFE6     	movff	plusw1,postinc1
  6824  019CBA  EC39  F0C9         	call	___flge	;wreg free
  6825  019CBE  B001               	btfsc	btemp& (0+255),0,c
  6826  019CC0  D018               	goto	l10792
  6827                           
  6828                           ;daq.c: 275:   voltage = 0.001;
  6829  019CC2  0E6F               	movlw	111
  6830  019CC4  6E09               	movwf	(btemp+8)^0,c
  6831  019CC6  0E12               	movlw	18
  6832  019CC8  6E0A               	movwf	(btemp+9)^0,c
  6833  019CCA  0E83               	movlw	131
  6834  019CCC  6E0B               	movwf	(btemp+10)^0,c
  6835  019CCE  0E3A               	movlw	58
  6836  019CD0  6E0C               	movwf	(btemp+11)^0,c
  6837                           
  6838                           ;stkvar	_voltage @ sp[(0)+-4]
  6839  019CD2  0EFC               	movlw	-4
  6840  019CD4  0060  F027  FFE3   	movff	btemp+8,plusw1
  6841  019CDA  0EFD               	movlw	-3
  6842  019CDC  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6843  019CE2  0EFE               	movlw	-2
  6844  019CE4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6845  019CEA  0EFF               	movlw	-1
  6846  019CEC  0060  F033  FFE3   	movff	btemp+11,plusw1
  6847  019CF2                     l10792:
  6848                           
  6849                           ;daq.c: 276:  if (voltage > 10.0)
  6850                           ;stkvar	_voltage @ sp[(0)+-4]
  6851  019CF2  0EFC               	movlw	-4
  6852  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6853  019CFA  006F FF8F FFE6     	movff	plusw1,postinc1
  6854  019D00  006F FF8F FFE6     	movff	plusw1,postinc1
  6855  019D06  006F FF8F FFE6     	movff	plusw1,postinc1
  6856  019D0C  0E00               	movlw	0
  6857  019D0E  6EE6               	movwf	postinc1,c
  6858  019D10  0E00               	movlw	0
  6859  019D12  6EE6               	movwf	postinc1,c
  6860  019D14  0E20               	movlw	32
  6861  019D16  6EE6               	movwf	postinc1,c
  6862  019D18  0E41               	movlw	65
  6863  019D1A  6EE6               	movwf	postinc1,c
  6864  019D1C  EC39  F0C9         	call	___flge	;wreg free
  6865  019D20  B001               	btfsc	btemp& (0+255),0,c
  6866  019D22  D018               	goto	l10796
  6867                           
  6868                           ;daq.c: 277:   voltage = 10.0;
  6869  019D24  0E00               	movlw	0
  6870  019D26  6E09               	movwf	(btemp+8)^0,c
  6871  019D28  0E00               	movlw	0
  6872  019D2A  6E0A               	movwf	(btemp+9)^0,c
  6873  019D2C  0E20               	movlw	32
  6874  019D2E  6E0B               	movwf	(btemp+10)^0,c
  6875  019D30  0E41               	movlw	65
  6876  019D32  6E0C               	movwf	(btemp+11)^0,c
  6877                           
  6878                           ;stkvar	_voltage @ sp[(0)+-4]
  6879  019D34  0EFC               	movlw	-4
  6880  019D36  0060  F027  FFE3   	movff	btemp+8,plusw1
  6881  019D3C  0EFD               	movlw	-3
  6882  019D3E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6883  019D44  0EFE               	movlw	-2
  6884  019D46  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6885  019D4C  0EFF               	movlw	-1
  6886  019D4E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6887  019D54                     l10796:
  6888                           
  6889                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6890  019D54  0EF6               	movlw	246
  6891  019D56  6EE6               	movwf	postinc1,c
  6892  019D58  0E09               	movlw	9
  6893  019D5A  6EE6               	movwf	postinc1,c
  6894  019D5C  0E20               	movlw	32
  6895  019D5E  6EE6               	movwf	postinc1,c
  6896  019D60  0E3B               	movlw	59
  6897  019D62  6EE6               	movwf	postinc1,c
  6898                           
  6899                           ;stkvar	_voltage @ sp[(-4)+-4]
  6900  019D64  0EF8               	movlw	-8
  6901  019D66  006F FF8F FFE6     	movff	plusw1,postinc1
  6902  019D6C  006F FF8F FFE6     	movff	plusw1,postinc1
  6903  019D72  006F FF8F FFE6     	movff	plusw1,postinc1
  6904  019D78  006F FF8F FFE6     	movff	plusw1,postinc1
  6905  019D7E  EC13  F0A7         	call	___fldiv	;wreg free
  6906  019D82  0060  F007  FFE6   	movff	btemp,postinc1
  6907  019D88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6908  019D8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6909  019D94  0060  F013  FFE6   	movff	btemp+3,postinc1
  6910  019D9A  EC80  F0C8         	call	___fltol	;wreg free
  6911                           
  6912                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6913  019D9E  52E5               	movf	postdec1,f,c
  6914  019DA0  52E5               	movf	postdec1,f,c
  6915  019DA2  52E5               	movf	postdec1,f,c
  6916  019DA4  52E5               	movf	postdec1,f,c
  6917  019DA6  0012               	return		;funcret
  6918  019DA8                     __end_of_convert_dac_raw:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _set_dac *****************
  6922 ;; Defined at:
  6923 ;;		line 245 in file "daq.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1  [STACK] void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:   16
  6944 ;; This function calls:
  6945 ;;		_SPI1_Exchange8bit
  6946 ;;		_dac_spi_control
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;; This function uses a reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text8
  6953  01A96C                     __ptext8:
  6954                           	opt callstack 0
  6955  01A96C                     _set_dac:
  6956                           	opt callstack 14
  6957                           
  6958                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6959                           
  6960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6961                           ;incstack = 0
  6962  01A96C  013D               	movlb	61	; () banked
  6963  01A96E  AB17               	btfss	23,5,b	;volatile
  6964  01A970  D7FD               	goto	_set_dac
  6965                           
  6966                           ; BSR set to: 61
  6967                           
  6968                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6969  01A972  84BC               	bsf	188,2,c	;volatile
  6970                           
  6971                           ; BSR set to: 61
  6972                           
  6973                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6974  01A974  80BC               	bsf	188,0,c	;volatile
  6975                           
  6976                           ; BSR set to: 61
  6977                           ;daq.c: 250:  dac_spi_control(1);
  6978  01A976  0E01               	movlw	1
  6979  01A978  6EE6               	movwf	postinc1,c
  6980  01A97A  EC31  F0D9         	call	_dac_spi_control	;wreg free
  6981                           
  6982                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6983  01A97E  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6984                           
  6985                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6986  01A982  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6987  01A986  006F FF78  F00B    	movff	postinc2,btemp+10
  6988  01A98C  006F FF74  F00C    	movff	postdec2,btemp+11
  6989  01A992  0060  F030  F00B   	movff	btemp+11,btemp+10
  6990  01A998  6A0C               	clrf	(btemp+11)^0,c
  6991  01A99A  0E0F               	movlw	15
  6992  01A99C  160B               	andwf	(btemp+10)^0,f,c
  6993  01A99E  0100               	movlb	0	; () banked
  6994  01A9A0  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6995  01A9A2  180B               	xorwf	(btemp+10)^0,w,c
  6996  01A9A4  0BF0               	andlw	-16
  6997  01A9A6  180B               	xorwf	(btemp+10)^0,w,c
  6998  01A9A8  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  7002  01A9AA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7003  01A9AC  0B0F               	andlw	-241
  7004  01A9AE  0940               	iorlw	64
  7005  01A9B0  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7006                           
  7007                           ; BSR set to: 0
  7008  01A9B2  90BF               	bcf	191,0,c	;volatile
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7012  01A9B4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7013  01A9B6  6EE6               	movwf	postinc1,c
  7014  01A9B8  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7015                           
  7016                           ; BSR set to: 57
  7017                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7018  01A9BC  0100               	movlb	0	; () banked
  7019  01A9BE  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7020  01A9C0  6EE6               	movwf	postinc1,c
  7021  01A9C2  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7022                           
  7023                           ; BSR set to: 57
  7024  01A9C6  80BF               	bsf	191,0,c	;volatile
  7025                           
  7026                           ; BSR set to: 57
  7027                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7028  01A9C8  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  7029                           
  7030                           ; BSR set to: 57
  7031                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7032  01A9CC  EE20  F0D1         	lfsr	2,_R+34	;volatile
  7033  01A9D0  006F FF78  F00B    	movff	postinc2,btemp+10
  7034  01A9D6  006F FF74  F00C    	movff	postdec2,btemp+11
  7035  01A9DC  0060  F030  F00B   	movff	btemp+11,btemp+10
  7036  01A9E2  6A0C               	clrf	(btemp+11)^0,c
  7037  01A9E4  0E0F               	movlw	15
  7038  01A9E6  160B               	andwf	(btemp+10)^0,f,c
  7039  01A9E8  0100               	movlb	0	; () banked
  7040  01A9EA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7041  01A9EC  180B               	xorwf	(btemp+10)^0,w,c
  7042  01A9EE  0BF0               	andlw	-16
  7043  01A9F0  180B               	xorwf	(btemp+10)^0,w,c
  7044  01A9F2  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  7048  01A9F4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7049  01A9F6  0B0F               	andlw	-241
  7050  01A9F8  0950               	iorlw	80
  7051  01A9FA  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7052                           
  7053                           ; BSR set to: 0
  7054  01A9FC  90BF               	bcf	191,0,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7058  01A9FE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7059  01AA00  6EE6               	movwf	postinc1,c
  7060  01AA02  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7061                           
  7062                           ; BSR set to: 57
  7063                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7064  01AA06  0100               	movlb	0	; () banked
  7065  01AA08  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7066  01AA0A  6EE6               	movwf	postinc1,c
  7067  01AA0C  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7068  01AA10                     l1878:
  7069  01AA10  013D               	movlb	61	; () banked
  7070  01AA12  AB17               	btfss	23,5,b	;volatile
  7071  01AA14  D7FD               	goto	l1878
  7072                           
  7073                           ; BSR set to: 61
  7074                           
  7075                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  7076  01AA16  80BF               	bsf	191,0,c	;volatile
  7077                           
  7078                           ; BSR set to: 61
  7079                           ;daq.c: 266:  dac_spi_control(0);
  7080  01AA18  0E00               	movlw	0
  7081  01AA1A  6EE6               	movwf	postinc1,c
  7082  01AA1C  EC31  F0D9         	call	_dac_spi_control	;wreg free
  7083                           
  7084                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7085  01AA20  0012               	return		;funcret
  7086  01AA22                     __end_of_set_dac:
  7087                           	opt callstack 0
  7088                           
  7089 ;; *************** function _dac_spi_control *****************
  7090 ;; Defined at:
  7091 ;;		line 197 in file "daq.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  set             1  [STACK] _Bool 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1  [STACK] void 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr1l, fsr1h, status,2
  7100 ;; Tracked objects:
  7101 ;;		On entry : 3F/3D
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   15
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_set_dac
  7116 ;; This function uses a reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text9
  7120  01B262                     __ptext9:
  7121                           	opt callstack 0
  7122  01B262                     _dac_spi_control:
  7123                           	opt callstack 14
  7124                           
  7125                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7126                           ;stkvar	_set @ sp[(0)+-1]
  7127                           
  7128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7129                           ;incstack = 0
  7130  01B262  0EFF               	movlw	-1
  7131  01B264  50E3               	movf	plusw1,w,c
  7132  01B266  B4D8               	btfsc	status,2,c
  7133  01B268  D022               	goto	l10784
  7134                           
  7135                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7136  01B26A  013D               	movlb	61	; () banked
  7137  01B26C  9F14               	bcf	20,7,b	;volatile
  7138                           
  7139                           ; BSR set to: 61
  7140                           ;daq.c: 204:   if (!init) {
  7141  01B26E  5043               	movf	dac_spi_control@init^0,w,c
  7142  01B270  A4D8               	btfss	status,2,c
  7143  01B272  D011               	goto	l10772
  7144                           
  7145                           ; BSR set to: 61
  7146                           ;daq.c: 205:    init = 1;
  7147  01B274  0E01               	movlw	1
  7148  01B276  6E43               	movwf	dac_spi_control@init^0,c
  7149                           
  7150                           ; BSR set to: 61
  7151                           ;daq.c: 206:    S0 = SPI1CON0;
  7152  01B278  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7153                           
  7154                           ; BSR set to: 61
  7155                           ;daq.c: 207:    S1 = SPI1CON1;
  7156  01B27E  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7157                           
  7158                           ; BSR set to: 61
  7159                           ;daq.c: 208:    S2 = SPI1CON2;
  7160  01B284  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7161                           
  7162                           ; BSR set to: 61
  7163                           ;daq.c: 209:    SC = SPI1CLK;
  7164  01B28A  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7165                           
  7166                           ; BSR set to: 61
  7167                           ;daq.c: 210:    SB = SPI1BAUD;
  7168  01B290  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7169  01B296                     l10772:
  7170                           
  7171                           ; BSR set to: 61
  7172                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7173  01B296  6B15               	clrf	21,b	;volatile
  7174                           
  7175                           ; BSR set to: 61
  7176                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7177  01B298  8D15               	bsf	21,6,b	;volatile
  7178                           
  7179                           ; BSR set to: 61
  7180                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7181  01B29A  9B15               	bcf	21,5,b	;volatile
  7182                           
  7183                           ; BSR set to: 61
  7184                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7185  01B29C  9F15               	bcf	21,7,b	;volatile
  7186                           
  7187                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7188  01B29E  0E03               	movlw	3
  7189  01B2A0  6F16               	movwf	22,b	;volatile
  7190                           
  7191                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7192  01B2A2  0E0F               	movlw	15
  7193  01B2A4  6F19               	movwf	25,b	;volatile
  7194                           
  7195                           ; BSR set to: 61
  7196                           ;daq.c: 225:   SPI1CLK = 0x00;
  7197  01B2A6  6B1C               	clrf	28,b	;volatile
  7198                           
  7199                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7200  01B2A8  0E83               	movlw	131
  7201  01B2AA  6F14               	movwf	20,b	;volatile
  7202  01B2AC  D014               	goto	L3
  7203  01B2AE                     l10784:
  7204                           
  7205                           ;daq.c: 230:   if (init) {
  7206  01B2AE  5043               	movf	dac_spi_control@init^0,w,c
  7207  01B2B0  B4D8               	btfsc	status,2,c
  7208  01B2B2  D012               	goto	l1862
  7209                           
  7210                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7211  01B2B4  013D               	movlb	61	; () banked
  7212  01B2B6  9F14               	bcf	20,7,b	;volatile
  7213                           
  7214                           ;daq.c: 235:    SPI1CON1 = S1;
  7215  01B2B8  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7216                           
  7217                           ;daq.c: 236:    SPI1CON2 = S2;
  7218  01B2BE  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7219                           
  7220                           ;daq.c: 237:    SPI1CLK = SC;
  7221  01B2C4  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7222                           
  7223                           ;daq.c: 238:    SPI1BAUD = SB;
  7224  01B2CA  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7225                           
  7226                           ;daq.c: 239:    SPI1CON0 = S0;
  7227  01B2D0  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7228  01B2D6                     L3:
  7229                           
  7230                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7231  01B2D6  8F14               	bsf	20,7,b	;volatile
  7232  01B2D8                     l1862:
  7233                           
  7234                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7235  01B2D8  52E5               	movf	postdec1,f,c
  7236  01B2DA  0012               	return		;funcret
  7237  01B2DC                     __end_of_dac_spi_control:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _init_port_dma *****************
  7241 ;; Defined at:
  7242 ;;		line 104 in file "eadog.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1  [STACK] void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/1
  7253 ;;		On exit  : 3F/3B
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:   15
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_main
  7267 ;; This function uses a reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text10
  7271  01BF84                     __ptext10:
  7272                           	opt callstack 0
  7273  01BF84                     _init_port_dma:
  7274                           	opt callstack 15
  7275                           
  7276                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7277                           
  7278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7279                           ;incstack = 0
  7280  01BF84  0E3F               	movlw	-193
  7281  01BF86  013B               	movlb	59	; () banked
  7282  01BF88  17DD               	andwf	221,f,b	;volatile
  7283                           
  7284                           ; BSR set to: 59
  7285                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7286  01BF8A  9BDD               	bcf	221,5,b	;volatile
  7287                           
  7288                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7289  01BF8C  51DD               	movf	221,w,b	;volatile
  7290  01BF8E  0BF9               	andlw	-7
  7291  01BF90  0902               	iorlw	2
  7292  01BF92  6FDD               	movwf	221,b	;volatile
  7293                           
  7294                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7295  01BF94  0EE7               	movlw	-25
  7296  01BF96  17DD               	andwf	221,f,b	;volatile
  7297                           
  7298                           ; BSR set to: 59
  7299                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7300  01BF98  81DD               	bsf	221,0,b	;volatile
  7301                           
  7302                           ; BSR set to: 59
  7303                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7304  01BF9A  9DDC               	bcf	220,6,b	;volatile
  7305                           
  7306                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7307  01BF9C  0E3D               	movlw	61
  7308  01BF9E  6FD1               	movwf	209,b	;volatile
  7309  01BFA0  0EEA               	movlw	234
  7310  01BFA2  6FD0               	movwf	208,b	;volatile
  7311                           
  7312                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7313  01BFA4  0EFF               	movlw	low _port_data
  7314  01BFA6  6FD9               	movwf	217,b	;volatile
  7315  01BFA8  0E04               	movlw	high _port_data
  7316  01BFAA  6FDA               	movwf	218,b	;volatile
  7317  01BFAC  0E00               	movlw	low (_port_data shr (0+16))
  7318  01BFAE  6FDB               	movwf	219,b	;volatile
  7319                           
  7320                           ; BSR set to: 59
  7321                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7322  01BFB0  9BDC               	bcf	220,5,b	;volatile
  7323                           
  7324                           ; BSR set to: 59
  7325                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7326  01BFB2  0012               	return		;funcret
  7327  01BFB4                     __end_of_init_port_dma:
  7328                           	opt callstack 0
  7329                           
  7330 ;; *************** function _init_display *****************
  7331 ;; Defined at:
  7332 ;;		line 38 in file "eadog.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1  [STACK] void 
  7339 ;; Registers used:
  7340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7341 ;; Tracked objects:
  7342 ;;		On entry : 3F/3B
  7343 ;;		On exit  : 3F/3D
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;Total ram usage:        0 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:   17
  7353 ;; This function calls:
  7354 ;;		_ringBufS_init
  7355 ;;		_send_lcd_cmd
  7356 ;;		_send_lcd_cmd_long
  7357 ;;		_send_lcd_data
  7358 ;;		_wdtdelay
  7359 ;; This function is called by:
  7360 ;;		_main
  7361 ;; This function uses a reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text11
  7365  01A2E4                     __ptext11:
  7366                           	opt callstack 0
  7367  01A2E4                     _init_display:
  7368                           	opt callstack 13
  7369                           
  7370                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7371                           
  7372                           ; BSR set to: 59
  7373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7374                           ;incstack = 0
  7375  01A2E4  0E83               	movlw	low _ring_buf1
  7376  01A2E6  0101               	movlb	1	; () banked
  7377  01A2E8  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7378  01A2EA  0E03               	movlw	high _ring_buf1
  7379  01A2EC  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7380                           
  7381                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7382  01A2EE  0E40               	movlw	low _ring_buf2
  7383  01A2F0  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7384  01A2F2  0E03               	movlw	high _ring_buf2
  7385  01A2F4  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7386                           
  7387                           ; BSR set to: 1
  7388                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7389  01A2F6  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7390  01A2FC  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7391  01A302  EC91  F0E0         	call	_ringBufS_init	;wreg free
  7392                           
  7393                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7394  01A306  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7395  01A30C  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7396  01A312  EC91  F0E0         	call	_ringBufS_init	;wreg free
  7397                           
  7398                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7399  01A316  84BE               	bsf	190,2,c	;volatile
  7400                           
  7401                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7402  01A318  013D               	movlb	61	; () banked
  7403  01A31A  9F14               	bcf	20,7,b	;volatile
  7404                           
  7405                           ; BSR set to: 61
  7406                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7407  01A31C  0E20               	movlw	32
  7408  01A31E  6F15               	movwf	21,b	;volatile
  7409                           
  7410                           ; BSR set to: 61
  7411                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7412  01A320  0E03               	movlw	3
  7413  01A322  6F16               	movwf	22,b	;volatile
  7414                           
  7415                           ; BSR set to: 61
  7416                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7417  01A324  0E04               	movlw	4
  7418  01A326  6F19               	movwf	25,b	;volatile
  7419                           
  7420                           ; BSR set to: 61
  7421                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7422  01A328  0E02               	movlw	2
  7423  01A32A  6F1C               	movwf	28,b	;volatile
  7424                           
  7425                           ; BSR set to: 61
  7426                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7427  01A32C  0E83               	movlw	131
  7428  01A32E  6F14               	movwf	20,b	;volatile
  7429                           
  7430                           ; BSR set to: 61
  7431                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7432  01A330  8F14               	bsf	20,7,b	;volatile
  7433                           
  7434                           ; BSR set to: 61
  7435                           ;eadog.c: 60:  wdtdelay(350000);
  7436  01A332  0E30               	movlw	48
  7437  01A334  6EE6               	movwf	postinc1,c
  7438  01A336  0E57               	movlw	87
  7439  01A338  6EE6               	movwf	postinc1,c
  7440  01A33A  0E05               	movlw	5
  7441  01A33C  6EE6               	movwf	postinc1,c
  7442  01A33E  0E00               	movlw	0
  7443  01A340  6EE6               	movwf	postinc1,c
  7444  01A342  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7448  01A346  0E46               	movlw	70
  7449  01A348  6EE6               	movwf	postinc1,c
  7450  01A34A  EC10  F0DE         	call	_send_lcd_cmd_long	;wreg free
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7454  01A34E  0E41               	movlw	65
  7455  01A350  6EE6               	movwf	postinc1,c
  7456  01A352  EC30  F0DE         	call	_send_lcd_cmd	;wreg free
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;eadog.c: 63:  wdtdelay(80);
  7460  01A356  0E50               	movlw	80
  7461  01A358  6EE6               	movwf	postinc1,c
  7462  01A35A  0E00               	movlw	0
  7463  01A35C  6EE6               	movwf	postinc1,c
  7464  01A35E  0E00               	movlw	0
  7465  01A360  6EE6               	movwf	postinc1,c
  7466  01A362  0E00               	movlw	0
  7467  01A364  6EE6               	movwf	postinc1,c
  7468  01A366  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7472  01A36A  0E53               	movlw	83
  7473  01A36C  6EE6               	movwf	postinc1,c
  7474  01A36E  EC30  F0DE         	call	_send_lcd_cmd	;wreg free
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;eadog.c: 65:  send_lcd_data(2);
  7478  01A372  0E02               	movlw	2
  7479  01A374  6EE6               	movwf	postinc1,c
  7480  01A376  ECBE  F0E1         	call	_send_lcd_data	;wreg free
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;eadog.c: 66:  wdtdelay(80);
  7484  01A37A  0E50               	movlw	80
  7485  01A37C  6EE6               	movwf	postinc1,c
  7486  01A37E  0E00               	movlw	0
  7487  01A380  6EE6               	movwf	postinc1,c
  7488  01A382  0E00               	movlw	0
  7489  01A384  6EE6               	movwf	postinc1,c
  7490  01A386  0E00               	movlw	0
  7491  01A388  6EE6               	movwf	postinc1,c
  7492  01A38A  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7496  01A38E  0E51               	movlw	81
  7497  01A390  6EE6               	movwf	postinc1,c
  7498  01A392  EC10  F0DE         	call	_send_lcd_cmd_long	;wreg free
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7502  01A396  013D               	movlb	61	; () banked
  7503  01A398  9F14               	bcf	20,7,b	;volatile
  7504                           
  7505                           ; BSR set to: 61
  7506                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7507  01A39A  0E02               	movlw	2
  7508  01A39C  6F16               	movwf	22,b	;volatile
  7509                           
  7510                           ; BSR set to: 61
  7511                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7512  01A39E  8F14               	bsf	20,7,b	;volatile
  7513                           
  7514                           ; BSR set to: 61
  7515                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7516  01A3A0  931A               	bcf	26,1,b	;volatile
  7517                           
  7518                           ; BSR set to: 61
  7519                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7520  01A3A2  0E3F               	movlw	-193
  7521  01A3A4  013B               	movlb	59	; () banked
  7522  01A3A6  17FD               	andwf	253,f,b	;volatile
  7523                           
  7524                           ; BSR set to: 59
  7525                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7526  01A3A8  9BFD               	bcf	253,5,b	;volatile
  7527                           
  7528                           ; BSR set to: 59
  7529                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7530  01A3AA  51FD               	movf	253,w,b	;volatile
  7531  01A3AC  0BF9               	andlw	-7
  7532  01A3AE  0902               	iorlw	2
  7533  01A3B0  6FFD               	movwf	253,b	;volatile
  7534                           
  7535                           ; BSR set to: 59
  7536                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7537  01A3B2  0EE7               	movlw	-25
  7538  01A3B4  17FD               	andwf	253,f,b	;volatile
  7539                           
  7540                           ; BSR set to: 59
  7541                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7542  01A3B6  81FD               	bsf	253,0,b	;volatile
  7543                           
  7544                           ; BSR set to: 59
  7545                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7546  01A3B8  0E83               	movlw	low _ring_buf1
  7547  01A3BA  6FF9               	movwf	249,b	;volatile
  7548  01A3BC  0E03               	movlw	high _ring_buf1
  7549  01A3BE  6FFA               	movwf	250,b	;volatile
  7550  01A3C0  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7551  01A3C2  6FFB               	movwf	251,b	;volatile
  7552                           
  7553                           ; BSR set to: 59
  7554                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7555  01A3C4  9BFC               	bcf	252,5,b	;volatile
  7556                           
  7557                           ; BSR set to: 59
  7558                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7559  01A3C6  013D               	movlb	61	; () banked
  7560  01A3C8  831A               	bsf	26,1,b	;volatile
  7561                           
  7562                           ; BSR set to: 61
  7563                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7564  01A3CA  94BE               	bcf	190,2,c	;volatile
  7565                           
  7566                           ; BSR set to: 61
  7567                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7568  01A3CC  0012               	return		;funcret
  7569  01A3CE                     __end_of_init_display:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _send_lcd_data *****************
  7573 ;; Defined at:
  7574 ;;		line 123 in file "eadog.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  data            1  [STACK] const unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1  [STACK] void 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7583 ;; Tracked objects:
  7584 ;;		On entry : 3F/0
  7585 ;;		On exit  : 3F/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;Total ram usage:        0 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:   16
  7595 ;; This function calls:
  7596 ;;		_SPI1_Exchange8bit
  7597 ;;		_wdtdelay
  7598 ;; This function is called by:
  7599 ;;		_init_display
  7600 ;; This function uses a reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text12
  7604  01C37C                     __ptext12:
  7605                           	opt callstack 0
  7606  01C37C                     _send_lcd_data:
  7607                           	opt callstack 13
  7608                           
  7609                           ; BSR set to: 61
  7610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7611                           ;incstack = 0
  7612                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7613  01C37C  94BC               	bcf	188,2,c	;volatile
  7614                           
  7615                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7616                           ;stkvar	_data @ sp[(0)+-1]
  7617  01C37E  0EFF               	movlw	-1
  7618  01C380  50E3               	movf	plusw1,w,c
  7619  01C382  6EE6               	movwf	postinc1,c
  7620  01C384  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7621                           
  7622                           ; BSR set to: 57
  7623                           ;eadog.c: 127:  wdtdelay(8);
  7624  01C388  0E08               	movlw	8
  7625  01C38A  6EE6               	movwf	postinc1,c
  7626  01C38C  0E00               	movlw	0
  7627  01C38E  6EE6               	movwf	postinc1,c
  7628  01C390  0E00               	movlw	0
  7629  01C392  6EE6               	movwf	postinc1,c
  7630  01C394  0E00               	movlw	0
  7631  01C396  6EE6               	movwf	postinc1,c
  7632  01C398  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7633                           
  7634                           ; BSR set to: 0
  7635                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7636  01C39C  52E5               	movf	postdec1,f,c
  7637  01C39E  0012               	return		;funcret
  7638  01C3A0                     __end_of_send_lcd_data:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function _send_lcd_cmd_long *****************
  7642 ;; Defined at:
  7643 ;;		line 139 in file "eadog.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  cmd             1  [STACK] const unsigned char 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1  [STACK] void 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7652 ;; Tracked objects:
  7653 ;;		On entry : 3F/0
  7654 ;;		On exit  : 3F/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:   16
  7664 ;; This function calls:
  7665 ;;		_SPI1_Exchange8bit
  7666 ;;		_wdtdelay
  7667 ;; This function is called by:
  7668 ;;		_init_display
  7669 ;; This function uses a reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text13
  7673  01BC20                     __ptext13:
  7674                           	opt callstack 0
  7675  01BC20                     _send_lcd_cmd_long:
  7676                           	opt callstack 13
  7677                           
  7678                           ; BSR set to: 0
  7679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7680                           ;incstack = 0
  7681                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7682  01BC20  94BC               	bcf	188,2,c	;volatile
  7683                           
  7684                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7685  01BC22  0EFE               	movlw	254
  7686  01BC24  6EE6               	movwf	postinc1,c
  7687  01BC26  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7688                           
  7689                           ; BSR set to: 57
  7690                           ;eadog.c: 143:  wdtdelay(8);
  7691  01BC2A  0E08               	movlw	8
  7692  01BC2C  6EE6               	movwf	postinc1,c
  7693  01BC2E  0E00               	movlw	0
  7694  01BC30  6EE6               	movwf	postinc1,c
  7695  01BC32  0E00               	movlw	0
  7696  01BC34  6EE6               	movwf	postinc1,c
  7697  01BC36  0E00               	movlw	0
  7698  01BC38  6EE6               	movwf	postinc1,c
  7699  01BC3A  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7703                           ;stkvar	_cmd @ sp[(0)+-1]
  7704  01BC3E  0EFF               	movlw	-1
  7705  01BC40  50E3               	movf	plusw1,w,c
  7706  01BC42  6EE6               	movwf	postinc1,c
  7707  01BC44  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7708                           
  7709                           ;eadog.c: 145:  wdtdelay(800);
  7710  01BC48  0E20               	movlw	32
  7711  01BC4A  6EE6               	movwf	postinc1,c
  7712  01BC4C  0E03               	movlw	3
  7713  01BC4E  6EE6               	movwf	postinc1,c
  7714  01BC50  0E00               	movlw	0
  7715  01BC52  6EE6               	movwf	postinc1,c
  7716  01BC54  0E00               	movlw	0
  7717  01BC56  6EE6               	movwf	postinc1,c
  7718  01BC58  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7719                           
  7720                           ; BSR set to: 0
  7721                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7722  01BC5C  52E5               	movf	postdec1,f,c
  7723  01BC5E  0012               	return		;funcret
  7724  01BC60                     __end_of_send_lcd_cmd_long:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _send_lcd_cmd *****************
  7728 ;; Defined at:
  7729 ;;		line 130 in file "eadog.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  cmd             1  [STACK] const unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1  [STACK] void 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7738 ;; Tracked objects:
  7739 ;;		On entry : 3F/0
  7740 ;;		On exit  : 3F/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   16
  7750 ;; This function calls:
  7751 ;;		_SPI1_Exchange8bit
  7752 ;;		_wdtdelay
  7753 ;; This function is called by:
  7754 ;;		_init_display
  7755 ;; This function uses a reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text14
  7759  01BC60                     __ptext14:
  7760                           	opt callstack 0
  7761  01BC60                     _send_lcd_cmd:
  7762                           	opt callstack 13
  7763                           
  7764                           ; BSR set to: 0
  7765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7766                           ;incstack = 0
  7767                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7768  01BC60  94BC               	bcf	188,2,c	;volatile
  7769                           
  7770                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7771  01BC62  0EFE               	movlw	254
  7772  01BC64  6EE6               	movwf	postinc1,c
  7773  01BC66  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7774                           
  7775                           ; BSR set to: 57
  7776                           ;eadog.c: 134:  wdtdelay(8);
  7777  01BC6A  0E08               	movlw	8
  7778  01BC6C  6EE6               	movwf	postinc1,c
  7779  01BC6E  0E00               	movlw	0
  7780  01BC70  6EE6               	movwf	postinc1,c
  7781  01BC72  0E00               	movlw	0
  7782  01BC74  6EE6               	movwf	postinc1,c
  7783  01BC76  0E00               	movlw	0
  7784  01BC78  6EE6               	movwf	postinc1,c
  7785  01BC7A  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7789                           ;stkvar	_cmd @ sp[(0)+-1]
  7790  01BC7E  0EFF               	movlw	-1
  7791  01BC80  50E3               	movf	plusw1,w,c
  7792  01BC82  6EE6               	movwf	postinc1,c
  7793  01BC84  EC7D  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7794                           
  7795                           ;eadog.c: 136:  wdtdelay(8);
  7796  01BC88  0E08               	movlw	8
  7797  01BC8A  6EE6               	movwf	postinc1,c
  7798  01BC8C  0E00               	movlw	0
  7799  01BC8E  6EE6               	movwf	postinc1,c
  7800  01BC90  0E00               	movlw	0
  7801  01BC92  6EE6               	movwf	postinc1,c
  7802  01BC94  0E00               	movlw	0
  7803  01BC96  6EE6               	movwf	postinc1,c
  7804  01BC98  ECDA  F0DB         	call	_wdtdelay	;wreg free
  7805                           
  7806                           ; BSR set to: 0
  7807                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7808  01BC9C  52E5               	movf	postdec1,f,c
  7809  01BC9E  0012               	return		;funcret
  7810  01BCA0                     __end_of_send_lcd_cmd:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function _SPI1_Exchange8bit *****************
  7814 ;; Defined at:
  7815 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  data            1  [STACK] unsigned char 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1  [STACK] unsigned char 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 3F/39
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   15
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_send_lcd_data
  7840 ;;		_send_lcd_cmd
  7841 ;;		_send_lcd_cmd_long
  7842 ;;		_set_dac
  7843 ;; This function uses a reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text15
  7847  01C4FA                     __ptext15:
  7848                           	opt callstack 0
  7849  01C4FA                     _SPI1_Exchange8bit:
  7850                           	opt callstack 14
  7851                           
  7852                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7853                           
  7854                           ; BSR set to: 0
  7855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7856                           ;incstack = 0
  7857  01C4FA  0E01               	movlw	1
  7858  01C4FC  013D               	movlb	61	; () banked
  7859  01C4FE  6F12               	movwf	18,b	;volatile
  7860                           
  7861                           ; BSR set to: 61
  7862                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7863                           ;stkvar	_data @ sp[(0)+-1]
  7864  01C500  0EFF               	movlw	-1
  7865  01C502  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7866  01C508                     l807:
  7867                           
  7868                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7869  01C508  0139               	movlb	57	; () banked
  7870  01C50A  A9A2               	btfss	162,4,b	;volatile
  7871  01C50C  D7FD               	goto	l807
  7872                           
  7873                           ; BSR set to: 57
  7874                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7875  01C50E  006F F440  F001    	movff	15632,btemp	;volatile
  7876                           
  7877                           ; BSR set to: 57
  7878                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7879  01C514  52E5               	movf	postdec1,f,c
  7880  01C516  0012               	return		;funcret
  7881  01C518                     __end_of_SPI1_Exchange8bit:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function _ringBufS_init *****************
  7885 ;; Defined at:
  7886 ;;		line 22 in file "ringbufs.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  _this           2  [STACK] PTR volatile struct ring
  7889 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1  [STACK] void 
  7894 ;; Registers used:
  7895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/1
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:   16
  7908 ;; This function calls:
  7909 ;;		_memset
  7910 ;; This function is called by:
  7911 ;;		_init_display
  7912 ;; This function uses a reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text16
  7916  01C122                     __ptext16:
  7917                           	opt callstack 0
  7918  01C122                     _ringBufS_init:
  7919                           	opt callstack 13
  7920                           
  7921                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7922                           
  7923                           ; BSR set to: 57
  7924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7925                           ;incstack = 0
  7926  01C122  0E43               	movlw	67
  7927  01C124  6EE6               	movwf	postinc1,c
  7928  01C126  0E00               	movlw	0
  7929  01C128  6EE6               	movwf	postinc1,c
  7930  01C12A  0E00               	movlw	0
  7931  01C12C  6EE6               	movwf	postinc1,c
  7932  01C12E  0E00               	movlw	0
  7933  01C130  6EE6               	movwf	postinc1,c
  7934                           
  7935                           ;stkvar	__this @ sp[(-4)+-2]
  7936  01C132  0EFA               	movlw	-6
  7937  01C134  006F FF8F FFE6     	movff	plusw1,postinc1
  7938  01C13A  006F FF8F FFE6     	movff	plusw1,postinc1
  7939  01C140  EC5D  F0B7         	call	_memset	;wreg free
  7940                           
  7941                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7942  01C144  52E5               	movf	postdec1,f,c
  7943  01C146  52E5               	movf	postdec1,f,c
  7944  01C148  0012               	return		;funcret
  7945  01C14A                     __end_of_ringBufS_init:
  7946                           	opt callstack 0
  7947                           
  7948 ;; *************** function _init_bsoc *****************
  7949 ;; Defined at:
  7950 ;;		line 110 in file "bsoc.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;		None
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1  [STACK] void 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7968 ;;Total ram usage:        0 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:   18
  7971 ;; This function calls:
  7972 ;;		_TMR3_SetInterruptHandler
  7973 ;;		_Volts_to_SOC
  7974 ;;		___fldiv
  7975 ;;		___flmul
  7976 ;;		___fltol
  7977 ;;		___xxtofl
  7978 ;;		_conv_raw_result
  7979 ;; This function is called by:
  7980 ;;		_main
  7981 ;; This function uses a reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text17
  7985  017C30                     __ptext17:
  7986                           	opt callstack 0
  7987  017C30                     _init_bsoc:
  7988                           	opt callstack 12
  7989                           
  7990                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7991                           
  7992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7993                           ;incstack = 0
  7994  017C30  0E00               	movlw	0
  7995  017C32  6EE6               	movwf	postinc1,c
  7996  017C34  0E00               	movlw	0
  7997  017C36  6EE6               	movwf	postinc1,c
  7998  017C38  0E7A               	movlw	122
  7999  017C3A  6EE6               	movwf	postinc1,c
  8000  017C3C  0E44               	movlw	68
  8001  017C3E  6EE6               	movwf	postinc1,c
  8002  017C40  0E00               	movlw	0
  8003  017C42  6EE6               	movwf	postinc1,c
  8004  017C44  0E04               	movlw	4
  8005  017C46  6EE6               	movwf	postinc1,c
  8006  017C48  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8007  017C4C  0060  F007  FFE6   	movff	btemp,postinc1
  8008  017C52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8009  017C58  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8010  017C5E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8011  017C64  EC80  F0C8         	call	___fltol	;wreg free
  8012  017C68  0060  F007  FFE6   	movff	btemp,postinc1
  8013  017C6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8014  017C74  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8015  017C7A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8016  017C80  0E00               	movlw	0
  8017  017C82  6EE6               	movwf	postinc1,c
  8018  017C84  EC82  F0C3         	call	___xxtofl	;wreg free
  8019  017C88  0060  F007  FFE6   	movff	btemp,postinc1
  8020  017C8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8021  017C94  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8022  017C9A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8023  017CA0  EC20  F09F         	call	___flmul	;wreg free
  8024  017CA4  0060  F007  FFE6   	movff	btemp,postinc1
  8025  017CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8026  017CB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8027  017CB6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8028  017CBC  EC80  F0C8         	call	___fltol	;wreg free
  8029  017CC0  0060  F007  FFE6   	movff	btemp,postinc1
  8030  017CC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8031  017CCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8032  017CD2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8033  017CD8  ECFD  F0D3         	call	_Volts_to_SOC	;wreg free
  8034  017CDC  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  8035  017CE2  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  8036                           
  8037                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8038  017CE8  EE21  F38B         	lfsr	2,_C+140	;volatile
  8039  017CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  8040  017CF2  006F FF7B FFE6     	movff	postinc2,postinc1
  8041  017CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  8042  017CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  8043  017D04  0E00               	movlw	0
  8044  017D06  6EE6               	movwf	postinc1,c
  8045  017D08  0E00               	movlw	0
  8046  017D0A  6EE6               	movwf	postinc1,c
  8047  017D0C  0EC8               	movlw	200
  8048  017D0E  6EE6               	movwf	postinc1,c
  8049  017D10  0E42               	movlw	66
  8050  017D12  6EE6               	movwf	postinc1,c
  8051  017D14  0E00               	movlw	0
  8052  017D16  6EE6               	movwf	postinc1,c
  8053  017D18  0E00               	movlw	0
  8054  017D1A  6EE6               	movwf	postinc1,c
  8055  017D1C  0E7A               	movlw	122
  8056  017D1E  6EE6               	movwf	postinc1,c
  8057  017D20  0E44               	movlw	68
  8058  017D22  6EE6               	movwf	postinc1,c
  8059  017D24  0E00               	movlw	0
  8060  017D26  6EE6               	movwf	postinc1,c
  8061  017D28  0E04               	movlw	4
  8062  017D2A  6EE6               	movwf	postinc1,c
  8063  017D2C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8064  017D30  0060  F007  FFE6   	movff	btemp,postinc1
  8065  017D36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8066  017D3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8067  017D42  0060  F013  FFE6   	movff	btemp+3,postinc1
  8068  017D48  EC80  F0C8         	call	___fltol	;wreg free
  8069  017D4C  0060  F007  FFE6   	movff	btemp,postinc1
  8070  017D52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8071  017D58  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8072  017D5E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8073  017D64  0E00               	movlw	0
  8074  017D66  6EE6               	movwf	postinc1,c
  8075  017D68  EC82  F0C3         	call	___xxtofl	;wreg free
  8076  017D6C  0060  F007  FFE6   	movff	btemp,postinc1
  8077  017D72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8078  017D78  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8079  017D7E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8080  017D84  EC20  F09F         	call	___flmul	;wreg free
  8081  017D88  0060  F007  FFE6   	movff	btemp,postinc1
  8082  017D8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8083  017D94  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8084  017D9A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8085  017DA0  EC80  F0C8         	call	___fltol	;wreg free
  8086  017DA4  0060  F007  FFE6   	movff	btemp,postinc1
  8087  017DAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8088  017DB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8089  017DB6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8090  017DBC  ECFD  F0D3         	call	_Volts_to_SOC	;wreg free
  8091  017DC0  0060  F004  F00B   	movff	btemp,btemp+10
  8092  017DC6  0060  F008  F00C   	movff	btemp+1,btemp+11
  8093  017DCC  500B               	movf	(btemp+10)^0,w,c
  8094  017DCE  6E05               	movwf	(btemp+4)^0,c
  8095  017DD0  500C               	movf	(btemp+11)^0,w,c
  8096  017DD2  6E06               	movwf	(btemp+5)^0,c
  8097  017DD4  6A07               	clrf	(btemp+6)^0,c
  8098  017DD6  6A08               	clrf	(btemp+7)^0,c
  8099  017DD8  0060  F017  FFE6   	movff	btemp+4,postinc1
  8100  017DDE  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8101  017DE4  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8102  017DEA  0060  F023  FFE6   	movff	btemp+7,postinc1
  8103  017DF0  0E00               	movlw	0
  8104  017DF2  6EE6               	movwf	postinc1,c
  8105  017DF4  EC82  F0C3         	call	___xxtofl	;wreg free
  8106  017DF8  0060  F007  FFE6   	movff	btemp,postinc1
  8107  017DFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8108  017E04  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8109  017E0A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8110  017E10  EC13  F0A7         	call	___fldiv	;wreg free
  8111  017E14  0060  F007  FFE6   	movff	btemp,postinc1
  8112  017E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8113  017E20  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8114  017E26  0060  F013  FFE6   	movff	btemp+3,postinc1
  8115  017E2C  EC20  F09F         	call	___flmul	;wreg free
  8116  017E30  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8117  017E36  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8118  017E3C  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8119  017E42  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8120                           
  8121                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8122  017E48  EE21  F38F         	lfsr	2,_C+144	;volatile
  8123  017E4C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8124  017E52  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8125  017E58  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8126  017E5E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8127                           
  8128                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8129  017E64  0ED2               	movlw	low _calc_bsoc
  8130  017E66  6EE6               	movwf	postinc1,c
  8131  017E68  0E33               	movlw	high _calc_bsoc
  8132  017E6A  6EE6               	movwf	postinc1,c
  8133  017E6C  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8134  017E6E  6EE6               	movwf	postinc1,c
  8135  017E70  EC1D  F0E1         	call	_TMR3_SetInterruptHandler	;wreg free
  8136                           
  8137                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8138  017E74  0012               	return		;funcret
  8139  017E76                     __end_of_init_bsoc:
  8140                           	opt callstack 0
  8141                           
  8142 ;; *************** function _Volts_to_SOC *****************
  8143 ;; Defined at:
  8144 ;;		line 175 in file "bsoc.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  cvoltage        4  [STACK] const unsigned long 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  soc             2  [STACK] unsigned short 
  8149 ;;  slot            1  [STACK] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  2  [STACK] unsigned short 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;Total ram usage:        0 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:   15
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_init_bsoc
  8170 ;; This function uses a reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text18
  8174  01A7FA                     __ptext18:
  8175                           	opt callstack 0
  8176  01A7FA                     _Volts_to_SOC:
  8177                           	opt callstack 0
  8178                           
  8179                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8180  01A7FA  52E6               	movf	postinc1,f,c
  8181  01A7FC  52E6               	movf	postinc1,f,c
  8182  01A7FE  52E6               	movf	postinc1,f,c
  8183                           
  8184                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8185                           ;stkvar	_soc @ sp[(-3)+0]
  8186                           
  8187                           ;incstack = 0
  8188  01A800  0EFD               	movlw	-3
  8189  01A802  6AE3               	clrf	plusw1,c
  8190  01A804  0EFE               	movlw	-2
  8191  01A806  6AE3               	clrf	plusw1,c
  8192                           
  8193                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8194                           ;stkvar	_slot @ sp[(-3)+2]
  8195  01A808  0EFF               	movlw	-1
  8196  01A80A  6AE3               	clrf	plusw1,c
  8197  01A80C                     l10960:
  8198                           
  8199                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8200                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8201                           ;stkvar	_slot @ sp[(-3)+2]
  8202  01A80C  0EFF               	movlw	-1
  8203  01A80E  50E3               	movf	plusw1,w,c
  8204  01A810  0D08               	mullw	8
  8205  01A812  0E9F               	movlw	low _BVSOC_TABLE
  8206  01A814  24F3               	addwf	243,w,c
  8207  01A816  6EF6               	movwf	tblptrl,c
  8208  01A818  0EF9               	movlw	high _BVSOC_TABLE
  8209  01A81A  20F4               	addwfc	244,w,c
  8210  01A81C  6EF7               	movwf	tblptrh,c
  8211  01A81E                     	if	1	;There are 3 active tblptr bytes
  8212  01A81E  6AF8               	clrf	tblptru,c
  8213  01A820  0E00               	movlw	low (__mediumconst shr (0+16))
  8214  01A822  22F8               	addwfc	tblptru,f,c
  8215  01A824                     	endif
  8216  01A824  0EF9               	movlw	-7
  8217  01A826  50E3               	movf	plusw1,w,c
  8218  01A828  0009               	tblrd		*+
  8219  01A82A  5CF5               	subwf	tablat,w,c
  8220  01A82C  0EFA               	movlw	-6
  8221  01A82E  50E3               	movf	plusw1,w,c
  8222  01A830  0009               	tblrd		*+
  8223  01A832  58F5               	subwfb	tablat,w,c
  8224  01A834  0EFB               	movlw	-5
  8225  01A836  50E3               	movf	plusw1,w,c
  8226  01A838  0009               	tblrd		*+
  8227  01A83A  58F5               	subwfb	tablat,w,c
  8228  01A83C  0EFC               	movlw	-4
  8229  01A83E  50E3               	movf	plusw1,w,c
  8230  01A840  0009               	tblrd		*+
  8231  01A842  58F5               	subwfb	tablat,w,c
  8232  01A844  B0D8               	btfsc	status,0,c
  8233  01A846  D020               	goto	l10964
  8234                           
  8235                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8236                           ;stkvar	_slot @ sp[(-3)+2]
  8237  01A848  0EFF               	movlw	-1
  8238  01A84A  50E3               	movf	plusw1,w,c
  8239  01A84C  0D08               	mullw	8
  8240  01A84E  0E04               	movlw	4
  8241  01A850  26F3               	addwf	243,f,c
  8242  01A852  0E00               	movlw	0
  8243  01A854  22F4               	addwfc	244,f,c
  8244  01A856  0E9F               	movlw	low _BVSOC_TABLE
  8245  01A858  24F3               	addwf	243,w,c
  8246  01A85A  6EF6               	movwf	tblptrl,c
  8247  01A85C  0EF9               	movlw	high _BVSOC_TABLE
  8248  01A85E  20F4               	addwfc	244,w,c
  8249  01A860  6EF7               	movwf	tblptrh,c
  8250  01A862                     	if	1	;There are 3 active tblptr bytes
  8251  01A862  6AF8               	clrf	tblptru,c
  8252  01A864  0E00               	movlw	low (__mediumconst shr (0+16))
  8253  01A866  22F8               	addwfc	tblptru,f,c
  8254  01A868                     	endif
  8255  01A868  0009               	tblrd		*+
  8256  01A86A  006F FFD4  F00B    	movff	tablat,btemp+10
  8257  01A870  0009               	tblrd		*+
  8258  01A872  006F FFD4  F00C    	movff	tablat,btemp+11
  8259                           
  8260                           ;stkvar	_soc @ sp[(-3)+0]
  8261  01A878  0EFD               	movlw	-3
  8262  01A87A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8263  01A880  0EFE               	movlw	-2
  8264  01A882  0060  F033  FFE3   	movff	btemp+11,plusw1
  8265  01A888                     l10964:
  8266                           
  8267                           ;bsoc.c: 187:  }
  8268                           ;stkvar	_slot @ sp[(-3)+2]
  8269  01A888  0EFF               	movlw	-1
  8270  01A88A  2AE3               	incf	plusw1,f,c
  8271                           
  8272                           ;stkvar	_slot @ sp[(-3)+2]
  8273  01A88C  0EFF               	movlw	-1
  8274  01A88E  006F FF8C  F001    	movff	plusw1,btemp
  8275  01A894  0E19               	movlw	25
  8276  01A896  6401               	cpfsgt	btemp^0,c
  8277  01A898  D7B9               	goto	l10960
  8278                           
  8279                           ;bsoc.c: 188:  return soc;
  8280                           ;stkvar	_soc @ sp[(-3)+0]
  8281  01A89A  0EFD               	movlw	-3
  8282  01A89C  006F FF8C  F001    	movff	plusw1,btemp
  8283  01A8A2  0EFE               	movlw	-2
  8284  01A8A4  006F FF8C  F002    	movff	plusw1,btemp+1
  8285                           
  8286                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8287  01A8AA  0EF9               	movlw	249
  8288  01A8AC  26E1               	addwf	fsr1l,f,c
  8289  01A8AE  0EFF               	movlw	255
  8290  01A8B0  22E2               	addwfc	fsr1h,f,c
  8291  01A8B2  0012               	return		;funcret
  8292  01A8B4                     __end_of_Volts_to_SOC:
  8293                           	opt callstack 0
  8294                           
  8295 ;; *************** function _hid_display *****************
  8296 ;; Defined at:
  8297 ;;		line 22 in file "hid.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  h               2  [STACK] PTR struct H_data
  8300 ;;		 -> H(9), 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  2  [STACK] PTR struct H_data
  8305 ;; Registers used:
  8306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8307 ;; Tracked objects:
  8308 ;;		On entry : 3F/39
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:   17
  8319 ;; This function calls:
  8320 ;;		_hid_input
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;; This function uses a reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text19
  8327  0182D6                     __ptext19:
  8328                           	opt callstack 0
  8329  0182D6                     _hid_display:
  8330                           	opt callstack 13
  8331                           
  8332                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8333                           ;stkvar	_h @ sp[(0)+-2]
  8334                           
  8335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8336                           ;incstack = 0
  8337  0182D6  0EFE               	movlw	-2
  8338  0182D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8339  0182DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8340  0182E4  EC83  F0CC         	call	_hid_input	;wreg free
  8341                           
  8342                           ;hid.c: 26:  switch (h->h_state) {
  8343  0182E8  D0E6               	goto	l13386
  8344  0182EA                     l13360:
  8345                           
  8346                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8347                           ;stkvar	_h @ sp[(0)+-2]
  8348  0182EA  0EFE               	movlw	-2
  8349  0182EC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8350  0182F2  0EFF               	movlw	-1
  8351  0182F4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8352  0182FA  0E01               	movlw	1
  8353  0182FC  240B               	addwf	(btemp+10)^0,w,c
  8354  0182FE  6ED9               	movwf	fsr2l,c
  8355  018300  0E00               	movlw	0
  8356  018302  200C               	addwfc	(btemp+11)^0,w,c
  8357  018304  6EDA               	movwf	fsr2h,c
  8358  018306  0E01               	movlw	1
  8359  018308  6EDF               	movwf	indf2,c
  8360                           
  8361                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8362                           ;stkvar	_h @ sp[(0)+-2]
  8363  01830A  0EFE               	movlw	-2
  8364  01830C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8365  018312  0EFF               	movlw	-1
  8366  018314  006F FF8F FFDA     	movff	plusw1,fsr2h
  8367  01831A  0E00               	movlw	0
  8368  01831C  6EDF               	movwf	indf2,c
  8369                           
  8370                           ;hid.c: 30:   h->wait_enter = 1;
  8371                           ;stkvar	_h @ sp[(0)+-2]
  8372  01831E  0EFE               	movlw	-2
  8373  018320  006F FF8C  F00B    	movff	plusw1,btemp+10
  8374  018326  0EFF               	movlw	-1
  8375  018328  006F FF8C  F00C    	movff	plusw1,btemp+11
  8376  01832E  0E04               	movlw	4
  8377  018330  240B               	addwf	(btemp+10)^0,w,c
  8378  018332  6ED9               	movwf	fsr2l,c
  8379  018334  0E00               	movlw	0
  8380  018336  200C               	addwfc	(btemp+11)^0,w,c
  8381  018338  6EDA               	movwf	fsr2h,c
  8382  01833A  0E01               	movlw	1
  8383  01833C  6EDF               	movwf	indf2,c
  8384                           
  8385                           ;hid.c: 31:   h->wait_select = 1;
  8386                           ;stkvar	_h @ sp[(0)+-2]
  8387  01833E  0EFE               	movlw	-2
  8388  018340  006F FF8C  F00B    	movff	plusw1,btemp+10
  8389  018346  0EFF               	movlw	-1
  8390  018348  006F FF8C  F00C    	movff	plusw1,btemp+11
  8391  01834E  0E02               	movlw	2
  8392  018350  240B               	addwf	(btemp+10)^0,w,c
  8393  018352  6ED9               	movwf	fsr2l,c
  8394  018354  0E00               	movlw	0
  8395  018356  200C               	addwfc	(btemp+11)^0,w,c
  8396  018358  6EDA               	movwf	fsr2h,c
  8397  01835A  0E01               	movlw	1
  8398  01835C  6EDF               	movwf	indf2,c
  8399                           
  8400                           ;hid.c: 32:   h->wait_calib = 1;
  8401                           ;stkvar	_h @ sp[(0)+-2]
  8402  01835E  0EFE               	movlw	-2
  8403  018360  006F FF8C  F00B    	movff	plusw1,btemp+10
  8404  018366  0EFF               	movlw	-1
  8405  018368  006F FF8C  F00C    	movff	plusw1,btemp+11
  8406  01836E  0E06               	movlw	6
  8407  018370  240B               	addwf	(btemp+10)^0,w,c
  8408  018372  6ED9               	movwf	fsr2l,c
  8409  018374  0E00               	movlw	0
  8410  018376  200C               	addwfc	(btemp+11)^0,w,c
  8411  018378  6EDA               	movwf	fsr2h,c
  8412  01837A  0E01               	movlw	1
  8413  01837C  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;hid.c: 33:   h->select_p = SW_OFF;
  8416                           ;stkvar	_h @ sp[(0)+-2]
  8417  01837E  0EFE               	movlw	-2
  8418  018380  006F FF8C  F00B    	movff	plusw1,btemp+10
  8419  018386  0EFF               	movlw	-1
  8420  018388  006F FF8C  F00C    	movff	plusw1,btemp+11
  8421  01838E  0E03               	movlw	3
  8422  018390  240B               	addwf	(btemp+10)^0,w,c
  8423  018392  6ED9               	movwf	fsr2l,c
  8424  018394  0E00               	movlw	0
  8425  018396  200C               	addwfc	(btemp+11)^0,w,c
  8426  018398  6EDA               	movwf	fsr2h,c
  8427  01839A  0E00               	movlw	0
  8428  01839C  6EDF               	movwf	indf2,c
  8429                           
  8430                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8431                           ;stkvar	_h @ sp[(0)+-2]
  8432  01839E  0EFE               	movlw	-2
  8433  0183A0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8434  0183A6  0EFF               	movlw	-1
  8435  0183A8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8436  0183AE  0E05               	movlw	5
  8437  0183B0  240B               	addwf	(btemp+10)^0,w,c
  8438  0183B2  6ED9               	movwf	fsr2l,c
  8439  0183B4  0E00               	movlw	0
  8440  0183B6  200C               	addwfc	(btemp+11)^0,w,c
  8441  0183B8  6EDA               	movwf	fsr2h,c
  8442  0183BA  0E00               	movlw	0
  8443  0183BC  6EDF               	movwf	indf2,c
  8444                           
  8445                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8446                           ;stkvar	_h @ sp[(0)+-2]
  8447  0183BE  0EFE               	movlw	-2
  8448  0183C0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8449  0183C6  0EFF               	movlw	-1
  8450  0183C8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8451  0183CE  0E07               	movlw	7
  8452  0183D0  240B               	addwf	(btemp+10)^0,w,c
  8453  0183D2  6ED9               	movwf	fsr2l,c
  8454  0183D4  0E00               	movlw	0
  8455  0183D6  200C               	addwfc	(btemp+11)^0,w,c
  8456  0183D8  6EDA               	movwf	fsr2h,c
  8457  0183DA  0E00               	movlw	0
  8458  0183DC  D06A               	goto	L4
  8459  0183DE                     l13376:
  8460                           
  8461                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8462                           ;stkvar	_h @ sp[(0)+-2]
  8463  0183DE  0EFE               	movlw	-2
  8464  0183E0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8465  0183E6  0EFF               	movlw	-1
  8466  0183E8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8467  0183EE  0E02               	movlw	2
  8468  0183F0  240B               	addwf	(btemp+10)^0,w,c
  8469  0183F2  6ED9               	movwf	fsr2l,c
  8470  0183F4  0E00               	movlw	0
  8471  0183F6  200C               	addwfc	(btemp+11)^0,w,c
  8472  0183F8  6EDA               	movwf	fsr2h,c
  8473  0183FA  50DF               	movf	indf2,w,c
  8474  0183FC  A4D8               	btfss	status,2,c
  8475  0183FE  D076               	goto	l2077
  8476                           
  8477                           ;stkvar	_h @ sp[(0)+-2]
  8478  018400  0EFE               	movlw	-2
  8479  018402  006F FF8C  F00B    	movff	plusw1,btemp+10
  8480  018408  0EFF               	movlw	-1
  8481  01840A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8482  018410  0E03               	movlw	3
  8483  018412  240B               	addwf	(btemp+10)^0,w,c
  8484  018414  6ED9               	movwf	fsr2l,c
  8485  018416  0E00               	movlw	0
  8486  018418  200C               	addwfc	(btemp+11)^0,w,c
  8487  01841A  6EDA               	movwf	fsr2h,c
  8488  01841C  50DF               	movf	indf2,w,c
  8489  01841E  A4D8               	btfss	status,2,c
  8490  018420  D065               	goto	l2077
  8491                           
  8492                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8493                           ;stkvar	_h @ sp[(0)+-2]
  8494  018422  0EFE               	movlw	-2
  8495  018424  006F FF8C  F00B    	movff	plusw1,btemp+10
  8496  01842A  0EFF               	movlw	-1
  8497  01842C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8498  018432  0E08               	movlw	8
  8499  018434  240B               	addwf	(btemp+10)^0,w,c
  8500  018436  6ED9               	movwf	fsr2l,c
  8501  018438  0E00               	movlw	0
  8502  01843A  200C               	addwfc	(btemp+11)^0,w,c
  8503  01843C  6EDA               	movwf	fsr2h,c
  8504                           
  8505                           ;stkvar	_h @ sp[(0)+-2]
  8506  01843E  0EFE               	movlw	-2
  8507  018440  006F FF8C  F00B    	movff	plusw1,btemp+10
  8508  018446  0EFF               	movlw	-1
  8509  018448  006F FF8C  F00C    	movff	plusw1,btemp+11
  8510  01844E  0E08               	movlw	8
  8511  018450  240B               	addwf	(btemp+10)^0,w,c
  8512  018452  6EE9               	movwf	fsr0l,c
  8513  018454  0E00               	movlw	0
  8514  018456  200C               	addwfc	(btemp+11)^0,w,c
  8515  018458  6EEA               	movwf	fsr0h,c
  8516  01845A  2AEF               	incf	indf0,f,c
  8517  01845C  50EF               	movf	indf0,w,c
  8518  01845E  0B03               	andlw	3
  8519  018460  6EDF               	movwf	indf2,c
  8520                           
  8521                           ;hid.c: 41:    h->hid_display = h->sequence;
  8522                           ;stkvar	_h @ sp[(0)+-2]
  8523  018462  0EFE               	movlw	-2
  8524  018464  006F FF8C  F00B    	movff	plusw1,btemp+10
  8525  01846A  0EFF               	movlw	-1
  8526  01846C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8527  018472  0E08               	movlw	8
  8528  018474  240B               	addwf	(btemp+10)^0,w,c
  8529  018476  6ED9               	movwf	fsr2l,c
  8530  018478  0E00               	movlw	0
  8531  01847A  200C               	addwfc	(btemp+11)^0,w,c
  8532  01847C  6EDA               	movwf	fsr2h,c
  8533                           
  8534                           ;stkvar	_h @ sp[(0)+-2]
  8535  01847E  0EFE               	movlw	-2
  8536  018480  006F FF8F FFE9     	movff	plusw1,fsr0l
  8537  018486  0EFF               	movlw	-1
  8538  018488  006F FF8F FFEA     	movff	plusw1,fsr0h
  8539  01848E  006F FF7F FFEF     	movff	indf2,indf0
  8540                           
  8541                           ;hid.c: 42:    h->wait_select = 1;
  8542                           ;stkvar	_h @ sp[(0)+-2]
  8543  018494  0EFE               	movlw	-2
  8544  018496  006F FF8C  F00B    	movff	plusw1,btemp+10
  8545  01849C  0EFF               	movlw	-1
  8546  01849E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8547  0184A4  0E02               	movlw	2
  8548  0184A6  240B               	addwf	(btemp+10)^0,w,c
  8549  0184A8  6ED9               	movwf	fsr2l,c
  8550  0184AA  0E00               	movlw	0
  8551  0184AC  200C               	addwfc	(btemp+11)^0,w,c
  8552  0184AE  6EDA               	movwf	fsr2h,c
  8553  0184B0  0E01               	movlw	1
  8554  0184B2                     L4:
  8555  0184B2  6EDF               	movwf	indf2,c
  8556  0184B4  D01B               	goto	l2077
  8557  0184B6                     l13386:
  8558                           
  8559                           ;stkvar	_h @ sp[(0)+-2]
  8560  0184B6  0EFE               	movlw	-2
  8561  0184B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8562  0184BE  0EFF               	movlw	-1
  8563  0184C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8564  0184C6  0E01               	movlw	1
  8565  0184C8  240B               	addwf	(btemp+10)^0,w,c
  8566  0184CA  6ED9               	movwf	fsr2l,c
  8567  0184CC  0E00               	movlw	0
  8568  0184CE  200C               	addwfc	(btemp+11)^0,w,c
  8569  0184D0  6EDA               	movwf	fsr2h,c
  8570  0184D2  50DF               	movf	indf2,w,c
  8571  0184D4  6E0B               	movwf	(btemp+10)^0,c
  8572  0184D6  6A0C               	clrf	(btemp+11)^0,c
  8573                           
  8574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8575                           ; Switch size 1, requested type "simple"
  8576                           ; Number of cases is 1, Range of values is 0 to 0
  8577                           ; switch strategies available:
  8578                           ; Name         Instructions Cycles
  8579                           ; simple_byte            4     3 (average)
  8580                           ;	Chosen strategy is simple_byte
  8581  0184D8  500C               	movf	(btemp+11)^0,w,c
  8582  0184DA  0A00               	xorlw	0	; case 0
  8583  0184DC  A4D8               	btfss	status,2,c
  8584  0184DE  D77F               	goto	l13376
  8585                           
  8586                           ; Switch size 1, requested type "simple"
  8587                           ; Number of cases is 2, Range of values is 0 to 1
  8588                           ; switch strategies available:
  8589                           ; Name         Instructions Cycles
  8590                           ; simple_byte            7     4 (average)
  8591                           ;	Chosen strategy is simple_byte
  8592  0184E0  500B               	movf	(btemp+10)^0,w,c
  8593  0184E2  0A00               	xorlw	0	; case 0
  8594  0184E4  B4D8               	btfsc	status,2,c
  8595  0184E6  D701               	goto	l13360
  8596  0184E8  0A01               	xorlw	1	; case 1
  8597  0184EA  D779               	goto	l13376
  8598  0184EC                     l2077:
  8599                           
  8600                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8601  0184EC  52E5               	movf	postdec1,f,c
  8602  0184EE  52E5               	movf	postdec1,f,c
  8603  0184F0  0012               	return		;funcret
  8604  0184F2                     __end_of_hid_display:
  8605                           	opt callstack 0
  8606                           
  8607 ;; *************** function _hid_input *****************
  8608 ;; Defined at:
  8609 ;;		line 3 in file "hid.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  h               2  [STACK] PTR struct H_data
  8612 ;;		 -> H(9), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  2  [STACK] PTR struct H_data
  8617 ;; Registers used:
  8618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/39
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:   16
  8631 ;; This function calls:
  8632 ;;		_get_switch
  8633 ;; This function is called by:
  8634 ;;		_hid_display
  8635 ;; This function uses a reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text20
  8639  019906                     __ptext20:
  8640                           	opt callstack 0
  8641  019906                     _hid_input:
  8642                           	opt callstack 13
  8643                           
  8644                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8645                           
  8646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8647                           ;incstack = 0
  8648  019906  0E02               	movlw	2
  8649  019908  6EE6               	movwf	postinc1,c
  8650  01990A  EC39  F0E0         	call	_get_switch	;wreg free
  8651  01990E  5001               	movf	btemp^0,w,c
  8652  019910  B4D8               	btfsc	status,2,c
  8653  019912  D02C               	goto	l13190
  8654                           
  8655                           ;hid.c: 6:   h->wait_select = 0;
  8656                           ;stkvar	_h @ sp[(0)+-2]
  8657  019914  0EFE               	movlw	-2
  8658  019916  006F FF8C  F00B    	movff	plusw1,btemp+10
  8659  01991C  0EFF               	movlw	-1
  8660  01991E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8661  019924  0E02               	movlw	2
  8662  019926  240B               	addwf	(btemp+10)^0,w,c
  8663  019928  6ED9               	movwf	fsr2l,c
  8664  01992A  0E00               	movlw	0
  8665  01992C  200C               	addwfc	(btemp+11)^0,w,c
  8666  01992E  6EDA               	movwf	fsr2h,c
  8667  019930  0E00               	movlw	0
  8668  019932  6EDF               	movwf	indf2,c
  8669                           
  8670                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8671  019934  0E02               	movlw	2
  8672  019936  6EE6               	movwf	postinc1,c
  8673  019938  EC39  F0E0         	call	_get_switch	;wreg free
  8674  01993C  5001               	movf	btemp^0,w,c
  8675  01993E  B4D8               	btfsc	status,2,c
  8676  019940  D003               	goto	u12610
  8677  019942  6A0C               	clrf	(btemp+11)^0,c
  8678  019944  2A0C               	incf	(btemp+11)^0,f,c
  8679  019946  D001               	goto	u12628
  8680  019948                     u12610:
  8681  019948  6A0C               	clrf	(btemp+11)^0,c
  8682  01994A                     u12628:
  8683                           
  8684                           ;stkvar	_h @ sp[(0)+-2]
  8685  01994A  0EFE               	movlw	-2
  8686  01994C  006F FF8C  F009    	movff	plusw1,btemp+8
  8687  019952  0EFF               	movlw	-1
  8688  019954  006F FF8C  F00A    	movff	plusw1,btemp+9
  8689  01995A  0E03               	movlw	3
  8690  01995C  2409               	addwf	(btemp+8)^0,w,c
  8691  01995E  6ED9               	movwf	fsr2l,c
  8692  019960  0E00               	movlw	0
  8693  019962  200A               	addwfc	(btemp+9)^0,w,c
  8694  019964  6EDA               	movwf	fsr2h,c
  8695  019966  0060  F033  FFDF   	movff	btemp+11,indf2
  8696  01996C                     l13190:
  8697                           
  8698                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8699  01996C  0E03               	movlw	3
  8700  01996E  6EE6               	movwf	postinc1,c
  8701  019970  EC39  F0E0         	call	_get_switch	;wreg free
  8702  019974  5001               	movf	btemp^0,w,c
  8703  019976  B4D8               	btfsc	status,2,c
  8704  019978  D02C               	goto	l13196
  8705                           
  8706                           ;hid.c: 11:   h->wait_enter = 0;
  8707                           ;stkvar	_h @ sp[(0)+-2]
  8708  01997A  0EFE               	movlw	-2
  8709  01997C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8710  019982  0EFF               	movlw	-1
  8711  019984  006F FF8C  F00C    	movff	plusw1,btemp+11
  8712  01998A  0E04               	movlw	4
  8713  01998C  240B               	addwf	(btemp+10)^0,w,c
  8714  01998E  6ED9               	movwf	fsr2l,c
  8715  019990  0E00               	movlw	0
  8716  019992  200C               	addwfc	(btemp+11)^0,w,c
  8717  019994  6EDA               	movwf	fsr2h,c
  8718  019996  0E00               	movlw	0
  8719  019998  6EDF               	movwf	indf2,c
  8720                           
  8721                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8722  01999A  0E03               	movlw	3
  8723  01999C  6EE6               	movwf	postinc1,c
  8724  01999E  EC39  F0E0         	call	_get_switch	;wreg free
  8725  0199A2  5001               	movf	btemp^0,w,c
  8726  0199A4  B4D8               	btfsc	status,2,c
  8727  0199A6  D003               	goto	u12640
  8728  0199A8  6A0C               	clrf	(btemp+11)^0,c
  8729  0199AA  2A0C               	incf	(btemp+11)^0,f,c
  8730  0199AC  D001               	goto	u12658
  8731  0199AE                     u12640:
  8732  0199AE  6A0C               	clrf	(btemp+11)^0,c
  8733  0199B0                     u12658:
  8734                           
  8735                           ;stkvar	_h @ sp[(0)+-2]
  8736  0199B0  0EFE               	movlw	-2
  8737  0199B2  006F FF8C  F009    	movff	plusw1,btemp+8
  8738  0199B8  0EFF               	movlw	-1
  8739  0199BA  006F FF8C  F00A    	movff	plusw1,btemp+9
  8740  0199C0  0E05               	movlw	5
  8741  0199C2  2409               	addwf	(btemp+8)^0,w,c
  8742  0199C4  6ED9               	movwf	fsr2l,c
  8743  0199C6  0E00               	movlw	0
  8744  0199C8  200A               	addwfc	(btemp+9)^0,w,c
  8745  0199CA  6EDA               	movwf	fsr2h,c
  8746  0199CC  0060  F033  FFDF   	movff	btemp+11,indf2
  8747  0199D2                     l13196:
  8748                           
  8749                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8750  0199D2  0E04               	movlw	4
  8751  0199D4  6EE6               	movwf	postinc1,c
  8752  0199D6  EC39  F0E0         	call	_get_switch	;wreg free
  8753  0199DA  5001               	movf	btemp^0,w,c
  8754  0199DC  B4D8               	btfsc	status,2,c
  8755  0199DE  D02C               	goto	l2068
  8756                           
  8757                           ;hid.c: 16:   h->wait_calib = 0;
  8758                           ;stkvar	_h @ sp[(0)+-2]
  8759  0199E0  0EFE               	movlw	-2
  8760  0199E2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8761  0199E8  0EFF               	movlw	-1
  8762  0199EA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8763  0199F0  0E06               	movlw	6
  8764  0199F2  240B               	addwf	(btemp+10)^0,w,c
  8765  0199F4  6ED9               	movwf	fsr2l,c
  8766  0199F6  0E00               	movlw	0
  8767  0199F8  200C               	addwfc	(btemp+11)^0,w,c
  8768  0199FA  6EDA               	movwf	fsr2h,c
  8769  0199FC  0E00               	movlw	0
  8770  0199FE  6EDF               	movwf	indf2,c
  8771                           
  8772                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8773  019A00  0E04               	movlw	4
  8774  019A02  6EE6               	movwf	postinc1,c
  8775  019A04  EC39  F0E0         	call	_get_switch	;wreg free
  8776  019A08  5001               	movf	btemp^0,w,c
  8777  019A0A  B4D8               	btfsc	status,2,c
  8778  019A0C  D003               	goto	u12670
  8779  019A0E  6A0C               	clrf	(btemp+11)^0,c
  8780  019A10  2A0C               	incf	(btemp+11)^0,f,c
  8781  019A12  D001               	goto	u12688
  8782  019A14                     u12670:
  8783  019A14  6A0C               	clrf	(btemp+11)^0,c
  8784  019A16                     u12688:
  8785                           
  8786                           ;stkvar	_h @ sp[(0)+-2]
  8787  019A16  0EFE               	movlw	-2
  8788  019A18  006F FF8C  F009    	movff	plusw1,btemp+8
  8789  019A1E  0EFF               	movlw	-1
  8790  019A20  006F FF8C  F00A    	movff	plusw1,btemp+9
  8791  019A26  0E07               	movlw	7
  8792  019A28  2409               	addwf	(btemp+8)^0,w,c
  8793  019A2A  6ED9               	movwf	fsr2l,c
  8794  019A2C  0E00               	movlw	0
  8795  019A2E  200A               	addwfc	(btemp+9)^0,w,c
  8796  019A30  6EDA               	movwf	fsr2h,c
  8797  019A32  0060  F033  FFDF   	movff	btemp+11,indf2
  8798  019A38                     l2068:
  8799                           
  8800                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8801  019A38  52E5               	movf	postdec1,f,c
  8802  019A3A  52E5               	movf	postdec1,f,c
  8803  019A3C  0012               	return		;funcret
  8804  019A3E                     __end_of_hid_input:
  8805                           	opt callstack 0
  8806                           
  8807 ;; *************** function _get_switch *****************
  8808 ;; Defined at:
  8809 ;;		line 18 in file "dio.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  i               1  [STACK] const unsigned char 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;		None
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1  [STACK] enum E17021
  8816 ;; Registers used:
  8817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8827 ;;Total ram usage:        0 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:   15
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_main
  8834 ;;		_hid_input
  8835 ;; This function uses a reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text21
  8839  01C072                     __ptext21:
  8840                           	opt callstack 0
  8841  01C072                     _get_switch:
  8842                           	opt callstack 13
  8843                           
  8844                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
  8845                           ;stkvar	_i @ sp[(0)+-1]
  8846                           
  8847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8848                           ;incstack = 0
  8849  01C072  0EFF               	movlw	-1
  8850  01C074  006F FF8C  F001    	movff	plusw1,btemp
  8851  01C07A  0E05               	movlw	5
  8852  01C07C  6401               	cpfsgt	btemp^0,c
  8853  01C07E  D002               	goto	l10164
  8854                           
  8855                           ;dio.c: 21:   return SW_OFF;
  8856  01C080  0E00               	movlw	0
  8857  01C082  D00A               	goto	L5
  8858  01C084                     l10164:
  8859                           
  8860                           ;dio.c: 23:  return S.button[i].sw;
  8861                           ;stkvar	_i @ sp[(0)+-1]
  8862  01C084  0EFF               	movlw	-1
  8863  01C086  50E3               	movf	plusw1,w,c
  8864  01C088  0D05               	mullw	5
  8865  01C08A  0E54               	movlw	low _S
  8866  01C08C  24F3               	addwf	243,w,c
  8867  01C08E  6ED9               	movwf	fsr2l,c
  8868  01C090  0E02               	movlw	high _S
  8869  01C092  20F4               	addwfc	prodh,w,c
  8870  01C094  6EDA               	movwf	fsr2h,c
  8871  01C096  50DF               	movf	indf2,w,c
  8872  01C098                     L5:
  8873  01C098  6E01               	movwf	btemp^0,c
  8874                           
  8875                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8876  01C09A  52E5               	movf	postdec1,f,c
  8877  01C09C  0012               	return		;funcret
  8878  01C09E                     __end_of_get_switch:
  8879                           	opt callstack 0
  8880                           
  8881 ;; *************** function _esr_check *****************
  8882 ;; Defined at:
  8883 ;;		line 197 in file "bsoc.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  fsm             1  [STACK] const unsigned char 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  4  [STACK] float 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:   18
  8904 ;; This function calls:
  8905 ;;		_StartTimer
  8906 ;;		_TimerDone
  8907 ;;		___fldiv
  8908 ;;		___flsub
  8909 ;;		_conv_raw_result
  8910 ;;		_fabsf
  8911 ;;		_set_load_relay_one
  8912 ;;		_set_load_relay_two
  8913 ;;		_update_adc_result
  8914 ;; This function is called by:
  8915 ;;		_main
  8916 ;; This function uses a reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text22
  8920  0171A6                     __ptext22:
  8921                           	opt callstack 0
  8922  0171A6                     _esr_check:
  8923                           	opt callstack 12
  8924                           
  8925                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8926                           ;stkvar	_fsm @ sp[(0)+-1]
  8927                           
  8928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8929                           ;incstack = 0
  8930  0171A6  0EFF               	movlw	-1
  8931  0171A8  50E3               	movf	plusw1,w,c
  8932  0171AA  B4D8               	btfsc	status,2,c
  8933  0171AC  D149               	goto	l11316
  8934                           
  8935                           ;bsoc.c: 202:   esr_state = 0;
  8936  0171AE  0100               	movlb	0	; () banked
  8937  0171B0  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;bsoc.c: 203:   return -10.0;
  8941  0171B2  0E00               	movlw	0
  8942  0171B4  6E01               	movwf	btemp^0,c
  8943  0171B6  0E00               	movlw	0
  8944  0171B8  6E02               	movwf	(btemp+1)^0,c
  8945  0171BA  0E20               	movlw	32
  8946  0171BC  6E03               	movwf	(btemp+2)^0,c
  8947  0171BE  0EC1               	movlw	193
  8948  0171C0  D15B               	goto	L6
  8949  0171C2                     l11248:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8953  0171C2  0E10               	movlw	16
  8954  0171C4  6EE6               	movwf	postinc1,c
  8955  0171C6  0E27               	movlw	39
  8956  0171C8  6EE6               	movwf	postinc1,c
  8957  0171CA  0E0C               	movlw	12
  8958  0171CC  6EE6               	movwf	postinc1,c
  8959  0171CE  EC50  F0DE         	call	_StartTimer	;wreg free
  8960  0171D2                     l11250:
  8961                           
  8962                           ;bsoc.c: 209:   esr_state++;
  8963  0171D2  0100               	movlb	0	; () banked
  8964  0171D4  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8965                           
  8966                           ;bsoc.c: 210:   break;
  8967  0171D6  D149               	goto	l11318
  8968  0171D8                     l11252:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;bsoc.c: 215:   set_load_relay_one(0);
  8972  0171D8  0E00               	movlw	0
  8973  0171DA  6EE6               	movwf	postinc1,c
  8974  0171DC  EC37  F0E3         	call	_set_load_relay_one	;wreg free
  8975                           
  8976                           ;bsoc.c: 216:   set_load_relay_two(0);
  8977  0171E0  0E00               	movlw	0
  8978  0171E2  6EE6               	movwf	postinc1,c
  8979  0171E4  EC2F  F0E3         	call	_set_load_relay_two	;wreg free
  8980                           
  8981                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8982  0171E8  0E0C               	movlw	12
  8983  0171EA  6EE6               	movwf	postinc1,c
  8984  0171EC  ECA5  F0E0         	call	_TimerDone	;wreg free
  8985  0171F0  5001               	movf	btemp^0,w,c
  8986  0171F2  B4D8               	btfsc	status,2,c
  8987  0171F4  D009               	goto	l11258
  8988                           
  8989                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8990  0171F6  0E10               	movlw	16
  8991  0171F8  6EE6               	movwf	postinc1,c
  8992  0171FA  0E27               	movlw	39
  8993  0171FC  6EE6               	movwf	postinc1,c
  8994  0171FE  0E0C               	movlw	12
  8995  017200  6EE6               	movwf	postinc1,c
  8996  017202  EC50  F0DE         	call	_StartTimer	;wreg free
  8997                           
  8998                           ;bsoc.c: 219:   } else {
  8999  017206  D006               	goto	l11262
  9000  017208                     l11258:
  9001                           
  9002                           ;bsoc.c: 220:    return -2.0;
  9003  017208  0E00               	movlw	0
  9004  01720A  6E01               	movwf	btemp^0,c
  9005  01720C  0E00               	movlw	0
  9006  01720E  6E02               	movwf	(btemp+1)^0,c
  9007  017210  0E00               	movlw	0
  9008  017212  D066               	goto	L8
  9009  017214                     l11262:
  9010                           
  9011                           ;bsoc.c: 225:   update_adc_result();
  9012  017214  ECCF  F0DE         	call	_update_adc_result	;wreg free
  9013                           
  9014                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9015  017218  0E00               	movlw	0
  9016  01721A  6EE6               	movwf	postinc1,c
  9017  01721C  0E04               	movlw	4
  9018  01721E  6EE6               	movwf	postinc1,c
  9019  017220  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9020  017224  0060  F004  F815   	movff	btemp,_C+278	;volatile
  9021  01722A  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  9022  017230  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  9023  017236  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  9024  01723C  D7CA               	goto	l11250
  9025  01723E                     l11268:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;bsoc.c: 230:   set_load_relay_one(1);
  9029  01723E  0E01               	movlw	1
  9030  017240  6EE6               	movwf	postinc1,c
  9031  017242  EC37  F0E3         	call	_set_load_relay_one	;wreg free
  9032                           
  9033                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9034  017246  0E0C               	movlw	12
  9035  017248  6EE6               	movwf	postinc1,c
  9036  01724A  ECA5  F0E0         	call	_TimerDone	;wreg free
  9037  01724E  5001               	movf	btemp^0,w,c
  9038  017250  B4D8               	btfsc	status,2,c
  9039  017252  D009               	goto	l11274
  9040                           
  9041                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9042  017254  0E10               	movlw	16
  9043  017256  6EE6               	movwf	postinc1,c
  9044  017258  0E27               	movlw	39
  9045  01725A  6EE6               	movwf	postinc1,c
  9046  01725C  0E0C               	movlw	12
  9047  01725E  6EE6               	movwf	postinc1,c
  9048  017260  EC50  F0DE         	call	_StartTimer	;wreg free
  9049                           
  9050                           ;bsoc.c: 233:   } else {
  9051  017264  D006               	goto	l11278
  9052  017266                     l11274:
  9053                           
  9054                           ;bsoc.c: 234:    return -3.0;
  9055  017266  0E00               	movlw	0
  9056  017268  6E01               	movwf	btemp^0,c
  9057  01726A  0E00               	movlw	0
  9058  01726C  6E02               	movwf	(btemp+1)^0,c
  9059  01726E  0E40               	movlw	64
  9060  017270  D037               	goto	L8
  9061  017272                     l11278:
  9062                           
  9063                           ;bsoc.c: 237:   update_adc_result();
  9064  017272  ECCF  F0DE         	call	_update_adc_result	;wreg free
  9065                           
  9066                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9067  017276  0E00               	movlw	0
  9068  017278  6EE6               	movwf	postinc1,c
  9069  01727A  0E04               	movlw	4
  9070  01727C  6EE6               	movwf	postinc1,c
  9071  01727E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9072  017282  0060  F004  F819   	movff	btemp,_C+282	;volatile
  9073  017288  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  9074  01728E  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  9075  017294  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  9076                           
  9077                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9078  01729A  0E00               	movlw	0
  9079  01729C  6EE6               	movwf	postinc1,c
  9080  01729E  0E00               	movlw	0
  9081  0172A0  6EE6               	movwf	postinc1,c
  9082  0172A2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9083  0172A6  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  9084  0172AC  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  9085  0172B2  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  9086  0172B8  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  9087  0172BE  D789               	goto	l11250
  9088  0172C0                     l11286:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;bsoc.c: 243:   set_load_relay_two(1);
  9092  0172C0  0E01               	movlw	1
  9093  0172C2  6EE6               	movwf	postinc1,c
  9094  0172C4  EC2F  F0E3         	call	_set_load_relay_two	;wreg free
  9095                           
  9096                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9097  0172C8  0E0C               	movlw	12
  9098  0172CA  6EE6               	movwf	postinc1,c
  9099  0172CC  ECA5  F0E0         	call	_TimerDone	;wreg free
  9100  0172D0  5001               	movf	btemp^0,w,c
  9101  0172D2  A4D8               	btfss	status,2,c
  9102  0172D4  D008               	goto	l11294
  9103                           
  9104                           ;bsoc.c: 245:    return -4.0;
  9105  0172D6  0E00               	movlw	0
  9106  0172D8  6E01               	movwf	btemp^0,c
  9107  0172DA  0E00               	movlw	0
  9108  0172DC  6E02               	movwf	(btemp+1)^0,c
  9109  0172DE  0E80               	movlw	128
  9110  0172E0                     L8:
  9111  0172E0  6E03               	movwf	(btemp+2)^0,c
  9112  0172E2  0EC0               	movlw	192
  9113  0172E4  D0C9               	goto	L6
  9114  0172E6                     l11294:
  9115                           
  9116                           ;bsoc.c: 247:   update_adc_result();
  9117  0172E6  ECCF  F0DE         	call	_update_adc_result	;wreg free
  9118                           
  9119                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9120  0172EA  0E00               	movlw	0
  9121  0172EC  6EE6               	movwf	postinc1,c
  9122  0172EE  0E04               	movlw	4
  9123  0172F0  6EE6               	movwf	postinc1,c
  9124  0172F2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9125  0172F6  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9126  0172FC  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9127  017302  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9128  017308  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9129                           
  9130                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9131  01730E  0E00               	movlw	0
  9132  017310  6EE6               	movwf	postinc1,c
  9133  017312  0E00               	movlw	0
  9134  017314  6EE6               	movwf	postinc1,c
  9135  017316  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9136  01731A  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9137  017320  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9138  017326  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9139  01732C  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9140                           
  9141                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9142  017332  EE22  F011         	lfsr	2,_C+274	;volatile
  9143  017336  006F FF7B FFE6     	movff	postinc2,postinc1
  9144  01733C  006F FF7B FFE6     	movff	postinc2,postinc1
  9145  017342  006F FF7B FFE6     	movff	postinc2,postinc1
  9146  017348  006F FF7B FFE6     	movff	postinc2,postinc1
  9147  01734E  EE22  F00D         	lfsr	2,_C+270	;volatile
  9148  017352  006F FF7B FFE6     	movff	postinc2,postinc1
  9149  017358  006F FF7B FFE6     	movff	postinc2,postinc1
  9150  01735E  006F FF7B FFE6     	movff	postinc2,postinc1
  9151  017364  006F FF7B FFE6     	movff	postinc2,postinc1
  9152  01736A  ECAA  F0DD         	call	___flsub	;wreg free
  9153  01736E  0060  F007  FFE6   	movff	btemp,postinc1
  9154  017374  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9155  01737A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9156  017380  0060  F013  FFE6   	movff	btemp+3,postinc1
  9157  017386  EE22  F01D         	lfsr	2,_C+286	;volatile
  9158  01738A  006F FF7B FFE6     	movff	postinc2,postinc1
  9159  017390  006F FF7B FFE6     	movff	postinc2,postinc1
  9160  017396  006F FF7B FFE6     	movff	postinc2,postinc1
  9161  01739C  006F FF7B FFE6     	movff	postinc2,postinc1
  9162  0173A2  EE22  F019         	lfsr	2,_C+282	;volatile
  9163  0173A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9164  0173AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9165  0173B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9166  0173B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9167  0173BE  ECAA  F0DD         	call	___flsub	;wreg free
  9168  0173C2  0060  F007  FFE6   	movff	btemp,postinc1
  9169  0173C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9170  0173CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9171  0173D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9172  0173DA  EC13  F0A7         	call	___fldiv	;wreg free
  9173  0173DE  0060  F007  FFE6   	movff	btemp,postinc1
  9174  0173E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9175  0173EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9176  0173F0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9177  0173F6  EC11  F0D5         	call	_fabsf	;wreg free
  9178  0173FA  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9179  017400  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9180  017406  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9181  01740C  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9182                           
  9183                           ;bsoc.c: 252:   set_load_relay_one(0);
  9184  017412  0E00               	movlw	0
  9185  017414  6EE6               	movwf	postinc1,c
  9186  017416  EC37  F0E3         	call	_set_load_relay_one	;wreg free
  9187                           
  9188                           ;bsoc.c: 253:   set_load_relay_two(0);
  9189  01741A  0E00               	movlw	0
  9190  01741C  6EE6               	movwf	postinc1,c
  9191  01741E  EC2F  F0E3         	call	_set_load_relay_two	;wreg free
  9192                           
  9193                           ;bsoc.c: 254:   esr_state = 0;
  9194  017422  0100               	movlb	0	; () banked
  9195  017424  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;bsoc.c: 255:   return C.esr;
  9199  017426  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9200  01742C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9201  017432  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9202  017438  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9203  01743E  D01D               	goto	l2193
  9204  017440                     l11316:
  9205  017440  0100               	movlb	0	; () banked
  9206  017442  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9207  017444  6E0B               	movwf	(btemp+10)^0,c
  9208  017446  6A0C               	clrf	(btemp+11)^0,c
  9209                           
  9210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9211                           ; Switch size 1, requested type "simple"
  9212                           ; Number of cases is 1, Range of values is 0 to 0
  9213                           ; switch strategies available:
  9214                           ; Name         Instructions Cycles
  9215                           ; simple_byte            4     3 (average)
  9216                           ;	Chosen strategy is simple_byte
  9217  017448  500C               	movf	(btemp+11)^0,w,c
  9218  01744A  0A00               	xorlw	0	; case 0
  9219  01744C  A4D8               	btfss	status,2,c
  9220  01744E  D00D               	goto	l11318
  9221                           
  9222                           ; BSR set to: 0
  9223                           ; Switch size 1, requested type "simple"
  9224                           ; Number of cases is 4, Range of values is 0 to 3
  9225                           ; switch strategies available:
  9226                           ; Name         Instructions Cycles
  9227                           ; simple_byte           13     7 (average)
  9228                           ;	Chosen strategy is simple_byte
  9229  017450  500B               	movf	(btemp+10)^0,w,c
  9230  017452  0A00               	xorlw	0	; case 0
  9231  017454  B4D8               	btfsc	status,2,c
  9232  017456  D6B5               	goto	l11248
  9233  017458  0A01               	xorlw	1	; case 1
  9234  01745A  B4D8               	btfsc	status,2,c
  9235  01745C  D6BD               	goto	l11252
  9236  01745E  0A03               	xorlw	3	; case 2
  9237  017460  B4D8               	btfsc	status,2,c
  9238  017462  D6ED               	goto	l11268
  9239  017464  0A01               	xorlw	1	; case 3
  9240  017466  B4D8               	btfsc	status,2,c
  9241  017468  D72B               	goto	l11286
  9242  01746A                     l11318:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;bsoc.c: 260:  return -1.0;
  9246  01746A  0E00               	movlw	0
  9247  01746C  6E01               	movwf	btemp^0,c
  9248  01746E  0E00               	movlw	0
  9249  017470  6E02               	movwf	(btemp+1)^0,c
  9250  017472  0E80               	movlw	128
  9251  017474  6E03               	movwf	(btemp+2)^0,c
  9252  017476  0EBF               	movlw	191
  9253  017478                     L6:
  9254  017478  6E04               	movwf	(btemp+3)^0,c
  9255  01747A                     l2193:
  9256                           
  9257                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9258  01747A  52E5               	movf	postdec1,f,c
  9259  01747C  0012               	return		;funcret
  9260  01747E                     __end_of_esr_check:
  9261                           	opt callstack 0
  9262                           
  9263 ;; *************** function _update_adc_result *****************
  9264 ;; Defined at:
  9265 ;;		line 99 in file "daq.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1  [STACK] _Bool 
  9272 ;; Registers used:
  9273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:   17
  9286 ;; This function calls:
  9287 ;;		_StartTimer
  9288 ;;		_TimerDone
  9289 ;;		_check_adc_scan
  9290 ;;		_clear_adc_scan
  9291 ;;		_start_adc_scan
  9292 ;; This function is called by:
  9293 ;;		_esr_check
  9294 ;; This function uses a reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text23
  9298  01BD9E                     __ptext23:
  9299                           	opt callstack 0
  9300  01BD9E                     _update_adc_result:
  9301                           	opt callstack 12
  9302                           
  9303                           ;daq.c: 101:  if (R.done) {
  9304                           
  9305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9306                           ;incstack = 0
  9307  01BD9E  0100               	movlb	0	; () banked
  9308  01BDA0  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9309  01BDA2  B4D8               	btfsc	status,2,c
  9310  01BDA4  0012               	return	
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;daq.c: 102:   clear_adc_scan();
  9314  01BDA6  ECA3  F0E3         	call	_clear_adc_scan	;wreg free
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;daq.c: 103:   start_adc_scan();
  9318  01BDAA  ECE9  F0DA         	call	_start_adc_scan	;wreg free
  9319                           
  9320                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9321  01BDAE  0EC8               	movlw	200
  9322  01BDB0  6EE6               	movwf	postinc1,c
  9323  01BDB2  0E00               	movlw	0
  9324  01BDB4  6EE6               	movwf	postinc1,c
  9325  01BDB6  0E01               	movlw	1
  9326  01BDB8  6EE6               	movwf	postinc1,c
  9327  01BDBA  EC50  F0DE         	call	_StartTimer	;wreg free
  9328  01BDBE                     l10748:
  9329  01BDBE  0E01               	movlw	1
  9330  01BDC0  6EE6               	movwf	postinc1,c
  9331  01BDC2  ECA5  F0E0         	call	_TimerDone	;wreg free
  9332  01BDC6  5001               	movf	btemp^0,w,c
  9333  01BDC8  A4D8               	btfss	status,2,c
  9334  01BDCA  0012               	return	
  9335  01BDCC  EC93  F0E3         	call	_check_adc_scan	;wreg free
  9336  01BDD0  5001               	movf	btemp^0,w,c
  9337  01BDD2  A4D8               	btfss	status,2,c
  9338  01BDD4  0012               	return	
  9339  01BDD6  D7F3               	goto	l10748
  9340  01BDD8                     __end_of_update_adc_result:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _start_adc_scan *****************
  9344 ;; Defined at:
  9345 ;;		line 60 in file "daq.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1  [STACK] _Bool 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 1/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;Total ram usage:        0 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:   16
  9366 ;; This function calls:
  9367 ;;		_ADCC_DischargeSampleCapacitor
  9368 ;;		_ADCC_SetADIInterruptHandler
  9369 ;;		_ADCC_SetADTIInterruptHandler
  9370 ;;		_ADCC_StartConversion
  9371 ;; This function is called by:
  9372 ;;		_main
  9373 ;;		_update_adc_result
  9374 ;; This function uses a reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text24
  9378  01B5D2                     __ptext24:
  9379                           	opt callstack 0
  9380  01B5D2                     _start_adc_scan:
  9381                           	opt callstack 14
  9382                           
  9383                           ;daq.c: 62:  if (R.done)
  9384                           
  9385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9386                           ;incstack = 0
  9387  01B5D2  0100               	movlb	0	; () banked
  9388  01B5D4  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9389  01B5D6  A4D8               	btfss	status,2,c
  9390  01B5D8  0012               	return	
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;daq.c: 65:  R.scan_index = 0;
  9394  01B5DA  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9398  01B5DC  013A               	movlb	58	; () banked
  9399  01B5DE  5140               	movf	64,w,b	;volatile
  9400  01B5E0  006E F940  F001    	movff	14928,btemp	;volatile
  9401  01B5E6  6A02               	clrf	(btemp+1)^0,c
  9402  01B5E8  0060  F004  F002   	movff	btemp,btemp+1
  9403  01B5EE  6A01               	clrf	btemp^0,c
  9404  01B5F0  2601               	addwf	btemp^0,f,c
  9405  01B5F2  0E00               	movlw	0
  9406  01B5F4  2202               	addwfc	(btemp+1)^0,f,c
  9407  01B5F6  0E77               	movlw	119
  9408  01B5F8  1401               	andwf	btemp^0,w,c
  9409  01B5FA  0100               	movlb	0	; () banked
  9410  01B5FC  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9411  01B5FE  0E3C               	movlw	60
  9412  01B600  1402               	andwf	(btemp+1)^0,w,c
  9413  01B602  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9417  01B604  0E6E               	movlw	low _adc_int_handler
  9418  01B606  6EE6               	movwf	postinc1,c
  9419  01B608  0EC7               	movlw	high _adc_int_handler
  9420  01B60A  6EE6               	movwf	postinc1,c
  9421  01B60C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9422  01B60E  6EE6               	movwf	postinc1,c
  9423  01B610  EC6D  F0E1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9424                           
  9425                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9426  01B614  0EE4               	movlw	low _adc_int_t_handler
  9427  01B616  6EE6               	movwf	postinc1,c
  9428  01B618  0EB1               	movlw	high _adc_int_t_handler
  9429  01B61A  6EE6               	movwf	postinc1,c
  9430  01B61C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9431  01B61E  6EE6               	movwf	postinc1,c
  9432  01B620  EC59  F0E1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9433                           
  9434                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
  9435  01B624  EC8F  F0E3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9436                           
  9437                           ; BSR set to: 62
  9438                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
  9439  01B628  0100               	movlb	0	; () banked
  9440  01B62A  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9441  01B62C  0B0F               	andlw	15
  9442  01B62E  6EE6               	movwf	postinc1,c
  9443  01B630  EC26  F0E3         	call	_ADCC_StartConversion	;wreg free
  9444                           
  9445                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9446  01B634  0012               	return		;funcret
  9447  01B636                     __end_of_start_adc_scan:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function _ADCC_StartConversion *****************
  9451 ;; Defined at:
  9452 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  channel         1  [STACK] enum E16136
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1  [STACK] void 
  9459 ;; Registers used:
  9460 ;;		fsr1l, fsr1h
  9461 ;; Tracked objects:
  9462 ;;		On entry : 3F/0
  9463 ;;		On exit  : 3F/3E
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:   15
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_start_adc_scan
  9477 ;;		_adc_int_t_handler
  9478 ;; This function uses a reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text25
  9482  01C64C                     __ptext25:
  9483                           	opt callstack 0
  9484  01C64C                     _ADCC_StartConversion:
  9485                           	opt callstack 0
  9486                           
  9487                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9488                           ;stkvar	_channel @ sp[(0)+-1]
  9489                           
  9490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9491                           ;incstack = 0
  9492 ;; hardware stack exceeded
  9493  01C64C  0EFF               	movlw	-1
  9494  01C64E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9495                           
  9496                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9497  01C654  013E               	movlb	62	; () banked
  9498  01C656  8FF8               	bsf	248,7,b	;volatile
  9499                           
  9500                           ; BSR set to: 62
  9501                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9502  01C658  81F8               	bsf	248,0,b	;volatile
  9503                           
  9504                           ; BSR set to: 62
  9505                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9506  01C65A  52E5               	movf	postdec1,f,c
  9507  01C65C  0012               	return		;funcret
  9508  01C65E                     __end_of_ADCC_StartConversion:
  9509                           	opt callstack 0
  9510                           
  9511 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9512 ;; Defined at:
  9513 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;		None
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1  [STACK] void 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 3F/3E
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9531 ;;Total ram usage:        0 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:   15
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_start_adc_scan
  9538 ;;		_adc_int_t_handler
  9539 ;; This function uses a reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text26
  9543  01C71E                     __ptext26:
  9544                           	opt callstack 0
  9545  01C71E                     _ADCC_DischargeSampleCapacitor:
  9546                           	opt callstack 0
  9547                           
  9548                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9549                           
  9550                           ; BSR set to: 62
  9551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9552                           ;incstack = 0
  9553 ;; hardware stack exceeded
  9554  01C71E  0E3B               	movlw	59
  9555  01C720  013E               	movlb	62	; () banked
  9556  01C722  6FF1               	movwf	241,b	;volatile
  9557                           
  9558                           ; BSR set to: 62
  9559                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9560  01C724  0012               	return		;funcret
  9561  01C726                     __end_of_ADCC_DischargeSampleCapacitor:
  9562                           	opt callstack 0
  9563                           
  9564 ;; *************** function _clear_adc_scan *****************
  9565 ;; Defined at:
  9566 ;;		line 91 in file "daq.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;		None
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1  [STACK] void 
  9573 ;; Registers used:
  9574 ;;		None
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 3F/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9584 ;;Total ram usage:        0 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:   15
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;;		_update_adc_result
  9592 ;; This function uses a reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text27
  9596  01C746                     __ptext27:
  9597                           	opt callstack 0
  9598  01C746                     _clear_adc_scan:
  9599                           	opt callstack 13
  9600                           
  9601                           ;daq.c: 93:  R.done = 0;
  9602                           
  9603                           ; BSR set to: 62
  9604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9605                           ;incstack = 0
  9606  01C746  0100               	movlb	0	; () banked
  9607  01C748  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9608                           
  9609                           ; BSR set to: 0
  9610                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9611  01C74A  0012               	return		;funcret
  9612  01C74C                     __end_of_clear_adc_scan:
  9613                           	opt callstack 0
  9614                           
  9615 ;; *************** function _check_adc_scan *****************
  9616 ;; Defined at:
  9617 ;;		line 83 in file "daq.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1  [STACK] _Bool 
  9624 ;; Registers used:
  9625 ;;		btemp
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/1
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;Total ram usage:        0 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:   15
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_main
  9642 ;;		_update_adc_result
  9643 ;; This function uses a reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text28
  9647  01C726                     __ptext28:
  9648                           	opt callstack 0
  9649  01C726                     _check_adc_scan:
  9650                           	opt callstack 13
  9651                           
  9652                           ;daq.c: 85:  return R.done;
  9653                           
  9654                           ; BSR set to: 0
  9655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9656                           ;incstack = 0
  9657  01C726  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9658                           
  9659                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9660  01C72C  0012               	return		;funcret
  9661  01C72E                     __end_of_check_adc_scan:
  9662                           	opt callstack 0
  9663                           
  9664 ;; *************** function _set_load_relay_two *****************
  9665 ;; Defined at:
  9666 ;;		line 130 in file "mbmc.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  mode            1  [STACK] const _Bool 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1  [STACK] void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr1l, fsr1h
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:   15
  9687 ;; This function calls:
  9688 ;;		Nothing
  9689 ;; This function is called by:
  9690 ;;		_main
  9691 ;;		_esr_check
  9692 ;; This function uses a reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text29
  9696  01C65E                     __ptext29:
  9697                           	opt callstack 0
  9698  01C65E                     _set_load_relay_two:
  9699                           	opt callstack 15
  9700                           
  9701                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9702                           ;stkvar	_mode @ sp[(0)+-1]
  9703                           
  9704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9705                           ;incstack = 0
  9706  01C65E  0EFF               	movlw	-1
  9707  01C660  B0E3               	btfsc	plusw1,0,c
  9708  01C662  D002               	bra	u9665
  9709  01C664  9ABD               	bcf	189,5,c	;volatile
  9710  01C666  D001               	bra	u9666
  9711  01C668                     u9665:
  9712  01C668  8ABD               	bsf	189,5,c	;volatile
  9713  01C66A                     u9666:
  9714                           
  9715                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9716  01C66A  52E5               	movf	postdec1,f,c
  9717  01C66C  0012               	return		;funcret
  9718  01C66E                     __end_of_set_load_relay_two:
  9719                           	opt callstack 0
  9720                           
  9721 ;; *************** function _set_load_relay_one *****************
  9722 ;; Defined at:
  9723 ;;		line 125 in file "mbmc.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  mode            1  [STACK] const _Bool 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1  [STACK] void 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr1l, fsr1h
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:   15
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_main
  9748 ;;		_esr_check
  9749 ;; This function uses a reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text30
  9753  01C66E                     __ptext30:
  9754                           	opt callstack 0
  9755  01C66E                     _set_load_relay_one:
  9756                           	opt callstack 15
  9757                           
  9758                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9759                           ;stkvar	_mode @ sp[(0)+-1]
  9760                           
  9761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9762                           ;incstack = 0
  9763  01C66E  0EFF               	movlw	-1
  9764  01C670  B0E3               	btfsc	plusw1,0,c
  9765  01C672  D002               	bra	u9655
  9766  01C674  98BD               	bcf	189,4,c	;volatile
  9767  01C676  D001               	bra	u9656
  9768  01C678                     u9655:
  9769  01C678  88BD               	bsf	189,4,c	;volatile
  9770  01C67A                     u9656:
  9771                           
  9772                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9773  01C67A  52E5               	movf	postdec1,f,c
  9774  01C67C  0012               	return		;funcret
  9775  01C67E                     __end_of_set_load_relay_one:
  9776                           	opt callstack 0
  9777                           
  9778 ;; *************** function _eaDogM_WriteCommand *****************
  9779 ;; Defined at:
  9780 ;;		line 385 in file "eadog.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  cmd             1  [STACK] const unsigned char 
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;		None
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1  [STACK] void 
  9787 ;; Registers used:
  9788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9789 ;; Tracked objects:
  9790 ;;		On entry : 3F/3D
  9791 ;;		On exit  : 3F/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;Total ram usage:        0 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:   26
  9801 ;; This function calls:
  9802 ;;		_send_lcd_cmd_dma
  9803 ;; This function is called by:
  9804 ;;		_main
  9805 ;; This function uses a reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text31
  9809  01C69E                     __ptext31:
  9810                           	opt callstack 0
  9811  01C69E                     _eaDogM_WriteCommand:
  9812                           	opt callstack 4
  9813                           
  9814                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9815                           ;stkvar	_cmd @ sp[(0)+-1]
  9816                           
  9817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9818                           ;incstack = 0
  9819  01C69E  0EFF               	movlw	-1
  9820  01C6A0  50E3               	movf	plusw1,w,c
  9821  01C6A2  6EE6               	movwf	postinc1,c
  9822  01C6A4  EC8C  F0E2         	call	_send_lcd_cmd_dma	;wreg free
  9823                           
  9824                           ; BSR set to: 0
  9825                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9826  01C6A8  52E5               	movf	postdec1,f,c
  9827  01C6AA  0012               	return		;funcret
  9828  01C6AC                     __end_of_eaDogM_WriteCommand:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function _current_sensor_cal *****************
  9832 ;; Defined at:
  9833 ;;		line 473 in file "main.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1  [STACK] _Bool 
  9840 ;; Registers used:
  9841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/1
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9851 ;;Total ram usage:        0 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:   28
  9854 ;; This function calls:
  9855 ;;		_get_vterm_ptr
  9856 ;;		_sprintf
  9857 ;;		_update_lcd
  9858 ;; This function is called by:
  9859 ;;		_main
  9860 ;; This function uses a reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text32
  9864  01B162                     __ptext32:
  9865                           	opt callstack 0
  9866  01B162                     _current_sensor_cal:
  9867                           	opt callstack 2
  9868                           
  9869                           ;main.c: 475:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9870                           
  9871                           ; BSR set to: 0
  9872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9873                           ;incstack = 0
  9874  01B162  0E1D               	movlw	low STR_43
  9875  01B164  6EE6               	movwf	postinc1,c
  9876  01B166  0EFF               	movlw	high STR_43
  9877  01B168  6EE6               	movwf	postinc1,c
  9878  01B16A  0E00               	movlw	0
  9879  01B16C  6EE6               	movwf	postinc1,c
  9880  01B16E  0E00               	movlw	0
  9881  01B170  6EE6               	movwf	postinc1,c
  9882  01B172  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  9883  01B176  0060  F007  FFE6   	movff	btemp,postinc1
  9884  01B17C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9885  01B182  0E04               	movlw	4
  9886  01B184  6EE6               	movwf	postinc1,c
  9887  01B186  EC72  F0D0         	call	_sprintf	;wreg free
  9888                           
  9889                           ;main.c: 476:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9890  01B18A  0E75               	movlw	low STR_44
  9891  01B18C  6EE6               	movwf	postinc1,c
  9892  01B18E  0EFE               	movlw	high STR_44
  9893  01B190  6EE6               	movwf	postinc1,c
  9894  01B192  0E00               	movlw	0
  9895  01B194  6EE6               	movwf	postinc1,c
  9896  01B196  0E01               	movlw	1
  9897  01B198  6EE6               	movwf	postinc1,c
  9898  01B19A  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  9899  01B19E  0060  F007  FFE6   	movff	btemp,postinc1
  9900  01B1A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9901  01B1AA  0E04               	movlw	4
  9902  01B1AC  6EE6               	movwf	postinc1,c
  9903  01B1AE  EC72  F0D0         	call	_sprintf	;wreg free
  9904                           
  9905                           ;main.c: 477:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
  9906  01B1B2  0EDE               	movlw	low STR_45
  9907  01B1B4  6EE6               	movwf	postinc1,c
  9908  01B1B6  0EFE               	movlw	high STR_45
  9909  01B1B8  6EE6               	movwf	postinc1,c
  9910  01B1BA  0E00               	movlw	0
  9911  01B1BC  6EE6               	movwf	postinc1,c
  9912  01B1BE  0E02               	movlw	2
  9913  01B1C0  6EE6               	movwf	postinc1,c
  9914  01B1C2  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
  9915  01B1C6  0060  F007  FFE6   	movff	btemp,postinc1
  9916  01B1CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9917  01B1D2  0E04               	movlw	4
  9918  01B1D4  6EE6               	movwf	postinc1,c
  9919  01B1D6  EC72  F0D0         	call	_sprintf	;wreg free
  9920                           
  9921                           ;main.c: 478:  update_lcd(0);
  9922  01B1DA  0E00               	movlw	0
  9923  01B1DC  6EE6               	movwf	postinc1,c
  9924  01B1DE  ECEA  F0CF         	call	_update_lcd	;wreg free
  9925                           
  9926                           ; _current_sensor_cal: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  9927  01B1E2  0012               	return		;funcret
  9928  01B1E4                     __end_of_current_sensor_cal:
  9929                           	opt callstack 0
  9930                           
  9931 ;; *************** function _convert_adc_data *****************
  9932 ;; Defined at:
  9933 ;;		line 51 in file "mbmc.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  i               1  [STACK] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1  [STACK] void 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/1
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   18
  9954 ;; This function calls:
  9955 ;;		_conv_raw_result
  9956 ;;		_lp_filter
  9957 ;; This function is called by:
  9958 ;;		_main
  9959 ;; This function uses a reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text33
  9963  01A8B4                     __ptext33:
  9964                           	opt callstack 0
  9965  01A8B4                     _convert_adc_data:
  9966                           	opt callstack 0
  9967                           
  9968                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9969  01A8B4  52E6               	movf	postinc1,f,c
  9970                           
  9971                           ;mbmc.c: 53:  uint8_t i = 0;
  9972                           ;stkvar	_i @ sp[(-1)+0]
  9973                           
  9974                           ;incstack = 0
  9975  01A8B6  0EFF               	movlw	-1
  9976  01A8B8  6AE3               	clrf	plusw1,c
  9977  01A8BA                     l11334:
  9978                           
  9979                           ;mbmc.c: 56:   if (V.calib) {
  9980  01A8BA  0101               	movlb	1	; () banked
  9981  01A8BC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9982  01A8BE  B4D8               	btfsc	status,2,c
  9983  01A8C0  D01B               	goto	l11338
  9984                           
  9985                           ; BSR set to: 1
  9986                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9987  01A8C2  0E01               	movlw	1
  9988  01A8C4  6EE6               	movwf	postinc1,c
  9989                           
  9990                           ;stkvar	_i @ sp[(-2)+0]
  9991  01A8C6  0EFE               	movlw	-2
  9992  01A8C8  50E3               	movf	plusw1,w,c
  9993  01A8CA  6EE6               	movwf	postinc1,c
  9994  01A8CC  0E01               	movlw	1
  9995  01A8CE  6EE6               	movwf	postinc1,c
  9996                           
  9997                           ;stkvar	_i @ sp[(-4)+0]
  9998  01A8D0  0EFC               	movlw	-4
  9999  01A8D2  50E3               	movf	plusw1,w,c
 10000  01A8D4  6EE6               	movwf	postinc1,c
 10001  01A8D6  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10002  01A8DA  0060  F007  FFE6   	movff	btemp,postinc1
 10003  01A8E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10004  01A8E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10005  01A8EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 10006  01A8F2  EC84  F0C4         	call	_lp_filter	;wreg free
 10007  01A8F6  D01A               	goto	L9
 10008  01A8F8                     l11338:
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 10012  01A8F8  0E00               	movlw	0
 10013  01A8FA  6EE6               	movwf	postinc1,c
 10014                           
 10015                           ;stkvar	_i @ sp[(-2)+0]
 10016  01A8FC  0EFE               	movlw	-2
 10017  01A8FE  50E3               	movf	plusw1,w,c
 10018  01A900  6EE6               	movwf	postinc1,c
 10019  01A902  0E00               	movlw	0
 10020  01A904  6EE6               	movwf	postinc1,c
 10021                           
 10022                           ;stkvar	_i @ sp[(-4)+0]
 10023  01A906  0EFC               	movlw	-4
 10024  01A908  50E3               	movf	plusw1,w,c
 10025  01A90A  6EE6               	movwf	postinc1,c
 10026  01A90C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10027  01A910  0060  F007  FFE6   	movff	btemp,postinc1
 10028  01A916  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10029  01A91C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10030  01A922  0060  F013  FFE6   	movff	btemp+3,postinc1
 10031  01A928  EC84  F0C4         	call	_lp_filter	;wreg free
 10032  01A92C                     L9:
 10033                           
 10034                           ;stkvar	_i @ sp[(-1)+0]
 10035  01A92C  0EFF               	movlw	-1
 10036  01A92E  50E3               	movf	plusw1,w,c
 10037  01A930  0D04               	mullw	4
 10038  01A932  0EFF               	movlw	low _C
 10039  01A934  24F3               	addwf	243,w,c
 10040  01A936  6ED9               	movwf	fsr2l,c
 10041  01A938  0E06               	movlw	high _C
 10042  01A93A  20F4               	addwfc	prodh,w,c
 10043  01A93C  6EDA               	movwf	fsr2h,c
 10044  01A93E  0060  F007  FFDE   	movff	btemp,postinc2
 10045  01A944  0060  F00B  FFDE   	movff	btemp+1,postinc2
 10046  01A94A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 10047  01A950  0060  F013  FFDE   	movff	btemp+3,postinc2
 10048                           
 10049                           ;mbmc.c: 61:  } while (++i < 16);
 10050                           ;stkvar	_i @ sp[(-1)+0]
 10051  01A956  0EFF               	movlw	-1
 10052  01A958  2AE3               	incf	plusw1,f,c
 10053  01A95A  0EFF               	movlw	-1
 10054  01A95C  006F FF8C  F001    	movff	plusw1,btemp
 10055  01A962  0E0F               	movlw	15
 10056  01A964  6401               	cpfsgt	btemp^0,c
 10057  01A966  D7A9               	goto	l11334
 10058                           
 10059                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10060  01A968  52E5               	movf	postdec1,f,c
 10061  01A96A  0012               	return		;funcret
 10062  01A96C                     __end_of_convert_adc_data:
 10063                           	opt callstack 0
 10064                           
 10065 ;; *************** function _clear_hid_pflags *****************
 10066 ;; Defined at:
 10067 ;;		line 67 in file "hid.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  h               2  [STACK] PTR struct H_data
 10070 ;;		 -> H(9), 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;		None
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1  [STACK] void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 10077 ;; Tracked objects:
 10078 ;;		On entry : 3E/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10086 ;;Total ram usage:        0 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:   15
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_main
 10093 ;; This function uses a reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text34
 10097  01B506                     __ptext34:
 10098                           	opt callstack 0
 10099  01B506                     _clear_hid_pflags:
 10100                           	opt callstack 15
 10101                           
 10102                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 10103                           ;stkvar	_h @ sp[(0)+-2]
 10104                           
 10105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10106                           ;incstack = 0
 10107  01B506  0EFE               	movlw	-2
 10108  01B508  006F FF8C  F00B    	movff	plusw1,btemp+10
 10109  01B50E  0EFF               	movlw	-1
 10110  01B510  006F FF8C  F00C    	movff	plusw1,btemp+11
 10111  01B516  0E03               	movlw	3
 10112  01B518  240B               	addwf	(btemp+10)^0,w,c
 10113  01B51A  6ED9               	movwf	fsr2l,c
 10114  01B51C  0E00               	movlw	0
 10115  01B51E  200C               	addwfc	(btemp+11)^0,w,c
 10116  01B520  6EDA               	movwf	fsr2h,c
 10117  01B522  0E00               	movlw	0
 10118  01B524  6EDF               	movwf	indf2,c
 10119                           
 10120                           ;hid.c: 70:  h->enter_p = SW_OFF;
 10121                           ;stkvar	_h @ sp[(0)+-2]
 10122  01B526  0EFE               	movlw	-2
 10123  01B528  006F FF8C  F00B    	movff	plusw1,btemp+10
 10124  01B52E  0EFF               	movlw	-1
 10125  01B530  006F FF8C  F00C    	movff	plusw1,btemp+11
 10126  01B536  0E05               	movlw	5
 10127  01B538  240B               	addwf	(btemp+10)^0,w,c
 10128  01B53A  6ED9               	movwf	fsr2l,c
 10129  01B53C  0E00               	movlw	0
 10130  01B53E  200C               	addwfc	(btemp+11)^0,w,c
 10131  01B540  6EDA               	movwf	fsr2h,c
 10132  01B542  0E00               	movlw	0
 10133  01B544  6EDF               	movwf	indf2,c
 10134                           
 10135                           ;hid.c: 71:  h->calib_p = SW_OFF;
 10136                           ;stkvar	_h @ sp[(0)+-2]
 10137  01B546  0EFE               	movlw	-2
 10138  01B548  006F FF8C  F00B    	movff	plusw1,btemp+10
 10139  01B54E  0EFF               	movlw	-1
 10140  01B550  006F FF8C  F00C    	movff	plusw1,btemp+11
 10141  01B556  0E07               	movlw	7
 10142  01B558  240B               	addwf	(btemp+10)^0,w,c
 10143  01B55A  6ED9               	movwf	fsr2l,c
 10144  01B55C  0E00               	movlw	0
 10145  01B55E  200C               	addwfc	(btemp+11)^0,w,c
 10146  01B560  6EDA               	movwf	fsr2h,c
 10147  01B562  0E00               	movlw	0
 10148  01B564  6EDF               	movwf	indf2,c
 10149                           
 10150                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 10151  01B566  52E5               	movf	postdec1,f,c
 10152  01B568  52E5               	movf	postdec1,f,c
 10153  01B56A  0012               	return		;funcret
 10154  01B56C                     __end_of_clear_hid_pflags:
 10155                           	opt callstack 0
 10156                           
 10157 ;; *************** function _check_help *****************
 10158 ;; Defined at:
 10159 ;;		line 40 in file "mconfig.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  flipper         1  [STACK] const _Bool 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  estatus         1    0        _Bool 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1  [STACK] _Bool 
 10166 ;; Registers used:
 10167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10168 ;; Tracked objects:
 10169 ;;		On entry : 3F/1
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:   28
 10180 ;; This function calls:
 10181 ;;		_StartTimer
 10182 ;;		_TimerDone
 10183 ;;		_display_help
 10184 ;;		_display_info
 10185 ;;		_get_vterm_ptr
 10186 ;;		_help_button
 10187 ;;		_mode_lamp_bright
 10188 ;;		_mode_lamp_dim
 10189 ;;		_set_display_info
 10190 ;;		_set_temp_display_help
 10191 ;;		_set_vterm
 10192 ;;		_sprintf
 10193 ;;		_update_lcd
 10194 ;;		_vterm_dump
 10195 ;; This function is called by:
 10196 ;;		_main
 10197 ;; This function uses a reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text35
 10201  0184F2                     __ptext35:
 10202                           	opt callstack 0
 10203  0184F2                     _check_help:
 10204                           	opt callstack 2
 10205                           
 10206                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 10207                           
 10208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10209                           ;incstack = 0
 10210  0184F2  ECEC  F0DE         	call	_help_button	;wreg free
 10211  0184F6  5001               	movf	btemp^0,w,c
 10212  0184F8  B4D8               	btfsc	status,2,c
 10213  0184FA  D0D0               	goto	l13444
 10214  0184FC  EC97  F0E3         	call	_display_info	;wreg free
 10215  018500  0401               	decf	btemp^0,w,c
 10216  018502  B4D8               	btfsc	status,2,c
 10217  018504  D0CB               	goto	l13444
 10218                           
 10219                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 10220  018506  0EDC               	movlw	220
 10221  018508  6EE6               	movwf	postinc1,c
 10222  01850A  0E05               	movlw	5
 10223  01850C  6EE6               	movwf	postinc1,c
 10224  01850E  0E0B               	movlw	11
 10225  018510  6EE6               	movwf	postinc1,c
 10226  018512  EC50  F0DE         	call	_StartTimer	;wreg free
 10227                           
 10228                           ;mconfig.c: 48:   if (V.debug)
 10229  018516  0101               	movlb	1	; () banked
 10230  018518  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 10231                           
 10232                           ; BSR set to: 1
 10233                           ;mconfig.c: 49:    vterm_dump();
 10234  01851A  EC1F  F0CD         	call	_vterm_dump	;wreg free
 10235                           
 10236                           ;mconfig.c: 51:   set_vterm(1);
 10237  01851E  0E01               	movlw	1
 10238  018520  6EE6               	movwf	postinc1,c
 10239  018522  EC9B  F0E2         	call	_set_vterm	;wreg free
 10240                           
 10241                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 10242  018526  EC97  F0E3         	call	_display_info	;wreg free
 10243  01852A  5001               	movf	btemp^0,w,c
 10244  01852C  6EE6               	movwf	postinc1,c
 10245  01852E  EC3F  F0E3         	call	_set_temp_display_help	;wreg free
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 10249  018532  0E01               	movlw	1
 10250  018534  6EE6               	movwf	postinc1,c
 10251  018536  ECAA  F0E2         	call	_set_display_info	;wreg free
 10252                           
 10253                           ;mconfig.c: 54:   if (flipper) {
 10254                           ;stkvar	_flipper @ sp[(0)+-1]
 10255  01853A  0EFF               	movlw	-1
 10256  01853C  50E3               	movf	plusw1,w,c
 10257  01853E  B4D8               	btfsc	status,2,c
 10258  018540  D019               	goto	l13430
 10259                           
 10260                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 10261  018542  0EB2               	movlw	low STR_48
 10262  018544  6EE6               	movwf	postinc1,c
 10263  018546  0EFF               	movlw	high STR_48
 10264  018548  6EE6               	movwf	postinc1,c
 10265  01854A  0E5C               	movlw	low STR_50
 10266  01854C  6EE6               	movwf	postinc1,c
 10267  01854E  0EFF               	movlw	high STR_50
 10268  018550  6EE6               	movwf	postinc1,c
 10269  018552  0E01               	movlw	1
 10270  018554  6EE6               	movwf	postinc1,c
 10271  018556  0E00               	movlw	0
 10272  018558  6EE6               	movwf	postinc1,c
 10273  01855A  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10274  01855E  0060  F007  FFE6   	movff	btemp,postinc1
 10275  018564  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10276  01856A  0E06               	movlw	6
 10277  01856C  6EE6               	movwf	postinc1,c
 10278  01856E  EC72  F0D0         	call	_sprintf	;wreg free
 10279                           
 10280                           ;mconfig.c: 56:   } else {
 10281  018572  D018               	goto	l1690
 10282  018574                     l13430:
 10283                           
 10284                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 10285  018574  0EC8               	movlw	low STR_49
 10286  018576  6EE6               	movwf	postinc1,c
 10287  018578  0EFF               	movlw	high STR_49
 10288  01857A  6EE6               	movwf	postinc1,c
 10289  01857C  0E5C               	movlw	low STR_50
 10290  01857E  6EE6               	movwf	postinc1,c
 10291  018580  0EFF               	movlw	high STR_50
 10292  018582  6EE6               	movwf	postinc1,c
 10293  018584  0E01               	movlw	1
 10294  018586  6EE6               	movwf	postinc1,c
 10295  018588  0E00               	movlw	0
 10296  01858A  6EE6               	movwf	postinc1,c
 10297  01858C  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10298  018590  0060  F007  FFE6   	movff	btemp,postinc1
 10299  018596  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10300  01859C  0E06               	movlw	6
 10301  01859E  6EE6               	movwf	postinc1,c
 10302  0185A0  EC72  F0D0         	call	_sprintf	;wreg free
 10303  0185A4                     l1690:
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 10307  0185A4  0101               	movlb	1	; () banked
 10308  0185A6  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10309  0185A8  32E8               	rrcf	wreg,f,c
 10310  0185AA  32E8               	rrcf	wreg,f,c
 10311  0185AC  0B03               	andlw	3
 10312  0185AE  0D24               	mullw	36
 10313  0185B0  0E12               	movlw	18
 10314  0185B2  26F3               	addwf	243,f,c
 10315  0185B4  0E00               	movlw	0
 10316  0185B6  22F4               	addwfc	244,f,c
 10317  0185B8  0E6F               	movlw	low _T
 10318  0185BA  6E0B               	movwf	(btemp+10)^0,c
 10319  0185BC  0EFA               	movlw	high _T
 10320  0185BE  6E0C               	movwf	(btemp+11)^0,c
 10321  0185C0  50F3               	movf	243,w,c
 10322  0185C2  260B               	addwf	(btemp+10)^0,f,c
 10323  0185C4  50F4               	movf	244,w,c
 10324  0185C6  220C               	addwfc	(btemp+11)^0,f,c
 10325  0185C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10326  0185CE  0060  F033  FFE6   	movff	btemp+11,postinc1
 10327  0185D4  0EBE               	movlw	low STR_52
 10328  0185D6  6EE6               	movwf	postinc1,c
 10329  0185D8  0EFF               	movlw	high STR_52
 10330  0185DA  6EE6               	movwf	postinc1,c
 10331  0185DC  0E01               	movlw	1
 10332  0185DE  6EE6               	movwf	postinc1,c
 10333  0185E0  0E01               	movlw	1
 10334  0185E2  6EE6               	movwf	postinc1,c
 10335  0185E4  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10336  0185E8  0060  F007  FFE6   	movff	btemp,postinc1
 10337  0185EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10338  0185F4  0E06               	movlw	6
 10339  0185F6  6EE6               	movwf	postinc1,c
 10340  0185F8  EC72  F0D0         	call	_sprintf	;wreg free
 10341                           
 10342                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10343  0185FC  0101               	movlb	1	; () banked
 10344  0185FE  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10345  018600  32E8               	rrcf	wreg,f,c
 10346  018602  32E8               	rrcf	wreg,f,c
 10347  018604  0B03               	andlw	3
 10348  018606  0D24               	mullw	36
 10349  018608  0E6F               	movlw	low _T
 10350  01860A  6E0B               	movwf	(btemp+10)^0,c
 10351  01860C  0EFA               	movlw	high _T
 10352  01860E  6E0C               	movwf	(btemp+11)^0,c
 10353  018610  50F3               	movf	243,w,c
 10354  018612  260B               	addwf	(btemp+10)^0,f,c
 10355  018614  50F4               	movf	244,w,c
 10356  018616  220C               	addwfc	(btemp+11)^0,f,c
 10357  018618  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10358  01861E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10359  018624  0EBE               	movlw	low STR_52
 10360  018626  6EE6               	movwf	postinc1,c
 10361  018628  0EFF               	movlw	high STR_52
 10362  01862A  6EE6               	movwf	postinc1,c
 10363  01862C  0E01               	movlw	1
 10364  01862E  6EE6               	movwf	postinc1,c
 10365  018630  0E02               	movlw	2
 10366  018632  6EE6               	movwf	postinc1,c
 10367  018634  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10368  018638  0060  F007  FFE6   	movff	btemp,postinc1
 10369  01863E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10370  018644  0E06               	movlw	6
 10371  018646  6EE6               	movwf	postinc1,c
 10372  018648  EC72  F0D0         	call	_sprintf	;wreg free
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;mconfig.c: 61:   V.help_id++;
 10376  01864C  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10377  018650  38DF               	swapf	223,w,c
 10378  018652  6E0C               	movwf	(btemp+11)^0,c
 10379  018654  320C               	rrcf	(btemp+11)^0,f,c
 10380  018656  300C               	rrcf	(btemp+11)^0,w,c
 10381  018658  0B03               	andlw	3
 10382  01865A  6E0C               	movwf	(btemp+11)^0,c
 10383  01865C  2A0C               	incf	(btemp+11)^0,f,c
 10384  01865E  3A0C               	swapf	(btemp+11)^0,f,c
 10385  018660  360C               	rlcf	(btemp+11)^0,f,c
 10386  018662  360C               	rlcf	(btemp+11)^0,f,c
 10387  018664  50DF               	movf	223,w,c
 10388  018666  180C               	xorwf	(btemp+11)^0,w,c
 10389  018668  0B3F               	andlw	-193
 10390  01866A  180C               	xorwf	(btemp+11)^0,w,c
 10391  01866C  6EDF               	movwf	223,c
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10395  01866E  0EB8               	movlw	184
 10396  018670  6EE6               	movwf	postinc1,c
 10397  018672  0E0B               	movlw	11
 10398  018674  6EE6               	movwf	postinc1,c
 10399  018676  0E09               	movlw	9
 10400  018678  6EE6               	movwf	postinc1,c
 10401  01867A  EC50  F0DE         	call	_StartTimer	;wreg free
 10402                           
 10403                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10404  01867E  0EB8               	movlw	184
 10405  018680  6EE6               	movwf	postinc1,c
 10406  018682  0E0B               	movlw	11
 10407  018684  6EE6               	movwf	postinc1,c
 10408  018686  0E07               	movlw	7
 10409  018688  6EE6               	movwf	postinc1,c
 10410  01868A  EC50  F0DE         	call	_StartTimer	;wreg free
 10411                           
 10412                           ;mconfig.c: 64:   mode_lamp_bright();
 10413  01868E  EC56  F0E3         	call	_mode_lamp_bright	;wreg free
 10414                           
 10415                           ;mconfig.c: 65:   update_lcd(1);
 10416  018692  0E01               	movlw	1
 10417  018694  6EE6               	movwf	postinc1,c
 10418  018696  ECEA  F0CF         	call	_update_lcd	;wreg free
 10419                           
 10420                           ;mconfig.c: 67:  } else {
 10421  01869A  D032               	goto	l1691
 10422  01869C                     l13444:
 10423                           
 10424                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10425  01869C  0E09               	movlw	9
 10426  01869E  6EE6               	movwf	postinc1,c
 10427  0186A0  ECA5  F0E0         	call	_TimerDone	;wreg free
 10428  0186A4  5001               	movf	btemp^0,w,c
 10429  0186A6  B4D8               	btfsc	status,2,c
 10430  0186A8  D02B               	goto	l1691
 10431                           
 10432                           ;mconfig.c: 69:    set_vterm(0);
 10433  0186AA  0E00               	movlw	0
 10434  0186AC  6EE6               	movwf	postinc1,c
 10435  0186AE  EC9B  F0E2         	call	_set_vterm	;wreg free
 10436                           
 10437                           ;mconfig.c: 70:    V.help = 0;
 10438  0186B2  0101               	movlb	1	; () banked
 10439  0186B4  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10440                           
 10441                           ; BSR set to: 1
 10442                           ;mconfig.c: 71:    set_display_info(display_help());
 10443  0186B6  EC9B  F0E3         	call	_display_help	;wreg free
 10444  0186BA  5001               	movf	btemp^0,w,c
 10445  0186BC  6EE6               	movwf	postinc1,c
 10446  0186BE  ECAA  F0E2         	call	_set_display_info	;wreg free
 10447                           
 10448                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10449  0186C2  0060  F673  FFE6   	movff	_V+149,postinc1
 10450  0186C8  0060  F677  FFE6   	movff	_V+150,postinc1
 10451  0186CE  ECE3  F0E2         	call	_mode_lamp_dim	;wreg free
 10452                           
 10453                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10454  0186D2  0E0B               	movlw	11
 10455  0186D4  6EE6               	movwf	postinc1,c
 10456  0186D6  ECA5  F0E0         	call	_TimerDone	;wreg free
 10457  0186DA  5001               	movf	btemp^0,w,c
 10458  0186DC  B4D8               	btfsc	status,2,c
 10459  0186DE  D010               	goto	l1691
 10460                           
 10461                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10462  0186E0  0101               	movlb	1	; () banked
 10463  0186E2  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10464  0186E4  A4D8               	btfss	status,2,c
 10465  0186E6  D002               	goto	u12950
 10466  0186E8  0E01               	movlw	1
 10467  0186EA  D001               	goto	u12960
 10468  0186EC                     u12950:
 10469  0186EC  0E00               	movlw	0
 10470  0186EE                     u12960:
 10471  0186EE  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10472                           
 10473                           ; BSR set to: 1
 10474                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10475  0186F0  0EDC               	movlw	220
 10476  0186F2  6EE6               	movwf	postinc1,c
 10477  0186F4  0E05               	movlw	5
 10478  0186F6  6EE6               	movwf	postinc1,c
 10479  0186F8  0E0B               	movlw	11
 10480  0186FA  6EE6               	movwf	postinc1,c
 10481  0186FC  EC50  F0DE         	call	_StartTimer	;wreg free
 10482  018700                     l1691:
 10483                           
 10484                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10485  018700  52E5               	movf	postdec1,f,c
 10486  018702  0012               	return		;funcret
 10487  018704                     __end_of_check_help:
 10488                           	opt callstack 0
 10489                           
 10490 ;; *************** function _vterm_dump *****************
 10491 ;; Defined at:
 10492 ;;		line 121 in file "mconfig.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1  [STACK] void 
 10499 ;; Registers used:
 10500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10501 ;; Tracked objects:
 10502 ;;		On entry : 3F/1
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10510 ;;Total ram usage:        0 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:   27
 10513 ;; This function calls:
 10514 ;;		_WaitMs
 10515 ;;		_eaDogM_WriteStringAtPos
 10516 ;;		_get_vterm_ptr
 10517 ;;		_sprintf
 10518 ;;		_wait_lcd_done
 10519 ;; This function is called by:
 10520 ;;		_check_help
 10521 ;; This function uses a reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text36
 10525  019A3E                     __ptext36:
 10526                           	opt callstack 0
 10527  019A3E                     _vterm_dump:
 10528                           	opt callstack 2
 10529                           
 10530                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10531                           
 10532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10533                           ;incstack = 0
 10534  019A3E  0E01               	movlw	1
 10535  019A40  6EE6               	movwf	postinc1,c
 10536  019A42  0E00               	movlw	0
 10537  019A44  6EE6               	movwf	postinc1,c
 10538  019A46  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10539  019A4A  0060  F007  FFE6   	movff	btemp,postinc1
 10540  019A50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10541  019A56  0E00               	movlw	0
 10542  019A58  6EE6               	movwf	postinc1,c
 10543  019A5A  0E00               	movlw	0
 10544  019A5C  6EE6               	movwf	postinc1,c
 10545  019A5E  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10546  019A62  0060  F007  FFE6   	movff	btemp,postinc1
 10547  019A68  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10548  019A6E  0EA3               	movlw	low STR_54
 10549  019A70  6EE6               	movwf	postinc1,c
 10550  019A72  0EFF               	movlw	high STR_54
 10551  019A74  6EE6               	movwf	postinc1,c
 10552  019A76  0E08               	movlw	low (_V+1)
 10553  019A78  6EE6               	movwf	postinc1,c
 10554  019A7A  0E01               	movlw	high (_V+1)
 10555  019A7C  6EE6               	movwf	postinc1,c
 10556  019A7E  0E08               	movlw	8
 10557  019A80  6EE6               	movwf	postinc1,c
 10558  019A82  EC72  F0D0         	call	_sprintf	;wreg free
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;mconfig.c: 124:  wait_lcd_done();
 10562  019A86  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10566  019A8A  0E08               	movlw	low (_V+1)
 10567  019A8C  6EE6               	movwf	postinc1,c
 10568  019A8E  0E01               	movlw	high (_V+1)
 10569  019A90  6EE6               	movwf	postinc1,c
 10570  019A92  0E00               	movlw	0
 10571  019A94  6EE6               	movwf	postinc1,c
 10572  019A96  0E00               	movlw	0
 10573  019A98  6EE6               	movwf	postinc1,c
 10574  019A9A  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 10575                           
 10576                           ; BSR set to: 59
 10577                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10578  019A9E  0E01               	movlw	1
 10579  019AA0  6EE6               	movwf	postinc1,c
 10580  019AA2  0E01               	movlw	1
 10581  019AA4  6EE6               	movwf	postinc1,c
 10582  019AA6  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10583  019AAA  0060  F007  FFE6   	movff	btemp,postinc1
 10584  019AB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10585  019AB6  0E00               	movlw	0
 10586  019AB8  6EE6               	movwf	postinc1,c
 10587  019ABA  0E01               	movlw	1
 10588  019ABC  6EE6               	movwf	postinc1,c
 10589  019ABE  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10590  019AC2  0060  F007  FFE6   	movff	btemp,postinc1
 10591  019AC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10592  019ACE  0EA3               	movlw	low STR_54
 10593  019AD0  6EE6               	movwf	postinc1,c
 10594  019AD2  0EFF               	movlw	high STR_54
 10595  019AD4  6EE6               	movwf	postinc1,c
 10596  019AD6  0E08               	movlw	low (_V+1)
 10597  019AD8  6EE6               	movwf	postinc1,c
 10598  019ADA  0E01               	movlw	high (_V+1)
 10599  019ADC  6EE6               	movwf	postinc1,c
 10600  019ADE  0E08               	movlw	8
 10601  019AE0  6EE6               	movwf	postinc1,c
 10602  019AE2  EC72  F0D0         	call	_sprintf	;wreg free
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;mconfig.c: 127:  wait_lcd_done();
 10606  019AE6  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 10607                           
 10608                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10609  019AEA  0E08               	movlw	low (_V+1)
 10610  019AEC  6EE6               	movwf	postinc1,c
 10611  019AEE  0E01               	movlw	high (_V+1)
 10612  019AF0  6EE6               	movwf	postinc1,c
 10613  019AF2  0E00               	movlw	0
 10614  019AF4  6EE6               	movwf	postinc1,c
 10615  019AF6  0E01               	movlw	1
 10616  019AF8  6EE6               	movwf	postinc1,c
 10617  019AFA  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 10618                           
 10619                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10620  019AFE  0E01               	movlw	1
 10621  019B00  6EE6               	movwf	postinc1,c
 10622  019B02  0E02               	movlw	2
 10623  019B04  6EE6               	movwf	postinc1,c
 10624  019B06  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10625  019B0A  0060  F007  FFE6   	movff	btemp,postinc1
 10626  019B10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10627  019B16  0E00               	movlw	0
 10628  019B18  6EE6               	movwf	postinc1,c
 10629  019B1A  0E02               	movlw	2
 10630  019B1C  6EE6               	movwf	postinc1,c
 10631  019B1E  EC22  F0E0         	call	_get_vterm_ptr	;wreg free
 10632  019B22  0060  F007  FFE6   	movff	btemp,postinc1
 10633  019B28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10634  019B2E  0EA3               	movlw	low STR_54
 10635  019B30  6EE6               	movwf	postinc1,c
 10636  019B32  0EFF               	movlw	high STR_54
 10637  019B34  6EE6               	movwf	postinc1,c
 10638  019B36  0E08               	movlw	low (_V+1)
 10639  019B38  6EE6               	movwf	postinc1,c
 10640  019B3A  0E01               	movlw	high (_V+1)
 10641  019B3C  6EE6               	movwf	postinc1,c
 10642  019B3E  0E08               	movlw	8
 10643  019B40  6EE6               	movwf	postinc1,c
 10644  019B42  EC72  F0D0         	call	_sprintf	;wreg free
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;mconfig.c: 130:  wait_lcd_done();
 10648  019B46  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10652  019B4A  0E08               	movlw	low (_V+1)
 10653  019B4C  6EE6               	movwf	postinc1,c
 10654  019B4E  0E01               	movlw	high (_V+1)
 10655  019B50  6EE6               	movwf	postinc1,c
 10656  019B52  0E00               	movlw	0
 10657  019B54  6EE6               	movwf	postinc1,c
 10658  019B56  0E02               	movlw	2
 10659  019B58  6EE6               	movwf	postinc1,c
 10660  019B5A  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 10661                           
 10662                           ; BSR set to: 59
 10663                           ;mconfig.c: 132:  WaitMs(3000);
 10664  019B5E  0EB8               	movlw	184
 10665  019B60  6EE6               	movwf	postinc1,c
 10666  019B62  0E0B               	movlw	11
 10667  019B64  6EE6               	movwf	postinc1,c
 10668  019B66  EC3F  F0DF         	call	_WaitMs	;wreg free
 10669                           
 10670                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10671  019B6A  0012               	return		;funcret
 10672  019B6C                     __end_of_vterm_dump:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function _sprintf *****************
 10676 ;; Defined at:
 10677 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  s               2  [STACK] PTR unsigned char 
 10680 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 10681 ;;  fmt             2  [STACK] PTR const unsigned char 
 10682 ;;		 -> STR_67(127), STR_65(3), STR_64(3), STR_63(19), 
 10683 ;;		 -> STR_62(19), STR_61(19), STR_60(19), STR_59(19), 
 10684 ;;		 -> STR_58(19), STR_57(24), STR_56(15), STR_55(15), 
 10685 ;;		 -> STR_54(15), STR_53(10), STR_52(10), STR_51(19), 
 10686 ;;		 -> STR_50(19), STR_45(21), STR_44(21), STR_43(21), 
 10687 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 10688 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 10689 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 10690 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 10691 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 10692 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 10693 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10694 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 10695 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 10696 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 10697 ;;		 -> STR_1(21), 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  f               6  [STACK] struct _IO_FILE
 10700 ;;  ap              2  [STACK] PTR void [1]
 10701 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10702 ;;  ret             2    0        int 
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  2  [STACK] int 
 10705 ;; Registers used:
 10706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/1
 10709 ;;		On exit  : 3F/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10716 ;;Total ram usage:        0 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:   23
 10719 ;; This function calls:
 10720 ;;		_vfprintf
 10721 ;; This function is called by:
 10722 ;;		_main
 10723 ;;		_current_sensor_cal
 10724 ;;		_check_help
 10725 ;;		_vterm_dump
 10726 ;;		_calc_bsoc
 10727 ;; This function uses a reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text37
 10731  01A0E4                     __ptext37:
 10732                           	opt callstack 0
 10733  01A0E4                     _sprintf:
 10734                           	opt callstack 0
 10735                           
 10736                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10737  01A0E4  0E08               	movlw	8
 10738  01A0E6  26E1               	addwf	fsr1l,f,c
 10739  01A0E8  0E00               	movlw	0
 10740  01A0EA  22E2               	addwfc	fsr1h,f,c
 10741                           
 10742                           ;incstack = 0
 10743 ;; hardware stack exceeded
 10744  01A0EC  0EFE               	movlw	254
 10745  01A0EE  6E0B               	movwf	(btemp+10)^0,c
 10746  01A0F0  0EFF               	movlw	255
 10747  01A0F2  6E0C               	movwf	(btemp+11)^0,c
 10748                           
 10749                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10750  01A0F4  0EF5               	movlw	245
 10751  01A0F6  24E1               	addwf	fsr1l,w,c
 10752  01A0F8  6E09               	movwf	(btemp+8)^0,c
 10753  01A0FA  0EFF               	movlw	255
 10754  01A0FC  20E2               	addwfc	fsr1h,w,c
 10755  01A0FE  6E0A               	movwf	(btemp+9)^0,c
 10756  01A100  500B               	movf	(btemp+10)^0,w,c
 10757  01A102  2609               	addwf	(btemp+8)^0,f,c
 10758  01A104  500C               	movf	(btemp+11)^0,w,c
 10759  01A106  220A               	addwfc	(btemp+9)^0,f,c
 10760                           
 10761                           ;stkvar	_ap @ sp[(-8)+6]
 10762  01A108  0EFF               	movlw	-1
 10763  01A10A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10764  01A110  0EFE               	movlw	-2
 10765  01A112  0060  F027  FFE3   	movff	btemp+8,plusw1
 10766                           
 10767                           ;stkvar	_s @ sp[(-8)+-3]
 10768  01A118  0EF5               	movlw	-11
 10769  01A11A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10770  01A120  0EF6               	movlw	-10
 10771  01A122  006F FF8C  F00C    	movff	plusw1,btemp+11
 10772                           
 10773                           ;stkvar	_f @ sp[(-8)+0]
 10774  01A128  0EF9               	movlw	-7
 10775  01A12A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10776  01A130  0EF8               	movlw	-8
 10777  01A132  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10778                           
 10779                           ;stkvar	_f @ sp[(-8)+0]
 10780  01A138  0EFA               	movlw	250
 10781  01A13A  24E1               	addwf	fsr1l,w,c
 10782  01A13C  6ED9               	movwf	fsr2l,c
 10783  01A13E  0EFF               	movlw	255
 10784  01A140  20E2               	addwfc	fsr1h,w,c
 10785  01A142  6EDA               	movwf	fsr2h,c
 10786  01A144  0E00               	movlw	0
 10787  01A146  6EDE               	movwf	postinc2,c
 10788  01A148  0E00               	movlw	0
 10789  01A14A  6EDD               	movwf	postdec2,c
 10790                           
 10791                           ;stkvar	_f @ sp[(-8)+0]
 10792  01A14C  0EFC               	movlw	252
 10793  01A14E  24E1               	addwf	fsr1l,w,c
 10794  01A150  6ED9               	movwf	fsr2l,c
 10795  01A152  0EFF               	movlw	255
 10796  01A154  20E2               	addwfc	fsr1h,w,c
 10797  01A156  6EDA               	movwf	fsr2h,c
 10798  01A158  0E00               	movlw	0
 10799  01A15A  6EDE               	movwf	postinc2,c
 10800  01A15C  0E00               	movlw	0
 10801  01A15E  6EDD               	movwf	postdec2,c
 10802                           
 10803                           ;stkvar	_ap @ sp[(-8)+6]
 10804  01A160  0EFE               	movlw	254
 10805  01A162  24E1               	addwf	fsr1l,w,c
 10806  01A164  6E01               	movwf	btemp^0,c
 10807  01A166  0EFF               	movlw	255
 10808  01A168  20E2               	addwfc	fsr1h,w,c
 10809  01A16A  6E02               	movwf	(btemp+1)^0,c
 10810  01A16C  0060  F007  FFE6   	movff	btemp,postinc1
 10811  01A172  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10812                           
 10813                           ;stkvar	_fmt @ sp[(-10)+-5]
 10814  01A178  0EF1               	movlw	-15
 10815  01A17A  006F FF8F FFE6     	movff	plusw1,postinc1
 10816  01A180  006F FF8F FFE6     	movff	plusw1,postinc1
 10817                           
 10818                           ;stkvar	_f @ sp[(-12)+0]
 10819  01A186  0EF4               	movlw	244
 10820  01A188  24E1               	addwf	fsr1l,w,c
 10821  01A18A  6E01               	movwf	btemp^0,c
 10822  01A18C  0EFF               	movlw	255
 10823  01A18E  20E2               	addwfc	fsr1h,w,c
 10824  01A190  6E02               	movwf	(btemp+1)^0,c
 10825  01A192  0060  F007  FFE6   	movff	btemp,postinc1
 10826  01A198  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10827  01A19E  EC68  F0D5         	call	_vfprintf	;wreg free
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;stkvar	_f @ sp[(-8)+0]
 10831  01A1A2  0EFA               	movlw	250
 10832  01A1A4  24E1               	addwf	fsr1l,w,c
 10833  01A1A6  6ED9               	movwf	fsr2l,c
 10834  01A1A8  0EFF               	movlw	255
 10835  01A1AA  20E2               	addwfc	fsr1h,w,c
 10836  01A1AC  6EDA               	movwf	fsr2h,c
 10837  01A1AE  006F FF78  F00B    	movff	postinc2,btemp+10
 10838  01A1B4  006F FF74  F00C    	movff	postdec2,btemp+11
 10839                           
 10840                           ;stkvar	_s @ sp[(-8)+-3]
 10841  01A1BA  0EF5               	movlw	-11
 10842  01A1BC  006F FF8C  F009    	movff	plusw1,btemp+8
 10843  01A1C2  0EF6               	movlw	-10
 10844  01A1C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 10845  01A1CA  500B               	movf	(btemp+10)^0,w,c
 10846  01A1CC  2409               	addwf	(btemp+8)^0,w,c
 10847  01A1CE  6ED9               	movwf	fsr2l,c
 10848  01A1D0  500C               	movf	(btemp+11)^0,w,c
 10849  01A1D2  200A               	addwfc	(btemp+9)^0,w,c
 10850  01A1D4  6EDA               	movwf	fsr2h,c
 10851  01A1D6  0E00               	movlw	0
 10852  01A1D8  6EDF               	movwf	indf2,c
 10853                           
 10854                           ; BSR set to: 0
 10855                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 10856  01A1DA  0EF8               	movlw	248
 10857  01A1DC  26E1               	addwf	fsr1l,f,c
 10858  01A1DE  0EFF               	movlw	255
 10859  01A1E0  22E2               	addwfc	fsr1h,f,c
 10860  01A1E2  52E5               	movf	postdec1,f,c
 10861  01A1E4  50E7               	movf	indf1,w,c
 10862  01A1E6  5EE1               	subwf	fsr1l,f,c
 10863  01A1E8  0E00               	movlw	0
 10864  01A1EA  5AE2               	subwfb	fsr1h,f,c
 10865  01A1EC  0012               	return		;funcret
 10866  01A1EE                     __end_of_sprintf:
 10867                           	opt callstack 0
 10868                           
 10869 ;; *************** function _get_vterm_ptr *****************
 10870 ;; Defined at:
 10871 ;;		line 116 in file "mconfig.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  line            1  [STACK] const unsigned char 
 10874 ;;  vterm           1  [STACK] const unsigned char 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;		None
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  2  [STACK] PTR unsigned char 
 10879 ;; Registers used:
 10880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/1
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10890 ;;Total ram usage:        0 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:   15
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_main
 10897 ;;		_current_sensor_cal
 10898 ;;		_check_help
 10899 ;;		_vterm_dump
 10900 ;; This function uses a reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text38
 10904  01C044                     __ptext38:
 10905                           	opt callstack 0
 10906  01C044                     _get_vterm_ptr:
 10907                           	opt callstack 15
 10908                           
 10909                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10910                           ;stkvar	_vterm @ sp[(0)+-2]
 10911                           
 10912                           ; BSR set to: 0
 10913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10914                           ;incstack = 0
 10915  01C044  0EFE               	movlw	-2
 10916  01C046  50E3               	movf	plusw1,w,c
 10917  01C048  0B03               	andlw	3
 10918  01C04A  0D78               	mullw	120
 10919  01C04C  0E2A               	movlw	low _D
 10920  01C04E  6E01               	movwf	btemp^0,c
 10921  01C050  0E08               	movlw	high _D
 10922  01C052  6E02               	movwf	(btemp+1)^0,c
 10923  01C054  50F3               	movf	243,w,c
 10924  01C056  2601               	addwf	btemp^0,f,c
 10925  01C058  50F4               	movf	244,w,c
 10926  01C05A  2202               	addwfc	(btemp+1)^0,f,c
 10927                           
 10928                           ;stkvar	_line @ sp[(0)+-1]
 10929  01C05C  0EFF               	movlw	-1
 10930  01C05E  50E3               	movf	plusw1,w,c
 10931  01C060  0B03               	andlw	3
 10932  01C062  0D28               	mullw	40
 10933  01C064  50F3               	movf	243,w,c
 10934  01C066  2601               	addwf	btemp^0,f,c
 10935  01C068  50F4               	movf	244,w,c
 10936  01C06A  2202               	addwfc	(btemp+1)^0,f,c
 10937                           
 10938                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10939  01C06C  52E5               	movf	postdec1,f,c
 10940  01C06E  52E5               	movf	postdec1,f,c
 10941  01C070  0012               	return		;funcret
 10942  01C072                     __end_of_get_vterm_ptr:
 10943                           	opt callstack 0
 10944                           
 10945 ;; *************** function _WaitMs *****************
 10946 ;; Defined at:
 10947 ;;		line 32 in file "timers.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;  numMilliseco    2  [STACK] const unsigned short 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1  [STACK] void 
 10954 ;; Registers used:
 10955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/1
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:   16
 10968 ;; This function calls:
 10969 ;;		_StartTimer
 10970 ;;		_TimerDone
 10971 ;; This function is called by:
 10972 ;;		_main
 10973 ;;		_vterm_dump
 10974 ;; This function uses a reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text39
 10978  01BE7E                     __ptext39:
 10979                           	opt callstack 0
 10980  01BE7E                     _WaitMs:
 10981                           	opt callstack 12
 10982                           
 10983                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10984                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10985                           
 10986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10987                           ;incstack = 0
 10988  01BE7E  0EFE               	movlw	-2
 10989  01BE80  006F FF8F FFE6     	movff	plusw1,postinc1
 10990  01BE86  006F FF8F FFE6     	movff	plusw1,postinc1
 10991  01BE8C  0E00               	movlw	0
 10992  01BE8E  6EE6               	movwf	postinc1,c
 10993  01BE90  EC50  F0DE         	call	_StartTimer	;wreg free
 10994                           
 10995                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10996  01BE94  D005               	goto	l10110
 10997  01BE96                     l1622:
 10998                           
 10999                           ;timers.c: 36:   __nop();
 11000  01BE96  F000               	nop	
 11001                           
 11002                           ;timers.c: 37:   __nop();
 11003  01BE98  F000               	nop	
 11004                           
 11005                           ;timers.c: 38:   __nop();
 11006  01BE9A  F000               	nop	
 11007                           
 11008                           ;timers.c: 39:   __nop();
 11009  01BE9C  F000               	nop	
 11010  01BE9E  0004               	clrwdt		;# 
 11011  01BEA0                     l10110:
 11012                           
 11013                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11014  01BEA0  0E00               	movlw	0
 11015  01BEA2  6EE6               	movwf	postinc1,c
 11016  01BEA4  ECA5  F0E0         	call	_TimerDone	;wreg free
 11017  01BEA8  5001               	movf	btemp^0,w,c
 11018  01BEAA  B4D8               	btfsc	status,2,c
 11019  01BEAC  D7F4               	goto	l1622
 11020                           
 11021                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11022  01BEAE  52E5               	movf	postdec1,f,c
 11023  01BEB0  52E5               	movf	postdec1,f,c
 11024  01BEB2  0012               	return		;funcret
 11025  01BEB4                     __end_of_WaitMs:
 11026                           	opt callstack 0
 11027                           
 11028 ;; *************** function _update_lcd *****************
 11029 ;; Defined at:
 11030 ;;		line 85 in file "mconfig.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  vterm           1  [STACK] unsigned char 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1  [STACK] unsigned char 
 11037 ;; Registers used:
 11038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11048 ;;Total ram usage:        0 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:   27
 11051 ;; This function calls:
 11052 ;;		_eaDogM_WriteStringAtPos
 11053 ;;		_wait_lcd_done
 11054 ;; This function is called by:
 11055 ;;		_main
 11056 ;;		_current_sensor_cal
 11057 ;;		_check_help
 11058 ;; This function uses a reentrant model
 11059 ;;
 11060                           
 11061                           	psect	text40
 11062  019FD4                     __ptext40:
 11063                           	opt callstack 0
 11064  019FD4                     _update_lcd:
 11065                           	opt callstack 3
 11066                           
 11067                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 11068                           ;stkvar	_vterm @ sp[(0)+-1]
 11069                           
 11070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11071                           ;incstack = 0
 11072  019FD4  0EFF               	movlw	-1
 11073  019FD6  006F FF8C  F001    	movff	plusw1,btemp
 11074  019FDC  0E03               	movlw	3
 11075  019FDE  1601               	andwf	btemp^0,f,c
 11076  019FE0  0EFF               	movlw	-1
 11077  019FE2  0060  F007  FFE3   	movff	btemp,plusw1
 11078                           
 11079                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 11080  019FE8  EE22  F20A         	lfsr	2,_D+480
 11081  019FEC  A0DF               	btfss	indf2,0,c
 11082  019FEE  D004               	goto	l13150
 11083                           
 11084                           ;stkvar	_vterm @ sp[(0)+-1]
 11085  019FF0  0EFF               	movlw	-1
 11086  019FF2  50E3               	movf	plusw1,w,c
 11087  019FF4  B4D8               	btfsc	status,2,c
 11088  019FF6  D074               	goto	l1698
 11089  019FF8                     l13150:
 11090                           
 11091                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 11092                           ;stkvar	_vterm @ sp[(0)+-1]
 11093  019FF8  0EFF               	movlw	-1
 11094  019FFA  50E3               	movf	plusw1,w,c
 11095  019FFC  0D78               	mullw	120
 11096  019FFE  0E3E               	movlw	low (_D+20)
 11097  01A000  24F3               	addwf	243,w,c
 11098  01A002  6ED9               	movwf	fsr2l,c
 11099  01A004  0E08               	movlw	high (_D+20)
 11100  01A006  20F4               	addwfc	prodh,w,c
 11101  01A008  6EDA               	movwf	fsr2h,c
 11102  01A00A  0E00               	movlw	0
 11103  01A00C  6EDF               	movwf	indf2,c
 11104                           
 11105                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 11106                           ;stkvar	_vterm @ sp[(0)+-1]
 11107  01A00E  0EFF               	movlw	-1
 11108  01A010  50E3               	movf	plusw1,w,c
 11109  01A012  0D78               	mullw	120
 11110  01A014  0E66               	movlw	low (_D+60)
 11111  01A016  24F3               	addwf	243,w,c
 11112  01A018  6ED9               	movwf	fsr2l,c
 11113  01A01A  0E08               	movlw	high (_D+60)
 11114  01A01C  20F4               	addwfc	prodh,w,c
 11115  01A01E  6EDA               	movwf	fsr2h,c
 11116  01A020  0E00               	movlw	0
 11117  01A022  6EDF               	movwf	indf2,c
 11118                           
 11119                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 11120                           ;stkvar	_vterm @ sp[(0)+-1]
 11121  01A024  0EFF               	movlw	-1
 11122  01A026  50E3               	movf	plusw1,w,c
 11123  01A028  0D78               	mullw	120
 11124  01A02A  0E8E               	movlw	low (_D+100)
 11125  01A02C  24F3               	addwf	243,w,c
 11126  01A02E  6ED9               	movwf	fsr2l,c
 11127  01A030  0E08               	movlw	high (_D+100)
 11128  01A032  20F4               	addwfc	prodh,w,c
 11129  01A034  6EDA               	movwf	fsr2h,c
 11130  01A036  0E00               	movlw	0
 11131  01A038  6EDF               	movwf	indf2,c
 11132                           
 11133                           ;mconfig.c: 95:  wait_lcd_done();
 11134  01A03A  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 11138                           ;stkvar	_vterm @ sp[(0)+-1]
 11139  01A03E  0EFF               	movlw	-1
 11140  01A040  50E3               	movf	plusw1,w,c
 11141  01A042  0D78               	mullw	120
 11142  01A044  0E2A               	movlw	low _D
 11143  01A046  6E0B               	movwf	(btemp+10)^0,c
 11144  01A048  0E08               	movlw	high _D
 11145  01A04A  6E0C               	movwf	(btemp+11)^0,c
 11146  01A04C  50F3               	movf	243,w,c
 11147  01A04E  260B               	addwf	(btemp+10)^0,f,c
 11148  01A050  50F4               	movf	244,w,c
 11149  01A052  220C               	addwfc	(btemp+11)^0,f,c
 11150  01A054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11151  01A05A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11152  01A060  0E00               	movlw	0
 11153  01A062  6EE6               	movwf	postinc1,c
 11154  01A064  0E00               	movlw	0
 11155  01A066  6EE6               	movwf	postinc1,c
 11156  01A068  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 11157                           
 11158                           ; BSR set to: 59
 11159                           ;mconfig.c: 97:  wait_lcd_done();
 11160  01A06C  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 11164                           ;stkvar	_vterm @ sp[(0)+-1]
 11165  01A070  0EFF               	movlw	-1
 11166  01A072  50E3               	movf	plusw1,w,c
 11167  01A074  0D78               	mullw	120
 11168  01A076  0E2A               	movlw	low _D
 11169  01A078  6E0B               	movwf	(btemp+10)^0,c
 11170  01A07A  0E08               	movlw	high _D
 11171  01A07C  6E0C               	movwf	(btemp+11)^0,c
 11172  01A07E  0E28               	movlw	40
 11173  01A080  260B               	addwf	(btemp+10)^0,f,c
 11174  01A082  0E00               	movlw	0
 11175  01A084  220C               	addwfc	(btemp+11)^0,f,c
 11176  01A086  50F3               	movf	243,w,c
 11177  01A088  260B               	addwf	(btemp+10)^0,f,c
 11178  01A08A  50F4               	movf	244,w,c
 11179  01A08C  220C               	addwfc	(btemp+11)^0,f,c
 11180  01A08E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11181  01A094  0060  F033  FFE6   	movff	btemp+11,postinc1
 11182  01A09A  0E00               	movlw	0
 11183  01A09C  6EE6               	movwf	postinc1,c
 11184  01A09E  0E01               	movlw	1
 11185  01A0A0  6EE6               	movwf	postinc1,c
 11186  01A0A2  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 11187                           
 11188                           ; BSR set to: 59
 11189                           ;mconfig.c: 99:  wait_lcd_done();
 11190  01A0A6  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 11194                           ;stkvar	_vterm @ sp[(0)+-1]
 11195  01A0AA  0EFF               	movlw	-1
 11196  01A0AC  50E3               	movf	plusw1,w,c
 11197  01A0AE  0D78               	mullw	120
 11198  01A0B0  0E2A               	movlw	low _D
 11199  01A0B2  6E0B               	movwf	(btemp+10)^0,c
 11200  01A0B4  0E08               	movlw	high _D
 11201  01A0B6  6E0C               	movwf	(btemp+11)^0,c
 11202  01A0B8  0E50               	movlw	80
 11203  01A0BA  260B               	addwf	(btemp+10)^0,f,c
 11204  01A0BC  0E00               	movlw	0
 11205  01A0BE  220C               	addwfc	(btemp+11)^0,f,c
 11206  01A0C0  50F3               	movf	243,w,c
 11207  01A0C2  260B               	addwf	(btemp+10)^0,f,c
 11208  01A0C4  50F4               	movf	244,w,c
 11209  01A0C6  220C               	addwfc	(btemp+11)^0,f,c
 11210  01A0C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11211  01A0CE  0060  F033  FFE6   	movff	btemp+11,postinc1
 11212  01A0D4  0E00               	movlw	0
 11213  01A0D6  6EE6               	movwf	postinc1,c
 11214  01A0D8  0E02               	movlw	2
 11215  01A0DA  6EE6               	movwf	postinc1,c
 11216  01A0DC  EC13  F0D6         	call	_eaDogM_WriteStringAtPos	;wreg free
 11217  01A0E0                     l1698:
 11218                           
 11219                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11220  01A0E0  52E5               	movf	postdec1,f,c
 11221  01A0E2  0012               	return		;funcret
 11222  01A0E4                     __end_of_update_lcd:
 11223                           	opt callstack 0
 11224                           
 11225 ;; *************** function _eaDogM_WriteStringAtPos *****************
 11226 ;; Defined at:
 11227 ;;		line 195 in file "eadog.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  r               1  [STACK] const unsigned char 
 11230 ;;  c               1  [STACK] const unsigned char 
 11231 ;;  strPtr          2  [STACK] PTR unsigned char 
 11232 ;;		 -> D.lcd(480), D(482), V(192), 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  row             1  [STACK] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1  [STACK] void 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11239 ;; Tracked objects:
 11240 ;;		On entry : 3F/0
 11241 ;;		On exit  : 3F/3B
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:   26
 11251 ;; This function calls:
 11252 ;;		_eaDogM_WriteString
 11253 ;;		_send_lcd_cmd_dma
 11254 ;;		_send_lcd_data_dma
 11255 ;;		_wait_lcd_done
 11256 ;;		_wdtdelay
 11257 ;; This function is called by:
 11258 ;;		_update_lcd
 11259 ;;		_vterm_dump
 11260 ;; This function uses a reentrant model
 11261 ;;
 11262                           
 11263                           	psect	text41
 11264  01AC26                     __ptext41:
 11265                           	opt callstack 0
 11266  01AC26                     _eaDogM_WriteStringAtPos:
 11267                           	opt callstack 0
 11268                           
 11269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11270  01AC26  52E6               	movf	postinc1,f,c
 11271                           
 11272                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 11273                           
 11274                           ;incstack = 0
 11275  01AC28  D014               	goto	l13126
 11276  01AC2A                     l13114:
 11277                           
 11278                           ;eadog.c: 201:   row = 0x40;
 11279                           ;stkvar	_row @ sp[(-1)+0]
 11280  01AC2A  0EFF               	movlw	-1
 11281  01AC2C  6AE3               	clrf	plusw1,c
 11282  01AC2E  8CE3               	bsf	plusw1,6,c
 11283                           
 11284                           ;eadog.c: 202:   break;
 11285  01AC30  D026               	goto	l13128
 11286  01AC32                     l13116:
 11287                           
 11288                           ;eadog.c: 204:   row = 0x14;
 11289                           ;stkvar	_row @ sp[(-1)+0]
 11290  01AC32  0EFF               	movlw	-1
 11291  01AC34  6AE3               	clrf	plusw1,c
 11292  01AC36  84E3               	bsf	plusw1,2,c
 11293  01AC38  88E3               	bsf	plusw1,4,c	;indir
 11294                           
 11295                           ;eadog.c: 205:   break;
 11296  01AC3A  D021               	goto	l13128
 11297  01AC3C                     l13118:
 11298                           
 11299                           ;eadog.c: 207:   row = 0x54;
 11300  01AC3C  0E54               	movlw	84
 11301  01AC3E  6E0C               	movwf	(btemp+11)^0,c
 11302                           
 11303                           ;stkvar	_row @ sp[(-1)+0]
 11304  01AC40  0EFF               	movlw	-1
 11305  01AC42  0060  F033  FFE3   	movff	btemp+11,plusw1
 11306                           
 11307                           ;eadog.c: 208:   break;
 11308  01AC48  D01A               	goto	l13128
 11309  01AC4A                     l13120:
 11310                           
 11311                           ;eadog.c: 210:   row = 0x1;
 11312                           ;stkvar	_row @ sp[(-1)+0]
 11313  01AC4A  0EFF               	movlw	-1
 11314  01AC4C  6AE3               	clrf	plusw1,c
 11315  01AC4E  2AE3               	incf	plusw1,f,c
 11316                           
 11317                           ;eadog.c: 211:   break;
 11318  01AC50  D016               	goto	l13128
 11319  01AC52                     l13126:
 11320                           
 11321                           ;stkvar	_r @ sp[(-1)+-1]
 11322  01AC52  0EFE               	movlw	-2
 11323  01AC54  50E3               	movf	plusw1,w,c
 11324  01AC56  6E0B               	movwf	(btemp+10)^0,c
 11325  01AC58  6A0C               	clrf	(btemp+11)^0,c
 11326                           
 11327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11328                           ; Switch size 1, requested type "simple"
 11329                           ; Number of cases is 1, Range of values is 0 to 0
 11330                           ; switch strategies available:
 11331                           ; Name         Instructions Cycles
 11332                           ; simple_byte            4     3 (average)
 11333                           ;	Chosen strategy is simple_byte
 11334  01AC5A  500C               	movf	(btemp+11)^0,w,c
 11335  01AC5C  0A00               	xorlw	0	; case 0
 11336  01AC5E  A4D8               	btfss	status,2,c
 11337  01AC60  D7E4               	goto	l13114
 11338                           
 11339                           ; Switch size 1, requested type "simple"
 11340                           ; Number of cases is 4, Range of values is 0 to 3
 11341                           ; switch strategies available:
 11342                           ; Name         Instructions Cycles
 11343                           ; simple_byte           13     7 (average)
 11344                           ;	Chosen strategy is simple_byte
 11345  01AC62  500B               	movf	(btemp+10)^0,w,c
 11346  01AC64  0A00               	xorlw	0	; case 0
 11347  01AC66  B4D8               	btfsc	status,2,c
 11348  01AC68  D7E0               	goto	l13114
 11349  01AC6A  0A01               	xorlw	1	; case 1
 11350  01AC6C  B4D8               	btfsc	status,2,c
 11351  01AC6E  D7E1               	goto	l13116
 11352  01AC70  0A03               	xorlw	3	; case 2
 11353  01AC72  B4D8               	btfsc	status,2,c
 11354  01AC74  D7E3               	goto	l13118
 11355  01AC76  0A01               	xorlw	1	; case 3
 11356  01AC78  B4D8               	btfsc	status,2,c
 11357  01AC7A  D7E7               	goto	l13120
 11358  01AC7C  D7D6               	goto	l13114
 11359  01AC7E                     l13128:
 11360                           
 11361                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11362  01AC7E  0E45               	movlw	69
 11363  01AC80  6EE6               	movwf	postinc1,c
 11364  01AC82  EC8C  F0E2         	call	_send_lcd_cmd_dma	;wreg free
 11365                           
 11366                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11367                           ;stkvar	_c @ sp[(-1)+-2]
 11368  01AC86  0EFD               	movlw	-3
 11369  01AC88  006F FF8C  F00C    	movff	plusw1,btemp+11
 11370                           
 11371                           ;stkvar	_row @ sp[(-1)+0]
 11372  01AC8E  0EFF               	movlw	-1
 11373  01AC90  50E3               	movf	plusw1,w,c
 11374  01AC92  240C               	addwf	(btemp+11)^0,w,c
 11375  01AC94  6EE6               	movwf	postinc1,c
 11376  01AC96  ECAD  F0DC         	call	_send_lcd_data_dma	;wreg free
 11377                           
 11378                           ; BSR set to: 59
 11379                           ;eadog.c: 218:  wait_lcd_done();
 11380  01AC9A  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;eadog.c: 219:  wdtdelay(8);
 11384  01AC9E  0E08               	movlw	8
 11385  01ACA0  6EE6               	movwf	postinc1,c
 11386  01ACA2  0E00               	movlw	0
 11387  01ACA4  6EE6               	movwf	postinc1,c
 11388  01ACA6  0E00               	movlw	0
 11389  01ACA8  6EE6               	movwf	postinc1,c
 11390  01ACAA  0E00               	movlw	0
 11391  01ACAC  6EE6               	movwf	postinc1,c
 11392  01ACAE  ECDA  F0DB         	call	_wdtdelay	;wreg free
 11393                           
 11394                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11395                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11396  01ACB2  0EFB               	movlw	-5
 11397  01ACB4  006F FF8F FFE6     	movff	plusw1,postinc1
 11398  01ACBA  006F FF8F FFE6     	movff	plusw1,postinc1
 11399  01ACC0  EC67  F0D6         	call	_eaDogM_WriteString	;wreg free
 11400                           
 11401                           ; BSR set to: 59
 11402                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11403  01ACC4  0EFB               	movlw	251
 11404  01ACC6  26E1               	addwf	fsr1l,f,c
 11405  01ACC8  0EFF               	movlw	255
 11406  01ACCA  22E2               	addwfc	fsr1h,f,c
 11407  01ACCC  0012               	return		;funcret
 11408  01ACCE                     __end_of_eaDogM_WriteStringAtPos:
 11409                           	opt callstack 0
 11410                           
 11411 ;; *************** function _send_lcd_cmd_dma *****************
 11412 ;; Defined at:
 11413 ;;		line 171 in file "eadog.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  strPtr          1  [STACK] const unsigned char 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1  [STACK] void 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/3D
 11424 ;;		On exit  : 3F/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11431 ;;Total ram usage:        0 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:   25
 11434 ;; This function calls:
 11435 ;;		_send_lcd_data_dma
 11436 ;;		_wait_lcd_done
 11437 ;; This function is called by:
 11438 ;;		_eaDogM_WriteStringAtPos
 11439 ;;		_eaDogM_WriteCommand
 11440 ;; This function uses a reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text42
 11444  01C518                     __ptext42:
 11445                           	opt callstack 0
 11446  01C518                     _send_lcd_cmd_dma:
 11447                           	opt callstack 3
 11448                           
 11449                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11450                           
 11451                           ; BSR set to: 59
 11452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11453                           ;incstack = 0
 11454  01C518  0EFE               	movlw	254
 11455  01C51A  6EE6               	movwf	postinc1,c
 11456  01C51C  ECAD  F0DC         	call	_send_lcd_data_dma	;wreg free
 11457                           
 11458                           ; BSR set to: 59
 11459                           ;eadog.c: 174:  wait_lcd_done();
 11460  01C520  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11464                           ;stkvar	_strPtr @ sp[(0)+-1]
 11465  01C524  0EFF               	movlw	-1
 11466  01C526  50E3               	movf	plusw1,w,c
 11467  01C528  6EE6               	movwf	postinc1,c
 11468  01C52A  ECAD  F0DC         	call	_send_lcd_data_dma	;wreg free
 11469                           
 11470                           ;eadog.c: 176:  wait_lcd_done();
 11471  01C52E  EC2A  F0E2         	call	_wait_lcd_done	;wreg free
 11472                           
 11473                           ; BSR set to: 0
 11474                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11475  01C532  52E5               	movf	postdec1,f,c
 11476  01C534  0012               	return		;funcret
 11477  01C536                     __end_of_send_lcd_cmd_dma:
 11478                           	opt callstack 0
 11479                           
 11480 ;; *************** function _wait_lcd_done *****************
 11481 ;; Defined at:
 11482 ;;		line 444 in file "eadog.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1  [STACK] void 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/1
 11493 ;;		On exit  : 3F/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11500 ;;Total ram usage:        0 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:   16
 11503 ;; This function calls:
 11504 ;;		_wdtdelay
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;;		_send_lcd_cmd_dma
 11508 ;;		_eaDogM_WriteStringAtPos
 11509 ;;		_update_lcd
 11510 ;;		_vterm_dump
 11511 ;; This function uses a reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text43
 11515  01C454                     __ptext43:
 11516                           	opt callstack 0
 11517  01C454                     _wait_lcd_done:
 11518                           	opt callstack 14
 11519                           
 11520                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11521                           
 11522                           ; BSR set to: 0
 11523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11524                           ;incstack = 0
 11525  01C454  0101               	movlb	1	; () banked
 11526  01C456  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 11527  01C458  D7FD               	goto	_wait_lcd_done
 11528  01C45A                     u8810:
 11529  01C45A  013D               	movlb	61	; () banked
 11530  01C45C  AB17               	btfss	23,5,b	;volatile
 11531  01C45E  D7FD               	goto	u8810
 11532                           
 11533                           ; BSR set to: 61
 11534                           ;eadog.c: 448:  wdtdelay(50);
 11535  01C460  0E32               	movlw	50
 11536  01C462  6EE6               	movwf	postinc1,c
 11537  01C464  0E00               	movlw	0
 11538  01C466  6EE6               	movwf	postinc1,c
 11539  01C468  0E00               	movlw	0
 11540  01C46A  6EE6               	movwf	postinc1,c
 11541  01C46C  0E00               	movlw	0
 11542  01C46E  6EE6               	movwf	postinc1,c
 11543  01C470  ECDA  F0DB         	call	_wdtdelay	;wreg free
 11544                           
 11545                           ; BSR set to: 0
 11546                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11547  01C474  0012               	return		;funcret
 11548  01C476                     __end_of_wait_lcd_done:
 11549                           	opt callstack 0
 11550                           
 11551 ;; *************** function _wdtdelay *****************
 11552 ;; Defined at:
 11553 ;;		line 23 in file "eadog.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;  delay           4  [STACK] const unsigned long 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1  [STACK] void 
 11560 ;; Registers used:
 11561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11562 ;; Tracked objects:
 11563 ;;		On entry : 2/3D
 11564 ;;		On exit  : 3F/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11571 ;;Total ram usage:        0 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:   15
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_init_display
 11578 ;;		_send_lcd_data
 11579 ;;		_send_lcd_cmd
 11580 ;;		_send_lcd_cmd_long
 11581 ;;		_eaDogM_WriteStringAtPos
 11582 ;;		_wait_lcd_done
 11583 ;; This function uses a reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text44
 11587  01B7B4                     __ptext44:
 11588                           	opt callstack 0
 11589  01B7B4                     _wdtdelay:
 11590                           	opt callstack 14
 11591                           
 11592                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11593                           
 11594                           ; BSR set to: 0
 11595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11596                           ;incstack = 0
 11597  01B7B4  0100               	movlb	0	; () banked
 11598  01B7B6  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11599  01B7B8  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11600  01B7BA  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11601  01B7BC  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11602  01B7BE                     l1475:
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;eadog.c: 28:   __nop();
 11606  01B7BE  F000               	nop	
 11607  01B7C0  0004               	clrwdt		;# 
 11608                           
 11609                           ;eadog.c: 30:  };
 11610  01B7C2  0E01               	movlw	1
 11611  01B7C4  0100               	movlb	0	; () banked
 11612  01B7C6  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11613  01B7C8  0E00               	movlw	0
 11614  01B7CA  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11615  01B7CC  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11616  01B7CE  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;stkvar	_delay @ sp[(0)+-4]
 11620  01B7D0  0EFC               	movlw	-4
 11621  01B7D2  006F FF8C  F001    	movff	plusw1,btemp
 11622  01B7D8  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11623  01B7DA  5C01               	subwf	btemp^0,w,c
 11624  01B7DC  0EFD               	movlw	-3
 11625  01B7DE  006F FF8C  F001    	movff	plusw1,btemp
 11626  01B7E4  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11627  01B7E6  5801               	subwfb	btemp^0,w,c
 11628  01B7E8  0EFE               	movlw	-2
 11629  01B7EA  006F FF8C  F001    	movff	plusw1,btemp
 11630  01B7F0  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11631  01B7F2  5801               	subwfb	btemp^0,w,c
 11632  01B7F4  0EFF               	movlw	-1
 11633  01B7F6  006F FF8C  F001    	movff	plusw1,btemp
 11634  01B7FC  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11635  01B7FE  5801               	subwfb	btemp^0,w,c
 11636  01B800  B0D8               	btfsc	status,0,c
 11637  01B802  D7DD               	goto	l1475
 11638                           
 11639                           ; BSR set to: 0
 11640                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11641  01B804  52E5               	movf	postdec1,f,c
 11642  01B806  52E5               	movf	postdec1,f,c
 11643  01B808  52E5               	movf	postdec1,f,c
 11644  01B80A  52E5               	movf	postdec1,f,c
 11645  01B80C  0012               	return		;funcret
 11646  01B80E                     __end_of_wdtdelay:
 11647                           	opt callstack 0
 11648                           
 11649 ;; *************** function _send_lcd_data_dma *****************
 11650 ;; Defined at:
 11651 ;;		line 182 in file "eadog.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;  strPtr          1  [STACK] const unsigned char 
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1  [STACK] void 
 11658 ;; Registers used:
 11659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 3F/3B
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11669 ;;Total ram usage:        0 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:   24
 11672 ;; This function calls:
 11673 ;;		_printf
 11674 ;;		_ringBufS_flush
 11675 ;;		_start_lcd
 11676 ;;		_wait_lcd_set
 11677 ;; This function is called by:
 11678 ;;		_send_lcd_cmd_dma
 11679 ;;		_eaDogM_WriteStringAtPos
 11680 ;; This function uses a reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text45
 11684  01B95A                     __ptext45:
 11685                           	opt callstack 0
 11686  01B95A                     _send_lcd_data_dma:
 11687                           	opt callstack 4
 11688                           
 11689                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11690                           
 11691                           ; BSR set to: 0
 11692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11693                           ;incstack = 0
 11694  01B95A  ECA6  F0E3         	call	_wait_lcd_set	;wreg free
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11698  01B95E  0E00               	movlw	0
 11699  01B960  6EE6               	movwf	postinc1,c
 11700  01B962  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 11701  01B968  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 11702  01B96E  EC57  F0D7         	call	_ringBufS_flush	;wreg free
 11703  01B972  94BC               	bcf	188,2,c	;volatile
 11704                           
 11705                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11706  01B974  013B               	movlb	59	; () banked
 11707  01B976  9FFC               	bcf	252,7,b	;volatile
 11708                           
 11709                           ; BSR set to: 59
 11710                           ;eadog.c: 189:  DMA1SSZ = 1;
 11711  01B978  0E00               	movlw	0
 11712  01B97A  6FF8               	movwf	248,b	;volatile
 11713  01B97C  0E01               	movlw	1
 11714  01B97E  6FF7               	movwf	247,b	;volatile
 11715                           
 11716                           ; BSR set to: 59
 11717                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11718  01B980  8FFC               	bsf	252,7,b	;volatile
 11719                           
 11720                           ; BSR set to: 59
 11721                           ;eadog.c: 191:  printf("%c", strPtr);
 11722                           ;stkvar	_strPtr @ sp[(0)+-1]
 11723  01B982  0EFF               	movlw	-1
 11724  01B984  50E3               	movf	plusw1,w,c
 11725  01B986  6EE6               	movwf	postinc1,c
 11726  01B988  0E00               	movlw	0
 11727  01B98A  6EE6               	movwf	postinc1,c
 11728  01B98C  0EF8               	movlw	low STR_47
 11729  01B98E  6EE6               	movwf	postinc1,c
 11730  01B990  0EFF               	movlw	high STR_47
 11731  01B992  6EE6               	movwf	postinc1,c
 11732  01B994  0E04               	movlw	4
 11733  01B996  6EE6               	movwf	postinc1,c
 11734  01B998  EC1B  F0DB         	call	_printf	;wreg free
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;eadog.c: 192:  start_lcd();
 11738  01B99C  ECA9  F0E3         	call	_start_lcd	;wreg free
 11739                           
 11740                           ; BSR set to: 59
 11741                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11742  01B9A0  52E5               	movf	postdec1,f,c
 11743  01B9A2  0012               	return		;funcret
 11744  01B9A4                     __end_of_send_lcd_data_dma:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _eaDogM_WriteString *****************
 11748 ;; Defined at:
 11749 ;;		line 151 in file "eadog.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  strPtr          2  [STACK] PTR unsigned char 
 11752 ;;		 -> D.lcd(480), D(482), V(192), 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1  [STACK] void 
 11757 ;; Registers used:
 11758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11759 ;; Tracked objects:
 11760 ;;		On entry : 3F/0
 11761 ;;		On exit  : 3F/3B
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:   24
 11771 ;; This function calls:
 11772 ;;		_printf
 11773 ;;		_ringBufS_flush
 11774 ;;		_start_lcd
 11775 ;;		_strlen
 11776 ;;		_wait_lcd_set
 11777 ;; This function is called by:
 11778 ;;		_eaDogM_WriteStringAtPos
 11779 ;; This function uses a reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text46
 11783  01ACCE                     __ptext46:
 11784                           	opt callstack 0
 11785  01ACCE                     _eaDogM_WriteString:
 11786                           	opt callstack 4
 11787                           
 11788                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11789                           
 11790                           ; BSR set to: 59
 11791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11792                           ;incstack = 0
 11793  01ACCE  ECA6  F0E3         	call	_wait_lcd_set	;wreg free
 11794                           
 11795                           ; BSR set to: 1
 11796                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11797  01ACD2  0E00               	movlw	0
 11798  01ACD4  6EE6               	movwf	postinc1,c
 11799  01ACD6  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 11800  01ACDC  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 11801  01ACE2  EC57  F0D7         	call	_ringBufS_flush	;wreg free
 11802  01ACE6  94BC               	bcf	188,2,c	;volatile
 11803                           
 11804                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11805                           ;stkvar	_strPtr @ sp[(0)+-2]
 11806  01ACE8  0EFE               	movlw	-2
 11807  01ACEA  006F FF8F FFE6     	movff	plusw1,postinc1
 11808  01ACF0  006F FF8F FFE6     	movff	plusw1,postinc1
 11809  01ACF6  ECBA  F0D6         	call	_strlen	;wreg free
 11810  01ACFA  5002               	movf	(btemp+1)^0,w,c
 11811  01ACFC  E104               	bnz	u12560
 11812  01ACFE  0E41               	movlw	65
 11813  01AD00  5C01               	subwf	btemp^0,w,c
 11814  01AD02  A0D8               	btfss	status,0,c
 11815  01AD04  D010               	goto	l13070
 11816  01AD06                     u12560:
 11817                           
 11818                           ;stkvar	_strPtr @ sp[(0)+-2]
 11819  01AD06  0EFE               	movlw	-2
 11820  01AD08  006F FF8C  F00B    	movff	plusw1,btemp+10
 11821  01AD0E  0EFF               	movlw	-1
 11822  01AD10  006F FF8C  F00C    	movff	plusw1,btemp+11
 11823  01AD16  0E40               	movlw	64
 11824  01AD18  240B               	addwf	(btemp+10)^0,w,c
 11825  01AD1A  6ED9               	movwf	fsr2l,c
 11826  01AD1C  0E00               	movlw	0
 11827  01AD1E  200C               	addwfc	(btemp+11)^0,w,c
 11828  01AD20  6EDA               	movwf	fsr2h,c
 11829  01AD22  0E00               	movlw	0
 11830  01AD24  6EDF               	movwf	indf2,c
 11831  01AD26                     l13070:
 11832                           
 11833                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11834  01AD26  013B               	movlb	59	; () banked
 11835  01AD28  9FFC               	bcf	252,7,b	;volatile
 11836                           
 11837                           ; BSR set to: 59
 11838                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11839                           ;stkvar	_strPtr @ sp[(0)+-2]
 11840  01AD2A  0EFE               	movlw	-2
 11841  01AD2C  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  01AD32  006F FF8F FFE6     	movff	plusw1,postinc1
 11843  01AD38  ECBA  F0D6         	call	_strlen	;wreg free
 11844  01AD3C  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11845  01AD42  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11846                           
 11847                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11848  01AD48  013B               	movlb	59	; () banked
 11849  01AD4A  8FFC               	bsf	252,7,b	;volatile
 11850                           
 11851                           ; BSR set to: 59
 11852                           ;eadog.c: 161:  printf("%s", strPtr);
 11853                           ;stkvar	_strPtr @ sp[(0)+-2]
 11854  01AD4C  0EFE               	movlw	-2
 11855  01AD4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11856  01AD54  006F FF8F FFE6     	movff	plusw1,postinc1
 11857  01AD5A  0EFB               	movlw	low STR_46
 11858  01AD5C  6EE6               	movwf	postinc1,c
 11859  01AD5E  0EFF               	movlw	high STR_46
 11860  01AD60  6EE6               	movwf	postinc1,c
 11861  01AD62  0E04               	movlw	4
 11862  01AD64  6EE6               	movwf	postinc1,c
 11863  01AD66  EC1B  F0DB         	call	_printf	;wreg free
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;eadog.c: 162:  start_lcd();
 11867  01AD6A  ECA9  F0E3         	call	_start_lcd	;wreg free
 11868                           
 11869                           ; BSR set to: 59
 11870                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11871  01AD6E  52E5               	movf	postdec1,f,c
 11872  01AD70  52E5               	movf	postdec1,f,c
 11873  01AD72  0012               	return		;funcret
 11874  01AD74                     __end_of_eaDogM_WriteString:
 11875                           	opt callstack 0
 11876                           
 11877 ;; *************** function _wait_lcd_set *****************
 11878 ;; Defined at:
 11879 ;;		line 434 in file "eadog.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;		None
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1  [STACK] void 
 11886 ;; Registers used:
 11887 ;;		None
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 3F/1
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11897 ;;Total ram usage:        0 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:   15
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_eaDogM_WriteString
 11904 ;;		_send_lcd_data_dma
 11905 ;; This function uses a reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text47
 11909  01C74C                     __ptext47:
 11910                           	opt callstack 0
 11911  01C74C                     _wait_lcd_set:
 11912                           	opt callstack 12
 11913                           
 11914                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11915                           
 11916                           ; BSR set to: 59
 11917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11918                           ;incstack = 0
 11919  01C74C  0101               	movlb	1	; () banked
 11920  01C74E  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 11921                           
 11922                           ; BSR set to: 1
 11923                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11924  01C750  0012               	return		;funcret
 11925  01C752                     __end_of_wait_lcd_set:
 11926                           	opt callstack 0
 11927                           
 11928 ;; *************** function _start_lcd *****************
 11929 ;; Defined at:
 11930 ;;		line 429 in file "eadog.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1  [STACK] void 
 11937 ;; Registers used:
 11938 ;;		None
 11939 ;; Tracked objects:
 11940 ;;		On entry : 3F/0
 11941 ;;		On exit  : 3F/3B
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:   15
 11951 ;; This function calls:
 11952 ;;		Nothing
 11953 ;; This function is called by:
 11954 ;;		_eaDogM_WriteString
 11955 ;;		_send_lcd_data_dma
 11956 ;; This function uses a reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text48
 11960  01C752                     __ptext48:
 11961                           	opt callstack 0
 11962  01C752                     _start_lcd:
 11963                           	opt callstack 12
 11964                           
 11965                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11966                           
 11967                           ; BSR set to: 1
 11968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11969                           ;incstack = 0
 11970  01C752  013B               	movlb	59	; () banked
 11971  01C754  8DFC               	bsf	252,6,b	;volatile
 11972                           
 11973                           ; BSR set to: 59
 11974                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11975  01C756  0012               	return		;funcret
 11976  01C758                     __end_of_start_lcd:
 11977                           	opt callstack 0
 11978                           
 11979 ;; *************** function _ringBufS_flush *****************
 11980 ;; Defined at:
 11981 ;;		line 76 in file "ringbufs.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11984 ;;		 -> ring_buf1(67), 
 11985 ;;  clearBuffer     1  [STACK] const char 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1  [STACK] void 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11992 ;; Tracked objects:
 11993 ;;		On entry : 3F/1
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12001 ;;Total ram usage:        0 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:   16
 12004 ;; This function calls:
 12005 ;;		_memset
 12006 ;; This function is called by:
 12007 ;;		_eaDogM_WriteString
 12008 ;;		_send_lcd_data_dma
 12009 ;; This function uses a reentrant model
 12010 ;;
 12011                           
 12012                           	psect	text49
 12013  01AEAE                     __ptext49:
 12014                           	opt callstack 0
 12015  01AEAE                     _ringBufS_flush:
 12016                           	opt callstack 11
 12017                           
 12018                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 12019                           ;stkvar	__this @ sp[(0)+-2]
 12020                           
 12021                           ; BSR set to: 59
 12022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12023                           ;incstack = 0
 12024  01AEAE  0EFE               	movlw	-2
 12025  01AEB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12026  01AEB6  0EFF               	movlw	-1
 12027  01AEB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12028  01AEBE  0E42               	movlw	66
 12029  01AEC0  240B               	addwf	(btemp+10)^0,w,c
 12030  01AEC2  6ED9               	movwf	fsr2l,c
 12031  01AEC4  0E00               	movlw	0
 12032  01AEC6  200C               	addwfc	(btemp+11)^0,w,c
 12033  01AEC8  6EDA               	movwf	fsr2h,c
 12034  01AECA  0E00               	movlw	0
 12035  01AECC  6EDF               	movwf	indf2,c
 12036                           
 12037                           ;ringbufs.c: 79:  _this->head = 0;
 12038                           ;stkvar	__this @ sp[(0)+-2]
 12039  01AECE  0EFE               	movlw	-2
 12040  01AED0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12041  01AED6  0EFF               	movlw	-1
 12042  01AED8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12043  01AEDE  0E40               	movlw	64
 12044  01AEE0  240B               	addwf	(btemp+10)^0,w,c
 12045  01AEE2  6ED9               	movwf	fsr2l,c
 12046  01AEE4  0E00               	movlw	0
 12047  01AEE6  200C               	addwfc	(btemp+11)^0,w,c
 12048  01AEE8  6EDA               	movwf	fsr2h,c
 12049  01AEEA  0E00               	movlw	0
 12050  01AEEC  6EDF               	movwf	indf2,c
 12051                           
 12052                           ;ringbufs.c: 80:  _this->tail = 0;
 12053                           ;stkvar	__this @ sp[(0)+-2]
 12054  01AEEE  0EFE               	movlw	-2
 12055  01AEF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12056  01AEF6  0EFF               	movlw	-1
 12057  01AEF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12058  01AEFE  0E41               	movlw	65
 12059  01AF00  240B               	addwf	(btemp+10)^0,w,c
 12060  01AF02  6ED9               	movwf	fsr2l,c
 12061  01AF04  0E00               	movlw	0
 12062  01AF06  200C               	addwfc	(btemp+11)^0,w,c
 12063  01AF08  6EDA               	movwf	fsr2h,c
 12064  01AF0A  0E00               	movlw	0
 12065  01AF0C  6EDF               	movwf	indf2,c
 12066                           
 12067                           ;ringbufs.c: 81:  if (clearBuffer) {
 12068                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 12069  01AF0E  0EFD               	movlw	-3
 12070  01AF10  50E3               	movf	plusw1,w,c
 12071  01AF12  B4D8               	btfsc	status,2,c
 12072  01AF14  D011               	goto	l1607
 12073                           
 12074                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 12075  01AF16  0E40               	movlw	64
 12076  01AF18  6EE6               	movwf	postinc1,c
 12077  01AF1A  0E00               	movlw	0
 12078  01AF1C  6EE6               	movwf	postinc1,c
 12079  01AF1E  0E00               	movlw	0
 12080  01AF20  6EE6               	movwf	postinc1,c
 12081  01AF22  0E00               	movlw	0
 12082  01AF24  6EE6               	movwf	postinc1,c
 12083                           
 12084                           ;stkvar	__this @ sp[(-4)+-2]
 12085  01AF26  0EFA               	movlw	-6
 12086  01AF28  006F FF8F FFE6     	movff	plusw1,postinc1
 12087  01AF2E  006F FF8F FFE6     	movff	plusw1,postinc1
 12088  01AF34  EC5D  F0B7         	call	_memset	;wreg free
 12089  01AF38                     l1607:
 12090                           
 12091                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 12092  01AF38  52E5               	movf	postdec1,f,c
 12093  01AF3A  52E5               	movf	postdec1,f,c
 12094  01AF3C  52E5               	movf	postdec1,f,c
 12095  01AF3E  0012               	return		;funcret
 12096  01AF40                     __end_of_ringBufS_flush:
 12097                           	opt callstack 0
 12098                           
 12099 ;; *************** function _memset *****************
 12100 ;; Defined at:
 12101 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;  dest            2  [STACK] PTR void 
 12104 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12105 ;;  c               2  [STACK] int 
 12106 ;;  n               2  [STACK] unsigned int 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;  s               2  [STACK] PTR unsigned char 
 12109 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12110 ;;  k               2  [STACK] unsigned int 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  2  [STACK] PTR void 
 12113 ;; Registers used:
 12114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/1
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:   15
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_ringBufS_init
 12131 ;;		_ringBufS_flush
 12132 ;; This function uses a reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text50
 12136  016EBA                     __ptext50:
 12137                           	opt callstack 0
 12138  016EBA                     _memset:
 12139                           	opt callstack 0
 12140                           
 12141                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12142  016EBA  52E6               	movf	postinc1,f,c
 12143  016EBC  52E6               	movf	postinc1,f,c
 12144  016EBE  52E6               	movf	postinc1,f,c
 12145  016EC0  52E6               	movf	postinc1,f,c
 12146                           
 12147                           ;stkvar	_dest @ sp[(-4)+-2]
 12148                           
 12149                           ;incstack = 0
 12150  016EC2  0EFA               	movlw	-6
 12151  016EC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 12152  016ECA  0EFB               	movlw	-5
 12153  016ECC  006F FF8C  F00C    	movff	plusw1,btemp+11
 12154                           
 12155                           ;stkvar	_s @ sp[(-4)+0]
 12156  016ED2  0EFD               	movlw	-3
 12157  016ED4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12158  016EDA  0EFC               	movlw	-4
 12159  016EDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12160                           
 12161                           ;stkvar	_n @ sp[(-4)+-6]
 12162  016EE2  0EF6               	movlw	-10
 12163  016EE4  006F FF8C  F001    	movff	plusw1,btemp
 12164  016EEA  0EF7               	movlw	-9
 12165  016EEC  50E3               	movf	plusw1,w,c
 12166  016EEE  1001               	iorwf	btemp^0,w,c
 12167  016EF0  B4D8               	btfsc	status,2,c
 12168  016EF2  D154               	goto	u11110
 12169                           
 12170                           ;stkvar	_c @ sp[(-4)+-4]
 12171                           ;stkvar	_s @ sp[(-4)+0]
 12172  016EF4  0EFC               	movlw	-4
 12173  016EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12174  016EFC  0EFD               	movlw	-3
 12175  016EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12176  016F04  0EF8               	movlw	-8
 12177  016F06  006F FF8F FFDF     	movff	plusw1,indf2
 12178                           
 12179                           ;stkvar	_c @ sp[(-4)+-4]
 12180                           ;stkvar	_n @ sp[(-4)+-6]
 12181                           ;stkvar	_s @ sp[(-4)+0]
 12182  016F0C  0EFC               	movlw	-4
 12183  016F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12184  016F14  0EFD               	movlw	-3
 12185  016F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 12186  016F1C  0EF6               	movlw	-10
 12187  016F1E  50E3               	movf	plusw1,w,c
 12188  016F20  260B               	addwf	(btemp+10)^0,f,c
 12189  016F22  0EF7               	movlw	-9
 12190  016F24  50E3               	movf	plusw1,w,c
 12191  016F26  220C               	addwfc	(btemp+11)^0,f,c
 12192  016F28  0EFF               	movlw	255
 12193  016F2A  240B               	addwf	(btemp+10)^0,w,c
 12194  016F2C  6ED9               	movwf	fsr2l,c
 12195  016F2E  0EFF               	movlw	255
 12196  016F30  200C               	addwfc	(btemp+11)^0,w,c
 12197  016F32  6EDA               	movwf	fsr2h,c
 12198  016F34  0EF8               	movlw	-8
 12199  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 12200                           
 12201                           ;stkvar	_n @ sp[(-4)+-6]
 12202  016F3C  0EF7               	movlw	-9
 12203  016F3E  50E3               	movf	plusw1,w,c
 12204  016F40  E108               	bnz	l12222
 12205  016F42  0EF6               	movlw	-10
 12206  016F44  006F FF8C  F001    	movff	plusw1,btemp
 12207  016F4A  0E03               	movlw	3
 12208  016F4C  5E01               	subwf	btemp^0,f,c
 12209  016F4E  A0D8               	btfss	status,0,c
 12210  016F50  D125               	goto	u11110
 12211  016F52                     l12222:
 12212                           
 12213                           ;stkvar	_c @ sp[(-4)+-4]
 12214                           ;stkvar	_s @ sp[(-4)+0]
 12215  016F52  0EFC               	movlw	-4
 12216  016F54  006F FF8C  F00B    	movff	plusw1,btemp+10
 12217  016F5A  0EFD               	movlw	-3
 12218  016F5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12219  016F62  0E01               	movlw	1
 12220  016F64  240B               	addwf	(btemp+10)^0,w,c
 12221  016F66  6ED9               	movwf	fsr2l,c
 12222  016F68  0E00               	movlw	0
 12223  016F6A  200C               	addwfc	(btemp+11)^0,w,c
 12224  016F6C  6EDA               	movwf	fsr2h,c
 12225  016F6E  0EF8               	movlw	-8
 12226  016F70  006F FF8F FFDF     	movff	plusw1,indf2
 12227                           
 12228                           ;stkvar	_c @ sp[(-4)+-4]
 12229                           ;stkvar	_s @ sp[(-4)+0]
 12230  016F76  0EFC               	movlw	-4
 12231  016F78  006F FF8C  F00B    	movff	plusw1,btemp+10
 12232  016F7E  0EFD               	movlw	-3
 12233  016F80  006F FF8C  F00C    	movff	plusw1,btemp+11
 12234  016F86  0E02               	movlw	2
 12235  016F88  240B               	addwf	(btemp+10)^0,w,c
 12236  016F8A  6ED9               	movwf	fsr2l,c
 12237  016F8C  0E00               	movlw	0
 12238  016F8E  200C               	addwfc	(btemp+11)^0,w,c
 12239  016F90  6EDA               	movwf	fsr2h,c
 12240  016F92  0EF8               	movlw	-8
 12241  016F94  006F FF8F FFDF     	movff	plusw1,indf2
 12242                           
 12243                           ;stkvar	_c @ sp[(-4)+-4]
 12244                           ;stkvar	_n @ sp[(-4)+-6]
 12245                           ;stkvar	_s @ sp[(-4)+0]
 12246  016F9A  0EFC               	movlw	-4
 12247  016F9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12248  016FA2  0EFD               	movlw	-3
 12249  016FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12250  016FAA  0EF6               	movlw	-10
 12251  016FAC  50E3               	movf	plusw1,w,c
 12252  016FAE  260B               	addwf	(btemp+10)^0,f,c
 12253  016FB0  0EF7               	movlw	-9
 12254  016FB2  50E3               	movf	plusw1,w,c
 12255  016FB4  220C               	addwfc	(btemp+11)^0,f,c
 12256  016FB6  0EFE               	movlw	254
 12257  016FB8  240B               	addwf	(btemp+10)^0,w,c
 12258  016FBA  6ED9               	movwf	fsr2l,c
 12259  016FBC  0EFF               	movlw	255
 12260  016FBE  200C               	addwfc	(btemp+11)^0,w,c
 12261  016FC0  6EDA               	movwf	fsr2h,c
 12262  016FC2  0EF8               	movlw	-8
 12263  016FC4  006F FF8F FFDF     	movff	plusw1,indf2
 12264                           
 12265                           ;stkvar	_c @ sp[(-4)+-4]
 12266                           ;stkvar	_n @ sp[(-4)+-6]
 12267                           ;stkvar	_s @ sp[(-4)+0]
 12268  016FCA  0EFC               	movlw	-4
 12269  016FCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12270  016FD2  0EFD               	movlw	-3
 12271  016FD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12272  016FDA  0EF6               	movlw	-10
 12273  016FDC  50E3               	movf	plusw1,w,c
 12274  016FDE  260B               	addwf	(btemp+10)^0,f,c
 12275  016FE0  0EF7               	movlw	-9
 12276  016FE2  50E3               	movf	plusw1,w,c
 12277  016FE4  220C               	addwfc	(btemp+11)^0,f,c
 12278  016FE6  0EFD               	movlw	253
 12279  016FE8  240B               	addwf	(btemp+10)^0,w,c
 12280  016FEA  6ED9               	movwf	fsr2l,c
 12281  016FEC  0EFF               	movlw	255
 12282  016FEE  200C               	addwfc	(btemp+11)^0,w,c
 12283  016FF0  6EDA               	movwf	fsr2h,c
 12284  016FF2  0EF8               	movlw	-8
 12285  016FF4  006F FF8F FFDF     	movff	plusw1,indf2
 12286                           
 12287                           ;stkvar	_n @ sp[(-4)+-6]
 12288  016FFA  0EF7               	movlw	-9
 12289  016FFC  50E3               	movf	plusw1,w,c
 12290  016FFE  E108               	bnz	l12228
 12291  017000  0EF6               	movlw	-10
 12292  017002  006F FF8C  F001    	movff	plusw1,btemp
 12293  017008  0E07               	movlw	7
 12294  01700A  5E01               	subwf	btemp^0,f,c
 12295  01700C  A0D8               	btfss	status,0,c
 12296  01700E  D0C6               	goto	u11110
 12297  017010                     l12228:
 12298                           
 12299                           ;stkvar	_c @ sp[(-4)+-4]
 12300                           ;stkvar	_s @ sp[(-4)+0]
 12301  017010  0EFC               	movlw	-4
 12302  017012  006F FF8C  F00B    	movff	plusw1,btemp+10
 12303  017018  0EFD               	movlw	-3
 12304  01701A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12305  017020  0E03               	movlw	3
 12306  017022  240B               	addwf	(btemp+10)^0,w,c
 12307  017024  6ED9               	movwf	fsr2l,c
 12308  017026  0E00               	movlw	0
 12309  017028  200C               	addwfc	(btemp+11)^0,w,c
 12310  01702A  6EDA               	movwf	fsr2h,c
 12311  01702C  0EF8               	movlw	-8
 12312  01702E  006F FF8F FFDF     	movff	plusw1,indf2
 12313                           
 12314                           ;stkvar	_c @ sp[(-4)+-4]
 12315                           ;stkvar	_n @ sp[(-4)+-6]
 12316                           ;stkvar	_s @ sp[(-4)+0]
 12317  017034  0EFC               	movlw	-4
 12318  017036  006F FF8C  F00B    	movff	plusw1,btemp+10
 12319  01703C  0EFD               	movlw	-3
 12320  01703E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12321  017044  0EF6               	movlw	-10
 12322  017046  50E3               	movf	plusw1,w,c
 12323  017048  260B               	addwf	(btemp+10)^0,f,c
 12324  01704A  0EF7               	movlw	-9
 12325  01704C  50E3               	movf	plusw1,w,c
 12326  01704E  220C               	addwfc	(btemp+11)^0,f,c
 12327  017050  0EFC               	movlw	252
 12328  017052  240B               	addwf	(btemp+10)^0,w,c
 12329  017054  6ED9               	movwf	fsr2l,c
 12330  017056  0EFF               	movlw	255
 12331  017058  200C               	addwfc	(btemp+11)^0,w,c
 12332  01705A  6EDA               	movwf	fsr2h,c
 12333  01705C  0EF8               	movlw	-8
 12334  01705E  006F FF8F FFDF     	movff	plusw1,indf2
 12335                           
 12336                           ;stkvar	_n @ sp[(-4)+-6]
 12337  017064  0EF7               	movlw	-9
 12338  017066  50E3               	movf	plusw1,w,c
 12339  017068  E108               	bnz	l12234
 12340  01706A  0EF6               	movlw	-10
 12341  01706C  006F FF8C  F001    	movff	plusw1,btemp
 12342  017072  0E09               	movlw	9
 12343  017074  5E01               	subwf	btemp^0,f,c
 12344  017076  A0D8               	btfss	status,0,c
 12345  017078  D091               	goto	u11110
 12346  01707A                     l12234:
 12347                           
 12348                           ;stkvar	_s @ sp[(-4)+0]
 12349  01707A  0EFC               	movlw	-4
 12350  01707C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12351  017082  1E0B               	comf	(btemp+10)^0,f,c
 12352  017084  0EFD               	movlw	-3
 12353  017086  006F FF8C  F00C    	movff	plusw1,btemp+11
 12354  01708C  1E0C               	comf	(btemp+11)^0,f,c
 12355  01708E  2A0B               	incf	(btemp+10)^0,f,c
 12356  017090  B4D8               	btfsc	status,2,c
 12357  017092  2A0C               	incf	(btemp+11)^0,f,c
 12358  017094  0E03               	movlw	3
 12359  017096  160B               	andwf	(btemp+10)^0,f,c
 12360  017098  0E00               	movlw	0
 12361  01709A  160C               	andwf	(btemp+11)^0,f,c
 12362                           
 12363                           ;stkvar	_k @ sp[(-4)+2]
 12364  01709C  0EFE               	movlw	-2
 12365  01709E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12366  0170A4  0EFF               	movlw	-1
 12367  0170A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12368                           
 12369                           ;stkvar	_k @ sp[(-4)+2]
 12370                           ;stkvar	_s @ sp[(-4)+0]
 12371  0170AC  0EFC               	movlw	-4
 12372  0170AE  50E3               	movf	plusw1,w,c
 12373  0170B0  6E01               	movwf	btemp^0,c
 12374  0170B2  0EFE               	movlw	-2
 12375  0170B4  50E3               	movf	plusw1,w,c
 12376  0170B6  2601               	addwf	btemp^0,f,c
 12377  0170B8  0EFC               	movlw	-4
 12378  0170BA  0060  F007  FFE3   	movff	btemp,plusw1
 12379  0170C0  0EFD               	movlw	-3
 12380  0170C2  50E3               	movf	plusw1,w,c
 12381  0170C4  6E01               	movwf	btemp^0,c
 12382  0170C6  0EFF               	movlw	-1
 12383  0170C8  50E3               	movf	plusw1,w,c
 12384  0170CA  2201               	addwfc	btemp^0,f,c
 12385  0170CC  0EFD               	movlw	-3
 12386  0170CE  0060  F007  FFE3   	movff	btemp,plusw1
 12387                           
 12388                           ;stkvar	_k @ sp[(-4)+2]
 12389                           ;stkvar	_n @ sp[(-4)+-6]
 12390  0170D4  0EF6               	movlw	-10
 12391  0170D6  50E3               	movf	plusw1,w,c
 12392  0170D8  6E01               	movwf	btemp^0,c
 12393  0170DA  0EFE               	movlw	-2
 12394  0170DC  50E3               	movf	plusw1,w,c
 12395  0170DE  5E01               	subwf	btemp^0,f,c
 12396  0170E0  0EF6               	movlw	-10
 12397  0170E2  0060  F007  FFE3   	movff	btemp,plusw1
 12398  0170E8  0EF7               	movlw	-9
 12399  0170EA  50E3               	movf	plusw1,w,c
 12400  0170EC  6E01               	movwf	btemp^0,c
 12401  0170EE  0EFF               	movlw	-1
 12402  0170F0  50E3               	movf	plusw1,w,c
 12403  0170F2  5A01               	subwfb	btemp^0,f,c
 12404  0170F4  0EF7               	movlw	-9
 12405  0170F6  0060  F007  FFE3   	movff	btemp,plusw1
 12406  0170FC  0EFC               	movlw	252
 12407  0170FE  6E0B               	movwf	(btemp+10)^0,c
 12408  017100  0EFF               	movlw	255
 12409  017102  6E0C               	movwf	(btemp+11)^0,c
 12410                           
 12411                           ;stkvar	_n @ sp[(-4)+-6]
 12412  017104  0EF6               	movlw	-10
 12413  017106  006F FF8C  F001    	movff	plusw1,btemp
 12414  01710C  500B               	movf	(btemp+10)^0,w,c
 12415  01710E  1601               	andwf	btemp^0,f,c
 12416  017110  0EF6               	movlw	-10
 12417  017112  0060  F007  FFE3   	movff	btemp,plusw1
 12418  017118  0EF7               	movlw	-9
 12419  01711A  006F FF8C  F001    	movff	plusw1,btemp
 12420  017120  500C               	movf	(btemp+11)^0,w,c
 12421  017122  1601               	andwf	btemp^0,f,c
 12422  017124  0EF7               	movlw	-9
 12423  017126  D02E               	goto	L10
 12424  017128                     l12242:
 12425                           
 12426                           ;stkvar	_c @ sp[(-4)+-4]
 12427                           ;stkvar	_s @ sp[(-4)+0]
 12428  017128  0EFC               	movlw	-4
 12429  01712A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12430  017130  0EFD               	movlw	-3
 12431  017132  006F FF8F FFDA     	movff	plusw1,fsr2h
 12432  017138  0EF8               	movlw	-8
 12433  01713A  006F FF8F FFDF     	movff	plusw1,indf2
 12434                           
 12435                           ;stkvar	_n @ sp[(-4)+-6]
 12436  017140  0EF6               	movlw	-10
 12437  017142  006F FF8C  F001    	movff	plusw1,btemp
 12438  017148  0E01               	movlw	1
 12439  01714A  5E01               	subwf	btemp^0,f,c
 12440  01714C  0EF6               	movlw	-10
 12441  01714E  0060  F007  FFE3   	movff	btemp,plusw1
 12442  017154  0EF7               	movlw	-9
 12443  017156  006F FF8C  F001    	movff	plusw1,btemp
 12444  01715C  0E00               	movlw	0
 12445  01715E  5A01               	subwfb	btemp^0,f,c
 12446  017160  0EF7               	movlw	-9
 12447  017162  0060  F007  FFE3   	movff	btemp,plusw1
 12448                           
 12449                           ;stkvar	_s @ sp[(-4)+0]
 12450  017168  0EFC               	movlw	-4
 12451  01716A  50E3               	movf	plusw1,w,c
 12452  01716C  0F01               	addlw	1
 12453  01716E  6E01               	movwf	btemp^0,c
 12454  017170  0EFC               	movlw	-4
 12455  017172  0060  F007  FFE3   	movff	btemp,plusw1
 12456  017178  6A01               	clrf	btemp^0,c
 12457  01717A  0EFD               	movlw	-3
 12458  01717C  50E3               	movf	plusw1,w,c
 12459  01717E  2001               	addwfc	btemp^0,w,c
 12460  017180  6E01               	movwf	btemp^0,c
 12461  017182  0EFD               	movlw	-3
 12462  017184                     L10:
 12463  017184  0060  F007  FFE3   	movff	btemp,plusw1
 12464                           
 12465                           ;stkvar	_n @ sp[(-4)+-6]
 12466  01718A  0EF6               	movlw	-10
 12467  01718C  006F FF8C  F001    	movff	plusw1,btemp
 12468  017192  0EF7               	movlw	-9
 12469  017194  50E3               	movf	plusw1,w,c
 12470  017196  1001               	iorwf	btemp^0,w,c
 12471  017198  A4D8               	btfss	status,2,c
 12472  01719A  D7C6               	goto	l12242
 12473  01719C                     u11110:
 12474                           
 12475                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12476  01719C  0EF6               	movlw	246
 12477  01719E  26E1               	addwf	fsr1l,f,c
 12478  0171A0  0EFF               	movlw	255
 12479  0171A2  22E2               	addwfc	fsr1h,f,c
 12480  0171A4  0012               	return		;funcret
 12481  0171A6                     __end_of_memset:
 12482                           	opt callstack 0
 12483                           
 12484 ;; *************** function _printf *****************
 12485 ;; Defined at:
 12486 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  fmt             2  [STACK] PTR const unsigned char 
 12489 ;;		 -> STR_47(3), STR_46(3), 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  ap              2  [STACK] PTR void [1]
 12492 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12493 ;;  ret             2    0        int 
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  2  [STACK] int 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12498 ;; Tracked objects:
 12499 ;;		On entry : 3F/3B
 12500 ;;		On exit  : 3F/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12507 ;;Total ram usage:        0 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:   23
 12510 ;; This function calls:
 12511 ;;		_vfprintf
 12512 ;; This function is called by:
 12513 ;;		_eaDogM_WriteString
 12514 ;;		_send_lcd_data_dma
 12515 ;; This function uses a reentrant model
 12516 ;;
 12517                           
 12518                           	psect	text51
 12519  01B636                     __ptext51:
 12520                           	opt callstack 0
 12521  01B636                     _printf:
 12522                           	opt callstack 0
 12523                           
 12524                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12525  01B636  52E6               	movf	postinc1,f,c
 12526  01B638  52E6               	movf	postinc1,f,c
 12527                           
 12528                           ;stkvar	?_printf @ sp[(-2)+-3]
 12529                           
 12530                           ;incstack = 0
 12531  01B63A  0EFB               	movlw	251
 12532  01B63C  24E1               	addwf	fsr1l,w,c
 12533  01B63E  6E0B               	movwf	(btemp+10)^0,c
 12534  01B640  0EFF               	movlw	255
 12535  01B642  20E2               	addwfc	fsr1h,w,c
 12536  01B644  6E0C               	movwf	(btemp+11)^0,c
 12537                           
 12538                           ;stkvar	_ap @ sp[(-2)+0]
 12539  01B646  0EFF               	movlw	-1
 12540  01B648  0060  F033  FFE3   	movff	btemp+11,plusw1
 12541  01B64E  0EFE               	movlw	-2
 12542  01B650  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12543                           
 12544                           ;stkvar	_ap @ sp[(-2)+0]
 12545  01B656  0EFE               	movlw	254
 12546  01B658  24E1               	addwf	fsr1l,w,c
 12547  01B65A  6E01               	movwf	btemp^0,c
 12548  01B65C  0EFF               	movlw	255
 12549  01B65E  20E2               	addwfc	fsr1h,w,c
 12550  01B660  6E02               	movwf	(btemp+1)^0,c
 12551  01B662  0060  F007  FFE6   	movff	btemp,postinc1
 12552  01B668  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12553                           
 12554                           ;stkvar	_fmt @ sp[(-4)+-3]
 12555  01B66E  0EF9               	movlw	-7
 12556  01B670  006F FF8F FFE6     	movff	plusw1,postinc1
 12557  01B676  006F FF8F FFE6     	movff	plusw1,postinc1
 12558  01B67C  0E00               	movlw	0
 12559  01B67E  6EE6               	movwf	postinc1,c
 12560  01B680  0E00               	movlw	0
 12561  01B682  6EE6               	movwf	postinc1,c
 12562  01B684  EC68  F0D5         	call	_vfprintf	;wreg free
 12563                           
 12564                           ; BSR set to: 0
 12565                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12566  01B688  52E5               	movf	postdec1,f,c
 12567  01B68A  52E5               	movf	postdec1,f,c
 12568  01B68C  52E5               	movf	postdec1,f,c
 12569  01B68E  50E7               	movf	indf1,w,c
 12570  01B690  5EE1               	subwf	fsr1l,f,c
 12571  01B692  0E00               	movlw	0
 12572  01B694  5AE2               	subwfb	fsr1h,f,c
 12573  01B696  0012               	return		;funcret
 12574  01B698                     __end_of_printf:
 12575                           	opt callstack 0
 12576                           
 12577 ;; *************** function _vfprintf *****************
 12578 ;; Defined at:
 12579 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12582 ;;		 -> f(6), NULL(0), 
 12583 ;;  fmt             2  [STACK] PTR const unsigned char 
 12584 ;;		 -> STR_67(127), STR_65(3), STR_64(3), STR_63(19), 
 12585 ;;		 -> STR_62(19), STR_61(19), STR_60(19), STR_59(19), 
 12586 ;;		 -> STR_58(19), STR_57(24), STR_56(15), STR_55(15), 
 12587 ;;		 -> STR_54(15), STR_53(10), STR_52(10), STR_51(19), 
 12588 ;;		 -> STR_50(19), STR_47(3), STR_46(3), STR_45(21), 
 12589 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 12590 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 12591 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 12592 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 12593 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 12594 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 12595 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 12596 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 12597 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 12598 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 12599 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 12600 ;;  ap              2  [STACK] PTR PTR void 
 12601 ;;		 -> ap(2), ap(2), 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;  cfmt            2  [STACK] PTR unsigned char 
 12604 ;;		 -> STR_67(127), STR_65(3), STR_64(3), STR_63(19), 
 12605 ;;		 -> STR_62(19), STR_61(19), STR_60(19), STR_59(19), 
 12606 ;;		 -> STR_58(19), STR_57(24), STR_56(15), STR_55(15), 
 12607 ;;		 -> STR_54(15), STR_53(10), STR_52(10), STR_51(19), 
 12608 ;;		 -> STR_50(19), STR_47(3), STR_46(3), STR_45(21), 
 12609 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 12610 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 12611 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 12612 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 12613 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 12614 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 12615 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 12616 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 12617 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 12618 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 12619 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  2  [STACK] int 
 12622 ;; Registers used:
 12623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/1
 12626 ;;		On exit  : 3F/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12633 ;;Total ram usage:        0 bytes
 12634 ;; Hardware stack levels used:    1
 12635 ;; Hardware stack levels required when called:   22
 12636 ;; This function calls:
 12637 ;;		_vfpfcnvrt
 12638 ;; This function is called by:
 12639 ;;		_sprintf
 12640 ;;		_printf
 12641 ;; This function uses a reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text52
 12645  01AAD0                     __ptext52:
 12646                           	opt callstack 0
 12647  01AAD0                     _vfprintf:
 12648                           	opt callstack 0
 12649                           
 12650                           ; BSR set to: 0
 12651                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12652  01AAD0  52E6               	movf	postinc1,f,c
 12653  01AAD2  52E6               	movf	postinc1,f,c
 12654                           
 12655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12656                           ;stkvar	_fmt @ sp[(-2)+-4]
 12657                           
 12658                           ;incstack = 0
 12659 ;; hardware stack exceeded
 12660  01AAD4  0EFA               	movlw	-6
 12661  01AAD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 12662  01AADC  0EFB               	movlw	-5
 12663  01AADE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12664                           
 12665                           ;stkvar	_cfmt @ sp[(-2)+0]
 12666  01AAE4  0EFF               	movlw	-1
 12667  01AAE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12668  01AAEC  0EFE               	movlw	-2
 12669  01AAEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12672  01AAF4  0100               	movlb	0	; () banked
 12673  01AAF6  6B9A               	clrf	_nout& (0+255),b
 12674  01AAF8  6B9B               	clrf	(_nout+1)& (0+255),b
 12675                           
 12676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12677  01AAFA  D021               	goto	l13092
 12678  01AAFC                     l13090:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12682                           ;stkvar	_ap @ sp[(-2)+-6]
 12683  01AAFC  0EF8               	movlw	-8
 12684  01AAFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12685  01AB04  006F FF8F FFE6     	movff	plusw1,postinc1
 12686                           
 12687                           ;stkvar	_cfmt @ sp[(-4)+0]
 12688  01AB0A  0EFC               	movlw	252
 12689  01AB0C  24E1               	addwf	fsr1l,w,c
 12690  01AB0E  6E01               	movwf	btemp^0,c
 12691  01AB10  0EFF               	movlw	255
 12692  01AB12  20E2               	addwfc	fsr1h,w,c
 12693  01AB14  6E02               	movwf	(btemp+1)^0,c
 12694  01AB16  0060  F007  FFE6   	movff	btemp,postinc1
 12695  01AB1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12696                           
 12697                           ;stkvar	_fp @ sp[(-6)+-2]
 12698  01AB22  0EF8               	movlw	-8
 12699  01AB24  006F FF8F FFE6     	movff	plusw1,postinc1
 12700  01AB2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12701  01AB30  EC13  F092         	call	_vfpfcnvrt	;wreg free
 12702  01AB34  5001               	movf	btemp^0,w,c
 12703  01AB36  0100               	movlb	0	; () banked
 12704  01AB38  279A               	addwf	_nout& (0+255),f,b
 12705  01AB3A  5002               	movf	(btemp+1)^0,w,c
 12706  01AB3C  239B               	addwfc	(_nout+1)& (0+255),f,b
 12707  01AB3E                     l13092:
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12711                           ;stkvar	_cfmt @ sp[(-2)+0]
 12712  01AB3E  50E1               	movf	fsr1l,w,c
 12713  01AB40  0FFE               	addlw	-2
 12714  01AB42  6ED9               	movwf	fsr2l,c
 12715  01AB44  50E2               	movf	fsr1h,w,c
 12716  01AB46  6EDA               	movwf	fsr2h,c
 12717  01AB48  0EFF               	movlw	255
 12718  01AB4A  22DA               	addwfc	fsr2h,f,c
 12719  01AB4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12720  01AB52  006F FF77 FFF7     	movff	postdec2,tblptrh
 12721  01AB58                     	if	0	;tblptru may be non-zero
 12722  01AB58                     	endif
 12723  01AB58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12724  01AB58  0E00               	movlw	low (__mediumconst shr (0+16))
 12725  01AB5A  6EF8               	movwf	tblptru,c
 12726  01AB5C                     	endif
 12727  01AB5C  0008               	tblrd		*
 12728  01AB5E  50F5               	movf	tablat,w,c
 12729  01AB60  0900               	iorlw	0
 12730  01AB62  A4D8               	btfss	status,2,c
 12731  01AB64  D7CB               	goto	l13090
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12735  01AB66  0060  F268  F001   	movff	_nout,btemp
 12736  01AB6C  0060  F26C  F002   	movff	_nout+1,btemp+1
 12737                           
 12738                           ; BSR set to: 0
 12739                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12740  01AB72  0EF8               	movlw	248
 12741  01AB74  26E1               	addwf	fsr1l,f,c
 12742  01AB76  0EFF               	movlw	255
 12743  01AB78  22E2               	addwfc	fsr1h,f,c
 12744  01AB7A  0012               	return		;funcret
 12745  01AB7C                     __end_of_vfprintf:
 12746                           	opt callstack 0
 12747                           
 12748 ;; *************** function _vfpfcnvrt *****************
 12749 ;; Defined at:
 12750 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12753 ;;		 -> f(6), NULL(0), 
 12754 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12755 ;;		 -> cfmt(2), 
 12756 ;;  ap              2  [STACK] PTR PTR void 
 12757 ;;		 -> ap(2), ap(2), 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  llu             8  [STACK] unsigned long long 
 12760 ;;  ll              8  [STACK] long long 
 12761 ;;  f               4  [STACK] long long 
 12762 ;;  ct              3  [STACK] unsigned char [3]
 12763 ;;  vp              3    0        PTR void 
 12764 ;;  cp              2  [STACK] PTR unsigned char 
 12765 ;;		 -> ?_printf(2), ?_sprintf(2), STR_49(9), STR_48(12), 
 12766 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12767 ;;		 -> V(192), 
 12768 ;;  i               2    0        int 
 12769 ;;  done            2    0        int 
 12770 ;;  c               1  [STACK] unsigned char 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  2  [STACK] int 
 12773 ;; Registers used:
 12774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12784 ;;Total ram usage:        0 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:   21
 12787 ;; This function calls:
 12788 ;;		_atoi
 12789 ;;		_ctoa
 12790 ;;		_dtoa
 12791 ;;		_efgtoa
 12792 ;;		_fputc
 12793 ;;		_isdigit
 12794 ;;		_isupper
 12795 ;;		_stoa
 12796 ;;		_strncmp
 12797 ;;		_tolower
 12798 ;;		_utoa
 12799 ;;		_xtoa
 12800 ;; This function is called by:
 12801 ;;		_vfprintf
 12802 ;; This function uses a reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text53
 12806  012426                     __ptext53:
 12807                           	opt callstack 0
 12808  012426                     _vfpfcnvrt:
 12809                           	opt callstack 0
 12810                           
 12811                           ; BSR set to: 0
 12812                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12813  012426  0E20               	movlw	32
 12814  012428  26E1               	addwf	fsr1l,f,c
 12815  01242A  0E00               	movlw	0
 12816  01242C  22E2               	addwfc	fsr1h,f,c
 12817                           
 12818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12819                           ;stkvar	_fmt @ sp[(-32)+-4]
 12820                           
 12821                           ;incstack = 0
 12822 ;; hardware stack exceeded
 12823  01242E  0EDC               	movlw	-36
 12824  012430  006F FF8F FFD9     	movff	plusw1,fsr2l
 12825  012436  0EDD               	movlw	-35
 12826  012438  006F FF8F FFDA     	movff	plusw1,fsr2h
 12827  01243E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12828  012444  006F FF77 FFF7     	movff	postdec2,tblptrh
 12829  01244A                     	if	0	;tblptru may be non-zero
 12830  01244A                     	endif
 12831  01244A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12832  01244A  0E00               	movlw	low (__mediumconst shr (0+16))
 12833  01244C  6EF8               	movwf	tblptru,c
 12834  01244E                     	endif
 12835  01244E  0008               	tblrd		*
 12836  012450  50F5               	movf	tablat,w,c
 12837  012452  0A25               	xorlw	37
 12838  012454  A4D8               	btfss	status,2,c
 12839  012456  EFBA  F099         	goto	l13052
 12840                           
 12841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12842                           ;stkvar	_fmt @ sp[(-32)+-4]
 12843  01245A  0EDC               	movlw	-36
 12844  01245C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12845  012462  0EDD               	movlw	-35
 12846  012464  006F FF8F FFDA     	movff	plusw1,fsr2h
 12847  01246A  2ADE               	incf	postinc2,f,c
 12848  01246C  0E00               	movlw	0
 12849  01246E  22DD               	addwfc	postdec2,f,c
 12850                           
 12851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12852  012470  6A3A               	clrf	_width^0,c
 12853  012472  6A3B               	clrf	(_width+1)^0,c
 12854  012474  6A3E               	clrf	_flags^0,c
 12855  012476  6A3F               	clrf	(_flags+1)^0,c
 12856                           
 12857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12858  012478  683C               	setf	_prec^0,c
 12859  01247A  683D               	setf	(_prec+1)^0,c
 12860                           
 12861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12862                           ;stkvar	_fmt @ sp[(-32)+-4]
 12863  01247C  0EDC               	movlw	-36
 12864  01247E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12865  012484  0EDD               	movlw	-35
 12866  012486  006F FF8F FFDA     	movff	plusw1,fsr2h
 12867  01248C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12868  012492  006F FF77 FFF7     	movff	postdec2,tblptrh
 12869  012498                     	if	0	;tblptru may be non-zero
 12870  012498                     	endif
 12871  012498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12872  012498  0E00               	movlw	low (__mediumconst shr (0+16))
 12873  01249A  6EF8               	movwf	tblptru,c
 12874  01249C                     	endif
 12875  01249C  0008               	tblrd		*
 12876  01249E  50F5               	movf	tablat,w,c
 12877  0124A0  0A2A               	xorlw	42
 12878  0124A2  A4D8               	btfss	status,2,c
 12879  0124A4  D031               	goto	l12870
 12880                           
 12881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12882                           ;stkvar	_fmt @ sp[(-32)+-4]
 12883  0124A6  0EDC               	movlw	-36
 12884  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12885  0124AE  0EDD               	movlw	-35
 12886  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12887  0124B6  2ADE               	incf	postinc2,f,c
 12888  0124B8  0E00               	movlw	0
 12889  0124BA  22DD               	addwfc	postdec2,f,c
 12890                           
 12891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12892                           ;stkvar	_ap @ sp[(-32)+-6]
 12893  0124BC  0EDA               	movlw	-38
 12894  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12895  0124C4  0EDB               	movlw	-37
 12896  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12897  0124CC  0E02               	movlw	2
 12898  0124CE  5EDE               	subwf	postinc2,f,c
 12899  0124D0  0E00               	movlw	0
 12900  0124D2  5ADD               	subwfb	postdec2,f,c
 12901  0124D4  006F FF78  F00B    	movff	postinc2,btemp+10
 12902  0124DA  006F FF74  F00C    	movff	postdec2,btemp+11
 12903  0124E0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12904  0124E6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12905  0124EC  006F FF78  F03A    	movff	postinc2,_width
 12906  0124F2  006F FF74  F03B    	movff	postdec2,_width+1
 12907                           
 12908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12909  0124F8  AE3B               	btfss	(_width+1)^0,7,c
 12910  0124FA  D066               	goto	u12300
 12911                           
 12912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12913  0124FC  803E               	bsf	_flags^0,0,c
 12914                           
 12915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12916  0124FE  6C3A               	negf	_width^0,c
 12917  012500  1E3B               	comf	(_width+1)^0,f,c
 12918  012502  B0D8               	btfsc	status,0,c
 12919  012504  2A3B               	incf	(_width+1)^0,f,c
 12920  012506  D060               	goto	u12300
 12921  012508                     l12870:
 12922                           
 12923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12924                           ;stkvar	_fmt @ sp[(-32)+-4]
 12925  012508  0EDC               	movlw	-36
 12926  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12927  012510  0EDD               	movlw	-35
 12928  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 12929  012518  006F FF78  F00B    	movff	postinc2,btemp+10
 12930  01251E  006F FF74  F00C    	movff	postdec2,btemp+11
 12931  012524  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12932  01252A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12933  012530  ECDE  F0BC         	call	_atoi	;wreg free
 12934  012534  0060  F004  F03A   	movff	btemp,_width
 12935  01253A  0060  F008  F03B   	movff	btemp+1,_width+1
 12936                           
 12937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12938  012540  D00B               	goto	l12874
 12939  012542                     l12872:
 12940                           
 12941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12942                           ;stkvar	_fmt @ sp[(-32)+-4]
 12943  012542  0EDC               	movlw	-36
 12944  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 12945  01254A  0EDD               	movlw	-35
 12946  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12947  012552  2ADE               	incf	postinc2,f,c
 12948  012554  0E00               	movlw	0
 12949  012556  22DD               	addwfc	postdec2,f,c
 12950  012558                     l12874:
 12951  012558  0ED0               	movlw	208
 12952  01255A  6E0B               	movwf	(btemp+10)^0,c
 12953  01255C  0EFF               	movlw	255
 12954  01255E  6E0C               	movwf	(btemp+11)^0,c
 12955                           
 12956                           ;stkvar	_fmt @ sp[(-32)+-4]
 12957  012560  0EDC               	movlw	-36
 12958  012562  006F FF8F FFD9     	movff	plusw1,fsr2l
 12959  012568  0EDD               	movlw	-35
 12960  01256A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12961  012570  006F FF7B FFF6     	movff	postinc2,tblptrl
 12962  012576  006F FF77 FFF7     	movff	postdec2,tblptrh
 12963  01257C                     	if	0	;tblptru may be non-zero
 12964  01257C                     	endif
 12965  01257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12966  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
 12967  01257E  6EF8               	movwf	tblptru,c
 12968  012580                     	endif
 12969  012580  0008               	tblrd		*
 12970  012582  50F5               	movf	tablat,w,c
 12971  012584  6E09               	movwf	(btemp+8)^0,c
 12972  012586  6A0A               	clrf	(btemp+9)^0,c
 12973  012588  500B               	movf	(btemp+10)^0,w,c
 12974  01258A  2609               	addwf	(btemp+8)^0,f,c
 12975  01258C  500C               	movf	(btemp+11)^0,w,c
 12976  01258E  220A               	addwfc	(btemp+9)^0,f,c
 12977  012590  500A               	movf	(btemp+9)^0,w,c
 12978  012592  E106               	bnz	u12280
 12979  012594  0E0A               	movlw	10
 12980  012596  5C09               	subwf	(btemp+8)^0,w,c
 12981  012598  B0D8               	btfsc	status,0,c
 12982  01259A  D002               	goto	u12280
 12983  01259C  0E01               	movlw	1
 12984  01259E  D001               	goto	u12290
 12985  0125A0                     u12280:
 12986  0125A0  0E00               	movlw	0
 12987  0125A2                     u12290:
 12988  0125A2  6E0B               	movwf	(btemp+10)^0,c
 12989  0125A4  6A0C               	clrf	(btemp+11)^0,c
 12990                           
 12991                           ;stkvar	_vfpfcnvrt$5893 @ sp[(-32)+4]
 12992  0125A6  0EE4               	movlw	-28
 12993  0125A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12994  0125AE  0EE5               	movlw	-27
 12995  0125B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12996                           
 12997                           ;stkvar	_vfpfcnvrt$5893 @ sp[(-32)+4]
 12998  0125B6  0EE4               	movlw	-28
 12999  0125B8  006F FF8C  F001    	movff	plusw1,btemp
 13000  0125BE  0EE5               	movlw	-27
 13001  0125C0  50E3               	movf	plusw1,w,c
 13002  0125C2  1001               	iorwf	btemp^0,w,c
 13003  0125C4  A4D8               	btfss	status,2,c
 13004  0125C6  D7BD               	goto	l12872
 13005  0125C8                     u12300:
 13006                           
 13007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13008                           ;stkvar	_fmt @ sp[(-32)+-4]
 13009  0125C8  0EDC               	movlw	-36
 13010  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13011  0125D0  0EDD               	movlw	-35
 13012  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13013  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13014  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13015  0125E4                     	if	0	;tblptru may be non-zero
 13016  0125E4                     	endif
 13017  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13018  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13019  0125E6  6EF8               	movwf	tblptru,c
 13020  0125E8                     	endif
 13021  0125E8  0008               	tblrd		*
 13022  0125EA  50F5               	movf	tablat,w,c
 13023  0125EC  0A2E               	xorlw	46
 13024  0125EE  A4D8               	btfss	status,2,c
 13025  0125F0  D0AC               	goto	u12350
 13026                           
 13027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13028  0125F2  6A3C               	clrf	_prec^0,c
 13029  0125F4  6A3D               	clrf	(_prec+1)^0,c
 13030                           
 13031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13032                           ;stkvar	_fmt @ sp[(-32)+-4]
 13033  0125F6  0EDC               	movlw	-36
 13034  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13035  0125FE  0EDD               	movlw	-35
 13036  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 13037  012606  2ADE               	incf	postinc2,f,c
 13038  012608  0E00               	movlw	0
 13039  01260A  22DD               	addwfc	postdec2,f,c
 13040                           
 13041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13042                           ;stkvar	_fmt @ sp[(-32)+-4]
 13043  01260C  0EDC               	movlw	-36
 13044  01260E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13045  012614  0EDD               	movlw	-35
 13046  012616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13047  01261C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13048  012622  006F FF77 FFF7     	movff	postdec2,tblptrh
 13049  012628                     	if	0	;tblptru may be non-zero
 13050  012628                     	endif
 13051  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13052  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 13053  01262A  6EF8               	movwf	tblptru,c
 13054  01262C                     	endif
 13055  01262C  0008               	tblrd		*
 13056  01262E  50F5               	movf	tablat,w,c
 13057  012630  0A2A               	xorlw	42
 13058  012632  A4D8               	btfss	status,2,c
 13059  012634  D02A               	goto	l12892
 13060                           
 13061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13062                           ;stkvar	_fmt @ sp[(-32)+-4]
 13063  012636  0EDC               	movlw	-36
 13064  012638  006F FF8F FFD9     	movff	plusw1,fsr2l
 13065  01263E  0EDD               	movlw	-35
 13066  012640  006F FF8F FFDA     	movff	plusw1,fsr2h
 13067  012646  2ADE               	incf	postinc2,f,c
 13068  012648  0E00               	movlw	0
 13069  01264A  22DD               	addwfc	postdec2,f,c
 13070                           
 13071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13072                           ;stkvar	_ap @ sp[(-32)+-6]
 13073  01264C  0EDA               	movlw	-38
 13074  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13075  012654  0EDB               	movlw	-37
 13076  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 13077  01265C  0E02               	movlw	2
 13078  01265E  5EDE               	subwf	postinc2,f,c
 13079  012660  0E00               	movlw	0
 13080  012662  5ADD               	subwfb	postdec2,f,c
 13081  012664  006F FF78  F00B    	movff	postinc2,btemp+10
 13082  01266A  006F FF74  F00C    	movff	postdec2,btemp+11
 13083  012670  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13084  012676  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13085  01267C  006F FF78  F03C    	movff	postinc2,_prec
 13086  012682  006F FF74  F03D    	movff	postdec2,_prec+1
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 13089  012688  D060               	goto	u12350
 13090  01268A                     l12892:
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13093                           ;stkvar	_fmt @ sp[(-32)+-4]
 13094  01268A  0EDC               	movlw	-36
 13095  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13096  012692  0EDD               	movlw	-35
 13097  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 13098  01269A  006F FF78  F00B    	movff	postinc2,btemp+10
 13099  0126A0  006F FF74  F00C    	movff	postdec2,btemp+11
 13100  0126A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13101  0126AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13102  0126B2  ECDE  F0BC         	call	_atoi	;wreg free
 13103  0126B6  0060  F004  F03C   	movff	btemp,_prec
 13104  0126BC  0060  F008  F03D   	movff	btemp+1,_prec+1
 13105                           
 13106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13107  0126C2  D00B               	goto	l12896
 13108  0126C4                     l12894:
 13109                           
 13110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13111                           ;stkvar	_fmt @ sp[(-32)+-4]
 13112  0126C4  0EDC               	movlw	-36
 13113  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13114  0126CC  0EDD               	movlw	-35
 13115  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13116  0126D4  2ADE               	incf	postinc2,f,c
 13117  0126D6  0E00               	movlw	0
 13118  0126D8  22DD               	addwfc	postdec2,f,c
 13119  0126DA                     l12896:
 13120  0126DA  0ED0               	movlw	208
 13121  0126DC  6E0B               	movwf	(btemp+10)^0,c
 13122  0126DE  0EFF               	movlw	255
 13123  0126E0  6E0C               	movwf	(btemp+11)^0,c
 13124                           
 13125                           ;stkvar	_fmt @ sp[(-32)+-4]
 13126  0126E2  0EDC               	movlw	-36
 13127  0126E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13128  0126EA  0EDD               	movlw	-35
 13129  0126EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13130  0126F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13131  0126F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13132  0126FE                     	if	0	;tblptru may be non-zero
 13133  0126FE                     	endif
 13134  0126FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13135  0126FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13136  012700  6EF8               	movwf	tblptru,c
 13137  012702                     	endif
 13138  012702  0008               	tblrd		*
 13139  012704  50F5               	movf	tablat,w,c
 13140  012706  6E09               	movwf	(btemp+8)^0,c
 13141  012708  6A0A               	clrf	(btemp+9)^0,c
 13142  01270A  500B               	movf	(btemp+10)^0,w,c
 13143  01270C  2609               	addwf	(btemp+8)^0,f,c
 13144  01270E  500C               	movf	(btemp+11)^0,w,c
 13145  012710  220A               	addwfc	(btemp+9)^0,f,c
 13146  012712  500A               	movf	(btemp+9)^0,w,c
 13147  012714  E106               	bnz	u12330
 13148  012716  0E0A               	movlw	10
 13149  012718  5C09               	subwf	(btemp+8)^0,w,c
 13150  01271A  B0D8               	btfsc	status,0,c
 13151  01271C  D002               	goto	u12330
 13152  01271E  0E01               	movlw	1
 13153  012720  D001               	goto	u12340
 13154  012722                     u12330:
 13155  012722  0E00               	movlw	0
 13156  012724                     u12340:
 13157  012724  6E0B               	movwf	(btemp+10)^0,c
 13158  012726  6A0C               	clrf	(btemp+11)^0,c
 13159                           
 13160                           ;stkvar	_vfpfcnvrt$5894 @ sp[(-32)+0]
 13161  012728  0EE0               	movlw	-32
 13162  01272A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13163  012730  0EE1               	movlw	-31
 13164  012732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13165                           
 13166                           ;stkvar	_vfpfcnvrt$5894 @ sp[(-32)+0]
 13167  012738  0EE0               	movlw	-32
 13168  01273A  006F FF8C  F001    	movff	plusw1,btemp
 13169  012740  0EE1               	movlw	-31
 13170  012742  50E3               	movf	plusw1,w,c
 13171  012744  1001               	iorwf	btemp^0,w,c
 13172  012746  A4D8               	btfss	status,2,c
 13173  012748  D7BD               	goto	l12894
 13174  01274A                     u12350:
 13175                           
 13176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 13177                           ;stkvar	_fmt @ sp[(-32)+-4]
 13178  01274A  0EDC               	movlw	-36
 13179  01274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13180  012752  0EDD               	movlw	-35
 13181  012754  006F FF8F FFDA     	movff	plusw1,fsr2h
 13182  01275A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13183  012760  006F FF77 FFF7     	movff	postdec2,tblptrh
 13184  012766                     	if	0	;tblptru may be non-zero
 13185  012766                     	endif
 13186  012766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13187  012766  0E00               	movlw	low (__mediumconst shr (0+16))
 13188  012768  6EF8               	movwf	tblptru,c
 13189  01276A                     	endif
 13190  01276A  0008               	tblrd		*
 13191  01276C  50F5               	movf	tablat,w,c
 13192  01276E  6EE6               	movwf	postinc1,c
 13193  012770  0E00               	movlw	0
 13194  012772  6EE6               	movwf	postinc1,c
 13195  012774  EC6F  F0D8         	call	_tolower	;wreg free
 13196                           
 13197                           ;stkvar	_ct @ sp[(-32)+26]
 13198  012778  0EFA               	movlw	-6
 13199  01277A  0060  F007  FFE3   	movff	btemp,plusw1
 13200                           
 13201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 13202                           ;stkvar	_ct @ sp[(-32)+26]
 13203  012780  0EFA               	movlw	-6
 13204  012782  50E3               	movf	plusw1,w,c
 13205  012784  B4D8               	btfsc	status,2,c
 13206  012786  D05B               	goto	l12912
 13207                           
 13208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 13209                           ;stkvar	_ct @ sp[(-32)+26]
 13210  012788  0EFB               	movlw	251
 13211  01278A  24E1               	addwf	fsr1l,w,c
 13212  01278C  6ED9               	movwf	fsr2l,c
 13213  01278E  0EFF               	movlw	255
 13214  012790  20E2               	addwfc	fsr1h,w,c
 13215  012792  6EDA               	movwf	fsr2h,c
 13216                           
 13217                           ;stkvar	_fmt @ sp[(-32)+-4]
 13218  012794  0EDC               	movlw	-36
 13219  012796  006F FF8F FFE9     	movff	plusw1,fsr0l
 13220  01279C  0EDD               	movlw	-35
 13221  01279E  006F FF8F FFEA     	movff	plusw1,fsr0h
 13222  0127A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 13223  0127AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 13224  0127B0  0E01               	movlw	1
 13225  0127B2  260B               	addwf	(btemp+10)^0,f,c
 13226  0127B4  0E00               	movlw	0
 13227  0127B6  220C               	addwfc	(btemp+11)^0,f,c
 13228  0127B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13229  0127BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13230  0127C4                     	if	0	;tblptru may be non-zero
 13231  0127C4                     	endif
 13232  0127C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13233  0127C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13234  0127C6  6EF8               	movwf	tblptru,c
 13235  0127C8                     	endif
 13236  0127C8  0008               	tblrd		*
 13237  0127CA  50F5               	movf	tablat,w,c
 13238  0127CC  6EE6               	movwf	postinc1,c
 13239  0127CE  0E00               	movlw	0
 13240  0127D0  6EE6               	movwf	postinc1,c
 13241  0127D2  EC6F  F0D8         	call	_tolower	;wreg free
 13242  0127D6  5001               	movf	btemp^0,w,c
 13243  0127D8  6EDF               	movwf	indf2,c
 13244                           
 13245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 13246                           ;stkvar	_ct @ sp[(-32)+26]
 13247  0127DA  0EFB               	movlw	251
 13248  0127DC  24E1               	addwf	fsr1l,w,c
 13249  0127DE  6ED9               	movwf	fsr2l,c
 13250  0127E0  0EFF               	movlw	255
 13251  0127E2  20E2               	addwfc	fsr1h,w,c
 13252  0127E4  6EDA               	movwf	fsr2h,c
 13253  0127E6  50DF               	movf	indf2,w,c
 13254  0127E8  B4D8               	btfsc	status,2,c
 13255  0127EA  D029               	goto	l12912
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 13258                           ;stkvar	_ct @ sp[(-32)+26]
 13259  0127EC  0EFC               	movlw	252
 13260  0127EE  24E1               	addwf	fsr1l,w,c
 13261  0127F0  6ED9               	movwf	fsr2l,c
 13262  0127F2  0EFF               	movlw	255
 13263  0127F4  20E2               	addwfc	fsr1h,w,c
 13264  0127F6  6EDA               	movwf	fsr2h,c
 13265                           
 13266                           ;stkvar	_fmt @ sp[(-32)+-4]
 13267  0127F8  0EDC               	movlw	-36
 13268  0127FA  006F FF8F FFE9     	movff	plusw1,fsr0l
 13269  012800  0EDD               	movlw	-35
 13270  012802  006F FF8F FFEA     	movff	plusw1,fsr0h
 13271  012808  006F FFB8  F00B    	movff	postinc0,btemp+10
 13272  01280E  006F FFB4  F00C    	movff	postdec0,btemp+11
 13273  012814  0E02               	movlw	2
 13274  012816  260B               	addwf	(btemp+10)^0,f,c
 13275  012818  0E00               	movlw	0
 13276  01281A  220C               	addwfc	(btemp+11)^0,f,c
 13277  01281C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13278  012822  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13279  012828                     	if	0	;tblptru may be non-zero
 13280  012828                     	endif
 13281  012828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13282  012828  0E00               	movlw	low (__mediumconst shr (0+16))
 13283  01282A  6EF8               	movwf	tblptru,c
 13284  01282C                     	endif
 13285  01282C  0008               	tblrd		*
 13286  01282E  50F5               	movf	tablat,w,c
 13287  012830  6EE6               	movwf	postinc1,c
 13288  012832  0E00               	movlw	0
 13289  012834  6EE6               	movwf	postinc1,c
 13290  012836  EC6F  F0D8         	call	_tolower	;wreg free
 13291  01283A  5001               	movf	btemp^0,w,c
 13292  01283C  6EDF               	movwf	indf2,c
 13293  01283E                     l12912:
 13294                           
 13295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 13296                           ;stkvar	_fmt @ sp[(-32)+-4]
 13297  01283E  0EDC               	movlw	-36
 13298  012840  006F FF8F FFD9     	movff	plusw1,fsr2l
 13299  012846  0EDD               	movlw	-35
 13300  012848  006F FF8F FFDA     	movff	plusw1,fsr2h
 13301  01284E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13302  012854  006F FF77 FFF7     	movff	postdec2,tblptrh
 13303  01285A                     	if	0	;tblptru may be non-zero
 13304  01285A                     	endif
 13305  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13306  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 13307  01285C  6EF8               	movwf	tblptru,c
 13308  01285E                     	endif
 13309  01285E  0008               	tblrd		*
 13310  012860  50F5               	movf	tablat,w,c
 13311  012862  0A63               	xorlw	99
 13312  012864  A4D8               	btfss	status,2,c
 13313  012866  D037               	goto	l12922
 13314                           
 13315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 13316                           ;stkvar	_fmt @ sp[(-32)+-4]
 13317  012868  0EDC               	movlw	-36
 13318  01286A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13319  012870  0EDD               	movlw	-35
 13320  012872  006F FF8F FFDA     	movff	plusw1,fsr2h
 13321  012878  2ADE               	incf	postinc2,f,c
 13322  01287A  0E00               	movlw	0
 13323  01287C  22DD               	addwfc	postdec2,f,c
 13324                           
 13325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13326                           ;stkvar	_ap @ sp[(-32)+-6]
 13327  01287E  0EDA               	movlw	-38
 13328  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 13329  012886  0EDB               	movlw	-37
 13330  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 13331  01288E  0E02               	movlw	2
 13332  012890  5EDE               	subwf	postinc2,f,c
 13333  012892  0E00               	movlw	0
 13334  012894  5ADD               	subwfb	postdec2,f,c
 13335  012896  006F FF78  F00B    	movff	postinc2,btemp+10
 13336  01289C  006F FF74  F00C    	movff	postdec2,btemp+11
 13337  0128A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13338  0128A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13339  0128AE  50DF               	movf	indf2,w,c
 13340  0128B0  6E0C               	movwf	(btemp+11)^0,c
 13341                           
 13342                           ;stkvar	_c @ sp[(-32)+31]
 13343  0128B2  0EFF               	movlw	-1
 13344  0128B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13345                           
 13346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13347                           ;stkvar	_c @ sp[(-32)+31]
 13348  0128BA  0EFF               	movlw	-1
 13349  0128BC  50E3               	movf	plusw1,w,c
 13350  0128BE  6EE6               	movwf	postinc1,c
 13351                           
 13352                           ;stkvar	_fp @ sp[(-33)+-2]
 13353  0128C0  0EDD               	movlw	-35
 13354  0128C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13355  0128C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13356  0128CE  ECE9  F0D7         	call	_ctoa	;wreg free
 13357  0128D2  EFE4  F099         	goto	l2476
 13358  0128D6                     l12922:
 13359                           
 13360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13361                           ;stkvar	_fmt @ sp[(-32)+-4]
 13362  0128D6  0EDC               	movlw	-36
 13363  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13364  0128DE  0EDD               	movlw	-35
 13365  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13366  0128E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13367  0128EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13368  0128F2                     	if	0	;tblptru may be non-zero
 13369  0128F2                     	endif
 13370  0128F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13371  0128F2  0E00               	movlw	low (__mediumconst shr (0+16))
 13372  0128F4  6EF8               	movwf	tblptru,c
 13373  0128F6                     	endif
 13374  0128F6  0008               	tblrd		*
 13375  0128F8  50F5               	movf	tablat,w,c
 13376  0128FA  0A64               	xorlw	100
 13377  0128FC  B4D8               	btfsc	status,2,c
 13378  0128FE  D015               	goto	u12400
 13379                           
 13380                           ;stkvar	_fmt @ sp[(-32)+-4]
 13381  012900  0EDC               	movlw	-36
 13382  012902  006F FF8F FFD9     	movff	plusw1,fsr2l
 13383  012908  0EDD               	movlw	-35
 13384  01290A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13385  012910  006F FF7B FFF6     	movff	postinc2,tblptrl
 13386  012916  006F FF77 FFF7     	movff	postdec2,tblptrh
 13387  01291C                     	if	0	;tblptru may be non-zero
 13388  01291C                     	endif
 13389  01291C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13390  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
 13391  01291E  6EF8               	movwf	tblptru,c
 13392  012920                     	endif
 13393  012920  0008               	tblrd		*
 13394  012922  50F5               	movf	tablat,w,c
 13395  012924  0A69               	xorlw	105
 13396  012926  A4D8               	btfss	status,2,c
 13397  012928  D076               	goto	l12934
 13398  01292A                     u12400:
 13399                           
 13400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13401                           ;stkvar	_fmt @ sp[(-32)+-4]
 13402  01292A  0EDC               	movlw	-36
 13403  01292C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13404  012932  0EDD               	movlw	-35
 13405  012934  006F FF8F FFDA     	movff	plusw1,fsr2h
 13406  01293A  2ADE               	incf	postinc2,f,c
 13407  01293C  0E00               	movlw	0
 13408  01293E  22DD               	addwfc	postdec2,f,c
 13409                           
 13410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13411                           ;stkvar	_ap @ sp[(-32)+-6]
 13412  012940  0EDA               	movlw	-38
 13413  012942  006F FF8F FFD9     	movff	plusw1,fsr2l
 13414  012948  0EDB               	movlw	-37
 13415  01294A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13416  012950  0E02               	movlw	2
 13417  012952  5EDE               	subwf	postinc2,f,c
 13418  012954  0E00               	movlw	0
 13419  012956  5ADD               	subwfb	postdec2,f,c
 13420  012958  006F FF78  F00B    	movff	postinc2,btemp+10
 13421  01295E  006F FF74  F00C    	movff	postdec2,btemp+11
 13422  012964  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13423  01296A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13424  012970  006F FF78  F00B    	movff	postinc2,btemp+10
 13425  012976  006F FF74  F00C    	movff	postdec2,btemp+11
 13426                           
 13427                           ;stkvar	_ll @ sp[(-32)+14]
 13428  01297C  0EEE               	movlw	-18
 13429  01297E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13430  012984  0EEF               	movlw	-17
 13431  012986  0060  F033  FFE3   	movff	btemp+11,plusw1
 13432  01298C  6A01               	clrf	btemp^0,c
 13433  01298E  BEE3               	btfsc	plusw1,7,c
 13434  012990  6801               	setf	btemp^0,c
 13435  012992  0EF0               	movlw	-16
 13436  012994  0060  F007  FFE3   	movff	btemp,plusw1
 13437  01299A  0EF1               	movlw	-15
 13438  01299C  0060  F007  FFE3   	movff	btemp,plusw1
 13439  0129A2  0EF2               	movlw	-14
 13440  0129A4  0060  F007  FFE3   	movff	btemp,plusw1
 13441  0129AA  0EF3               	movlw	-13
 13442  0129AC  0060  F007  FFE3   	movff	btemp,plusw1
 13443  0129B2  0EF4               	movlw	-12
 13444  0129B4  0060  F007  FFE3   	movff	btemp,plusw1
 13445  0129BA  0EF5               	movlw	-11
 13446  0129BC  0060  F007  FFE3   	movff	btemp,plusw1
 13447  0129C2                     l12930:
 13448                           
 13449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13450                           ;stkvar	_ll @ sp[(-32)+14]
 13451  0129C2  50E1               	movf	fsr1l,w,c
 13452  0129C4  0FEE               	addlw	-18
 13453  0129C6  6ED9               	movwf	fsr2l,c
 13454  0129C8  50E2               	movf	fsr1h,w,c
 13455  0129CA  6EDA               	movwf	fsr2h,c
 13456  0129CC  0EFF               	movlw	255
 13457  0129CE  22DA               	addwfc	fsr2h,f,c
 13458  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 13459  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 13460  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 13461  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 13462  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 13463  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 13464  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13465  0129FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13466                           
 13467                           ;stkvar	_fp @ sp[(-40)+-2]
 13468  012A00  0ED6               	movlw	-42
 13469  012A02  006F FF8F FFE6     	movff	plusw1,postinc1
 13470  012A08  006F FF8F FFE6     	movff	plusw1,postinc1
 13471  012A0E  EC2E  F0AC         	call	_dtoa	;wreg free
 13472  012A12  EFE4  F099         	goto	l2476
 13473  012A16                     l12934:
 13474                           
 13475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13476  012A16  0E02               	movlw	2
 13477  012A18  6EE6               	movwf	postinc1,c
 13478  012A1A  0E00               	movlw	0
 13479  012A1C  6EE6               	movwf	postinc1,c
 13480  012A1E  0EE9               	movlw	low STR_76
 13481  012A20  6EE6               	movwf	postinc1,c
 13482  012A22  0EFF               	movlw	high STR_76
 13483  012A24  6EE6               	movwf	postinc1,c
 13484                           
 13485                           ;stkvar	_fmt @ sp[(-36)+-4]
 13486  012A26  0ED8               	movlw	-40
 13487  012A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 13488  012A2E  0ED9               	movlw	-39
 13489  012A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 13490  012A36  006F FF78  F00B    	movff	postinc2,btemp+10
 13491  012A3C  006F FF74  F00C    	movff	postdec2,btemp+11
 13492  012A42  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13493  012A48  0060  F033  FFE6   	movff	btemp+11,postinc1
 13494  012A4E  EC5B  F0C0         	call	_strncmp	;wreg free
 13495  012A52  5001               	movf	btemp^0,w,c
 13496  012A54  1002               	iorwf	(btemp+1)^0,w,c
 13497  012A56  B4D8               	btfsc	status,2,c
 13498  012A58  D022               	goto	u12420
 13499  012A5A  0E02               	movlw	2
 13500  012A5C  6EE6               	movwf	postinc1,c
 13501  012A5E  0E00               	movlw	0
 13502  012A60  6EE6               	movwf	postinc1,c
 13503  012A62  0EEF               	movlw	low STR_80
 13504  012A64  6EE6               	movwf	postinc1,c
 13505  012A66  0EFF               	movlw	high STR_80
 13506  012A68  6EE6               	movwf	postinc1,c
 13507                           
 13508                           ;stkvar	_fmt @ sp[(-36)+-4]
 13509  012A6A  0ED8               	movlw	-40
 13510  012A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13511  012A72  0ED9               	movlw	-39
 13512  012A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 13513  012A7A  006F FF78  F00B    	movff	postinc2,btemp+10
 13514  012A80  006F FF74  F00C    	movff	postdec2,btemp+11
 13515  012A86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13516  012A8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13517  012A92  EC5B  F0C0         	call	_strncmp	;wreg free
 13518  012A96  5001               	movf	btemp^0,w,c
 13519  012A98  1002               	iorwf	(btemp+1)^0,w,c
 13520  012A9A  A4D8               	btfss	status,2,c
 13521  012A9C  D069               	goto	l12946
 13522  012A9E                     u12420:
 13523                           
 13524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13525                           ;stkvar	_fmt @ sp[(-32)+-4]
 13526  012A9E  0EDC               	movlw	-36
 13527  012AA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13528  012AA6  0EDD               	movlw	-35
 13529  012AA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13530  012AAE  0E02               	movlw	2
 13531  012AB0  26DE               	addwf	postinc2,f,c
 13532  012AB2  0E00               	movlw	0
 13533  012AB4  22DD               	addwfc	postdec2,f,c
 13534                           
 13535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13536                           ;stkvar	_ap @ sp[(-32)+-6]
 13537  012AB6  0EDA               	movlw	-38
 13538  012AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13539  012ABE  0EDB               	movlw	-37
 13540  012AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13541  012AC6  0E04               	movlw	4
 13542  012AC8  5EDE               	subwf	postinc2,f,c
 13543  012ACA  0E00               	movlw	0
 13544  012ACC  5ADD               	subwfb	postdec2,f,c
 13545  012ACE  006F FF78  F00B    	movff	postinc2,btemp+10
 13546  012AD4  006F FF74  F00C    	movff	postdec2,btemp+11
 13547  012ADA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13548  012AE0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13549  012AE6  006F FF78  F009    	movff	postinc2,btemp+8
 13550  012AEC  006F FF78  F00A    	movff	postinc2,btemp+9
 13551  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 13552  012AF8  006F FF78  F00C    	movff	postinc2,btemp+11
 13553  012AFE  0060  F024  F011   	movff	btemp+8,btemp+16
 13554  012B04  0060  F028  F012   	movff	btemp+9,btemp+17
 13555  012B0A  0060  F02C  F013   	movff	btemp+10,btemp+18
 13556  012B10  0060  F030  F014   	movff	btemp+11,btemp+19
 13557  012B16  6A15               	clrf	(btemp+20)^0,c
 13558  012B18  BE14               	btfsc	(btemp+19)^0,7,c
 13559  012B1A  6815               	setf	(btemp+20)^0,c
 13560  012B1C  0060  F054  F016   	movff	btemp+20,btemp+21
 13561  012B22  0060  F054  F017   	movff	btemp+20,btemp+22
 13562  012B28  0060  F054  F018   	movff	btemp+20,btemp+23
 13563                           
 13564                           ;stkvar	_ll @ sp[(-32)+14]
 13565  012B2E  0EEE               	movlw	-18
 13566  012B30  0060  F047  FFE3   	movff	btemp+16,plusw1
 13567  012B36  0EEF               	movlw	-17
 13568  012B38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13569  012B3E  0EF0               	movlw	-16
 13570  012B40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13571  012B46  0EF1               	movlw	-15
 13572  012B48  0060  F053  FFE3   	movff	btemp+19,plusw1
 13573  012B4E  0EF2               	movlw	-14
 13574  012B50  0060  F057  FFE3   	movff	btemp+20,plusw1
 13575  012B56  0EF3               	movlw	-13
 13576  012B58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13577  012B5E  0EF4               	movlw	-12
 13578  012B60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13579  012B66  0EF5               	movlw	-11
 13580  012B68  0060  F063  FFE3   	movff	btemp+23,plusw1
 13581  012B6E  D729               	goto	l12930
 13582  012B70                     l12946:
 13583                           
 13584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13585                           ;stkvar	_ct @ sp[(-32)+26]
 13586  012B70  0EFA               	movlw	-6
 13587  012B72  006F FF8C  F001    	movff	plusw1,btemp
 13588  012B78  0E66               	movlw	102
 13589  012B7A  1801               	xorwf	btemp^0,w,c
 13590  012B7C  A4D8               	btfss	status,2,c
 13591  012B7E  D06E               	goto	l12958
 13592                           
 13593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13594                           ;stkvar	_fmt @ sp[(-32)+-4]
 13595  012B80  0EDC               	movlw	-36
 13596  012B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 13597  012B88  0EDD               	movlw	-35
 13598  012B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13599  012B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 13600  012B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 13601  012B9C                     	if	0	;tblptru may be non-zero
 13602  012B9C                     	endif
 13603  012B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13604  012B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 13605  012B9E  6EF8               	movwf	tblptru,c
 13606  012BA0                     	endif
 13607                           
 13608                           ;stkvar	_c @ sp[(-32)+31]
 13609  012BA0  0008               	tblrd		*
 13610  012BA2  0EFF               	movlw	-1
 13611  012BA4  006F FFD7 FFE3     	movff	tablat,plusw1
 13612                           
 13613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13614                           ;stkvar	_fmt @ sp[(-32)+-4]
 13615  012BAA  0EDC               	movlw	-36
 13616  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13617  012BB2  0EDD               	movlw	-35
 13618  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13619  012BBA  2ADE               	incf	postinc2,f,c
 13620  012BBC  0E00               	movlw	0
 13621  012BBE  22DD               	addwfc	postdec2,f,c
 13622                           
 13623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13624                           ;stkvar	_ap @ sp[(-32)+-6]
 13625  012BC0  0EDA               	movlw	-38
 13626  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13627  012BC8  0EDB               	movlw	-37
 13628  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13629  012BD0  0E04               	movlw	4
 13630  012BD2  5EDE               	subwf	postinc2,f,c
 13631  012BD4  0E00               	movlw	0
 13632  012BD6  5ADD               	subwfb	postdec2,f,c
 13633  012BD8  006F FF78  F00B    	movff	postinc2,btemp+10
 13634  012BDE  006F FF74  F00C    	movff	postdec2,btemp+11
 13635  012BE4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13636  012BEA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13637  012BF0  006F FF78  F009    	movff	postinc2,btemp+8
 13638  012BF6  006F FF78  F00A    	movff	postinc2,btemp+9
 13639  012BFC  006F FF78  F00B    	movff	postinc2,btemp+10
 13640  012C02  006F FF78  F00C    	movff	postinc2,btemp+11
 13641                           
 13642                           ;stkvar	_f @ sp[(-32)+22]
 13643  012C08  0EF6               	movlw	-10
 13644  012C0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13645  012C10  0EF7               	movlw	-9
 13646  012C12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13647  012C18  0EF8               	movlw	-8
 13648  012C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13649  012C20  0EF9               	movlw	-7
 13650  012C22  0060  F033  FFE3   	movff	btemp+11,plusw1
 13651  012C28                     l12954:
 13652                           
 13653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13654                           ;stkvar	_c @ sp[(-32)+31]
 13655  012C28  0EFF               	movlw	-1
 13656  012C2A  50E3               	movf	plusw1,w,c
 13657  012C2C  6EE6               	movwf	postinc1,c
 13658                           
 13659                           ;stkvar	_f @ sp[(-33)+22]
 13660  012C2E  0EF5               	movlw	-11
 13661  012C30  006F FF8F FFE6     	movff	plusw1,postinc1
 13662  012C36  006F FF8F FFE6     	movff	plusw1,postinc1
 13663  012C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13664  012C42  006F FF8F FFE6     	movff	plusw1,postinc1
 13665                           
 13666                           ;stkvar	_fp @ sp[(-37)+-2]
 13667  012C48  0ED9               	movlw	-39
 13668  012C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13669  012C50  006F FF8F FFE6     	movff	plusw1,postinc1
 13670  012C56  EC00  F080         	call	_efgtoa	;wreg free
 13671  012C5A  D3B6               	goto	l2476
 13672  012C5C                     l12958:
 13673                           
 13674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13675  012C5C  0E02               	movlw	2
 13676  012C5E  6EE6               	movwf	postinc1,c
 13677  012C60  0E00               	movlw	0
 13678  012C62  6EE6               	movwf	postinc1,c
 13679  012C64  0EEC               	movlw	low STR_85
 13680  012C66  6EE6               	movwf	postinc1,c
 13681  012C68  0EFF               	movlw	high STR_85
 13682  012C6A  6EE6               	movwf	postinc1,c
 13683                           
 13684                           ;stkvar	_ct @ sp[(-36)+26]
 13685  012C6C  0EF6               	movlw	246
 13686  012C6E  24E1               	addwf	fsr1l,w,c
 13687  012C70  6E01               	movwf	btemp^0,c
 13688  012C72  0EFF               	movlw	255
 13689  012C74  20E2               	addwfc	fsr1h,w,c
 13690  012C76  6E02               	movwf	(btemp+1)^0,c
 13691  012C78  0060  F007  FFE6   	movff	btemp,postinc1
 13692  012C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13693  012C84  EC5B  F0C0         	call	_strncmp	;wreg free
 13694  012C88  5001               	movf	btemp^0,w,c
 13695  012C8A  1002               	iorwf	(btemp+1)^0,w,c
 13696  012C8C  A4D8               	btfss	status,2,c
 13697  012C8E  D096               	goto	l12978
 13698                           
 13699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13700                           ;stkvar	_fmt @ sp[(-32)+-4]
 13701  012C90  0EDC               	movlw	-36
 13702  012C92  006F FF8F FFD9     	movff	plusw1,fsr2l
 13703  012C98  0EDD               	movlw	-35
 13704  012C9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13705  012CA0  006F FF78  F00B    	movff	postinc2,btemp+10
 13706  012CA6  006F FF74  F00C    	movff	postdec2,btemp+11
 13707  012CAC  0E01               	movlw	1
 13708  012CAE  260B               	addwf	(btemp+10)^0,f,c
 13709  012CB0  0E00               	movlw	0
 13710  012CB2  220C               	addwfc	(btemp+11)^0,f,c
 13711  012CB4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13712  012CBA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13713  012CC0                     	if	0	;tblptru may be non-zero
 13714  012CC0                     	endif
 13715  012CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13716  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 13717  012CC2  6EF8               	movwf	tblptru,c
 13718  012CC4                     	endif
 13719                           
 13720                           ;stkvar	_c @ sp[(-32)+31]
 13721  012CC4  0008               	tblrd		*
 13722  012CC6  0EFF               	movlw	-1
 13723  012CC8  006F FFD7 FFE3     	movff	tablat,plusw1
 13724  012CCE  0EBF               	movlw	191
 13725  012CD0  6E0B               	movwf	(btemp+10)^0,c
 13726  012CD2  0EFF               	movlw	255
 13727  012CD4  6E0C               	movwf	(btemp+11)^0,c
 13728                           
 13729                           ;stkvar	_fmt @ sp[(-32)+-4]
 13730  012CD6  0EDC               	movlw	-36
 13731  012CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13732  012CDE  0EDD               	movlw	-35
 13733  012CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13734  012CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13735  012CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13736  012CF2                     	if	0	;tblptru may be non-zero
 13737  012CF2                     	endif
 13738  012CF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13739  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 13740  012CF4  6EF8               	movwf	tblptru,c
 13741  012CF6                     	endif
 13742  012CF6  0008               	tblrd		*
 13743  012CF8  50F5               	movf	tablat,w,c
 13744  012CFA  6E09               	movwf	(btemp+8)^0,c
 13745  012CFC  6A0A               	clrf	(btemp+9)^0,c
 13746  012CFE  500B               	movf	(btemp+10)^0,w,c
 13747  012D00  2609               	addwf	(btemp+8)^0,f,c
 13748  012D02  500C               	movf	(btemp+11)^0,w,c
 13749  012D04  220A               	addwfc	(btemp+9)^0,f,c
 13750  012D06  500A               	movf	(btemp+9)^0,w,c
 13751  012D08  E106               	bnz	u12450
 13752  012D0A  0E1A               	movlw	26
 13753  012D0C  5C09               	subwf	(btemp+8)^0,w,c
 13754  012D0E  B0D8               	btfsc	status,0,c
 13755  012D10  D002               	goto	u12450
 13756  012D12  0E01               	movlw	1
 13757  012D14  D001               	goto	u12460
 13758  012D16                     u12450:
 13759  012D16  0E00               	movlw	0
 13760  012D18                     u12460:
 13761  012D18  6E0B               	movwf	(btemp+10)^0,c
 13762  012D1A  6A0C               	clrf	(btemp+11)^0,c
 13763                           
 13764                           ;stkvar	_vfpfcnvrt$5905 @ sp[(-32)+2]
 13765  012D1C  0EE2               	movlw	-30
 13766  012D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13767  012D24  0EE3               	movlw	-29
 13768  012D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 13769                           
 13770                           ;stkvar	_vfpfcnvrt$5905 @ sp[(-32)+2]
 13771  012D2C  0EE2               	movlw	-30
 13772  012D2E  006F FF8C  F001    	movff	plusw1,btemp
 13773  012D34  0EE3               	movlw	-29
 13774  012D36  50E3               	movf	plusw1,w,c
 13775  012D38  1001               	iorwf	btemp^0,w,c
 13776                           
 13777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13778                           ;stkvar	_ap @ sp[(-32)+-6]
 13779                           
 13780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13781                           
 13782                           ;stkvar	_f @ sp[(-32)+22]
 13783                           
 13784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13785                           ;stkvar	_ap @ sp[(-32)+-6]
 13786  012D3A  0EDA               	movlw	-38
 13787  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13788  012D42  0EDB               	movlw	-37
 13789  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 13790  012D4A  0E04               	movlw	4
 13791  012D4C  5EDE               	subwf	postinc2,f,c
 13792  012D4E  0E00               	movlw	0
 13793  012D50  5ADD               	subwfb	postdec2,f,c
 13794  012D52  006F FF78  F00B    	movff	postinc2,btemp+10
 13795  012D58  006F FF74  F00C    	movff	postdec2,btemp+11
 13796  012D5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13797  012D64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13798  012D6A  006F FF78  F009    	movff	postinc2,btemp+8
 13799  012D70  006F FF78  F00A    	movff	postinc2,btemp+9
 13800  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 13801  012D7C  006F FF78  F00C    	movff	postinc2,btemp+11
 13802                           
 13803                           ;stkvar	_f @ sp[(-32)+22]
 13804  012D82  0EF6               	movlw	-10
 13805  012D84  0060  F027  FFE3   	movff	btemp+8,plusw1
 13806  012D8A  0EF7               	movlw	-9
 13807  012D8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13808  012D92  0EF8               	movlw	-8
 13809  012D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13810  012D9A  0EF9               	movlw	-7
 13811  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13812                           
 13813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13814                           ;stkvar	_fmt @ sp[(-32)+-4]
 13815  012DA2  0EDC               	movlw	-36
 13816  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13817  012DAA  0EDD               	movlw	-35
 13818  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13819  012DB2  0E02               	movlw	2
 13820  012DB4  26DE               	addwf	postinc2,f,c
 13821  012DB6  0E00               	movlw	0
 13822  012DB8  22DD               	addwfc	postdec2,f,c
 13823  012DBA  D736               	goto	l12954
 13824  012DBC                     l12978:
 13825                           
 13826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13827                           ;stkvar	_fmt @ sp[(-32)+-4]
 13828  012DBC  0EDC               	movlw	-36
 13829  012DBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13830  012DC4  0EDD               	movlw	-35
 13831  012DC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13832  012DCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 13833  012DD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 13834  012DD8                     	if	0	;tblptru may be non-zero
 13835  012DD8                     	endif
 13836  012DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13837  012DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 13838  012DDA  6EF8               	movwf	tblptru,c
 13839  012DDC                     	endif
 13840  012DDC  0008               	tblrd		*
 13841  012DDE  50F5               	movf	tablat,w,c
 13842  012DE0  0A73               	xorlw	115
 13843  012DE2  A4D8               	btfss	status,2,c
 13844  012DE4  D042               	goto	l12988
 13845                           
 13846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13847                           ;stkvar	_fmt @ sp[(-32)+-4]
 13848  012DE6  0EDC               	movlw	-36
 13849  012DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13850  012DEE  0EDD               	movlw	-35
 13851  012DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13852  012DF6  2ADE               	incf	postinc2,f,c
 13853  012DF8  0E00               	movlw	0
 13854  012DFA  22DD               	addwfc	postdec2,f,c
 13855                           
 13856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13857                           ;stkvar	_ap @ sp[(-32)+-6]
 13858  012DFC  0EDA               	movlw	-38
 13859  012DFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13860  012E04  0EDB               	movlw	-37
 13861  012E06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13862  012E0C  0E02               	movlw	2
 13863  012E0E  5EDE               	subwf	postinc2,f,c
 13864  012E10  0E00               	movlw	0
 13865  012E12  5ADD               	subwfb	postdec2,f,c
 13866  012E14  006F FF78  F00B    	movff	postinc2,btemp+10
 13867  012E1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13868  012E20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13869  012E26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13870  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 13871  012E32  006F FF74  F00C    	movff	postdec2,btemp+11
 13872                           
 13873                           ;stkvar	_cp @ sp[(-32)+29]
 13874  012E38  0EFE               	movlw	-2
 13875  012E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13876  012E40  0EFD               	movlw	-3
 13877  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13878                           
 13879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13880                           ;stkvar	_cp @ sp[(-32)+29]
 13881  012E48  0EFD               	movlw	-3
 13882  012E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13883  012E50  006F FF8F FFE6     	movff	plusw1,postinc1
 13884                           
 13885                           ;stkvar	_fp @ sp[(-34)+-2]
 13886  012E56  0EDC               	movlw	-36
 13887  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 13888  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13889  012E64  EC3F  F0BA         	call	_stoa	;wreg free
 13890  012E68  D2AF               	goto	l2476
 13891  012E6A                     l12988:
 13892                           
 13893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13894                           ;stkvar	_fmt @ sp[(-32)+-4]
 13895  012E6A  0EDC               	movlw	-36
 13896  012E6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13897  012E72  0EDD               	movlw	-35
 13898  012E74  006F FF8F FFDA     	movff	plusw1,fsr2h
 13899  012E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13900  012E80  006F FF77 FFF7     	movff	postdec2,tblptrh
 13901  012E86                     	if	0	;tblptru may be non-zero
 13902  012E86                     	endif
 13903  012E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13904  012E86  0E00               	movlw	low (__mediumconst shr (0+16))
 13905  012E88  6EF8               	movwf	tblptru,c
 13906  012E8A                     	endif
 13907  012E8A  0008               	tblrd		*
 13908  012E8C  50F5               	movf	tablat,w,c
 13909  012E8E  0A75               	xorlw	117
 13910  012E90  A4D8               	btfss	status,2,c
 13911  012E92  D07C               	goto	l12998
 13912                           
 13913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13914                           ;stkvar	_fmt @ sp[(-32)+-4]
 13915  012E94  0EDC               	movlw	-36
 13916  012E96  006F FF8F FFD9     	movff	plusw1,fsr2l
 13917  012E9C  0EDD               	movlw	-35
 13918  012E9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13919  012EA4  2ADE               	incf	postinc2,f,c
 13920  012EA6  0E00               	movlw	0
 13921  012EA8  22DD               	addwfc	postdec2,f,c
 13922                           
 13923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13924                           ;stkvar	_ap @ sp[(-32)+-6]
 13925  012EAA  0EDA               	movlw	-38
 13926  012EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13927  012EB2  0EDB               	movlw	-37
 13928  012EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13929  012EBA  0E02               	movlw	2
 13930  012EBC  5EDE               	subwf	postinc2,f,c
 13931  012EBE  0E00               	movlw	0
 13932  012EC0  5ADD               	subwfb	postdec2,f,c
 13933  012EC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13934  012EC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13935  012ECE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13936  012ED4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13937  012EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 13938  012EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 13939  012EE6  500B               	movf	(btemp+10)^0,w,c
 13940  012EE8  6E11               	movwf	(btemp+16)^0,c
 13941  012EEA  500C               	movf	(btemp+11)^0,w,c
 13942  012EEC  6E12               	movwf	(btemp+17)^0,c
 13943  012EEE  6A13               	clrf	(btemp+18)^0,c
 13944  012EF0  6A14               	clrf	(btemp+19)^0,c
 13945  012EF2  6A15               	clrf	(btemp+20)^0,c
 13946  012EF4  6A16               	clrf	(btemp+21)^0,c
 13947  012EF6  6A17               	clrf	(btemp+22)^0,c
 13948  012EF8  6A18               	clrf	(btemp+23)^0,c
 13949                           
 13950                           ;stkvar	_llu @ sp[(-32)+6]
 13951  012EFA  0EE6               	movlw	-26
 13952  012EFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 13953  012F02  0EE7               	movlw	-25
 13954  012F04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13955  012F0A  0EE8               	movlw	-24
 13956  012F0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13957  012F12  0EE9               	movlw	-23
 13958  012F14  0060  F053  FFE3   	movff	btemp+19,plusw1
 13959  012F1A  0EEA               	movlw	-22
 13960  012F1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 13961  012F22  0EEB               	movlw	-21
 13962  012F24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13963  012F2A  0EEC               	movlw	-20
 13964  012F2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13965  012F32  0EED               	movlw	-19
 13966  012F34  0060  F063  FFE3   	movff	btemp+23,plusw1
 13967                           
 13968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13969                           ;stkvar	_llu @ sp[(-32)+6]
 13970  012F3A  50E1               	movf	fsr1l,w,c
 13971  012F3C  0FE6               	addlw	-26
 13972  012F3E  6ED9               	movwf	fsr2l,c
 13973  012F40  50E2               	movf	fsr1h,w,c
 13974  012F42  6EDA               	movwf	fsr2h,c
 13975  012F44  0EFF               	movlw	255
 13976  012F46  22DA               	addwfc	fsr2h,f,c
 13977  012F48  006F FF7B FFE6     	movff	postinc2,postinc1
 13978  012F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 13979  012F54  006F FF7B FFE6     	movff	postinc2,postinc1
 13980  012F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 13981  012F60  006F FF7B FFE6     	movff	postinc2,postinc1
 13982  012F66  006F FF7B FFE6     	movff	postinc2,postinc1
 13983  012F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 13984  012F72  006F FF7B FFE6     	movff	postinc2,postinc1
 13985                           
 13986                           ;stkvar	_fp @ sp[(-40)+-2]
 13987  012F78  0ED6               	movlw	-42
 13988  012F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 13989  012F80  006F FF8F FFE6     	movff	plusw1,postinc1
 13990  012F86  EC27  F0B4         	call	_utoa	;wreg free
 13991  012F8A  D21E               	goto	l2476
 13992  012F8C                     l12998:
 13993                           
 13994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13995  012F8C  0E02               	movlw	2
 13996  012F8E  6EE6               	movwf	postinc1,c
 13997  012F90  0E00               	movlw	0
 13998  012F92  6EE6               	movwf	postinc1,c
 13999  012F94  0EF2               	movlw	low STR_90
 14000  012F96  6EE6               	movwf	postinc1,c
 14001  012F98  0EFF               	movlw	high STR_90
 14002  012F9A  6EE6               	movwf	postinc1,c
 14003                           
 14004                           ;stkvar	_fmt @ sp[(-36)+-4]
 14005  012F9C  0ED8               	movlw	-40
 14006  012F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14007  012FA4  0ED9               	movlw	-39
 14008  012FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14009  012FAC  006F FF78  F00B    	movff	postinc2,btemp+10
 14010  012FB2  006F FF74  F00C    	movff	postdec2,btemp+11
 14011  012FB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14012  012FBE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14013  012FC4  EC5B  F0C0         	call	_strncmp	;wreg free
 14014  012FC8  5001               	movf	btemp^0,w,c
 14015  012FCA  1002               	iorwf	(btemp+1)^0,w,c
 14016  012FCC  A4D8               	btfss	status,2,c
 14017  012FCE  D039               	goto	l13008
 14018                           
 14019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 14020                           ;stkvar	_fmt @ sp[(-32)+-4]
 14021  012FD0  0EDC               	movlw	-36
 14022  012FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14023  012FD8  0EDD               	movlw	-35
 14024  012FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14025  012FE0  0E02               	movlw	2
 14026  012FE2  26DE               	addwf	postinc2,f,c
 14027  012FE4  0E00               	movlw	0
 14028  012FE6  22DD               	addwfc	postdec2,f,c
 14029                           
 14030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14031                           ;stkvar	_ap @ sp[(-32)+-6]
 14032  012FE8  0EDA               	movlw	-38
 14033  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14034  012FF0  0EDB               	movlw	-37
 14035  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14036  012FF8  0E04               	movlw	4
 14037  012FFA  5EDE               	subwf	postinc2,f,c
 14038  012FFC  0E00               	movlw	0
 14039  012FFE  5ADD               	subwfb	postdec2,f,c
 14040  013000  006F FF78  F00B    	movff	postinc2,btemp+10
 14041  013006  006F FF74  F00C    	movff	postdec2,btemp+11
 14042  01300C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14043  013012  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14044  013018  006F FF78  F009    	movff	postinc2,btemp+8
 14045  01301E  006F FF78  F00A    	movff	postinc2,btemp+9
 14046  013024  006F FF78  F00B    	movff	postinc2,btemp+10
 14047  01302A  006F FF78  F00C    	movff	postinc2,btemp+11
 14048  013030  5009               	movf	(btemp+8)^0,w,c
 14049  013032  6E11               	movwf	(btemp+16)^0,c
 14050  013034  500A               	movf	(btemp+9)^0,w,c
 14051  013036  6E12               	movwf	(btemp+17)^0,c
 14052  013038  500B               	movf	(btemp+10)^0,w,c
 14053  01303A  6E13               	movwf	(btemp+18)^0,c
 14054  01303C  500C               	movf	(btemp+11)^0,w,c
 14055  01303E  6E14               	movwf	(btemp+19)^0,c
 14056  013040  D758               	goto	L11
 14057  013042                     l13008:
 14058                           
 14059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14060                           ;stkvar	_fmt @ sp[(-32)+-4]
 14061  013042  0EDC               	movlw	-36
 14062  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 14063  01304A  0EDD               	movlw	-35
 14064  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14065  013052  006F FF7B FFF6     	movff	postinc2,tblptrl
 14066  013058  006F FF77 FFF7     	movff	postdec2,tblptrh
 14067  01305E                     	if	0	;tblptru may be non-zero
 14068  01305E                     	endif
 14069  01305E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14070  01305E  0E00               	movlw	low (__mediumconst shr (0+16))
 14071  013060  6EF8               	movwf	tblptru,c
 14072  013062                     	endif
 14073  013062  0008               	tblrd		*
 14074  013064  50F5               	movf	tablat,w,c
 14075  013066  0A78               	xorlw	120
 14076  013068  B4D8               	btfsc	status,2,c
 14077  01306A  D015               	goto	u12520
 14078                           
 14079                           ;stkvar	_fmt @ sp[(-32)+-4]
 14080  01306C  0EDC               	movlw	-36
 14081  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14082  013074  0EDD               	movlw	-35
 14083  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 14084  01307C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14085  013082  006F FF77 FFF7     	movff	postdec2,tblptrh
 14086  013088                     	if	0	;tblptru may be non-zero
 14087  013088                     	endif
 14088  013088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14089  013088  0E00               	movlw	low (__mediumconst shr (0+16))
 14090  01308A  6EF8               	movwf	tblptru,c
 14091  01308C                     	endif
 14092  01308C  0008               	tblrd		*
 14093  01308E  50F5               	movf	tablat,w,c
 14094  013090  0A58               	xorlw	88
 14095  013092  A4D8               	btfss	status,2,c
 14096  013094  D094               	goto	l13022
 14097  013096                     u12520:
 14098                           
 14099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14100                           ;stkvar	_fmt @ sp[(-32)+-4]
 14101  013096  0EDC               	movlw	-36
 14102  013098  006F FF8F FFD9     	movff	plusw1,fsr2l
 14103  01309E  0EDD               	movlw	-35
 14104  0130A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14105  0130A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14106  0130AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14107  0130B2                     	if	0	;tblptru may be non-zero
 14108  0130B2                     	endif
 14109  0130B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14110  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14111  0130B4  6EF8               	movwf	tblptru,c
 14112  0130B6                     	endif
 14113                           
 14114                           ;stkvar	_c @ sp[(-32)+31]
 14115  0130B6  0008               	tblrd		*
 14116  0130B8  0EFF               	movlw	-1
 14117  0130BA  006F FFD7 FFE3     	movff	tablat,plusw1
 14118                           
 14119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14120                           ;stkvar	_fmt @ sp[(-32)+-4]
 14121  0130C0  0EDC               	movlw	-36
 14122  0130C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14123  0130C8  0EDD               	movlw	-35
 14124  0130CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14125  0130D0  2ADE               	incf	postinc2,f,c
 14126  0130D2  0E00               	movlw	0
 14127  0130D4  22DD               	addwfc	postdec2,f,c
 14128                           
 14129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14130                           ;stkvar	_ap @ sp[(-32)+-6]
 14131  0130D6  0EDA               	movlw	-38
 14132  0130D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14133  0130DE  0EDB               	movlw	-37
 14134  0130E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14135  0130E6  0E02               	movlw	2
 14136  0130E8  5EDE               	subwf	postinc2,f,c
 14137  0130EA  0E00               	movlw	0
 14138  0130EC  5ADD               	subwfb	postdec2,f,c
 14139  0130EE  006F FF78  F00B    	movff	postinc2,btemp+10
 14140  0130F4  006F FF74  F00C    	movff	postdec2,btemp+11
 14141  0130FA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14142  013100  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14143  013106  006F FF78  F00B    	movff	postinc2,btemp+10
 14144  01310C  006F FF74  F00C    	movff	postdec2,btemp+11
 14145  013112  500B               	movf	(btemp+10)^0,w,c
 14146  013114  6E11               	movwf	(btemp+16)^0,c
 14147  013116  500C               	movf	(btemp+11)^0,w,c
 14148  013118  6E12               	movwf	(btemp+17)^0,c
 14149  01311A  6A13               	clrf	(btemp+18)^0,c
 14150  01311C  6A14               	clrf	(btemp+19)^0,c
 14151  01311E  6A15               	clrf	(btemp+20)^0,c
 14152  013120  6A16               	clrf	(btemp+21)^0,c
 14153  013122  6A17               	clrf	(btemp+22)^0,c
 14154  013124  6A18               	clrf	(btemp+23)^0,c
 14155                           
 14156                           ;stkvar	_llu @ sp[(-32)+6]
 14157  013126  0EE6               	movlw	-26
 14158  013128  0060  F047  FFE3   	movff	btemp+16,plusw1
 14159  01312E  0EE7               	movlw	-25
 14160  013130  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14161  013136  0EE8               	movlw	-24
 14162  013138  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14163  01313E  0EE9               	movlw	-23
 14164  013140  0060  F053  FFE3   	movff	btemp+19,plusw1
 14165  013146  0EEA               	movlw	-22
 14166  013148  0060  F057  FFE3   	movff	btemp+20,plusw1
 14167  01314E  0EEB               	movlw	-21
 14168  013150  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14169  013156  0EEC               	movlw	-20
 14170  013158  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14171  01315E  0EED               	movlw	-19
 14172  013160  0060  F063  FFE3   	movff	btemp+23,plusw1
 14173                           
 14174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 14175                           ;stkvar	_c @ sp[(-32)+31]
 14176  013166  0EFF               	movlw	-1
 14177  013168  50E3               	movf	plusw1,w,c
 14178  01316A  6EE6               	movwf	postinc1,c
 14179                           
 14180                           ;stkvar	_llu @ sp[(-33)+6]
 14181  01316C  50E1               	movf	fsr1l,w,c
 14182  01316E  0FE5               	addlw	-27
 14183  013170  6ED9               	movwf	fsr2l,c
 14184  013172  50E2               	movf	fsr1h,w,c
 14185  013174  6EDA               	movwf	fsr2h,c
 14186  013176  0EFF               	movlw	255
 14187  013178  22DA               	addwfc	fsr2h,f,c
 14188  01317A  006F FF7B FFE6     	movff	postinc2,postinc1
 14189  013180  006F FF7B FFE6     	movff	postinc2,postinc1
 14190  013186  006F FF7B FFE6     	movff	postinc2,postinc1
 14191  01318C  006F FF7B FFE6     	movff	postinc2,postinc1
 14192  013192  006F FF7B FFE6     	movff	postinc2,postinc1
 14193  013198  006F FF7B FFE6     	movff	postinc2,postinc1
 14194  01319E  006F FF7B FFE6     	movff	postinc2,postinc1
 14195  0131A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14196                           
 14197                           ;stkvar	_fp @ sp[(-41)+-2]
 14198  0131AA  0ED5               	movlw	-43
 14199  0131AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14200  0131B2  006F FF8F FFE6     	movff	plusw1,postinc1
 14201  0131B8  EC94  F0B0         	call	_xtoa	;wreg free
 14202  0131BC  D105               	goto	l2476
 14203  0131BE                     l13022:
 14204                           
 14205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 14206  0131BE  0E02               	movlw	2
 14207  0131C0  6EE6               	movwf	postinc1,c
 14208  0131C2  0E00               	movlw	0
 14209  0131C4  6EE6               	movwf	postinc1,c
 14210  0131C6  0EF5               	movlw	low STR_95
 14211  0131C8  6EE6               	movwf	postinc1,c
 14212  0131CA  0EFF               	movlw	high STR_95
 14213  0131CC  6EE6               	movwf	postinc1,c
 14214                           
 14215                           ;stkvar	_fmt @ sp[(-36)+-4]
 14216  0131CE  0ED8               	movlw	-40
 14217  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14218  0131D6  0ED9               	movlw	-39
 14219  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14220  0131DE  006F FF78  F00B    	movff	postinc2,btemp+10
 14221  0131E4  006F FF74  F00C    	movff	postdec2,btemp+11
 14222  0131EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14223  0131F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14224  0131F6  EC5B  F0C0         	call	_strncmp	;wreg free
 14225  0131FA  5001               	movf	btemp^0,w,c
 14226  0131FC  1002               	iorwf	(btemp+1)^0,w,c
 14227  0131FE  B4D8               	btfsc	status,2,c
 14228  013200  D022               	goto	u12540
 14229  013202  0E02               	movlw	2
 14230  013204  6EE6               	movwf	postinc1,c
 14231  013206  0E00               	movlw	0
 14232  013208  6EE6               	movwf	postinc1,c
 14233  01320A  0EE6               	movlw	low STR_99
 14234  01320C  6EE6               	movwf	postinc1,c
 14235  01320E  0EFF               	movlw	high STR_99
 14236  013210  6EE6               	movwf	postinc1,c
 14237                           
 14238                           ;stkvar	_fmt @ sp[(-36)+-4]
 14239  013212  0ED8               	movlw	-40
 14240  013214  006F FF8F FFD9     	movff	plusw1,fsr2l
 14241  01321A  0ED9               	movlw	-39
 14242  01321C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14243  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 14244  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 14245  01322E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14246  013234  0060  F033  FFE6   	movff	btemp+11,postinc1
 14247  01323A  EC5B  F0C0         	call	_strncmp	;wreg free
 14248  01323E  5001               	movf	btemp^0,w,c
 14249  013240  1002               	iorwf	(btemp+1)^0,w,c
 14250  013242  A4D8               	btfss	status,2,c
 14251  013244  D058               	goto	l13036
 14252  013246                     u12540:
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 14255                           ;stkvar	_fmt @ sp[(-32)+-4]
 14256  013246  0EDC               	movlw	-36
 14257  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 14258  01324E  0EDD               	movlw	-35
 14259  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 14260  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 14261  01325C  006F FF74  F00C    	movff	postdec2,btemp+11
 14262  013262  0E01               	movlw	1
 14263  013264  260B               	addwf	(btemp+10)^0,f,c
 14264  013266  0E00               	movlw	0
 14265  013268  220C               	addwfc	(btemp+11)^0,f,c
 14266  01326A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14267  013270  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14268  013276                     	if	0	;tblptru may be non-zero
 14269  013276                     	endif
 14270  013276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14271  013276  0E00               	movlw	low (__mediumconst shr (0+16))
 14272  013278  6EF8               	movwf	tblptru,c
 14273  01327A                     	endif
 14274                           
 14275                           ;stkvar	_c @ sp[(-32)+31]
 14276  01327A  0008               	tblrd		*
 14277  01327C  0EFF               	movlw	-1
 14278  01327E  006F FFD7 FFE3     	movff	tablat,plusw1
 14279                           
 14280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 14281                           ;stkvar	_fmt @ sp[(-32)+-4]
 14282  013284  0EDC               	movlw	-36
 14283  013286  006F FF8F FFD9     	movff	plusw1,fsr2l
 14284  01328C  0EDD               	movlw	-35
 14285  01328E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14286  013294  0E02               	movlw	2
 14287  013296  26DE               	addwf	postinc2,f,c
 14288  013298  0E00               	movlw	0
 14289  01329A  22DD               	addwfc	postdec2,f,c
 14290                           
 14291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14292                           ;stkvar	_ap @ sp[(-32)+-6]
 14293  01329C  0EDA               	movlw	-38
 14294  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14295  0132A4  0EDB               	movlw	-37
 14296  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14297  0132AC  0E04               	movlw	4
 14298  0132AE  5EDE               	subwf	postinc2,f,c
 14299  0132B0  0E00               	movlw	0
 14300  0132B2  5ADD               	subwfb	postdec2,f,c
 14301  0132B4  006F FF78  F00B    	movff	postinc2,btemp+10
 14302  0132BA  006F FF74  F00C    	movff	postdec2,btemp+11
 14303  0132C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14304  0132C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14305  0132CC  006F FF78  F009    	movff	postinc2,btemp+8
 14306  0132D2  006F FF78  F00A    	movff	postinc2,btemp+9
 14307  0132D8  006F FF78  F00B    	movff	postinc2,btemp+10
 14308  0132DE  006F FF78  F00C    	movff	postinc2,btemp+11
 14309  0132E4  5009               	movf	(btemp+8)^0,w,c
 14310  0132E6  6E11               	movwf	(btemp+16)^0,c
 14311  0132E8  500A               	movf	(btemp+9)^0,w,c
 14312  0132EA  6E12               	movwf	(btemp+17)^0,c
 14313  0132EC  500B               	movf	(btemp+10)^0,w,c
 14314  0132EE  6E13               	movwf	(btemp+18)^0,c
 14315  0132F0  500C               	movf	(btemp+11)^0,w,c
 14316  0132F2  6E14               	movwf	(btemp+19)^0,c
 14317  0132F4  D714               	goto	L12
 14318  0132F6                     l13036:
 14319                           
 14320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14321                           ;stkvar	_fmt @ sp[(-32)+-4]
 14322  0132F6  0EDC               	movlw	-36
 14323  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14324  0132FE  0EDD               	movlw	-35
 14325  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 14326  013306  006F FF7B FFF6     	movff	postinc2,tblptrl
 14327  01330C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14328  013312                     	if	0	;tblptru may be non-zero
 14329  013312                     	endif
 14330  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14331  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 14332  013314  6EF8               	movwf	tblptru,c
 14333  013316                     	endif
 14334  013316  0008               	tblrd		*
 14335  013318  50F5               	movf	tablat,w,c
 14336  01331A  0A25               	xorlw	37
 14337  01331C  A4D8               	btfss	status,2,c
 14338  01331E  D01A               	goto	l13046
 14339                           
 14340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14341                           ;stkvar	_fmt @ sp[(-32)+-4]
 14342  013320  0EDC               	movlw	-36
 14343  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 14344  013328  0EDD               	movlw	-35
 14345  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14346  013330  2ADE               	incf	postinc2,f,c
 14347  013332  0E00               	movlw	0
 14348  013334  22DD               	addwfc	postdec2,f,c
 14349                           
 14350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14351                           ;stkvar	_fp @ sp[(-32)+-2]
 14352  013336  0EDE               	movlw	-34
 14353  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14354  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14355  013344  0E25               	movlw	37
 14356  013346  6EE6               	movwf	postinc1,c
 14357  013348  0E00               	movlw	0
 14358  01334A  6EE6               	movwf	postinc1,c
 14359  01334C  ECB6  F0CD         	call	_fputc	;wreg free
 14360  013350                     l13042:
 14361                           
 14362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14363  013350  0E01               	movlw	1
 14364  013352  D00C               	goto	L13
 14365  013354                     l13046:
 14366                           
 14367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14368                           ;stkvar	_fmt @ sp[(-32)+-4]
 14369  013354  0EDC               	movlw	-36
 14370  013356  006F FF8F FFD9     	movff	plusw1,fsr2l
 14371  01335C  0EDD               	movlw	-35
 14372  01335E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14373  013364  2ADE               	incf	postinc2,f,c
 14374  013366  0E00               	movlw	0
 14375  013368  22DD               	addwfc	postdec2,f,c
 14376                           
 14377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14378  01336A  0E00               	movlw	0
 14379  01336C                     L13:
 14380  01336C  6E01               	movwf	btemp^0,c
 14381  01336E  0E00               	movlw	0
 14382  013370  6E02               	movwf	(btemp+1)^0,c
 14383  013372  D02A               	goto	l2476
 14384  013374                     l13052:
 14385                           
 14386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14387                           ;stkvar	_fp @ sp[(-32)+-2]
 14388  013374  0EDE               	movlw	-34
 14389  013376  006F FF8F FFE6     	movff	plusw1,postinc1
 14390  01337C  006F FF8F FFE6     	movff	plusw1,postinc1
 14391                           
 14392                           ;stkvar	_fmt @ sp[(-34)+-4]
 14393  013382  0EDA               	movlw	-38
 14394  013384  006F FF8F FFD9     	movff	plusw1,fsr2l
 14395  01338A  0EDB               	movlw	-37
 14396  01338C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14397  013392  006F FF7B FFF6     	movff	postinc2,tblptrl
 14398  013398  006F FF77 FFF7     	movff	postdec2,tblptrh
 14399  01339E                     	if	0	;tblptru may be non-zero
 14400  01339E                     	endif
 14401  01339E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14402  01339E  0E00               	movlw	low (__mediumconst shr (0+16))
 14403  0133A0  6EF8               	movwf	tblptru,c
 14404  0133A2                     	endif
 14405  0133A2  0008               	tblrd		*
 14406  0133A4  50F5               	movf	tablat,w,c
 14407  0133A6  6EE6               	movwf	postinc1,c
 14408  0133A8  0E00               	movlw	0
 14409  0133AA  6EE6               	movwf	postinc1,c
 14410  0133AC  ECB6  F0CD         	call	_fputc	;wreg free
 14411                           
 14412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14413                           ;stkvar	_fmt @ sp[(-32)+-4]
 14414  0133B0  0EDC               	movlw	-36
 14415  0133B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14416  0133B8  0EDD               	movlw	-35
 14417  0133BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14418  0133C0  2ADE               	incf	postinc2,f,c
 14419  0133C2  0E00               	movlw	0
 14420  0133C4  22DD               	addwfc	postdec2,f,c
 14421  0133C6  D7C4               	goto	l13042
 14422  0133C8                     l2476:
 14423                           
 14424                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14425  0133C8  0EDA               	movlw	218
 14426  0133CA  26E1               	addwf	fsr1l,f,c
 14427  0133CC  0EFF               	movlw	255
 14428  0133CE  22E2               	addwfc	fsr1h,f,c
 14429  0133D0  0012               	return		;funcret
 14430  0133D2                     __end_of_vfpfcnvrt:
 14431                           	opt callstack 0
 14432                           
 14433 ;; *************** function _xtoa *****************
 14434 ;; Defined at:
 14435 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14438 ;;		 -> f(6), NULL(0), 
 14439 ;;  d               8  [STACK] unsigned long long 
 14440 ;;  x               1  [STACK] unsigned char 
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;  n               8  [STACK] unsigned long long 
 14443 ;;  c               2  [STACK] int 
 14444 ;;  i               2  [STACK] int 
 14445 ;;  w               2  [STACK] int 
 14446 ;;  p               2  [STACK] int 
 14447 ;; Return value:  Size  Location     Type
 14448 ;;                  2  [STACK] int 
 14449 ;; Registers used:
 14450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14451 ;; Tracked objects:
 14452 ;;		On entry : 0/0
 14453 ;;		On exit  : 0/0
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;Total ram usage:        0 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:   20
 14463 ;; This function calls:
 14464 ;;		_isalpha
 14465 ;;		_isupper
 14466 ;;		_pad
 14467 ;;		_toupper
 14468 ;; This function is called by:
 14469 ;;		_vfpfcnvrt
 14470 ;; This function uses a reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text54
 14474  016128                     __ptext54:
 14475                           	opt callstack 0
 14476  016128                     _xtoa:
 14477                           	opt callstack 0
 14478                           
 14479                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14480  016128  0E14               	movlw	20
 14481  01612A  26E1               	addwf	fsr1l,f,c
 14482  01612C  0E00               	movlw	0
 14483  01612E  22E2               	addwfc	fsr1h,f,c
 14484                           
 14485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14486                           
 14487                           ;incstack = 0
 14488 ;; hardware stack exceeded
 14489  016130  AE3D               	btfss	(_prec+1)^0,7,c
 14490                           
 14491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14492  016132  923E               	bcf	_flags^0,1,c
 14493                           
 14494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14495  016134  BE3D               	btfsc	(_prec+1)^0,7,c
 14496  016136  D005               	goto	u12080
 14497  016138  503D               	movf	(_prec+1)^0,w,c
 14498  01613A  E110               	bnz	l12772
 14499  01613C  043C               	decf	_prec^0,w,c
 14500  01613E  B0D8               	btfsc	status,0,c
 14501  016140  D00D               	goto	l12772
 14502  016142                     u12080:
 14503  016142  0E01               	movlw	1
 14504  016144  6E0B               	movwf	(btemp+10)^0,c
 14505  016146  0E00               	movlw	0
 14506  016148  6E0C               	movwf	(btemp+11)^0,c
 14507                           
 14508                           ;stkvar	_p @ sp[(-20)+18]
 14509  01614A  0EFE               	movlw	-2
 14510  01614C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14511  016152  0EFF               	movlw	-1
 14512  016154  0060  F033  FFE3   	movff	btemp+11,plusw1
 14513  01615A  D008               	goto	l2426
 14514  01615C                     l12772:
 14515                           
 14516                           ;stkvar	_p @ sp[(-20)+18]
 14517  01615C  0EFE               	movlw	-2
 14518  01615E  0060  F0F3  FFE3   	movff	_prec,plusw1
 14519  016164  0EFF               	movlw	-1
 14520  016166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14521  01616C                     l2426:
 14522                           
 14523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14524                           ;stkvar	_w @ sp[(-20)+16]
 14525  01616C  0EFC               	movlw	-4
 14526  01616E  0060  F0EB  FFE3   	movff	_width,plusw1
 14527  016174  0EFD               	movlw	-3
 14528  016176  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14529                           
 14530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14531  01617C  A83E               	btfss	_flags^0,4,c
 14532  01617E  D00B               	goto	l12778
 14533                           
 14534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14535                           ;stkvar	_w @ sp[(-20)+16]
 14536  016180  50E1               	movf	fsr1l,w,c
 14537  016182  0FFC               	addlw	-4
 14538  016184  6ED9               	movwf	fsr2l,c
 14539  016186  50E2               	movf	fsr1h,w,c
 14540  016188  6EDA               	movwf	fsr2h,c
 14541  01618A  0EFF               	movlw	255
 14542  01618C  22DA               	addwfc	fsr2h,f,c
 14543  01618E  0EFE               	movlw	254
 14544  016190  26DE               	addwf	postinc2,f,c
 14545  016192  0EFF               	movlw	255
 14546  016194  22DD               	addwfc	postdec2,f,c
 14547  016196                     l12778:
 14548                           
 14549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14550                           ;stkvar	_d @ sp[(-20)+-10]
 14551  016196  0EE2               	movlw	226
 14552  016198  24E1               	addwf	fsr1l,w,c
 14553  01619A  6ED9               	movwf	fsr2l,c
 14554  01619C  0EFF               	movlw	255
 14555  01619E  20E2               	addwfc	fsr1h,w,c
 14556  0161A0  6EDA               	movwf	fsr2h,c
 14557                           
 14558                           ;stkvar	_n @ sp[(-20)+4]
 14559  0161A2  0E08               	movlw	8
 14560  0161A4  6E01               	movwf	btemp^0,c
 14561  0161A6  0EF0               	movlw	-16
 14562  0161A8                     us1210999:
 14563  0161A8  006F FF7B FFE3     	movff	postinc2,plusw1
 14564  0161AE  28E8               	incf	wreg,w,c
 14565  0161B0  2E01               	decfsz	btemp^0,f,c
 14566  0161B2  D7FA               	bra	us1210999
 14567                           
 14568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14569  0161B4  0E4F               	movlw	79
 14570  0161B6  6E0B               	movwf	(btemp+10)^0,c
 14571  0161B8  0E00               	movlw	0
 14572  0161BA  6E0C               	movwf	(btemp+11)^0,c
 14573                           
 14574                           ;stkvar	_i @ sp[(-20)+14]
 14575  0161BC  0EFA               	movlw	-6
 14576  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14577  0161C4  0EFB               	movlw	-5
 14578  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14579                           
 14580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14581  0161CC  0102               	movlb	2	; () banked
 14582  0161CE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14583                           
 14584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14585  0161D0  D0EE               	goto	l12816
 14586  0161D2                     l12784:
 14587                           
 14588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14589                           ;stkvar	_i @ sp[(-20)+14]
 14590  0161D2  50E1               	movf	fsr1l,w,c
 14591  0161D4  0FFA               	addlw	-6
 14592  0161D6  6ED9               	movwf	fsr2l,c
 14593  0161D8  50E2               	movf	fsr1h,w,c
 14594  0161DA  6EDA               	movwf	fsr2h,c
 14595  0161DC  0EFF               	movlw	255
 14596  0161DE  22DA               	addwfc	fsr2h,f,c
 14597  0161E0  06DE               	decf	postinc2,f,c
 14598  0161E2  0E00               	movlw	0
 14599  0161E4  5ADD               	subwfb	postdec2,f,c
 14600                           
 14601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14602                           ;stkvar	_n @ sp[(-20)+4]
 14603  0161E6  0EF0               	movlw	-16
 14604  0161E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14605  0161EE  0EF1               	movlw	-15
 14606  0161F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14607  0161F6  0E0F               	movlw	15
 14608  0161F8  160B               	andwf	(btemp+10)^0,f,c
 14609  0161FA  0E00               	movlw	0
 14610  0161FC  160C               	andwf	(btemp+11)^0,f,c
 14611                           
 14612                           ;stkvar	_c @ sp[(-20)+12]
 14613  0161FE  0EF8               	movlw	-8
 14614  016200  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14615  016206  0EF9               	movlw	-7
 14616  016208  0060  F033  FFE3   	movff	btemp+11,plusw1
 14617                           
 14618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14619                           ;stkvar	_c @ sp[(-20)+12]
 14620  01620E  0EF9               	movlw	-7
 14621  016210  BEE3               	btfsc	plusw1,7,c
 14622  016212  D00F               	goto	l12792
 14623  016214  0EF9               	movlw	-7
 14624  016216  50E3               	movf	plusw1,w,c
 14625  016218  E108               	bnz	u12110
 14626  01621A  0EF8               	movlw	-8
 14627  01621C  006F FF8C  F001    	movff	plusw1,btemp
 14628  016222  0E0A               	movlw	10
 14629  016224  5E01               	subwf	btemp^0,f,c
 14630  016226  A0D8               	btfss	status,0,c
 14631  016228  D004               	goto	l12792
 14632  01622A                     u12110:
 14633                           
 14634                           ;stkvar	_c @ sp[(-20)+12]
 14635  01622A  0EF8               	movlw	-8
 14636  01622C  50E3               	movf	plusw1,w,c
 14637  01622E  0F57               	addlw	87
 14638  016230  D003               	goto	L14
 14639  016232                     l12792:
 14640                           
 14641                           ;stkvar	_c @ sp[(-20)+12]
 14642  016232  0EF8               	movlw	-8
 14643  016234  50E3               	movf	plusw1,w,c
 14644  016236  0F30               	addlw	48
 14645  016238                     L14:
 14646  016238  6E0B               	movwf	(btemp+10)^0,c
 14647  01623A  0EF9               	movlw	-7
 14648  01623C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14649  016242  0E00               	movlw	0
 14650  016244  220C               	addwfc	(btemp+11)^0,f,c
 14651                           
 14652                           ;stkvar	_c @ sp[(-20)+12]
 14653  016246  0EF8               	movlw	-8
 14654  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14655  01624E  0EF9               	movlw	-7
 14656  016250  0060  F033  FFE3   	movff	btemp+11,plusw1
 14657  016256  0EBF               	movlw	191
 14658  016258  6E0B               	movwf	(btemp+10)^0,c
 14659  01625A  0EFF               	movlw	255
 14660  01625C  6E0C               	movwf	(btemp+11)^0,c
 14661                           
 14662                           ;stkvar	_x @ sp[(-20)+-11]
 14663  01625E  0EE1               	movlw	-31
 14664  016260  50E3               	movf	plusw1,w,c
 14665  016262  6E09               	movwf	(btemp+8)^0,c
 14666  016264  6A0A               	clrf	(btemp+9)^0,c
 14667  016266  500B               	movf	(btemp+10)^0,w,c
 14668  016268  2609               	addwf	(btemp+8)^0,f,c
 14669  01626A  500C               	movf	(btemp+11)^0,w,c
 14670  01626C  220A               	addwfc	(btemp+9)^0,f,c
 14671  01626E  500A               	movf	(btemp+9)^0,w,c
 14672  016270  E106               	bnz	u12120
 14673  016272  0E1A               	movlw	26
 14674  016274  5C09               	subwf	(btemp+8)^0,w,c
 14675  016276  B0D8               	btfsc	status,0,c
 14676  016278  D002               	goto	u12120
 14677  01627A  0E01               	movlw	1
 14678  01627C  D001               	goto	u12130
 14679  01627E                     u12120:
 14680  01627E  0E00               	movlw	0
 14681  016280                     u12130:
 14682  016280  6E0B               	movwf	(btemp+10)^0,c
 14683  016282  6A0C               	clrf	(btemp+11)^0,c
 14684                           
 14685                           ;stkvar	_xtoa$5878 @ sp[(-20)+2]
 14686  016284  0EEE               	movlw	-18
 14687  016286  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14688  01628C  0EEF               	movlw	-17
 14689  01628E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14690                           
 14691                           ;stkvar	_xtoa$5878 @ sp[(-20)+2]
 14692  016294  0EEE               	movlw	-18
 14693  016296  006F FF8C  F001    	movff	plusw1,btemp
 14694  01629C  0EEF               	movlw	-17
 14695  01629E  50E3               	movf	plusw1,w,c
 14696  0162A0  1001               	iorwf	btemp^0,w,c
 14697  0162A2  B4D8               	btfsc	status,2,c
 14698  0162A4  D041               	goto	l12808
 14699  0162A6  0E9F               	movlw	159
 14700  0162A8  6E0B               	movwf	(btemp+10)^0,c
 14701  0162AA  0EFF               	movlw	255
 14702  0162AC  6E0C               	movwf	(btemp+11)^0,c
 14703                           
 14704                           ;stkvar	_c @ sp[(-20)+12]
 14705  0162AE  0EF8               	movlw	-8
 14706  0162B0  006F FF8C  F009    	movff	plusw1,btemp+8
 14707  0162B6  0EF9               	movlw	-7
 14708  0162B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 14709  0162BE  0E20               	movlw	32
 14710  0162C0  1209               	iorwf	(btemp+8)^0,f,c
 14711  0162C2  0E00               	movlw	0
 14712  0162C4  120A               	iorwf	(btemp+9)^0,f,c
 14713  0162C6  500B               	movf	(btemp+10)^0,w,c
 14714  0162C8  2609               	addwf	(btemp+8)^0,f,c
 14715  0162CA  500C               	movf	(btemp+11)^0,w,c
 14716  0162CC  220A               	addwfc	(btemp+9)^0,f,c
 14717  0162CE  500A               	movf	(btemp+9)^0,w,c
 14718  0162D0  E106               	bnz	u12150
 14719  0162D2  0E1A               	movlw	26
 14720  0162D4  5C09               	subwf	(btemp+8)^0,w,c
 14721  0162D6  B0D8               	btfsc	status,0,c
 14722  0162D8  D002               	goto	u12150
 14723  0162DA  0E01               	movlw	1
 14724  0162DC  D001               	goto	u12160
 14725  0162DE                     u12150:
 14726  0162DE  0E00               	movlw	0
 14727  0162E0                     u12160:
 14728  0162E0  6E0B               	movwf	(btemp+10)^0,c
 14729  0162E2  6A0C               	clrf	(btemp+11)^0,c
 14730                           
 14731                           ;stkvar	_xtoa$5879 @ sp[(-20)+0]
 14732  0162E4  0EEC               	movlw	-20
 14733  0162E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14734  0162EC  0EED               	movlw	-19
 14735  0162EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14736                           
 14737                           ;stkvar	_xtoa$5879 @ sp[(-20)+0]
 14738  0162F4  0EEC               	movlw	-20
 14739  0162F6  006F FF8C  F001    	movff	plusw1,btemp
 14740  0162FC  0EED               	movlw	-19
 14741  0162FE  50E3               	movf	plusw1,w,c
 14742  016300  1001               	iorwf	btemp^0,w,c
 14743  016302  B4D8               	btfsc	status,2,c
 14744  016304  D011               	goto	l12808
 14745                           
 14746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14747                           ;stkvar	_c @ sp[(-20)+12]
 14748  016306  0EF8               	movlw	-8
 14749  016308  006F FF8F FFE6     	movff	plusw1,postinc1
 14750  01630E  006F FF8F FFE6     	movff	plusw1,postinc1
 14751  016314  EC2D  F0D8         	call	_toupper	;wreg free
 14752                           
 14753                           ;stkvar	_c @ sp[(-20)+12]
 14754  016318  0EF8               	movlw	-8
 14755  01631A  0060  F007  FFE3   	movff	btemp,plusw1
 14756  016320  0EF9               	movlw	-7
 14757  016322  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14758  016328                     l12808:
 14759                           
 14760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14761                           ;stkvar	_c @ sp[(-20)+12]
 14762                           ;stkvar	_i @ sp[(-20)+14]
 14763  016328  0EFA               	movlw	-6
 14764  01632A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14765  016330  0EFB               	movlw	-5
 14766  016332  006F FF8C  F00C    	movff	plusw1,btemp+11
 14767  016338  0E97               	movlw	low _dbuf
 14768  01633A  240B               	addwf	(btemp+10)^0,w,c
 14769  01633C  6ED9               	movwf	fsr2l,c
 14770  01633E  0E02               	movlw	high _dbuf
 14771  016340  200C               	addwfc	(btemp+11)^0,w,c
 14772  016342  6EDA               	movwf	fsr2h,c
 14773  016344  0EF8               	movlw	-8
 14774  016346  006F FF8F FFDF     	movff	plusw1,indf2
 14775                           
 14776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14777                           ;stkvar	_p @ sp[(-20)+18]
 14778  01634C  50E1               	movf	fsr1l,w,c
 14779  01634E  0FFE               	addlw	-2
 14780  016350  6ED9               	movwf	fsr2l,c
 14781  016352  50E2               	movf	fsr1h,w,c
 14782  016354  6EDA               	movwf	fsr2h,c
 14783  016356  0EFF               	movlw	255
 14784  016358  22DA               	addwfc	fsr2h,f,c
 14785  01635A  06DE               	decf	postinc2,f,c
 14786  01635C  0E00               	movlw	0
 14787  01635E  5ADD               	subwfb	postdec2,f,c
 14788                           
 14789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14790                           ;stkvar	_w @ sp[(-20)+16]
 14791  016360  50E1               	movf	fsr1l,w,c
 14792  016362  0FFC               	addlw	-4
 14793  016364  6ED9               	movwf	fsr2l,c
 14794  016366  50E2               	movf	fsr1h,w,c
 14795  016368  6EDA               	movwf	fsr2h,c
 14796  01636A  0EFF               	movlw	255
 14797  01636C  22DA               	addwfc	fsr2h,f,c
 14798  01636E  06DE               	decf	postinc2,f,c
 14799  016370  0E00               	movlw	0
 14800  016372  5ADD               	subwfb	postdec2,f,c
 14801                           
 14802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14803  016374  0E04               	movlw	4
 14804  016376  6E0C               	movwf	(btemp+11)^0,c
 14805                           
 14806                           ;stkvar	_n @ sp[(-20)+4]
 14807  016378  50E1               	movf	fsr1l,w,c
 14808  01637A  0FF0               	addlw	-16
 14809  01637C  6ED9               	movwf	fsr2l,c
 14810  01637E  50E2               	movf	fsr1h,w,c
 14811  016380  6EDA               	movwf	fsr2h,c
 14812  016382  0EFF               	movlw	255
 14813  016384  22DA               	addwfc	fsr2h,f,c
 14814  016386  280C               	incf	(btemp+11)^0,w,c
 14815  016388  52DE               	movf	postinc2,f,c
 14816  01638A  D00F               	goto	u12180
 14817  01638C                     u12185:
 14818  01638C  52DE               	movf	postinc2,f,c
 14819  01638E  52DE               	movf	postinc2,f,c
 14820  016390  52DE               	movf	postinc2,f,c
 14821  016392  52DE               	movf	postinc2,f,c
 14822  016394  52DE               	movf	postinc2,f,c
 14823  016396  52DE               	movf	postinc2,f,c
 14824  016398  90D8               	bcf	status,0,c
 14825  01639A  32DD               	rrcf	postdec2,f,c
 14826  01639C  32DD               	rrcf	postdec2,f,c
 14827  01639E  32DD               	rrcf	postdec2,f,c
 14828  0163A0  32DD               	rrcf	postdec2,f,c
 14829  0163A2  32DD               	rrcf	postdec2,f,c
 14830  0163A4  32DD               	rrcf	postdec2,f,c
 14831  0163A6  32DD               	rrcf	postdec2,f,c
 14832  0163A8  32DE               	rrcf	postinc2,f,c
 14833  0163AA                     u12180:
 14834  0163AA  2EE8               	decfsz	wreg,f,c
 14835  0163AC  D7EF               	goto	u12185
 14836  0163AE                     l12816:
 14837                           
 14838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14839                           ;stkvar	_i @ sp[(-20)+14]
 14840  0163AE  0EFB               	movlw	-5
 14841  0163B0  BEE3               	btfsc	plusw1,7,c
 14842  0163B2  D03A               	goto	u12230
 14843  0163B4  0EFB               	movlw	-5
 14844  0163B6  50E3               	movf	plusw1,w,c
 14845  0163B8  E108               	bnz	u12190
 14846  0163BA  0EFA               	movlw	-6
 14847  0163BC  006F FF8C  F001    	movff	plusw1,btemp
 14848  0163C2  0E02               	movlw	2
 14849  0163C4  5E01               	subwf	btemp^0,f,c
 14850  0163C6  A0D8               	btfss	status,0,c
 14851  0163C8  D02F               	goto	u12230
 14852  0163CA                     u12190:
 14853                           
 14854                           ;stkvar	_n @ sp[(-20)+4]
 14855  0163CA  0EF0               	movlw	-16
 14856  0163CC  50E3               	movf	plusw1,w,c
 14857  0163CE  E115               	bnz	u12201
 14858  0163D0  0EF1               	movlw	-15
 14859  0163D2  50E3               	movf	plusw1,w,c
 14860  0163D4  E112               	bnz	u12201
 14861  0163D6  0EF2               	movlw	-14
 14862  0163D8  50E3               	movf	plusw1,w,c
 14863  0163DA  E10F               	bnz	u12201
 14864  0163DC  0EF3               	movlw	-13
 14865  0163DE  50E3               	movf	plusw1,w,c
 14866  0163E0  E10C               	bnz	u12201
 14867  0163E2  0EF4               	movlw	-12
 14868  0163E4  50E3               	movf	plusw1,w,c
 14869  0163E6  E109               	bnz	u12201
 14870  0163E8  0EF5               	movlw	-11
 14871  0163EA  50E3               	movf	plusw1,w,c
 14872  0163EC  E106               	bnz	u12201
 14873  0163EE  0EF6               	movlw	-10
 14874  0163F0  50E3               	movf	plusw1,w,c
 14875  0163F2  E103               	bnz	u12201
 14876  0163F4  0EF7               	movlw	-9
 14877  0163F6  50E3               	movf	plusw1,w,c
 14878  0163F8  A4D8               	btfss	status,2,c
 14879  0163FA                     u12201:
 14880  0163FA  D6EB               	goto	l12784
 14881                           
 14882                           ;stkvar	_p @ sp[(-20)+18]
 14883  0163FC  0EFF               	movlw	-1
 14884  0163FE  BEE3               	btfsc	plusw1,7,c
 14885  016400  D007               	goto	u12210
 14886  016402  0EFF               	movlw	-1
 14887  016404  50E3               	movf	plusw1,w,c
 14888  016406  E103               	bnz	u12211
 14889  016408  0EFE               	movlw	-2
 14890  01640A  04E3               	decf	plusw1,w,c
 14891  01640C  B0D8               	btfsc	status,0,c
 14892  01640E                     u12211:
 14893  01640E  D6E1               	goto	l12784
 14894  016410                     u12210:
 14895                           
 14896                           ;stkvar	_w @ sp[(-20)+16]
 14897  016410  0EFD               	movlw	-3
 14898  016412  BEE3               	btfsc	plusw1,7,c
 14899  016414  D009               	goto	u12230
 14900  016416  0EFD               	movlw	-3
 14901  016418  50E3               	movf	plusw1,w,c
 14902  01641A  E104               	bnz	u12220
 14903  01641C  0EFC               	movlw	-4
 14904  01641E  04E3               	decf	plusw1,w,c
 14905  016420  A0D8               	btfss	status,0,c
 14906  016422  D002               	goto	u12230
 14907  016424                     u12220:
 14908  016424  B23E               	btfsc	_flags^0,1,c
 14909  016426  D6D5               	goto	l12784
 14910  016428                     u12230:
 14911                           
 14912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14913  016428  A83E               	btfss	_flags^0,4,c
 14914  01642A  D036               	goto	l12832
 14915                           
 14916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14917                           ;stkvar	_i @ sp[(-20)+14]
 14918  01642C  50E1               	movf	fsr1l,w,c
 14919  01642E  0FFA               	addlw	-6
 14920  016430  6ED9               	movwf	fsr2l,c
 14921  016432  50E2               	movf	fsr1h,w,c
 14922  016434  6EDA               	movwf	fsr2h,c
 14923  016436  0EFF               	movlw	255
 14924  016438  22DA               	addwfc	fsr2h,f,c
 14925  01643A  06DE               	decf	postinc2,f,c
 14926  01643C  0E00               	movlw	0
 14927  01643E  5ADD               	subwfb	postdec2,f,c
 14928                           
 14929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14930                           ;stkvar	_x @ sp[(-20)+-11]
 14931                           ;stkvar	_i @ sp[(-20)+14]
 14932  016440  0EFA               	movlw	-6
 14933  016442  006F FF8C  F00B    	movff	plusw1,btemp+10
 14934  016448  0EFB               	movlw	-5
 14935  01644A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14936  016450  0E97               	movlw	low _dbuf
 14937  016452  240B               	addwf	(btemp+10)^0,w,c
 14938  016454  6ED9               	movwf	fsr2l,c
 14939  016456  0E02               	movlw	high _dbuf
 14940  016458  200C               	addwfc	(btemp+11)^0,w,c
 14941  01645A  6EDA               	movwf	fsr2h,c
 14942  01645C  0EE1               	movlw	-31
 14943  01645E  006F FF8F FFDF     	movff	plusw1,indf2
 14944                           
 14945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14946                           ;stkvar	_i @ sp[(-20)+14]
 14947  016464  50E1               	movf	fsr1l,w,c
 14948  016466  0FFA               	addlw	-6
 14949  016468  6ED9               	movwf	fsr2l,c
 14950  01646A  50E2               	movf	fsr1h,w,c
 14951  01646C  6EDA               	movwf	fsr2h,c
 14952  01646E  0EFF               	movlw	255
 14953  016470  22DA               	addwfc	fsr2h,f,c
 14954  016472  06DE               	decf	postinc2,f,c
 14955  016474  0E00               	movlw	0
 14956  016476  5ADD               	subwfb	postdec2,f,c
 14957                           
 14958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14959                           ;stkvar	_i @ sp[(-20)+14]
 14960  016478  0EFA               	movlw	-6
 14961  01647A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14962  016480  0EFB               	movlw	-5
 14963  016482  006F FF8C  F00C    	movff	plusw1,btemp+11
 14964  016488  0E97               	movlw	low _dbuf
 14965  01648A  240B               	addwf	(btemp+10)^0,w,c
 14966  01648C  6ED9               	movwf	fsr2l,c
 14967  01648E  0E02               	movlw	high _dbuf
 14968  016490  200C               	addwfc	(btemp+11)^0,w,c
 14969  016492  6EDA               	movwf	fsr2h,c
 14970  016494  0E30               	movlw	48
 14971  016496  6EDF               	movwf	indf2,c
 14972  016498                     l12832:
 14973                           
 14974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14975                           ;stkvar	_w @ sp[(-20)+16]
 14976  016498  0EFC               	movlw	-4
 14977  01649A  006F FF8F FFE6     	movff	plusw1,postinc1
 14978  0164A0  006F FF8F FFE6     	movff	plusw1,postinc1
 14979                           
 14980                           ;stkvar	_i @ sp[(-22)+14]
 14981  0164A6  0E97               	movlw	low _dbuf
 14982  0164A8  6E0B               	movwf	(btemp+10)^0,c
 14983  0164AA  0E02               	movlw	high _dbuf
 14984  0164AC  6E0C               	movwf	(btemp+11)^0,c
 14985  0164AE  0EF8               	movlw	-8
 14986  0164B0  50E3               	movf	plusw1,w,c
 14987  0164B2  260B               	addwf	(btemp+10)^0,f,c
 14988  0164B4  0EF9               	movlw	-7
 14989  0164B6  50E3               	movf	plusw1,w,c
 14990  0164B8  220C               	addwfc	(btemp+11)^0,f,c
 14991  0164BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14992  0164C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14993                           
 14994                           ;stkvar	_fp @ sp[(-24)+-2]
 14995  0164C6  0EE6               	movlw	-26
 14996  0164C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14997  0164CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14998  0164D4  EC60  F0CF         	call	_pad	;wreg free
 14999                           
 15000                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 15001  0164D8  0EE1               	movlw	225
 15002  0164DA  26E1               	addwf	fsr1l,f,c
 15003  0164DC  0EFF               	movlw	255
 15004  0164DE  22E2               	addwfc	fsr1h,f,c
 15005  0164E0  0012               	return		;funcret
 15006  0164E2                     __end_of_xtoa:
 15007                           	opt callstack 0
 15008                           
 15009 ;; *************** function _toupper *****************
 15010 ;; Defined at:
 15011 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  c               2  [STACK] int 
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;		None
 15016 ;; Return value:  Size  Location     Type
 15017 ;;                  2  [STACK] int 
 15018 ;; Registers used:
 15019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15020 ;; Tracked objects:
 15021 ;;		On entry : 0/2
 15022 ;;		On exit  : 0/0
 15023 ;;		Unchanged: 0/0
 15024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;Total ram usage:        0 bytes
 15030 ;; Hardware stack levels used:    1
 15031 ;; Hardware stack levels required when called:   16
 15032 ;; This function calls:
 15033 ;;		_islower
 15034 ;; This function is called by:
 15035 ;;		_xtoa
 15036 ;; This function uses a reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text55
 15040  01B05A                     __ptext55:
 15041                           	opt callstack 0
 15042  01B05A                     _toupper:
 15043                           	opt callstack 0
 15044                           
 15045                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15046  01B05A  52E6               	movf	postinc1,f,c
 15047  01B05C  52E6               	movf	postinc1,f,c
 15048                           
 15049                           ;stkvar	_c @ sp[(-2)+-2]
 15050                           
 15051                           ;incstack = 0
 15052 ;; hardware stack exceeded
 15053  01B05E  0EFC               	movlw	-4
 15054  01B060  50E3               	movf	plusw1,w,c
 15055  01B062  0F9F               	addlw	159
 15056  01B064  6E0B               	movwf	(btemp+10)^0,c
 15057  01B066  0EFD               	movlw	-3
 15058  01B068  006F FF8C  F00C    	movff	plusw1,btemp+11
 15059  01B06E  0EFF               	movlw	255
 15060  01B070  220C               	addwfc	(btemp+11)^0,f,c
 15061  01B072  500C               	movf	(btemp+11)^0,w,c
 15062  01B074  E106               	bnz	u6390
 15063  01B076  0E1A               	movlw	26
 15064  01B078  5C0B               	subwf	(btemp+10)^0,w,c
 15065  01B07A  B0D8               	btfsc	status,0,c
 15066  01B07C  D002               	goto	u6390
 15067  01B07E  0E01               	movlw	1
 15068  01B080  D001               	goto	u6400
 15069  01B082                     u6390:
 15070  01B082  0E00               	movlw	0
 15071  01B084                     u6400:
 15072  01B084  6E0B               	movwf	(btemp+10)^0,c
 15073  01B086  6A0C               	clrf	(btemp+11)^0,c
 15074                           
 15075                           ;stkvar	_toupper$6685 @ sp[(-2)+0]
 15076  01B088  0EFE               	movlw	-2
 15077  01B08A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15078  01B090  0EFF               	movlw	-1
 15079  01B092  0060  F033  FFE3   	movff	btemp+11,plusw1
 15080                           
 15081                           ;stkvar	_toupper$6685 @ sp[(-2)+0]
 15082  01B098  0EFE               	movlw	-2
 15083  01B09A  006F FF8C  F001    	movff	plusw1,btemp
 15084  01B0A0  0EFF               	movlw	-1
 15085  01B0A2  50E3               	movf	plusw1,w,c
 15086  01B0A4  1001               	iorwf	btemp^0,w,c
 15087  01B0A6  B4D8               	btfsc	status,2,c
 15088  01B0A8  D00D               	goto	l8344
 15089                           
 15090                           ;stkvar	_c @ sp[(-2)+-2]
 15091  01B0AA  0EFC               	movlw	-4
 15092  01B0AC  006F FF8C  F001    	movff	plusw1,btemp
 15093  01B0B2  0EFD               	movlw	-3
 15094  01B0B4  006F FF8C  F002    	movff	plusw1,btemp+1
 15095  01B0BA  0E5F               	movlw	95
 15096  01B0BC  1601               	andwf	btemp^0,f,c
 15097  01B0BE  0E00               	movlw	0
 15098  01B0C0  1602               	andwf	(btemp+1)^0,f,c
 15099  01B0C2  D008               	goto	l3593
 15100  01B0C4                     l8344:
 15101                           
 15102                           ;stkvar	_c @ sp[(-2)+-2]
 15103  01B0C4  0EFC               	movlw	-4
 15104  01B0C6  006F FF8C  F001    	movff	plusw1,btemp
 15105  01B0CC  0EFD               	movlw	-3
 15106  01B0CE  006F FF8C  F002    	movff	plusw1,btemp+1
 15107  01B0D4                     l3593:
 15108                           
 15109                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15110  01B0D4  52E5               	movf	postdec1,f,c
 15111  01B0D6  52E5               	movf	postdec1,f,c
 15112  01B0D8  52E5               	movf	postdec1,f,c
 15113  01B0DA  52E5               	movf	postdec1,f,c
 15114  01B0DC  0012               	return		;funcret
 15115  01B0DE                     __end_of_toupper:
 15116                           	opt callstack 0
 15117                           
 15118 ;; *************** function _islower *****************
 15119 ;; Defined at:
 15120 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;  c               2  [STACK] int 
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  2  [STACK] int 
 15127 ;; Registers used:
 15128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; Hardware stack levels required when called:   15
 15141 ;; This function calls:
 15142 ;;		Nothing
 15143 ;; This function is called by:
 15144 ;;		_toupper
 15145 ;; This function uses a reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text56
 15149  01BFB4                     __ptext56:
 15150                           	opt callstack 0
 15151  01BFB4                     _islower:
 15152                           	opt callstack 0
 15153                           
 15154                           ;stkvar	_c @ sp[(0)+-2]
 15155                           
 15156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15157                           ;incstack = 0
 15158 ;; hardware stack exceeded
 15159  01BFB4  0EFE               	movlw	-2
 15160  01BFB6  50E3               	movf	plusw1,w,c
 15161  01BFB8  0F9F               	addlw	159
 15162  01BFBA  6E0B               	movwf	(btemp+10)^0,c
 15163  01BFBC  0EFF               	movlw	-1
 15164  01BFBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15165  01BFC4  0EFF               	movlw	255
 15166  01BFC6  220C               	addwfc	(btemp+11)^0,f,c
 15167  01BFC8  500C               	movf	(btemp+11)^0,w,c
 15168  01BFCA  E106               	bnz	u6030
 15169  01BFCC  0E1A               	movlw	26
 15170  01BFCE  5C0B               	subwf	(btemp+10)^0,w,c
 15171  01BFD0  B0D8               	btfsc	status,0,c
 15172  01BFD2  D002               	goto	u6030
 15173  01BFD4  0E01               	movlw	1
 15174  01BFD6  D001               	goto	u6040
 15175  01BFD8                     u6030:
 15176  01BFD8  0E00               	movlw	0
 15177  01BFDA                     u6040:
 15178  01BFDA  6E01               	movwf	btemp^0,c
 15179  01BFDC  6A02               	clrf	(btemp+1)^0,c
 15180                           
 15181                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15182  01BFDE  52E5               	movf	postdec1,f,c
 15183  01BFE0  52E5               	movf	postdec1,f,c
 15184  01BFE2  0012               	return		;funcret
 15185  01BFE4                     __end_of_islower:
 15186                           	opt callstack 0
 15187                           
 15188 ;; *************** function _isalpha *****************
 15189 ;; Defined at:
 15190 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  c               2  [STACK] int 
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;		None
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  2  [STACK] int 
 15197 ;; Registers used:
 15198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15208 ;;Total ram usage:        0 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:   15
 15211 ;; This function calls:
 15212 ;;		Nothing
 15213 ;; This function is called by:
 15214 ;;		_xtoa
 15215 ;; This function uses a reentrant model
 15216 ;;
 15217                           
 15218                           	psect	text57
 15219  01BB9A                     __ptext57:
 15220                           	opt callstack 0
 15221  01BB9A                     _isalpha:
 15222                           	opt callstack 0
 15223                           
 15224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15225                           ;incstack = 0
 15226 ;; hardware stack exceeded
 15227  01BB9A  0E9F               	movlw	159
 15228  01BB9C  6E0B               	movwf	(btemp+10)^0,c
 15229  01BB9E  0EFF               	movlw	255
 15230  01BBA0  6E0C               	movwf	(btemp+11)^0,c
 15231                           
 15232                           ;stkvar	_c @ sp[(0)+-2]
 15233  01BBA2  0EFE               	movlw	-2
 15234  01BBA4  006F FF8C  F009    	movff	plusw1,btemp+8
 15235  01BBAA  0EFF               	movlw	-1
 15236  01BBAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 15237  01BBB2  0E20               	movlw	32
 15238  01BBB4  1209               	iorwf	(btemp+8)^0,f,c
 15239  01BBB6  0E00               	movlw	0
 15240  01BBB8  120A               	iorwf	(btemp+9)^0,f,c
 15241  01BBBA  500B               	movf	(btemp+10)^0,w,c
 15242  01BBBC  2609               	addwf	(btemp+8)^0,f,c
 15243  01BBBE  500C               	movf	(btemp+11)^0,w,c
 15244  01BBC0  220A               	addwfc	(btemp+9)^0,f,c
 15245  01BBC2  500A               	movf	(btemp+9)^0,w,c
 15246  01BBC4  E106               	bnz	u6370
 15247  01BBC6  0E1A               	movlw	26
 15248  01BBC8  5C09               	subwf	(btemp+8)^0,w,c
 15249  01BBCA  B0D8               	btfsc	status,0,c
 15250  01BBCC  D002               	goto	u6370
 15251  01BBCE  0E01               	movlw	1
 15252  01BBD0  D001               	goto	u6380
 15253  01BBD2                     u6370:
 15254  01BBD2  0E00               	movlw	0
 15255  01BBD4                     u6380:
 15256  01BBD4  6E01               	movwf	btemp^0,c
 15257  01BBD6  6A02               	clrf	(btemp+1)^0,c
 15258                           
 15259                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15260  01BBD8  52E5               	movf	postdec1,f,c
 15261  01BBDA  52E5               	movf	postdec1,f,c
 15262  01BBDC  0012               	return		;funcret
 15263  01BBDE                     __end_of_isalpha:
 15264                           	opt callstack 0
 15265                           
 15266 ;; *************** function _utoa *****************
 15267 ;; Defined at:
 15268 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15271 ;;		 -> f(6), NULL(0), 
 15272 ;;  d               8  [STACK] unsigned long long 
 15273 ;; Auto vars:     Size  Location     Type
 15274 ;;  n               8  [STACK] unsigned long long 
 15275 ;;  i               2  [STACK] int 
 15276 ;;  w               2  [STACK] int 
 15277 ;;  p               2  [STACK] int 
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  2  [STACK] int 
 15280 ;; Registers used:
 15281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15291 ;;Total ram usage:        0 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:   20
 15294 ;; This function calls:
 15295 ;;		___lodiv
 15296 ;;		___lomod
 15297 ;;		_pad
 15298 ;; This function is called by:
 15299 ;;		_vfpfcnvrt
 15300 ;; This function uses a reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text58
 15304  01684E                     __ptext58:
 15305                           	opt callstack 0
 15306  01684E                     _utoa:
 15307                           	opt callstack 0
 15308                           
 15309                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15310  01684E  0E0E               	movlw	14
 15311  016850  26E1               	addwf	fsr1l,f,c
 15312  016852  0E00               	movlw	0
 15313  016854  22E2               	addwfc	fsr1h,f,c
 15314                           
 15315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 15316                           
 15317                           ;incstack = 0
 15318 ;; hardware stack exceeded
 15319  016856  AE3D               	btfss	(_prec+1)^0,7,c
 15320                           
 15321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 15322  016858  923E               	bcf	_flags^0,1,c
 15323                           
 15324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 15325  01685A  BE3D               	btfsc	(_prec+1)^0,7,c
 15326  01685C  D005               	goto	u12000
 15327  01685E  503D               	movf	(_prec+1)^0,w,c
 15328  016860  E110               	bnz	l12732
 15329  016862  043C               	decf	_prec^0,w,c
 15330  016864  B0D8               	btfsc	status,0,c
 15331  016866  D00D               	goto	l12732
 15332  016868                     u12000:
 15333  016868  0E01               	movlw	1
 15334  01686A  6E0B               	movwf	(btemp+10)^0,c
 15335  01686C  0E00               	movlw	0
 15336  01686E  6E0C               	movwf	(btemp+11)^0,c
 15337                           
 15338                           ;stkvar	_p @ sp[(-14)+12]
 15339  016870  0EFE               	movlw	-2
 15340  016872  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15341  016878  0EFF               	movlw	-1
 15342  01687A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15343  016880  D008               	goto	l2411
 15344  016882                     l12732:
 15345                           
 15346                           ;stkvar	_p @ sp[(-14)+12]
 15347  016882  0EFE               	movlw	-2
 15348  016884  0060  F0F3  FFE3   	movff	_prec,plusw1
 15349  01688A  0EFF               	movlw	-1
 15350  01688C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15351  016892                     l2411:
 15352                           
 15353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15354                           ;stkvar	_w @ sp[(-14)+10]
 15355  016892  0EFC               	movlw	-4
 15356  016894  0060  F0EB  FFE3   	movff	_width,plusw1
 15357  01689A  0EFD               	movlw	-3
 15358  01689C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15359                           
 15360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15361                           ;stkvar	_d @ sp[(-14)+-10]
 15362  0168A2  0EE8               	movlw	232
 15363  0168A4  24E1               	addwf	fsr1l,w,c
 15364  0168A6  6ED9               	movwf	fsr2l,c
 15365  0168A8  0EFF               	movlw	255
 15366  0168AA  20E2               	addwfc	fsr1h,w,c
 15367  0168AC  6EDA               	movwf	fsr2h,c
 15368                           
 15369                           ;stkvar	_n @ sp[(-14)+0]
 15370  0168AE  0E08               	movlw	8
 15371  0168B0  6E01               	movwf	btemp^0,c
 15372  0168B2  0EF2               	movlw	-14
 15373  0168B4                     us1201999:
 15374  0168B4  006F FF7B FFE3     	movff	postinc2,plusw1
 15375  0168BA  28E8               	incf	wreg,w,c
 15376  0168BC  2E01               	decfsz	btemp^0,f,c
 15377  0168BE  D7FA               	bra	us1201999
 15378                           
 15379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15380  0168C0  0E4F               	movlw	79
 15381  0168C2  6E0B               	movwf	(btemp+10)^0,c
 15382  0168C4  0E00               	movlw	0
 15383  0168C6  6E0C               	movwf	(btemp+11)^0,c
 15384                           
 15385                           ;stkvar	_i @ sp[(-14)+8]
 15386  0168C8  0EFA               	movlw	-6
 15387  0168CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15388  0168D0  0EFB               	movlw	-5
 15389  0168D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15390                           
 15391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15392  0168D8  0102               	movlb	2	; () banked
 15393  0168DA  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15394                           
 15395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15396  0168DC  D0FB               	goto	l12750
 15397  0168DE                     l12740:
 15398                           
 15399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15400                           ;stkvar	_i @ sp[(-14)+8]
 15401  0168DE  50E1               	movf	fsr1l,w,c
 15402  0168E0  0FFA               	addlw	-6
 15403  0168E2  6ED9               	movwf	fsr2l,c
 15404  0168E4  50E2               	movf	fsr1h,w,c
 15405  0168E6  6EDA               	movwf	fsr2h,c
 15406  0168E8  0EFF               	movlw	255
 15407  0168EA  22DA               	addwfc	fsr2h,f,c
 15408  0168EC  06DE               	decf	postinc2,f,c
 15409  0168EE  0E00               	movlw	0
 15410  0168F0  5ADD               	subwfb	postdec2,f,c
 15411                           
 15412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15413  0168F2  0E0A               	movlw	10
 15414  0168F4  6EE6               	movwf	postinc1,c
 15415  0168F6  0E00               	movlw	0
 15416  0168F8  6EE6               	movwf	postinc1,c
 15417  0168FA  0E00               	movlw	0
 15418  0168FC  6EE6               	movwf	postinc1,c
 15419  0168FE  0E00               	movlw	0
 15420  016900  6EE6               	movwf	postinc1,c
 15421  016902  0E00               	movlw	0
 15422  016904  6EE6               	movwf	postinc1,c
 15423  016906  0E00               	movlw	0
 15424  016908  6EE6               	movwf	postinc1,c
 15425  01690A  0E00               	movlw	0
 15426  01690C  6EE6               	movwf	postinc1,c
 15427  01690E  0E00               	movlw	0
 15428  016910  6EE6               	movwf	postinc1,c
 15429                           
 15430                           ;stkvar	_n @ sp[(-22)+0]
 15431  016912  50E1               	movf	fsr1l,w,c
 15432  016914  0FEA               	addlw	-22
 15433  016916  6ED9               	movwf	fsr2l,c
 15434  016918  50E2               	movf	fsr1h,w,c
 15435  01691A  6EDA               	movwf	fsr2h,c
 15436  01691C  0EFF               	movlw	255
 15437  01691E  22DA               	addwfc	fsr2h,f,c
 15438  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 15439  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 15440  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 15441  016932  006F FF7B FFE6     	movff	postinc2,postinc1
 15442  016938  006F FF7B FFE6     	movff	postinc2,postinc1
 15443  01693E  006F FF7B FFE6     	movff	postinc2,postinc1
 15444  016944  006F FF7B FFE6     	movff	postinc2,postinc1
 15445  01694A  006F FF7B FFE6     	movff	postinc2,postinc1
 15446  016950  ECE3  F0CB         	call	___lomod	;wreg free
 15447  016954  52E5               	movf	postdec1,f,c
 15448  016956  006F FF9C  F018    	movff	indf1,btemp+23
 15449  01695C  52E5               	movf	postdec1,f,c
 15450  01695E  006F FF9C  F017    	movff	indf1,btemp+22
 15451  016964  52E5               	movf	postdec1,f,c
 15452  016966  006F FF9C  F016    	movff	indf1,btemp+21
 15453  01696C  52E5               	movf	postdec1,f,c
 15454  01696E  006F FF9C  F015    	movff	indf1,btemp+20
 15455  016974  52E5               	movf	postdec1,f,c
 15456  016976  006F FF9C  F014    	movff	indf1,btemp+19
 15457  01697C  52E5               	movf	postdec1,f,c
 15458  01697E  006F FF9C  F013    	movff	indf1,btemp+18
 15459  016984  52E5               	movf	postdec1,f,c
 15460  016986  006F FF9C  F012    	movff	indf1,btemp+17
 15461  01698C  52E5               	movf	postdec1,f,c
 15462  01698E  006F FF9C  F011    	movff	indf1,btemp+16
 15463  016994  0EF8               	movlw	248
 15464  016996  26E1               	addwf	fsr1l,f,c
 15465  016998  0EFF               	movlw	255
 15466  01699A  22E2               	addwfc	fsr1h,f,c
 15467  01699C  0E30               	movlw	48
 15468  01699E  2611               	addwf	(btemp+16)^0,f,c
 15469                           
 15470                           ;stkvar	_i @ sp[(-14)+8]
 15471  0169A0  0EFA               	movlw	-6
 15472  0169A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15473  0169A8  0EFB               	movlw	-5
 15474  0169AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15475  0169B0  0E97               	movlw	low _dbuf
 15476  0169B2  240B               	addwf	(btemp+10)^0,w,c
 15477  0169B4  6ED9               	movwf	fsr2l,c
 15478  0169B6  0E02               	movlw	high _dbuf
 15479  0169B8  200C               	addwfc	(btemp+11)^0,w,c
 15480  0169BA  6EDA               	movwf	fsr2h,c
 15481  0169BC  0060  F047  FFDF   	movff	btemp+16,indf2
 15482                           
 15483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15484                           ;stkvar	_p @ sp[(-14)+12]
 15485  0169C2  50E1               	movf	fsr1l,w,c
 15486  0169C4  0FFE               	addlw	-2
 15487  0169C6  6ED9               	movwf	fsr2l,c
 15488  0169C8  50E2               	movf	fsr1h,w,c
 15489  0169CA  6EDA               	movwf	fsr2h,c
 15490  0169CC  0EFF               	movlw	255
 15491  0169CE  22DA               	addwfc	fsr2h,f,c
 15492  0169D0  06DE               	decf	postinc2,f,c
 15493  0169D2  0E00               	movlw	0
 15494  0169D4  5ADD               	subwfb	postdec2,f,c
 15495                           
 15496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15497                           ;stkvar	_w @ sp[(-14)+10]
 15498  0169D6  50E1               	movf	fsr1l,w,c
 15499  0169D8  0FFC               	addlw	-4
 15500  0169DA  6ED9               	movwf	fsr2l,c
 15501  0169DC  50E2               	movf	fsr1h,w,c
 15502  0169DE  6EDA               	movwf	fsr2h,c
 15503  0169E0  0EFF               	movlw	255
 15504  0169E2  22DA               	addwfc	fsr2h,f,c
 15505  0169E4  06DE               	decf	postinc2,f,c
 15506  0169E6  0E00               	movlw	0
 15507  0169E8  5ADD               	subwfb	postdec2,f,c
 15508                           
 15509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15510  0169EA  0E0A               	movlw	10
 15511  0169EC  6EE6               	movwf	postinc1,c
 15512  0169EE  0E00               	movlw	0
 15513  0169F0  6EE6               	movwf	postinc1,c
 15514  0169F2  0E00               	movlw	0
 15515  0169F4  6EE6               	movwf	postinc1,c
 15516  0169F6  0E00               	movlw	0
 15517  0169F8  6EE6               	movwf	postinc1,c
 15518  0169FA  0E00               	movlw	0
 15519  0169FC  6EE6               	movwf	postinc1,c
 15520  0169FE  0E00               	movlw	0
 15521  016A00  6EE6               	movwf	postinc1,c
 15522  016A02  0E00               	movlw	0
 15523  016A04  6EE6               	movwf	postinc1,c
 15524  016A06  0E00               	movlw	0
 15525  016A08  6EE6               	movwf	postinc1,c
 15526                           
 15527                           ;stkvar	_n @ sp[(-22)+0]
 15528  016A0A  50E1               	movf	fsr1l,w,c
 15529  016A0C  0FEA               	addlw	-22
 15530  016A0E  6ED9               	movwf	fsr2l,c
 15531  016A10  50E2               	movf	fsr1h,w,c
 15532  016A12  6EDA               	movwf	fsr2h,c
 15533  016A14  0EFF               	movlw	255
 15534  016A16  22DA               	addwfc	fsr2h,f,c
 15535  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 15536  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15537  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 15538  016A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 15539  016A30  006F FF7B FFE6     	movff	postinc2,postinc1
 15540  016A36  006F FF7B FFE6     	movff	postinc2,postinc1
 15541  016A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 15542  016A42  006F FF7B FFE6     	movff	postinc2,postinc1
 15543  016A48  ECC0  F0C7         	call	___lodiv	;wreg free
 15544  016A4C  52E5               	movf	postdec1,f,c
 15545  016A4E  006F FF9C  F018    	movff	indf1,btemp+23
 15546  016A54  52E5               	movf	postdec1,f,c
 15547  016A56  006F FF9C  F017    	movff	indf1,btemp+22
 15548  016A5C  52E5               	movf	postdec1,f,c
 15549  016A5E  006F FF9C  F016    	movff	indf1,btemp+21
 15550  016A64  52E5               	movf	postdec1,f,c
 15551  016A66  006F FF9C  F015    	movff	indf1,btemp+20
 15552  016A6C  52E5               	movf	postdec1,f,c
 15553  016A6E  006F FF9C  F014    	movff	indf1,btemp+19
 15554  016A74  52E5               	movf	postdec1,f,c
 15555  016A76  006F FF9C  F013    	movff	indf1,btemp+18
 15556  016A7C  52E5               	movf	postdec1,f,c
 15557  016A7E  006F FF9C  F012    	movff	indf1,btemp+17
 15558  016A84  52E5               	movf	postdec1,f,c
 15559  016A86  006F FF9C  F011    	movff	indf1,btemp+16
 15560  016A8C  0EF8               	movlw	248
 15561  016A8E  26E1               	addwf	fsr1l,f,c
 15562  016A90  0EFF               	movlw	255
 15563  016A92  22E2               	addwfc	fsr1h,f,c
 15564                           
 15565                           ;stkvar	_n @ sp[(-14)+0]
 15566  016A94  0EF2               	movlw	-14
 15567  016A96  0060  F047  FFE3   	movff	btemp+16,plusw1
 15568  016A9C  0EF3               	movlw	-13
 15569  016A9E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15570  016AA4  0EF4               	movlw	-12
 15571  016AA6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15572  016AAC  0EF5               	movlw	-11
 15573  016AAE  0060  F053  FFE3   	movff	btemp+19,plusw1
 15574  016AB4  0EF6               	movlw	-10
 15575  016AB6  0060  F057  FFE3   	movff	btemp+20,plusw1
 15576  016ABC  0EF7               	movlw	-9
 15577  016ABE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15578  016AC4  0EF8               	movlw	-8
 15579  016AC6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15580  016ACC  0EF9               	movlw	-7
 15581  016ACE  0060  F063  FFE3   	movff	btemp+23,plusw1
 15582  016AD4                     l12750:
 15583                           
 15584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15585                           ;stkvar	_i @ sp[(-14)+8]
 15586  016AD4  0EFA               	movlw	-6
 15587  016AD6  006F FF8C  F001    	movff	plusw1,btemp
 15588  016ADC  0EFB               	movlw	-5
 15589  016ADE  50E3               	movf	plusw1,w,c
 15590  016AE0  1001               	iorwf	btemp^0,w,c
 15591  016AE2  B4D8               	btfsc	status,2,c
 15592  016AE4  D02F               	goto	u12060
 15593                           
 15594                           ;stkvar	_n @ sp[(-14)+0]
 15595  016AE6  0EF2               	movlw	-14
 15596  016AE8  50E3               	movf	plusw1,w,c
 15597  016AEA  E115               	bnz	u12031
 15598  016AEC  0EF3               	movlw	-13
 15599  016AEE  50E3               	movf	plusw1,w,c
 15600  016AF0  E112               	bnz	u12031
 15601  016AF2  0EF4               	movlw	-12
 15602  016AF4  50E3               	movf	plusw1,w,c
 15603  016AF6  E10F               	bnz	u12031
 15604  016AF8  0EF5               	movlw	-11
 15605  016AFA  50E3               	movf	plusw1,w,c
 15606  016AFC  E10C               	bnz	u12031
 15607  016AFE  0EF6               	movlw	-10
 15608  016B00  50E3               	movf	plusw1,w,c
 15609  016B02  E109               	bnz	u12031
 15610  016B04  0EF7               	movlw	-9
 15611  016B06  50E3               	movf	plusw1,w,c
 15612  016B08  E106               	bnz	u12031
 15613  016B0A  0EF8               	movlw	-8
 15614  016B0C  50E3               	movf	plusw1,w,c
 15615  016B0E  E103               	bnz	u12031
 15616  016B10  0EF9               	movlw	-7
 15617  016B12  50E3               	movf	plusw1,w,c
 15618  016B14  A4D8               	btfss	status,2,c
 15619  016B16                     u12031:
 15620  016B16  D6E3               	goto	l12740
 15621                           
 15622                           ;stkvar	_p @ sp[(-14)+12]
 15623  016B18  0EFF               	movlw	-1
 15624  016B1A  BEE3               	btfsc	plusw1,7,c
 15625  016B1C  D007               	goto	u12040
 15626  016B1E  0EFF               	movlw	-1
 15627  016B20  50E3               	movf	plusw1,w,c
 15628  016B22  E103               	bnz	u12041
 15629  016B24  0EFE               	movlw	-2
 15630  016B26  04E3               	decf	plusw1,w,c
 15631  016B28  B0D8               	btfsc	status,0,c
 15632  016B2A                     u12041:
 15633  016B2A  D6D9               	goto	l12740
 15634  016B2C                     u12040:
 15635                           
 15636                           ;stkvar	_w @ sp[(-14)+10]
 15637  016B2C  0EFD               	movlw	-3
 15638  016B2E  BEE3               	btfsc	plusw1,7,c
 15639  016B30  D009               	goto	u12060
 15640  016B32  0EFD               	movlw	-3
 15641  016B34  50E3               	movf	plusw1,w,c
 15642  016B36  E104               	bnz	u12050
 15643  016B38  0EFC               	movlw	-4
 15644  016B3A  04E3               	decf	plusw1,w,c
 15645  016B3C  A0D8               	btfss	status,0,c
 15646  016B3E  D002               	goto	u12060
 15647  016B40                     u12050:
 15648  016B40  B23E               	btfsc	_flags^0,1,c
 15649  016B42  D6CD               	goto	l12740
 15650  016B44                     u12060:
 15651                           
 15652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15653                           ;stkvar	_w @ sp[(-14)+10]
 15654  016B44  0EFC               	movlw	-4
 15655  016B46  006F FF8F FFE6     	movff	plusw1,postinc1
 15656  016B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 15657                           
 15658                           ;stkvar	_i @ sp[(-16)+8]
 15659  016B52  0E97               	movlw	low _dbuf
 15660  016B54  6E0B               	movwf	(btemp+10)^0,c
 15661  016B56  0E02               	movlw	high _dbuf
 15662  016B58  6E0C               	movwf	(btemp+11)^0,c
 15663  016B5A  0EF8               	movlw	-8
 15664  016B5C  50E3               	movf	plusw1,w,c
 15665  016B5E  260B               	addwf	(btemp+10)^0,f,c
 15666  016B60  0EF9               	movlw	-7
 15667  016B62  50E3               	movf	plusw1,w,c
 15668  016B64  220C               	addwfc	(btemp+11)^0,f,c
 15669  016B66  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15670  016B6C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15671                           
 15672                           ;stkvar	_fp @ sp[(-18)+-2]
 15673  016B72  0EEC               	movlw	-20
 15674  016B74  006F FF8F FFE6     	movff	plusw1,postinc1
 15675  016B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  016B80  EC60  F0CF         	call	_pad	;wreg free
 15677                           
 15678                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15679  016B84  0EE8               	movlw	232
 15680  016B86  26E1               	addwf	fsr1l,f,c
 15681  016B88  0EFF               	movlw	255
 15682  016B8A  22E2               	addwfc	fsr1h,f,c
 15683  016B8C  0012               	return		;funcret
 15684  016B8E                     __end_of_utoa:
 15685                           	opt callstack 0
 15686                           
 15687 ;; *************** function ___lomod *****************
 15688 ;; Defined at:
 15689 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;  dividend        8  [STACK] unsigned long long 
 15692 ;;  divisor         8  [STACK] unsigned long long 
 15693 ;; Auto vars:     Size  Location     Type
 15694 ;;  counter         1  [STACK] unsigned char 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  8  [STACK] unsigned long long 
 15697 ;; Registers used:
 15698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/2
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15708 ;;Total ram usage:        0 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:   15
 15711 ;; This function calls:
 15712 ;;		Nothing
 15713 ;; This function is called by:
 15714 ;;		_utoa
 15715 ;; This function uses a reentrant model
 15716 ;;
 15717                           
 15718                           	psect	text59
 15719  0197C6                     __ptext59:
 15720                           	opt callstack 0
 15721  0197C6                     ___lomod:
 15722                           	opt callstack 0
 15723                           
 15724                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15725  0197C6  52E6               	movf	postinc1,f,c
 15726                           
 15727                           ;stkvar	_divisor @ sp[(-1)+-16]
 15728                           
 15729                           ;incstack = 0
 15730 ;; hardware stack exceeded
 15731  0197C8  0EEF               	movlw	-17
 15732  0197CA  50E3               	movf	plusw1,w,c
 15733  0197CC  E116               	bnz	u7520
 15734  0197CE  0EF0               	movlw	-16
 15735  0197D0  50E3               	movf	plusw1,w,c
 15736  0197D2  E113               	bnz	u7520
 15737  0197D4  0EF1               	movlw	-15
 15738  0197D6  50E3               	movf	plusw1,w,c
 15739  0197D8  E110               	bnz	u7520
 15740  0197DA  0EF2               	movlw	-14
 15741  0197DC  50E3               	movf	plusw1,w,c
 15742  0197DE  E10D               	bnz	u7520
 15743  0197E0  0EF3               	movlw	-13
 15744  0197E2  50E3               	movf	plusw1,w,c
 15745  0197E4  E10A               	bnz	u7520
 15746  0197E6  0EF4               	movlw	-12
 15747  0197E8  50E3               	movf	plusw1,w,c
 15748  0197EA  E107               	bnz	u7520
 15749  0197EC  0EF5               	movlw	-11
 15750  0197EE  50E3               	movf	plusw1,w,c
 15751  0197F0  E104               	bnz	u7520
 15752  0197F2  0EF6               	movlw	-10
 15753  0197F4  50E3               	movf	plusw1,w,c
 15754  0197F6  B4D8               	btfsc	status,2,c
 15755  0197F8  D075               	goto	u7550
 15756  0197FA                     u7520:
 15757                           
 15758                           ;stkvar	_counter @ sp[(-1)+0]
 15759  0197FA  0EFF               	movlw	-1
 15760  0197FC  6AE3               	clrf	plusw1,c
 15761  0197FE  D012               	goto	L15
 15762  019800                     l8954:
 15763                           
 15764                           ;stkvar	_divisor @ sp[(-1)+-16]
 15765  019800  90D8               	bcf	status,0,c
 15766  019802  0EEF               	movlw	-17
 15767  019804  36E3               	rlcf	plusw1,f,c
 15768  019806  0EF0               	movlw	-16
 15769  019808  36E3               	rlcf	plusw1,f,c
 15770  01980A  0EF1               	movlw	-15
 15771  01980C  36E3               	rlcf	plusw1,f,c
 15772  01980E  0EF2               	movlw	-14
 15773  019810  36E3               	rlcf	plusw1,f,c
 15774  019812  0EF3               	movlw	-13
 15775  019814  36E3               	rlcf	plusw1,f,c
 15776  019816  0EF4               	movlw	-12
 15777  019818  36E3               	rlcf	plusw1,f,c
 15778  01981A  0EF5               	movlw	-11
 15779  01981C  36E3               	rlcf	plusw1,f,c
 15780  01981E  0EF6               	movlw	-10
 15781  019820  36E3               	rlcf	plusw1,f,c
 15782                           
 15783                           ;stkvar	_counter @ sp[(-1)+0]
 15784  019822  0EFF               	movlw	-1
 15785  019824                     L15:
 15786  019824  2AE3               	incf	plusw1,f,c
 15787                           
 15788                           ;stkvar	_divisor @ sp[(-1)+-16]
 15789  019826  0EF6               	movlw	-10
 15790  019828  AEE3               	btfss	plusw1,7,c
 15791  01982A  D7EA               	goto	l8954
 15792  01982C                     u7530:
 15793                           
 15794                           ;stkvar	_divisor @ sp[(-1)+-16]
 15795                           ;stkvar	_dividend @ sp[(-1)+-8]
 15796  01982C  50E1               	movf	fsr1l,w,c
 15797  01982E  0FF7               	addlw	-9
 15798  019830  6ED9               	movwf	fsr2l,c
 15799  019832  50E2               	movf	fsr1h,w,c
 15800  019834  6EDA               	movwf	fsr2h,c
 15801  019836  0EFF               	movlw	255
 15802  019838  22DA               	addwfc	fsr2h,f,c
 15803  01983A  0EEF               	movlw	-17
 15804  01983C  50E3               	movf	plusw1,w,c
 15805  01983E  5CDE               	subwf	postinc2,w,c
 15806  019840  0EF0               	movlw	-16
 15807  019842  50E3               	movf	plusw1,w,c
 15808  019844  58DE               	subwfb	postinc2,w,c
 15809  019846  0EF1               	movlw	-15
 15810  019848  50E3               	movf	plusw1,w,c
 15811  01984A  58DE               	subwfb	postinc2,w,c
 15812  01984C  0EF2               	movlw	-14
 15813  01984E  50E3               	movf	plusw1,w,c
 15814  019850  58DE               	subwfb	postinc2,w,c
 15815  019852  0EF3               	movlw	-13
 15816  019854  50E3               	movf	plusw1,w,c
 15817  019856  58DE               	subwfb	postinc2,w,c
 15818  019858  0EF4               	movlw	-12
 15819  01985A  50E3               	movf	plusw1,w,c
 15820  01985C  58DE               	subwfb	postinc2,w,c
 15821  01985E  0EF5               	movlw	-11
 15822  019860  50E3               	movf	plusw1,w,c
 15823  019862  58DE               	subwfb	postinc2,w,c
 15824  019864  0EF6               	movlw	-10
 15825  019866  50E3               	movf	plusw1,w,c
 15826  019868  58DE               	subwfb	postinc2,w,c
 15827  01986A  A0D8               	btfss	status,0,c
 15828  01986C  D01F               	goto	l8962
 15829                           
 15830                           ;stkvar	_divisor @ sp[(-1)+-16]
 15831                           ;stkvar	_dividend @ sp[(-1)+-8]
 15832  01986E  50E1               	movf	fsr1l,w,c
 15833  019870  0FF7               	addlw	-9
 15834  019872  6ED9               	movwf	fsr2l,c
 15835  019874  50E2               	movf	fsr1h,w,c
 15836  019876  6EDA               	movwf	fsr2h,c
 15837  019878  0EFF               	movlw	255
 15838  01987A  22DA               	addwfc	fsr2h,f,c
 15839  01987C  0EEF               	movlw	-17
 15840  01987E  50E3               	movf	plusw1,w,c
 15841  019880  5EDE               	subwf	postinc2,f,c
 15842  019882  0EF0               	movlw	-16
 15843  019884  50E3               	movf	plusw1,w,c
 15844  019886  5ADE               	subwfb	postinc2,f,c
 15845  019888  0EF1               	movlw	-15
 15846  01988A  50E3               	movf	plusw1,w,c
 15847  01988C  5ADE               	subwfb	postinc2,f,c
 15848  01988E  0EF2               	movlw	-14
 15849  019890  50E3               	movf	plusw1,w,c
 15850  019892  5ADE               	subwfb	postinc2,f,c
 15851  019894  0EF3               	movlw	-13
 15852  019896  50E3               	movf	plusw1,w,c
 15853  019898  5ADE               	subwfb	postinc2,f,c
 15854  01989A  0EF4               	movlw	-12
 15855  01989C  50E3               	movf	plusw1,w,c
 15856  01989E  5ADE               	subwfb	postinc2,f,c
 15857  0198A0  0EF5               	movlw	-11
 15858  0198A2  50E3               	movf	plusw1,w,c
 15859  0198A4  5ADE               	subwfb	postinc2,f,c
 15860  0198A6  0EF6               	movlw	-10
 15861  0198A8  50E3               	movf	plusw1,w,c
 15862  0198AA  5ADE               	subwfb	postinc2,f,c
 15863  0198AC                     l8962:
 15864                           
 15865                           ;stkvar	_divisor @ sp[(-1)+-16]
 15866  0198AC  90D8               	bcf	status,0,c
 15867  0198AE  0EF6               	movlw	-10
 15868  0198B0  32E3               	rrcf	plusw1,f,c
 15869  0198B2  0EF5               	movlw	-11
 15870  0198B4  32E3               	rrcf	plusw1,f,c
 15871  0198B6  0EF4               	movlw	-12
 15872  0198B8  32E3               	rrcf	plusw1,f,c
 15873  0198BA  0EF3               	movlw	-13
 15874  0198BC  32E3               	rrcf	plusw1,f,c
 15875  0198BE  0EF2               	movlw	-14
 15876  0198C0  32E3               	rrcf	plusw1,f,c
 15877  0198C2  0EF1               	movlw	-15
 15878  0198C4  32E3               	rrcf	plusw1,f,c
 15879  0198C6  0EF0               	movlw	-16
 15880  0198C8  32E3               	rrcf	plusw1,f,c
 15881  0198CA  0EEF               	movlw	-17
 15882  0198CC  32E3               	rrcf	plusw1,f,c
 15883                           
 15884                           ;stkvar	_counter @ sp[(-1)+0]
 15885  0198CE  0EFF               	movlw	-1
 15886  0198D0  50E3               	movf	plusw1,w,c
 15887  0198D2  6E01               	movwf	btemp^0,c
 15888  0198D4  0E01               	movlw	1
 15889  0198D6  5E01               	subwf	btemp^0,f,c
 15890  0198D8  0EFF               	movlw	-1
 15891  0198DA  0060  F007  FFE3   	movff	btemp,plusw1
 15892  0198E0  A4D8               	btfss	status,2,c
 15893  0198E2  D7A4               	goto	u7530
 15894  0198E4                     u7550:
 15895                           
 15896                           ;stkvar	_dividend @ sp[(-1)+-8]
 15897  0198E4  0EF7               	movlw	247
 15898  0198E6  24E1               	addwf	fsr1l,w,c
 15899  0198E8  6ED9               	movwf	fsr2l,c
 15900  0198EA  0EFF               	movlw	255
 15901  0198EC  20E2               	addwfc	fsr1h,w,c
 15902  0198EE  6EDA               	movwf	fsr2h,c
 15903                           
 15904                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15905  0198F0  0E08               	movlw	8
 15906  0198F2  6E01               	movwf	btemp^0,c
 15907  0198F4  0EF7               	movlw	-9
 15908  0198F6                     us756999:
 15909  0198F6  006F FF7B FFE3     	movff	postinc2,plusw1
 15910  0198FC  28E8               	incf	wreg,w,c
 15911  0198FE  2E01               	decfsz	btemp^0,f,c
 15912  019900  D7FA               	bra	us756999
 15913                           
 15914                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15915  019902  52E5               	movf	postdec1,f,c
 15916  019904  0012               	return		;funcret
 15917  019906                     __end_of___lomod:
 15918                           	opt callstack 0
 15919                           
 15920 ;; *************** function ___lodiv *****************
 15921 ;; Defined at:
 15922 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15923 ;; Parameters:    Size  Location     Type
 15924 ;;  dividend        8  [STACK] unsigned long long 
 15925 ;;  divisor         8  [STACK] unsigned long long 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;  quotient        8  [STACK] unsigned long long 
 15928 ;;  counter         1  [STACK] unsigned char 
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  8  [STACK] unsigned long long 
 15931 ;; Registers used:
 15932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/2
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15942 ;;Total ram usage:        0 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; Hardware stack levels required when called:   15
 15945 ;; This function calls:
 15946 ;;		Nothing
 15947 ;; This function is called by:
 15948 ;;		_utoa
 15949 ;; This function uses a reentrant model
 15950 ;;
 15951                           
 15952                           	psect	text60
 15953  018F80                     __ptext60:
 15954                           	opt callstack 0
 15955  018F80                     ___lodiv:
 15956                           	opt callstack 0
 15957                           
 15958                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15959  018F80  0E09               	movlw	9
 15960  018F82  26E1               	addwf	fsr1l,f,c
 15961  018F84  0E00               	movlw	0
 15962  018F86  22E2               	addwfc	fsr1h,f,c
 15963                           
 15964                           ;stkvar	_quotient @ sp[(-9)+0]
 15965                           
 15966                           ;incstack = 0
 15967 ;; hardware stack exceeded
 15968  018F88  0E07               	movlw	7
 15969  018F8A  6E01               	movwf	btemp^0,c
 15970  018F8C  0EF7               	movlw	-9
 15971  018F8E                     u7461:
 15972  018F8E  6AE3               	clrf	plusw1,c
 15973  018F90  2AE8               	incf	wreg,f,c
 15974  018F92  0601               	decf	btemp^0,f,c
 15975  018F94  E2FC               	bc	u7461
 15976                           
 15977                           ;stkvar	_divisor @ sp[(-9)+-16]
 15978  018F96  0EE7               	movlw	-25
 15979  018F98  50E3               	movf	plusw1,w,c
 15980  018F9A  E116               	bnz	u7470
 15981  018F9C  0EE8               	movlw	-24
 15982  018F9E  50E3               	movf	plusw1,w,c
 15983  018FA0  E113               	bnz	u7470
 15984  018FA2  0EE9               	movlw	-23
 15985  018FA4  50E3               	movf	plusw1,w,c
 15986  018FA6  E110               	bnz	u7470
 15987  018FA8  0EEA               	movlw	-22
 15988  018FAA  50E3               	movf	plusw1,w,c
 15989  018FAC  E10D               	bnz	u7470
 15990  018FAE  0EEB               	movlw	-21
 15991  018FB0  50E3               	movf	plusw1,w,c
 15992  018FB2  E10A               	bnz	u7470
 15993  018FB4  0EEC               	movlw	-20
 15994  018FB6  50E3               	movf	plusw1,w,c
 15995  018FB8  E107               	bnz	u7470
 15996  018FBA  0EED               	movlw	-19
 15997  018FBC  50E3               	movf	plusw1,w,c
 15998  018FBE  E104               	bnz	u7470
 15999  018FC0  0EEE               	movlw	-18
 16000  018FC2  50E3               	movf	plusw1,w,c
 16001  018FC4  B4D8               	btfsc	status,2,c
 16002  018FC6  D088               	goto	u7500
 16003  018FC8                     u7470:
 16004                           
 16005                           ;stkvar	_counter @ sp[(-9)+8]
 16006  018FC8  0EFF               	movlw	-1
 16007  018FCA  6AE3               	clrf	plusw1,c
 16008  018FCC  D012               	goto	L16
 16009  018FCE                     l8930:
 16010                           
 16011                           ;stkvar	_divisor @ sp[(-9)+-16]
 16012  018FCE  90D8               	bcf	status,0,c
 16013  018FD0  0EE7               	movlw	-25
 16014  018FD2  36E3               	rlcf	plusw1,f,c
 16015  018FD4  0EE8               	movlw	-24
 16016  018FD6  36E3               	rlcf	plusw1,f,c
 16017  018FD8  0EE9               	movlw	-23
 16018  018FDA  36E3               	rlcf	plusw1,f,c
 16019  018FDC  0EEA               	movlw	-22
 16020  018FDE  36E3               	rlcf	plusw1,f,c
 16021  018FE0  0EEB               	movlw	-21
 16022  018FE2  36E3               	rlcf	plusw1,f,c
 16023  018FE4  0EEC               	movlw	-20
 16024  018FE6  36E3               	rlcf	plusw1,f,c
 16025  018FE8  0EED               	movlw	-19
 16026  018FEA  36E3               	rlcf	plusw1,f,c
 16027  018FEC  0EEE               	movlw	-18
 16028  018FEE  36E3               	rlcf	plusw1,f,c
 16029                           
 16030                           ;stkvar	_counter @ sp[(-9)+8]
 16031  018FF0  0EFF               	movlw	-1
 16032  018FF2                     L16:
 16033  018FF2  2AE3               	incf	plusw1,f,c
 16034                           
 16035                           ;stkvar	_divisor @ sp[(-9)+-16]
 16036  018FF4  0EEE               	movlw	-18
 16037  018FF6  AEE3               	btfss	plusw1,7,c
 16038  018FF8  D7EA               	goto	l8930
 16039  018FFA                     u7480:
 16040                           
 16041                           ;stkvar	_quotient @ sp[(-9)+0]
 16042  018FFA  90D8               	bcf	status,0,c
 16043  018FFC  0EF7               	movlw	-9
 16044  018FFE  36E3               	rlcf	plusw1,f,c
 16045  019000  0EF8               	movlw	-8
 16046  019002  36E3               	rlcf	plusw1,f,c
 16047  019004  0EF9               	movlw	-7
 16048  019006  36E3               	rlcf	plusw1,f,c
 16049  019008  0EFA               	movlw	-6
 16050  01900A  36E3               	rlcf	plusw1,f,c
 16051  01900C  0EFB               	movlw	-5
 16052  01900E  36E3               	rlcf	plusw1,f,c
 16053  019010  0EFC               	movlw	-4
 16054  019012  36E3               	rlcf	plusw1,f,c
 16055  019014  0EFD               	movlw	-3
 16056  019016  36E3               	rlcf	plusw1,f,c
 16057  019018  0EFE               	movlw	-2
 16058  01901A  36E3               	rlcf	plusw1,f,c
 16059                           
 16060                           ;stkvar	_divisor @ sp[(-9)+-16]
 16061                           ;stkvar	_dividend @ sp[(-9)+-8]
 16062  01901C  50E1               	movf	fsr1l,w,c
 16063  01901E  0FEF               	addlw	-17
 16064  019020  6ED9               	movwf	fsr2l,c
 16065  019022  50E2               	movf	fsr1h,w,c
 16066  019024  6EDA               	movwf	fsr2h,c
 16067  019026  0EFF               	movlw	255
 16068  019028  22DA               	addwfc	fsr2h,f,c
 16069  01902A  0EE7               	movlw	-25
 16070  01902C  50E3               	movf	plusw1,w,c
 16071  01902E  5CDE               	subwf	postinc2,w,c
 16072  019030  0EE8               	movlw	-24
 16073  019032  50E3               	movf	plusw1,w,c
 16074  019034  58DE               	subwfb	postinc2,w,c
 16075  019036  0EE9               	movlw	-23
 16076  019038  50E3               	movf	plusw1,w,c
 16077  01903A  58DE               	subwfb	postinc2,w,c
 16078  01903C  0EEA               	movlw	-22
 16079  01903E  50E3               	movf	plusw1,w,c
 16080  019040  58DE               	subwfb	postinc2,w,c
 16081  019042  0EEB               	movlw	-21
 16082  019044  50E3               	movf	plusw1,w,c
 16083  019046  58DE               	subwfb	postinc2,w,c
 16084  019048  0EEC               	movlw	-20
 16085  01904A  50E3               	movf	plusw1,w,c
 16086  01904C  58DE               	subwfb	postinc2,w,c
 16087  01904E  0EED               	movlw	-19
 16088  019050  50E3               	movf	plusw1,w,c
 16089  019052  58DE               	subwfb	postinc2,w,c
 16090  019054  0EEE               	movlw	-18
 16091  019056  50E3               	movf	plusw1,w,c
 16092  019058  58DE               	subwfb	postinc2,w,c
 16093  01905A  A0D8               	btfss	status,0,c
 16094  01905C  D021               	goto	l8942
 16095                           
 16096                           ;stkvar	_divisor @ sp[(-9)+-16]
 16097                           ;stkvar	_dividend @ sp[(-9)+-8]
 16098  01905E  50E1               	movf	fsr1l,w,c
 16099  019060  0FEF               	addlw	-17
 16100  019062  6ED9               	movwf	fsr2l,c
 16101  019064  50E2               	movf	fsr1h,w,c
 16102  019066  6EDA               	movwf	fsr2h,c
 16103  019068  0EFF               	movlw	255
 16104  01906A  22DA               	addwfc	fsr2h,f,c
 16105  01906C  0EE7               	movlw	-25
 16106  01906E  50E3               	movf	plusw1,w,c
 16107  019070  5EDE               	subwf	postinc2,f,c
 16108  019072  0EE8               	movlw	-24
 16109  019074  50E3               	movf	plusw1,w,c
 16110  019076  5ADE               	subwfb	postinc2,f,c
 16111  019078  0EE9               	movlw	-23
 16112  01907A  50E3               	movf	plusw1,w,c
 16113  01907C  5ADE               	subwfb	postinc2,f,c
 16114  01907E  0EEA               	movlw	-22
 16115  019080  50E3               	movf	plusw1,w,c
 16116  019082  5ADE               	subwfb	postinc2,f,c
 16117  019084  0EEB               	movlw	-21
 16118  019086  50E3               	movf	plusw1,w,c
 16119  019088  5ADE               	subwfb	postinc2,f,c
 16120  01908A  0EEC               	movlw	-20
 16121  01908C  50E3               	movf	plusw1,w,c
 16122  01908E  5ADE               	subwfb	postinc2,f,c
 16123  019090  0EED               	movlw	-19
 16124  019092  50E3               	movf	plusw1,w,c
 16125  019094  5ADE               	subwfb	postinc2,f,c
 16126  019096  0EEE               	movlw	-18
 16127  019098  50E3               	movf	plusw1,w,c
 16128  01909A  5ADE               	subwfb	postinc2,f,c
 16129                           
 16130                           ;stkvar	_quotient @ sp[(-9)+0]
 16131  01909C  0EF7               	movlw	-9
 16132  01909E  80E3               	bsf	plusw1,0,c
 16133  0190A0                     l8942:
 16134                           
 16135                           ;stkvar	_divisor @ sp[(-9)+-16]
 16136  0190A0  90D8               	bcf	status,0,c
 16137  0190A2  0EEE               	movlw	-18
 16138  0190A4  32E3               	rrcf	plusw1,f,c
 16139  0190A6  0EED               	movlw	-19
 16140  0190A8  32E3               	rrcf	plusw1,f,c
 16141  0190AA  0EEC               	movlw	-20
 16142  0190AC  32E3               	rrcf	plusw1,f,c
 16143  0190AE  0EEB               	movlw	-21
 16144  0190B0  32E3               	rrcf	plusw1,f,c
 16145  0190B2  0EEA               	movlw	-22
 16146  0190B4  32E3               	rrcf	plusw1,f,c
 16147  0190B6  0EE9               	movlw	-23
 16148  0190B8  32E3               	rrcf	plusw1,f,c
 16149  0190BA  0EE8               	movlw	-24
 16150  0190BC  32E3               	rrcf	plusw1,f,c
 16151  0190BE  0EE7               	movlw	-25
 16152  0190C0  32E3               	rrcf	plusw1,f,c
 16153                           
 16154                           ;stkvar	_counter @ sp[(-9)+8]
 16155  0190C2  0EFF               	movlw	-1
 16156  0190C4  50E3               	movf	plusw1,w,c
 16157  0190C6  6E01               	movwf	btemp^0,c
 16158  0190C8  0E01               	movlw	1
 16159  0190CA  5E01               	subwf	btemp^0,f,c
 16160  0190CC  0EFF               	movlw	-1
 16161  0190CE  0060  F007  FFE3   	movff	btemp,plusw1
 16162  0190D4  A4D8               	btfss	status,2,c
 16163  0190D6  D791               	goto	u7480
 16164  0190D8                     u7500:
 16165                           
 16166                           ;stkvar	_quotient @ sp[(-9)+0]
 16167  0190D8  0EF7               	movlw	247
 16168  0190DA  24E1               	addwf	fsr1l,w,c
 16169  0190DC  6ED9               	movwf	fsr2l,c
 16170  0190DE  0EFF               	movlw	255
 16171  0190E0  20E2               	addwfc	fsr1h,w,c
 16172  0190E2  6EDA               	movwf	fsr2h,c
 16173                           
 16174                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 16175  0190E4  0E08               	movlw	8
 16176  0190E6  6E01               	movwf	btemp^0,c
 16177  0190E8  0EEF               	movlw	-17
 16178  0190EA                     us751999:
 16179  0190EA  006F FF7B FFE3     	movff	postinc2,plusw1
 16180  0190F0  28E8               	incf	wreg,w,c
 16181  0190F2  2E01               	decfsz	btemp^0,f,c
 16182  0190F4  D7FA               	bra	us751999
 16183                           
 16184                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16185  0190F6  0EF7               	movlw	247
 16186  0190F8  26E1               	addwf	fsr1l,f,c
 16187  0190FA  0EFF               	movlw	255
 16188  0190FC  22E2               	addwfc	fsr1h,f,c
 16189  0190FE  0012               	return		;funcret
 16190  019100                     __end_of___lodiv:
 16191                           	opt callstack 0
 16192                           
 16193 ;; *************** function _strncmp *****************
 16194 ;; Defined at:
 16195 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;  _l              2  [STACK] PTR const unsigned char 
 16198 ;;		 -> ct(3), STR_67(127), STR_65(3), STR_64(3), 
 16199 ;;		 -> STR_63(19), STR_62(19), STR_61(19), STR_60(19), 
 16200 ;;		 -> STR_59(19), STR_58(19), STR_57(24), STR_56(15), 
 16201 ;;		 -> STR_55(15), STR_54(15), STR_53(10), STR_52(10), 
 16202 ;;		 -> STR_51(19), STR_50(19), STR_47(3), STR_46(3), 
 16203 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16204 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16205 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16206 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16207 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16208 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16209 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16210 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16211 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16212 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16213 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16214 ;;  _r              2  [STACK] PTR const unsigned char 
 16215 ;;		 -> STR_101(3), STR_97(3), STR_92(3), STR_87(3), 
 16216 ;;		 -> STR_82(3), STR_78(3), 
 16217 ;;  n               2  [STACK] unsigned int 
 16218 ;; Auto vars:     Size  Location     Type
 16219 ;;  r               2  [STACK] PTR const unsigned char 
 16220 ;;		 -> STR_101(3), STR_97(3), STR_92(3), STR_87(3), 
 16221 ;;		 -> STR_82(3), STR_78(3), 
 16222 ;;  l               2  [STACK] PTR const unsigned char 
 16223 ;;		 -> ct(3), STR_67(127), STR_65(3), STR_64(3), 
 16224 ;;		 -> STR_63(19), STR_62(19), STR_61(19), STR_60(19), 
 16225 ;;		 -> STR_59(19), STR_58(19), STR_57(24), STR_56(15), 
 16226 ;;		 -> STR_55(15), STR_54(15), STR_53(10), STR_52(10), 
 16227 ;;		 -> STR_51(19), STR_50(19), STR_47(3), STR_46(3), 
 16228 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16229 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16230 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16231 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16232 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16233 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16234 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16235 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16236 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16237 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16238 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16239 ;; Return value:  Size  Location     Type
 16240 ;;                  2  [STACK] int 
 16241 ;; Registers used:
 16242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 16243 ;; Tracked objects:
 16244 ;;		On entry : 0/0
 16245 ;;		On exit  : 0/0
 16246 ;;		Unchanged: 0/0
 16247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16252 ;;Total ram usage:        0 bytes
 16253 ;; Hardware stack levels used:    1
 16254 ;; Hardware stack levels required when called:   15
 16255 ;; This function calls:
 16256 ;;		Nothing
 16257 ;; This function is called by:
 16258 ;;		_vfpfcnvrt
 16259 ;; This function uses a reentrant model
 16260 ;;
 16261                           
 16262                           	psect	text61
 16263  0180B6                     __ptext61:
 16264                           	opt callstack 0
 16265  0180B6                     _strncmp:
 16266                           	opt callstack 0
 16267                           
 16268                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16269  0180B6  52E6               	movf	postinc1,f,c
 16270  0180B8  52E6               	movf	postinc1,f,c
 16271  0180BA  52E6               	movf	postinc1,f,c
 16272  0180BC  52E6               	movf	postinc1,f,c
 16273                           
 16274                           ;stkvar	__l @ sp[(-4)+-2]
 16275                           
 16276                           ;incstack = 0
 16277 ;; hardware stack exceeded
 16278  0180BE  0EFA               	movlw	-6
 16279  0180C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16280  0180C6  0EFB               	movlw	-5
 16281  0180C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16282                           
 16283                           ;stkvar	_l @ sp[(-4)+2]
 16284  0180CE  0EFF               	movlw	-1
 16285  0180D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16286  0180D6  0EFE               	movlw	-2
 16287  0180D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16288                           
 16289                           ;stkvar	__r @ sp[(-4)+-4]
 16290  0180DE  0EF8               	movlw	-8
 16291  0180E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16292  0180E6  0EF9               	movlw	-7
 16293  0180E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16294                           
 16295                           ;stkvar	_r @ sp[(-4)+0]
 16296  0180EE  0EFD               	movlw	-3
 16297  0180F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16298  0180F6  0EFC               	movlw	-4
 16299  0180F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16300                           
 16301                           ;stkvar	_n @ sp[(-4)+-6]
 16302  0180FE  0EF6               	movlw	-10
 16303  018100  006F FF8C  F001    	movff	plusw1,btemp
 16304  018106  0E01               	movlw	1
 16305  018108  5E01               	subwf	btemp^0,f,c
 16306  01810A  0EF6               	movlw	-10
 16307  01810C  0060  F007  FFE3   	movff	btemp,plusw1
 16308  018112  0EF7               	movlw	-9
 16309  018114  006F FF8C  F001    	movff	plusw1,btemp
 16310  01811A  0E00               	movlw	0
 16311  01811C  5A01               	subwfb	btemp^0,f,c
 16312  01811E  0EF7               	movlw	-9
 16313  018120  0060  F007  FFE3   	movff	btemp,plusw1
 16314  018126  0EF6               	movlw	-10
 16315  018128  28E3               	incf	plusw1,w,c
 16316  01812A  E13F               	bnz	l9612
 16317  01812C  0EF7               	movlw	-9
 16318  01812E  28E3               	incf	plusw1,w,c
 16319  018130  A4D8               	btfss	status,2,c
 16320  018132  D03B               	goto	l9612
 16321  018134  0E00               	movlw	0
 16322  018136  6E01               	movwf	btemp^0,c
 16323  018138  0E00               	movlw	0
 16324  01813A  6E02               	movwf	(btemp+1)^0,c
 16325  01813C  D0C7               	goto	l3565
 16326  01813E                     l9610:
 16327                           
 16328                           ;stkvar	_l @ sp[(-4)+2]
 16329  01813E  0EFE               	movlw	-2
 16330  018140  50E3               	movf	plusw1,w,c
 16331  018142  0F01               	addlw	1
 16332  018144  6E01               	movwf	btemp^0,c
 16333  018146  0EFE               	movlw	-2
 16334  018148  0060  F007  FFE3   	movff	btemp,plusw1
 16335  01814E  6A01               	clrf	btemp^0,c
 16336  018150  0EFF               	movlw	-1
 16337  018152  50E3               	movf	plusw1,w,c
 16338  018154  2001               	addwfc	btemp^0,w,c
 16339  018156  6E01               	movwf	btemp^0,c
 16340  018158  0EFF               	movlw	-1
 16341  01815A  0060  F007  FFE3   	movff	btemp,plusw1
 16342                           
 16343                           ;stkvar	_r @ sp[(-4)+0]
 16344  018160  0EFC               	movlw	-4
 16345  018162  50E3               	movf	plusw1,w,c
 16346  018164  0F01               	addlw	1
 16347  018166  6E01               	movwf	btemp^0,c
 16348  018168  0EFC               	movlw	-4
 16349  01816A  0060  F007  FFE3   	movff	btemp,plusw1
 16350  018170  6A01               	clrf	btemp^0,c
 16351  018172  0EFD               	movlw	-3
 16352  018174  50E3               	movf	plusw1,w,c
 16353  018176  2001               	addwfc	btemp^0,w,c
 16354  018178  6E01               	movwf	btemp^0,c
 16355  01817A  0EFD               	movlw	-3
 16356  01817C  0060  F007  FFE3   	movff	btemp,plusw1
 16357                           
 16358                           ;stkvar	_n @ sp[(-4)+-6]
 16359  018182  0EF6               	movlw	-10
 16360  018184  006F FF8C  F001    	movff	plusw1,btemp
 16361  01818A  0E01               	movlw	1
 16362  01818C  5E01               	subwf	btemp^0,f,c
 16363  01818E  0EF6               	movlw	-10
 16364  018190  0060  F007  FFE3   	movff	btemp,plusw1
 16365  018196  0EF7               	movlw	-9
 16366  018198  006F FF8C  F001    	movff	plusw1,btemp
 16367  01819E  0E00               	movlw	0
 16368  0181A0  5A01               	subwfb	btemp^0,f,c
 16369  0181A2  0EF7               	movlw	-9
 16370  0181A4  0060  F007  FFE3   	movff	btemp,plusw1
 16371  0181AA                     l9612:
 16372                           
 16373                           ;stkvar	_l @ sp[(-4)+2]
 16374  0181AA  0EFE               	movlw	-2
 16375  0181AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 16376  0181B2  0EFF               	movlw	-1
 16377  0181B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 16378  0181BA  0E00               	movlw	low (__mediumconst shr (0+16))
 16379  0181BC  6EF8               	movwf	tblptru,c
 16380  0181BE  0E1F               	movlw	(high __ramtop+-1)
 16381  0181C0  64F7               	cpfsgt	tblptrh,c
 16382  0181C2  D003               	bra	u8757
 16383  0181C4  0008               	tblrd		*
 16384  0181C6  50F5               	movf	tablat,w,c
 16385  0181C8  D007               	bra	u8750
 16386  0181CA                     u8757:
 16387  0181CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16388  0181D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16389  0181D6  50EF               	movf	indf0,w,c
 16390  0181D8                     u8750:
 16391  0181D8  0900               	iorlw	0
 16392  0181DA  B4D8               	btfsc	status,2,c
 16393  0181DC  D04A               	goto	u8790
 16394                           
 16395                           ;stkvar	_r @ sp[(-4)+0]
 16396  0181DE  50E1               	movf	fsr1l,w,c
 16397  0181E0  0FFC               	addlw	-4
 16398  0181E2  6ED9               	movwf	fsr2l,c
 16399  0181E4  50E2               	movf	fsr1h,w,c
 16400  0181E6  6EDA               	movwf	fsr2h,c
 16401  0181E8  0EFF               	movlw	255
 16402  0181EA  22DA               	addwfc	fsr2h,f,c
 16403  0181EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16404  0181F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16405  0181F8                     	if	0	;tblptru may be non-zero
 16406  0181F8                     	endif
 16407  0181F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16408  0181F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16409  0181FA  6EF8               	movwf	tblptru,c
 16410  0181FC                     	endif
 16411  0181FC  0008               	tblrd		*
 16412  0181FE  50F5               	movf	tablat,w,c
 16413  018200  0900               	iorlw	0
 16414  018202  B4D8               	btfsc	status,2,c
 16415  018204  D036               	goto	u8790
 16416                           
 16417                           ;stkvar	_n @ sp[(-4)+-6]
 16418  018206  0EF6               	movlw	-10
 16419  018208  006F FF8C  F001    	movff	plusw1,btemp
 16420  01820E  0EF7               	movlw	-9
 16421  018210  50E3               	movf	plusw1,w,c
 16422  018212  1001               	iorwf	btemp^0,w,c
 16423  018214  B4D8               	btfsc	status,2,c
 16424  018216  D02D               	goto	u8790
 16425                           
 16426                           ;stkvar	_r @ sp[(-4)+0]
 16427  018218  50E1               	movf	fsr1l,w,c
 16428  01821A  0FFC               	addlw	-4
 16429  01821C  6ED9               	movwf	fsr2l,c
 16430  01821E  50E2               	movf	fsr1h,w,c
 16431  018220  6EDA               	movwf	fsr2h,c
 16432  018222  0EFF               	movlw	255
 16433  018224  22DA               	addwfc	fsr2h,f,c
 16434  018226  006F FF7B FFF6     	movff	postinc2,tblptrl
 16435  01822C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16436  018232                     	if	0	;tblptru may be non-zero
 16437  018232                     	endif
 16438  018232                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16439  018232  0E00               	movlw	low (__mediumconst shr (0+16))
 16440  018234  6EF8               	movwf	tblptru,c
 16441  018236                     	endif
 16442  018236  0008               	tblrd		*
 16443  018238  006F FFD4  F00C    	movff	tablat,btemp+11
 16444                           
 16445                           ;stkvar	_l @ sp[(-4)+2]
 16446  01823E  0EFE               	movlw	-2
 16447  018240  006F FF8F FFF6     	movff	plusw1,tblptrl
 16448  018246  0EFF               	movlw	-1
 16449  018248  006F FF8F FFF7     	movff	plusw1,tblptrh
 16450  01824E  0E00               	movlw	low (__mediumconst shr (0+16))
 16451  018250  6EF8               	movwf	tblptru,c
 16452  018252  0E1F               	movlw	(high __ramtop+-1)
 16453  018254  64F7               	cpfsgt	tblptrh,c
 16454  018256  D003               	bra	u8797
 16455  018258  0008               	tblrd		*
 16456  01825A  50F5               	movf	tablat,w,c
 16457  01825C  D007               	bra	u8795
 16458  01825E                     u8797:
 16459  01825E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16460  018264  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16461  01826A  50EF               	movf	indf0,w,c
 16462  01826C                     u8795:
 16463  01826C  180C               	xorwf	(btemp+11)^0,w,c
 16464  01826E  B4D8               	btfsc	status,2,c
 16465  018270  D766               	goto	l9610
 16466  018272                     u8790:
 16467                           
 16468                           ;stkvar	_l @ sp[(-4)+2]
 16469  018272  0EFE               	movlw	-2
 16470  018274  006F FF8F FFF6     	movff	plusw1,tblptrl
 16471  01827A  0EFF               	movlw	-1
 16472  01827C  006F FF8F FFF7     	movff	plusw1,tblptrh
 16473  018282  0E00               	movlw	low (__mediumconst shr (0+16))
 16474  018284  6EF8               	movwf	tblptru,c
 16475  018286  0E1F               	movlw	(high __ramtop+-1)
 16476  018288  64F7               	cpfsgt	tblptrh,c
 16477  01828A  D003               	bra	u8807
 16478  01828C  0008               	tblrd		*
 16479  01828E  50F5               	movf	tablat,w,c
 16480  018290  D007               	bra	u8800
 16481  018292                     u8807:
 16482  018292  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16483  018298  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16484  01829E  50EF               	movf	indf0,w,c
 16485  0182A0                     u8800:
 16486  0182A0  6E01               	movwf	btemp^0,c
 16487  0182A2  6A02               	clrf	(btemp+1)^0,c
 16488                           
 16489                           ;stkvar	_r @ sp[(-4)+0]
 16490  0182A4  50E1               	movf	fsr1l,w,c
 16491  0182A6  0FFC               	addlw	-4
 16492  0182A8  6ED9               	movwf	fsr2l,c
 16493  0182AA  50E2               	movf	fsr1h,w,c
 16494  0182AC  6EDA               	movwf	fsr2h,c
 16495  0182AE  0EFF               	movlw	255
 16496  0182B0  22DA               	addwfc	fsr2h,f,c
 16497  0182B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16498  0182B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16499  0182BE                     	if	0	;tblptru may be non-zero
 16500  0182BE                     	endif
 16501  0182BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16502  0182BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16503  0182C0  6EF8               	movwf	tblptru,c
 16504  0182C2                     	endif
 16505  0182C2  0008               	tblrd		*
 16506  0182C4  50F5               	movf	tablat,w,c
 16507  0182C6  5E01               	subwf	btemp^0,f,c
 16508  0182C8  0E00               	movlw	0
 16509  0182CA  5A02               	subwfb	(btemp+1)^0,f,c
 16510  0182CC                     l3565:
 16511                           
 16512                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16513  0182CC  0EF6               	movlw	246
 16514  0182CE  26E1               	addwf	fsr1l,f,c
 16515  0182D0  0EFF               	movlw	255
 16516  0182D2  22E2               	addwfc	fsr1h,f,c
 16517  0182D4  0012               	return		;funcret
 16518  0182D6                     __end_of_strncmp:
 16519                           	opt callstack 0
 16520                           
 16521 ;; *************** function _stoa *****************
 16522 ;; Defined at:
 16523 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16526 ;;		 -> f(6), NULL(0), 
 16527 ;;  s               2  [STACK] PTR unsigned char 
 16528 ;;		 -> ?_printf(2), ?_sprintf(2), STR_49(9), STR_48(12), 
 16529 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16530 ;;		 -> V(192), 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  nuls            7  [STACK] unsigned char [7]
 16533 ;;  l               2  [STACK] int 
 16534 ;;  p               2  [STACK] int 
 16535 ;;  cp              2  [STACK] PTR unsigned char 
 16536 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_49(9), 
 16537 ;;		 -> STR_48(12), D.lcd(480), D(482), T(144), 
 16538 ;;		 -> STR_3(5), V(192), 
 16539 ;;  w               2  [STACK] int 
 16540 ;;  i               2  [STACK] int 
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  2  [STACK] int 
 16543 ;; Registers used:
 16544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;Total ram usage:        0 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:   18
 16557 ;; This function calls:
 16558 ;;		_fputc
 16559 ;;		_strlen
 16560 ;; This function is called by:
 16561 ;;		_vfpfcnvrt
 16562 ;; This function uses a reentrant model
 16563 ;;
 16564                           
 16565                           	psect	text62
 16566  01747E                     __ptext62:
 16567                           	opt callstack 0
 16568  01747E                     _stoa:
 16569                           	opt callstack 0
 16570                           
 16571                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16572  01747E  0E11               	movlw	17
 16573  017480  26E1               	addwf	fsr1l,f,c
 16574  017482  0E00               	movlw	0
 16575  017484  22E2               	addwfc	fsr1h,f,c
 16576                           
 16577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16578                           
 16579                           ;incstack = 0
 16580 ;; hardware stack exceeded
 16581  017486  EE20  F100         	lfsr	2,stoa@F1166
 16582                           
 16583                           ;stkvar	_nuls @ sp[(-17)+0]
 16584  01748A  0E07               	movlw	7
 16585  01748C  6E01               	movwf	btemp^0,c
 16586  01748E  0EEF               	movlw	-17
 16587  017490                     us1189999:
 16588  017490  006F FF7B FFE3     	movff	postinc2,plusw1
 16589  017496  28E8               	incf	wreg,w,c
 16590  017498  2E01               	decfsz	btemp^0,f,c
 16591  01749A  D7FA               	bra	us1189999
 16592                           
 16593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16594                           ;stkvar	_s @ sp[(-17)+-4]
 16595  01749C  0EEB               	movlw	-21
 16596  01749E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16597  0174A4  0EEC               	movlw	-20
 16598  0174A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16599                           
 16600                           ;stkvar	_cp @ sp[(-17)+11]
 16601  0174AC  0EFB               	movlw	-5
 16602  0174AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16603  0174B4  0EFA               	movlw	-6
 16604  0174B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16605                           
 16606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16607                           ;stkvar	_cp @ sp[(-17)+11]
 16608  0174BC  0EFA               	movlw	-6
 16609  0174BE  006F FF8C  F001    	movff	plusw1,btemp
 16610  0174C4  0EFB               	movlw	-5
 16611  0174C6  50E3               	movf	plusw1,w,c
 16612  0174C8  1001               	iorwf	btemp^0,w,c
 16613  0174CA  A4D8               	btfss	status,2,c
 16614  0174CC  D00E               	goto	l12680
 16615                           
 16616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16617                           ;stkvar	_nuls @ sp[(-17)+0]
 16618  0174CE  0EEF               	movlw	239
 16619  0174D0  24E1               	addwf	fsr1l,w,c
 16620  0174D2  6E0B               	movwf	(btemp+10)^0,c
 16621  0174D4  0EFF               	movlw	255
 16622  0174D6  20E2               	addwfc	fsr1h,w,c
 16623  0174D8  6E0C               	movwf	(btemp+11)^0,c
 16624                           
 16625                           ;stkvar	_cp @ sp[(-17)+11]
 16626  0174DA  0EFB               	movlw	-5
 16627  0174DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16628  0174E2  0EFA               	movlw	-6
 16629  0174E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16630  0174EA                     l12680:
 16631                           
 16632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16633                           ;stkvar	_cp @ sp[(-17)+11]
 16634  0174EA  0EFA               	movlw	-6
 16635  0174EC  006F FF8F FFE6     	movff	plusw1,postinc1
 16636  0174F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16637  0174F8  ECBA  F0D6         	call	_strlen	;wreg free
 16638                           
 16639                           ;stkvar	_l @ sp[(-17)+7]
 16640  0174FC  0EF6               	movlw	-10
 16641  0174FE  0060  F007  FFE3   	movff	btemp,plusw1
 16642  017504  0EF7               	movlw	-9
 16643  017506  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16644                           
 16645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16646                           ;stkvar	_p @ sp[(-17)+9]
 16647  01750C  0EF8               	movlw	-8
 16648  01750E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16649  017514  0EF9               	movlw	-7
 16650  017516  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16651                           
 16652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16653                           ;stkvar	_p @ sp[(-17)+9]
 16654  01751C  0EF9               	movlw	-7
 16655  01751E  BEE3               	btfsc	plusw1,7,c
 16656  017520  D023               	goto	l2390
 16657                           
 16658                           ;stkvar	_l @ sp[(-17)+7]
 16659                           ;stkvar	_p @ sp[(-17)+9]
 16660  017522  50E1               	movf	fsr1l,w,c
 16661  017524  0FF8               	addlw	-8
 16662  017526  6ED9               	movwf	fsr2l,c
 16663  017528  50E2               	movf	fsr1h,w,c
 16664  01752A  6EDA               	movwf	fsr2h,c
 16665  01752C  0EFF               	movlw	255
 16666  01752E  22DA               	addwfc	fsr2h,f,c
 16667  017530  0EF6               	movlw	-10
 16668  017532  50E3               	movf	plusw1,w,c
 16669  017534  5CDE               	subwf	postinc2,w,c
 16670  017536  50DE               	movf	postinc2,w,c
 16671  017538  0A80               	xorlw	128
 16672  01753A  6E01               	movwf	btemp^0,c
 16673  01753C  0EF7               	movlw	-9
 16674  01753E  50E3               	movf	plusw1,w,c
 16675  017540  0A80               	xorlw	128
 16676  017542  5801               	subwfb	btemp^0,w,c
 16677  017544  B0D8               	btfsc	status,0,c
 16678  017546  D010               	goto	l2390
 16679                           
 16680                           ;stkvar	_p @ sp[(-17)+9]
 16681                           ;stkvar	_l @ sp[(-17)+7]
 16682  017548  0EF8               	movlw	-8
 16683  01754A  006F FF8C  F001    	movff	plusw1,btemp
 16684  017550  0EF6               	movlw	-10
 16685  017552  0060  F007  FFE3   	movff	btemp,plusw1
 16686  017558  0EF9               	movlw	-7
 16687  01755A  006F FF8C  F001    	movff	plusw1,btemp
 16688  017560  0EF7               	movlw	-9
 16689  017562  0060  F007  FFE3   	movff	btemp,plusw1
 16690  017568                     l2390:
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16693                           ;stkvar	_l @ sp[(-17)+7]
 16694                           ;stkvar	_p @ sp[(-17)+9]
 16695  017568  0EF6               	movlw	-10
 16696  01756A  006F FF8C  F001    	movff	plusw1,btemp
 16697  017570  0EF8               	movlw	-8
 16698  017572  0060  F007  FFE3   	movff	btemp,plusw1
 16699  017578  0EF7               	movlw	-9
 16700  01757A  006F FF8C  F001    	movff	plusw1,btemp
 16701  017580  0EF9               	movlw	-7
 16702  017582  0060  F007  FFE3   	movff	btemp,plusw1
 16703                           
 16704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16705                           ;stkvar	_w @ sp[(-17)+13]
 16706  017588  0EFC               	movlw	-4
 16707  01758A  0060  F0EB  FFE3   	movff	_width,plusw1
 16708  017590  0EFD               	movlw	-3
 16709  017592  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16710                           
 16711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16712  017598  A03E               	btfss	_flags^0,0,c
 16713  01759A  D01F               	goto	l12700
 16714  01759C  D031               	goto	u11940
 16715  01759E                     l12696:
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16718                           ;stkvar	_fp @ sp[(-17)+-2]
 16719  01759E  0EED               	movlw	-19
 16720  0175A0  006F FF8F FFE6     	movff	plusw1,postinc1
 16721  0175A6  006F FF8F FFE6     	movff	plusw1,postinc1
 16722  0175AC  0E20               	movlw	32
 16723  0175AE  6EE6               	movwf	postinc1,c
 16724  0175B0  0E00               	movlw	0
 16725  0175B2  6EE6               	movwf	postinc1,c
 16726  0175B4  ECB6  F0CD         	call	_fputc	;wreg free
 16727                           
 16728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16729                           ;stkvar	_l @ sp[(-17)+7]
 16730  0175B8  0EF6               	movlw	-10
 16731  0175BA  50E3               	movf	plusw1,w,c
 16732  0175BC  0F01               	addlw	1
 16733  0175BE  6E01               	movwf	btemp^0,c
 16734  0175C0  0EF6               	movlw	-10
 16735  0175C2  0060  F007  FFE3   	movff	btemp,plusw1
 16736  0175C8  6A01               	clrf	btemp^0,c
 16737  0175CA  0EF7               	movlw	-9
 16738  0175CC  50E3               	movf	plusw1,w,c
 16739  0175CE  2001               	addwfc	btemp^0,w,c
 16740  0175D0  6E01               	movwf	btemp^0,c
 16741  0175D2  0EF7               	movlw	-9
 16742  0175D4  0060  F007  FFE3   	movff	btemp,plusw1
 16743  0175DA                     l12700:
 16744                           
 16745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16746                           ;stkvar	_w @ sp[(-17)+13]
 16747                           ;stkvar	_l @ sp[(-17)+7]
 16748  0175DA  50E1               	movf	fsr1l,w,c
 16749  0175DC  0FF6               	addlw	-10
 16750  0175DE  6ED9               	movwf	fsr2l,c
 16751  0175E0  50E2               	movf	fsr1h,w,c
 16752  0175E2  6EDA               	movwf	fsr2h,c
 16753  0175E4  0EFF               	movlw	255
 16754  0175E6  22DA               	addwfc	fsr2h,f,c
 16755  0175E8  0EFC               	movlw	-4
 16756  0175EA  50E3               	movf	plusw1,w,c
 16757  0175EC  5CDE               	subwf	postinc2,w,c
 16758  0175EE  50DE               	movf	postinc2,w,c
 16759  0175F0  0A80               	xorlw	128
 16760  0175F2  6E01               	movwf	btemp^0,c
 16761  0175F4  0EFD               	movlw	-3
 16762  0175F6  50E3               	movf	plusw1,w,c
 16763  0175F8  0A80               	xorlw	128
 16764  0175FA  5801               	subwfb	btemp^0,w,c
 16765  0175FC  A0D8               	btfss	status,0,c
 16766  0175FE  D7CF               	goto	l12696
 16767  017600                     u11940:
 16768                           
 16769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16770                           ;stkvar	_i @ sp[(-17)+15]
 16771  017600  0EFE               	movlw	-2
 16772  017602  6AE3               	clrf	plusw1,c
 16773  017604  0EFF               	movlw	-1
 16774  017606  6AE3               	clrf	plusw1,c
 16775                           
 16776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16777  017608  D045               	goto	l12710
 16778  01760A                     l12704:
 16779                           
 16780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16781                           ;stkvar	_fp @ sp[(-17)+-2]
 16782  01760A  0EED               	movlw	-19
 16783  01760C  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  017612  006F FF8F FFE6     	movff	plusw1,postinc1
 16785                           
 16786                           ;stkvar	_cp @ sp[(-19)+11]
 16787  017618  0EF8               	movlw	-8
 16788  01761A  006F FF8F FFF6     	movff	plusw1,tblptrl
 16789  017620  0EF9               	movlw	-7
 16790  017622  006F FF8F FFF7     	movff	plusw1,tblptrh
 16791  017628  0E00               	movlw	low (__mediumconst shr (0+16))
 16792  01762A  6EF8               	movwf	tblptru,c
 16793  01762C  0E1F               	movlw	(high __ramtop+-1)
 16794  01762E  64F7               	cpfsgt	tblptrh,c
 16795  017630  D003               	bra	u11957
 16796  017632  0008               	tblrd		*
 16797  017634  50F5               	movf	tablat,w,c
 16798  017636  D007               	bra	u11950
 16799  017638                     u11957:
 16800  017638  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16801  01763E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16802  017644  50EF               	movf	indf0,w,c
 16803  017646                     u11950:
 16804  017646  6EE6               	movwf	postinc1,c
 16805  017648  0E00               	movlw	0
 16806  01764A  6EE6               	movwf	postinc1,c
 16807  01764C  ECB6  F0CD         	call	_fputc	;wreg free
 16808                           
 16809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16810                           ;stkvar	_cp @ sp[(-17)+11]
 16811  017650  0EFA               	movlw	-6
 16812  017652  50E3               	movf	plusw1,w,c
 16813  017654  0F01               	addlw	1
 16814  017656  6E01               	movwf	btemp^0,c
 16815  017658  0EFA               	movlw	-6
 16816  01765A  0060  F007  FFE3   	movff	btemp,plusw1
 16817  017660  6A01               	clrf	btemp^0,c
 16818  017662  0EFB               	movlw	-5
 16819  017664  50E3               	movf	plusw1,w,c
 16820  017666  2001               	addwfc	btemp^0,w,c
 16821  017668  6E01               	movwf	btemp^0,c
 16822  01766A  0EFB               	movlw	-5
 16823  01766C  0060  F007  FFE3   	movff	btemp,plusw1
 16824                           
 16825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16826                           ;stkvar	_i @ sp[(-17)+15]
 16827  017672  0EFE               	movlw	-2
 16828  017674  50E3               	movf	plusw1,w,c
 16829  017676  0F01               	addlw	1
 16830  017678  6E01               	movwf	btemp^0,c
 16831  01767A  0EFE               	movlw	-2
 16832  01767C  0060  F007  FFE3   	movff	btemp,plusw1
 16833  017682  6A01               	clrf	btemp^0,c
 16834  017684  0EFF               	movlw	-1
 16835  017686  50E3               	movf	plusw1,w,c
 16836  017688  2001               	addwfc	btemp^0,w,c
 16837  01768A  6E01               	movwf	btemp^0,c
 16838  01768C  0EFF               	movlw	-1
 16839  01768E  0060  F007  FFE3   	movff	btemp,plusw1
 16840  017694                     l12710:
 16841                           
 16842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16843                           ;stkvar	_p @ sp[(-17)+9]
 16844                           ;stkvar	_i @ sp[(-17)+15]
 16845  017694  50E1               	movf	fsr1l,w,c
 16846  017696  0FFE               	addlw	-2
 16847  017698  6ED9               	movwf	fsr2l,c
 16848  01769A  50E2               	movf	fsr1h,w,c
 16849  01769C  6EDA               	movwf	fsr2h,c
 16850  01769E  0EFF               	movlw	255
 16851  0176A0  22DA               	addwfc	fsr2h,f,c
 16852  0176A2  0EF8               	movlw	-8
 16853  0176A4  50E3               	movf	plusw1,w,c
 16854  0176A6  5CDE               	subwf	postinc2,w,c
 16855  0176A8  50DE               	movf	postinc2,w,c
 16856  0176AA  0A80               	xorlw	128
 16857  0176AC  6E01               	movwf	btemp^0,c
 16858  0176AE  0EF9               	movlw	-7
 16859  0176B0  50E3               	movf	plusw1,w,c
 16860  0176B2  0A80               	xorlw	128
 16861  0176B4  5801               	subwfb	btemp^0,w,c
 16862  0176B6  A0D8               	btfss	status,0,c
 16863  0176B8  D7A8               	goto	l12704
 16864                           
 16865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16866  0176BA  B03E               	btfsc	_flags^0,0,c
 16867  0176BC  D01F               	goto	l12718
 16868  0176BE  D031               	goto	u11980
 16869  0176C0                     l12714:
 16870                           
 16871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16872                           ;stkvar	_fp @ sp[(-17)+-2]
 16873  0176C0  0EED               	movlw	-19
 16874  0176C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16875  0176C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16876  0176CE  0E20               	movlw	32
 16877  0176D0  6EE6               	movwf	postinc1,c
 16878  0176D2  0E00               	movlw	0
 16879  0176D4  6EE6               	movwf	postinc1,c
 16880  0176D6  ECB6  F0CD         	call	_fputc	;wreg free
 16881                           
 16882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16883                           ;stkvar	_l @ sp[(-17)+7]
 16884  0176DA  0EF6               	movlw	-10
 16885  0176DC  50E3               	movf	plusw1,w,c
 16886  0176DE  0F01               	addlw	1
 16887  0176E0  6E01               	movwf	btemp^0,c
 16888  0176E2  0EF6               	movlw	-10
 16889  0176E4  0060  F007  FFE3   	movff	btemp,plusw1
 16890  0176EA  6A01               	clrf	btemp^0,c
 16891  0176EC  0EF7               	movlw	-9
 16892  0176EE  50E3               	movf	plusw1,w,c
 16893  0176F0  2001               	addwfc	btemp^0,w,c
 16894  0176F2  6E01               	movwf	btemp^0,c
 16895  0176F4  0EF7               	movlw	-9
 16896  0176F6  0060  F007  FFE3   	movff	btemp,plusw1
 16897  0176FC                     l12718:
 16898                           
 16899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16900                           ;stkvar	_w @ sp[(-17)+13]
 16901                           ;stkvar	_l @ sp[(-17)+7]
 16902  0176FC  50E1               	movf	fsr1l,w,c
 16903  0176FE  0FF6               	addlw	-10
 16904  017700  6ED9               	movwf	fsr2l,c
 16905  017702  50E2               	movf	fsr1h,w,c
 16906  017704  6EDA               	movwf	fsr2h,c
 16907  017706  0EFF               	movlw	255
 16908  017708  22DA               	addwfc	fsr2h,f,c
 16909  01770A  0EFC               	movlw	-4
 16910  01770C  50E3               	movf	plusw1,w,c
 16911  01770E  5CDE               	subwf	postinc2,w,c
 16912  017710  50DE               	movf	postinc2,w,c
 16913  017712  0A80               	xorlw	128
 16914  017714  6E01               	movwf	btemp^0,c
 16915  017716  0EFD               	movlw	-3
 16916  017718  50E3               	movf	plusw1,w,c
 16917  01771A  0A80               	xorlw	128
 16918  01771C  5801               	subwfb	btemp^0,w,c
 16919  01771E  A0D8               	btfss	status,0,c
 16920  017720  D7CF               	goto	l12714
 16921  017722                     u11980:
 16922                           
 16923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16924                           ;stkvar	_l @ sp[(-17)+7]
 16925  017722  0EF6               	movlw	-10
 16926  017724  006F FF8C  F001    	movff	plusw1,btemp
 16927  01772A  0EF7               	movlw	-9
 16928  01772C  006F FF8C  F002    	movff	plusw1,btemp+1
 16929                           
 16930                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16931  017732  0EEB               	movlw	235
 16932  017734  26E1               	addwf	fsr1l,f,c
 16933  017736  0EFF               	movlw	255
 16934  017738  22E2               	addwfc	fsr1h,f,c
 16935  01773A  0012               	return		;funcret
 16936  01773C                     __end_of_stoa:
 16937                           	opt callstack 0
 16938                           
 16939 ;; *************** function _efgtoa *****************
 16940 ;; Defined at:
 16941 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16944 ;;		 -> f(6), NULL(0), 
 16945 ;;  f               4  [STACK] PTR struct _IO_FILE
 16946 ;;  c               1  [STACK] unsigned char 
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;  u               4  [STACK] unsigned char 
 16949 ;;  g               4  [STACK] unsigned char 
 16950 ;;  l               4  [STACK] unsigned char 
 16951 ;;  h               4  [STACK] unsigned char 
 16952 ;;  ou              4  [STACK] unsigned char 
 16953 ;;  n               2  [STACK] int 
 16954 ;;  e               2  [STACK] int 
 16955 ;;  i               2  [STACK] int 
 16956 ;;  w               2  [STACK] int 
 16957 ;;  p               2  [STACK] int 
 16958 ;;  sign            2  [STACK] int 
 16959 ;;  d               2  [STACK] int 
 16960 ;;  ne              2  [STACK] int 
 16961 ;;  m               2  [STACK] int 
 16962 ;;  pp              2  [STACK] int 
 16963 ;;  t               2  [STACK] int 
 16964 ;;  mode            1  [STACK] unsigned char 
 16965 ;;  nmode           1  [STACK] unsigned char 
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  2  [STACK] int 
 16968 ;; Registers used:
 16969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16979 ;;Total ram usage:        0 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; Hardware stack levels required when called:   20
 16982 ;; This function calls:
 16983 ;;		___awdiv
 16984 ;;		___awmod
 16985 ;;		___fladd
 16986 ;;		___fldiv
 16987 ;;		___fleq
 16988 ;;		___flge
 16989 ;;		___flmul
 16990 ;;		___flneg
 16991 ;;		___flsub
 16992 ;;		___fltol
 16993 ;;		___fpclassifyf
 16994 ;;		_floorf
 16995 ;;		_isupper
 16996 ;;		_pad
 16997 ;;		_strcpy
 16998 ;;		_tolower
 16999 ;; This function is called by:
 17000 ;;		_vfpfcnvrt
 17001 ;; This function uses a reentrant model
 17002 ;;
 17003                           
 17004                           	psect	text63
 17005  010000                     __ptext63:
 17006                           	opt callstack 0
 17007  010000                     _efgtoa:
 17008                           	opt callstack 0
 17009                           
 17010                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17011  010000  0E38               	movlw	56
 17012  010002  26E1               	addwf	fsr1l,f,c
 17013  010004  0E00               	movlw	0
 17014  010006  22E2               	addwfc	fsr1h,f,c
 17015                           
 17016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 17017                           ;stkvar	_sign @ sp[(-56)+42]
 17018                           
 17019                           ;incstack = 0
 17020 ;; hardware stack exceeded
 17021  010008  0EF2               	movlw	-14
 17022  01000A  6AE3               	clrf	plusw1,c
 17023  01000C  0EF3               	movlw	-13
 17024  01000E  6AE3               	clrf	plusw1,c
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 17027                           ;stkvar	_f @ sp[(-56)+-6]
 17028  010010  0EC2               	movlw	-62
 17029  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 17030  010018  0EC3               	movlw	-61
 17031  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17032  010020  0EC4               	movlw	-60
 17033  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 17034  010028  0EC5               	movlw	-59
 17035  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17036                           
 17037                           ;stkvar	_g @ sp[(-56)+16]
 17038  010030  0ED8               	movlw	-40
 17039  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 17040  010038  0ED9               	movlw	-39
 17041  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17042  010040  0EDA               	movlw	-38
 17043  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17044  010048  0EDB               	movlw	-37
 17045  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17046                           
 17047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 17048                           ;stkvar	_g @ sp[(-56)+16]
 17049  010050  0EDB               	movlw	-37
 17050  010052  AEE3               	btfss	plusw1,7,c
 17051  010054  D02B               	goto	l12378
 17052                           
 17053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 17054  010056  0E01               	movlw	1
 17055  010058  6E0B               	movwf	(btemp+10)^0,c
 17056  01005A  0E00               	movlw	0
 17057  01005C  6E0C               	movwf	(btemp+11)^0,c
 17058                           
 17059                           ;stkvar	_sign @ sp[(-56)+42]
 17060  01005E  0EF2               	movlw	-14
 17061  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17062  010066  0EF3               	movlw	-13
 17063  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 17066                           ;stkvar	_g @ sp[(-56)+16]
 17067  01006E  0ED8               	movlw	-40
 17068  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 17069  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 17070  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 17071  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 17072  010088  ECF7  F0DC         	call	___flneg	;wreg free
 17073                           
 17074                           ;stkvar	_g @ sp[(-56)+16]
 17075  01008C  0ED8               	movlw	-40
 17076  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 17077  010094  0ED9               	movlw	-39
 17078  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17079  01009C  0EDA               	movlw	-38
 17080  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17081  0100A4  0EDB               	movlw	-37
 17082  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 17083  0100AC                     l12378:
 17084                           
 17085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 17086                           ;stkvar	_n @ sp[(-56)+32]
 17087  0100AC  0EE8               	movlw	-24
 17088  0100AE  6AE3               	clrf	plusw1,c
 17089  0100B0  0EE9               	movlw	-23
 17090  0100B2  6AE3               	clrf	plusw1,c
 17091                           
 17092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 17093                           ;stkvar	_w @ sp[(-56)+38]
 17094  0100B4  0EEE               	movlw	-18
 17095  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 17096  0100BC  0EEF               	movlw	-17
 17097  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17098                           
 17099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 17100                           ;stkvar	_sign @ sp[(-56)+42]
 17101  0100C4  0EF2               	movlw	-14
 17102  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 17103  0100CC  0EF3               	movlw	-13
 17104  0100CE  50E3               	movf	plusw1,w,c
 17105  0100D0  1001               	iorwf	btemp^0,w,c
 17106  0100D2  A4D8               	btfss	status,2,c
 17107  0100D4  D002               	goto	u11390
 17108  0100D6  A43E               	btfss	_flags^0,2,c
 17109  0100D8  D036               	goto	l12398
 17110  0100DA                     u11390:
 17111                           
 17112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 17113                           ;stkvar	_sign @ sp[(-56)+42]
 17114  0100DA  0EF2               	movlw	-14
 17115  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 17116  0100E2  0EF3               	movlw	-13
 17117  0100E4  50E3               	movf	plusw1,w,c
 17118  0100E6  1001               	iorwf	btemp^0,w,c
 17119  0100E8  A4D8               	btfss	status,2,c
 17120  0100EA  D002               	goto	l12390
 17121  0100EC  0E2B               	movlw	43
 17122  0100EE  D001               	goto	L17
 17123  0100F0                     l12390:
 17124  0100F0  0E2D               	movlw	45
 17125  0100F2                     L17:
 17126  0100F2  6E0B               	movwf	(btemp+10)^0,c
 17127  0100F4  0E00               	movlw	0
 17128  0100F6  6E0C               	movwf	(btemp+11)^0,c
 17129                           
 17130                           ;stkvar	_efgtoa$5840 @ sp[(-56)+10]
 17131  0100F8  0ED2               	movlw	-46
 17132  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17133  010100  0ED3               	movlw	-45
 17134  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 17135                           
 17136                           ;stkvar	_efgtoa$5840 @ sp[(-56)+10]
 17137  010108  0ED2               	movlw	-46
 17138  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 17139                           
 17140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 17141                           ;stkvar	_n @ sp[(-56)+32]
 17142  010110  0EE8               	movlw	-24
 17143  010112  50E3               	movf	plusw1,w,c
 17144  010114  0F01               	addlw	1
 17145  010116  6E01               	movwf	btemp^0,c
 17146  010118  0EE8               	movlw	-24
 17147  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 17148  010120  6A01               	clrf	btemp^0,c
 17149  010122  0EE9               	movlw	-23
 17150  010124  50E3               	movf	plusw1,w,c
 17151  010126  2001               	addwfc	btemp^0,w,c
 17152  010128  6E01               	movwf	btemp^0,c
 17153  01012A  0EE9               	movlw	-23
 17154  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 17155                           
 17156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 17157                           ;stkvar	_w @ sp[(-56)+38]
 17158  010132  50E1               	movf	fsr1l,w,c
 17159  010134  0FEE               	addlw	-18
 17160  010136  6ED9               	movwf	fsr2l,c
 17161  010138  50E2               	movf	fsr1h,w,c
 17162  01013A  6EDA               	movwf	fsr2h,c
 17163  01013C  0EFF               	movlw	255
 17164  01013E  22DA               	addwfc	fsr2h,f,c
 17165  010140  06DE               	decf	postinc2,f,c
 17166  010142  0E00               	movlw	0
 17167  010144  5ADD               	subwfb	postdec2,f,c
 17168  010146                     l12398:
 17169                           
 17170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17171                           ;stkvar	_g @ sp[(-56)+16]
 17172  010146  0ED8               	movlw	-40
 17173  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 17174  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 17175  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 17177  010160  EC32  F0C6         	call	___fpclassifyf	;wreg free
 17178  010164  0401               	decf	btemp^0,w,c
 17179  010166  1002               	iorwf	(btemp+1)^0,w,c
 17180  010168  A4D8               	btfss	status,2,c
 17181  01016A  D076               	goto	l12416
 17182  01016C  0EBF               	movlw	191
 17183  01016E  6E0B               	movwf	(btemp+10)^0,c
 17184  010170  0EFF               	movlw	255
 17185  010172  6E0C               	movwf	(btemp+11)^0,c
 17186                           
 17187                           ;stkvar	_c @ sp[(-56)+-7]
 17188  010174  0EC1               	movlw	-63
 17189  010176  50E3               	movf	plusw1,w,c
 17190  010178  6E09               	movwf	(btemp+8)^0,c
 17191  01017A  6A0A               	clrf	(btemp+9)^0,c
 17192  01017C  500B               	movf	(btemp+10)^0,w,c
 17193  01017E  2609               	addwf	(btemp+8)^0,f,c
 17194  010180  500C               	movf	(btemp+11)^0,w,c
 17195  010182  220A               	addwfc	(btemp+9)^0,f,c
 17196  010184  500A               	movf	(btemp+9)^0,w,c
 17197  010186  E106               	bnz	u11420
 17198  010188  0E1A               	movlw	26
 17199  01018A  5C09               	subwf	(btemp+8)^0,w,c
 17200  01018C  B0D8               	btfsc	status,0,c
 17201  01018E  D002               	goto	u11420
 17202  010190  0E01               	movlw	1
 17203  010192  D001               	goto	u11430
 17204  010194                     u11420:
 17205  010194  0E00               	movlw	0
 17206  010196                     u11430:
 17207  010196  6E0B               	movwf	(btemp+10)^0,c
 17208  010198  6A0C               	clrf	(btemp+11)^0,c
 17209                           
 17210                           ;stkvar	_efgtoa$5841 @ sp[(-56)+8]
 17211  01019A  0ED0               	movlw	-48
 17212  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17213  0101A2  0ED1               	movlw	-47
 17214  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17215                           
 17216                           ;stkvar	_efgtoa$5841 @ sp[(-56)+8]
 17217  0101AA  0ED0               	movlw	-48
 17218  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 17219  0101B2  0ED1               	movlw	-47
 17220  0101B4  50E3               	movf	plusw1,w,c
 17221  0101B6  1001               	iorwf	btemp^0,w,c
 17222  0101B8  B4D8               	btfsc	status,2,c
 17223  0101BA  D017               	goto	l12408
 17224                           
 17225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 17226  0101BC  0ED6               	movlw	low STR_68
 17227  0101BE  6EE6               	movwf	postinc1,c
 17228  0101C0  0EFF               	movlw	high STR_68
 17229  0101C2  6EE6               	movwf	postinc1,c
 17230                           
 17231                           ;stkvar	_n @ sp[(-58)+32]
 17232  0101C4  0E97               	movlw	low _dbuf
 17233  0101C6  6E0B               	movwf	(btemp+10)^0,c
 17234  0101C8  0E02               	movlw	high _dbuf
 17235  0101CA  6E0C               	movwf	(btemp+11)^0,c
 17236  0101CC  0EE6               	movlw	-26
 17237  0101CE  50E3               	movf	plusw1,w,c
 17238  0101D0  260B               	addwf	(btemp+10)^0,f,c
 17239  0101D2  0EE7               	movlw	-25
 17240  0101D4  50E3               	movf	plusw1,w,c
 17241  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 17242  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17243  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 17244  0101E4  ECC9  F0D2         	call	_strcpy	;wreg free
 17245                           
 17246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 17247  0101E8  D016               	goto	l12410
 17248  0101EA                     l12408:
 17249                           
 17250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 17251  0101EA  0EDE               	movlw	low STR_69
 17252  0101EC  6EE6               	movwf	postinc1,c
 17253  0101EE  0EFF               	movlw	high STR_69
 17254  0101F0  6EE6               	movwf	postinc1,c
 17255                           
 17256                           ;stkvar	_n @ sp[(-58)+32]
 17257  0101F2  0E97               	movlw	low _dbuf
 17258  0101F4  6E0B               	movwf	(btemp+10)^0,c
 17259  0101F6  0E02               	movlw	high _dbuf
 17260  0101F8  6E0C               	movwf	(btemp+11)^0,c
 17261  0101FA  0EE6               	movlw	-26
 17262  0101FC  50E3               	movf	plusw1,w,c
 17263  0101FE  260B               	addwf	(btemp+10)^0,f,c
 17264  010200  0EE7               	movlw	-25
 17265  010202  50E3               	movf	plusw1,w,c
 17266  010204  220C               	addwfc	(btemp+11)^0,f,c
 17267  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17268  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17269  010212  ECC9  F0D2         	call	_strcpy	;wreg free
 17270  010216                     l12410:
 17271                           
 17272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 17273                           ;stkvar	_w @ sp[(-56)+38]
 17274  010216  50E1               	movf	fsr1l,w,c
 17275  010218  0FEE               	addlw	-18
 17276  01021A  6ED9               	movwf	fsr2l,c
 17277  01021C  50E2               	movf	fsr1h,w,c
 17278  01021E  6EDA               	movwf	fsr2h,c
 17279  010220  0EFF               	movlw	255
 17280  010222  22DA               	addwfc	fsr2h,f,c
 17281  010224  0EFD               	movlw	253
 17282  010226  26DE               	addwf	postinc2,f,c
 17283  010228  0EFF               	movlw	255
 17284  01022A  22DD               	addwfc	postdec2,f,c
 17285  01022C                     l12412:
 17286                           
 17287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 17288                           ;stkvar	_w @ sp[(-56)+38]
 17289  01022C  0EEE               	movlw	-18
 17290  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 17291  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 17292  01023A  0E97               	movlw	low _dbuf
 17293  01023C  6EE6               	movwf	postinc1,c
 17294  01023E  0E02               	movlw	high _dbuf
 17295  010240  6EE6               	movwf	postinc1,c
 17296                           
 17297                           ;stkvar	_fp @ sp[(-60)+-2]
 17298  010242  0EC2               	movlw	-62
 17299  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 17300  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 17301  010250  EC60  F0CF         	call	_pad	;wreg free
 17302  010254  EF1D  F089         	goto	l2308
 17303  010258                     l12416:
 17304                           
 17305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17306                           ;stkvar	_g @ sp[(-56)+16]
 17307  010258  0ED8               	movlw	-40
 17308  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 17309  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 17310  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 17311  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 17312  010272  EC32  F0C6         	call	___fpclassifyf	;wreg free
 17313  010276  5001               	movf	btemp^0,w,c
 17314  010278  1002               	iorwf	(btemp+1)^0,w,c
 17315  01027A  A4D8               	btfss	status,2,c
 17316  01027C  D056               	goto	l12434
 17317  01027E  0EBF               	movlw	191
 17318  010280  6E0B               	movwf	(btemp+10)^0,c
 17319  010282  0EFF               	movlw	255
 17320  010284  6E0C               	movwf	(btemp+11)^0,c
 17321                           
 17322                           ;stkvar	_c @ sp[(-56)+-7]
 17323  010286  0EC1               	movlw	-63
 17324  010288  50E3               	movf	plusw1,w,c
 17325  01028A  6E09               	movwf	(btemp+8)^0,c
 17326  01028C  6A0A               	clrf	(btemp+9)^0,c
 17327  01028E  500B               	movf	(btemp+10)^0,w,c
 17328  010290  2609               	addwf	(btemp+8)^0,f,c
 17329  010292  500C               	movf	(btemp+11)^0,w,c
 17330  010294  220A               	addwfc	(btemp+9)^0,f,c
 17331  010296  500A               	movf	(btemp+9)^0,w,c
 17332  010298  E106               	bnz	u11460
 17333  01029A  0E1A               	movlw	26
 17334  01029C  5C09               	subwf	(btemp+8)^0,w,c
 17335  01029E  B0D8               	btfsc	status,0,c
 17336  0102A0  D002               	goto	u11460
 17337  0102A2  0E01               	movlw	1
 17338  0102A4  D001               	goto	u11470
 17339  0102A6                     u11460:
 17340  0102A6  0E00               	movlw	0
 17341  0102A8                     u11470:
 17342  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17343  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17344                           
 17345                           ;stkvar	_efgtoa$5845 @ sp[(-56)+6]
 17346  0102AC  0ECE               	movlw	-50
 17347  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17348  0102B4  0ECF               	movlw	-49
 17349  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17350                           
 17351                           ;stkvar	_efgtoa$5845 @ sp[(-56)+6]
 17352  0102BC  0ECE               	movlw	-50
 17353  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17354  0102C4  0ECF               	movlw	-49
 17355  0102C6  50E3               	movf	plusw1,w,c
 17356  0102C8  1001               	iorwf	btemp^0,w,c
 17357  0102CA  B4D8               	btfsc	status,2,c
 17358  0102CC  D017               	goto	l12426
 17359                           
 17360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17361  0102CE  0EDA               	movlw	low STR_72
 17362  0102D0  6EE6               	movwf	postinc1,c
 17363  0102D2  0EFF               	movlw	high STR_72
 17364  0102D4  6EE6               	movwf	postinc1,c
 17365                           
 17366                           ;stkvar	_n @ sp[(-58)+32]
 17367  0102D6  0E97               	movlw	low _dbuf
 17368  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17369  0102DA  0E02               	movlw	high _dbuf
 17370  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17371  0102DE  0EE6               	movlw	-26
 17372  0102E0  50E3               	movf	plusw1,w,c
 17373  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17374  0102E4  0EE7               	movlw	-25
 17375  0102E6  50E3               	movf	plusw1,w,c
 17376  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17377  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17378  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17379  0102F6  ECC9  F0D2         	call	_strcpy	;wreg free
 17380                           
 17381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17382  0102FA  D78D               	goto	l12410
 17383  0102FC                     l12426:
 17384                           
 17385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17386  0102FC  0EE2               	movlw	low STR_73
 17387  0102FE  6EE6               	movwf	postinc1,c
 17388  010300  0EFF               	movlw	high STR_73
 17389  010302  6EE6               	movwf	postinc1,c
 17390                           
 17391                           ;stkvar	_n @ sp[(-58)+32]
 17392  010304  0E97               	movlw	low _dbuf
 17393  010306  6E0B               	movwf	(btemp+10)^0,c
 17394  010308  0E02               	movlw	high _dbuf
 17395  01030A  6E0C               	movwf	(btemp+11)^0,c
 17396  01030C  0EE6               	movlw	-26
 17397  01030E  50E3               	movf	plusw1,w,c
 17398  010310  260B               	addwf	(btemp+10)^0,f,c
 17399  010312  0EE7               	movlw	-25
 17400  010314  50E3               	movf	plusw1,w,c
 17401  010316  220C               	addwfc	(btemp+11)^0,f,c
 17402  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17403  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17404  010324  ECC9  F0D2         	call	_strcpy	;wreg free
 17405  010328  D776               	goto	l12410
 17406  01032A                     l12434:
 17407                           
 17408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17409  01032A  0E00               	movlw	0
 17410  01032C  6E09               	movwf	(btemp+8)^0,c
 17411  01032E  0E00               	movlw	0
 17412  010330  6E0A               	movwf	(btemp+9)^0,c
 17413  010332  0E80               	movlw	128
 17414  010334  6E0B               	movwf	(btemp+10)^0,c
 17415  010336  0E3F               	movlw	63
 17416  010338  6E0C               	movwf	(btemp+11)^0,c
 17417                           
 17418                           ;stkvar	_u @ sp[(-56)+12]
 17419  01033A  0ED4               	movlw	-44
 17420  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17421  010342  0ED5               	movlw	-43
 17422  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17423  01034A  0ED6               	movlw	-42
 17424  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17425  010352  0ED7               	movlw	-41
 17426  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17427                           
 17428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17429                           ;stkvar	_e @ sp[(-56)+34]
 17430  01035A  0EEA               	movlw	-22
 17431  01035C  6AE3               	clrf	plusw1,c
 17432  01035E  0EEB               	movlw	-21
 17433  010360  6AE3               	clrf	plusw1,c
 17434                           
 17435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17436  010362  0E00               	movlw	0
 17437  010364  6EE6               	movwf	postinc1,c
 17438  010366  0E00               	movlw	0
 17439  010368  6EE6               	movwf	postinc1,c
 17440  01036A  0E00               	movlw	0
 17441  01036C  6EE6               	movwf	postinc1,c
 17442  01036E  0E00               	movlw	0
 17443  010370  6EE6               	movwf	postinc1,c
 17444                           
 17445                           ;stkvar	_g @ sp[(-60)+16]
 17446  010372  0ED4               	movlw	-44
 17447  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17448  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17449  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17450  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17451  01038C  EC9B  F0D3         	call	___fleq	;wreg free
 17452  010390  A001               	btfss	btemp& (0+255),0,c
 17453  010392  D039               	goto	l12446
 17454  010394  D0BC               	goto	u11510
 17455  010396                     l12442:
 17456                           
 17457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17458  010396  0E00               	movlw	0
 17459  010398  6EE6               	movwf	postinc1,c
 17460  01039A  0E00               	movlw	0
 17461  01039C  6EE6               	movwf	postinc1,c
 17462  01039E  0E20               	movlw	32
 17463  0103A0  6EE6               	movwf	postinc1,c
 17464  0103A2  0E41               	movlw	65
 17465  0103A4  6EE6               	movwf	postinc1,c
 17466                           
 17467                           ;stkvar	_u @ sp[(-60)+12]
 17468  0103A6  0ED0               	movlw	-48
 17469  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17470  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17471  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17472  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17473  0103C0  EC20  F09F         	call	___flmul	;wreg free
 17474                           
 17475                           ;stkvar	_u @ sp[(-56)+12]
 17476  0103C4  0ED4               	movlw	-44
 17477  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17478  0103CC  0ED5               	movlw	-43
 17479  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17480  0103D4  0ED6               	movlw	-42
 17481  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17482  0103DC  0ED7               	movlw	-41
 17483  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17484                           
 17485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17486                           ;stkvar	_e @ sp[(-56)+34]
 17487  0103E4  0EEA               	movlw	-22
 17488  0103E6  50E3               	movf	plusw1,w,c
 17489  0103E8  0F01               	addlw	1
 17490  0103EA  6E01               	movwf	btemp^0,c
 17491  0103EC  0EEA               	movlw	-22
 17492  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17493  0103F4  6A01               	clrf	btemp^0,c
 17494  0103F6  0EEB               	movlw	-21
 17495  0103F8  50E3               	movf	plusw1,w,c
 17496  0103FA  2001               	addwfc	btemp^0,w,c
 17497  0103FC  6E01               	movwf	btemp^0,c
 17498  0103FE  0EEB               	movlw	-21
 17499  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17500  010406                     l12446:
 17501                           
 17502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17503  010406  0E00               	movlw	0
 17504  010408  6EE6               	movwf	postinc1,c
 17505  01040A  0E00               	movlw	0
 17506  01040C  6EE6               	movwf	postinc1,c
 17507  01040E  0E20               	movlw	32
 17508  010410  6EE6               	movwf	postinc1,c
 17509  010412  0E41               	movlw	65
 17510  010414  6EE6               	movwf	postinc1,c
 17511                           
 17512                           ;stkvar	_u @ sp[(-60)+12]
 17513  010416  0ED0               	movlw	-48
 17514  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17515  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17516  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17517  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17518  010430  EC20  F09F         	call	___flmul	;wreg free
 17519  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17520  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17521  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17522  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17523                           
 17524                           ;stkvar	_g @ sp[(-60)+16]
 17525  01044C  0ED4               	movlw	-44
 17526  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17527  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17528  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17529  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17530  010466  EC39  F0C9         	call	___flge	;wreg free
 17531  01046A  A001               	btfss	btemp& (0+255),0,c
 17532  01046C  D032               	goto	l12452
 17533  01046E  D793               	goto	l12442
 17534  010470                     l12448:
 17535                           
 17536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17537  010470  0E00               	movlw	0
 17538  010472  6EE6               	movwf	postinc1,c
 17539  010474  0E00               	movlw	0
 17540  010476  6EE6               	movwf	postinc1,c
 17541  010478  0E20               	movlw	32
 17542  01047A  6EE6               	movwf	postinc1,c
 17543  01047C  0E41               	movlw	65
 17544  01047E  6EE6               	movwf	postinc1,c
 17545                           
 17546                           ;stkvar	_u @ sp[(-60)+12]
 17547  010480  0ED0               	movlw	-48
 17548  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17549  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17550  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17551  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17552  01049A  EC13  F0A7         	call	___fldiv	;wreg free
 17553                           
 17554                           ;stkvar	_u @ sp[(-56)+12]
 17555  01049E  0ED4               	movlw	-44
 17556  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17557  0104A6  0ED5               	movlw	-43
 17558  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17559  0104AE  0ED6               	movlw	-42
 17560  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17561  0104B6  0ED7               	movlw	-41
 17562  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17563                           
 17564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17565                           ;stkvar	_e @ sp[(-56)+34]
 17566  0104BE  50E1               	movf	fsr1l,w,c
 17567  0104C0  0FEA               	addlw	-22
 17568  0104C2  6ED9               	movwf	fsr2l,c
 17569  0104C4  50E2               	movf	fsr1h,w,c
 17570  0104C6  6EDA               	movwf	fsr2h,c
 17571  0104C8  0EFF               	movlw	255
 17572  0104CA  22DA               	addwfc	fsr2h,f,c
 17573  0104CC  06DE               	decf	postinc2,f,c
 17574  0104CE  0E00               	movlw	0
 17575  0104D0  5ADD               	subwfb	postdec2,f,c
 17576  0104D2                     l12452:
 17577                           
 17578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17579                           ;stkvar	_u @ sp[(-56)+12]
 17580  0104D2  0ED4               	movlw	-44
 17581  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17582  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17583  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17584  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17585                           
 17586                           ;stkvar	_g @ sp[(-60)+16]
 17587  0104EC  0ED4               	movlw	-44
 17588  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17589  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17590  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17591  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17592  010506  EC39  F0C9         	call	___flge	;wreg free
 17593  01050A  A001               	btfss	btemp& (0+255),0,c
 17594  01050C  D7B1               	goto	l12448
 17595  01050E                     u11510:
 17596                           
 17597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17598                           ;stkvar	_c @ sp[(-56)+-7]
 17599  01050E  0EC1               	movlw	-63
 17600  010510  50E3               	movf	plusw1,w,c
 17601  010512  6EE6               	movwf	postinc1,c
 17602  010514  0E00               	movlw	0
 17603  010516  6EE6               	movwf	postinc1,c
 17604  010518  EC6F  F0D8         	call	_tolower	;wreg free
 17605                           
 17606                           ;stkvar	_mode @ sp[(-56)+54]
 17607  01051C  0EFE               	movlw	-2
 17608  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17609                           
 17610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17611                           ;stkvar	_mode @ sp[(-56)+54]
 17612                           ;stkvar	_nmode @ sp[(-56)+55]
 17613  010524  0EFE               	movlw	-2
 17614  010526  006F FF8C  F001    	movff	plusw1,btemp
 17615  01052C  0EFF               	movlw	-1
 17616  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17617                           
 17618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17619                           ;stkvar	_mode @ sp[(-56)+54]
 17620  010534  0EFE               	movlw	-2
 17621  010536  006F FF8C  F001    	movff	plusw1,btemp
 17622  01053C  0E67               	movlw	103
 17623  01053E  1801               	xorwf	btemp^0,w,c
 17624  010540  A4D8               	btfss	status,2,c
 17625  010542  D025               	goto	l12470
 17626                           
 17627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17628  010544  503C               	movf	_prec^0,w,c
 17629  010546  103D               	iorwf	(_prec+1)^0,w,c
 17630  010548  A4D8               	btfss	status,2,c
 17631  01054A  D004               	goto	l12464
 17632                           
 17633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17634  01054C  0E00               	movlw	0
 17635  01054E  6E3D               	movwf	(_prec+1)^0,c
 17636  010550  0E01               	movlw	1
 17637  010552  6E3C               	movwf	_prec^0,c
 17638  010554                     l12464:
 17639                           
 17640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17641  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17642  010556  D005               	goto	u11540
 17643  010558  503D               	movf	(_prec+1)^0,w,c
 17644  01055A  E110               	bnz	l12468
 17645  01055C  043C               	decf	_prec^0,w,c
 17646  01055E  B0D8               	btfsc	status,0,c
 17647  010560  D00D               	goto	l12468
 17648  010562                     u11540:
 17649  010562  0E06               	movlw	6
 17650  010564  6E0B               	movwf	(btemp+10)^0,c
 17651  010566  0E00               	movlw	0
 17652  010568  6E0C               	movwf	(btemp+11)^0,c
 17653                           
 17654                           ;stkvar	_p @ sp[(-56)+40]
 17655  01056A  0EF0               	movlw	-16
 17656  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17657  010572  0EF1               	movlw	-15
 17658  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17659  01057A  D00C               	goto	l12476
 17660  01057C                     l12468:
 17661                           
 17662                           ;stkvar	_p @ sp[(-56)+40]
 17663  01057C  0EF0               	movlw	-16
 17664  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17665  010584  0EF1               	movlw	-15
 17666  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17667  01058C  D003               	goto	l12476
 17668  01058E                     l12470:
 17669                           
 17670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17671  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17672  010590  D7F5               	goto	l12468
 17673  010592  D7E7               	goto	u11540
 17674  010594                     l12476:
 17675                           
 17676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17677                           ;stkvar	_mode @ sp[(-56)+54]
 17678  010594  0EFE               	movlw	-2
 17679  010596  006F FF8C  F001    	movff	plusw1,btemp
 17680  01059C  0E67               	movlw	103
 17681  01059E  1801               	xorwf	btemp^0,w,c
 17682  0105A0  A4D8               	btfss	status,2,c
 17683  0105A2  D02F               	goto	l12486
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17686                           ;stkvar	_e @ sp[(-56)+34]
 17687  0105A4  0EEB               	movlw	-21
 17688  0105A6  AEE3               	btfss	plusw1,7,c
 17689  0105A8  D00E               	goto	u11570
 17690  0105AA  0EEA               	movlw	-22
 17691  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17692  0105B2  0EFC               	movlw	252
 17693  0105B4  5E01               	subwf	btemp^0,f,c
 17694  0105B6  0EEB               	movlw	-21
 17695  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17696  0105BE  0EFF               	movlw	255
 17697  0105C0  5A01               	subwfb	btemp^0,f,c
 17698  0105C2  A0D8               	btfss	status,0,c
 17699  0105C4  D018               	goto	l12484
 17700  0105C6                     u11570:
 17701                           
 17702                           ;stkvar	_e @ sp[(-56)+34]
 17703                           ;stkvar	_p @ sp[(-56)+40]
 17704  0105C6  0EF0               	movlw	-16
 17705  0105C8  50E3               	movf	plusw1,w,c
 17706  0105CA  0FFF               	addlw	255
 17707  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17708  0105CE  0EF1               	movlw	-15
 17709  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17710  0105D6  0EFF               	movlw	255
 17711  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17712  0105DA  0EEA               	movlw	-22
 17713  0105DC  50E3               	movf	plusw1,w,c
 17714  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17715  0105E0  500C               	movf	(btemp+11)^0,w,c
 17716  0105E2  0A80               	xorlw	128
 17717  0105E4  6E01               	movwf	btemp^0,c
 17718  0105E6  0EEB               	movlw	-21
 17719  0105E8  50E3               	movf	plusw1,w,c
 17720  0105EA  0A80               	xorlw	128
 17721  0105EC  5801               	subwfb	btemp^0,w,c
 17722  0105EE  A0D8               	btfss	status,0,c
 17723  0105F0  D002               	goto	l12484
 17724                           
 17725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17726  0105F2  0E66               	movlw	102
 17727  0105F4  D001               	goto	L18
 17728  0105F6                     l12484:
 17729                           
 17730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17731  0105F6  0E65               	movlw	101
 17732  0105F8                     L18:
 17733  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17734                           
 17735                           ;stkvar	_nmode @ sp[(-56)+55]
 17736  0105FA  0EFF               	movlw	-1
 17737  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17738  010602                     l12486:
 17739                           
 17740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17741                           ;stkvar	_p @ sp[(-56)+40]
 17742                           ;stkvar	_m @ sp[(-56)+48]
 17743  010602  0EF0               	movlw	-16
 17744  010604  006F FF8C  F001    	movff	plusw1,btemp
 17745  01060A  0EF8               	movlw	-8
 17746  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17747  010612  0EF1               	movlw	-15
 17748  010614  006F FF8C  F001    	movff	plusw1,btemp
 17749  01061A  0EF9               	movlw	-7
 17750  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17751                           
 17752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17753                           ;stkvar	_mode @ sp[(-56)+54]
 17754  010622  0EFE               	movlw	-2
 17755  010624  006F FF8C  F001    	movff	plusw1,btemp
 17756  01062A  0E67               	movlw	103
 17757  01062C  1801               	xorwf	btemp^0,w,c
 17758  01062E  A4D8               	btfss	status,2,c
 17759  010630  D00B               	goto	u11610
 17760                           
 17761                           ;stkvar	_nmode @ sp[(-56)+55]
 17762  010632  0EFF               	movlw	-1
 17763  010634  006F FF8C  F001    	movff	plusw1,btemp
 17764  01063A  0E66               	movlw	102
 17765  01063C  1801               	xorwf	btemp^0,w,c
 17766  01063E  A4D8               	btfss	status,2,c
 17767  010640  D014               	goto	l2337
 17768                           
 17769                           ;stkvar	_e @ sp[(-56)+34]
 17770  010642  0EEB               	movlw	-21
 17771  010644  AEE3               	btfss	plusw1,7,c
 17772  010646  D011               	goto	l2337
 17773  010648                     u11610:
 17774                           
 17775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17776                           ;stkvar	_m @ sp[(-56)+48]
 17777  010648  0EF8               	movlw	-8
 17778  01064A  50E3               	movf	plusw1,w,c
 17779  01064C  0F01               	addlw	1
 17780  01064E  6E01               	movwf	btemp^0,c
 17781  010650  0EF8               	movlw	-8
 17782  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17783  010658  6A01               	clrf	btemp^0,c
 17784  01065A  0EF9               	movlw	-7
 17785  01065C  50E3               	movf	plusw1,w,c
 17786  01065E  2001               	addwfc	btemp^0,w,c
 17787  010660  6E01               	movwf	btemp^0,c
 17788  010662  0EF9               	movlw	-7
 17789  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17790  01066A                     l2337:
 17791                           
 17792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17793                           ;stkvar	_nmode @ sp[(-56)+55]
 17794  01066A  0EFF               	movlw	-1
 17795  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17796  010672  0E66               	movlw	102
 17797  010674  1801               	xorwf	btemp^0,w,c
 17798  010676  A4D8               	btfss	status,2,c
 17799  010678  D03B               	goto	l12506
 17800                           
 17801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17802                           ;stkvar	_e @ sp[(-56)+34]
 17803  01067A  0EEB               	movlw	-21
 17804  01067C  AEE3               	btfss	plusw1,7,c
 17805  01067E  D01C               	goto	l12502
 17806                           
 17807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17808  010680  0E00               	movlw	0
 17809  010682  6E09               	movwf	(btemp+8)^0,c
 17810  010684  0E00               	movlw	0
 17811  010686  6E0A               	movwf	(btemp+9)^0,c
 17812  010688  0E80               	movlw	128
 17813  01068A  6E0B               	movwf	(btemp+10)^0,c
 17814  01068C  0E3F               	movlw	63
 17815  01068E  6E0C               	movwf	(btemp+11)^0,c
 17816                           
 17817                           ;stkvar	_u @ sp[(-56)+12]
 17818  010690  0ED4               	movlw	-44
 17819  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17820  010698  0ED5               	movlw	-43
 17821  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17822  0106A0  0ED6               	movlw	-42
 17823  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17824  0106A8  0ED7               	movlw	-41
 17825  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17826                           
 17827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17828                           ;stkvar	_e @ sp[(-56)+34]
 17829  0106B0  0EEA               	movlw	-22
 17830  0106B2  6AE3               	clrf	plusw1,c
 17831  0106B4  0EEB               	movlw	-21
 17832  0106B6  6AE3               	clrf	plusw1,c
 17833  0106B8                     l12502:
 17834                           
 17835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17836                           ;stkvar	_mode @ sp[(-56)+54]
 17837  0106B8  0EFE               	movlw	-2
 17838  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17839  0106C0  0E67               	movlw	103
 17840  0106C2  1801               	xorwf	btemp^0,w,c
 17841  0106C4  B4D8               	btfsc	status,2,c
 17842  0106C6  D014               	goto	l12506
 17843                           
 17844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17845                           ;stkvar	_e @ sp[(-56)+34]
 17846                           ;stkvar	_m @ sp[(-56)+48]
 17847  0106C8  0EF8               	movlw	-8
 17848  0106CA  50E3               	movf	plusw1,w,c
 17849  0106CC  6E01               	movwf	btemp^0,c
 17850  0106CE  0EEA               	movlw	-22
 17851  0106D0  50E3               	movf	plusw1,w,c
 17852  0106D2  2601               	addwf	btemp^0,f,c
 17853  0106D4  0EF8               	movlw	-8
 17854  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17855  0106DC  0EF9               	movlw	-7
 17856  0106DE  50E3               	movf	plusw1,w,c
 17857  0106E0  6E01               	movwf	btemp^0,c
 17858  0106E2  0EEB               	movlw	-21
 17859  0106E4  50E3               	movf	plusw1,w,c
 17860  0106E6  2201               	addwfc	btemp^0,f,c
 17861  0106E8  0EF9               	movlw	-7
 17862  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17863  0106F0                     l12506:
 17864                           
 17865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17866                           ;stkvar	_i @ sp[(-56)+36]
 17867  0106F0  0EEC               	movlw	-20
 17868  0106F2  6AE3               	clrf	plusw1,c
 17869  0106F4  0EED               	movlw	-19
 17870  0106F6  6AE3               	clrf	plusw1,c
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17873                           ;stkvar	_g @ sp[(-56)+16]
 17874  0106F8  0ED8               	movlw	-40
 17875  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17876  010700  0ED9               	movlw	-39
 17877  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17878  010708  0EDA               	movlw	-38
 17879  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17880  010710  0EDB               	movlw	-37
 17881  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17882                           
 17883                           ;stkvar	_h @ sp[(-56)+24]
 17884  010718  0EE0               	movlw	-32
 17885  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17886  010720  0EE1               	movlw	-31
 17887  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17888  010728  0EE2               	movlw	-30
 17889  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17890  010730  0EE3               	movlw	-29
 17891  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17892                           
 17893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17894                           ;stkvar	_u @ sp[(-56)+12]
 17895  010738  0ED4               	movlw	-44
 17896  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17897  010740  0ED5               	movlw	-43
 17898  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17899  010748  0ED6               	movlw	-42
 17900  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17901  010750  0ED7               	movlw	-41
 17902  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17903                           
 17904                           ;stkvar	_ou @ sp[(-56)+28]
 17905  010758  0EE4               	movlw	-28
 17906  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17907  010760  0EE5               	movlw	-27
 17908  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17909  010768  0EE6               	movlw	-26
 17910  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17911  010770  0EE7               	movlw	-25
 17912  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17915  010778  D0D6               	goto	l12522
 17916  01077A                     l12512:
 17917                           
 17918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17919                           ;stkvar	_u @ sp[(-56)+12]
 17920  01077A  0ED4               	movlw	-44
 17921  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17922  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17924  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17925                           
 17926                           ;stkvar	_h @ sp[(-60)+24]
 17927  010794  0EDC               	movlw	-36
 17928  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17929  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17930  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17931  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17932  0107AE  EC13  F0A7         	call	___fldiv	;wreg free
 17933  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17934  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17935  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17936  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17937  0107CA  EC71  F0B2         	call	_floorf	;wreg free
 17938                           
 17939                           ;stkvar	_l @ sp[(-56)+20]
 17940  0107CE  0EDC               	movlw	-36
 17941  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17942  0107D6  0EDD               	movlw	-35
 17943  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17944  0107DE  0EDE               	movlw	-34
 17945  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17946  0107E6  0EDF               	movlw	-33
 17947  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17948                           
 17949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17950                           ;stkvar	_l @ sp[(-56)+20]
 17951  0107EE  0EDC               	movlw	-36
 17952  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17953  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17954  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17955  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17956  010808  EC80  F0C8         	call	___fltol	;wreg free
 17957  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17958  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17959                           
 17960                           ;stkvar	_d @ sp[(-56)+44]
 17961  010818  0EF4               	movlw	-12
 17962  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17963  010820  0EF5               	movlw	-11
 17964  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17965                           
 17966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17967                           ;stkvar	_u @ sp[(-56)+12]
 17968  010828  0ED4               	movlw	-44
 17969  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17970  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17971  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17972  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17973                           
 17974                           ;stkvar	_l @ sp[(-60)+20]
 17975  010842  0ED8               	movlw	-40
 17976  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17977  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17978  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17979  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17980  01085C  EC20  F09F         	call	___flmul	;wreg free
 17981  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17982  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17983  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17984  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17985                           
 17986                           ;stkvar	_h @ sp[(-60)+24]
 17987  010878  0EDC               	movlw	-36
 17988  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17989  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17990  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17991  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17992  010892  ECAA  F0DD         	call	___flsub	;wreg free
 17993                           
 17994                           ;stkvar	_h @ sp[(-56)+24]
 17995  010896  0EE0               	movlw	-32
 17996  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17997  01089E  0EE1               	movlw	-31
 17998  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17999  0108A6  0EE2               	movlw	-30
 18000  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18001  0108AE  0EE3               	movlw	-29
 18002  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 18003                           
 18004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 18005  0108B6  0E00               	movlw	0
 18006  0108B8  6EE6               	movwf	postinc1,c
 18007  0108BA  0E00               	movlw	0
 18008  0108BC  6EE6               	movwf	postinc1,c
 18009  0108BE  0E20               	movlw	32
 18010  0108C0  6EE6               	movwf	postinc1,c
 18011  0108C2  0E41               	movlw	65
 18012  0108C4  6EE6               	movwf	postinc1,c
 18013                           
 18014                           ;stkvar	_u @ sp[(-60)+12]
 18015  0108C6  0ED0               	movlw	-48
 18016  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18017  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18018  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18019  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18020  0108E0  EC13  F0A7         	call	___fldiv	;wreg free
 18021                           
 18022                           ;stkvar	_u @ sp[(-56)+12]
 18023  0108E4  0ED4               	movlw	-44
 18024  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 18025  0108EC  0ED5               	movlw	-43
 18026  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18027  0108F4  0ED6               	movlw	-42
 18028  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18029  0108FC  0ED7               	movlw	-41
 18030  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18031                           
 18032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 18033                           ;stkvar	_i @ sp[(-56)+36]
 18034  010904  0EEC               	movlw	-20
 18035  010906  50E3               	movf	plusw1,w,c
 18036  010908  0F01               	addlw	1
 18037  01090A  6E01               	movwf	btemp^0,c
 18038  01090C  0EEC               	movlw	-20
 18039  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 18040  010914  6A01               	clrf	btemp^0,c
 18041  010916  0EED               	movlw	-19
 18042  010918  50E3               	movf	plusw1,w,c
 18043  01091A  2001               	addwfc	btemp^0,w,c
 18044  01091C  6E01               	movwf	btemp^0,c
 18045  01091E  0EED               	movlw	-19
 18046  010920  0060  F007  FFE3   	movff	btemp,plusw1
 18047  010926                     l12522:
 18048                           
 18049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18050                           ;stkvar	_m @ sp[(-56)+48]
 18051                           ;stkvar	_i @ sp[(-56)+36]
 18052  010926  50E1               	movf	fsr1l,w,c
 18053  010928  0FEC               	addlw	-20
 18054  01092A  6ED9               	movwf	fsr2l,c
 18055  01092C  50E2               	movf	fsr1h,w,c
 18056  01092E  6EDA               	movwf	fsr2h,c
 18057  010930  0EFF               	movlw	255
 18058  010932  22DA               	addwfc	fsr2h,f,c
 18059  010934  0EF8               	movlw	-8
 18060  010936  50E3               	movf	plusw1,w,c
 18061  010938  5CDE               	subwf	postinc2,w,c
 18062  01093A  50DE               	movf	postinc2,w,c
 18063  01093C  0A80               	xorlw	128
 18064  01093E  6E01               	movwf	btemp^0,c
 18065  010940  0EF9               	movlw	-7
 18066  010942  50E3               	movf	plusw1,w,c
 18067  010944  0A80               	xorlw	128
 18068  010946  5801               	subwfb	btemp^0,w,c
 18069  010948  A0D8               	btfss	status,0,c
 18070  01094A  D717               	goto	l12512
 18071                           
 18072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 18073  01094C  0E00               	movlw	0
 18074  01094E  6EE6               	movwf	postinc1,c
 18075  010950  0E00               	movlw	0
 18076  010952  6EE6               	movwf	postinc1,c
 18077  010954  0EA0               	movlw	160
 18078  010956  6EE6               	movwf	postinc1,c
 18079  010958  0E40               	movlw	64
 18080  01095A  6EE6               	movwf	postinc1,c
 18081                           
 18082                           ;stkvar	_u @ sp[(-60)+12]
 18083  01095C  0ED0               	movlw	-48
 18084  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 18085  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 18086  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 18087  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 18088  010976  EC20  F09F         	call	___flmul	;wreg free
 18089                           
 18090                           ;stkvar	_l @ sp[(-56)+20]
 18091  01097A  0EDC               	movlw	-36
 18092  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 18093  010982  0EDD               	movlw	-35
 18094  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18095  01098A  0EDE               	movlw	-34
 18096  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18097  010992  0EDF               	movlw	-33
 18098  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 18099                           
 18100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 18101                           ;stkvar	_l @ sp[(-56)+20]
 18102  01099A  0EDC               	movlw	-36
 18103  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 18104  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18105  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18106  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18107                           
 18108                           ;stkvar	_h @ sp[(-60)+24]
 18109  0109B4  0EDC               	movlw	-36
 18110  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18111  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18112  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18113  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18114  0109CE  EC39  F0C9         	call	___flge	;wreg free
 18115  0109D2  A001               	btfss	btemp& (0+255),0,c
 18116  0109D4  D021               	goto	u11680
 18117                           
 18118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 18119                           ;stkvar	_l @ sp[(-56)+20]
 18120                           
 18121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 18122                           
 18123                           ;stkvar	_l @ sp[(-56)+20]
 18124                           
 18125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 18126  0109D6  0EDC               	movlw	-36
 18127  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18128  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18129  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18130  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18131                           
 18132                           ;stkvar	_h @ sp[(-60)+24]
 18133  0109F0  0EDC               	movlw	-36
 18134  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18135  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18136  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18137  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18138  010A0A  EC9B  F0D3         	call	___fleq	;wreg free
 18139  010A0E  A001               	btfss	btemp& (0+255),0,c
 18140  010A10  D01B               	goto	l12536
 18141                           
 18142                           ;stkvar	_d @ sp[(-56)+44]
 18143  010A12  0EF4               	movlw	-12
 18144  010A14  B0E3               	btfsc	plusw1,0,c
 18145  010A16  D018               	goto	l12536
 18146  010A18                     u11680:
 18147                           
 18148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 18149  010A18  0E00               	movlw	0
 18150  010A1A  6E09               	movwf	(btemp+8)^0,c
 18151  010A1C  0E00               	movlw	0
 18152  010A1E  6E0A               	movwf	(btemp+9)^0,c
 18153  010A20  0E00               	movlw	0
 18154  010A22  6E0B               	movwf	(btemp+10)^0,c
 18155  010A24  0E00               	movlw	0
 18156  010A26  6E0C               	movwf	(btemp+11)^0,c
 18157                           
 18158                           ;stkvar	_l @ sp[(-56)+20]
 18159  010A28  0EDC               	movlw	-36
 18160  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18161  010A30  0EDD               	movlw	-35
 18162  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18163  010A38  0EDE               	movlw	-34
 18164  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18165  010A40  0EDF               	movlw	-33
 18166  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 18167  010A48                     l12536:
 18168                           
 18169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 18170                           ;stkvar	_l @ sp[(-56)+20]
 18171  010A48  0EDC               	movlw	-36
 18172  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 18173  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 18174  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 18175  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18176                           
 18177                           ;stkvar	_g @ sp[(-60)+16]
 18178  010A62  0ED4               	movlw	-44
 18179  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 18180  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 18181  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 18182  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 18183  010A7C  EC35  F0A3         	call	___fladd	;wreg free
 18184                           
 18185                           ;stkvar	_h @ sp[(-56)+24]
 18186  010A80  0EE0               	movlw	-32
 18187  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 18188  010A88  0EE1               	movlw	-31
 18189  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18190  010A90  0EE2               	movlw	-30
 18191  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18192  010A98  0EE3               	movlw	-29
 18193  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 18194                           
 18195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 18196                           ;stkvar	_ou @ sp[(-56)+28]
 18197  010AA0  0EE4               	movlw	-28
 18198  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 18199  010AA8  0EE5               	movlw	-27
 18200  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18201  010AB0  0EE6               	movlw	-26
 18202  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18203  010AB8  0EE7               	movlw	-25
 18204  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18205                           
 18206                           ;stkvar	_u @ sp[(-56)+12]
 18207  010AC0  0ED4               	movlw	-44
 18208  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18209  010AC8  0ED5               	movlw	-43
 18210  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18211  010AD0  0ED6               	movlw	-42
 18212  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18213  010AD8  0ED7               	movlw	-41
 18214  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18215                           
 18216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 18217                           ;stkvar	_nmode @ sp[(-56)+55]
 18218  010AE0  0EFF               	movlw	-1
 18219  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 18220  010AE8  0E65               	movlw	101
 18221  010AEA  1801               	xorwf	btemp^0,w,c
 18222  010AEC  B4D8               	btfsc	status,2,c
 18223  010AEE  D011               	goto	l12544
 18224                           
 18225                           ;stkvar	_e @ sp[(-56)+34]
 18226                           ;stkvar	_ne @ sp[(-56)+46]
 18227  010AF0  0EEA               	movlw	-22
 18228  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 18229  010AF8  0EF6               	movlw	-10
 18230  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 18231  010B00  0EEB               	movlw	-21
 18232  010B02  006F FF8C  F001    	movff	plusw1,btemp
 18233  010B08  0EF7               	movlw	-9
 18234  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 18235  010B10  D004               	goto	l2352
 18236  010B12                     l12544:
 18237                           
 18238                           ;stkvar	_ne @ sp[(-56)+46]
 18239  010B12  0EF6               	movlw	-10
 18240  010B14  6AE3               	clrf	plusw1,c
 18241  010B16  0EF7               	movlw	-9
 18242  010B18  6AE3               	clrf	plusw1,c
 18243  010B1A                     l2352:
 18244                           
 18245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 18246                           ;stkvar	_pp @ sp[(-56)+50]
 18247  010B1A  0EFA               	movlw	-6
 18248  010B1C  6AE3               	clrf	plusw1,c
 18249  010B1E  0EFB               	movlw	-5
 18250  010B20  6AE3               	clrf	plusw1,c
 18251                           
 18252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 18253                           ;stkvar	_t @ sp[(-56)+52]
 18254  010B22  0EFC               	movlw	-4
 18255  010B24  6AE3               	clrf	plusw1,c
 18256  010B26  0EFD               	movlw	-3
 18257  010B28  6AE3               	clrf	plusw1,c
 18258                           
 18259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 18260                           ;stkvar	_i @ sp[(-56)+36]
 18261  010B2A  0EEC               	movlw	-20
 18262  010B2C  6AE3               	clrf	plusw1,c
 18263  010B2E  0EED               	movlw	-19
 18264  010B30  6AE3               	clrf	plusw1,c
 18265                           
 18266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18267  010B32  D1B7               	goto	l12596
 18268  010B34                     l12546:
 18269                           
 18270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 18271                           ;stkvar	_u @ sp[(-56)+12]
 18272  010B34  0ED4               	movlw	-44
 18273  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 18274  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18275  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 18276  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 18277                           
 18278                           ;stkvar	_h @ sp[(-60)+24]
 18279  010B4E  0EDC               	movlw	-36
 18280  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 18281  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 18282  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18283  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 18284  010B68  EC13  F0A7         	call	___fldiv	;wreg free
 18285  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 18286  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18287  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18288  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 18289  010B84  EC71  F0B2         	call	_floorf	;wreg free
 18290                           
 18291                           ;stkvar	_l @ sp[(-56)+20]
 18292  010B88  0EDC               	movlw	-36
 18293  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 18294  010B90  0EDD               	movlw	-35
 18295  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18296  010B98  0EDE               	movlw	-34
 18297  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18298  010BA0  0EDF               	movlw	-33
 18299  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 18300                           
 18301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 18302                           ;stkvar	_l @ sp[(-56)+20]
 18303  010BA8  0EDC               	movlw	-36
 18304  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 18305  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 18306  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 18307  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 18308  010BC2  EC80  F0C8         	call	___fltol	;wreg free
 18309  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 18310  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 18311                           
 18312                           ;stkvar	_d @ sp[(-56)+44]
 18313  010BD2  0EF4               	movlw	-12
 18314  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18315  010BDA  0EF5               	movlw	-11
 18316  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18317                           
 18318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 18319  010BE2  B83E               	btfsc	_flags^0,4,c
 18320  010BE4  D026               	goto	l12560
 18321                           
 18322                           ;stkvar	_d @ sp[(-56)+44]
 18323  010BE6  0EF4               	movlw	-12
 18324  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 18325  010BEE  0EF5               	movlw	-11
 18326  010BF0  50E3               	movf	plusw1,w,c
 18327  010BF2  1001               	iorwf	btemp^0,w,c
 18328  010BF4  A4D8               	btfss	status,2,c
 18329  010BF6  D01D               	goto	l12560
 18330                           
 18331                           ;stkvar	_mode @ sp[(-56)+54]
 18332  010BF8  0EFE               	movlw	-2
 18333  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 18334  010C00  0E67               	movlw	103
 18335  010C02  1801               	xorwf	btemp^0,w,c
 18336  010C04  A4D8               	btfss	status,2,c
 18337  010C06  D015               	goto	l12560
 18338                           
 18339                           ;stkvar	_ne @ sp[(-56)+46]
 18340  010C08  0EF7               	movlw	-9
 18341  010C0A  AEE3               	btfss	plusw1,7,c
 18342  010C0C  D012               	goto	l12560
 18343                           
 18344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18345                           ;stkvar	_t @ sp[(-56)+52]
 18346  010C0E  0EFC               	movlw	-4
 18347  010C10  50E3               	movf	plusw1,w,c
 18348  010C12  0F01               	addlw	1
 18349  010C14  6E01               	movwf	btemp^0,c
 18350  010C16  0EFC               	movlw	-4
 18351  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18352  010C1E  6A01               	clrf	btemp^0,c
 18353  010C20  0EFD               	movlw	-3
 18354  010C22  50E3               	movf	plusw1,w,c
 18355  010C24  2001               	addwfc	btemp^0,w,c
 18356  010C26  6E01               	movwf	btemp^0,c
 18357  010C28  0EFD               	movlw	-3
 18358  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18359                           
 18360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18361  010C30  D0AF               	goto	l12588
 18362  010C32                     l12560:
 18363                           
 18364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18365                           ;stkvar	_pp @ sp[(-56)+50]
 18366  010C32  0EFA               	movlw	-6
 18367  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18368  010C3A  0EFB               	movlw	-5
 18369  010C3C  50E3               	movf	plusw1,w,c
 18370  010C3E  1001               	iorwf	btemp^0,w,c
 18371  010C40  A4D8               	btfss	status,2,c
 18372  010C42  D070               	goto	l12580
 18373                           
 18374                           ;stkvar	_ne @ sp[(-56)+46]
 18375  010C44  0EF7               	movlw	-9
 18376  010C46  AEE3               	btfss	plusw1,7,c
 18377  010C48  D06D               	goto	l12580
 18378                           
 18379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18380                           ;stkvar	_n @ sp[(-56)+32]
 18381  010C4A  0EE8               	movlw	-24
 18382  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18383  010C52  0EE9               	movlw	-23
 18384  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18385  010C5A  0E97               	movlw	low _dbuf
 18386  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18387  010C5E  6ED9               	movwf	fsr2l,c
 18388  010C60  0E02               	movlw	high _dbuf
 18389  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18390  010C64  6EDA               	movwf	fsr2h,c
 18391  010C66  0E2E               	movlw	46
 18392  010C68  6EDF               	movwf	indf2,c
 18393                           
 18394                           ;stkvar	_n @ sp[(-56)+32]
 18395  010C6A  0EE8               	movlw	-24
 18396  010C6C  50E3               	movf	plusw1,w,c
 18397  010C6E  0F01               	addlw	1
 18398  010C70  6E01               	movwf	btemp^0,c
 18399  010C72  0EE8               	movlw	-24
 18400  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18401  010C7A  6A01               	clrf	btemp^0,c
 18402  010C7C  0EE9               	movlw	-23
 18403  010C7E  50E3               	movf	plusw1,w,c
 18404  010C80  2001               	addwfc	btemp^0,w,c
 18405  010C82  6E01               	movwf	btemp^0,c
 18406  010C84  0EE9               	movlw	-23
 18407  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18408                           
 18409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18410                           ;stkvar	_w @ sp[(-56)+38]
 18411  010C8C  50E1               	movf	fsr1l,w,c
 18412  010C8E  0FEE               	addlw	-18
 18413  010C90  6ED9               	movwf	fsr2l,c
 18414  010C92  50E2               	movf	fsr1h,w,c
 18415  010C94  6EDA               	movwf	fsr2h,c
 18416  010C96  0EFF               	movlw	255
 18417  010C98  22DA               	addwfc	fsr2h,f,c
 18418  010C9A  06DE               	decf	postinc2,f,c
 18419  010C9C  0E00               	movlw	0
 18420  010C9E  5ADD               	subwfb	postdec2,f,c
 18421                           
 18422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18423  010CA0  0E01               	movlw	1
 18424  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18425  010CA4  0E00               	movlw	0
 18426  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18427                           
 18428                           ;stkvar	_pp @ sp[(-56)+50]
 18429  010CA8  0EFA               	movlw	-6
 18430  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18431  010CB0  0EFB               	movlw	-5
 18432  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18433  010CB8  D035               	goto	l12580
 18434  010CBA                     l12572:
 18435                           
 18436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18437                           ;stkvar	_n @ sp[(-56)+32]
 18438  010CBA  0EE8               	movlw	-24
 18439  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18440  010CC2  0EE9               	movlw	-23
 18441  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18442  010CCA  0E97               	movlw	low _dbuf
 18443  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18444  010CCE  6ED9               	movwf	fsr2l,c
 18445  010CD0  0E02               	movlw	high _dbuf
 18446  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18447  010CD4  6EDA               	movwf	fsr2h,c
 18448  010CD6  0E30               	movlw	48
 18449  010CD8  6EDF               	movwf	indf2,c
 18450                           
 18451                           ;stkvar	_n @ sp[(-56)+32]
 18452  010CDA  0EE8               	movlw	-24
 18453  010CDC  50E3               	movf	plusw1,w,c
 18454  010CDE  0F01               	addlw	1
 18455  010CE0  6E01               	movwf	btemp^0,c
 18456  010CE2  0EE8               	movlw	-24
 18457  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18458  010CEA  6A01               	clrf	btemp^0,c
 18459  010CEC  0EE9               	movlw	-23
 18460  010CEE  50E3               	movf	plusw1,w,c
 18461  010CF0  2001               	addwfc	btemp^0,w,c
 18462  010CF2  6E01               	movwf	btemp^0,c
 18463  010CF4  0EE9               	movlw	-23
 18464  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18465                           
 18466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18467                           ;stkvar	_w @ sp[(-56)+38]
 18468  010CFC  50E1               	movf	fsr1l,w,c
 18469  010CFE  0FEE               	addlw	-18
 18470  010D00  6ED9               	movwf	fsr2l,c
 18471  010D02  50E2               	movf	fsr1h,w,c
 18472  010D04  6EDA               	movwf	fsr2h,c
 18473  010D06  0EFF               	movlw	255
 18474  010D08  22DA               	addwfc	fsr2h,f,c
 18475  010D0A  06DE               	decf	postinc2,f,c
 18476  010D0C  0E00               	movlw	0
 18477  010D0E  5ADD               	subwfb	postdec2,f,c
 18478                           
 18479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18480                           ;stkvar	_t @ sp[(-56)+52]
 18481  010D10  50E1               	movf	fsr1l,w,c
 18482  010D12  0FFC               	addlw	-4
 18483  010D14  6ED9               	movwf	fsr2l,c
 18484  010D16  50E2               	movf	fsr1h,w,c
 18485  010D18  6EDA               	movwf	fsr2h,c
 18486  010D1A  0EFF               	movlw	255
 18487  010D1C  22DA               	addwfc	fsr2h,f,c
 18488  010D1E  06DE               	decf	postinc2,f,c
 18489  010D20  0E00               	movlw	0
 18490  010D22  5ADD               	subwfb	postdec2,f,c
 18491  010D24                     l12580:
 18492                           
 18493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18494                           ;stkvar	_t @ sp[(-56)+52]
 18495  010D24  0EFC               	movlw	-4
 18496  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18497  010D2C  0EFD               	movlw	-3
 18498  010D2E  50E3               	movf	plusw1,w,c
 18499  010D30  1001               	iorwf	btemp^0,w,c
 18500  010D32  A4D8               	btfss	status,2,c
 18501  010D34  D7C2               	goto	l12572
 18502                           
 18503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18504                           ;stkvar	_n @ sp[(-56)+32]
 18505  010D36  0EE8               	movlw	-24
 18506  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18507  010D3E  0EE9               	movlw	-23
 18508  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18509  010D46  0E97               	movlw	low _dbuf
 18510  010D48  240B               	addwf	(btemp+10)^0,w,c
 18511  010D4A  6ED9               	movwf	fsr2l,c
 18512  010D4C  0E02               	movlw	high _dbuf
 18513  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18514  010D50  6EDA               	movwf	fsr2h,c
 18515                           
 18516                           ;stkvar	_d @ sp[(-56)+44]
 18517  010D52  0EF4               	movlw	-12
 18518  010D54  50E3               	movf	plusw1,w,c
 18519  010D56  0F30               	addlw	48
 18520  010D58  6EDF               	movwf	indf2,c
 18521                           
 18522                           ;stkvar	_n @ sp[(-56)+32]
 18523  010D5A  0EE8               	movlw	-24
 18524  010D5C  50E3               	movf	plusw1,w,c
 18525  010D5E  0F01               	addlw	1
 18526  010D60  6E01               	movwf	btemp^0,c
 18527  010D62  0EE8               	movlw	-24
 18528  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18529  010D6A  6A01               	clrf	btemp^0,c
 18530  010D6C  0EE9               	movlw	-23
 18531  010D6E  50E3               	movf	plusw1,w,c
 18532  010D70  2001               	addwfc	btemp^0,w,c
 18533  010D72  6E01               	movwf	btemp^0,c
 18534  010D74  0EE9               	movlw	-23
 18535  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18536                           
 18537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18538                           ;stkvar	_w @ sp[(-56)+38]
 18539  010D7C  50E1               	movf	fsr1l,w,c
 18540  010D7E  0FEE               	addlw	-18
 18541  010D80  6ED9               	movwf	fsr2l,c
 18542  010D82  50E2               	movf	fsr1h,w,c
 18543  010D84  6EDA               	movwf	fsr2h,c
 18544  010D86  0EFF               	movlw	255
 18545  010D88  22DA               	addwfc	fsr2h,f,c
 18546  010D8A  06DE               	decf	postinc2,f,c
 18547  010D8C  0E00               	movlw	0
 18548  010D8E  5ADD               	subwfb	postdec2,f,c
 18549  010D90                     l12588:
 18550                           
 18551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18552                           ;stkvar	_u @ sp[(-56)+12]
 18553  010D90  0ED4               	movlw	-44
 18554  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18555  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18556  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18557  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18558                           
 18559                           ;stkvar	_l @ sp[(-60)+20]
 18560  010DAA  0ED8               	movlw	-40
 18561  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18562  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18563  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18564  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18565  010DC4  EC20  F09F         	call	___flmul	;wreg free
 18566  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18567  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18568  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18569  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18570                           
 18571                           ;stkvar	_h @ sp[(-60)+24]
 18572  010DE0  0EDC               	movlw	-36
 18573  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18574  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18575  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18576  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18577  010DFA  ECAA  F0DD         	call	___flsub	;wreg free
 18578                           
 18579                           ;stkvar	_h @ sp[(-56)+24]
 18580  010DFE  0EE0               	movlw	-32
 18581  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18582  010E06  0EE1               	movlw	-31
 18583  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18584  010E0E  0EE2               	movlw	-30
 18585  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18586  010E16  0EE3               	movlw	-29
 18587  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18588                           
 18589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18590  010E1E  0E00               	movlw	0
 18591  010E20  6EE6               	movwf	postinc1,c
 18592  010E22  0E00               	movlw	0
 18593  010E24  6EE6               	movwf	postinc1,c
 18594  010E26  0E20               	movlw	32
 18595  010E28  6EE6               	movwf	postinc1,c
 18596  010E2A  0E41               	movlw	65
 18597  010E2C  6EE6               	movwf	postinc1,c
 18598                           
 18599                           ;stkvar	_u @ sp[(-60)+12]
 18600  010E2E  0ED0               	movlw	-48
 18601  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18602  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18603  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18604  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18605  010E48  EC13  F0A7         	call	___fldiv	;wreg free
 18606                           
 18607                           ;stkvar	_u @ sp[(-56)+12]
 18608  010E4C  0ED4               	movlw	-44
 18609  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18610  010E54  0ED5               	movlw	-43
 18611  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18612  010E5C  0ED6               	movlw	-42
 18613  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18614  010E64  0ED7               	movlw	-41
 18615  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18616                           
 18617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18618                           ;stkvar	_ne @ sp[(-56)+46]
 18619  010E6C  50E1               	movf	fsr1l,w,c
 18620  010E6E  0FF6               	addlw	-10
 18621  010E70  6ED9               	movwf	fsr2l,c
 18622  010E72  50E2               	movf	fsr1h,w,c
 18623  010E74  6EDA               	movwf	fsr2h,c
 18624  010E76  0EFF               	movlw	255
 18625  010E78  22DA               	addwfc	fsr2h,f,c
 18626  010E7A  06DE               	decf	postinc2,f,c
 18627  010E7C  0E00               	movlw	0
 18628  010E7E  5ADD               	subwfb	postdec2,f,c
 18629                           
 18630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18631                           ;stkvar	_i @ sp[(-56)+36]
 18632  010E80  0EEC               	movlw	-20
 18633  010E82  50E3               	movf	plusw1,w,c
 18634  010E84  0F01               	addlw	1
 18635  010E86  6E01               	movwf	btemp^0,c
 18636  010E88  0EEC               	movlw	-20
 18637  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18638  010E90  6A01               	clrf	btemp^0,c
 18639  010E92  0EED               	movlw	-19
 18640  010E94  50E3               	movf	plusw1,w,c
 18641  010E96  2001               	addwfc	btemp^0,w,c
 18642  010E98  6E01               	movwf	btemp^0,c
 18643  010E9A  0EED               	movlw	-19
 18644  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18645  010EA2                     l12596:
 18646                           
 18647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18648                           ;stkvar	_m @ sp[(-56)+48]
 18649                           ;stkvar	_i @ sp[(-56)+36]
 18650  010EA2  50E1               	movf	fsr1l,w,c
 18651  010EA4  0FEC               	addlw	-20
 18652  010EA6  6ED9               	movwf	fsr2l,c
 18653  010EA8  50E2               	movf	fsr1h,w,c
 18654  010EAA  6EDA               	movwf	fsr2h,c
 18655  010EAC  0EFF               	movlw	255
 18656  010EAE  22DA               	addwfc	fsr2h,f,c
 18657  010EB0  0EF8               	movlw	-8
 18658  010EB2  50E3               	movf	plusw1,w,c
 18659  010EB4  5CDE               	subwf	postinc2,w,c
 18660  010EB6  50DE               	movf	postinc2,w,c
 18661  010EB8  0A80               	xorlw	128
 18662  010EBA  6E01               	movwf	btemp^0,c
 18663  010EBC  0EF9               	movlw	-7
 18664  010EBE  50E3               	movf	plusw1,w,c
 18665  010EC0  0A80               	xorlw	128
 18666  010EC2  5801               	subwfb	btemp^0,w,c
 18667  010EC4  B0D8               	btfsc	status,0,c
 18668  010EC6  D00E               	goto	u11780
 18669                           
 18670                           ;stkvar	_n @ sp[(-56)+32]
 18671  010EC8  0EE9               	movlw	-23
 18672  010ECA  BEE3               	btfsc	plusw1,7,c
 18673  010ECC  D633               	goto	l12546
 18674  010ECE  0EE9               	movlw	-23
 18675  010ED0  50E3               	movf	plusw1,w,c
 18676  010ED2  E108               	bnz	u11780
 18677  010ED4  0EE8               	movlw	-24
 18678  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18679  010EDC  0E4B               	movlw	75
 18680  010EDE  5E01               	subwf	btemp^0,f,c
 18681  010EE0  A0D8               	btfss	status,0,c
 18682  010EE2  D628               	goto	l12546
 18683  010EE4                     u11780:
 18684                           
 18685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18686                           ;stkvar	_pp @ sp[(-56)+50]
 18687  010EE4  0EFA               	movlw	-6
 18688  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18689  010EEC  0EFB               	movlw	-5
 18690  010EEE  50E3               	movf	plusw1,w,c
 18691  010EF0  1001               	iorwf	btemp^0,w,c
 18692  010EF2  B4D8               	btfsc	status,2,c
 18693  010EF4  A83E               	btfss	_flags^0,4,c
 18694  010EF6  D021               	goto	l12608
 18695                           
 18696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18697                           ;stkvar	_n @ sp[(-56)+32]
 18698  010EF8  0EE8               	movlw	-24
 18699  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18700  010F00  0EE9               	movlw	-23
 18701  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18702  010F08  0E97               	movlw	low _dbuf
 18703  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18704  010F0C  6ED9               	movwf	fsr2l,c
 18705  010F0E  0E02               	movlw	high _dbuf
 18706  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18707  010F12  6EDA               	movwf	fsr2h,c
 18708  010F14  0E2E               	movlw	46
 18709  010F16  6EDF               	movwf	indf2,c
 18710                           
 18711                           ;stkvar	_n @ sp[(-56)+32]
 18712  010F18  0EE8               	movlw	-24
 18713  010F1A  50E3               	movf	plusw1,w,c
 18714  010F1C  0F01               	addlw	1
 18715  010F1E  6E01               	movwf	btemp^0,c
 18716  010F20  0EE8               	movlw	-24
 18717  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18718  010F28  6A01               	clrf	btemp^0,c
 18719  010F2A  0EE9               	movlw	-23
 18720  010F2C  50E3               	movf	plusw1,w,c
 18721  010F2E  2001               	addwfc	btemp^0,w,c
 18722  010F30  6E01               	movwf	btemp^0,c
 18723  010F32  0EE9               	movlw	-23
 18724  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18725  010F3A                     l12608:
 18726                           
 18727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18728                           ;stkvar	_n @ sp[(-56)+32]
 18729  010F3A  0EE8               	movlw	-24
 18730  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18731  010F42  0EE9               	movlw	-23
 18732  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18733  010F4A  0E97               	movlw	low _dbuf
 18734  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18735  010F4E  6ED9               	movwf	fsr2l,c
 18736  010F50  0E02               	movlw	high _dbuf
 18737  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18738  010F54  6EDA               	movwf	fsr2h,c
 18739  010F56  0E00               	movlw	0
 18740  010F58  6EDF               	movwf	indf2,c
 18741                           
 18742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18743                           ;stkvar	_nmode @ sp[(-56)+55]
 18744  010F5A  0EFF               	movlw	-1
 18745  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18746  010F62  0E65               	movlw	101
 18747  010F64  1801               	xorwf	btemp^0,w,c
 18748  010F66  A4D8               	btfss	status,2,c
 18749  010F68  EF16  F081         	goto	l12412
 18750                           
 18751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18752  010F6C  0E4F               	movlw	79
 18753  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18754  010F70  0E00               	movlw	0
 18755  010F72  6E0C               	movwf	(btemp+11)^0,c
 18756                           
 18757                           ;stkvar	_i @ sp[(-56)+36]
 18758  010F74  0EEC               	movlw	-20
 18759  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18760  010F7C  0EED               	movlw	-19
 18761  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18762                           
 18763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18764                           ;stkvar	_i @ sp[(-56)+36]
 18765  010F84  0EEC               	movlw	-20
 18766  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18767  010F8C  0EED               	movlw	-19
 18768  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18769  010F94  0E97               	movlw	low _dbuf
 18770  010F96  240B               	addwf	(btemp+10)^0,w,c
 18771  010F98  6ED9               	movwf	fsr2l,c
 18772  010F9A  0E02               	movlw	high _dbuf
 18773  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18774  010F9E  6EDA               	movwf	fsr2h,c
 18775  010FA0  0E00               	movlw	0
 18776  010FA2  6EDF               	movwf	indf2,c
 18777                           
 18778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18779                           ;stkvar	_sign @ sp[(-56)+42]
 18780  010FA4  0EF2               	movlw	-14
 18781  010FA6  6AE3               	clrf	plusw1,c
 18782  010FA8  0EF3               	movlw	-13
 18783  010FAA  6AE3               	clrf	plusw1,c
 18784                           
 18785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18786                           ;stkvar	_e @ sp[(-56)+34]
 18787  010FAC  0EEB               	movlw	-21
 18788  010FAE  AEE3               	btfss	plusw1,7,c
 18789  010FB0  D012               	goto	l12622
 18790                           
 18791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18792  010FB2  0E01               	movlw	1
 18793  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18794  010FB6  0E00               	movlw	0
 18795  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18796                           
 18797                           ;stkvar	_sign @ sp[(-56)+42]
 18798  010FBA  0EF2               	movlw	-14
 18799  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18800  010FC2  0EF3               	movlw	-13
 18801  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18802                           
 18803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18804                           ;stkvar	_e @ sp[(-56)+34]
 18805                           ;stkvar	_e @ sp[(-56)+34]
 18806  010FCA  0EEA               	movlw	-22
 18807  010FCC  6CE3               	negf	plusw1,c
 18808  010FCE  0EEB               	movlw	-21
 18809  010FD0  1EE3               	comf	plusw1,f,c
 18810  010FD2  B0D8               	btfsc	status,0,c
 18811  010FD4  2AE3               	incf	plusw1,f,c
 18812  010FD6                     l12622:
 18813                           
 18814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18815  010FD6  0E02               	movlw	2
 18816  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18817  010FDA  0E00               	movlw	0
 18818  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18819                           
 18820                           ;stkvar	_p @ sp[(-56)+40]
 18821  010FDE  0EF0               	movlw	-16
 18822  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18823  010FE6  0EF1               	movlw	-15
 18824  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18825                           
 18826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18827  010FEE  D051               	goto	l12634
 18828  010FF0                     l12624:
 18829                           
 18830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18831                           ;stkvar	_i @ sp[(-56)+36]
 18832  010FF0  50E1               	movf	fsr1l,w,c
 18833  010FF2  0FEC               	addlw	-20
 18834  010FF4  6ED9               	movwf	fsr2l,c
 18835  010FF6  50E2               	movf	fsr1h,w,c
 18836  010FF8  6EDA               	movwf	fsr2h,c
 18837  010FFA  0EFF               	movlw	255
 18838  010FFC  22DA               	addwfc	fsr2h,f,c
 18839  010FFE  06DE               	decf	postinc2,f,c
 18840  011000  0E00               	movlw	0
 18841  011002  5ADD               	subwfb	postdec2,f,c
 18842                           
 18843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18844                           ;stkvar	_i @ sp[(-56)+36]
 18845  011004  0EEC               	movlw	-20
 18846  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18847  01100C  0EED               	movlw	-19
 18848  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18849  011014  0E97               	movlw	low _dbuf
 18850  011016  240B               	addwf	(btemp+10)^0,w,c
 18851  011018  6ED9               	movwf	fsr2l,c
 18852  01101A  0E02               	movlw	high _dbuf
 18853  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18854  01101E  6EDA               	movwf	fsr2h,c
 18855  011020  0E0A               	movlw	10
 18856  011022  6EE6               	movwf	postinc1,c
 18857  011024  0E00               	movlw	0
 18858  011026  6EE6               	movwf	postinc1,c
 18859                           
 18860                           ;stkvar	_e @ sp[(-58)+34]
 18861  011028  0EE8               	movlw	-24
 18862  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18863  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18864  011036  ECD4  F0CE         	call	___awmod	;wreg free
 18865  01103A  5001               	movf	btemp^0,w,c
 18866  01103C  0F30               	addlw	48
 18867  01103E  6EDF               	movwf	indf2,c
 18868                           
 18869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18870  011040  0E0A               	movlw	10
 18871  011042  6EE6               	movwf	postinc1,c
 18872  011044  0E00               	movlw	0
 18873  011046  6EE6               	movwf	postinc1,c
 18874                           
 18875                           ;stkvar	_e @ sp[(-58)+34]
 18876  011048  0EE8               	movlw	-24
 18877  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18878  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18879  011056  EC9B  F0CA         	call	___awdiv	;wreg free
 18880                           
 18881                           ;stkvar	_e @ sp[(-56)+34]
 18882  01105A  0EEA               	movlw	-22
 18883  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18884  011062  0EEB               	movlw	-21
 18885  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18886                           
 18887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18888                           ;stkvar	_p @ sp[(-56)+40]
 18889  01106A  50E1               	movf	fsr1l,w,c
 18890  01106C  0FF0               	addlw	-16
 18891  01106E  6ED9               	movwf	fsr2l,c
 18892  011070  50E2               	movf	fsr1h,w,c
 18893  011072  6EDA               	movwf	fsr2h,c
 18894  011074  0EFF               	movlw	255
 18895  011076  22DA               	addwfc	fsr2h,f,c
 18896  011078  06DE               	decf	postinc2,f,c
 18897  01107A  0E00               	movlw	0
 18898  01107C  5ADD               	subwfb	postdec2,f,c
 18899                           
 18900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18901                           ;stkvar	_w @ sp[(-56)+38]
 18902  01107E  50E1               	movf	fsr1l,w,c
 18903  011080  0FEE               	addlw	-18
 18904  011082  6ED9               	movwf	fsr2l,c
 18905  011084  50E2               	movf	fsr1h,w,c
 18906  011086  6EDA               	movwf	fsr2h,c
 18907  011088  0EFF               	movlw	255
 18908  01108A  22DA               	addwfc	fsr2h,f,c
 18909  01108C  06DE               	decf	postinc2,f,c
 18910  01108E  0E00               	movlw	0
 18911  011090  5ADD               	subwfb	postdec2,f,c
 18912  011092                     l12634:
 18913                           
 18914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18915                           ;stkvar	_e @ sp[(-56)+34]
 18916  011092  0EEA               	movlw	-22
 18917  011094  006F FF8C  F001    	movff	plusw1,btemp
 18918  01109A  0EEB               	movlw	-21
 18919  01109C  50E3               	movf	plusw1,w,c
 18920  01109E  1001               	iorwf	btemp^0,w,c
 18921  0110A0  A4D8               	btfss	status,2,c
 18922  0110A2  D7A6               	goto	l12624
 18923                           
 18924                           ;stkvar	_p @ sp[(-56)+40]
 18925  0110A4  0EF1               	movlw	-15
 18926  0110A6  BEE3               	btfsc	plusw1,7,c
 18927  0110A8  D007               	goto	u11840
 18928  0110AA  0EF1               	movlw	-15
 18929  0110AC  50E3               	movf	plusw1,w,c
 18930  0110AE  E1A0               	bnz	l12624
 18931  0110B0  0EF0               	movlw	-16
 18932  0110B2  04E3               	decf	plusw1,w,c
 18933  0110B4  B0D8               	btfsc	status,0,c
 18934  0110B6  D79C               	goto	l12624
 18935  0110B8                     u11840:
 18936                           
 18937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18938                           ;stkvar	_i @ sp[(-56)+36]
 18939  0110B8  50E1               	movf	fsr1l,w,c
 18940  0110BA  0FEC               	addlw	-20
 18941  0110BC  6ED9               	movwf	fsr2l,c
 18942  0110BE  50E2               	movf	fsr1h,w,c
 18943  0110C0  6EDA               	movwf	fsr2h,c
 18944  0110C2  0EFF               	movlw	255
 18945  0110C4  22DA               	addwfc	fsr2h,f,c
 18946  0110C6  06DE               	decf	postinc2,f,c
 18947  0110C8  0E00               	movlw	0
 18948  0110CA  5ADD               	subwfb	postdec2,f,c
 18949                           
 18950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18951                           ;stkvar	_sign @ sp[(-56)+42]
 18952  0110CC  0EF2               	movlw	-14
 18953  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18954  0110D4  0EF3               	movlw	-13
 18955  0110D6  50E3               	movf	plusw1,w,c
 18956  0110D8  1001               	iorwf	btemp^0,w,c
 18957  0110DA  A4D8               	btfss	status,2,c
 18958  0110DC  D002               	goto	l12644
 18959  0110DE  0E2B               	movlw	43
 18960  0110E0  D001               	goto	L19
 18961  0110E2                     l12644:
 18962  0110E2  0E2D               	movlw	45
 18963  0110E4                     L19:
 18964  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18965  0110E6  0E00               	movlw	0
 18966  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18967                           
 18968                           ;stkvar	_efgtoa$5849 @ sp[(-56)+4]
 18969  0110EA  0ECC               	movlw	-52
 18970  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18971  0110F2  0ECD               	movlw	-51
 18972  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18973                           
 18974                           ;stkvar	_efgtoa$5849 @ sp[(-56)+4]
 18975                           ;stkvar	_i @ sp[(-56)+36]
 18976  0110FA  0EEC               	movlw	-20
 18977  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18978  011102  0EED               	movlw	-19
 18979  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18980  01110A  0E97               	movlw	low _dbuf
 18981  01110C  240B               	addwf	(btemp+10)^0,w,c
 18982  01110E  6ED9               	movwf	fsr2l,c
 18983  011110  0E02               	movlw	high _dbuf
 18984  011112  200C               	addwfc	(btemp+11)^0,w,c
 18985  011114  6EDA               	movwf	fsr2h,c
 18986  011116  0ECC               	movlw	-52
 18987  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18988                           
 18989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18990                           ;stkvar	_w @ sp[(-56)+38]
 18991  01111E  50E1               	movf	fsr1l,w,c
 18992  011120  0FEE               	addlw	-18
 18993  011122  6ED9               	movwf	fsr2l,c
 18994  011124  50E2               	movf	fsr1h,w,c
 18995  011126  6EDA               	movwf	fsr2h,c
 18996  011128  0EFF               	movlw	255
 18997  01112A  22DA               	addwfc	fsr2h,f,c
 18998  01112C  06DE               	decf	postinc2,f,c
 18999  01112E  0E00               	movlw	0
 19000  011130  5ADD               	subwfb	postdec2,f,c
 19001                           
 19002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 19003                           ;stkvar	_i @ sp[(-56)+36]
 19004  011132  50E1               	movf	fsr1l,w,c
 19005  011134  0FEC               	addlw	-20
 19006  011136  6ED9               	movwf	fsr2l,c
 19007  011138  50E2               	movf	fsr1h,w,c
 19008  01113A  6EDA               	movwf	fsr2h,c
 19009  01113C  0EFF               	movlw	255
 19010  01113E  22DA               	addwfc	fsr2h,f,c
 19011  011140  06DE               	decf	postinc2,f,c
 19012  011142  0E00               	movlw	0
 19013  011144  5ADD               	subwfb	postdec2,f,c
 19014  011146  0EBF               	movlw	191
 19015  011148  6E0B               	movwf	(btemp+10)^0,c
 19016  01114A  0EFF               	movlw	255
 19017  01114C  6E0C               	movwf	(btemp+11)^0,c
 19018                           
 19019                           ;stkvar	_c @ sp[(-56)+-7]
 19020  01114E  0EC1               	movlw	-63
 19021  011150  50E3               	movf	plusw1,w,c
 19022  011152  6E09               	movwf	(btemp+8)^0,c
 19023  011154  6A0A               	clrf	(btemp+9)^0,c
 19024  011156  500B               	movf	(btemp+10)^0,w,c
 19025  011158  2609               	addwf	(btemp+8)^0,f,c
 19026  01115A  500C               	movf	(btemp+11)^0,w,c
 19027  01115C  220A               	addwfc	(btemp+9)^0,f,c
 19028  01115E  500A               	movf	(btemp+9)^0,w,c
 19029  011160  E106               	bnz	u11860
 19030  011162  0E1A               	movlw	26
 19031  011164  5C09               	subwf	(btemp+8)^0,w,c
 19032  011166  B0D8               	btfsc	status,0,c
 19033  011168  D002               	goto	u11860
 19034  01116A  0E01               	movlw	1
 19035  01116C  D001               	goto	u11870
 19036  01116E                     u11860:
 19037  01116E  0E00               	movlw	0
 19038  011170                     u11870:
 19039  011170  6E0B               	movwf	(btemp+10)^0,c
 19040  011172  6A0C               	clrf	(btemp+11)^0,c
 19041                           
 19042                           ;stkvar	_efgtoa$5851 @ sp[(-56)+0]
 19043  011174  0EC8               	movlw	-56
 19044  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19045  01117C  0EC9               	movlw	-55
 19046  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19047                           
 19048                           ;stkvar	_efgtoa$5851 @ sp[(-56)+0]
 19049  011184  0EC8               	movlw	-56
 19050  011186  006F FF8C  F001    	movff	plusw1,btemp
 19051  01118C  0EC9               	movlw	-55
 19052  01118E  50E3               	movf	plusw1,w,c
 19053  011190  1001               	iorwf	btemp^0,w,c
 19054  011192  A4D8               	btfss	status,2,c
 19055  011194  D002               	goto	l12660
 19056  011196  0E65               	movlw	101
 19057  011198  D001               	goto	L20
 19058  01119A                     l12660:
 19059  01119A  0E45               	movlw	69
 19060  01119C                     L20:
 19061  01119C  6E0B               	movwf	(btemp+10)^0,c
 19062  01119E  0E00               	movlw	0
 19063  0111A0  6E0C               	movwf	(btemp+11)^0,c
 19064                           
 19065                           ;stkvar	_efgtoa$5850 @ sp[(-56)+2]
 19066  0111A2  0ECA               	movlw	-54
 19067  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19068  0111AA  0ECB               	movlw	-53
 19069  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19070                           
 19071                           ;stkvar	_efgtoa$5850 @ sp[(-56)+2]
 19072                           ;stkvar	_i @ sp[(-56)+36]
 19073  0111B2  0EEC               	movlw	-20
 19074  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19075  0111BA  0EED               	movlw	-19
 19076  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19077  0111C2  0E97               	movlw	low _dbuf
 19078  0111C4  240B               	addwf	(btemp+10)^0,w,c
 19079  0111C6  6ED9               	movwf	fsr2l,c
 19080  0111C8  0E02               	movlw	high _dbuf
 19081  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 19082  0111CC  6EDA               	movwf	fsr2h,c
 19083  0111CE  0ECA               	movlw	-54
 19084  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 19085                           
 19086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 19087                           ;stkvar	_w @ sp[(-56)+38]
 19088  0111D6  50E1               	movf	fsr1l,w,c
 19089  0111D8  0FEE               	addlw	-18
 19090  0111DA  6ED9               	movwf	fsr2l,c
 19091  0111DC  50E2               	movf	fsr1h,w,c
 19092  0111DE  6EDA               	movwf	fsr2h,c
 19093  0111E0  0EFF               	movlw	255
 19094  0111E2  22DA               	addwfc	fsr2h,f,c
 19095  0111E4  06DE               	decf	postinc2,f,c
 19096  0111E6  0E00               	movlw	0
 19097  0111E8  5ADD               	subwfb	postdec2,f,c
 19098                           
 19099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 19100                           ;stkvar	_i @ sp[(-56)+36]
 19101  0111EA  0EEC               	movlw	-20
 19102  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19103  0111F2  0EED               	movlw	-19
 19104  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19105  0111FA  0E97               	movlw	low _dbuf
 19106  0111FC  240B               	addwf	(btemp+10)^0,w,c
 19107  0111FE  6E09               	movwf	(btemp+8)^0,c
 19108  011200  0E02               	movlw	high _dbuf
 19109  011202  200C               	addwfc	(btemp+11)^0,w,c
 19110  011204  6E0A               	movwf	(btemp+9)^0,c
 19111  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 19112  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 19113                           
 19114                           ;stkvar	_n @ sp[(-58)+32]
 19115  011212  0E97               	movlw	low _dbuf
 19116  011214  6E0B               	movwf	(btemp+10)^0,c
 19117  011216  0E02               	movlw	high _dbuf
 19118  011218  6E0C               	movwf	(btemp+11)^0,c
 19119  01121A  0EE6               	movlw	-26
 19120  01121C  50E3               	movf	plusw1,w,c
 19121  01121E  260B               	addwf	(btemp+10)^0,f,c
 19122  011220  0EE7               	movlw	-25
 19123  011222  50E3               	movf	plusw1,w,c
 19124  011224  220C               	addwfc	(btemp+11)^0,f,c
 19125  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19126  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19127  011232  ECC9  F0D2         	call	_strcpy	;wreg free
 19128  011236  EF16  F081         	goto	l12412
 19129  01123A                     l2308:
 19130                           
 19131                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 19132  01123A  0EC1               	movlw	193
 19133  01123C  26E1               	addwf	fsr1l,f,c
 19134  01123E  0EFF               	movlw	255
 19135  011240  22E2               	addwfc	fsr1h,f,c
 19136  011242  0012               	return		;funcret
 19137  011244                     __end_of_efgtoa:
 19138                           	opt callstack 0
 19139                           
 19140 ;; *************** function _tolower *****************
 19141 ;; Defined at:
 19142 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 19143 ;; Parameters:    Size  Location     Type
 19144 ;;  c               2  [STACK] int 
 19145 ;; Auto vars:     Size  Location     Type
 19146 ;;		None
 19147 ;; Return value:  Size  Location     Type
 19148 ;;                  2  [STACK] int 
 19149 ;; Registers used:
 19150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 19151 ;; Tracked objects:
 19152 ;;		On entry : 0/0
 19153 ;;		On exit  : 0/0
 19154 ;;		Unchanged: 0/0
 19155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19160 ;;Total ram usage:        0 bytes
 19161 ;; Hardware stack levels used:    1
 19162 ;; Hardware stack levels required when called:   16
 19163 ;; This function calls:
 19164 ;;		_isupper
 19165 ;; This function is called by:
 19166 ;;		_efgtoa
 19167 ;;		_vfpfcnvrt
 19168 ;; This function uses a reentrant model
 19169 ;;
 19170                           
 19171                           	psect	text64
 19172  01B0DE                     __ptext64:
 19173                           	opt callstack 0
 19174  01B0DE                     _tolower:
 19175                           	opt callstack 0
 19176                           
 19177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19178  01B0DE  52E6               	movf	postinc1,f,c
 19179  01B0E0  52E6               	movf	postinc1,f,c
 19180                           
 19181                           ;stkvar	_c @ sp[(-2)+-2]
 19182                           
 19183                           ;incstack = 0
 19184 ;; hardware stack exceeded
 19185  01B0E2  0EFC               	movlw	-4
 19186  01B0E4  50E3               	movf	plusw1,w,c
 19187  01B0E6  0FBF               	addlw	191
 19188  01B0E8  6E0B               	movwf	(btemp+10)^0,c
 19189  01B0EA  0EFD               	movlw	-3
 19190  01B0EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19191  01B0F2  0EFF               	movlw	255
 19192  01B0F4  220C               	addwfc	(btemp+11)^0,f,c
 19193  01B0F6  500C               	movf	(btemp+11)^0,w,c
 19194  01B0F8  E106               	bnz	u6240
 19195  01B0FA  0E1A               	movlw	26
 19196  01B0FC  5C0B               	subwf	(btemp+10)^0,w,c
 19197  01B0FE  B0D8               	btfsc	status,0,c
 19198  01B100  D002               	goto	u6240
 19199  01B102  0E01               	movlw	1
 19200  01B104  D001               	goto	u6250
 19201  01B106                     u6240:
 19202  01B106  0E00               	movlw	0
 19203  01B108                     u6250:
 19204  01B108  6E0B               	movwf	(btemp+10)^0,c
 19205  01B10A  6A0C               	clrf	(btemp+11)^0,c
 19206                           
 19207                           ;stkvar	_tolower$6670 @ sp[(-2)+0]
 19208  01B10C  0EFE               	movlw	-2
 19209  01B10E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19210  01B114  0EFF               	movlw	-1
 19211  01B116  0060  F033  FFE3   	movff	btemp+11,plusw1
 19212                           
 19213                           ;stkvar	_tolower$6670 @ sp[(-2)+0]
 19214  01B11C  0EFE               	movlw	-2
 19215  01B11E  006F FF8C  F001    	movff	plusw1,btemp
 19216  01B124  0EFF               	movlw	-1
 19217  01B126  50E3               	movf	plusw1,w,c
 19218  01B128  1001               	iorwf	btemp^0,w,c
 19219  01B12A  B4D8               	btfsc	status,2,c
 19220  01B12C  D00D               	goto	l8288
 19221                           
 19222                           ;stkvar	_c @ sp[(-2)+-2]
 19223  01B12E  0EFC               	movlw	-4
 19224  01B130  006F FF8C  F001    	movff	plusw1,btemp
 19225  01B136  0EFD               	movlw	-3
 19226  01B138  006F FF8C  F002    	movff	plusw1,btemp+1
 19227  01B13E  0E20               	movlw	32
 19228  01B140  1201               	iorwf	btemp^0,f,c
 19229  01B142  0E00               	movlw	0
 19230  01B144  1202               	iorwf	(btemp+1)^0,f,c
 19231  01B146  D008               	goto	l3580
 19232  01B148                     l8288:
 19233                           
 19234                           ;stkvar	_c @ sp[(-2)+-2]
 19235  01B148  0EFC               	movlw	-4
 19236  01B14A  006F FF8C  F001    	movff	plusw1,btemp
 19237  01B150  0EFD               	movlw	-3
 19238  01B152  006F FF8C  F002    	movff	plusw1,btemp+1
 19239  01B158                     l3580:
 19240                           
 19241                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19242  01B158  52E5               	movf	postdec1,f,c
 19243  01B15A  52E5               	movf	postdec1,f,c
 19244  01B15C  52E5               	movf	postdec1,f,c
 19245  01B15E  52E5               	movf	postdec1,f,c
 19246  01B160  0012               	return		;funcret
 19247  01B162                     __end_of_tolower:
 19248                           	opt callstack 0
 19249                           
 19250 ;; *************** function _isupper *****************
 19251 ;; Defined at:
 19252 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;  c               2  [STACK] int 
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;		None
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  2  [STACK] int 
 19259 ;; Registers used:
 19260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19270 ;;Total ram usage:        0 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:   15
 19273 ;; This function calls:
 19274 ;;		Nothing
 19275 ;; This function is called by:
 19276 ;;		_efgtoa
 19277 ;;		_xtoa
 19278 ;;		_vfpfcnvrt
 19279 ;;		_tolower
 19280 ;; This function uses a reentrant model
 19281 ;;
 19282                           
 19283                           	psect	text65
 19284  01BFE4                     __ptext65:
 19285                           	opt callstack 0
 19286  01BFE4                     _isupper:
 19287                           	opt callstack 0
 19288                           
 19289                           ;stkvar	_c @ sp[(0)+-2]
 19290                           
 19291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19292                           ;incstack = 0
 19293 ;; hardware stack exceeded
 19294  01BFE4  0EFE               	movlw	-2
 19295  01BFE6  50E3               	movf	plusw1,w,c
 19296  01BFE8  0FBF               	addlw	191
 19297  01BFEA  6E0B               	movwf	(btemp+10)^0,c
 19298  01BFEC  0EFF               	movlw	-1
 19299  01BFEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19300  01BFF4  0EFF               	movlw	255
 19301  01BFF6  220C               	addwfc	(btemp+11)^0,f,c
 19302  01BFF8  500C               	movf	(btemp+11)^0,w,c
 19303  01BFFA  E106               	bnz	u5590
 19304  01BFFC  0E1A               	movlw	26
 19305  01BFFE  5C0B               	subwf	(btemp+10)^0,w,c
 19306  01C000  B0D8               	btfsc	status,0,c
 19307  01C002  D002               	goto	u5590
 19308  01C004  0E01               	movlw	1
 19309  01C006  D001               	goto	u5600
 19310  01C008                     u5590:
 19311  01C008  0E00               	movlw	0
 19312  01C00A                     u5600:
 19313  01C00A  6E01               	movwf	btemp^0,c
 19314  01C00C  6A02               	clrf	(btemp+1)^0,c
 19315                           
 19316                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19317  01C00E  52E5               	movf	postdec1,f,c
 19318  01C010  52E5               	movf	postdec1,f,c
 19319  01C012  0012               	return		;funcret
 19320  01C014                     __end_of_isupper:
 19321                           	opt callstack 0
 19322                           
 19323 ;; *************** function _strcpy *****************
 19324 ;; Defined at:
 19325 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 19326 ;; Parameters:    Size  Location     Type
 19327 ;;  dest            2  [STACK] PTR unsigned char 
 19328 ;;		 -> dbuf(80), 
 19329 ;;  src             2  [STACK] PTR const unsigned char 
 19330 ;;		 -> STR_73(4), STR_72(4), STR_69(4), STR_68(4), 
 19331 ;;		 -> dbuf(80), 
 19332 ;; Auto vars:     Size  Location     Type
 19333 ;;  d               2  [STACK] PTR unsigned char 
 19334 ;;		 -> dbuf(80), 
 19335 ;;  s               2  [STACK] PTR const unsigned char 
 19336 ;;		 -> STR_73(4), STR_72(4), STR_69(4), STR_68(4), 
 19337 ;;		 -> dbuf(80), 
 19338 ;; Return value:  Size  Location     Type
 19339 ;;                  2  [STACK] PTR unsigned char 
 19340 ;; Registers used:
 19341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19342 ;; Tracked objects:
 19343 ;;		On entry : 0/0
 19344 ;;		On exit  : 0/0
 19345 ;;		Unchanged: 0/0
 19346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19351 ;;Total ram usage:        0 bytes
 19352 ;; Hardware stack levels used:    1
 19353 ;; Hardware stack levels required when called:   15
 19354 ;; This function calls:
 19355 ;;		Nothing
 19356 ;; This function is called by:
 19357 ;;		_efgtoa
 19358 ;; This function uses a reentrant model
 19359 ;;
 19360                           
 19361                           	psect	text66
 19362  01A592                     __ptext66:
 19363                           	opt callstack 0
 19364  01A592                     _strcpy:
 19365                           	opt callstack 0
 19366                           
 19367                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19368  01A592  52E6               	movf	postinc1,f,c
 19369  01A594  52E6               	movf	postinc1,f,c
 19370  01A596  52E6               	movf	postinc1,f,c
 19371  01A598  52E6               	movf	postinc1,f,c
 19372                           
 19373                           ;stkvar	_src @ sp[(-4)+-4]
 19374                           
 19375                           ;incstack = 0
 19376 ;; hardware stack exceeded
 19377  01A59A  0EF8               	movlw	-8
 19378  01A59C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19379  01A5A2  0EF9               	movlw	-7
 19380  01A5A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19381                           
 19382                           ;stkvar	_s @ sp[(-4)+2]
 19383  01A5AA  0EFF               	movlw	-1
 19384  01A5AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19385  01A5B2  0EFE               	movlw	-2
 19386  01A5B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19387                           
 19388                           ;stkvar	_dest @ sp[(-4)+-2]
 19389  01A5BA  0EFA               	movlw	-6
 19390  01A5BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19391  01A5C2  0EFB               	movlw	-5
 19392  01A5C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19393                           
 19394                           ;stkvar	_d @ sp[(-4)+0]
 19395  01A5CA  0EFD               	movlw	-3
 19396  01A5CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19397  01A5D2  0EFC               	movlw	-4
 19398  01A5D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19399  01A5DA                     l12274:
 19400                           
 19401                           ;stkvar	_s @ sp[(-4)+2]
 19402  01A5DA  50E1               	movf	fsr1l,w,c
 19403  01A5DC  0FFE               	addlw	-2
 19404  01A5DE  6ED9               	movwf	fsr2l,c
 19405  01A5E0  50E2               	movf	fsr1h,w,c
 19406  01A5E2  6EDA               	movwf	fsr2h,c
 19407  01A5E4  0EFF               	movlw	255
 19408  01A5E6  22DA               	addwfc	fsr2h,f,c
 19409  01A5E8  006F FF7C  F00B    	movff	indf2,btemp+10
 19410  01A5EE  0E01               	movlw	1
 19411  01A5F0  26DE               	addwf	postinc2,f,c
 19412  01A5F2  006F FF7C  F00C    	movff	indf2,btemp+11
 19413  01A5F8  0E00               	movlw	0
 19414  01A5FA  22DD               	addwfc	postdec2,f,c
 19415  01A5FC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19416  01A602  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19417  01A608  0E00               	movlw	low (__mediumconst shr (0+16))
 19418  01A60A  6EF8               	movwf	tblptru,c
 19419                           
 19420                           ;stkvar	_d @ sp[(-4)+0]
 19421  01A60C  50E1               	movf	fsr1l,w,c
 19422  01A60E  0FFC               	addlw	-4
 19423  01A610  6ED9               	movwf	fsr2l,c
 19424  01A612  50E2               	movf	fsr1h,w,c
 19425  01A614  6EDA               	movwf	fsr2h,c
 19426  01A616  0EFF               	movlw	255
 19427  01A618  22DA               	addwfc	fsr2h,f,c
 19428  01A61A  006F FF7C  F00B    	movff	indf2,btemp+10
 19429  01A620  0E01               	movlw	1
 19430  01A622  26DE               	addwf	postinc2,f,c
 19431  01A624  006F FF7C  F00C    	movff	indf2,btemp+11
 19432  01A62A  0E00               	movlw	0
 19433  01A62C  22DD               	addwfc	postdec2,f,c
 19434  01A62E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19435  01A634  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19436  01A63A  0E1F               	movlw	(high __ramtop+-1)
 19437  01A63C  64F7               	cpfsgt	tblptrh,c
 19438  01A63E  D003               	bra	u11167
 19439  01A640  0008               	tblrd		*
 19440  01A642  50F5               	movf	tablat,w,c
 19441  01A644  D007               	bra	u11160
 19442  01A646                     u11167:
 19443  01A646  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19444  01A64C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19445  01A652  50EF               	movf	indf0,w,c
 19446  01A654                     u11160:
 19447  01A654  6EDF               	movwf	indf2,c
 19448  01A656  50DF               	movf	indf2,w,c
 19449  01A658  A4D8               	btfss	status,2,c
 19450  01A65A  D7BF               	goto	l12274
 19451                           
 19452                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19453  01A65C  0EF8               	movlw	248
 19454  01A65E  26E1               	addwf	fsr1l,f,c
 19455  01A660  0EFF               	movlw	255
 19456  01A662  22E2               	addwfc	fsr1h,f,c
 19457  01A664  0012               	return		;funcret
 19458  01A666                     __end_of_strcpy:
 19459                           	opt callstack 0
 19460                           
 19461 ;; *************** function _floorf *****************
 19462 ;; Defined at:
 19463 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;  x               4  [STACK] float 
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;  u               4  [STACK] struct .
 19468 ;;  m               4  [STACK] unsigned long 
 19469 ;;  e               2  [STACK] int 
 19470 ;; Return value:  Size  Location     Type
 19471 ;;                  4  [STACK] float 
 19472 ;; Registers used:
 19473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19474 ;; Tracked objects:
 19475 ;;		On entry : 0/0
 19476 ;;		On exit  : 0/0
 19477 ;;		Unchanged: 0/0
 19478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19483 ;;Total ram usage:        0 bytes
 19484 ;; Hardware stack levels used:    1
 19485 ;; Hardware stack levels required when called:   15
 19486 ;; This function calls:
 19487 ;;		Nothing
 19488 ;; This function is called by:
 19489 ;;		_efgtoa
 19490 ;; This function uses a reentrant model
 19491 ;;
 19492                           
 19493                           	psect	text67
 19494  0164E2                     __ptext67:
 19495                           	opt callstack 0
 19496  0164E2                     _floorf:
 19497                           	opt callstack 0
 19498                           
 19499                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19500  0164E2  0E0A               	movlw	10
 19501  0164E4  26E1               	addwf	fsr1l,f,c
 19502  0164E6  0E00               	movlw	0
 19503  0164E8  22E2               	addwfc	fsr1h,f,c
 19504                           
 19505                           ;incstack = 0
 19506 ;; hardware stack exceeded
 19507  0164EA  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 19508  0164F0  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 19509  0164F6  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 19510  0164FC  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 19511                           
 19512                           ;stkvar	_u @ sp[(-10)+0]
 19513  016502  0EF6               	movlw	-10
 19514  016504  0060  F027  FFE3   	movff	btemp+8,plusw1
 19515  01650A  0EF7               	movlw	-9
 19516  01650C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19517  016512  0EF8               	movlw	-8
 19518  016514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19519  01651A  0EF9               	movlw	-7
 19520  01651C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19521                           
 19522                           ;stkvar	_x @ sp[(-10)+-4]
 19523  016522  0EF2               	movlw	-14
 19524  016524  006F FF8C  F009    	movff	plusw1,btemp+8
 19525  01652A  0EF3               	movlw	-13
 19526  01652C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19527  016532  0EF4               	movlw	-12
 19528  016534  006F FF8C  F00B    	movff	plusw1,btemp+10
 19529  01653A  0EF5               	movlw	-11
 19530  01653C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19531                           
 19532                           ;stkvar	_u @ sp[(-10)+0]
 19533  016542  0EF6               	movlw	-10
 19534  016544  0060  F027  FFE3   	movff	btemp+8,plusw1
 19535  01654A  0EF7               	movlw	-9
 19536  01654C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19537  016552  0EF8               	movlw	-8
 19538  016554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19539  01655A  0EF9               	movlw	-7
 19540  01655C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19541  016562  0E81               	movlw	129
 19542  016564  6E0B               	movwf	(btemp+10)^0,c
 19543  016566  0EFF               	movlw	255
 19544  016568  6E0C               	movwf	(btemp+11)^0,c
 19545                           
 19546                           ;stkvar	_u @ sp[(-10)+0]
 19547  01656A  0EF6               	movlw	-10
 19548  01656C  006F FF8C  F005    	movff	plusw1,btemp+4
 19549  016572  0EF7               	movlw	-9
 19550  016574  006F FF8C  F006    	movff	plusw1,btemp+5
 19551  01657A  0EF8               	movlw	-8
 19552  01657C  006F FF8C  F007    	movff	plusw1,btemp+6
 19553  016582  0EF9               	movlw	-7
 19554  016584  006F FF8C  F008    	movff	plusw1,btemp+7
 19555  01658A  0E18               	movlw	24
 19556  01658C  D005               	goto	u6270
 19557  01658E                     u6275:
 19558  01658E  90D8               	bcf	status,0,c
 19559  016590  3208               	rrcf	(btemp+7)^0,f,c
 19560  016592  3207               	rrcf	(btemp+6)^0,f,c
 19561  016594  3206               	rrcf	(btemp+5)^0,f,c
 19562  016596  3205               	rrcf	(btemp+4)^0,f,c
 19563  016598                     u6270:
 19564  016598  2EE8               	decfsz	wreg,f,c
 19565  01659A  D7F9               	goto	u6275
 19566  01659C  0060  F014  F009   	movff	btemp+4,btemp+8
 19567  0165A2  0060  F018  F00A   	movff	btemp+5,btemp+9
 19568  0165A8  0EFF               	movlw	255
 19569  0165AA  1609               	andwf	(btemp+8)^0,f,c
 19570  0165AC  0E00               	movlw	0
 19571  0165AE  160A               	andwf	(btemp+9)^0,f,c
 19572  0165B0  500B               	movf	(btemp+10)^0,w,c
 19573  0165B2  2609               	addwf	(btemp+8)^0,f,c
 19574  0165B4  500C               	movf	(btemp+11)^0,w,c
 19575  0165B6  220A               	addwfc	(btemp+9)^0,f,c
 19576                           
 19577                           ;stkvar	_e @ sp[(-10)+8]
 19578  0165B8  0EFE               	movlw	-2
 19579  0165BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19580  0165C0  0EFF               	movlw	-1
 19581  0165C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19582                           
 19583                           ;stkvar	_e @ sp[(-10)+8]
 19584  0165C8  0EFF               	movlw	-1
 19585  0165CA  BEE3               	btfsc	plusw1,7,c
 19586  0165CC  D019               	goto	l8302
 19587  0165CE  0EFF               	movlw	-1
 19588  0165D0  50E3               	movf	plusw1,w,c
 19589  0165D2  E108               	bnz	u6280
 19590  0165D4  0EFE               	movlw	-2
 19591  0165D6  006F FF8C  F001    	movff	plusw1,btemp
 19592  0165DC  0E17               	movlw	23
 19593  0165DE  5E01               	subwf	btemp^0,f,c
 19594  0165E0  A0D8               	btfss	status,0,c
 19595  0165E2  D00E               	goto	l8302
 19596  0165E4                     u6280:
 19597                           
 19598                           ;stkvar	_x @ sp[(-10)+-4]
 19599  0165E4  0EF2               	movlw	-14
 19600  0165E6  006F FF8C  F001    	movff	plusw1,btemp
 19601  0165EC  0EF3               	movlw	-13
 19602  0165EE  006F FF8C  F002    	movff	plusw1,btemp+1
 19603  0165F4  0EF4               	movlw	-12
 19604  0165F6  006F FF8C  F003    	movff	plusw1,btemp+2
 19605  0165FC  0EF5               	movlw	-11
 19606  0165FE  D11F               	goto	L21
 19607  016600                     l8302:
 19608                           
 19609                           ;stkvar	_e @ sp[(-10)+8]
 19610  016600  0EFF               	movlw	-1
 19611  016602  BEE3               	btfsc	plusw1,7,c
 19612  016604  D0B4               	goto	l8318
 19613                           
 19614                           ;stkvar	_e @ sp[(-10)+8]
 19615  016606  0EFE               	movlw	-2
 19616  016608  006F FF8C  F00C    	movff	plusw1,btemp+11
 19617  01660E  0EFF               	movlw	255
 19618  016610  6E05               	movwf	(btemp+4)^0,c
 19619  016612  0EFF               	movlw	255
 19620  016614  6E06               	movwf	(btemp+5)^0,c
 19621  016616  0E7F               	movlw	127
 19622  016618  6E07               	movwf	(btemp+6)^0,c
 19623  01661A  0E00               	movlw	0
 19624  01661C  6E08               	movwf	(btemp+7)^0,c
 19625  01661E                     u6305:
 19626  01661E  660C               	tstfsz	(btemp+11)^0,c
 19627  016620  D001               	goto	u6306
 19628  016622  D007               	goto	u6307
 19629  016624                     u6306:
 19630  016624  3408               	rlcf	(btemp+7)^0,w,c
 19631  016626  3208               	rrcf	(btemp+7)^0,f,c
 19632  016628  3207               	rrcf	(btemp+6)^0,f,c
 19633  01662A  3206               	rrcf	(btemp+5)^0,f,c
 19634  01662C  3205               	rrcf	(btemp+4)^0,f,c
 19635  01662E  2E0C               	decfsz	(btemp+11)^0,f,c
 19636  016630  D7F6               	goto	u6305
 19637  016632                     u6307:
 19638                           
 19639                           ;stkvar	_m @ sp[(-10)+4]
 19640  016632  0EFA               	movlw	-6
 19641  016634  0060  F017  FFE3   	movff	btemp+4,plusw1
 19642  01663A  0EFB               	movlw	-5
 19643  01663C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19644  016642  0EFC               	movlw	-4
 19645  016644  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19646  01664A  0EFD               	movlw	-3
 19647  01664C  0060  F023  FFE3   	movff	btemp+7,plusw1
 19648                           
 19649                           ;stkvar	_m @ sp[(-10)+4]
 19650                           ;stkvar	_u @ sp[(-10)+0]
 19651  016652  0EF6               	movlw	-10
 19652  016654  006F FF8C  F009    	movff	plusw1,btemp+8
 19653  01665A  0EF7               	movlw	-9
 19654  01665C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19655  016662  0EF8               	movlw	-8
 19656  016664  006F FF8C  F00B    	movff	plusw1,btemp+10
 19657  01666A  0EF9               	movlw	-7
 19658  01666C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19659  016672  0EFA               	movlw	-6
 19660  016674  50E3               	movf	plusw1,w,c
 19661  016676  1609               	andwf	(btemp+8)^0,f,c
 19662  016678  0EFB               	movlw	-5
 19663  01667A  50E3               	movf	plusw1,w,c
 19664  01667C  160A               	andwf	(btemp+9)^0,f,c
 19665  01667E  0EFC               	movlw	-4
 19666  016680  50E3               	movf	plusw1,w,c
 19667  016682  160B               	andwf	(btemp+10)^0,f,c
 19668  016684  0EFD               	movlw	-3
 19669  016686  50E3               	movf	plusw1,w,c
 19670  016688  160C               	andwf	(btemp+11)^0,f,c
 19671  01668A  5009               	movf	(btemp+8)^0,w,c
 19672  01668C  100A               	iorwf	(btemp+9)^0,w,c
 19673  01668E  100B               	iorwf	(btemp+10)^0,w,c
 19674  016690  100C               	iorwf	(btemp+11)^0,w,c
 19675  016692  B4D8               	btfsc	status,2,c
 19676  016694  D7A7               	goto	u6280
 19677                           
 19678                           ;stkvar	_u @ sp[(-10)+0]
 19679  016696  0EF6               	movlw	-10
 19680  016698  006F FF8C  F009    	movff	plusw1,btemp+8
 19681  01669E  0EF7               	movlw	-9
 19682  0166A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19683  0166A6  0EF8               	movlw	-8
 19684  0166A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19685  0166AE  0EF9               	movlw	-7
 19686  0166B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19687  0166B6  0E20               	movlw	32
 19688  0166B8  D005               	goto	u6320
 19689  0166BA                     u6325:
 19690  0166BA  90D8               	bcf	status,0,c
 19691  0166BC  320C               	rrcf	(btemp+11)^0,f,c
 19692  0166BE  320B               	rrcf	(btemp+10)^0,f,c
 19693  0166C0  320A               	rrcf	(btemp+9)^0,f,c
 19694  0166C2  3209               	rrcf	(btemp+8)^0,f,c
 19695  0166C4                     u6320:
 19696  0166C4  2EE8               	decfsz	wreg,f,c
 19697  0166C6  D7F9               	goto	u6325
 19698  0166C8  5009               	movf	(btemp+8)^0,w,c
 19699  0166CA  B4D8               	btfsc	status,2,c
 19700  0166CC  D028               	goto	l8316
 19701                           
 19702                           ;stkvar	_m @ sp[(-10)+4]
 19703                           ;stkvar	_u @ sp[(-10)+0]
 19704  0166CE  0EF6               	movlw	-10
 19705  0166D0  50E3               	movf	plusw1,w,c
 19706  0166D2  6E01               	movwf	btemp^0,c
 19707  0166D4  0EFA               	movlw	-6
 19708  0166D6  50E3               	movf	plusw1,w,c
 19709  0166D8  2601               	addwf	btemp^0,f,c
 19710  0166DA  0EF6               	movlw	-10
 19711  0166DC  0060  F007  FFE3   	movff	btemp,plusw1
 19712  0166E2  0EF7               	movlw	-9
 19713  0166E4  50E3               	movf	plusw1,w,c
 19714  0166E6  6E01               	movwf	btemp^0,c
 19715  0166E8  0EFB               	movlw	-5
 19716  0166EA  50E3               	movf	plusw1,w,c
 19717  0166EC  2201               	addwfc	btemp^0,f,c
 19718  0166EE  0EF7               	movlw	-9
 19719  0166F0  0060  F007  FFE3   	movff	btemp,plusw1
 19720  0166F6  0EF8               	movlw	-8
 19721  0166F8  50E3               	movf	plusw1,w,c
 19722  0166FA  6E01               	movwf	btemp^0,c
 19723  0166FC  0EFC               	movlw	-4
 19724  0166FE  50E3               	movf	plusw1,w,c
 19725  016700  2201               	addwfc	btemp^0,f,c
 19726  016702  0EF8               	movlw	-8
 19727  016704  0060  F007  FFE3   	movff	btemp,plusw1
 19728  01670A  0EF9               	movlw	-7
 19729  01670C  50E3               	movf	plusw1,w,c
 19730  01670E  6E01               	movwf	btemp^0,c
 19731  016710  0EFD               	movlw	-3
 19732  016712  50E3               	movf	plusw1,w,c
 19733  016714  2201               	addwfc	btemp^0,f,c
 19734  016716  0EF9               	movlw	-7
 19735  016718  0060  F007  FFE3   	movff	btemp,plusw1
 19736  01671E                     l8316:
 19737                           
 19738                           ;stkvar	_m @ sp[(-10)+4]
 19739  01671E  0EFA               	movlw	-6
 19740  016720  006F FF8C  F009    	movff	plusw1,btemp+8
 19741  016726  0EFB               	movlw	-5
 19742  016728  006F FF8C  F00A    	movff	plusw1,btemp+9
 19743  01672E  0EFC               	movlw	-4
 19744  016730  006F FF8C  F00B    	movff	plusw1,btemp+10
 19745  016736  0EFD               	movlw	-3
 19746  016738  006F FF8C  F00C    	movff	plusw1,btemp+11
 19747  01673E  1C09               	comf	(btemp+8)^0,w,c
 19748  016740  6E05               	movwf	(btemp+4)^0,c
 19749  016742  1C0A               	comf	(btemp+9)^0,w,c
 19750  016744  6E06               	movwf	(btemp+5)^0,c
 19751  016746  1C0B               	comf	(btemp+10)^0,w,c
 19752  016748  6E07               	movwf	(btemp+6)^0,c
 19753  01674A  1C0C               	comf	(btemp+11)^0,w,c
 19754  01674C  6E08               	movwf	(btemp+7)^0,c
 19755                           
 19756                           ;stkvar	_u @ sp[(-10)+0]
 19757  01674E  50E1               	movf	fsr1l,w,c
 19758  016750  0FF6               	addlw	-10
 19759  016752  6ED9               	movwf	fsr2l,c
 19760  016754  50E2               	movf	fsr1h,w,c
 19761  016756  6EDA               	movwf	fsr2h,c
 19762  016758  0EFF               	movlw	255
 19763  01675A  22DA               	addwfc	fsr2h,f,c
 19764  01675C  5005               	movf	(btemp+4)^0,w,c
 19765  01675E  16DE               	andwf	postinc2,f,c
 19766  016760  5006               	movf	(btemp+5)^0,w,c
 19767  016762  16DE               	andwf	postinc2,f,c
 19768  016764  5007               	movf	(btemp+6)^0,w,c
 19769  016766  16DE               	andwf	postinc2,f,c
 19770  016768  5008               	movf	(btemp+7)^0,w,c
 19771  01676A  16DE               	andwf	postinc2,f,c
 19772  01676C  D05B               	goto	l8326
 19773  01676E                     l8318:
 19774                           
 19775                           ;stkvar	_u @ sp[(-10)+0]
 19776  01676E  0EF6               	movlw	-10
 19777  016770  006F FF8C  F009    	movff	plusw1,btemp+8
 19778  016776  0EF7               	movlw	-9
 19779  016778  006F FF8C  F00A    	movff	plusw1,btemp+9
 19780  01677E  0EF8               	movlw	-8
 19781  016780  006F FF8C  F00B    	movff	plusw1,btemp+10
 19782  016786  0EF9               	movlw	-7
 19783  016788  006F FF8C  F00C    	movff	plusw1,btemp+11
 19784  01678E  0E20               	movlw	32
 19785  016790  D005               	goto	u6340
 19786  016792                     u6345:
 19787  016792  90D8               	bcf	status,0,c
 19788  016794  320C               	rrcf	(btemp+11)^0,f,c
 19789  016796  320B               	rrcf	(btemp+10)^0,f,c
 19790  016798  320A               	rrcf	(btemp+9)^0,f,c
 19791  01679A  3209               	rrcf	(btemp+8)^0,f,c
 19792  01679C                     u6340:
 19793  01679C  2EE8               	decfsz	wreg,f,c
 19794  01679E  D7F9               	goto	u6345
 19795  0167A0  6609               	tstfsz	(btemp+8)^0,c
 19796  0167A2  D009               	goto	l8322
 19797                           
 19798                           ;stkvar	_u @ sp[(-10)+0]
 19799  0167A4  0EF6               	movlw	-10
 19800  0167A6  6AE3               	clrf	plusw1,c
 19801  0167A8  0EF7               	movlw	-9
 19802  0167AA  6AE3               	clrf	plusw1,c
 19803  0167AC  0EF8               	movlw	-8
 19804  0167AE  6AE3               	clrf	plusw1,c
 19805  0167B0  0EF9               	movlw	-7
 19806  0167B2  6AE3               	clrf	plusw1,c
 19807  0167B4  D037               	goto	l8326
 19808  0167B6                     l8322:
 19809                           
 19810                           ;stkvar	_u @ sp[(-10)+0]
 19811  0167B6  0EF6               	movlw	-10
 19812  0167B8  006F FF8C  F009    	movff	plusw1,btemp+8
 19813  0167BE  0EF7               	movlw	-9
 19814  0167C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19815  0167C6  0EF8               	movlw	-8
 19816  0167C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19817  0167CE  0EF9               	movlw	-7
 19818  0167D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19819  0167D6  90D8               	bcf	status,0,c
 19820  0167D8  3409               	rlcf	(btemp+8)^0,w,c
 19821  0167DA  6E05               	movwf	(btemp+4)^0,c
 19822  0167DC  340A               	rlcf	(btemp+9)^0,w,c
 19823  0167DE  6E06               	movwf	(btemp+5)^0,c
 19824  0167E0  340B               	rlcf	(btemp+10)^0,w,c
 19825  0167E2  6E07               	movwf	(btemp+6)^0,c
 19826  0167E4  340C               	rlcf	(btemp+11)^0,w,c
 19827  0167E6  6E08               	movwf	(btemp+7)^0,c
 19828  0167E8  5005               	movf	(btemp+4)^0,w,c
 19829  0167EA  1006               	iorwf	(btemp+5)^0,w,c
 19830  0167EC  1007               	iorwf	(btemp+6)^0,w,c
 19831  0167EE  1008               	iorwf	(btemp+7)^0,w,c
 19832  0167F0  B4D8               	btfsc	status,2,c
 19833  0167F2  D018               	goto	l8326
 19834  0167F4  0E00               	movlw	0
 19835  0167F6  6E09               	movwf	(btemp+8)^0,c
 19836  0167F8  0E00               	movlw	0
 19837  0167FA  6E0A               	movwf	(btemp+9)^0,c
 19838  0167FC  0E80               	movlw	128
 19839  0167FE  6E0B               	movwf	(btemp+10)^0,c
 19840  016800  0EBF               	movlw	191
 19841  016802  6E0C               	movwf	(btemp+11)^0,c
 19842                           
 19843                           ;stkvar	_u @ sp[(-10)+0]
 19844  016804  0EF6               	movlw	-10
 19845  016806  0060  F027  FFE3   	movff	btemp+8,plusw1
 19846  01680C  0EF7               	movlw	-9
 19847  01680E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19848  016814  0EF8               	movlw	-8
 19849  016816  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19850  01681C  0EF9               	movlw	-7
 19851  01681E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19852  016824                     l8326:
 19853                           
 19854                           ;stkvar	_u @ sp[(-10)+0]
 19855  016824  0EF6               	movlw	-10
 19856  016826  006F FF8C  F001    	movff	plusw1,btemp
 19857  01682C  0EF7               	movlw	-9
 19858  01682E  006F FF8C  F002    	movff	plusw1,btemp+1
 19859  016834  0EF8               	movlw	-8
 19860  016836  006F FF8C  F003    	movff	plusw1,btemp+2
 19861  01683C  0EF9               	movlw	-7
 19862  01683E                     L21:
 19863  01683E  006F FF8C  F004    	movff	plusw1,btemp+3
 19864                           
 19865                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19866  016844  0EF2               	movlw	242
 19867  016846  26E1               	addwf	fsr1l,f,c
 19868  016848  0EFF               	movlw	255
 19869  01684A  22E2               	addwfc	fsr1h,f,c
 19870  01684C  0012               	return		;funcret
 19871  01684E                     __end_of_floorf:
 19872                           	opt callstack 0
 19873                           
 19874 ;; *************** function ___fpclassifyf *****************
 19875 ;; Defined at:
 19876 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  x               4  [STACK] float 
 19879 ;; Auto vars:     Size  Location     Type
 19880 ;;  u               4  [STACK] struct .
 19881 ;;  e               2  [STACK] int 
 19882 ;; Return value:  Size  Location     Type
 19883 ;;                  2  [STACK] int 
 19884 ;; Registers used:
 19885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19886 ;; Tracked objects:
 19887 ;;		On entry : 0/0
 19888 ;;		On exit  : 0/0
 19889 ;;		Unchanged: 0/0
 19890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19895 ;;Total ram usage:        0 bytes
 19896 ;; Hardware stack levels used:    1
 19897 ;; Hardware stack levels required when called:   15
 19898 ;; This function calls:
 19899 ;;		Nothing
 19900 ;; This function is called by:
 19901 ;;		_efgtoa
 19902 ;; This function uses a reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text68
 19906  018C64                     __ptext68:
 19907                           	opt callstack 0
 19908  018C64                     ___fpclassifyf:
 19909                           	opt callstack 0
 19910                           
 19911                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19912  018C64  0E06               	movlw	6
 19913  018C66  26E1               	addwf	fsr1l,f,c
 19914  018C68  0E00               	movlw	0
 19915  018C6A  22E2               	addwfc	fsr1h,f,c
 19916                           
 19917                           ;incstack = 0
 19918 ;; hardware stack exceeded
 19919  018C6C  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19920  018C72  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19921  018C78  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19922  018C7E  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19923                           
 19924                           ;stkvar	_u @ sp[(-6)+0]
 19925  018C84  0EFA               	movlw	-6
 19926  018C86  0060  F027  FFE3   	movff	btemp+8,plusw1
 19927  018C8C  0EFB               	movlw	-5
 19928  018C8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19929  018C94  0EFC               	movlw	-4
 19930  018C96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19931  018C9C  0EFD               	movlw	-3
 19932  018C9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19933                           
 19934                           ;stkvar	_x @ sp[(-6)+-4]
 19935  018CA4  0EF6               	movlw	-10
 19936  018CA6  006F FF8C  F009    	movff	plusw1,btemp+8
 19937  018CAC  0EF7               	movlw	-9
 19938  018CAE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19939  018CB4  0EF8               	movlw	-8
 19940  018CB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19941  018CBC  0EF9               	movlw	-7
 19942  018CBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19943                           
 19944                           ;stkvar	_u @ sp[(-6)+0]
 19945  018CC4  0EFA               	movlw	-6
 19946  018CC6  0060  F027  FFE3   	movff	btemp+8,plusw1
 19947  018CCC  0EFB               	movlw	-5
 19948  018CCE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19949  018CD4  0EFC               	movlw	-4
 19950  018CD6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19951  018CDC  0EFD               	movlw	-3
 19952  018CDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19953                           
 19954                           ;stkvar	_u @ sp[(-6)+0]
 19955  018CE4  0EFA               	movlw	-6
 19956  018CE6  006F FF8C  F009    	movff	plusw1,btemp+8
 19957  018CEC  0EFB               	movlw	-5
 19958  018CEE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19959  018CF4  0EFC               	movlw	-4
 19960  018CF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19961  018CFC  0EFD               	movlw	-3
 19962  018CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19963  018D04  0E18               	movlw	24
 19964  018D06  D005               	goto	u6150
 19965  018D08                     u6155:
 19966  018D08  90D8               	bcf	status,0,c
 19967  018D0A  320C               	rrcf	(btemp+11)^0,f,c
 19968  018D0C  320B               	rrcf	(btemp+10)^0,f,c
 19969  018D0E  320A               	rrcf	(btemp+9)^0,f,c
 19970  018D10  3209               	rrcf	(btemp+8)^0,f,c
 19971  018D12                     u6150:
 19972  018D12  2EE8               	decfsz	wreg,f,c
 19973  018D14  D7F9               	goto	u6155
 19974  018D16  0060  F024  F007   	movff	btemp+8,btemp+6
 19975  018D1C  0060  F028  F008   	movff	btemp+9,btemp+7
 19976  018D22  0EFF               	movlw	255
 19977  018D24  1607               	andwf	(btemp+6)^0,f,c
 19978  018D26  0E00               	movlw	0
 19979  018D28  1608               	andwf	(btemp+7)^0,f,c
 19980                           
 19981                           ;stkvar	_e @ sp[(-6)+4]
 19982  018D2A  0EFE               	movlw	-2
 19983  018D2C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19984  018D32  0EFF               	movlw	-1
 19985  018D34  0060  F023  FFE3   	movff	btemp+7,plusw1
 19986                           
 19987                           ;stkvar	_e @ sp[(-6)+4]
 19988  018D3A  0EFE               	movlw	-2
 19989  018D3C  006F FF8C  F001    	movff	plusw1,btemp
 19990  018D42  0EFF               	movlw	-1
 19991  018D44  50E3               	movf	plusw1,w,c
 19992  018D46  1001               	iorwf	btemp^0,w,c
 19993  018D48  A4D8               	btfss	status,2,c
 19994  018D4A  D023               	goto	l8264
 19995                           
 19996                           ;stkvar	_u @ sp[(-6)+0]
 19997  018D4C  0EFA               	movlw	-6
 19998  018D4E  006F FF8C  F009    	movff	plusw1,btemp+8
 19999  018D54  0EFB               	movlw	-5
 20000  018D56  006F FF8C  F00A    	movff	plusw1,btemp+9
 20001  018D5C  0EFC               	movlw	-4
 20002  018D5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20003  018D64  0EFD               	movlw	-3
 20004  018D66  006F FF8C  F00C    	movff	plusw1,btemp+11
 20005  018D6C  90D8               	bcf	status,0,c
 20006  018D6E  3409               	rlcf	(btemp+8)^0,w,c
 20007  018D70  6E05               	movwf	(btemp+4)^0,c
 20008  018D72  340A               	rlcf	(btemp+9)^0,w,c
 20009  018D74  6E06               	movwf	(btemp+5)^0,c
 20010  018D76  340B               	rlcf	(btemp+10)^0,w,c
 20011  018D78  6E07               	movwf	(btemp+6)^0,c
 20012  018D7A  340C               	rlcf	(btemp+11)^0,w,c
 20013  018D7C  6E08               	movwf	(btemp+7)^0,c
 20014  018D7E  5005               	movf	(btemp+4)^0,w,c
 20015  018D80  1006               	iorwf	(btemp+5)^0,w,c
 20016  018D82  1007               	iorwf	(btemp+6)^0,w,c
 20017  018D84  1008               	iorwf	(btemp+7)^0,w,c
 20018  018D86  A4D8               	btfss	status,2,c
 20019  018D88  D002               	goto	l8260
 20020  018D8A  0E02               	movlw	2
 20021  018D8C  D02E               	goto	L22
 20022  018D8E                     l8260:
 20023  018D8E  0E03               	movlw	3
 20024  018D90  D02C               	goto	L22
 20025  018D92                     l8264:
 20026                           
 20027                           ;stkvar	_e @ sp[(-6)+4]
 20028  018D92  0EFE               	movlw	-2
 20029  018D94  28E3               	incf	plusw1,w,c
 20030  018D96  E128               	bnz	l8270
 20031  018D98  0EFF               	movlw	-1
 20032  018D9A  50E3               	movf	plusw1,w,c
 20033  018D9C  A4D8               	btfss	status,2,c
 20034  018D9E  D024               	goto	l8270
 20035                           
 20036                           ;stkvar	_u @ sp[(-6)+0]
 20037  018DA0  0EFA               	movlw	-6
 20038  018DA2  006F FF8C  F009    	movff	plusw1,btemp+8
 20039  018DA8  0EFB               	movlw	-5
 20040  018DAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 20041  018DB0  0EFC               	movlw	-4
 20042  018DB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20043  018DB8  0EFD               	movlw	-3
 20044  018DBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20045  018DC0  0E09               	movlw	9
 20046  018DC2                     u6195:
 20047  018DC2  90D8               	bcf	status,0,c
 20048  018DC4  3609               	rlcf	(btemp+8)^0,f,c
 20049  018DC6  360A               	rlcf	(btemp+9)^0,f,c
 20050  018DC8  360B               	rlcf	(btemp+10)^0,f,c
 20051  018DCA  360C               	rlcf	(btemp+11)^0,f,c
 20052  018DCC  2EE8               	decfsz	wreg,f,c
 20053  018DCE  D7F9               	goto	u6195
 20054  018DD0  5009               	movf	(btemp+8)^0,w,c
 20055  018DD2  100A               	iorwf	(btemp+9)^0,w,c
 20056  018DD4  100B               	iorwf	(btemp+10)^0,w,c
 20057  018DD6  100C               	iorwf	(btemp+11)^0,w,c
 20058  018DD8  A4D8               	btfss	status,2,c
 20059  018DDA  D002               	goto	u6200
 20060  018DDC  0E01               	movlw	1
 20061  018DDE  D001               	goto	u6210
 20062  018DE0                     u6200:
 20063  018DE0  0E00               	movlw	0
 20064  018DE2                     u6210:
 20065  018DE2  6E01               	movwf	btemp^0,c
 20066  018DE4  6A02               	clrf	(btemp+1)^0,c
 20067  018DE6  D004               	goto	l3190
 20068  018DE8                     l8270:
 20069  018DE8  0E04               	movlw	4
 20070  018DEA                     L22:
 20071  018DEA  6E01               	movwf	btemp^0,c
 20072  018DEC  0E00               	movlw	0
 20073  018DEE  6E02               	movwf	(btemp+1)^0,c
 20074  018DF0                     l3190:
 20075                           
 20076                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 20077  018DF0  0EF6               	movlw	246
 20078  018DF2  26E1               	addwf	fsr1l,f,c
 20079  018DF4  0EFF               	movlw	255
 20080  018DF6  22E2               	addwfc	fsr1h,f,c
 20081  018DF8  0012               	return		;funcret
 20082  018DFA                     __end_of___fpclassifyf:
 20083                           	opt callstack 0
 20084                           
 20085 ;; *************** function ___fltol *****************
 20086 ;; Defined at:
 20087 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;  f1              4  [STACK] int 
 20090 ;; Auto vars:     Size  Location     Type
 20091 ;;  exp1            1  [STACK] unsigned char 
 20092 ;;  sign1           1  [STACK] unsigned char 
 20093 ;; Return value:  Size  Location     Type
 20094 ;;                  4  [STACK] long 
 20095 ;; Registers used:
 20096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 20097 ;; Tracked objects:
 20098 ;;		On entry : 0/0
 20099 ;;		On exit  : 0/0
 20100 ;;		Unchanged: 0/0
 20101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20106 ;;Total ram usage:        0 bytes
 20107 ;; Hardware stack levels used:    1
 20108 ;; Hardware stack levels required when called:   15
 20109 ;; This function calls:
 20110 ;;		Nothing
 20111 ;; This function is called by:
 20112 ;;		_main
 20113 ;;		_convert_dac_raw
 20114 ;;		_calc_bsoc
 20115 ;;		_init_bsoc
 20116 ;;		_efgtoa
 20117 ;; This function uses a reentrant model
 20118 ;;
 20119                           
 20120                           	psect	text69
 20121  019100                     __ptext69:
 20122                           	opt callstack 0
 20123  019100                     ___fltol:
 20124                           	opt callstack 0
 20125                           
 20126                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20127  019100  52E6               	movf	postinc1,f,c
 20128  019102  52E6               	movf	postinc1,f,c
 20129                           
 20130                           ;stkvar	_f1 @ sp[(-2)+-4]
 20131                           
 20132                           ;incstack = 0
 20133 ;; hardware stack exceeded
 20134  019104  0EFA               	movlw	-6
 20135  019106  006F FF8C  F009    	movff	plusw1,btemp+8
 20136  01910C  0EFB               	movlw	-5
 20137  01910E  006F FF8C  F00A    	movff	plusw1,btemp+9
 20138  019114  0EFC               	movlw	-4
 20139  019116  006F FF8C  F00B    	movff	plusw1,btemp+10
 20140  01911C  0EFD               	movlw	-3
 20141  01911E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20142  019124  0E18               	movlw	24
 20143  019126  D005               	goto	u7360
 20144  019128                     u7365:
 20145  019128  90D8               	bcf	status,0,c
 20146  01912A  320C               	rrcf	(btemp+11)^0,f,c
 20147  01912C  320B               	rrcf	(btemp+10)^0,f,c
 20148  01912E  320A               	rrcf	(btemp+9)^0,f,c
 20149  019130  3209               	rrcf	(btemp+8)^0,f,c
 20150  019132                     u7360:
 20151  019132  2EE8               	decfsz	wreg,f,c
 20152  019134  D7F9               	goto	u7365
 20153                           
 20154                           ;stkvar	_exp1 @ sp[(-2)+0]
 20155  019136  0EFE               	movlw	-2
 20156  019138  0060  F027  FFE3   	movff	btemp+8,plusw1
 20157  01913E  0EFE               	movlw	-2
 20158  019140  50E3               	movf	plusw1,w,c
 20159  019142  A4D8               	btfss	status,2,c
 20160  019144  D006               	goto	l8890
 20161  019146                     u7370:
 20162  019146  0E00               	movlw	0
 20163  019148  6E01               	movwf	btemp^0,c
 20164  01914A  6A02               	clrf	(btemp+1)^0,c
 20165  01914C  6A03               	clrf	(btemp+2)^0,c
 20166  01914E  6A04               	clrf	(btemp+3)^0,c
 20167  019150  D08B               	goto	l2806
 20168  019152                     l8890:
 20169                           
 20170                           ;stkvar	_f1 @ sp[(-2)+-4]
 20171  019152  0EFA               	movlw	-6
 20172  019154  006F FF8C  F009    	movff	plusw1,btemp+8
 20173  01915A  0EFB               	movlw	-5
 20174  01915C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20175  019162  0EFC               	movlw	-4
 20176  019164  006F FF8C  F00B    	movff	plusw1,btemp+10
 20177  01916A  0EFD               	movlw	-3
 20178  01916C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20179  019172  0E20               	movlw	32
 20180  019174  D005               	goto	u7380
 20181  019176                     u7385:
 20182  019176  90D8               	bcf	status,0,c
 20183  019178  320C               	rrcf	(btemp+11)^0,f,c
 20184  01917A  320B               	rrcf	(btemp+10)^0,f,c
 20185  01917C  320A               	rrcf	(btemp+9)^0,f,c
 20186  01917E  3209               	rrcf	(btemp+8)^0,f,c
 20187  019180                     u7380:
 20188  019180  2EE8               	decfsz	wreg,f,c
 20189  019182  D7F9               	goto	u7385
 20190                           
 20191                           ;stkvar	_sign1 @ sp[(-2)+1]
 20192  019184  0EFF               	movlw	-1
 20193  019186  0060  F027  FFE3   	movff	btemp+8,plusw1
 20194                           
 20195                           ;stkvar	_f1 @ sp[(-2)+-4]
 20196  01918C  0EFC               	movlw	-4
 20197  01918E  8EE3               	bsf	plusw1,7,c
 20198                           
 20199                           ;stkvar	_f1 @ sp[(-2)+-4]
 20200  019190  50E1               	movf	fsr1l,w,c
 20201  019192  0FFA               	addlw	-6
 20202  019194  6ED9               	movwf	fsr2l,c
 20203  019196  50E2               	movf	fsr1h,w,c
 20204  019198  6EDA               	movwf	fsr2h,c
 20205  01919A  0EFF               	movlw	255
 20206  01919C  22DA               	addwfc	fsr2h,f,c
 20207  01919E  0EFF               	movlw	255
 20208  0191A0  16DE               	andwf	postinc2,f,c
 20209  0191A2  0EFF               	movlw	255
 20210  0191A4  16DE               	andwf	postinc2,f,c
 20211  0191A6  0EFF               	movlw	255
 20212  0191A8  16DE               	andwf	postinc2,f,c
 20213  0191AA  0E00               	movlw	0
 20214  0191AC  16DE               	andwf	postinc2,f,c
 20215                           
 20216                           ;stkvar	_exp1 @ sp[(-2)+0]
 20217  0191AE  0EFE               	movlw	-2
 20218  0191B0  006F FF8C  F001    	movff	plusw1,btemp
 20219  0191B6  0E96               	movlw	150
 20220  0191B8  5E01               	subwf	btemp^0,f,c
 20221  0191BA  0EFE               	movlw	-2
 20222  0191BC  0060  F007  FFE3   	movff	btemp,plusw1
 20223                           
 20224                           ;stkvar	_exp1 @ sp[(-2)+0]
 20225  0191C2  0EFE               	movlw	-2
 20226  0191C4  AEE3               	btfss	plusw1,7,c
 20227  0191C6  D014               	goto	l8908
 20228                           
 20229                           ;stkvar	_exp1 @ sp[(-2)+0]
 20230  0191C8  0EFE               	movlw	-2
 20231  0191CA  50E3               	movf	plusw1,w,c
 20232  0191CC  0A80               	xorlw	128
 20233  0191CE  0F97               	addlw	151
 20234  0191D0  A0D8               	btfss	status,0,c
 20235  0191D2  D7B9               	goto	u7370
 20236  0191D4                     l8906:
 20237                           
 20238                           ;stkvar	_f1 @ sp[(-2)+-4]
 20239  0191D4  90D8               	bcf	status,0,c
 20240  0191D6  0EFD               	movlw	-3
 20241  0191D8  32E3               	rrcf	plusw1,f,c
 20242  0191DA  0EFC               	movlw	-4
 20243  0191DC  32E3               	rrcf	plusw1,f,c
 20244  0191DE  0EFB               	movlw	-5
 20245  0191E0  32E3               	rrcf	plusw1,f,c
 20246  0191E2  0EFA               	movlw	-6
 20247  0191E4  32E3               	rrcf	plusw1,f,c
 20248                           
 20249                           ;stkvar	_exp1 @ sp[(-2)+0]
 20250  0191E6  0EFE               	movlw	-2
 20251  0191E8  2AE3               	incf	plusw1,f,c
 20252  0191EA  B4D8               	btfsc	status,2,c
 20253  0191EC  D018               	goto	u7430
 20254  0191EE  D7F2               	goto	l8906
 20255  0191F0                     l8908:
 20256                           
 20257                           ;stkvar	_exp1 @ sp[(-2)+0]
 20258  0191F0  0EFE               	movlw	-2
 20259  0191F2  006F FF8C  F001    	movff	plusw1,btemp
 20260  0191F8  0E1F               	movlw	31
 20261  0191FA  6401               	cpfsgt	btemp^0,c
 20262  0191FC  D00C               	goto	l8916
 20263  0191FE  D7A3               	goto	u7370
 20264  019200                     l8914:
 20265                           
 20266                           ;stkvar	_f1 @ sp[(-2)+-4]
 20267  019200  90D8               	bcf	status,0,c
 20268  019202  0EFA               	movlw	-6
 20269  019204  36E3               	rlcf	plusw1,f,c
 20270  019206  0EFB               	movlw	-5
 20271  019208  36E3               	rlcf	plusw1,f,c
 20272  01920A  0EFC               	movlw	-4
 20273  01920C  36E3               	rlcf	plusw1,f,c
 20274  01920E  0EFD               	movlw	-3
 20275  019210  36E3               	rlcf	plusw1,f,c
 20276                           
 20277                           ;stkvar	_exp1 @ sp[(-2)+0]
 20278  019212  0EFE               	movlw	-2
 20279  019214  06E3               	decf	plusw1,f,c
 20280  019216                     l8916:
 20281                           
 20282                           ;stkvar	_exp1 @ sp[(-2)+0]
 20283  019216  0EFE               	movlw	-2
 20284  019218  50E3               	movf	plusw1,w,c
 20285  01921A  A4D8               	btfss	status,2,c
 20286  01921C  D7F1               	goto	l8914
 20287  01921E                     u7430:
 20288                           
 20289                           ;stkvar	_sign1 @ sp[(-2)+1]
 20290  01921E  0EFF               	movlw	-1
 20291  019220  50E3               	movf	plusw1,w,c
 20292  019222  B4D8               	btfsc	status,2,c
 20293  019224  D011               	goto	u7450
 20294                           
 20295                           ;stkvar	_f1 @ sp[(-2)+-4]
 20296                           ;stkvar	_f1 @ sp[(-2)+-4]
 20297  019226  0EFA               	movlw	-6
 20298  019228  6CE3               	negf	plusw1,c
 20299  01922A  0EFB               	movlw	-5
 20300  01922C  1EE3               	comf	plusw1,f,c
 20301  01922E  0EFC               	movlw	-4
 20302  019230  1EE3               	comf	plusw1,f,c
 20303  019232  0EFD               	movlw	-3
 20304  019234  1EE3               	comf	plusw1,f,c
 20305  019236  E308               	bnc	u7450
 20306  019238  0EFB               	movlw	-5
 20307  01923A  2AE3               	incf	plusw1,f,c
 20308  01923C  E305               	bnc	u7450
 20309  01923E  0EFC               	movlw	-4
 20310  019240  2AE3               	incf	plusw1,f,c
 20311  019242  E302               	bnc	u7450
 20312  019244  0EFD               	movlw	-3
 20313  019246  2AE3               	incf	plusw1,f,c
 20314  019248                     u7450:
 20315                           
 20316                           ;stkvar	_f1 @ sp[(-2)+-4]
 20317  019248  0EFA               	movlw	-6
 20318  01924A  006F FF8C  F001    	movff	plusw1,btemp
 20319  019250  0EFB               	movlw	-5
 20320  019252  006F FF8C  F002    	movff	plusw1,btemp+1
 20321  019258  0EFC               	movlw	-4
 20322  01925A  006F FF8C  F003    	movff	plusw1,btemp+2
 20323  019260  0EFD               	movlw	-3
 20324  019262  006F FF8C  F004    	movff	plusw1,btemp+3
 20325  019268                     l2806:
 20326                           
 20327                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20328  019268  0EFA               	movlw	250
 20329  01926A  26E1               	addwf	fsr1l,f,c
 20330  01926C  0EFF               	movlw	255
 20331  01926E  22E2               	addwfc	fsr1h,f,c
 20332  019270  0012               	return		;funcret
 20333  019272                     __end_of___fltol:
 20334                           	opt callstack 0
 20335                           
 20336 ;; *************** function ___flneg *****************
 20337 ;; Defined at:
 20338 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20339 ;; Parameters:    Size  Location     Type
 20340 ;;  f1              4  [STACK] long 
 20341 ;; Auto vars:     Size  Location     Type
 20342 ;;		None
 20343 ;; Return value:  Size  Location     Type
 20344 ;;                  4  [STACK] long 
 20345 ;; Registers used:
 20346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20347 ;; Tracked objects:
 20348 ;;		On entry : 0/0
 20349 ;;		On exit  : 0/0
 20350 ;;		Unchanged: 0/0
 20351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20356 ;;Total ram usage:        0 bytes
 20357 ;; Hardware stack levels used:    1
 20358 ;; Hardware stack levels required when called:   15
 20359 ;; This function calls:
 20360 ;;		Nothing
 20361 ;; This function is called by:
 20362 ;;		_calc_bsoc
 20363 ;;		_efgtoa
 20364 ;; This function uses a reentrant model
 20365 ;;
 20366                           
 20367                           	psect	text70
 20368  01B9EE                     __ptext70:
 20369                           	opt callstack 0
 20370  01B9EE                     ___flneg:
 20371                           	opt callstack 0
 20372                           
 20373                           ;stkvar	_f1 @ sp[(0)+-4]
 20374                           
 20375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20376                           ;incstack = 0
 20377 ;; hardware stack exceeded
 20378  01B9EE  0EFC               	movlw	-4
 20379  01B9F0  50E3               	movf	plusw1,w,c
 20380  01B9F2  E10A               	bnz	u7350
 20381  01B9F4  0EFD               	movlw	-3
 20382  01B9F6  50E3               	movf	plusw1,w,c
 20383  01B9F8  E107               	bnz	u7350
 20384  01B9FA  0EFE               	movlw	-2
 20385  01B9FC  50E3               	movf	plusw1,w,c
 20386  01B9FE  E104               	bnz	u7350
 20387  01BA00  0EFF               	movlw	-1
 20388  01BA02  50E3               	movf	plusw1,w,c
 20389  01BA04  B4D8               	btfsc	status,2,c
 20390  01BA06  D002               	goto	l8880
 20391  01BA08                     u7350:
 20392                           
 20393                           ;stkvar	_f1 @ sp[(0)+-4]
 20394  01BA08  0EFF               	movlw	-1
 20395  01BA0A  7EE3               	btg	plusw1,7,c
 20396  01BA0C                     l8880:
 20397                           
 20398                           ;stkvar	_f1 @ sp[(0)+-4]
 20399  01BA0C  0EFC               	movlw	-4
 20400  01BA0E  006F FF8C  F001    	movff	plusw1,btemp
 20401  01BA14  0EFD               	movlw	-3
 20402  01BA16  006F FF8C  F002    	movff	plusw1,btemp+1
 20403  01BA1C  0EFE               	movlw	-2
 20404  01BA1E  006F FF8C  F003    	movff	plusw1,btemp+2
 20405  01BA24  0EFF               	movlw	-1
 20406  01BA26  006F FF8C  F004    	movff	plusw1,btemp+3
 20407                           
 20408                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20409  01BA2C  52E5               	movf	postdec1,f,c
 20410  01BA2E  52E5               	movf	postdec1,f,c
 20411  01BA30  52E5               	movf	postdec1,f,c
 20412  01BA32  52E5               	movf	postdec1,f,c
 20413  01BA34  0012               	return		;funcret
 20414  01BA36                     __end_of___flneg:
 20415                           	opt callstack 0
 20416                           
 20417 ;; *************** function ___fleq *****************
 20418 ;; Defined at:
 20419 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20420 ;; Parameters:    Size  Location     Type
 20421 ;;  ff1             4  [STACK] long 
 20422 ;;  ff2             4  [STACK] long 
 20423 ;; Auto vars:     Size  Location     Type
 20424 ;;		None
 20425 ;; Return value:  Size  Location     Type
 20426 ;;		None               void
 20427 ;; Registers used:
 20428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20429 ;; Tracked objects:
 20430 ;;		On entry : 0/0
 20431 ;;		On exit  : 0/0
 20432 ;;		Unchanged: 0/0
 20433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20438 ;;Total ram usage:        0 bytes
 20439 ;; Hardware stack levels used:    1
 20440 ;; Hardware stack levels required when called:   15
 20441 ;; This function calls:
 20442 ;;		Nothing
 20443 ;; This function is called by:
 20444 ;;		_efgtoa
 20445 ;; This function uses a reentrant model
 20446 ;;
 20447                           
 20448                           	psect	text71
 20449  01A736                     __ptext71:
 20450                           	opt callstack 0
 20451  01A736                     ___fleq:
 20452                           	opt callstack 0
 20453                           
 20454                           ;stkvar	_ff1 @ sp[(0)+-4]
 20455                           
 20456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20457                           ;incstack = 0
 20458 ;; hardware stack exceeded
 20459  01A736  50E1               	movf	fsr1l,w,c
 20460  01A738  0FFC               	addlw	-4
 20461  01A73A  6ED9               	movwf	fsr2l,c
 20462  01A73C  50E2               	movf	fsr1h,w,c
 20463  01A73E  6EDA               	movwf	fsr2h,c
 20464  01A740  0EFF               	movlw	255
 20465  01A742  22DA               	addwfc	fsr2h,f,c
 20466  01A744  0E00               	movlw	0
 20467  01A746  14DE               	andwf	postinc2,w,c
 20468  01A748  6E09               	movwf	(btemp+8)^0,c
 20469  01A74A  0E00               	movlw	0
 20470  01A74C  14DE               	andwf	postinc2,w,c
 20471  01A74E  6E0A               	movwf	(btemp+9)^0,c
 20472  01A750  0E80               	movlw	128
 20473  01A752  14DE               	andwf	postinc2,w,c
 20474  01A754  6E0B               	movwf	(btemp+10)^0,c
 20475  01A756  0E7F               	movlw	127
 20476  01A758  14DE               	andwf	postinc2,w,c
 20477  01A75A  6E0C               	movwf	(btemp+11)^0,c
 20478  01A75C  5009               	movf	(btemp+8)^0,w,c
 20479  01A75E  100A               	iorwf	(btemp+9)^0,w,c
 20480  01A760  100B               	iorwf	(btemp+10)^0,w,c
 20481  01A762  100C               	iorwf	(btemp+11)^0,w,c
 20482  01A764  A4D8               	btfss	status,2,c
 20483  01A766  D008               	goto	l8838
 20484                           
 20485                           ;stkvar	_ff1 @ sp[(0)+-4]
 20486  01A768  0EFC               	movlw	-4
 20487  01A76A  6AE3               	clrf	plusw1,c
 20488  01A76C  0EFD               	movlw	-3
 20489  01A76E  6AE3               	clrf	plusw1,c
 20490  01A770  0EFE               	movlw	-2
 20491  01A772  6AE3               	clrf	plusw1,c
 20492  01A774  0EFF               	movlw	-1
 20493  01A776  6AE3               	clrf	plusw1,c
 20494  01A778                     l8838:
 20495                           
 20496                           ;stkvar	_ff2 @ sp[(0)+-8]
 20497  01A778  50E1               	movf	fsr1l,w,c
 20498  01A77A  0FF8               	addlw	-8
 20499  01A77C  6ED9               	movwf	fsr2l,c
 20500  01A77E  50E2               	movf	fsr1h,w,c
 20501  01A780  6EDA               	movwf	fsr2h,c
 20502  01A782  0EFF               	movlw	255
 20503  01A784  22DA               	addwfc	fsr2h,f,c
 20504  01A786  0E00               	movlw	0
 20505  01A788  14DE               	andwf	postinc2,w,c
 20506  01A78A  6E09               	movwf	(btemp+8)^0,c
 20507  01A78C  0E00               	movlw	0
 20508  01A78E  14DE               	andwf	postinc2,w,c
 20509  01A790  6E0A               	movwf	(btemp+9)^0,c
 20510  01A792  0E80               	movlw	128
 20511  01A794  14DE               	andwf	postinc2,w,c
 20512  01A796  6E0B               	movwf	(btemp+10)^0,c
 20513  01A798  0E7F               	movlw	127
 20514  01A79A  14DE               	andwf	postinc2,w,c
 20515  01A79C  6E0C               	movwf	(btemp+11)^0,c
 20516  01A79E  5009               	movf	(btemp+8)^0,w,c
 20517  01A7A0  100A               	iorwf	(btemp+9)^0,w,c
 20518  01A7A2  100B               	iorwf	(btemp+10)^0,w,c
 20519  01A7A4  100C               	iorwf	(btemp+11)^0,w,c
 20520  01A7A6  A4D8               	btfss	status,2,c
 20521  01A7A8  D008               	goto	l8842
 20522                           
 20523                           ;stkvar	_ff2 @ sp[(0)+-8]
 20524  01A7AA  0EF8               	movlw	-8
 20525  01A7AC  6AE3               	clrf	plusw1,c
 20526  01A7AE  0EF9               	movlw	-7
 20527  01A7B0  6AE3               	clrf	plusw1,c
 20528  01A7B2  0EFA               	movlw	-6
 20529  01A7B4  6AE3               	clrf	plusw1,c
 20530  01A7B6  0EFB               	movlw	-5
 20531  01A7B8  6AE3               	clrf	plusw1,c
 20532  01A7BA                     l8842:
 20533                           
 20534                           ;stkvar	_ff2 @ sp[(0)+-8]
 20535                           ;stkvar	_ff1 @ sp[(0)+-4]
 20536  01A7BA  50E1               	movf	fsr1l,w,c
 20537  01A7BC  0FFC               	addlw	-4
 20538  01A7BE  6ED9               	movwf	fsr2l,c
 20539  01A7C0  50E2               	movf	fsr1h,w,c
 20540  01A7C2  6EDA               	movwf	fsr2h,c
 20541  01A7C4  0EFF               	movlw	255
 20542  01A7C6  22DA               	addwfc	fsr2h,f,c
 20543  01A7C8  0EF8               	movlw	-8
 20544  01A7CA  50E3               	movf	plusw1,w,c
 20545  01A7CC  18DE               	xorwf	postinc2,w,c
 20546  01A7CE  E10D               	bnz	u7290
 20547  01A7D0  0EF9               	movlw	-7
 20548  01A7D2  50E3               	movf	plusw1,w,c
 20549  01A7D4  18DE               	xorwf	postinc2,w,c
 20550  01A7D6  E109               	bnz	u7290
 20551  01A7D8  0EFA               	movlw	-6
 20552  01A7DA  50E3               	movf	plusw1,w,c
 20553  01A7DC  18DE               	xorwf	postinc2,w,c
 20554  01A7DE  E105               	bnz	u7290
 20555  01A7E0  0EFB               	movlw	-5
 20556  01A7E2  50E3               	movf	plusw1,w,c
 20557  01A7E4  18DE               	xorwf	postinc2,w,c
 20558  01A7E6  B4D8               	btfsc	status,2,c
 20559  01A7E8  D002               	goto	l8846
 20560  01A7EA                     u7290:
 20561  01A7EA  9001               	bcf	btemp& (0+255),0,c
 20562  01A7EC  D001               	goto	l2768
 20563  01A7EE                     l8846:
 20564  01A7EE  8001               	bsf	btemp& (0+255),0,c
 20565  01A7F0                     l2768:
 20566                           
 20567                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20568  01A7F0  0EF8               	movlw	248
 20569  01A7F2  26E1               	addwf	fsr1l,f,c
 20570  01A7F4  0EFF               	movlw	255
 20571  01A7F6  22E2               	addwfc	fsr1h,f,c
 20572  01A7F8  0012               	return		;funcret
 20573  01A7FA                     __end_of___fleq:
 20574                           	opt callstack 0
 20575                           
 20576 ;; *************** function ___awmod *****************
 20577 ;; Defined at:
 20578 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20579 ;; Parameters:    Size  Location     Type
 20580 ;;  dividend        2  [STACK] int 
 20581 ;;  divisor         2  [STACK] int 
 20582 ;; Auto vars:     Size  Location     Type
 20583 ;;  sign            1  [STACK] unsigned char 
 20584 ;;  counter         1  [STACK] unsigned char 
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  2  [STACK] int 
 20587 ;; Registers used:
 20588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20598 ;;Total ram usage:        0 bytes
 20599 ;; Hardware stack levels used:    1
 20600 ;; Hardware stack levels required when called:   15
 20601 ;; This function calls:
 20602 ;;		Nothing
 20603 ;; This function is called by:
 20604 ;;		_efgtoa
 20605 ;; This function uses a reentrant model
 20606 ;;
 20607                           
 20608                           	psect	text72
 20609  019DA8                     __ptext72:
 20610                           	opt callstack 0
 20611  019DA8                     ___awmod:
 20612                           	opt callstack 0
 20613                           
 20614                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20615  019DA8  52E6               	movf	postinc1,f,c
 20616  019DAA  52E6               	movf	postinc1,f,c
 20617                           
 20618                           ;stkvar	_sign @ sp[(-2)+0]
 20619                           
 20620                           ;incstack = 0
 20621 ;; hardware stack exceeded
 20622  019DAC  0EFE               	movlw	-2
 20623  019DAE  6AE3               	clrf	plusw1,c
 20624                           
 20625                           ;stkvar	_dividend @ sp[(-2)+-2]
 20626  019DB0  0EFD               	movlw	-3
 20627  019DB2  AEE3               	btfss	plusw1,7,c
 20628  019DB4  D009               	goto	l8804
 20629                           
 20630                           ;stkvar	_dividend @ sp[(-2)+-2]
 20631                           ;stkvar	_dividend @ sp[(-2)+-2]
 20632  019DB6  0EFC               	movlw	-4
 20633  019DB8  6CE3               	negf	plusw1,c
 20634  019DBA  0EFD               	movlw	-3
 20635  019DBC  1EE3               	comf	plusw1,f,c
 20636  019DBE  B0D8               	btfsc	status,0,c
 20637  019DC0  2AE3               	incf	plusw1,f,c
 20638                           
 20639                           ;stkvar	_sign @ sp[(-2)+0]
 20640  019DC2  0EFE               	movlw	-2
 20641  019DC4  6AE3               	clrf	plusw1,c
 20642  019DC6  2AE3               	incf	plusw1,f,c
 20643  019DC8                     l8804:
 20644                           
 20645                           ;stkvar	_divisor @ sp[(-2)+-4]
 20646  019DC8  0EFB               	movlw	-5
 20647  019DCA  AEE3               	btfss	plusw1,7,c
 20648  019DCC  D006               	goto	l8808
 20649                           
 20650                           ;stkvar	_divisor @ sp[(-2)+-4]
 20651                           ;stkvar	_divisor @ sp[(-2)+-4]
 20652  019DCE  0EFA               	movlw	-6
 20653  019DD0  6CE3               	negf	plusw1,c
 20654  019DD2  0EFB               	movlw	-5
 20655  019DD4  1EE3               	comf	plusw1,f,c
 20656  019DD6  B0D8               	btfsc	status,0,c
 20657  019DD8  2AE3               	incf	plusw1,f,c
 20658  019DDA                     l8808:
 20659                           
 20660                           ;stkvar	_divisor @ sp[(-2)+-4]
 20661  019DDA  0EFA               	movlw	-6
 20662  019DDC  006F FF8C  F001    	movff	plusw1,btemp
 20663  019DE2  0EFB               	movlw	-5
 20664  019DE4  50E3               	movf	plusw1,w,c
 20665  019DE6  1001               	iorwf	btemp^0,w,c
 20666  019DE8  B4D8               	btfsc	status,2,c
 20667  019DEA  D053               	goto	u7250
 20668                           
 20669                           ;stkvar	_counter @ sp[(-2)+1]
 20670  019DEC  0EFF               	movlw	-1
 20671  019DEE  6AE3               	clrf	plusw1,c
 20672  019DF0  D012               	goto	L23
 20673  019DF2                     l8812:
 20674                           
 20675                           ;stkvar	_divisor @ sp[(-2)+-4]
 20676  019DF2  0EFA               	movlw	-6
 20677  019DF4  50E3               	movf	plusw1,w,c
 20678  019DF6  90D8               	bcf	status,0,c
 20679  019DF8  34E8               	rlcf	wreg,w,c
 20680  019DFA  6E01               	movwf	btemp^0,c
 20681  019DFC  0EFA               	movlw	-6
 20682  019DFE  0060  F007  FFE3   	movff	btemp,plusw1
 20683  019E04  0EFB               	movlw	-5
 20684  019E06  50E3               	movf	plusw1,w,c
 20685  019E08  34E8               	rlcf	wreg,w,c
 20686  019E0A  6E01               	movwf	btemp^0,c
 20687  019E0C  0EFB               	movlw	-5
 20688  019E0E  0060  F007  FFE3   	movff	btemp,plusw1
 20689                           
 20690                           ;stkvar	_counter @ sp[(-2)+1]
 20691  019E14  0EFF               	movlw	-1
 20692  019E16                     L23:
 20693  019E16  2AE3               	incf	plusw1,f,c
 20694                           
 20695                           ;stkvar	_divisor @ sp[(-2)+-4]
 20696  019E18  0EFB               	movlw	-5
 20697  019E1A  AEE3               	btfss	plusw1,7,c
 20698  019E1C  D7EA               	goto	l8812
 20699  019E1E                     u7230:
 20700                           
 20701                           ;stkvar	_divisor @ sp[(-2)+-4]
 20702  019E1E  0EFA               	movlw	-6
 20703  019E20  006F FF8C  F00B    	movff	plusw1,btemp+10
 20704  019E26  0EFB               	movlw	-5
 20705  019E28  006F FF8C  F00C    	movff	plusw1,btemp+11
 20706                           
 20707                           ;stkvar	_dividend @ sp[(-2)+-2]
 20708  019E2E  0EFC               	movlw	-4
 20709  019E30  006F FF8C  F009    	movff	plusw1,btemp+8
 20710  019E36  0EFD               	movlw	-3
 20711  019E38  006F FF8C  F00A    	movff	plusw1,btemp+9
 20712  019E3E  500B               	movf	(btemp+10)^0,w,c
 20713  019E40  5C09               	subwf	(btemp+8)^0,w,c
 20714  019E42  500C               	movf	(btemp+11)^0,w,c
 20715  019E44  580A               	subwfb	(btemp+9)^0,w,c
 20716  019E46  A0D8               	btfss	status,0,c
 20717  019E48  D014               	goto	l8822
 20718                           
 20719                           ;stkvar	_divisor @ sp[(-2)+-4]
 20720                           ;stkvar	_dividend @ sp[(-2)+-2]
 20721  019E4A  0EFC               	movlw	-4
 20722  019E4C  50E3               	movf	plusw1,w,c
 20723  019E4E  6E01               	movwf	btemp^0,c
 20724  019E50  0EFA               	movlw	-6
 20725  019E52  50E3               	movf	plusw1,w,c
 20726  019E54  5E01               	subwf	btemp^0,f,c
 20727  019E56  0EFC               	movlw	-4
 20728  019E58  0060  F007  FFE3   	movff	btemp,plusw1
 20729  019E5E  0EFD               	movlw	-3
 20730  019E60  50E3               	movf	plusw1,w,c
 20731  019E62  6E01               	movwf	btemp^0,c
 20732  019E64  0EFB               	movlw	-5
 20733  019E66  50E3               	movf	plusw1,w,c
 20734  019E68  5A01               	subwfb	btemp^0,f,c
 20735  019E6A  0EFD               	movlw	-3
 20736  019E6C  0060  F007  FFE3   	movff	btemp,plusw1
 20737  019E72                     l8822:
 20738                           
 20739                           ;stkvar	_divisor @ sp[(-2)+-4]
 20740  019E72  90D8               	bcf	status,0,c
 20741  019E74  0EFB               	movlw	-5
 20742  019E76  32E3               	rrcf	plusw1,f,c
 20743  019E78  0EFA               	movlw	-6
 20744  019E7A  32E3               	rrcf	plusw1,f,c
 20745                           
 20746                           ;stkvar	_counter @ sp[(-2)+1]
 20747  019E7C  0EFF               	movlw	-1
 20748  019E7E  50E3               	movf	plusw1,w,c
 20749  019E80  6E01               	movwf	btemp^0,c
 20750  019E82  0E01               	movlw	1
 20751  019E84  5E01               	subwf	btemp^0,f,c
 20752  019E86  0EFF               	movlw	-1
 20753  019E88  0060  F007  FFE3   	movff	btemp,plusw1
 20754  019E8E  A4D8               	btfss	status,2,c
 20755  019E90  D7C6               	goto	u7230
 20756  019E92                     u7250:
 20757                           
 20758                           ;stkvar	_sign @ sp[(-2)+0]
 20759  019E92  0EFE               	movlw	-2
 20760  019E94  50E3               	movf	plusw1,w,c
 20761  019E96  B4D8               	btfsc	status,2,c
 20762  019E98  D006               	goto	l8830
 20763                           
 20764                           ;stkvar	_dividend @ sp[(-2)+-2]
 20765                           ;stkvar	_dividend @ sp[(-2)+-2]
 20766  019E9A  0EFC               	movlw	-4
 20767  019E9C  6CE3               	negf	plusw1,c
 20768  019E9E  0EFD               	movlw	-3
 20769  019EA0  1EE3               	comf	plusw1,f,c
 20770  019EA2  B0D8               	btfsc	status,0,c
 20771  019EA4  2AE3               	incf	plusw1,f,c
 20772  019EA6                     l8830:
 20773                           
 20774                           ;stkvar	_dividend @ sp[(-2)+-2]
 20775  019EA6  0EFC               	movlw	-4
 20776  019EA8  006F FF8C  F001    	movff	plusw1,btemp
 20777  019EAE  0EFD               	movlw	-3
 20778  019EB0  006F FF8C  F002    	movff	plusw1,btemp+1
 20779                           
 20780                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20781  019EB6  0EFA               	movlw	250
 20782  019EB8  26E1               	addwf	fsr1l,f,c
 20783  019EBA  0EFF               	movlw	255
 20784  019EBC  22E2               	addwfc	fsr1h,f,c
 20785  019EBE  0012               	return		;funcret
 20786  019EC0                     __end_of___awmod:
 20787                           	opt callstack 0
 20788                           
 20789 ;; *************** function ___awdiv *****************
 20790 ;; Defined at:
 20791 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20792 ;; Parameters:    Size  Location     Type
 20793 ;;  dividend        2  [STACK] int 
 20794 ;;  divisor         2  [STACK] int 
 20795 ;; Auto vars:     Size  Location     Type
 20796 ;;  quotient        2  [STACK] int 
 20797 ;;  sign            1  [STACK] unsigned char 
 20798 ;;  counter         1  [STACK] unsigned char 
 20799 ;; Return value:  Size  Location     Type
 20800 ;;                  2  [STACK] int 
 20801 ;; Registers used:
 20802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20803 ;; Tracked objects:
 20804 ;;		On entry : 0/0
 20805 ;;		On exit  : 0/0
 20806 ;;		Unchanged: 0/0
 20807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20812 ;;Total ram usage:        0 bytes
 20813 ;; Hardware stack levels used:    1
 20814 ;; Hardware stack levels required when called:   15
 20815 ;; This function calls:
 20816 ;;		Nothing
 20817 ;; This function is called by:
 20818 ;;		_efgtoa
 20819 ;; This function uses a reentrant model
 20820 ;;
 20821                           
 20822                           	psect	text73
 20823  019536                     __ptext73:
 20824                           	opt callstack 0
 20825  019536                     ___awdiv:
 20826                           	opt callstack 0
 20827                           
 20828                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20829  019536  52E6               	movf	postinc1,f,c
 20830  019538  52E6               	movf	postinc1,f,c
 20831  01953A  52E6               	movf	postinc1,f,c
 20832  01953C  52E6               	movf	postinc1,f,c
 20833                           
 20834                           ;stkvar	_sign @ sp[(-4)+2]
 20835                           
 20836                           ;incstack = 0
 20837 ;; hardware stack exceeded
 20838  01953E  0EFE               	movlw	-2
 20839  019540  6AE3               	clrf	plusw1,c
 20840                           
 20841                           ;stkvar	_divisor @ sp[(-4)+-4]
 20842  019542  0EF9               	movlw	-7
 20843  019544  AEE3               	btfss	plusw1,7,c
 20844  019546  D009               	goto	l8758
 20845                           
 20846                           ;stkvar	_divisor @ sp[(-4)+-4]
 20847                           ;stkvar	_divisor @ sp[(-4)+-4]
 20848  019548  0EF8               	movlw	-8
 20849  01954A  6CE3               	negf	plusw1,c
 20850  01954C  0EF9               	movlw	-7
 20851  01954E  1EE3               	comf	plusw1,f,c
 20852  019550  B0D8               	btfsc	status,0,c
 20853  019552  2AE3               	incf	plusw1,f,c
 20854                           
 20855                           ;stkvar	_sign @ sp[(-4)+2]
 20856  019554  0EFE               	movlw	-2
 20857  019556  6AE3               	clrf	plusw1,c
 20858  019558  2AE3               	incf	plusw1,f,c
 20859  01955A                     l8758:
 20860                           
 20861                           ;stkvar	_dividend @ sp[(-4)+-2]
 20862  01955A  0EFB               	movlw	-5
 20863  01955C  AEE3               	btfss	plusw1,7,c
 20864  01955E  D008               	goto	l8764
 20865                           
 20866                           ;stkvar	_dividend @ sp[(-4)+-2]
 20867                           ;stkvar	_dividend @ sp[(-4)+-2]
 20868  019560  0EFA               	movlw	-6
 20869  019562  6CE3               	negf	plusw1,c
 20870  019564  0EFB               	movlw	-5
 20871  019566  1EE3               	comf	plusw1,f,c
 20872  019568  B0D8               	btfsc	status,0,c
 20873  01956A  2AE3               	incf	plusw1,f,c
 20874                           
 20875                           ;stkvar	_sign @ sp[(-4)+2]
 20876  01956C  0EFE               	movlw	-2
 20877  01956E  70E3               	btg	plusw1,0,c
 20878  019570                     l8764:
 20879                           
 20880                           ;stkvar	_quotient @ sp[(-4)+0]
 20881  019570  0EFC               	movlw	-4
 20882  019572  6AE3               	clrf	plusw1,c
 20883  019574  0EFD               	movlw	-3
 20884  019576  6AE3               	clrf	plusw1,c
 20885                           
 20886                           ;stkvar	_divisor @ sp[(-4)+-4]
 20887  019578  0EF8               	movlw	-8
 20888  01957A  006F FF8C  F001    	movff	plusw1,btemp
 20889  019580  0EF9               	movlw	-7
 20890  019582  50E3               	movf	plusw1,w,c
 20891  019584  1001               	iorwf	btemp^0,w,c
 20892  019586  B4D8               	btfsc	status,2,c
 20893  019588  D066               	goto	u7180
 20894                           
 20895                           ;stkvar	_counter @ sp[(-4)+3]
 20896  01958A  0EFF               	movlw	-1
 20897  01958C  6AE3               	clrf	plusw1,c
 20898  01958E  D012               	goto	L24
 20899  019590                     l8770:
 20900                           
 20901                           ;stkvar	_divisor @ sp[(-4)+-4]
 20902  019590  0EF8               	movlw	-8
 20903  019592  50E3               	movf	plusw1,w,c
 20904  019594  90D8               	bcf	status,0,c
 20905  019596  34E8               	rlcf	wreg,w,c
 20906  019598  6E01               	movwf	btemp^0,c
 20907  01959A  0EF8               	movlw	-8
 20908  01959C  0060  F007  FFE3   	movff	btemp,plusw1
 20909  0195A2  0EF9               	movlw	-7
 20910  0195A4  50E3               	movf	plusw1,w,c
 20911  0195A6  34E8               	rlcf	wreg,w,c
 20912  0195A8  6E01               	movwf	btemp^0,c
 20913  0195AA  0EF9               	movlw	-7
 20914  0195AC  0060  F007  FFE3   	movff	btemp,plusw1
 20915                           
 20916                           ;stkvar	_counter @ sp[(-4)+3]
 20917  0195B2  0EFF               	movlw	-1
 20918  0195B4                     L24:
 20919  0195B4  2AE3               	incf	plusw1,f,c
 20920                           
 20921                           ;stkvar	_divisor @ sp[(-4)+-4]
 20922  0195B6  0EF9               	movlw	-7
 20923  0195B8  AEE3               	btfss	plusw1,7,c
 20924  0195BA  D7EA               	goto	l8770
 20925  0195BC                     u7160:
 20926                           
 20927                           ;stkvar	_quotient @ sp[(-4)+0]
 20928  0195BC  0EFC               	movlw	-4
 20929  0195BE  50E3               	movf	plusw1,w,c
 20930  0195C0  90D8               	bcf	status,0,c
 20931  0195C2  34E8               	rlcf	wreg,w,c
 20932  0195C4  6E01               	movwf	btemp^0,c
 20933  0195C6  0EFC               	movlw	-4
 20934  0195C8  0060  F007  FFE3   	movff	btemp,plusw1
 20935  0195CE  0EFD               	movlw	-3
 20936  0195D0  50E3               	movf	plusw1,w,c
 20937  0195D2  34E8               	rlcf	wreg,w,c
 20938  0195D4  6E01               	movwf	btemp^0,c
 20939  0195D6  0EFD               	movlw	-3
 20940  0195D8  0060  F007  FFE3   	movff	btemp,plusw1
 20941                           
 20942                           ;stkvar	_divisor @ sp[(-4)+-4]
 20943  0195DE  0EF8               	movlw	-8
 20944  0195E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20945  0195E6  0EF9               	movlw	-7
 20946  0195E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20947                           
 20948                           ;stkvar	_dividend @ sp[(-4)+-2]
 20949  0195EE  0EFA               	movlw	-6
 20950  0195F0  006F FF8C  F009    	movff	plusw1,btemp+8
 20951  0195F6  0EFB               	movlw	-5
 20952  0195F8  006F FF8C  F00A    	movff	plusw1,btemp+9
 20953  0195FE  500B               	movf	(btemp+10)^0,w,c
 20954  019600  5C09               	subwf	(btemp+8)^0,w,c
 20955  019602  500C               	movf	(btemp+11)^0,w,c
 20956  019604  580A               	subwfb	(btemp+9)^0,w,c
 20957  019606  A0D8               	btfss	status,0,c
 20958  019608  D016               	goto	l8784
 20959                           
 20960                           ;stkvar	_divisor @ sp[(-4)+-4]
 20961                           ;stkvar	_dividend @ sp[(-4)+-2]
 20962  01960A  0EFA               	movlw	-6
 20963  01960C  50E3               	movf	plusw1,w,c
 20964  01960E  6E01               	movwf	btemp^0,c
 20965  019610  0EF8               	movlw	-8
 20966  019612  50E3               	movf	plusw1,w,c
 20967  019614  5E01               	subwf	btemp^0,f,c
 20968  019616  0EFA               	movlw	-6
 20969  019618  0060  F007  FFE3   	movff	btemp,plusw1
 20970  01961E  0EFB               	movlw	-5
 20971  019620  50E3               	movf	plusw1,w,c
 20972  019622  6E01               	movwf	btemp^0,c
 20973  019624  0EF9               	movlw	-7
 20974  019626  50E3               	movf	plusw1,w,c
 20975  019628  5A01               	subwfb	btemp^0,f,c
 20976  01962A  0EFB               	movlw	-5
 20977  01962C  0060  F007  FFE3   	movff	btemp,plusw1
 20978                           
 20979                           ;stkvar	_quotient @ sp[(-4)+0]
 20980  019632  0EFC               	movlw	-4
 20981  019634  80E3               	bsf	plusw1,0,c
 20982  019636                     l8784:
 20983                           
 20984                           ;stkvar	_divisor @ sp[(-4)+-4]
 20985  019636  90D8               	bcf	status,0,c
 20986  019638  0EF9               	movlw	-7
 20987  01963A  32E3               	rrcf	plusw1,f,c
 20988  01963C  0EF8               	movlw	-8
 20989  01963E  32E3               	rrcf	plusw1,f,c
 20990                           
 20991                           ;stkvar	_counter @ sp[(-4)+3]
 20992  019640  0EFF               	movlw	-1
 20993  019642  50E3               	movf	plusw1,w,c
 20994  019644  6E01               	movwf	btemp^0,c
 20995  019646  0E01               	movlw	1
 20996  019648  5E01               	subwf	btemp^0,f,c
 20997  01964A  0EFF               	movlw	-1
 20998  01964C  0060  F007  FFE3   	movff	btemp,plusw1
 20999  019652  A4D8               	btfss	status,2,c
 21000  019654  D7B3               	goto	u7160
 21001  019656                     u7180:
 21002                           
 21003                           ;stkvar	_sign @ sp[(-4)+2]
 21004  019656  0EFE               	movlw	-2
 21005  019658  50E3               	movf	plusw1,w,c
 21006  01965A  B4D8               	btfsc	status,2,c
 21007  01965C  D006               	goto	l8792
 21008                           
 21009                           ;stkvar	_quotient @ sp[(-4)+0]
 21010                           ;stkvar	_quotient @ sp[(-4)+0]
 21011  01965E  0EFC               	movlw	-4
 21012  019660  6CE3               	negf	plusw1,c
 21013  019662  0EFD               	movlw	-3
 21014  019664  1EE3               	comf	plusw1,f,c
 21015  019666  B0D8               	btfsc	status,0,c
 21016  019668  2AE3               	incf	plusw1,f,c
 21017  01966A                     l8792:
 21018                           
 21019                           ;stkvar	_quotient @ sp[(-4)+0]
 21020  01966A  0EFC               	movlw	-4
 21021  01966C  006F FF8C  F001    	movff	plusw1,btemp
 21022  019672  0EFD               	movlw	-3
 21023  019674  006F FF8C  F002    	movff	plusw1,btemp+1
 21024                           
 21025                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21026  01967A  0EF8               	movlw	248
 21027  01967C  26E1               	addwf	fsr1l,f,c
 21028  01967E  0EFF               	movlw	255
 21029  019680  22E2               	addwfc	fsr1h,f,c
 21030  019682  0012               	return		;funcret
 21031  019684                     __end_of___awdiv:
 21032                           	opt callstack 0
 21033                           
 21034 ;; *************** function _dtoa *****************
 21035 ;; Defined at:
 21036 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21037 ;; Parameters:    Size  Location     Type
 21038 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21039 ;;		 -> f(6), NULL(0), 
 21040 ;;  d               8  [STACK] long long 
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;  n               8  [STACK] long long 
 21043 ;;  i               2  [STACK] int 
 21044 ;;  s               2  [STACK] int 
 21045 ;;  w               2  [STACK] int 
 21046 ;;  p               2  [STACK] int 
 21047 ;; Return value:  Size  Location     Type
 21048 ;;                  2  [STACK] int 
 21049 ;; Registers used:
 21050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21051 ;; Tracked objects:
 21052 ;;		On entry : 0/0
 21053 ;;		On exit  : 0/0
 21054 ;;		Unchanged: 0/0
 21055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21060 ;;Total ram usage:        0 bytes
 21061 ;; Hardware stack levels used:    1
 21062 ;; Hardware stack levels required when called:   20
 21063 ;; This function calls:
 21064 ;;		___aodiv
 21065 ;;		___aomod
 21066 ;;		_abs
 21067 ;;		_pad
 21068 ;; This function is called by:
 21069 ;;		_vfpfcnvrt
 21070 ;; This function uses a reentrant model
 21071 ;;
 21072                           
 21073                           	psect	text74
 21074  01585C                     __ptext74:
 21075                           	opt callstack 0
 21076  01585C                     _dtoa:
 21077                           	opt callstack 0
 21078                           
 21079                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21080  01585C  0E12               	movlw	18
 21081  01585E  26E1               	addwf	fsr1l,f,c
 21082  015860  0E00               	movlw	0
 21083  015862  22E2               	addwfc	fsr1h,f,c
 21084                           
 21085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21086                           ;stkvar	_d @ sp[(-18)+-10]
 21087                           
 21088                           ;incstack = 0
 21089 ;; hardware stack exceeded
 21090  015864  0EE4               	movlw	228
 21091  015866  24E1               	addwf	fsr1l,w,c
 21092  015868  6ED9               	movwf	fsr2l,c
 21093  01586A  0EFF               	movlw	255
 21094  01586C  20E2               	addwfc	fsr1h,w,c
 21095  01586E  6EDA               	movwf	fsr2h,c
 21096                           
 21097                           ;stkvar	_n @ sp[(-18)+2]
 21098  015870  0E08               	movlw	8
 21099  015872  6E01               	movwf	btemp^0,c
 21100  015874  0EF0               	movlw	-16
 21101  015876                     us1120999:
 21102  015876  006F FF7B FFE3     	movff	postinc2,plusw1
 21103  01587C  28E8               	incf	wreg,w,c
 21104  01587E  2E01               	decfsz	btemp^0,f,c
 21105  015880  D7FA               	bra	us1120999
 21106                           
 21107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21108                           ;stkvar	_n @ sp[(-18)+2]
 21109  015882  0EF7               	movlw	-9
 21110  015884  AEE3               	btfss	plusw1,7,c
 21111  015886  D002               	goto	u11210
 21112  015888  0E01               	movlw	1
 21113  01588A  D001               	goto	u11220
 21114  01588C                     u11210:
 21115  01588C  0E00               	movlw	0
 21116  01588E                     u11220:
 21117  01588E  6E0B               	movwf	(btemp+10)^0,c
 21118  015890  6A0C               	clrf	(btemp+11)^0,c
 21119                           
 21120                           ;stkvar	_s @ sp[(-18)+12]
 21121  015892  0EFA               	movlw	-6
 21122  015894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21123  01589A  0EFB               	movlw	-5
 21124  01589C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21125                           
 21126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21127                           ;stkvar	_s @ sp[(-18)+12]
 21128  0158A2  0EFA               	movlw	-6
 21129  0158A4  006F FF8C  F001    	movff	plusw1,btemp
 21130  0158AA  0EFB               	movlw	-5
 21131  0158AC  50E3               	movf	plusw1,w,c
 21132  0158AE  1001               	iorwf	btemp^0,w,c
 21133  0158B0  B4D8               	btfsc	status,2,c
 21134  0158B2  D025               	goto	u11240
 21135                           
 21136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 21137                           ;stkvar	_n @ sp[(-18)+2]
 21138                           ;stkvar	_n @ sp[(-18)+2]
 21139  0158B4  0EF0               	movlw	-16
 21140  0158B6  6CE3               	negf	plusw1,c
 21141  0158B8  0EF1               	movlw	-15
 21142  0158BA  1EE3               	comf	plusw1,f,c
 21143  0158BC  0EF2               	movlw	-14
 21144  0158BE  1EE3               	comf	plusw1,f,c
 21145  0158C0  0EF3               	movlw	-13
 21146  0158C2  1EE3               	comf	plusw1,f,c
 21147  0158C4  0EF4               	movlw	-12
 21148  0158C6  1EE3               	comf	plusw1,f,c
 21149  0158C8  0EF5               	movlw	-11
 21150  0158CA  1EE3               	comf	plusw1,f,c
 21151  0158CC  0EF6               	movlw	-10
 21152  0158CE  1EE3               	comf	plusw1,f,c
 21153  0158D0  0EF7               	movlw	-9
 21154  0158D2  1EE3               	comf	plusw1,f,c
 21155  0158D4  E314               	bnc	u11240
 21156  0158D6  0EF1               	movlw	-15
 21157  0158D8  2AE3               	incf	plusw1,f,c
 21158  0158DA  E311               	bnc	u11240
 21159  0158DC  0EF2               	movlw	-14
 21160  0158DE  2AE3               	incf	plusw1,f,c
 21161  0158E0  E30E               	bnc	u11240
 21162  0158E2  0EF3               	movlw	-13
 21163  0158E4  2AE3               	incf	plusw1,f,c
 21164  0158E6  E30B               	bnc	u11240
 21165  0158E8  0EF4               	movlw	-12
 21166  0158EA  2AE3               	incf	plusw1,f,c
 21167  0158EC  E308               	bnc	u11240
 21168  0158EE  0EF5               	movlw	-11
 21169  0158F0  2AE3               	incf	plusw1,f,c
 21170  0158F2  E305               	bnc	u11240
 21171  0158F4  0EF6               	movlw	-10
 21172  0158F6  2AE3               	incf	plusw1,f,c
 21173  0158F8  E302               	bnc	u11240
 21174  0158FA  0EF7               	movlw	-9
 21175  0158FC  2AE3               	incf	plusw1,f,c
 21176  0158FE                     u11240:
 21177                           
 21178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 21179  0158FE  AE3D               	btfss	(_prec+1)^0,7,c
 21180                           
 21181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 21182  015900  923E               	bcf	_flags^0,1,c
 21183                           
 21184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 21185  015902  BE3D               	btfsc	(_prec+1)^0,7,c
 21186  015904  D005               	goto	u11260
 21187  015906  503D               	movf	(_prec+1)^0,w,c
 21188  015908  E110               	bnz	l12318
 21189  01590A  043C               	decf	_prec^0,w,c
 21190  01590C  B0D8               	btfsc	status,0,c
 21191  01590E  D00D               	goto	l12318
 21192  015910                     u11260:
 21193  015910  0E01               	movlw	1
 21194  015912  6E0B               	movwf	(btemp+10)^0,c
 21195  015914  0E00               	movlw	0
 21196  015916  6E0C               	movwf	(btemp+11)^0,c
 21197                           
 21198                           ;stkvar	_p @ sp[(-18)+16]
 21199  015918  0EFE               	movlw	-2
 21200  01591A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21201  015920  0EFF               	movlw	-1
 21202  015922  0060  F033  FFE3   	movff	btemp+11,plusw1
 21203  015928  D008               	goto	l2272
 21204  01592A                     l12318:
 21205                           
 21206                           ;stkvar	_p @ sp[(-18)+16]
 21207  01592A  0EFE               	movlw	-2
 21208  01592C  0060  F0F3  FFE3   	movff	_prec,plusw1
 21209  015932  0EFF               	movlw	-1
 21210  015934  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21211  01593A                     l2272:
 21212                           
 21213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 21214                           ;stkvar	_w @ sp[(-18)+14]
 21215  01593A  0EFC               	movlw	-4
 21216  01593C  0060  F0EB  FFE3   	movff	_width,plusw1
 21217  015942  0EFD               	movlw	-3
 21218  015944  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21219                           
 21220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 21221                           ;stkvar	_s @ sp[(-18)+12]
 21222  01594A  0EFA               	movlw	-6
 21223  01594C  006F FF8C  F001    	movff	plusw1,btemp
 21224  015952  0EFB               	movlw	-5
 21225  015954  50E3               	movf	plusw1,w,c
 21226  015956  1001               	iorwf	btemp^0,w,c
 21227  015958  A4D8               	btfss	status,2,c
 21228  01595A  D002               	goto	u11280
 21229  01595C  A43E               	btfss	_flags^0,2,c
 21230  01595E  D00A               	goto	l12326
 21231  015960                     u11280:
 21232                           
 21233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 21234                           ;stkvar	_w @ sp[(-18)+14]
 21235  015960  50E1               	movf	fsr1l,w,c
 21236  015962  0FFC               	addlw	-4
 21237  015964  6ED9               	movwf	fsr2l,c
 21238  015966  50E2               	movf	fsr1h,w,c
 21239  015968  6EDA               	movwf	fsr2h,c
 21240  01596A  0EFF               	movlw	255
 21241  01596C  22DA               	addwfc	fsr2h,f,c
 21242  01596E  06DE               	decf	postinc2,f,c
 21243  015970  0E00               	movlw	0
 21244  015972  5ADD               	subwfb	postdec2,f,c
 21245  015974                     l12326:
 21246                           
 21247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 21248  015974  0E4F               	movlw	79
 21249  015976  6E0B               	movwf	(btemp+10)^0,c
 21250  015978  0E00               	movlw	0
 21251  01597A  6E0C               	movwf	(btemp+11)^0,c
 21252                           
 21253                           ;stkvar	_i @ sp[(-18)+10]
 21254  01597C  0EF8               	movlw	-8
 21255  01597E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21256  015984  0EF9               	movlw	-7
 21257  015986  0060  F033  FFE3   	movff	btemp+11,plusw1
 21258                           
 21259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 21260  01598C  0102               	movlb	2	; () banked
 21261  01598E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 21262                           
 21263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21264  015990  D109               	goto	l12340
 21265  015992                     l12330:
 21266                           
 21267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 21268                           ;stkvar	_i @ sp[(-18)+10]
 21269  015992  50E1               	movf	fsr1l,w,c
 21270  015994  0FF8               	addlw	-8
 21271  015996  6ED9               	movwf	fsr2l,c
 21272  015998  50E2               	movf	fsr1h,w,c
 21273  01599A  6EDA               	movwf	fsr2h,c
 21274  01599C  0EFF               	movlw	255
 21275  01599E  22DA               	addwfc	fsr2h,f,c
 21276  0159A0  06DE               	decf	postinc2,f,c
 21277  0159A2  0E00               	movlw	0
 21278  0159A4  5ADD               	subwfb	postdec2,f,c
 21279                           
 21280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 21281  0159A6  0E0A               	movlw	10
 21282  0159A8  6EE6               	movwf	postinc1,c
 21283  0159AA  0E00               	movlw	0
 21284  0159AC  6EE6               	movwf	postinc1,c
 21285  0159AE  0E00               	movlw	0
 21286  0159B0  6EE6               	movwf	postinc1,c
 21287  0159B2  0E00               	movlw	0
 21288  0159B4  6EE6               	movwf	postinc1,c
 21289  0159B6  0E00               	movlw	0
 21290  0159B8  6EE6               	movwf	postinc1,c
 21291  0159BA  0E00               	movlw	0
 21292  0159BC  6EE6               	movwf	postinc1,c
 21293  0159BE  0E00               	movlw	0
 21294  0159C0  6EE6               	movwf	postinc1,c
 21295  0159C2  0E00               	movlw	0
 21296  0159C4  6EE6               	movwf	postinc1,c
 21297                           
 21298                           ;stkvar	_n @ sp[(-26)+2]
 21299  0159C6  50E1               	movf	fsr1l,w,c
 21300  0159C8  0FE8               	addlw	-24
 21301  0159CA  6ED9               	movwf	fsr2l,c
 21302  0159CC  50E2               	movf	fsr1h,w,c
 21303  0159CE  6EDA               	movwf	fsr2h,c
 21304  0159D0  0EFF               	movlw	255
 21305  0159D2  22DA               	addwfc	fsr2h,f,c
 21306  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 21307  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 21308  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 21309  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 21310  0159EC  006F FF7B FFE6     	movff	postinc2,postinc1
 21311  0159F2  006F FF7B FFE6     	movff	postinc2,postinc1
 21312  0159F8  006F FF7B FFE6     	movff	postinc2,postinc1
 21313  0159FE  006F FF7B FFE6     	movff	postinc2,postinc1
 21314  015A04  EC3B  F0BF         	call	___aomod	;wreg free
 21315  015A08  52E5               	movf	postdec1,f,c
 21316  015A0A  006F FF9C  F018    	movff	indf1,btemp+23
 21317  015A10  52E5               	movf	postdec1,f,c
 21318  015A12  006F FF9C  F017    	movff	indf1,btemp+22
 21319  015A18  52E5               	movf	postdec1,f,c
 21320  015A1A  006F FF9C  F016    	movff	indf1,btemp+21
 21321  015A20  52E5               	movf	postdec1,f,c
 21322  015A22  006F FF9C  F015    	movff	indf1,btemp+20
 21323  015A28  52E5               	movf	postdec1,f,c
 21324  015A2A  006F FF9C  F014    	movff	indf1,btemp+19
 21325  015A30  52E5               	movf	postdec1,f,c
 21326  015A32  006F FF9C  F013    	movff	indf1,btemp+18
 21327  015A38  52E5               	movf	postdec1,f,c
 21328  015A3A  006F FF9C  F012    	movff	indf1,btemp+17
 21329  015A40  52E5               	movf	postdec1,f,c
 21330  015A42  006F FF9C  F011    	movff	indf1,btemp+16
 21331  015A48  0EF8               	movlw	248
 21332  015A4A  26E1               	addwf	fsr1l,f,c
 21333  015A4C  0EFF               	movlw	255
 21334  015A4E  22E2               	addwfc	fsr1h,f,c
 21335  015A50  0060  F044  F00B   	movff	btemp+16,btemp+10
 21336  015A56  0060  F048  F00C   	movff	btemp+17,btemp+11
 21337  015A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21338  015A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 21339  015A68  EC87  F0DD         	call	_abs	;wreg free
 21340  015A6C  0E30               	movlw	48
 21341  015A6E  2601               	addwf	btemp^0,f,c
 21342                           
 21343                           ;stkvar	_i @ sp[(-18)+10]
 21344  015A70  0EF8               	movlw	-8
 21345  015A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 21346  015A78  0EF9               	movlw	-7
 21347  015A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21348  015A80  0E97               	movlw	low _dbuf
 21349  015A82  240B               	addwf	(btemp+10)^0,w,c
 21350  015A84  6ED9               	movwf	fsr2l,c
 21351  015A86  0E02               	movlw	high _dbuf
 21352  015A88  200C               	addwfc	(btemp+11)^0,w,c
 21353  015A8A  6EDA               	movwf	fsr2h,c
 21354  015A8C  0060  F007  FFDF   	movff	btemp,indf2
 21355                           
 21356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21357                           ;stkvar	_p @ sp[(-18)+16]
 21358  015A92  50E1               	movf	fsr1l,w,c
 21359  015A94  0FFE               	addlw	-2
 21360  015A96  6ED9               	movwf	fsr2l,c
 21361  015A98  50E2               	movf	fsr1h,w,c
 21362  015A9A  6EDA               	movwf	fsr2h,c
 21363  015A9C  0EFF               	movlw	255
 21364  015A9E  22DA               	addwfc	fsr2h,f,c
 21365  015AA0  06DE               	decf	postinc2,f,c
 21366  015AA2  0E00               	movlw	0
 21367  015AA4  5ADD               	subwfb	postdec2,f,c
 21368                           
 21369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21370                           ;stkvar	_w @ sp[(-18)+14]
 21371  015AA6  50E1               	movf	fsr1l,w,c
 21372  015AA8  0FFC               	addlw	-4
 21373  015AAA  6ED9               	movwf	fsr2l,c
 21374  015AAC  50E2               	movf	fsr1h,w,c
 21375  015AAE  6EDA               	movwf	fsr2h,c
 21376  015AB0  0EFF               	movlw	255
 21377  015AB2  22DA               	addwfc	fsr2h,f,c
 21378  015AB4  06DE               	decf	postinc2,f,c
 21379  015AB6  0E00               	movlw	0
 21380  015AB8  5ADD               	subwfb	postdec2,f,c
 21381                           
 21382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21383  015ABA  0E0A               	movlw	10
 21384  015ABC  6EE6               	movwf	postinc1,c
 21385  015ABE  0E00               	movlw	0
 21386  015AC0  6EE6               	movwf	postinc1,c
 21387  015AC2  0E00               	movlw	0
 21388  015AC4  6EE6               	movwf	postinc1,c
 21389  015AC6  0E00               	movlw	0
 21390  015AC8  6EE6               	movwf	postinc1,c
 21391  015ACA  0E00               	movlw	0
 21392  015ACC  6EE6               	movwf	postinc1,c
 21393  015ACE  0E00               	movlw	0
 21394  015AD0  6EE6               	movwf	postinc1,c
 21395  015AD2  0E00               	movlw	0
 21396  015AD4  6EE6               	movwf	postinc1,c
 21397  015AD6  0E00               	movlw	0
 21398  015AD8  6EE6               	movwf	postinc1,c
 21399                           
 21400                           ;stkvar	_n @ sp[(-26)+2]
 21401  015ADA  50E1               	movf	fsr1l,w,c
 21402  015ADC  0FE8               	addlw	-24
 21403  015ADE  6ED9               	movwf	fsr2l,c
 21404  015AE0  50E2               	movf	fsr1h,w,c
 21405  015AE2  6EDA               	movwf	fsr2h,c
 21406  015AE4  0EFF               	movlw	255
 21407  015AE6  22DA               	addwfc	fsr2h,f,c
 21408  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 21409  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 21410  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 21411  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 21412  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 21413  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 21414  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 21415  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 21416  015B18  EC9E  F0BB         	call	___aodiv	;wreg free
 21417  015B1C  52E5               	movf	postdec1,f,c
 21418  015B1E  006F FF9C  F018    	movff	indf1,btemp+23
 21419  015B24  52E5               	movf	postdec1,f,c
 21420  015B26  006F FF9C  F017    	movff	indf1,btemp+22
 21421  015B2C  52E5               	movf	postdec1,f,c
 21422  015B2E  006F FF9C  F016    	movff	indf1,btemp+21
 21423  015B34  52E5               	movf	postdec1,f,c
 21424  015B36  006F FF9C  F015    	movff	indf1,btemp+20
 21425  015B3C  52E5               	movf	postdec1,f,c
 21426  015B3E  006F FF9C  F014    	movff	indf1,btemp+19
 21427  015B44  52E5               	movf	postdec1,f,c
 21428  015B46  006F FF9C  F013    	movff	indf1,btemp+18
 21429  015B4C  52E5               	movf	postdec1,f,c
 21430  015B4E  006F FF9C  F012    	movff	indf1,btemp+17
 21431  015B54  52E5               	movf	postdec1,f,c
 21432  015B56  006F FF9C  F011    	movff	indf1,btemp+16
 21433  015B5C  0EF8               	movlw	248
 21434  015B5E  26E1               	addwf	fsr1l,f,c
 21435  015B60  0EFF               	movlw	255
 21436  015B62  22E2               	addwfc	fsr1h,f,c
 21437                           
 21438                           ;stkvar	_n @ sp[(-18)+2]
 21439  015B64  0EF0               	movlw	-16
 21440  015B66  0060  F047  FFE3   	movff	btemp+16,plusw1
 21441  015B6C  0EF1               	movlw	-15
 21442  015B6E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21443  015B74  0EF2               	movlw	-14
 21444  015B76  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21445  015B7C  0EF3               	movlw	-13
 21446  015B7E  0060  F053  FFE3   	movff	btemp+19,plusw1
 21447  015B84  0EF4               	movlw	-12
 21448  015B86  0060  F057  FFE3   	movff	btemp+20,plusw1
 21449  015B8C  0EF5               	movlw	-11
 21450  015B8E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21451  015B94  0EF6               	movlw	-10
 21452  015B96  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21453  015B9C  0EF7               	movlw	-9
 21454  015B9E  0060  F063  FFE3   	movff	btemp+23,plusw1
 21455  015BA4                     l12340:
 21456                           
 21457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21458                           ;stkvar	_i @ sp[(-18)+10]
 21459  015BA4  0EF9               	movlw	-7
 21460  015BA6  BEE3               	btfsc	plusw1,7,c
 21461  015BA8  D036               	goto	u11330
 21462  015BAA  0EF9               	movlw	-7
 21463  015BAC  50E3               	movf	plusw1,w,c
 21464  015BAE  E104               	bnz	u11290
 21465  015BB0  0EF8               	movlw	-8
 21466  015BB2  04E3               	decf	plusw1,w,c
 21467  015BB4  A0D8               	btfss	status,0,c
 21468  015BB6  D02F               	goto	u11330
 21469  015BB8                     u11290:
 21470                           
 21471                           ;stkvar	_n @ sp[(-18)+2]
 21472  015BB8  0EF0               	movlw	-16
 21473  015BBA  50E3               	movf	plusw1,w,c
 21474  015BBC  E115               	bnz	u11301
 21475  015BBE  0EF1               	movlw	-15
 21476  015BC0  50E3               	movf	plusw1,w,c
 21477  015BC2  E112               	bnz	u11301
 21478  015BC4  0EF2               	movlw	-14
 21479  015BC6  50E3               	movf	plusw1,w,c
 21480  015BC8  E10F               	bnz	u11301
 21481  015BCA  0EF3               	movlw	-13
 21482  015BCC  50E3               	movf	plusw1,w,c
 21483  015BCE  E10C               	bnz	u11301
 21484  015BD0  0EF4               	movlw	-12
 21485  015BD2  50E3               	movf	plusw1,w,c
 21486  015BD4  E109               	bnz	u11301
 21487  015BD6  0EF5               	movlw	-11
 21488  015BD8  50E3               	movf	plusw1,w,c
 21489  015BDA  E106               	bnz	u11301
 21490  015BDC  0EF6               	movlw	-10
 21491  015BDE  50E3               	movf	plusw1,w,c
 21492  015BE0  E103               	bnz	u11301
 21493  015BE2  0EF7               	movlw	-9
 21494  015BE4  50E3               	movf	plusw1,w,c
 21495  015BE6  A4D8               	btfss	status,2,c
 21496  015BE8                     u11301:
 21497  015BE8  D6D4               	goto	l12330
 21498                           
 21499                           ;stkvar	_p @ sp[(-18)+16]
 21500  015BEA  0EFF               	movlw	-1
 21501  015BEC  BEE3               	btfsc	plusw1,7,c
 21502  015BEE  D007               	goto	u11310
 21503  015BF0  0EFF               	movlw	-1
 21504  015BF2  50E3               	movf	plusw1,w,c
 21505  015BF4  E103               	bnz	u11311
 21506  015BF6  0EFE               	movlw	-2
 21507  015BF8  04E3               	decf	plusw1,w,c
 21508  015BFA  B0D8               	btfsc	status,0,c
 21509  015BFC                     u11311:
 21510  015BFC  D6CA               	goto	l12330
 21511  015BFE                     u11310:
 21512                           
 21513                           ;stkvar	_w @ sp[(-18)+14]
 21514  015BFE  0EFD               	movlw	-3
 21515  015C00  BEE3               	btfsc	plusw1,7,c
 21516  015C02  D009               	goto	u11330
 21517  015C04  0EFD               	movlw	-3
 21518  015C06  50E3               	movf	plusw1,w,c
 21519  015C08  E104               	bnz	u11320
 21520  015C0A  0EFC               	movlw	-4
 21521  015C0C  04E3               	decf	plusw1,w,c
 21522  015C0E  A0D8               	btfss	status,0,c
 21523  015C10  D002               	goto	u11330
 21524  015C12                     u11320:
 21525  015C12  B23E               	btfsc	_flags^0,1,c
 21526  015C14  D6BE               	goto	l12330
 21527  015C16                     u11330:
 21528                           
 21529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21530                           ;stkvar	_s @ sp[(-18)+12]
 21531  015C16  0EFA               	movlw	-6
 21532  015C18  006F FF8C  F001    	movff	plusw1,btemp
 21533  015C1E  0EFB               	movlw	-5
 21534  015C20  50E3               	movf	plusw1,w,c
 21535  015C22  1001               	iorwf	btemp^0,w,c
 21536  015C24  A4D8               	btfss	status,2,c
 21537  015C26  D002               	goto	u11350
 21538  015C28  A43E               	btfss	_flags^0,2,c
 21539  015C2A  D033               	goto	l12364
 21540  015C2C                     u11350:
 21541                           
 21542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21543                           ;stkvar	_i @ sp[(-18)+10]
 21544  015C2C  50E1               	movf	fsr1l,w,c
 21545  015C2E  0FF8               	addlw	-8
 21546  015C30  6ED9               	movwf	fsr2l,c
 21547  015C32  50E2               	movf	fsr1h,w,c
 21548  015C34  6EDA               	movwf	fsr2h,c
 21549  015C36  0EFF               	movlw	255
 21550  015C38  22DA               	addwfc	fsr2h,f,c
 21551  015C3A  06DE               	decf	postinc2,f,c
 21552  015C3C  0E00               	movlw	0
 21553  015C3E  5ADD               	subwfb	postdec2,f,c
 21554                           
 21555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21556                           ;stkvar	_s @ sp[(-18)+12]
 21557  015C40  0EFA               	movlw	-6
 21558  015C42  006F FF8C  F001    	movff	plusw1,btemp
 21559  015C48  0EFB               	movlw	-5
 21560  015C4A  50E3               	movf	plusw1,w,c
 21561  015C4C  1001               	iorwf	btemp^0,w,c
 21562  015C4E  A4D8               	btfss	status,2,c
 21563  015C50  D002               	goto	l12360
 21564  015C52  0E2B               	movlw	43
 21565  015C54  D001               	goto	L25
 21566  015C56                     l12360:
 21567  015C56  0E2D               	movlw	45
 21568  015C58                     L25:
 21569  015C58  6E0B               	movwf	(btemp+10)^0,c
 21570  015C5A  0E00               	movlw	0
 21571  015C5C  6E0C               	movwf	(btemp+11)^0,c
 21572                           
 21573                           ;stkvar	_dtoa$5817 @ sp[(-18)+0]
 21574  015C5E  0EEE               	movlw	-18
 21575  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21576  015C66  0EEF               	movlw	-17
 21577  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 21578                           
 21579                           ;stkvar	_dtoa$5817 @ sp[(-18)+0]
 21580                           ;stkvar	_i @ sp[(-18)+10]
 21581  015C6E  0EF8               	movlw	-8
 21582  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 21583  015C76  0EF9               	movlw	-7
 21584  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 21585  015C7E  0E97               	movlw	low _dbuf
 21586  015C80  240B               	addwf	(btemp+10)^0,w,c
 21587  015C82  6ED9               	movwf	fsr2l,c
 21588  015C84  0E02               	movlw	high _dbuf
 21589  015C86  200C               	addwfc	(btemp+11)^0,w,c
 21590  015C88  6EDA               	movwf	fsr2h,c
 21591  015C8A  0EEE               	movlw	-18
 21592  015C8C  006F FF8F FFDF     	movff	plusw1,indf2
 21593  015C92                     l12364:
 21594                           
 21595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21596                           ;stkvar	_w @ sp[(-18)+14]
 21597  015C92  0EFC               	movlw	-4
 21598  015C94  006F FF8F FFE6     	movff	plusw1,postinc1
 21599  015C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 21600                           
 21601                           ;stkvar	_i @ sp[(-20)+10]
 21602  015CA0  0E97               	movlw	low _dbuf
 21603  015CA2  6E0B               	movwf	(btemp+10)^0,c
 21604  015CA4  0E02               	movlw	high _dbuf
 21605  015CA6  6E0C               	movwf	(btemp+11)^0,c
 21606  015CA8  0EF6               	movlw	-10
 21607  015CAA  50E3               	movf	plusw1,w,c
 21608  015CAC  260B               	addwf	(btemp+10)^0,f,c
 21609  015CAE  0EF7               	movlw	-9
 21610  015CB0  50E3               	movf	plusw1,w,c
 21611  015CB2  220C               	addwfc	(btemp+11)^0,f,c
 21612  015CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21613  015CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 21614                           
 21615                           ;stkvar	_fp @ sp[(-22)+-2]
 21616  015CC0  0EE8               	movlw	-24
 21617  015CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21618  015CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21619  015CCE  EC60  F0CF         	call	_pad	;wreg free
 21620                           
 21621                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21622  015CD2  0EE4               	movlw	228
 21623  015CD4  26E1               	addwf	fsr1l,f,c
 21624  015CD6  0EFF               	movlw	255
 21625  015CD8  22E2               	addwfc	fsr1h,f,c
 21626  015CDA  0012               	return		;funcret
 21627  015CDC                     __end_of_dtoa:
 21628                           	opt callstack 0
 21629                           
 21630 ;; *************** function _abs *****************
 21631 ;; Defined at:
 21632 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21633 ;; Parameters:    Size  Location     Type
 21634 ;;  a               2  [STACK] int 
 21635 ;; Auto vars:     Size  Location     Type
 21636 ;;		None
 21637 ;; Return value:  Size  Location     Type
 21638 ;;                  2  [STACK] int 
 21639 ;; Registers used:
 21640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21641 ;; Tracked objects:
 21642 ;;		On entry : 0/2
 21643 ;;		On exit  : 0/0
 21644 ;;		Unchanged: 0/0
 21645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21650 ;;Total ram usage:        0 bytes
 21651 ;; Hardware stack levels used:    1
 21652 ;; Hardware stack levels required when called:   15
 21653 ;; This function calls:
 21654 ;;		Nothing
 21655 ;; This function is called by:
 21656 ;;		_dtoa
 21657 ;; This function uses a reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text75
 21661  01BB0E                     __ptext75:
 21662                           	opt callstack 0
 21663  01BB0E                     _abs:
 21664                           	opt callstack 0
 21665                           
 21666                           ;stkvar	_a @ sp[(0)+-2]
 21667                           
 21668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21669                           ;incstack = 0
 21670 ;; hardware stack exceeded
 21671  01BB0E  0EFF               	movlw	-1
 21672  01BB10  BEE3               	btfsc	plusw1,7,c
 21673  01BB12  D007               	goto	u6140
 21674  01BB14  0EFF               	movlw	-1
 21675  01BB16  50E3               	movf	plusw1,w,c
 21676  01BB18  E112               	bnz	l8246
 21677  01BB1A  0EFE               	movlw	-2
 21678  01BB1C  04E3               	decf	plusw1,w,c
 21679  01BB1E  B0D8               	btfsc	status,0,c
 21680  01BB20  D00E               	goto	l8246
 21681  01BB22                     u6140:
 21682                           
 21683                           ;stkvar	_a @ sp[(0)+-2]
 21684  01BB22  0EFE               	movlw	-2
 21685  01BB24  006F FF8C  F001    	movff	plusw1,btemp
 21686  01BB2A  1E01               	comf	btemp^0,f,c
 21687  01BB2C  0EFF               	movlw	-1
 21688  01BB2E  006F FF8C  F002    	movff	plusw1,btemp+1
 21689  01BB34  1E02               	comf	(btemp+1)^0,f,c
 21690  01BB36  2A01               	incf	btemp^0,f,c
 21691  01BB38  B4D8               	btfsc	status,2,c
 21692  01BB3A  2A02               	incf	(btemp+1)^0,f,c
 21693  01BB3C  D008               	goto	l3198
 21694  01BB3E                     l8246:
 21695                           
 21696                           ;stkvar	_a @ sp[(0)+-2]
 21697  01BB3E  0EFE               	movlw	-2
 21698  01BB40  006F FF8C  F001    	movff	plusw1,btemp
 21699  01BB46  0EFF               	movlw	-1
 21700  01BB48  006F FF8C  F002    	movff	plusw1,btemp+1
 21701  01BB4E                     l3198:
 21702                           
 21703                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21704  01BB4E  52E5               	movf	postdec1,f,c
 21705  01BB50  52E5               	movf	postdec1,f,c
 21706  01BB52  0012               	return		;funcret
 21707  01BB54                     __end_of_abs:
 21708                           	opt callstack 0
 21709                           
 21710 ;; *************** function ___aomod *****************
 21711 ;; Defined at:
 21712 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21713 ;; Parameters:    Size  Location     Type
 21714 ;;  dividend        8  [STACK] long long 
 21715 ;;  divisor         8  [STACK] long long 
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;  sign            1  [STACK] unsigned char 
 21718 ;;  counter         1  [STACK] unsigned char 
 21719 ;; Return value:  Size  Location     Type
 21720 ;;                  8  [STACK] long long 
 21721 ;; Registers used:
 21722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21723 ;; Tracked objects:
 21724 ;;		On entry : 0/2
 21725 ;;		On exit  : 0/0
 21726 ;;		Unchanged: 0/0
 21727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21732 ;;Total ram usage:        0 bytes
 21733 ;; Hardware stack levels used:    1
 21734 ;; Hardware stack levels required when called:   15
 21735 ;; This function calls:
 21736 ;;		Nothing
 21737 ;; This function is called by:
 21738 ;;		_dtoa
 21739 ;; This function uses a reentrant model
 21740 ;;
 21741                           
 21742                           	psect	text76
 21743  017E76                     __ptext76:
 21744                           	opt callstack 0
 21745  017E76                     ___aomod:
 21746                           	opt callstack 0
 21747                           
 21748                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21749  017E76  52E6               	movf	postinc1,f,c
 21750  017E78  52E6               	movf	postinc1,f,c
 21751                           
 21752                           ;stkvar	_sign @ sp[(-2)+0]
 21753                           
 21754                           ;incstack = 0
 21755 ;; hardware stack exceeded
 21756  017E7A  0EFE               	movlw	-2
 21757  017E7C  6AE3               	clrf	plusw1,c
 21758                           
 21759                           ;stkvar	_dividend @ sp[(-2)+-8]
 21760  017E7E  0EFD               	movlw	-3
 21761  017E80  AEE3               	btfss	plusw1,7,c
 21762  017E82  D028               	goto	l8404
 21763                           
 21764                           ;stkvar	_dividend @ sp[(-2)+-8]
 21765                           ;stkvar	_dividend @ sp[(-2)+-8]
 21766  017E84  0EF6               	movlw	-10
 21767  017E86  6CE3               	negf	plusw1,c
 21768  017E88  0EF7               	movlw	-9
 21769  017E8A  1EE3               	comf	plusw1,f,c
 21770  017E8C  0EF8               	movlw	-8
 21771  017E8E  1EE3               	comf	plusw1,f,c
 21772  017E90  0EF9               	movlw	-7
 21773  017E92  1EE3               	comf	plusw1,f,c
 21774  017E94  0EFA               	movlw	-6
 21775  017E96  1EE3               	comf	plusw1,f,c
 21776  017E98  0EFB               	movlw	-5
 21777  017E9A  1EE3               	comf	plusw1,f,c
 21778  017E9C  0EFC               	movlw	-4
 21779  017E9E  1EE3               	comf	plusw1,f,c
 21780  017EA0  0EFD               	movlw	-3
 21781  017EA2  1EE3               	comf	plusw1,f,c
 21782  017EA4  E314               	bnc	u6570
 21783  017EA6  0EF7               	movlw	-9
 21784  017EA8  2AE3               	incf	plusw1,f,c
 21785  017EAA  E311               	bnc	u6570
 21786  017EAC  0EF8               	movlw	-8
 21787  017EAE  2AE3               	incf	plusw1,f,c
 21788  017EB0  E30E               	bnc	u6570
 21789  017EB2  0EF9               	movlw	-7
 21790  017EB4  2AE3               	incf	plusw1,f,c
 21791  017EB6  E30B               	bnc	u6570
 21792  017EB8  0EFA               	movlw	-6
 21793  017EBA  2AE3               	incf	plusw1,f,c
 21794  017EBC  E308               	bnc	u6570
 21795  017EBE  0EFB               	movlw	-5
 21796  017EC0  2AE3               	incf	plusw1,f,c
 21797  017EC2  E305               	bnc	u6570
 21798  017EC4  0EFC               	movlw	-4
 21799  017EC6  2AE3               	incf	plusw1,f,c
 21800  017EC8  E302               	bnc	u6570
 21801  017ECA  0EFD               	movlw	-3
 21802  017ECC  2AE3               	incf	plusw1,f,c
 21803  017ECE                     u6570:
 21804                           
 21805                           ;stkvar	_sign @ sp[(-2)+0]
 21806  017ECE  0EFE               	movlw	-2
 21807  017ED0  6AE3               	clrf	plusw1,c
 21808  017ED2  2AE3               	incf	plusw1,f,c
 21809  017ED4                     l8404:
 21810                           
 21811                           ;stkvar	_divisor @ sp[(-2)+-16]
 21812  017ED4  0EF5               	movlw	-11
 21813  017ED6  AEE3               	btfss	plusw1,7,c
 21814  017ED8  D025               	goto	u6590
 21815                           
 21816                           ;stkvar	_divisor @ sp[(-2)+-16]
 21817                           ;stkvar	_divisor @ sp[(-2)+-16]
 21818  017EDA  0EEE               	movlw	-18
 21819  017EDC  6CE3               	negf	plusw1,c
 21820  017EDE  0EEF               	movlw	-17
 21821  017EE0  1EE3               	comf	plusw1,f,c
 21822  017EE2  0EF0               	movlw	-16
 21823  017EE4  1EE3               	comf	plusw1,f,c
 21824  017EE6  0EF1               	movlw	-15
 21825  017EE8  1EE3               	comf	plusw1,f,c
 21826  017EEA  0EF2               	movlw	-14
 21827  017EEC  1EE3               	comf	plusw1,f,c
 21828  017EEE  0EF3               	movlw	-13
 21829  017EF0  1EE3               	comf	plusw1,f,c
 21830  017EF2  0EF4               	movlw	-12
 21831  017EF4  1EE3               	comf	plusw1,f,c
 21832  017EF6  0EF5               	movlw	-11
 21833  017EF8  1EE3               	comf	plusw1,f,c
 21834  017EFA  E314               	bnc	u6590
 21835  017EFC  0EEF               	movlw	-17
 21836  017EFE  2AE3               	incf	plusw1,f,c
 21837  017F00  E311               	bnc	u6590
 21838  017F02  0EF0               	movlw	-16
 21839  017F04  2AE3               	incf	plusw1,f,c
 21840  017F06  E30E               	bnc	u6590
 21841  017F08  0EF1               	movlw	-15
 21842  017F0A  2AE3               	incf	plusw1,f,c
 21843  017F0C  E30B               	bnc	u6590
 21844  017F0E  0EF2               	movlw	-14
 21845  017F10  2AE3               	incf	plusw1,f,c
 21846  017F12  E308               	bnc	u6590
 21847  017F14  0EF3               	movlw	-13
 21848  017F16  2AE3               	incf	plusw1,f,c
 21849  017F18  E305               	bnc	u6590
 21850  017F1A  0EF4               	movlw	-12
 21851  017F1C  2AE3               	incf	plusw1,f,c
 21852  017F1E  E302               	bnc	u6590
 21853  017F20  0EF5               	movlw	-11
 21854  017F22  2AE3               	incf	plusw1,f,c
 21855  017F24                     u6590:
 21856                           
 21857                           ;stkvar	_divisor @ sp[(-2)+-16]
 21858  017F24  0EEE               	movlw	-18
 21859  017F26  50E3               	movf	plusw1,w,c
 21860  017F28  E116               	bnz	u6600
 21861  017F2A  0EEF               	movlw	-17
 21862  017F2C  50E3               	movf	plusw1,w,c
 21863  017F2E  E113               	bnz	u6600
 21864  017F30  0EF0               	movlw	-16
 21865  017F32  50E3               	movf	plusw1,w,c
 21866  017F34  E110               	bnz	u6600
 21867  017F36  0EF1               	movlw	-15
 21868  017F38  50E3               	movf	plusw1,w,c
 21869  017F3A  E10D               	bnz	u6600
 21870  017F3C  0EF2               	movlw	-14
 21871  017F3E  50E3               	movf	plusw1,w,c
 21872  017F40  E10A               	bnz	u6600
 21873  017F42  0EF3               	movlw	-13
 21874  017F44  50E3               	movf	plusw1,w,c
 21875  017F46  E107               	bnz	u6600
 21876  017F48  0EF4               	movlw	-12
 21877  017F4A  50E3               	movf	plusw1,w,c
 21878  017F4C  E104               	bnz	u6600
 21879  017F4E  0EF5               	movlw	-11
 21880  017F50  50E3               	movf	plusw1,w,c
 21881  017F52  B4D8               	btfsc	status,2,c
 21882  017F54  D075               	goto	u6630
 21883  017F56                     u6600:
 21884                           
 21885                           ;stkvar	_counter @ sp[(-2)+1]
 21886  017F56  0EFF               	movlw	-1
 21887  017F58  6AE3               	clrf	plusw1,c
 21888  017F5A  D012               	goto	L26
 21889  017F5C                     l8412:
 21890                           
 21891                           ;stkvar	_divisor @ sp[(-2)+-16]
 21892  017F5C  90D8               	bcf	status,0,c
 21893  017F5E  0EEE               	movlw	-18
 21894  017F60  36E3               	rlcf	plusw1,f,c
 21895  017F62  0EEF               	movlw	-17
 21896  017F64  36E3               	rlcf	plusw1,f,c
 21897  017F66  0EF0               	movlw	-16
 21898  017F68  36E3               	rlcf	plusw1,f,c
 21899  017F6A  0EF1               	movlw	-15
 21900  017F6C  36E3               	rlcf	plusw1,f,c
 21901  017F6E  0EF2               	movlw	-14
 21902  017F70  36E3               	rlcf	plusw1,f,c
 21903  017F72  0EF3               	movlw	-13
 21904  017F74  36E3               	rlcf	plusw1,f,c
 21905  017F76  0EF4               	movlw	-12
 21906  017F78  36E3               	rlcf	plusw1,f,c
 21907  017F7A  0EF5               	movlw	-11
 21908  017F7C  36E3               	rlcf	plusw1,f,c
 21909                           
 21910                           ;stkvar	_counter @ sp[(-2)+1]
 21911  017F7E  0EFF               	movlw	-1
 21912  017F80                     L26:
 21913  017F80  2AE3               	incf	plusw1,f,c
 21914                           
 21915                           ;stkvar	_divisor @ sp[(-2)+-16]
 21916  017F82  0EF5               	movlw	-11
 21917  017F84  AEE3               	btfss	plusw1,7,c
 21918  017F86  D7EA               	goto	l8412
 21919  017F88                     u6610:
 21920                           
 21921                           ;stkvar	_divisor @ sp[(-2)+-16]
 21922                           ;stkvar	_dividend @ sp[(-2)+-8]
 21923  017F88  50E1               	movf	fsr1l,w,c
 21924  017F8A  0FF6               	addlw	-10
 21925  017F8C  6ED9               	movwf	fsr2l,c
 21926  017F8E  50E2               	movf	fsr1h,w,c
 21927  017F90  6EDA               	movwf	fsr2h,c
 21928  017F92  0EFF               	movlw	255
 21929  017F94  22DA               	addwfc	fsr2h,f,c
 21930  017F96  0EEE               	movlw	-18
 21931  017F98  50E3               	movf	plusw1,w,c
 21932  017F9A  5CDE               	subwf	postinc2,w,c
 21933  017F9C  0EEF               	movlw	-17
 21934  017F9E  50E3               	movf	plusw1,w,c
 21935  017FA0  58DE               	subwfb	postinc2,w,c
 21936  017FA2  0EF0               	movlw	-16
 21937  017FA4  50E3               	movf	plusw1,w,c
 21938  017FA6  58DE               	subwfb	postinc2,w,c
 21939  017FA8  0EF1               	movlw	-15
 21940  017FAA  50E3               	movf	plusw1,w,c
 21941  017FAC  58DE               	subwfb	postinc2,w,c
 21942  017FAE  0EF2               	movlw	-14
 21943  017FB0  50E3               	movf	plusw1,w,c
 21944  017FB2  58DE               	subwfb	postinc2,w,c
 21945  017FB4  0EF3               	movlw	-13
 21946  017FB6  50E3               	movf	plusw1,w,c
 21947  017FB8  58DE               	subwfb	postinc2,w,c
 21948  017FBA  0EF4               	movlw	-12
 21949  017FBC  50E3               	movf	plusw1,w,c
 21950  017FBE  58DE               	subwfb	postinc2,w,c
 21951  017FC0  0EF5               	movlw	-11
 21952  017FC2  50E3               	movf	plusw1,w,c
 21953  017FC4  58DE               	subwfb	postinc2,w,c
 21954  017FC6  A0D8               	btfss	status,0,c
 21955  017FC8  D01F               	goto	l8420
 21956                           
 21957                           ;stkvar	_divisor @ sp[(-2)+-16]
 21958                           ;stkvar	_dividend @ sp[(-2)+-8]
 21959  017FCA  50E1               	movf	fsr1l,w,c
 21960  017FCC  0FF6               	addlw	-10
 21961  017FCE  6ED9               	movwf	fsr2l,c
 21962  017FD0  50E2               	movf	fsr1h,w,c
 21963  017FD2  6EDA               	movwf	fsr2h,c
 21964  017FD4  0EFF               	movlw	255
 21965  017FD6  22DA               	addwfc	fsr2h,f,c
 21966  017FD8  0EEE               	movlw	-18
 21967  017FDA  50E3               	movf	plusw1,w,c
 21968  017FDC  5EDE               	subwf	postinc2,f,c
 21969  017FDE  0EEF               	movlw	-17
 21970  017FE0  50E3               	movf	plusw1,w,c
 21971  017FE2  5ADE               	subwfb	postinc2,f,c
 21972  017FE4  0EF0               	movlw	-16
 21973  017FE6  50E3               	movf	plusw1,w,c
 21974  017FE8  5ADE               	subwfb	postinc2,f,c
 21975  017FEA  0EF1               	movlw	-15
 21976  017FEC  50E3               	movf	plusw1,w,c
 21977  017FEE  5ADE               	subwfb	postinc2,f,c
 21978  017FF0  0EF2               	movlw	-14
 21979  017FF2  50E3               	movf	plusw1,w,c
 21980  017FF4  5ADE               	subwfb	postinc2,f,c
 21981  017FF6  0EF3               	movlw	-13
 21982  017FF8  50E3               	movf	plusw1,w,c
 21983  017FFA  5ADE               	subwfb	postinc2,f,c
 21984  017FFC  0EF4               	movlw	-12
 21985  017FFE  50E3               	movf	plusw1,w,c
 21986  018000  5ADE               	subwfb	postinc2,f,c
 21987  018002  0EF5               	movlw	-11
 21988  018004  50E3               	movf	plusw1,w,c
 21989  018006  5ADE               	subwfb	postinc2,f,c
 21990  018008                     l8420:
 21991                           
 21992                           ;stkvar	_divisor @ sp[(-2)+-16]
 21993  018008  90D8               	bcf	status,0,c
 21994  01800A  0EF5               	movlw	-11
 21995  01800C  32E3               	rrcf	plusw1,f,c
 21996  01800E  0EF4               	movlw	-12
 21997  018010  32E3               	rrcf	plusw1,f,c
 21998  018012  0EF3               	movlw	-13
 21999  018014  32E3               	rrcf	plusw1,f,c
 22000  018016  0EF2               	movlw	-14
 22001  018018  32E3               	rrcf	plusw1,f,c
 22002  01801A  0EF1               	movlw	-15
 22003  01801C  32E3               	rrcf	plusw1,f,c
 22004  01801E  0EF0               	movlw	-16
 22005  018020  32E3               	rrcf	plusw1,f,c
 22006  018022  0EEF               	movlw	-17
 22007  018024  32E3               	rrcf	plusw1,f,c
 22008  018026  0EEE               	movlw	-18
 22009  018028  32E3               	rrcf	plusw1,f,c
 22010                           
 22011                           ;stkvar	_counter @ sp[(-2)+1]
 22012  01802A  0EFF               	movlw	-1
 22013  01802C  50E3               	movf	plusw1,w,c
 22014  01802E  6E01               	movwf	btemp^0,c
 22015  018030  0E01               	movlw	1
 22016  018032  5E01               	subwf	btemp^0,f,c
 22017  018034  0EFF               	movlw	-1
 22018  018036  0060  F007  FFE3   	movff	btemp,plusw1
 22019  01803C  A4D8               	btfss	status,2,c
 22020  01803E  D7A4               	goto	u6610
 22021  018040                     u6630:
 22022                           
 22023                           ;stkvar	_sign @ sp[(-2)+0]
 22024  018040  0EFE               	movlw	-2
 22025  018042  50E3               	movf	plusw1,w,c
 22026  018044  B4D8               	btfsc	status,2,c
 22027  018046  D025               	goto	u6650
 22028                           
 22029                           ;stkvar	_dividend @ sp[(-2)+-8]
 22030                           ;stkvar	_dividend @ sp[(-2)+-8]
 22031  018048  0EF6               	movlw	-10
 22032  01804A  6CE3               	negf	plusw1,c
 22033  01804C  0EF7               	movlw	-9
 22034  01804E  1EE3               	comf	plusw1,f,c
 22035  018050  0EF8               	movlw	-8
 22036  018052  1EE3               	comf	plusw1,f,c
 22037  018054  0EF9               	movlw	-7
 22038  018056  1EE3               	comf	plusw1,f,c
 22039  018058  0EFA               	movlw	-6
 22040  01805A  1EE3               	comf	plusw1,f,c
 22041  01805C  0EFB               	movlw	-5
 22042  01805E  1EE3               	comf	plusw1,f,c
 22043  018060  0EFC               	movlw	-4
 22044  018062  1EE3               	comf	plusw1,f,c
 22045  018064  0EFD               	movlw	-3
 22046  018066  1EE3               	comf	plusw1,f,c
 22047  018068  E314               	bnc	u6650
 22048  01806A  0EF7               	movlw	-9
 22049  01806C  2AE3               	incf	plusw1,f,c
 22050  01806E  E311               	bnc	u6650
 22051  018070  0EF8               	movlw	-8
 22052  018072  2AE3               	incf	plusw1,f,c
 22053  018074  E30E               	bnc	u6650
 22054  018076  0EF9               	movlw	-7
 22055  018078  2AE3               	incf	plusw1,f,c
 22056  01807A  E30B               	bnc	u6650
 22057  01807C  0EFA               	movlw	-6
 22058  01807E  2AE3               	incf	plusw1,f,c
 22059  018080  E308               	bnc	u6650
 22060  018082  0EFB               	movlw	-5
 22061  018084  2AE3               	incf	plusw1,f,c
 22062  018086  E305               	bnc	u6650
 22063  018088  0EFC               	movlw	-4
 22064  01808A  2AE3               	incf	plusw1,f,c
 22065  01808C  E302               	bnc	u6650
 22066  01808E  0EFD               	movlw	-3
 22067  018090  2AE3               	incf	plusw1,f,c
 22068  018092                     u6650:
 22069                           
 22070                           ;stkvar	_dividend @ sp[(-2)+-8]
 22071  018092  0EF6               	movlw	246
 22072  018094  24E1               	addwf	fsr1l,w,c
 22073  018096  6ED9               	movwf	fsr2l,c
 22074  018098  0EFF               	movlw	255
 22075  01809A  20E2               	addwfc	fsr1h,w,c
 22076  01809C  6EDA               	movwf	fsr2h,c
 22077                           
 22078                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22079  01809E  0E08               	movlw	8
 22080  0180A0  6E01               	movwf	btemp^0,c
 22081  0180A2  0EF6               	movlw	-10
 22082  0180A4                     us666999:
 22083  0180A4  006F FF7B FFE3     	movff	postinc2,plusw1
 22084  0180AA  28E8               	incf	wreg,w,c
 22085  0180AC  2E01               	decfsz	btemp^0,f,c
 22086  0180AE  D7FA               	bra	us666999
 22087                           
 22088                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22089  0180B0  52E5               	movf	postdec1,f,c
 22090  0180B2  52E5               	movf	postdec1,f,c
 22091  0180B4  0012               	return		;funcret
 22092  0180B6                     __end_of___aomod:
 22093                           	opt callstack 0
 22094                           
 22095 ;; *************** function ___aodiv *****************
 22096 ;; Defined at:
 22097 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 22098 ;; Parameters:    Size  Location     Type
 22099 ;;  dividend        8  [STACK] long long 
 22100 ;;  divisor         8  [STACK] long long 
 22101 ;; Auto vars:     Size  Location     Type
 22102 ;;  quotient        8  [STACK] long long 
 22103 ;;  sign            1  [STACK] unsigned char 
 22104 ;;  counter         1  [STACK] unsigned char 
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  8  [STACK] long long 
 22107 ;; Registers used:
 22108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22109 ;; Tracked objects:
 22110 ;;		On entry : 0/2
 22111 ;;		On exit  : 0/0
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;Total ram usage:        0 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; Hardware stack levels required when called:   15
 22121 ;; This function calls:
 22122 ;;		Nothing
 22123 ;; This function is called by:
 22124 ;;		_dtoa
 22125 ;; This function uses a reentrant model
 22126 ;;
 22127                           
 22128                           	psect	text77
 22129  01773C                     __ptext77:
 22130                           	opt callstack 0
 22131  01773C                     ___aodiv:
 22132                           	opt callstack 0
 22133                           
 22134                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22135  01773C  0E0A               	movlw	10
 22136  01773E  26E1               	addwf	fsr1l,f,c
 22137  017740  0E00               	movlw	0
 22138  017742  22E2               	addwfc	fsr1h,f,c
 22139                           
 22140                           ;stkvar	_sign @ sp[(-10)+8]
 22141                           
 22142                           ;incstack = 0
 22143 ;; hardware stack exceeded
 22144  017744  0EFE               	movlw	-2
 22145  017746  6AE3               	clrf	plusw1,c
 22146                           
 22147                           ;stkvar	_divisor @ sp[(-10)+-16]
 22148  017748  0EED               	movlw	-19
 22149  01774A  AEE3               	btfss	plusw1,7,c
 22150  01774C  D028               	goto	l8360
 22151                           
 22152                           ;stkvar	_divisor @ sp[(-10)+-16]
 22153                           ;stkvar	_divisor @ sp[(-10)+-16]
 22154  01774E  0EE6               	movlw	-26
 22155  017750  6CE3               	negf	plusw1,c
 22156  017752  0EE7               	movlw	-25
 22157  017754  1EE3               	comf	plusw1,f,c
 22158  017756  0EE8               	movlw	-24
 22159  017758  1EE3               	comf	plusw1,f,c
 22160  01775A  0EE9               	movlw	-23
 22161  01775C  1EE3               	comf	plusw1,f,c
 22162  01775E  0EEA               	movlw	-22
 22163  017760  1EE3               	comf	plusw1,f,c
 22164  017762  0EEB               	movlw	-21
 22165  017764  1EE3               	comf	plusw1,f,c
 22166  017766  0EEC               	movlw	-20
 22167  017768  1EE3               	comf	plusw1,f,c
 22168  01776A  0EED               	movlw	-19
 22169  01776C  1EE3               	comf	plusw1,f,c
 22170  01776E  E314               	bnc	u6450
 22171  017770  0EE7               	movlw	-25
 22172  017772  2AE3               	incf	plusw1,f,c
 22173  017774  E311               	bnc	u6450
 22174  017776  0EE8               	movlw	-24
 22175  017778  2AE3               	incf	plusw1,f,c
 22176  01777A  E30E               	bnc	u6450
 22177  01777C  0EE9               	movlw	-23
 22178  01777E  2AE3               	incf	plusw1,f,c
 22179  017780  E30B               	bnc	u6450
 22180  017782  0EEA               	movlw	-22
 22181  017784  2AE3               	incf	plusw1,f,c
 22182  017786  E308               	bnc	u6450
 22183  017788  0EEB               	movlw	-21
 22184  01778A  2AE3               	incf	plusw1,f,c
 22185  01778C  E305               	bnc	u6450
 22186  01778E  0EEC               	movlw	-20
 22187  017790  2AE3               	incf	plusw1,f,c
 22188  017792  E302               	bnc	u6450
 22189  017794  0EED               	movlw	-19
 22190  017796  2AE3               	incf	plusw1,f,c
 22191  017798                     u6450:
 22192                           
 22193                           ;stkvar	_sign @ sp[(-10)+8]
 22194  017798  0EFE               	movlw	-2
 22195  01779A  6AE3               	clrf	plusw1,c
 22196  01779C  2AE3               	incf	plusw1,f,c
 22197  01779E                     l8360:
 22198                           
 22199                           ;stkvar	_dividend @ sp[(-10)+-8]
 22200  01779E  0EF5               	movlw	-11
 22201  0177A0  AEE3               	btfss	plusw1,7,c
 22202  0177A2  D027               	goto	l8366
 22203                           
 22204                           ;stkvar	_dividend @ sp[(-10)+-8]
 22205                           ;stkvar	_dividend @ sp[(-10)+-8]
 22206  0177A4  0EEE               	movlw	-18
 22207  0177A6  6CE3               	negf	plusw1,c
 22208  0177A8  0EEF               	movlw	-17
 22209  0177AA  1EE3               	comf	plusw1,f,c
 22210  0177AC  0EF0               	movlw	-16
 22211  0177AE  1EE3               	comf	plusw1,f,c
 22212  0177B0  0EF1               	movlw	-15
 22213  0177B2  1EE3               	comf	plusw1,f,c
 22214  0177B4  0EF2               	movlw	-14
 22215  0177B6  1EE3               	comf	plusw1,f,c
 22216  0177B8  0EF3               	movlw	-13
 22217  0177BA  1EE3               	comf	plusw1,f,c
 22218  0177BC  0EF4               	movlw	-12
 22219  0177BE  1EE3               	comf	plusw1,f,c
 22220  0177C0  0EF5               	movlw	-11
 22221  0177C2  1EE3               	comf	plusw1,f,c
 22222  0177C4  E314               	bnc	u6470
 22223  0177C6  0EEF               	movlw	-17
 22224  0177C8  2AE3               	incf	plusw1,f,c
 22225  0177CA  E311               	bnc	u6470
 22226  0177CC  0EF0               	movlw	-16
 22227  0177CE  2AE3               	incf	plusw1,f,c
 22228  0177D0  E30E               	bnc	u6470
 22229  0177D2  0EF1               	movlw	-15
 22230  0177D4  2AE3               	incf	plusw1,f,c
 22231  0177D6  E30B               	bnc	u6470
 22232  0177D8  0EF2               	movlw	-14
 22233  0177DA  2AE3               	incf	plusw1,f,c
 22234  0177DC  E308               	bnc	u6470
 22235  0177DE  0EF3               	movlw	-13
 22236  0177E0  2AE3               	incf	plusw1,f,c
 22237  0177E2  E305               	bnc	u6470
 22238  0177E4  0EF4               	movlw	-12
 22239  0177E6  2AE3               	incf	plusw1,f,c
 22240  0177E8  E302               	bnc	u6470
 22241  0177EA  0EF5               	movlw	-11
 22242  0177EC  2AE3               	incf	plusw1,f,c
 22243  0177EE                     u6470:
 22244                           
 22245                           ;stkvar	_sign @ sp[(-10)+8]
 22246  0177EE  0EFE               	movlw	-2
 22247  0177F0  70E3               	btg	plusw1,0,c
 22248  0177F2                     l8366:
 22249                           
 22250                           ;stkvar	_quotient @ sp[(-10)+0]
 22251  0177F2  0E07               	movlw	7
 22252  0177F4  6E01               	movwf	btemp^0,c
 22253  0177F6  0EF6               	movlw	-10
 22254  0177F8                     u6481:
 22255  0177F8  6AE3               	clrf	plusw1,c
 22256  0177FA  2AE8               	incf	wreg,f,c
 22257  0177FC  0601               	decf	btemp^0,f,c
 22258  0177FE  E2FC               	bc	u6481
 22259                           
 22260                           ;stkvar	_divisor @ sp[(-10)+-16]
 22261  017800  0EE6               	movlw	-26
 22262  017802  50E3               	movf	plusw1,w,c
 22263  017804  E116               	bnz	u6490
 22264  017806  0EE7               	movlw	-25
 22265  017808  50E3               	movf	plusw1,w,c
 22266  01780A  E113               	bnz	u6490
 22267  01780C  0EE8               	movlw	-24
 22268  01780E  50E3               	movf	plusw1,w,c
 22269  017810  E110               	bnz	u6490
 22270  017812  0EE9               	movlw	-23
 22271  017814  50E3               	movf	plusw1,w,c
 22272  017816  E10D               	bnz	u6490
 22273  017818  0EEA               	movlw	-22
 22274  01781A  50E3               	movf	plusw1,w,c
 22275  01781C  E10A               	bnz	u6490
 22276  01781E  0EEB               	movlw	-21
 22277  017820  50E3               	movf	plusw1,w,c
 22278  017822  E107               	bnz	u6490
 22279  017824  0EEC               	movlw	-20
 22280  017826  50E3               	movf	plusw1,w,c
 22281  017828  E104               	bnz	u6490
 22282  01782A  0EED               	movlw	-19
 22283  01782C  50E3               	movf	plusw1,w,c
 22284  01782E  B4D8               	btfsc	status,2,c
 22285  017830  D088               	goto	u6520
 22286  017832                     u6490:
 22287                           
 22288                           ;stkvar	_counter @ sp[(-10)+9]
 22289  017832  0EFF               	movlw	-1
 22290  017834  6AE3               	clrf	plusw1,c
 22291  017836  D012               	goto	L27
 22292  017838                     l8372:
 22293                           
 22294                           ;stkvar	_divisor @ sp[(-10)+-16]
 22295  017838  90D8               	bcf	status,0,c
 22296  01783A  0EE6               	movlw	-26
 22297  01783C  36E3               	rlcf	plusw1,f,c
 22298  01783E  0EE7               	movlw	-25
 22299  017840  36E3               	rlcf	plusw1,f,c
 22300  017842  0EE8               	movlw	-24
 22301  017844  36E3               	rlcf	plusw1,f,c
 22302  017846  0EE9               	movlw	-23
 22303  017848  36E3               	rlcf	plusw1,f,c
 22304  01784A  0EEA               	movlw	-22
 22305  01784C  36E3               	rlcf	plusw1,f,c
 22306  01784E  0EEB               	movlw	-21
 22307  017850  36E3               	rlcf	plusw1,f,c
 22308  017852  0EEC               	movlw	-20
 22309  017854  36E3               	rlcf	plusw1,f,c
 22310  017856  0EED               	movlw	-19
 22311  017858  36E3               	rlcf	plusw1,f,c
 22312                           
 22313                           ;stkvar	_counter @ sp[(-10)+9]
 22314  01785A  0EFF               	movlw	-1
 22315  01785C                     L27:
 22316  01785C  2AE3               	incf	plusw1,f,c
 22317                           
 22318                           ;stkvar	_divisor @ sp[(-10)+-16]
 22319  01785E  0EED               	movlw	-19
 22320  017860  AEE3               	btfss	plusw1,7,c
 22321  017862  D7EA               	goto	l8372
 22322  017864                     u6500:
 22323                           
 22324                           ;stkvar	_quotient @ sp[(-10)+0]
 22325  017864  90D8               	bcf	status,0,c
 22326  017866  0EF6               	movlw	-10
 22327  017868  36E3               	rlcf	plusw1,f,c
 22328  01786A  0EF7               	movlw	-9
 22329  01786C  36E3               	rlcf	plusw1,f,c
 22330  01786E  0EF8               	movlw	-8
 22331  017870  36E3               	rlcf	plusw1,f,c
 22332  017872  0EF9               	movlw	-7
 22333  017874  36E3               	rlcf	plusw1,f,c
 22334  017876  0EFA               	movlw	-6
 22335  017878  36E3               	rlcf	plusw1,f,c
 22336  01787A  0EFB               	movlw	-5
 22337  01787C  36E3               	rlcf	plusw1,f,c
 22338  01787E  0EFC               	movlw	-4
 22339  017880  36E3               	rlcf	plusw1,f,c
 22340  017882  0EFD               	movlw	-3
 22341  017884  36E3               	rlcf	plusw1,f,c
 22342                           
 22343                           ;stkvar	_divisor @ sp[(-10)+-16]
 22344                           ;stkvar	_dividend @ sp[(-10)+-8]
 22345  017886  50E1               	movf	fsr1l,w,c
 22346  017888  0FEE               	addlw	-18
 22347  01788A  6ED9               	movwf	fsr2l,c
 22348  01788C  50E2               	movf	fsr1h,w,c
 22349  01788E  6EDA               	movwf	fsr2h,c
 22350  017890  0EFF               	movlw	255
 22351  017892  22DA               	addwfc	fsr2h,f,c
 22352  017894  0EE6               	movlw	-26
 22353  017896  50E3               	movf	plusw1,w,c
 22354  017898  5CDE               	subwf	postinc2,w,c
 22355  01789A  0EE7               	movlw	-25
 22356  01789C  50E3               	movf	plusw1,w,c
 22357  01789E  58DE               	subwfb	postinc2,w,c
 22358  0178A0  0EE8               	movlw	-24
 22359  0178A2  50E3               	movf	plusw1,w,c
 22360  0178A4  58DE               	subwfb	postinc2,w,c
 22361  0178A6  0EE9               	movlw	-23
 22362  0178A8  50E3               	movf	plusw1,w,c
 22363  0178AA  58DE               	subwfb	postinc2,w,c
 22364  0178AC  0EEA               	movlw	-22
 22365  0178AE  50E3               	movf	plusw1,w,c
 22366  0178B0  58DE               	subwfb	postinc2,w,c
 22367  0178B2  0EEB               	movlw	-21
 22368  0178B4  50E3               	movf	plusw1,w,c
 22369  0178B6  58DE               	subwfb	postinc2,w,c
 22370  0178B8  0EEC               	movlw	-20
 22371  0178BA  50E3               	movf	plusw1,w,c
 22372  0178BC  58DE               	subwfb	postinc2,w,c
 22373  0178BE  0EED               	movlw	-19
 22374  0178C0  50E3               	movf	plusw1,w,c
 22375  0178C2  58DE               	subwfb	postinc2,w,c
 22376  0178C4  A0D8               	btfss	status,0,c
 22377  0178C6  D021               	goto	l8384
 22378                           
 22379                           ;stkvar	_divisor @ sp[(-10)+-16]
 22380                           ;stkvar	_dividend @ sp[(-10)+-8]
 22381  0178C8  50E1               	movf	fsr1l,w,c
 22382  0178CA  0FEE               	addlw	-18
 22383  0178CC  6ED9               	movwf	fsr2l,c
 22384  0178CE  50E2               	movf	fsr1h,w,c
 22385  0178D0  6EDA               	movwf	fsr2h,c
 22386  0178D2  0EFF               	movlw	255
 22387  0178D4  22DA               	addwfc	fsr2h,f,c
 22388  0178D6  0EE6               	movlw	-26
 22389  0178D8  50E3               	movf	plusw1,w,c
 22390  0178DA  5EDE               	subwf	postinc2,f,c
 22391  0178DC  0EE7               	movlw	-25
 22392  0178DE  50E3               	movf	plusw1,w,c
 22393  0178E0  5ADE               	subwfb	postinc2,f,c
 22394  0178E2  0EE8               	movlw	-24
 22395  0178E4  50E3               	movf	plusw1,w,c
 22396  0178E6  5ADE               	subwfb	postinc2,f,c
 22397  0178E8  0EE9               	movlw	-23
 22398  0178EA  50E3               	movf	plusw1,w,c
 22399  0178EC  5ADE               	subwfb	postinc2,f,c
 22400  0178EE  0EEA               	movlw	-22
 22401  0178F0  50E3               	movf	plusw1,w,c
 22402  0178F2  5ADE               	subwfb	postinc2,f,c
 22403  0178F4  0EEB               	movlw	-21
 22404  0178F6  50E3               	movf	plusw1,w,c
 22405  0178F8  5ADE               	subwfb	postinc2,f,c
 22406  0178FA  0EEC               	movlw	-20
 22407  0178FC  50E3               	movf	plusw1,w,c
 22408  0178FE  5ADE               	subwfb	postinc2,f,c
 22409  017900  0EED               	movlw	-19
 22410  017902  50E3               	movf	plusw1,w,c
 22411  017904  5ADE               	subwfb	postinc2,f,c
 22412                           
 22413                           ;stkvar	_quotient @ sp[(-10)+0]
 22414  017906  0EF6               	movlw	-10
 22415  017908  80E3               	bsf	plusw1,0,c
 22416  01790A                     l8384:
 22417                           
 22418                           ;stkvar	_divisor @ sp[(-10)+-16]
 22419  01790A  90D8               	bcf	status,0,c
 22420  01790C  0EED               	movlw	-19
 22421  01790E  32E3               	rrcf	plusw1,f,c
 22422  017910  0EEC               	movlw	-20
 22423  017912  32E3               	rrcf	plusw1,f,c
 22424  017914  0EEB               	movlw	-21
 22425  017916  32E3               	rrcf	plusw1,f,c
 22426  017918  0EEA               	movlw	-22
 22427  01791A  32E3               	rrcf	plusw1,f,c
 22428  01791C  0EE9               	movlw	-23
 22429  01791E  32E3               	rrcf	plusw1,f,c
 22430  017920  0EE8               	movlw	-24
 22431  017922  32E3               	rrcf	plusw1,f,c
 22432  017924  0EE7               	movlw	-25
 22433  017926  32E3               	rrcf	plusw1,f,c
 22434  017928  0EE6               	movlw	-26
 22435  01792A  32E3               	rrcf	plusw1,f,c
 22436                           
 22437                           ;stkvar	_counter @ sp[(-10)+9]
 22438  01792C  0EFF               	movlw	-1
 22439  01792E  50E3               	movf	plusw1,w,c
 22440  017930  6E01               	movwf	btemp^0,c
 22441  017932  0E01               	movlw	1
 22442  017934  5E01               	subwf	btemp^0,f,c
 22443  017936  0EFF               	movlw	-1
 22444  017938  0060  F007  FFE3   	movff	btemp,plusw1
 22445  01793E  A4D8               	btfss	status,2,c
 22446  017940  D791               	goto	u6500
 22447  017942                     u6520:
 22448                           
 22449                           ;stkvar	_sign @ sp[(-10)+8]
 22450  017942  0EFE               	movlw	-2
 22451  017944  50E3               	movf	plusw1,w,c
 22452  017946  B4D8               	btfsc	status,2,c
 22453  017948  D025               	goto	u6540
 22454                           
 22455                           ;stkvar	_quotient @ sp[(-10)+0]
 22456                           ;stkvar	_quotient @ sp[(-10)+0]
 22457  01794A  0EF6               	movlw	-10
 22458  01794C  6CE3               	negf	plusw1,c
 22459  01794E  0EF7               	movlw	-9
 22460  017950  1EE3               	comf	plusw1,f,c
 22461  017952  0EF8               	movlw	-8
 22462  017954  1EE3               	comf	plusw1,f,c
 22463  017956  0EF9               	movlw	-7
 22464  017958  1EE3               	comf	plusw1,f,c
 22465  01795A  0EFA               	movlw	-6
 22466  01795C  1EE3               	comf	plusw1,f,c
 22467  01795E  0EFB               	movlw	-5
 22468  017960  1EE3               	comf	plusw1,f,c
 22469  017962  0EFC               	movlw	-4
 22470  017964  1EE3               	comf	plusw1,f,c
 22471  017966  0EFD               	movlw	-3
 22472  017968  1EE3               	comf	plusw1,f,c
 22473  01796A  E314               	bnc	u6540
 22474  01796C  0EF7               	movlw	-9
 22475  01796E  2AE3               	incf	plusw1,f,c
 22476  017970  E311               	bnc	u6540
 22477  017972  0EF8               	movlw	-8
 22478  017974  2AE3               	incf	plusw1,f,c
 22479  017976  E30E               	bnc	u6540
 22480  017978  0EF9               	movlw	-7
 22481  01797A  2AE3               	incf	plusw1,f,c
 22482  01797C  E30B               	bnc	u6540
 22483  01797E  0EFA               	movlw	-6
 22484  017980  2AE3               	incf	plusw1,f,c
 22485  017982  E308               	bnc	u6540
 22486  017984  0EFB               	movlw	-5
 22487  017986  2AE3               	incf	plusw1,f,c
 22488  017988  E305               	bnc	u6540
 22489  01798A  0EFC               	movlw	-4
 22490  01798C  2AE3               	incf	plusw1,f,c
 22491  01798E  E302               	bnc	u6540
 22492  017990  0EFD               	movlw	-3
 22493  017992  2AE3               	incf	plusw1,f,c
 22494  017994                     u6540:
 22495                           
 22496                           ;stkvar	_quotient @ sp[(-10)+0]
 22497  017994  0EF6               	movlw	246
 22498  017996  24E1               	addwf	fsr1l,w,c
 22499  017998  6ED9               	movwf	fsr2l,c
 22500  01799A  0EFF               	movlw	255
 22501  01799C  20E2               	addwfc	fsr1h,w,c
 22502  01799E  6EDA               	movwf	fsr2h,c
 22503                           
 22504                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22505  0179A0  0E08               	movlw	8
 22506  0179A2  6E01               	movwf	btemp^0,c
 22507  0179A4  0EEE               	movlw	-18
 22508  0179A6                     us655999:
 22509  0179A6  006F FF7B FFE3     	movff	postinc2,plusw1
 22510  0179AC  28E8               	incf	wreg,w,c
 22511  0179AE  2E01               	decfsz	btemp^0,f,c
 22512  0179B0  D7FA               	bra	us655999
 22513                           
 22514                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22515  0179B2  0EF6               	movlw	246
 22516  0179B4  26E1               	addwf	fsr1l,f,c
 22517  0179B6  0EFF               	movlw	255
 22518  0179B8  22E2               	addwfc	fsr1h,f,c
 22519  0179BA  0012               	return		;funcret
 22520  0179BC                     __end_of___aodiv:
 22521                           	opt callstack 0
 22522                           
 22523 ;; *************** function _ctoa *****************
 22524 ;; Defined at:
 22525 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22526 ;; Parameters:    Size  Location     Type
 22527 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22528 ;;		 -> f(6), NULL(0), 
 22529 ;;  c               1  [STACK] unsigned char 
 22530 ;; Auto vars:     Size  Location     Type
 22531 ;;  w               2  [STACK] int 
 22532 ;;  l               2    0        int 
 22533 ;; Return value:  Size  Location     Type
 22534 ;;                  2  [STACK] int 
 22535 ;; Registers used:
 22536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22537 ;; Tracked objects:
 22538 ;;		On entry : 0/0
 22539 ;;		On exit  : 0/0
 22540 ;;		Unchanged: 0/0
 22541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22546 ;;Total ram usage:        0 bytes
 22547 ;; Hardware stack levels used:    1
 22548 ;; Hardware stack levels required when called:   20
 22549 ;; This function calls:
 22550 ;;		_pad
 22551 ;; This function is called by:
 22552 ;;		_vfpfcnvrt
 22553 ;; This function uses a reentrant model
 22554 ;;
 22555                           
 22556                           	psect	text78
 22557  01AFD2                     __ptext78:
 22558                           	opt callstack 0
 22559  01AFD2                     _ctoa:
 22560                           	opt callstack 0
 22561                           
 22562                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22563  01AFD2  52E6               	movf	postinc1,f,c
 22564  01AFD4  52E6               	movf	postinc1,f,c
 22565                           
 22566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22567                           
 22568                           ;incstack = 0
 22569 ;; hardware stack exceeded
 22570  01AFD6  503A               	movf	_width^0,w,c
 22571  01AFD8  103B               	iorwf	(_width+1)^0,w,c
 22572  01AFDA  A4D8               	btfss	status,2,c
 22573  01AFDC  D009               	goto	l12292
 22574                           
 22575                           ;stkvar	_w @ sp[(-2)+0]
 22576  01AFDE  0EFE               	movlw	-2
 22577  01AFE0  0060  F0EB  FFE3   	movff	_width,plusw1
 22578  01AFE6  0EFF               	movlw	-1
 22579  01AFE8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22580  01AFEE  D016               	goto	l12294
 22581  01AFF0                     l12292:
 22582  01AFF0  0EFF               	movlw	255
 22583  01AFF2  6E0B               	movwf	(btemp+10)^0,c
 22584  01AFF4  0EFF               	movlw	255
 22585  01AFF6  6E0C               	movwf	(btemp+11)^0,c
 22586  01AFF8  0060  F0E8  F009   	movff	_width,btemp+8
 22587  01AFFE  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22588  01B004  500B               	movf	(btemp+10)^0,w,c
 22589  01B006  2609               	addwf	(btemp+8)^0,f,c
 22590  01B008  500C               	movf	(btemp+11)^0,w,c
 22591  01B00A  220A               	addwfc	(btemp+9)^0,f,c
 22592                           
 22593                           ;stkvar	_w @ sp[(-2)+0]
 22594  01B00C  0EFE               	movlw	-2
 22595  01B00E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22596  01B014  0EFF               	movlw	-1
 22597  01B016  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22598  01B01C                     l12294:
 22599                           
 22600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22601                           ;stkvar	_c @ sp[(-2)+-3]
 22602  01B01C  0EFB               	movlw	-5
 22603  01B01E  006F FF8C  F297    	movff	plusw1,_dbuf
 22604                           
 22605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22606  01B024  0102               	movlb	2	; () banked
 22607  01B026  6B98               	clrf	(_dbuf+1)& (0+255),b
 22608                           
 22609                           ; BSR set to: 2
 22610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22611                           ;stkvar	_w @ sp[(-2)+0]
 22612  01B028  0EFE               	movlw	-2
 22613  01B02A  006F FF8F FFE6     	movff	plusw1,postinc1
 22614  01B030  006F FF8F FFE6     	movff	plusw1,postinc1
 22615  01B036  0E97               	movlw	low _dbuf
 22616  01B038  6EE6               	movwf	postinc1,c
 22617  01B03A  0E02               	movlw	high _dbuf
 22618  01B03C  6EE6               	movwf	postinc1,c
 22619                           
 22620                           ;stkvar	_fp @ sp[(-6)+-2]
 22621  01B03E  0EF8               	movlw	-8
 22622  01B040  006F FF8F FFE6     	movff	plusw1,postinc1
 22623  01B046  006F FF8F FFE6     	movff	plusw1,postinc1
 22624  01B04C  EC60  F0CF         	call	_pad	;wreg free
 22625                           
 22626                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22627  01B050  0EFB               	movlw	251
 22628  01B052  26E1               	addwf	fsr1l,f,c
 22629  01B054  0EFF               	movlw	255
 22630  01B056  22E2               	addwfc	fsr1h,f,c
 22631  01B058  0012               	return		;funcret
 22632  01B05A                     __end_of_ctoa:
 22633                           	opt callstack 0
 22634                           
 22635 ;; *************** function _pad *****************
 22636 ;; Defined at:
 22637 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22638 ;; Parameters:    Size  Location     Type
 22639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22640 ;;		 -> f(6), NULL(0), 
 22641 ;;  buf             2  [STACK] PTR unsigned char 
 22642 ;;		 -> dbuf(80), 
 22643 ;;  p               2  [STACK] int 
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;  w               2  [STACK] int 
 22646 ;;  i               2  [STACK] int 
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  2  [STACK] int 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22651 ;; Tracked objects:
 22652 ;;		On entry : 0/2
 22653 ;;		On exit  : 0/0
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;Total ram usage:        0 bytes
 22661 ;; Hardware stack levels used:    1
 22662 ;; Hardware stack levels required when called:   19
 22663 ;; This function calls:
 22664 ;;		_fputc
 22665 ;;		_fputs
 22666 ;;		_strlen
 22667 ;; This function is called by:
 22668 ;;		_ctoa
 22669 ;;		_dtoa
 22670 ;;		_efgtoa
 22671 ;;		_utoa
 22672 ;;		_xtoa
 22673 ;; This function uses a reentrant model
 22674 ;;
 22675                           
 22676                           	psect	text79
 22677  019EC0                     __ptext79:
 22678                           	opt callstack 0
 22679  019EC0                     _pad:
 22680                           	opt callstack 0
 22681                           
 22682                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22683  019EC0  52E6               	movf	postinc1,f,c
 22684  019EC2  52E6               	movf	postinc1,f,c
 22685  019EC4  52E6               	movf	postinc1,f,c
 22686  019EC6  52E6               	movf	postinc1,f,c
 22687                           
 22688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22689                           
 22690                           ;incstack = 0
 22691 ;; hardware stack exceeded
 22692  019EC8  A03E               	btfss	_flags^0,0,c
 22693  019ECA  D010               	goto	l12254
 22694                           
 22695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22696                           ;stkvar	_fp @ sp[(-4)+-2]
 22697  019ECC  0EFA               	movlw	-6
 22698  019ECE  006F FF8F FFE6     	movff	plusw1,postinc1
 22699  019ED4  006F FF8F FFE6     	movff	plusw1,postinc1
 22700                           
 22701                           ;stkvar	_buf @ sp[(-6)+-4]
 22702  019EDA  0EF6               	movlw	-10
 22703  019EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 22704  019EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 22705  019EE8  EC0B  F0D7         	call	_fputs	;wreg free
 22706  019EEC                     l12254:
 22707                           
 22708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22709                           ;stkvar	_p @ sp[(-4)+-6]
 22710  019EEC  0EF7               	movlw	-9
 22711  019EEE  BEE3               	btfsc	plusw1,7,c
 22712  019EF0  D011               	goto	l12258
 22713                           
 22714                           ;stkvar	_p @ sp[(-4)+-6]
 22715                           ;stkvar	_w @ sp[(-4)+0]
 22716  019EF2  0EF6               	movlw	-10
 22717  019EF4  006F FF8C  F001    	movff	plusw1,btemp
 22718  019EFA  0EFC               	movlw	-4
 22719  019EFC  0060  F007  FFE3   	movff	btemp,plusw1
 22720  019F02  0EF7               	movlw	-9
 22721  019F04  006F FF8C  F001    	movff	plusw1,btemp
 22722  019F0A  0EFD               	movlw	-3
 22723  019F0C  0060  F007  FFE3   	movff	btemp,plusw1
 22724  019F12  D004               	goto	l2252
 22725  019F14                     l12258:
 22726                           
 22727                           ;stkvar	_w @ sp[(-4)+0]
 22728  019F14  0EFC               	movlw	-4
 22729  019F16  6AE3               	clrf	plusw1,c
 22730  019F18  0EFD               	movlw	-3
 22731  019F1A  6AE3               	clrf	plusw1,c
 22732  019F1C                     l2252:
 22733                           
 22734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22735                           ;stkvar	_i @ sp[(-4)+2]
 22736  019F1C  0EFE               	movlw	-2
 22737  019F1E  6AE3               	clrf	plusw1,c
 22738  019F20  0EFF               	movlw	-1
 22739  019F22  6AE3               	clrf	plusw1,c
 22740                           
 22741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22742  019F24  D01E               	goto	l12264
 22743  019F26                     l12260:
 22744                           
 22745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22746                           ;stkvar	_fp @ sp[(-4)+-2]
 22747  019F26  0EFA               	movlw	-6
 22748  019F28  006F FF8F FFE6     	movff	plusw1,postinc1
 22749  019F2E  006F FF8F FFE6     	movff	plusw1,postinc1
 22750  019F34  0E20               	movlw	32
 22751  019F36  6EE6               	movwf	postinc1,c
 22752  019F38  0E00               	movlw	0
 22753  019F3A  6EE6               	movwf	postinc1,c
 22754  019F3C  ECB6  F0CD         	call	_fputc	;wreg free
 22755                           
 22756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22757                           ;stkvar	_i @ sp[(-4)+2]
 22758  019F40  0EFE               	movlw	-2
 22759  019F42  50E3               	movf	plusw1,w,c
 22760  019F44  0F01               	addlw	1
 22761  019F46  6E01               	movwf	btemp^0,c
 22762  019F48  0EFE               	movlw	-2
 22763  019F4A  0060  F007  FFE3   	movff	btemp,plusw1
 22764  019F50  6A01               	clrf	btemp^0,c
 22765  019F52  0EFF               	movlw	-1
 22766  019F54  50E3               	movf	plusw1,w,c
 22767  019F56  2001               	addwfc	btemp^0,w,c
 22768  019F58  6E01               	movwf	btemp^0,c
 22769  019F5A  0EFF               	movlw	-1
 22770  019F5C  0060  F007  FFE3   	movff	btemp,plusw1
 22771  019F62                     l12264:
 22772                           
 22773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22774                           ;stkvar	_w @ sp[(-4)+0]
 22775                           ;stkvar	_i @ sp[(-4)+2]
 22776  019F62  50E1               	movf	fsr1l,w,c
 22777  019F64  0FFE               	addlw	-2
 22778  019F66  6ED9               	movwf	fsr2l,c
 22779  019F68  50E2               	movf	fsr1h,w,c
 22780  019F6A  6EDA               	movwf	fsr2h,c
 22781  019F6C  0EFF               	movlw	255
 22782  019F6E  22DA               	addwfc	fsr2h,f,c
 22783  019F70  0EFC               	movlw	-4
 22784  019F72  50E3               	movf	plusw1,w,c
 22785  019F74  5CDE               	subwf	postinc2,w,c
 22786  019F76  50DE               	movf	postinc2,w,c
 22787  019F78  0A80               	xorlw	128
 22788  019F7A  6E01               	movwf	btemp^0,c
 22789  019F7C  0EFD               	movlw	-3
 22790  019F7E  50E3               	movf	plusw1,w,c
 22791  019F80  0A80               	xorlw	128
 22792  019F82  5801               	subwfb	btemp^0,w,c
 22793  019F84  A0D8               	btfss	status,0,c
 22794  019F86  D7CF               	goto	l12260
 22795                           
 22796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22797  019F88  B03E               	btfsc	_flags^0,0,c
 22798  019F8A  D010               	goto	l12268
 22799                           
 22800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22801                           ;stkvar	_fp @ sp[(-4)+-2]
 22802  019F8C  0EFA               	movlw	-6
 22803  019F8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22804  019F94  006F FF8F FFE6     	movff	plusw1,postinc1
 22805                           
 22806                           ;stkvar	_buf @ sp[(-6)+-4]
 22807  019F9A  0EF6               	movlw	-10
 22808  019F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 22809  019FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 22810  019FA8  EC0B  F0D7         	call	_fputs	;wreg free
 22811  019FAC                     l12268:
 22812                           
 22813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22814                           ;stkvar	_w @ sp[(-4)+0]
 22815                           ;stkvar	_buf @ sp[(-4)+-4]
 22816  019FAC  0EF8               	movlw	-8
 22817  019FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 22818  019FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 22819  019FBA  ECBA  F0D6         	call	_strlen	;wreg free
 22820  019FBE  0EFC               	movlw	-4
 22821  019FC0  50E3               	movf	plusw1,w,c
 22822  019FC2  2601               	addwf	btemp^0,f,c
 22823  019FC4  0EFD               	movlw	-3
 22824  019FC6  50E3               	movf	plusw1,w,c
 22825  019FC8  2202               	addwfc	(btemp+1)^0,f,c
 22826                           
 22827                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22828  019FCA  0EF6               	movlw	246
 22829  019FCC  26E1               	addwf	fsr1l,f,c
 22830  019FCE  0EFF               	movlw	255
 22831  019FD0  22E2               	addwfc	fsr1h,f,c
 22832  019FD2  0012               	return		;funcret
 22833  019FD4                     __end_of_pad:
 22834                           	opt callstack 0
 22835                           
 22836 ;; *************** function _strlen *****************
 22837 ;; Defined at:
 22838 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22839 ;; Parameters:    Size  Location     Type
 22840 ;;  s               2  [STACK] PTR const unsigned char 
 22841 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22842 ;;		 -> spin(120), STR_49(9), STR_48(12), D.lcd(480), 
 22843 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22844 ;;		 -> V(192), 
 22845 ;; Auto vars:     Size  Location     Type
 22846 ;;  a               2  [STACK] PTR const unsigned char 
 22847 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22848 ;;		 -> spin(120), STR_49(9), STR_48(12), D.lcd(480), 
 22849 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22850 ;;		 -> V(192), 
 22851 ;; Return value:  Size  Location     Type
 22852 ;;                  2  [STACK] unsigned int 
 22853 ;; Registers used:
 22854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22855 ;; Tracked objects:
 22856 ;;		On entry : 0/0
 22857 ;;		On exit  : 0/0
 22858 ;;		Unchanged: 0/0
 22859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22864 ;;Total ram usage:        0 bytes
 22865 ;; Hardware stack levels used:    1
 22866 ;; Hardware stack levels required when called:   15
 22867 ;; This function calls:
 22868 ;;		Nothing
 22869 ;; This function is called by:
 22870 ;;		_eaDogM_WriteString
 22871 ;;		_spinners
 22872 ;;		_calc_bsoc
 22873 ;;		_pad
 22874 ;;		_stoa
 22875 ;; This function uses a reentrant model
 22876 ;;
 22877                           
 22878                           	psect	text80
 22879  01AD74                     __ptext80:
 22880                           	opt callstack 0
 22881  01AD74                     _strlen:
 22882                           	opt callstack 0
 22883                           
 22884                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22885  01AD74  52E6               	movf	postinc1,f,c
 22886  01AD76  52E6               	movf	postinc1,f,c
 22887                           
 22888                           ;stkvar	_s @ sp[(-2)+-2]
 22889                           
 22890                           ;incstack = 0
 22891 ;; hardware stack exceeded
 22892  01AD78  0EFC               	movlw	-4
 22893  01AD7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22894  01AD80  0EFD               	movlw	-3
 22895  01AD82  006F FF8C  F00C    	movff	plusw1,btemp+11
 22896                           
 22897                           ;stkvar	_a @ sp[(-2)+0]
 22898  01AD88  0EFF               	movlw	-1
 22899  01AD8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22900  01AD90  0EFE               	movlw	-2
 22901  01AD92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22902  01AD98  D011               	goto	l7936
 22903  01AD9A                     l7934:
 22904                           
 22905                           ;stkvar	_s @ sp[(-2)+-2]
 22906  01AD9A  0EFC               	movlw	-4
 22907  01AD9C  50E3               	movf	plusw1,w,c
 22908  01AD9E  0F01               	addlw	1
 22909  01ADA0  6E01               	movwf	btemp^0,c
 22910  01ADA2  0EFC               	movlw	-4
 22911  01ADA4  0060  F007  FFE3   	movff	btemp,plusw1
 22912  01ADAA  6A01               	clrf	btemp^0,c
 22913  01ADAC  0EFD               	movlw	-3
 22914  01ADAE  50E3               	movf	plusw1,w,c
 22915  01ADB0  2001               	addwfc	btemp^0,w,c
 22916  01ADB2  6E01               	movwf	btemp^0,c
 22917  01ADB4  0EFD               	movlw	-3
 22918  01ADB6  0060  F007  FFE3   	movff	btemp,plusw1
 22919  01ADBC                     l7936:
 22920                           
 22921                           ;stkvar	_s @ sp[(-2)+-2]
 22922  01ADBC  0EFC               	movlw	-4
 22923  01ADBE  006F FF8F FFF6     	movff	plusw1,tblptrl
 22924  01ADC4  0EFD               	movlw	-3
 22925  01ADC6  006F FF8F FFF7     	movff	plusw1,tblptrh
 22926  01ADCC  0E00               	movlw	low (__mediumconst shr (0+16))
 22927  01ADCE  6EF8               	movwf	tblptru,c
 22928  01ADD0  0E1F               	movlw	(high __ramtop+-1)
 22929  01ADD2  64F7               	cpfsgt	tblptrh,c
 22930  01ADD4  D003               	bra	u5567
 22931  01ADD6  0008               	tblrd		*
 22932  01ADD8  50F5               	movf	tablat,w,c
 22933  01ADDA  D007               	bra	u5560
 22934  01ADDC                     u5567:
 22935  01ADDC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22936  01ADE2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22937  01ADE8  50EF               	movf	indf0,w,c
 22938  01ADEA                     u5560:
 22939  01ADEA  0900               	iorlw	0
 22940  01ADEC  A4D8               	btfss	status,2,c
 22941  01ADEE  D7D5               	goto	l7934
 22942                           
 22943                           ;stkvar	_a @ sp[(-2)+0]
 22944                           ;stkvar	_s @ sp[(-2)+-2]
 22945  01ADF0  0EFC               	movlw	-4
 22946  01ADF2  006F FF8C  F001    	movff	plusw1,btemp
 22947  01ADF8  0EFD               	movlw	-3
 22948  01ADFA  006F FF8C  F002    	movff	plusw1,btemp+1
 22949  01AE00  0EFE               	movlw	-2
 22950  01AE02  50E3               	movf	plusw1,w,c
 22951  01AE04  5E01               	subwf	btemp^0,f,c
 22952  01AE06  0EFF               	movlw	-1
 22953  01AE08  50E3               	movf	plusw1,w,c
 22954  01AE0A  5A02               	subwfb	(btemp+1)^0,f,c
 22955                           
 22956                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22957  01AE0C  52E5               	movf	postdec1,f,c
 22958  01AE0E  52E5               	movf	postdec1,f,c
 22959  01AE10  52E5               	movf	postdec1,f,c
 22960  01AE12  52E5               	movf	postdec1,f,c
 22961  01AE14  0012               	return		;funcret
 22962  01AE16                     __end_of_strlen:
 22963                           	opt callstack 0
 22964                           
 22965 ;; *************** function _fputs *****************
 22966 ;; Defined at:
 22967 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;  s               2  [STACK] PTR const unsigned char 
 22970 ;;		 -> dbuf(80), 
 22971 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22972 ;;		 -> f(6), NULL(0), 
 22973 ;; Auto vars:     Size  Location     Type
 22974 ;;  i               2  [STACK] int 
 22975 ;;  c               1  [STACK] unsigned char 
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  2  [STACK] int 
 22978 ;; Registers used:
 22979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/2
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;Total ram usage:        0 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:   18
 22992 ;; This function calls:
 22993 ;;		_fputc
 22994 ;; This function is called by:
 22995 ;;		_pad
 22996 ;; This function uses a reentrant model
 22997 ;;
 22998                           
 22999                           	psect	text81
 23000  01AE16                     __ptext81:
 23001                           	opt callstack 0
 23002  01AE16                     _fputs:
 23003                           	opt callstack 0
 23004                           
 23005                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23006  01AE16  52E6               	movf	postinc1,f,c
 23007  01AE18  52E6               	movf	postinc1,f,c
 23008  01AE1A  52E6               	movf	postinc1,f,c
 23009                           
 23010                           ;stkvar	_i @ sp[(-3)+0]
 23011                           
 23012                           ;incstack = 0
 23013 ;; hardware stack exceeded
 23014  01AE1C  0EFD               	movlw	-3
 23015  01AE1E  6AE3               	clrf	plusw1,c
 23016  01AE20  0EFE               	movlw	-2
 23017  01AE22  6AE3               	clrf	plusw1,c
 23018  01AE24  D01F               	goto	l12206
 23019  01AE26                     l12202:
 23020                           
 23021                           ;stkvar	_fp @ sp[(-3)+-4]
 23022  01AE26  0EF9               	movlw	-7
 23023  01AE28  006F FF8F FFE6     	movff	plusw1,postinc1
 23024  01AE2E  006F FF8F FFE6     	movff	plusw1,postinc1
 23025                           
 23026                           ;stkvar	_c @ sp[(-5)+2]
 23027  01AE34  0EFD               	movlw	-3
 23028  01AE36  50E3               	movf	plusw1,w,c
 23029  01AE38  6EE6               	movwf	postinc1,c
 23030  01AE3A  0E00               	movlw	0
 23031  01AE3C  6EE6               	movwf	postinc1,c
 23032  01AE3E  ECB6  F0CD         	call	_fputc	;wreg free
 23033                           
 23034                           ;stkvar	_i @ sp[(-3)+0]
 23035  01AE42  0EFD               	movlw	-3
 23036  01AE44  50E3               	movf	plusw1,w,c
 23037  01AE46  0F01               	addlw	1
 23038  01AE48  6E01               	movwf	btemp^0,c
 23039  01AE4A  0EFD               	movlw	-3
 23040  01AE4C  0060  F007  FFE3   	movff	btemp,plusw1
 23041  01AE52  6A01               	clrf	btemp^0,c
 23042  01AE54  0EFE               	movlw	-2
 23043  01AE56  50E3               	movf	plusw1,w,c
 23044  01AE58  2001               	addwfc	btemp^0,w,c
 23045  01AE5A  6E01               	movwf	btemp^0,c
 23046  01AE5C  0EFE               	movlw	-2
 23047  01AE5E  0060  F007  FFE3   	movff	btemp,plusw1
 23048  01AE64                     l12206:
 23049                           
 23050                           ;stkvar	_i @ sp[(-3)+0]
 23051  01AE64  0EFD               	movlw	-3
 23052  01AE66  006F FF8C  F00B    	movff	plusw1,btemp+10
 23053  01AE6C  0EFE               	movlw	-2
 23054  01AE6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23055                           
 23056                           ;stkvar	_s @ sp[(-3)+-2]
 23057  01AE74  0EFB               	movlw	-5
 23058  01AE76  006F FF8C  F009    	movff	plusw1,btemp+8
 23059  01AE7C  0EFC               	movlw	-4
 23060  01AE7E  006F FF8C  F00A    	movff	plusw1,btemp+9
 23061  01AE84  500B               	movf	(btemp+10)^0,w,c
 23062  01AE86  2409               	addwf	(btemp+8)^0,w,c
 23063  01AE88  6ED9               	movwf	fsr2l,c
 23064  01AE8A  500C               	movf	(btemp+11)^0,w,c
 23065  01AE8C  200A               	addwfc	(btemp+9)^0,w,c
 23066  01AE8E  6EDA               	movwf	fsr2h,c
 23067  01AE90  50DF               	movf	indf2,w,c
 23068  01AE92  6E0C               	movwf	(btemp+11)^0,c
 23069                           
 23070                           ;stkvar	_c @ sp[(-3)+2]
 23071  01AE94  0EFF               	movlw	-1
 23072  01AE96  0060  F033  FFE3   	movff	btemp+11,plusw1
 23073  01AE9C  0EFF               	movlw	-1
 23074  01AE9E  50E3               	movf	plusw1,w,c
 23075  01AEA0  A4D8               	btfss	status,2,c
 23076  01AEA2  D7C1               	goto	l12202
 23077                           
 23078                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23079  01AEA4  0EF9               	movlw	249
 23080  01AEA6  26E1               	addwf	fsr1l,f,c
 23081  01AEA8  0EFF               	movlw	255
 23082  01AEAA  22E2               	addwfc	fsr1h,f,c
 23083  01AEAC  0012               	return		;funcret
 23084  01AEAE                     __end_of_fputs:
 23085                           	opt callstack 0
 23086                           
 23087 ;; *************** function _fputc *****************
 23088 ;; Defined at:
 23089 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 23090 ;; Parameters:    Size  Location     Type
 23091 ;;  c               2  [STACK] int 
 23092 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23093 ;;		 -> f(6), NULL(0), 
 23094 ;; Auto vars:     Size  Location     Type
 23095 ;;		None
 23096 ;; Return value:  Size  Location     Type
 23097 ;;                  2  [STACK] int 
 23098 ;; Registers used:
 23099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23100 ;; Tracked objects:
 23101 ;;		On entry : 0/0
 23102 ;;		On exit  : 0/0
 23103 ;;		Unchanged: 0/0
 23104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23109 ;;Total ram usage:        0 bytes
 23110 ;; Hardware stack levels used:    1
 23111 ;; Hardware stack levels required when called:   17
 23112 ;; This function calls:
 23113 ;;		_putch
 23114 ;; This function is called by:
 23115 ;;		_pad
 23116 ;;		_stoa
 23117 ;;		_vfpfcnvrt
 23118 ;;		_fputs
 23119 ;; This function uses a reentrant model
 23120 ;;
 23121                           
 23122                           	psect	text82
 23123  019B6C                     __ptext82:
 23124                           	opt callstack 0
 23125  019B6C                     _fputc:
 23126                           	opt callstack 0
 23127                           
 23128                           ;stkvar	_fp @ sp[(0)+-4]
 23129                           
 23130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23131                           ;incstack = 0
 23132 ;; hardware stack exceeded
 23133  019B6C  0EFC               	movlw	-4
 23134  019B6E  006F FF8C  F001    	movff	plusw1,btemp
 23135  019B74  0EFD               	movlw	-3
 23136  019B76  50E3               	movf	plusw1,w,c
 23137  019B78  1001               	iorwf	btemp^0,w,c
 23138  019B7A  B4D8               	btfsc	status,2,c
 23139  019B7C  D009               	goto	u11030
 23140                           
 23141                           ;stkvar	_fp @ sp[(0)+-4]
 23142  019B7E  0EFC               	movlw	-4
 23143  019B80  006F FF8C  F001    	movff	plusw1,btemp
 23144  019B86  0EFD               	movlw	-3
 23145  019B88  50E3               	movf	plusw1,w,c
 23146  019B8A  1001               	iorwf	btemp^0,w,c
 23147  019B8C  A4D8               	btfss	status,2,c
 23148  019B8E  D006               	goto	l12190
 23149  019B90                     u11030:
 23150                           
 23151                           ;stkvar	_c @ sp[(0)+-2]
 23152  019B90  0EFE               	movlw	-2
 23153  019B92  50E3               	movf	plusw1,w,c
 23154  019B94  6EE6               	movwf	postinc1,c
 23155  019B96  ECC8  F0E2         	call	_putch	;wreg free
 23156  019B9A  D075               	goto	l3298
 23157  019B9C                     l12190:
 23158                           
 23159                           ;stkvar	_fp @ sp[(0)+-4]
 23160  019B9C  0EFC               	movlw	-4
 23161  019B9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23162  019BA4  0EFD               	movlw	-3
 23163  019BA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23164  019BAC  0E04               	movlw	4
 23165  019BAE  240B               	addwf	(btemp+10)^0,w,c
 23166  019BB0  6ED9               	movwf	fsr2l,c
 23167  019BB2  0E00               	movlw	0
 23168  019BB4  200C               	addwfc	(btemp+11)^0,w,c
 23169  019BB6  6EDA               	movwf	fsr2h,c
 23170  019BB8  50DE               	movf	postinc2,w,c
 23171  019BBA  10DE               	iorwf	postinc2,w,c
 23172  019BBC  B4D8               	btfsc	status,2,c
 23173  019BBE  D026               	goto	u11050
 23174                           
 23175                           ;stkvar	_fp @ sp[(0)+-4]
 23176  019BC0  0EFC               	movlw	-4
 23177  019BC2  006F FF8C  F00B    	movff	plusw1,btemp+10
 23178  019BC8  0EFD               	movlw	-3
 23179  019BCA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23180  019BD0  0E04               	movlw	4
 23181  019BD2  240B               	addwf	(btemp+10)^0,w,c
 23182  019BD4  6ED9               	movwf	fsr2l,c
 23183  019BD6  0E00               	movlw	0
 23184  019BD8  200C               	addwfc	(btemp+11)^0,w,c
 23185  019BDA  6EDA               	movwf	fsr2h,c
 23186                           
 23187                           ;stkvar	_fp @ sp[(0)+-4]
 23188  019BDC  0EFC               	movlw	-4
 23189  019BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23190  019BE4  0EFD               	movlw	-3
 23191  019BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23192  019BEC  0E02               	movlw	2
 23193  019BEE  240B               	addwf	(btemp+10)^0,w,c
 23194  019BF0  6EE9               	movwf	fsr0l,c
 23195  019BF2  0E00               	movlw	0
 23196  019BF4  200C               	addwfc	(btemp+11)^0,w,c
 23197  019BF6  6EEA               	movwf	fsr0h,c
 23198  019BF8  50DE               	movf	postinc2,w,c
 23199  019BFA  5CEE               	subwf	postinc0,w,c
 23200  019BFC  50EE               	movf	postinc0,w,c
 23201  019BFE  0A80               	xorlw	128
 23202  019C00  6E01               	movwf	btemp^0,c
 23203  019C02  50DE               	movf	postinc2,w,c
 23204  019C04  0A80               	xorlw	128
 23205  019C06  5801               	subwfb	btemp^0,w,c
 23206  019C08  B0D8               	btfsc	status,0,c
 23207  019C0A  D03D               	goto	l3298
 23208  019C0C                     u11050:
 23209                           
 23210                           ;stkvar	_c @ sp[(0)+-2]
 23211                           ;stkvar	_fp @ sp[(0)+-4]
 23212  019C0C  0EFC               	movlw	-4
 23213  019C0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23214  019C14  0EFD               	movlw	-3
 23215  019C16  006F FF8C  F00C    	movff	plusw1,btemp+11
 23216  019C1C  0E02               	movlw	2
 23217  019C1E  240B               	addwf	(btemp+10)^0,w,c
 23218  019C20  6ED9               	movwf	fsr2l,c
 23219  019C22  0E00               	movlw	0
 23220  019C24  200C               	addwfc	(btemp+11)^0,w,c
 23221  019C26  6EDA               	movwf	fsr2h,c
 23222  019C28  006F FF78  F00B    	movff	postinc2,btemp+10
 23223  019C2E  006F FF74  F00C    	movff	postdec2,btemp+11
 23224                           
 23225                           ;stkvar	_fp @ sp[(0)+-4]
 23226  019C34  0EFC               	movlw	-4
 23227  019C36  006F FF8F FFD9     	movff	plusw1,fsr2l
 23228  019C3C  0EFD               	movlw	-3
 23229  019C3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 23230  019C44  006F FF78  F009    	movff	postinc2,btemp+8
 23231  019C4A  006F FF74  F00A    	movff	postdec2,btemp+9
 23232  019C50  500B               	movf	(btemp+10)^0,w,c
 23233  019C52  2409               	addwf	(btemp+8)^0,w,c
 23234  019C54  6ED9               	movwf	fsr2l,c
 23235  019C56  500C               	movf	(btemp+11)^0,w,c
 23236  019C58  200A               	addwfc	(btemp+9)^0,w,c
 23237  019C5A  6EDA               	movwf	fsr2h,c
 23238  019C5C  0EFE               	movlw	-2
 23239  019C5E  006F FF8F FFDF     	movff	plusw1,indf2
 23240                           
 23241                           ;stkvar	_fp @ sp[(0)+-4]
 23242  019C64  0EFC               	movlw	-4
 23243  019C66  006F FF8C  F00B    	movff	plusw1,btemp+10
 23244  019C6C  0EFD               	movlw	-3
 23245  019C6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23246  019C74  0E02               	movlw	2
 23247  019C76  240B               	addwf	(btemp+10)^0,w,c
 23248  019C78  6ED9               	movwf	fsr2l,c
 23249  019C7A  0E00               	movlw	0
 23250  019C7C  200C               	addwfc	(btemp+11)^0,w,c
 23251  019C7E  6EDA               	movwf	fsr2h,c
 23252  019C80  2ADE               	incf	postinc2,f,c
 23253  019C82  0E00               	movlw	0
 23254  019C84  22DD               	addwfc	postdec2,f,c
 23255  019C86                     l3298:
 23256                           
 23257                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23258  019C86  52E5               	movf	postdec1,f,c
 23259  019C88  52E5               	movf	postdec1,f,c
 23260  019C8A  52E5               	movf	postdec1,f,c
 23261  019C8C  52E5               	movf	postdec1,f,c
 23262  019C8E  0012               	return		;funcret
 23263  019C90                     __end_of_fputc:
 23264                           	opt callstack 0
 23265                           
 23266 ;; *************** function _putch *****************
 23267 ;; Defined at:
 23268 ;;		line 421 in file "eadog.c"
 23269 ;; Parameters:    Size  Location     Type
 23270 ;;  c               1  [STACK] unsigned char 
 23271 ;; Auto vars:     Size  Location     Type
 23272 ;;		None
 23273 ;; Return value:  Size  Location     Type
 23274 ;;                  1  [STACK] void 
 23275 ;; Registers used:
 23276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23277 ;; Tracked objects:
 23278 ;;		On entry : 0/0
 23279 ;;		On exit  : 0/0
 23280 ;;		Unchanged: 0/0
 23281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23286 ;;Total ram usage:        0 bytes
 23287 ;; Hardware stack levels used:    1
 23288 ;; Hardware stack levels required when called:   16
 23289 ;; This function calls:
 23290 ;;		_ringBufS_put_dma
 23291 ;; This function is called by:
 23292 ;;		_fputc
 23293 ;; This function uses a reentrant model
 23294 ;;
 23295                           
 23296                           	psect	text83
 23297  01C590                     __ptext83:
 23298                           	opt callstack 0
 23299  01C590                     _putch:
 23300                           	opt callstack 0
 23301                           
 23302                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 23303                           ;stkvar	_c @ sp[(0)+-1]
 23304                           
 23305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23306                           ;incstack = 0
 23307 ;; hardware stack exceeded
 23308  01C590  0EFF               	movlw	-1
 23309  01C592  50E3               	movf	plusw1,w,c
 23310  01C594  6EE6               	movwf	postinc1,c
 23311  01C596  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 23312  01C59C  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 23313  01C5A2  ECBE  F0D5         	call	_ringBufS_put_dma	;wreg free
 23314                           
 23315                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 23316  01C5A6  52E5               	movf	postdec1,f,c
 23317  01C5A8  0012               	return		;funcret
 23318  01C5AA                     __end_of_putch:
 23319                           	opt callstack 0
 23320                           
 23321 ;; *************** function _ringBufS_put_dma *****************
 23322 ;; Defined at:
 23323 ;;		line 67 in file "ringbufs.c"
 23324 ;; Parameters:    Size  Location     Type
 23325 ;;  _this           2  [STACK] PTR struct ringBufS_t
 23326 ;;		 -> ring_buf1(67), 
 23327 ;;  c               1  [STACK] const unsigned char 
 23328 ;; Auto vars:     Size  Location     Type
 23329 ;;		None
 23330 ;; Return value:  Size  Location     Type
 23331 ;;                  1  [STACK] void 
 23332 ;; Registers used:
 23333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23334 ;; Tracked objects:
 23335 ;;		On entry : 0/0
 23336 ;;		On exit  : 0/0
 23337 ;;		Unchanged: 0/0
 23338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23343 ;;Total ram usage:        0 bytes
 23344 ;; Hardware stack levels used:    1
 23345 ;; Hardware stack levels required when called:   15
 23346 ;; This function calls:
 23347 ;;		Nothing
 23348 ;; This function is called by:
 23349 ;;		_putch
 23350 ;; This function uses a reentrant model
 23351 ;;
 23352                           
 23353                           	psect	text84
 23354  01AB7C                     __ptext84:
 23355                           	opt callstack 0
 23356  01AB7C                     _ringBufS_put_dma:
 23357                           	opt callstack 0
 23358                           
 23359                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23360                           ;stkvar	__this @ sp[(0)+-2]
 23361                           
 23362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23363                           ;incstack = 0
 23364 ;; hardware stack exceeded
 23365  01AB7C  0EFE               	movlw	-2
 23366  01AB7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23367  01AB84  0EFF               	movlw	-1
 23368  01AB86  006F FF8C  F00C    	movff	plusw1,btemp+11
 23369  01AB8C  0E42               	movlw	66
 23370  01AB8E  240B               	addwf	(btemp+10)^0,w,c
 23371  01AB90  6ED9               	movwf	fsr2l,c
 23372  01AB92  0E00               	movlw	0
 23373  01AB94  200C               	addwfc	(btemp+11)^0,w,c
 23374  01AB96  6EDA               	movwf	fsr2h,c
 23375  01AB98  0E40               	movlw	64
 23376  01AB9A  60DF               	cpfslt	indf2,c
 23377  01AB9C  D040               	goto	l1603
 23378                           
 23379                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23380                           ;stkvar	_c @ sp[(0)+-3]
 23381                           ;stkvar	__this @ sp[(0)+-2]
 23382  01AB9E  0EFE               	movlw	-2
 23383  01ABA0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23384  01ABA6  0EFF               	movlw	-1
 23385  01ABA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23386  01ABAE  0E40               	movlw	64
 23387  01ABB0  240B               	addwf	(btemp+10)^0,w,c
 23388  01ABB2  6ED9               	movwf	fsr2l,c
 23389  01ABB4  0E00               	movlw	0
 23390  01ABB6  200C               	addwfc	(btemp+11)^0,w,c
 23391  01ABB8  6EDA               	movwf	fsr2h,c
 23392  01ABBA  50DF               	movf	indf2,w,c
 23393  01ABBC  6E0C               	movwf	(btemp+11)^0,c
 23394                           
 23395                           ;stkvar	__this @ sp[(0)+-2]
 23396  01ABBE  0EFE               	movlw	-2
 23397  01ABC0  006F FF8C  F009    	movff	plusw1,btemp+8
 23398  01ABC6  0EFF               	movlw	-1
 23399  01ABC8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23400  01ABCE  500C               	movf	(btemp+11)^0,w,c
 23401  01ABD0  2409               	addwf	(btemp+8)^0,w,c
 23402  01ABD2  6ED9               	movwf	fsr2l,c
 23403  01ABD4  0E00               	movlw	0
 23404  01ABD6  200A               	addwfc	(btemp+9)^0,w,c
 23405  01ABD8  6EDA               	movwf	fsr2h,c
 23406  01ABDA  0EFD               	movlw	-3
 23407  01ABDC  006F FF8F FFDF     	movff	plusw1,indf2
 23408                           
 23409                           ;ringbufs.c: 71:   ++_this->head;
 23410                           ;stkvar	__this @ sp[(0)+-2]
 23411  01ABE2  0EFE               	movlw	-2
 23412  01ABE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23413  01ABEA  0EFF               	movlw	-1
 23414  01ABEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23415  01ABF2  0E40               	movlw	64
 23416  01ABF4  240B               	addwf	(btemp+10)^0,w,c
 23417  01ABF6  6ED9               	movwf	fsr2l,c
 23418  01ABF8  0E00               	movlw	0
 23419  01ABFA  200C               	addwfc	(btemp+11)^0,w,c
 23420  01ABFC  6EDA               	movwf	fsr2h,c
 23421  01ABFE  2ADF               	incf	indf2,f,c
 23422                           
 23423                           ;ringbufs.c: 72:   ++_this->count;
 23424                           ;stkvar	__this @ sp[(0)+-2]
 23425  01AC00  0EFE               	movlw	-2
 23426  01AC02  006F FF8C  F00B    	movff	plusw1,btemp+10
 23427  01AC08  0EFF               	movlw	-1
 23428  01AC0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23429  01AC10  0E42               	movlw	66
 23430  01AC12  240B               	addwf	(btemp+10)^0,w,c
 23431  01AC14  6ED9               	movwf	fsr2l,c
 23432  01AC16  0E00               	movlw	0
 23433  01AC18  200C               	addwfc	(btemp+11)^0,w,c
 23434  01AC1A  6EDA               	movwf	fsr2h,c
 23435  01AC1C  2ADF               	incf	indf2,f,c
 23436  01AC1E                     l1603:
 23437                           
 23438                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23439  01AC1E  52E5               	movf	postdec1,f,c
 23440  01AC20  52E5               	movf	postdec1,f,c
 23441  01AC22  52E5               	movf	postdec1,f,c
 23442  01AC24  0012               	return		;funcret
 23443  01AC26                     __end_of_ringBufS_put_dma:
 23444                           	opt callstack 0
 23445                           
 23446 ;; *************** function _atoi *****************
 23447 ;; Defined at:
 23448 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;  s               2  [STACK] PTR const unsigned char 
 23451 ;;		 -> STR_67(127), STR_65(3), STR_64(3), STR_63(19), 
 23452 ;;		 -> STR_62(19), STR_61(19), STR_60(19), STR_59(19), 
 23453 ;;		 -> STR_58(19), STR_57(24), STR_56(15), STR_55(15), 
 23454 ;;		 -> STR_54(15), STR_53(10), STR_52(10), STR_51(19), 
 23455 ;;		 -> STR_50(19), STR_47(3), STR_46(3), STR_45(21), 
 23456 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 23457 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 23458 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 23459 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 23460 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 23461 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 23462 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 23463 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 23464 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 23465 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 23466 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 23467 ;; Auto vars:     Size  Location     Type
 23468 ;;  n               2  [STACK] int 
 23469 ;;  neg             2  [STACK] int 
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  2  [STACK] int 
 23472 ;; Registers used:
 23473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23474 ;; Tracked objects:
 23475 ;;		On entry : 0/0
 23476 ;;		On exit  : 0/0
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;Total ram usage:        0 bytes
 23484 ;; Hardware stack levels used:    1
 23485 ;; Hardware stack levels required when called:   16
 23486 ;; This function calls:
 23487 ;;		_isdigit
 23488 ;;		_isspace
 23489 ;; This function is called by:
 23490 ;;		_vfpfcnvrt
 23491 ;; This function uses a reentrant model
 23492 ;;
 23493                           
 23494                           	psect	text85
 23495  0179BC                     __ptext85:
 23496                           	opt callstack 0
 23497  0179BC                     _atoi:
 23498                           	opt callstack 0
 23499                           
 23500                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23501  0179BC  0E09               	movlw	9
 23502  0179BE  26E1               	addwf	fsr1l,f,c
 23503  0179C0  0E00               	movlw	0
 23504  0179C2  22E2               	addwfc	fsr1h,f,c
 23505                           
 23506                           ;stkvar	_n @ sp[(-9)+5]
 23507                           
 23508                           ;incstack = 0
 23509 ;; hardware stack exceeded
 23510  0179C4  0EFC               	movlw	-4
 23511  0179C6  6AE3               	clrf	plusw1,c
 23512  0179C8  0EFD               	movlw	-3
 23513  0179CA  6AE3               	clrf	plusw1,c
 23514                           
 23515                           ;stkvar	_neg @ sp[(-9)+7]
 23516  0179CC  0EFE               	movlw	-2
 23517  0179CE  6AE3               	clrf	plusw1,c
 23518  0179D0  0EFF               	movlw	-1
 23519  0179D2  6AE3               	clrf	plusw1,c
 23520  0179D4  D011               	goto	l9560
 23521  0179D6                     l9558:
 23522                           
 23523                           ;stkvar	_s @ sp[(-9)+-2]
 23524  0179D6  0EF5               	movlw	-11
 23525  0179D8  50E3               	movf	plusw1,w,c
 23526  0179DA  0F01               	addlw	1
 23527  0179DC  6E01               	movwf	btemp^0,c
 23528  0179DE  0EF5               	movlw	-11
 23529  0179E0  0060  F007  FFE3   	movff	btemp,plusw1
 23530  0179E6  6A01               	clrf	btemp^0,c
 23531  0179E8  0EF6               	movlw	-10
 23532  0179EA  50E3               	movf	plusw1,w,c
 23533  0179EC  2001               	addwfc	btemp^0,w,c
 23534  0179EE  6E01               	movwf	btemp^0,c
 23535  0179F0  0EF6               	movlw	-10
 23536  0179F2  0060  F007  FFE3   	movff	btemp,plusw1
 23537  0179F8                     l9560:
 23538                           
 23539                           ;stkvar	_atoi$6400 @ sp[(-9)+4]
 23540  0179F8  0EFB               	movlw	-5
 23541  0179FA  6AE3               	clrf	plusw1,c
 23542  0179FC  2AE3               	incf	plusw1,f,c
 23543                           
 23544                           ;stkvar	_s @ sp[(-9)+-2]
 23545  0179FE  50E1               	movf	fsr1l,w,c
 23546  017A00  0FF5               	addlw	-11
 23547  017A02  6ED9               	movwf	fsr2l,c
 23548  017A04  50E2               	movf	fsr1h,w,c
 23549  017A06  6EDA               	movwf	fsr2h,c
 23550  017A08  0EFF               	movlw	255
 23551  017A0A  22DA               	addwfc	fsr2h,f,c
 23552  017A0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 23553  017A12  006F FF77 FFF7     	movff	postdec2,tblptrh
 23554  017A18                     	if	0	;tblptru may be non-zero
 23555  017A18                     	endif
 23556  017A18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23557  017A18  0E00               	movlw	low (__mediumconst shr (0+16))
 23558  017A1A  6EF8               	movwf	tblptru,c
 23559  017A1C                     	endif
 23560  017A1C  0008               	tblrd		*
 23561  017A1E  50F5               	movf	tablat,w,c
 23562  017A20  0A20               	xorlw	32
 23563  017A22  B4D8               	btfsc	status,2,c
 23564  017A24  D023               	goto	l9568
 23565  017A26  0EF7               	movlw	247
 23566  017A28  6E0B               	movwf	(btemp+10)^0,c
 23567  017A2A  0EFF               	movlw	255
 23568  017A2C  6E0C               	movwf	(btemp+11)^0,c
 23569                           
 23570                           ;stkvar	_s @ sp[(-9)+-2]
 23571  017A2E  50E1               	movf	fsr1l,w,c
 23572  017A30  0FF5               	addlw	-11
 23573  017A32  6ED9               	movwf	fsr2l,c
 23574  017A34  50E2               	movf	fsr1h,w,c
 23575  017A36  6EDA               	movwf	fsr2h,c
 23576  017A38  0EFF               	movlw	255
 23577  017A3A  22DA               	addwfc	fsr2h,f,c
 23578  017A3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 23579  017A42  006F FF77 FFF7     	movff	postdec2,tblptrh
 23580  017A48                     	if	0	;tblptru may be non-zero
 23581  017A48                     	endif
 23582  017A48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23583  017A48  0E00               	movlw	low (__mediumconst shr (0+16))
 23584  017A4A  6EF8               	movwf	tblptru,c
 23585  017A4C                     	endif
 23586  017A4C  0008               	tblrd		*
 23587  017A4E  50F5               	movf	tablat,w,c
 23588  017A50  6E09               	movwf	(btemp+8)^0,c
 23589  017A52  6A0A               	clrf	(btemp+9)^0,c
 23590  017A54  500B               	movf	(btemp+10)^0,w,c
 23591  017A56  2609               	addwf	(btemp+8)^0,f,c
 23592  017A58  500C               	movf	(btemp+11)^0,w,c
 23593  017A5A  220A               	addwfc	(btemp+9)^0,f,c
 23594  017A5C  500A               	movf	(btemp+9)^0,w,c
 23595  017A5E  E104               	bnz	u8680
 23596  017A60  0E05               	movlw	5
 23597  017A62  5C09               	subwf	(btemp+8)^0,w,c
 23598  017A64  A0D8               	btfss	status,0,c
 23599  017A66  D002               	goto	l9568
 23600  017A68                     u8680:
 23601                           
 23602                           ;stkvar	_atoi$6400 @ sp[(-9)+4]
 23603  017A68  0EFB               	movlw	-5
 23604  017A6A  6AE3               	clrf	plusw1,c
 23605  017A6C                     l9568:
 23606                           
 23607                           ;stkvar	_atoi$6400 @ sp[(-9)+4]
 23608  017A6C  0EFB               	movlw	-5
 23609  017A6E  50E3               	movf	plusw1,w,c
 23610  017A70  6E0B               	movwf	(btemp+10)^0,c
 23611  017A72  6A0C               	clrf	(btemp+11)^0,c
 23612                           
 23613                           ;stkvar	_atoi$6399 @ sp[(-9)+2]
 23614  017A74  0EF9               	movlw	-7
 23615  017A76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23616  017A7C  0EFA               	movlw	-6
 23617  017A7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23618                           
 23619                           ;stkvar	_atoi$6399 @ sp[(-9)+2]
 23620  017A84  0EF9               	movlw	-7
 23621  017A86  006F FF8C  F001    	movff	plusw1,btemp
 23622  017A8C  0EFA               	movlw	-6
 23623  017A8E  50E3               	movf	plusw1,w,c
 23624  017A90  1001               	iorwf	btemp^0,w,c
 23625  017A92  B4D8               	btfsc	status,2,c
 23626  017A94  D01F               	goto	l9578
 23627  017A96  D79F               	goto	l9558
 23628  017A98                     l9574:
 23629  017A98  0E01               	movlw	1
 23630  017A9A  6E0B               	movwf	(btemp+10)^0,c
 23631  017A9C  0E00               	movlw	0
 23632  017A9E  6E0C               	movwf	(btemp+11)^0,c
 23633                           
 23634                           ;stkvar	_neg @ sp[(-9)+7]
 23635  017AA0  0EFE               	movlw	-2
 23636  017AA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23637  017AA8  0EFF               	movlw	-1
 23638  017AAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23639  017AB0                     l9576:
 23640                           
 23641                           ;stkvar	_s @ sp[(-9)+-2]
 23642  017AB0  0EF5               	movlw	-11
 23643  017AB2  50E3               	movf	plusw1,w,c
 23644  017AB4  0F01               	addlw	1
 23645  017AB6  6E01               	movwf	btemp^0,c
 23646  017AB8  0EF5               	movlw	-11
 23647  017ABA  0060  F007  FFE3   	movff	btemp,plusw1
 23648  017AC0  6A01               	clrf	btemp^0,c
 23649  017AC2  0EF6               	movlw	-10
 23650  017AC4  50E3               	movf	plusw1,w,c
 23651  017AC6  2001               	addwfc	btemp^0,w,c
 23652  017AC8  6E01               	movwf	btemp^0,c
 23653  017ACA  0EF6               	movlw	-10
 23654  017ACC  0060  F007  FFE3   	movff	btemp,plusw1
 23655  017AD2  D053               	goto	l9584
 23656  017AD4                     l9578:
 23657                           
 23658                           ;stkvar	_s @ sp[(-9)+-2]
 23659  017AD4  50E1               	movf	fsr1l,w,c
 23660  017AD6  0FF5               	addlw	-11
 23661  017AD8  6ED9               	movwf	fsr2l,c
 23662  017ADA  50E2               	movf	fsr1h,w,c
 23663  017ADC  6EDA               	movwf	fsr2h,c
 23664  017ADE  0EFF               	movlw	255
 23665  017AE0  22DA               	addwfc	fsr2h,f,c
 23666  017AE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 23667  017AE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 23668  017AEE                     	if	0	;tblptru may be non-zero
 23669  017AEE                     	endif
 23670  017AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23671  017AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 23672  017AF0  6EF8               	movwf	tblptru,c
 23673  017AF2                     	endif
 23674  017AF2  0008               	tblrd		*
 23675  017AF4  50F5               	movf	tablat,w,c
 23676  017AF6  6E0B               	movwf	(btemp+10)^0,c
 23677  017AF8  6A0C               	clrf	(btemp+11)^0,c
 23678                           
 23679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23680                           ; Switch size 1, requested type "simple"
 23681                           ; Number of cases is 1, Range of values is 0 to 0
 23682                           ; switch strategies available:
 23683                           ; Name         Instructions Cycles
 23684                           ; simple_byte            4     3 (average)
 23685                           ;	Chosen strategy is simple_byte
 23686  017AFA  500C               	movf	(btemp+11)^0,w,c
 23687  017AFC  0A00               	xorlw	0	; case 0
 23688  017AFE  A4D8               	btfss	status,2,c
 23689  017B00  D03C               	goto	l9584
 23690                           
 23691                           ; Switch size 1, requested type "simple"
 23692                           ; Number of cases is 2, Range of values is 43 to 45
 23693                           ; switch strategies available:
 23694                           ; Name         Instructions Cycles
 23695                           ; simple_byte            7     4 (average)
 23696                           ;	Chosen strategy is simple_byte
 23697  017B02  500B               	movf	(btemp+10)^0,w,c
 23698  017B04  0A2B               	xorlw	43	; case 43
 23699  017B06  B4D8               	btfsc	status,2,c
 23700  017B08  D7D3               	goto	l9576
 23701  017B0A  0A06               	xorlw	6	; case 45
 23702  017B0C  B4D8               	btfsc	status,2,c
 23703  017B0E  D7C4               	goto	l9574
 23704  017B10  D034               	goto	l9584
 23705  017B12                     l9580:
 23706                           
 23707                           ;stkvar	_n @ sp[(-9)+5]
 23708  017B12  0EFC               	movlw	-4
 23709  017B14  006F FF8C  F00B    	movff	plusw1,btemp+10
 23710  017B1A  0EFD               	movlw	-3
 23711  017B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23712  017B22  0E0A               	movlw	10
 23713  017B24  020B               	mulwf	(btemp+10)^0,c
 23714  017B26  006F FFCC  F009    	movff	prodl,btemp+8
 23715  017B2C  006F FFD0  F00A    	movff	prodh,btemp+9
 23716  017B32  020C               	mulwf	(btemp+11)^0,c
 23717  017B34  50F3               	movf	prodl,w,c
 23718  017B36  260A               	addwf	(btemp+9)^0,f,c
 23719                           
 23720                           ;stkvar	_s @ sp[(-9)+-2]
 23721  017B38  50E1               	movf	fsr1l,w,c
 23722  017B3A  0FF5               	addlw	-11
 23723  017B3C  6ED9               	movwf	fsr2l,c
 23724  017B3E  50E2               	movf	fsr1h,w,c
 23725  017B40  6EDA               	movwf	fsr2h,c
 23726  017B42  0EFF               	movlw	255
 23727  017B44  22DA               	addwfc	fsr2h,f,c
 23728  017B46  006F FF7B FFF6     	movff	postinc2,tblptrl
 23729  017B4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 23730  017B52                     	if	0	;tblptru may be non-zero
 23731  017B52                     	endif
 23732  017B52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23733  017B52  0E00               	movlw	low (__mediumconst shr (0+16))
 23734  017B54  6EF8               	movwf	tblptru,c
 23735  017B56                     	endif
 23736  017B56  0008               	tblrd		*
 23737  017B58  50F5               	movf	tablat,w,c
 23738  017B5A  5E09               	subwf	(btemp+8)^0,f,c
 23739  017B5C  0E00               	movlw	0
 23740  017B5E  5A0A               	subwfb	(btemp+9)^0,f,c
 23741  017B60  0E30               	movlw	48
 23742  017B62  2609               	addwf	(btemp+8)^0,f,c
 23743  017B64  0E00               	movlw	0
 23744  017B66  220A               	addwfc	(btemp+9)^0,f,c
 23745                           
 23746                           ;stkvar	_n @ sp[(-9)+5]
 23747  017B68  0EFC               	movlw	-4
 23748  017B6A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23749  017B70  0EFD               	movlw	-3
 23750  017B72  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23751  017B78  D79B               	goto	l9576
 23752  017B7A                     l9584:
 23753  017B7A  0ED0               	movlw	208
 23754  017B7C  6E0B               	movwf	(btemp+10)^0,c
 23755  017B7E  0EFF               	movlw	255
 23756  017B80  6E0C               	movwf	(btemp+11)^0,c
 23757                           
 23758                           ;stkvar	_s @ sp[(-9)+-2]
 23759  017B82  50E1               	movf	fsr1l,w,c
 23760  017B84  0FF5               	addlw	-11
 23761  017B86  6ED9               	movwf	fsr2l,c
 23762  017B88  50E2               	movf	fsr1h,w,c
 23763  017B8A  6EDA               	movwf	fsr2h,c
 23764  017B8C  0EFF               	movlw	255
 23765  017B8E  22DA               	addwfc	fsr2h,f,c
 23766  017B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 23767  017B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 23768  017B9C                     	if	0	;tblptru may be non-zero
 23769  017B9C                     	endif
 23770  017B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23771  017B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 23772  017B9E  6EF8               	movwf	tblptru,c
 23773  017BA0                     	endif
 23774  017BA0  0008               	tblrd		*
 23775  017BA2  50F5               	movf	tablat,w,c
 23776  017BA4  6E09               	movwf	(btemp+8)^0,c
 23777  017BA6  6A0A               	clrf	(btemp+9)^0,c
 23778  017BA8  500B               	movf	(btemp+10)^0,w,c
 23779  017BAA  2609               	addwf	(btemp+8)^0,f,c
 23780  017BAC  500C               	movf	(btemp+11)^0,w,c
 23781  017BAE  220A               	addwfc	(btemp+9)^0,f,c
 23782  017BB0  500A               	movf	(btemp+9)^0,w,c
 23783  017BB2  E106               	bnz	u8700
 23784  017BB4  0E0A               	movlw	10
 23785  017BB6  5C09               	subwf	(btemp+8)^0,w,c
 23786  017BB8  B0D8               	btfsc	status,0,c
 23787  017BBA  D002               	goto	u8700
 23788  017BBC  0E01               	movlw	1
 23789  017BBE  D001               	goto	u8710
 23790  017BC0                     u8700:
 23791  017BC0  0E00               	movlw	0
 23792  017BC2                     u8710:
 23793  017BC2  6E0B               	movwf	(btemp+10)^0,c
 23794  017BC4  6A0C               	clrf	(btemp+11)^0,c
 23795                           
 23796                           ;stkvar	_atoi$6401 @ sp[(-9)+0]
 23797  017BC6  0EF7               	movlw	-9
 23798  017BC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23799  017BCE  0EF8               	movlw	-8
 23800  017BD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23801                           
 23802                           ;stkvar	_atoi$6401 @ sp[(-9)+0]
 23803  017BD6  0EF7               	movlw	-9
 23804  017BD8  006F FF8C  F001    	movff	plusw1,btemp
 23805  017BDE  0EF8               	movlw	-8
 23806  017BE0  50E3               	movf	plusw1,w,c
 23807  017BE2  1001               	iorwf	btemp^0,w,c
 23808  017BE4  A4D8               	btfss	status,2,c
 23809  017BE6  D795               	goto	l9580
 23810                           
 23811                           ;stkvar	_neg @ sp[(-9)+7]
 23812  017BE8  0EFE               	movlw	-2
 23813  017BEA  006F FF8C  F001    	movff	plusw1,btemp
 23814  017BF0  0EFF               	movlw	-1
 23815  017BF2  50E3               	movf	plusw1,w,c
 23816  017BF4  1001               	iorwf	btemp^0,w,c
 23817  017BF6  A4D8               	btfss	status,2,c
 23818  017BF8  D00E               	goto	l9594
 23819                           
 23820                           ;stkvar	_n @ sp[(-9)+5]
 23821  017BFA  0EFC               	movlw	-4
 23822  017BFC  006F FF8C  F001    	movff	plusw1,btemp
 23823  017C02  1E01               	comf	btemp^0,f,c
 23824  017C04  0EFD               	movlw	-3
 23825  017C06  006F FF8C  F002    	movff	plusw1,btemp+1
 23826  017C0C  1E02               	comf	(btemp+1)^0,f,c
 23827  017C0E  2A01               	incf	btemp^0,f,c
 23828  017C10  B4D8               	btfsc	status,2,c
 23829  017C12  2A02               	incf	(btemp+1)^0,f,c
 23830  017C14  D008               	goto	l3229
 23831  017C16                     l9594:
 23832                           
 23833                           ;stkvar	_n @ sp[(-9)+5]
 23834  017C16  0EFC               	movlw	-4
 23835  017C18  006F FF8C  F001    	movff	plusw1,btemp
 23836  017C1E  0EFD               	movlw	-3
 23837  017C20  006F FF8C  F002    	movff	plusw1,btemp+1
 23838  017C26                     l3229:
 23839                           
 23840                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23841  017C26  0EF5               	movlw	245
 23842  017C28  26E1               	addwf	fsr1l,f,c
 23843  017C2A  0EFF               	movlw	255
 23844  017C2C  22E2               	addwfc	fsr1h,f,c
 23845  017C2E  0012               	return		;funcret
 23846  017C30                     __end_of_atoi:
 23847                           	opt callstack 0
 23848                           
 23849 ;; *************** function _isspace *****************
 23850 ;; Defined at:
 23851 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23852 ;; Parameters:    Size  Location     Type
 23853 ;;  c               2  [STACK] int 
 23854 ;; Auto vars:     Size  Location     Type
 23855 ;;		None
 23856 ;; Return value:  Size  Location     Type
 23857 ;;                  2  [STACK] int 
 23858 ;; Registers used:
 23859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23860 ;; Tracked objects:
 23861 ;;		On entry : 0/0
 23862 ;;		On exit  : 0/0
 23863 ;;		Unchanged: 0/0
 23864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23869 ;;Total ram usage:        0 bytes
 23870 ;; Hardware stack levels used:    1
 23871 ;; Hardware stack levels required when called:   15
 23872 ;; This function calls:
 23873 ;;		Nothing
 23874 ;; This function is called by:
 23875 ;;		_atoi
 23876 ;; This function uses a reentrant model
 23877 ;;
 23878                           
 23879                           	psect	text86
 23880  01B868                     __ptext86:
 23881                           	opt callstack 0
 23882  01B868                     _isspace:
 23883                           	opt callstack 0
 23884                           
 23885                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23886  01B868  52E6               	movf	postinc1,f,c
 23887                           
 23888                           ;stkvar	_isspace$6450 @ sp[(-1)+0]
 23889                           
 23890                           ;incstack = 0
 23891 ;; hardware stack exceeded
 23892  01B86A  0EFF               	movlw	-1
 23893  01B86C  6AE3               	clrf	plusw1,c
 23894  01B86E  2AE3               	incf	plusw1,f,c
 23895                           
 23896                           ;stkvar	_c @ sp[(-1)+-2]
 23897  01B870  0EFD               	movlw	-3
 23898  01B872  006F FF8C  F001    	movff	plusw1,btemp
 23899  01B878  0E20               	movlw	32
 23900  01B87A  1801               	xorwf	btemp^0,w,c
 23901  01B87C  E104               	bnz	u7570
 23902  01B87E  0EFE               	movlw	-2
 23903  01B880  50E3               	movf	plusw1,w,c
 23904  01B882  B4D8               	btfsc	status,2,c
 23905  01B884  D012               	goto	l8978
 23906  01B886                     u7570:
 23907                           
 23908                           ;stkvar	_c @ sp[(-1)+-2]
 23909  01B886  0EFD               	movlw	-3
 23910  01B888  50E3               	movf	plusw1,w,c
 23911  01B88A  0FF7               	addlw	247
 23912  01B88C  6E0B               	movwf	(btemp+10)^0,c
 23913  01B88E  0EFE               	movlw	-2
 23914  01B890  006F FF8C  F00C    	movff	plusw1,btemp+11
 23915  01B896  0EFF               	movlw	255
 23916  01B898  220C               	addwfc	(btemp+11)^0,f,c
 23917  01B89A  500C               	movf	(btemp+11)^0,w,c
 23918  01B89C  E104               	bnz	u7580
 23919  01B89E  0E05               	movlw	5
 23920  01B8A0  5C0B               	subwf	(btemp+10)^0,w,c
 23921  01B8A2  A0D8               	btfss	status,0,c
 23922  01B8A4  D002               	goto	l8978
 23923  01B8A6                     u7580:
 23924                           
 23925                           ;stkvar	_isspace$6450 @ sp[(-1)+0]
 23926  01B8A6  0EFF               	movlw	-1
 23927  01B8A8  6AE3               	clrf	plusw1,c
 23928  01B8AA                     l8978:
 23929                           
 23930                           ;stkvar	_isspace$6450 @ sp[(-1)+0]
 23931  01B8AA  0EFF               	movlw	-1
 23932  01B8AC  50E3               	movf	plusw1,w,c
 23933  01B8AE  6E01               	movwf	btemp^0,c
 23934  01B8B0  6A02               	clrf	(btemp+1)^0,c
 23935                           
 23936                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23937  01B8B2  52E5               	movf	postdec1,f,c
 23938  01B8B4  52E5               	movf	postdec1,f,c
 23939  01B8B6  52E5               	movf	postdec1,f,c
 23940  01B8B8  0012               	return		;funcret
 23941  01B8BA                     __end_of_isspace:
 23942                           	opt callstack 0
 23943                           
 23944 ;; *************** function _isdigit *****************
 23945 ;; Defined at:
 23946 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;  c               2  [STACK] int 
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;		None
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  2  [STACK] int 
 23953 ;; Registers used:
 23954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23955 ;; Tracked objects:
 23956 ;;		On entry : 0/0
 23957 ;;		On exit  : 0/0
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23964 ;;Total ram usage:        0 bytes
 23965 ;; Hardware stack levels used:    1
 23966 ;; Hardware stack levels required when called:   15
 23967 ;; This function calls:
 23968 ;;		Nothing
 23969 ;; This function is called by:
 23970 ;;		_vfpfcnvrt
 23971 ;;		_atoi
 23972 ;; This function uses a reentrant model
 23973 ;;
 23974                           
 23975                           	psect	text87
 23976  01C014                     __ptext87:
 23977                           	opt callstack 0
 23978  01C014                     _isdigit:
 23979                           	opt callstack 0
 23980                           
 23981                           ;stkvar	_c @ sp[(0)+-2]
 23982                           
 23983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23984                           ;incstack = 0
 23985 ;; hardware stack exceeded
 23986  01C014  0EFE               	movlw	-2
 23987  01C016  50E3               	movf	plusw1,w,c
 23988  01C018  0FD0               	addlw	208
 23989  01C01A  6E0B               	movwf	(btemp+10)^0,c
 23990  01C01C  0EFF               	movlw	-1
 23991  01C01E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23992  01C024  0EFF               	movlw	255
 23993  01C026  220C               	addwfc	(btemp+11)^0,f,c
 23994  01C028  500C               	movf	(btemp+11)^0,w,c
 23995  01C02A  E106               	bnz	u6420
 23996  01C02C  0E0A               	movlw	10
 23997  01C02E  5C0B               	subwf	(btemp+10)^0,w,c
 23998  01C030  B0D8               	btfsc	status,0,c
 23999  01C032  D002               	goto	u6420
 24000  01C034  0E01               	movlw	1
 24001  01C036  D001               	goto	u6430
 24002  01C038                     u6420:
 24003  01C038  0E00               	movlw	0
 24004  01C03A                     u6430:
 24005  01C03A  6E01               	movwf	btemp^0,c
 24006  01C03C  6A02               	clrf	(btemp+1)^0,c
 24007                           
 24008                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24009  01C03E  52E5               	movf	postdec1,f,c
 24010  01C040  52E5               	movf	postdec1,f,c
 24011  01C042  0012               	return		;funcret
 24012  01C044                     __end_of_isdigit:
 24013                           	opt callstack 0
 24014                           
 24015 ;; *************** function _set_vterm *****************
 24016 ;; Defined at:
 24017 ;;		line 107 in file "mconfig.c"
 24018 ;; Parameters:    Size  Location     Type
 24019 ;;  vterm           1  [STACK] const unsigned char 
 24020 ;; Auto vars:     Size  Location     Type
 24021 ;;		None
 24022 ;; Return value:  Size  Location     Type
 24023 ;;                  1  [STACK] unsigned char 
 24024 ;; Registers used:
 24025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 24026 ;; Tracked objects:
 24027 ;;		On entry : 0/1
 24028 ;;		On exit  : 0/0
 24029 ;;		Unchanged: 0/0
 24030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24035 ;;Total ram usage:        0 bytes
 24036 ;; Hardware stack levels used:    1
 24037 ;; Hardware stack levels required when called:   15
 24038 ;; This function calls:
 24039 ;;		Nothing
 24040 ;; This function is called by:
 24041 ;;		_main
 24042 ;;		_check_help
 24043 ;; This function uses a reentrant model
 24044 ;;
 24045                           
 24046                           	psect	text88
 24047  01C536                     __ptext88:
 24048                           	opt callstack 0
 24049  01C536                     _set_vterm:
 24050                           	opt callstack 15
 24051                           
 24052                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 24053                           ;stkvar	_vterm @ sp[(0)+-1]
 24054                           
 24055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24056                           ;incstack = 0
 24057  01C536  0EFF               	movlw	-1
 24058  01C538  006F FF8C  F00C    	movff	plusw1,btemp+11
 24059  01C53E  0E03               	movlw	3
 24060  01C540  160C               	andwf	(btemp+11)^0,f,c
 24061  01C542  EE22  F20A         	lfsr	2,_D+480
 24062  01C546  50DF               	movf	223,w,c
 24063  01C548  180C               	xorwf	(btemp+11)^0,w,c
 24064  01C54A  0BFE               	andlw	-2
 24065  01C54C  180C               	xorwf	(btemp+11)^0,w,c
 24066  01C54E  6EDF               	movwf	223,c
 24067                           
 24068                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24069  01C550  52E5               	movf	postdec1,f,c
 24070  01C552  0012               	return		;funcret
 24071  01C554                     __end_of_set_vterm:
 24072                           	opt callstack 0
 24073                           
 24074 ;; *************** function _set_temp_display_help *****************
 24075 ;; Defined at:
 24076 ;;		line 211 in file "mconfig.c"
 24077 ;; Parameters:    Size  Location     Type
 24078 ;;  new_response    1  [STACK] const enum E16509
 24079 ;; Auto vars:     Size  Location     Type
 24080 ;;		None
 24081 ;; Return value:  Size  Location     Type
 24082 ;;                  1  [STACK] enum E16509
 24083 ;; Registers used:
 24084 ;;		wreg, fsr1l, fsr1h
 24085 ;; Tracked objects:
 24086 ;;		On entry : 0/1
 24087 ;;		On exit  : 3F/1
 24088 ;;		Unchanged: 0/0
 24089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24094 ;;Total ram usage:        0 bytes
 24095 ;; Hardware stack levels used:    1
 24096 ;; Hardware stack levels required when called:   15
 24097 ;; This function calls:
 24098 ;;		Nothing
 24099 ;; This function is called by:
 24100 ;;		_check_help
 24101 ;; This function uses a reentrant model
 24102 ;;
 24103                           
 24104                           	psect	text89
 24105  01C67E                     __ptext89:
 24106                           	opt callstack 0
 24107  01C67E                     _set_temp_display_help:
 24108                           	opt callstack 14
 24109                           
 24110                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 24111                           
 24112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24113                           ;incstack = 0
 24114  01C67E  0101               	movlb	1	; () banked
 24115  01C680  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 24116                           
 24117                           ; BSR set to: 1
 24118                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 24119                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24120  01C682  0EFF               	movlw	-1
 24121  01C684  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 24122                           
 24123                           ; BSR set to: 1
 24124                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 24125  01C68A  52E5               	movf	postdec1,f,c
 24126  01C68C  0012               	return		;funcret
 24127  01C68E                     __end_of_set_temp_display_help:
 24128                           	opt callstack 0
 24129                           
 24130 ;; *************** function _set_display_info *****************
 24131 ;; Defined at:
 24132 ;;		line 200 in file "mconfig.c"
 24133 ;; Parameters:    Size  Location     Type
 24134 ;;  new_response    1  [STACK] const enum E16509
 24135 ;; Auto vars:     Size  Location     Type
 24136 ;;		None
 24137 ;; Return value:  Size  Location     Type
 24138 ;;                  1  [STACK] enum E16994
 24139 ;; Registers used:
 24140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24141 ;; Tracked objects:
 24142 ;;		On entry : 0/1
 24143 ;;		On exit  : 0/0
 24144 ;;		Unchanged: 0/0
 24145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;Total ram usage:        0 bytes
 24151 ;; Hardware stack levels used:    1
 24152 ;; Hardware stack levels required when called:   16
 24153 ;; This function calls:
 24154 ;;		_TimerDone
 24155 ;; This function is called by:
 24156 ;;		_main
 24157 ;;		_check_help
 24158 ;; This function uses a reentrant model
 24159 ;;
 24160                           
 24161                           	psect	text90
 24162  01C554                     __ptext90:
 24163                           	opt callstack 0
 24164  01C554                     _set_display_info:
 24165                           	opt callstack 14
 24166                           
 24167                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 24168                           
 24169                           ; BSR set to: 1
 24170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24171                           ;incstack = 0
 24172  01C554  0E07               	movlw	7
 24173  01C556  6EE6               	movwf	postinc1,c
 24174  01C558  ECA5  F0E0         	call	_TimerDone	;wreg free
 24175  01C55C  5001               	movf	btemp^0,w,c
 24176  01C55E  B4D8               	btfsc	status,2,c
 24177  01C560  D006               	goto	l1738
 24178                           
 24179                           ;mconfig.c: 205:   old_info = V.response.info;
 24180  01C562  0101               	movlb	1	; () banked
 24181  01C564  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 24182                           
 24183                           ; BSR set to: 1
 24184                           ;mconfig.c: 206:   V.response.info = new_response_info;
 24185                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24186  01C566  0EFF               	movlw	-1
 24187  01C568  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 24188  01C56E                     l1738:
 24189                           
 24190                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24191  01C56E  52E5               	movf	postdec1,f,c
 24192  01C570  0012               	return		;funcret
 24193  01C572                     __end_of_set_display_info:
 24194                           	opt callstack 0
 24195                           
 24196 ;; *************** function _mode_lamp_dim *****************
 24197 ;; Defined at:
 24198 ;;		line 13 in file "mconfig.c"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;  level           2  [STACK] const unsigned short 
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;		None
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  1  [STACK] void 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/1
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24216 ;;Total ram usage:        0 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:   16
 24219 ;; This function calls:
 24220 ;;		_PWM8_LoadDutyValue
 24221 ;; This function is called by:
 24222 ;;		_main
 24223 ;;		_check_help
 24224 ;; This function uses a reentrant model
 24225 ;;
 24226                           
 24227                           	psect	text91
 24228  01C5C6                     __ptext91:
 24229                           	opt callstack 0
 24230  01C5C6                     _mode_lamp_dim:
 24231                           	opt callstack 14
 24232                           
 24233                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 24234                           ;stkvar	_level @ sp[(0)+-2]
 24235                           
 24236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24237                           ;incstack = 0
 24238  01C5C6  0EFE               	movlw	-2
 24239  01C5C8  006F FF8F FFE6     	movff	plusw1,postinc1
 24240  01C5CE  006F FF8F FFE6     	movff	plusw1,postinc1
 24241  01C5D4  ECEF  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 24242                           
 24243                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24244  01C5D8  52E5               	movf	postdec1,f,c
 24245  01C5DA  52E5               	movf	postdec1,f,c
 24246  01C5DC  0012               	return		;funcret
 24247  01C5DE                     __end_of_mode_lamp_dim:
 24248                           	opt callstack 0
 24249                           
 24250 ;; *************** function _mode_lamp_bright *****************
 24251 ;; Defined at:
 24252 ;;		line 18 in file "mconfig.c"
 24253 ;; Parameters:    Size  Location     Type
 24254 ;;		None
 24255 ;; Auto vars:     Size  Location     Type
 24256 ;;		None
 24257 ;; Return value:  Size  Location     Type
 24258 ;;                  1  [STACK] void 
 24259 ;; Registers used:
 24260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24261 ;; Tracked objects:
 24262 ;;		On entry : 0/0
 24263 ;;		On exit  : 0/0
 24264 ;;		Unchanged: 0/0
 24265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24270 ;;Total ram usage:        0 bytes
 24271 ;; Hardware stack levels used:    1
 24272 ;; Hardware stack levels required when called:   16
 24273 ;; This function calls:
 24274 ;;		_PWM8_LoadDutyValue
 24275 ;; This function is called by:
 24276 ;;		_check_help
 24277 ;; This function uses a reentrant model
 24278 ;;
 24279                           
 24280                           	psect	text92
 24281  01C6AC                     __ptext92:
 24282                           	opt callstack 0
 24283  01C6AC                     _mode_lamp_bright:
 24284                           	opt callstack 13
 24285                           
 24286                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 24287                           
 24288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24289                           ;incstack = 0
 24290  01C6AC  0E2C               	movlw	44
 24291  01C6AE  6EE6               	movwf	postinc1,c
 24292  01C6B0  0E01               	movlw	1
 24293  01C6B2  6EE6               	movwf	postinc1,c
 24294  01C6B4  ECEF  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 24295                           
 24296                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24297  01C6B8  0012               	return		;funcret
 24298  01C6BA                     __end_of_mode_lamp_bright:
 24299                           	opt callstack 0
 24300                           
 24301 ;; *************** function _PWM8_LoadDutyValue *****************
 24302 ;; Defined at:
 24303 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 24304 ;; Parameters:    Size  Location     Type
 24305 ;;  dutyValue       2  [STACK] unsigned short 
 24306 ;; Auto vars:     Size  Location     Type
 24307 ;;		None
 24308 ;; Return value:  Size  Location     Type
 24309 ;;                  1  [STACK] void 
 24310 ;; Registers used:
 24311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24312 ;; Tracked objects:
 24313 ;;		On entry : 0/1
 24314 ;;		On exit  : 0/0
 24315 ;;		Unchanged: 0/0
 24316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24321 ;;Total ram usage:        0 bytes
 24322 ;; Hardware stack levels used:    1
 24323 ;; Hardware stack levels required when called:   15
 24324 ;; This function calls:
 24325 ;;		Nothing
 24326 ;; This function is called by:
 24327 ;;		_mode_lamp_dim
 24328 ;;		_mode_lamp_bright
 24329 ;; This function uses a reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text93
 24333  01BBDE                     __ptext93:
 24334                           	opt callstack 0
 24335  01BBDE                     _PWM8_LoadDutyValue:
 24336                           	opt callstack 14
 24337                           
 24338                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24339                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24340                           
 24341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24342                           ;incstack = 0
 24343  01BBDE  0EFE               	movlw	-2
 24344  01BBE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24345  01BBE6  0EFF               	movlw	-1
 24346  01BBE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24347  01BBEE  90D8               	bcf	status,0,c
 24348  01BBF0  320C               	rrcf	(btemp+11)^0,f,c
 24349  01BBF2  320B               	rrcf	(btemp+10)^0,f,c
 24350  01BBF4  90D8               	bcf	status,0,c
 24351  01BBF6  320C               	rrcf	(btemp+11)^0,f,c
 24352  01BBF8  320B               	rrcf	(btemp+10)^0,f,c
 24353  01BBFA  500B               	movf	(btemp+10)^0,w,c
 24354  01BBFC  6E61               	movwf	97,c	;volatile
 24355                           
 24356                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24357                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24358  01BBFE  0EFE               	movlw	-2
 24359  01BC00  006F FF8C  F00C    	movff	plusw1,btemp+11
 24360  01BC06  0E03               	movlw	3
 24361  01BC08  160C               	andwf	(btemp+11)^0,f,c
 24362  01BC0A  0E06               	movlw	6
 24363  01BC0C  6E01               	movwf	btemp^0,c
 24364  01BC0E                     u9525:
 24365  01BC0E  90D8               	bcf	status,0,c
 24366  01BC10  360C               	rlcf	(btemp+11)^0,f,c
 24367  01BC12  2E01               	decfsz	btemp^0,f,c
 24368  01BC14  D7FC               	goto	u9525
 24369  01BC16  500C               	movf	(btemp+11)^0,w,c
 24370  01BC18  6E60               	movwf	96,c	;volatile
 24371                           
 24372                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24373  01BC1A  52E5               	movf	postdec1,f,c
 24374  01BC1C  52E5               	movf	postdec1,f,c
 24375  01BC1E  0012               	return		;funcret
 24376  01BC20                     __end_of_PWM8_LoadDutyValue:
 24377                           	opt callstack 0
 24378                           
 24379 ;; *************** function _help_button *****************
 24380 ;; Defined at:
 24381 ;;		line 26 in file "mconfig.c"
 24382 ;; Parameters:    Size  Location     Type
 24383 ;;		None
 24384 ;; Auto vars:     Size  Location     Type
 24385 ;;		None
 24386 ;; Return value:  Size  Location     Type
 24387 ;;                  1  [STACK] _Bool 
 24388 ;; Registers used:
 24389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24390 ;; Tracked objects:
 24391 ;;		On entry : 0/1
 24392 ;;		On exit  : 0/0
 24393 ;;		Unchanged: 0/0
 24394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24399 ;;Total ram usage:        0 bytes
 24400 ;; Hardware stack levels used:    1
 24401 ;; Hardware stack levels required when called:   16
 24402 ;; This function calls:
 24403 ;;		_StartTimer
 24404 ;;		_TimerDone
 24405 ;; This function is called by:
 24406 ;;		_check_help
 24407 ;; This function uses a reentrant model
 24408 ;;
 24409                           
 24410                           	psect	text94
 24411  01BDD8                     __ptext94:
 24412                           	opt callstack 0
 24413  01BDD8                     _help_button:
 24414                           	opt callstack 13
 24415                           
 24416                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24417                           
 24418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24419                           ;incstack = 0
 24420  01BDD8  B0CB               	btfsc	203,0,c	;volatile
 24421  01BDDA  D00C               	goto	l1681
 24422                           
 24423                           ;mconfig.c: 29:   V.help = 1;
 24424  01BDDC  0101               	movlb	1	; () banked
 24425  01BDDE  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24429  01BDE0  0E08               	movlw	8
 24430  01BDE2  6EE6               	movwf	postinc1,c
 24431  01BDE4  ECA5  F0E0         	call	_TimerDone	;wreg free
 24432  01BDE8  5001               	movf	btemp^0,w,c
 24433  01BDEA  B4D8               	btfsc	status,2,c
 24434  01BDEC  D003               	goto	l1681
 24435                           
 24436                           ;mconfig.c: 31:    return 1;
 24437  01BDEE  0E01               	movlw	1
 24438  01BDF0  6E01               	movwf	btemp^0,c
 24439  01BDF2  0012               	return	
 24440  01BDF4                     l1681:
 24441                           
 24442                           ;mconfig.c: 34:  if (!V.help)
 24443  01BDF4  0101               	movlb	1	; () banked
 24444  01BDF6  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24445  01BDF8  D008               	goto	l10706
 24446                           
 24447                           ; BSR set to: 1
 24448                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24449  01BDFA  0E2C               	movlw	44
 24450  01BDFC  6EE6               	movwf	postinc1,c
 24451  01BDFE  0E01               	movlw	1
 24452  01BE00  6EE6               	movwf	postinc1,c
 24453  01BE02  0E08               	movlw	8
 24454  01BE04  6EE6               	movwf	postinc1,c
 24455  01BE06  EC50  F0DE         	call	_StartTimer	;wreg free
 24456  01BE0A                     l10706:
 24457                           
 24458                           ;mconfig.c: 37:  return 0;
 24459  01BE0A  0E00               	movlw	0
 24460  01BE0C  6E01               	movwf	btemp^0,c
 24461                           
 24462                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24463  01BE0E  0012               	return		;funcret
 24464  01BE10                     __end_of_help_button:
 24465                           	opt callstack 0
 24466                           
 24467 ;; *************** function _TimerDone *****************
 24468 ;; Defined at:
 24469 ;;		line 20 in file "timers.c"
 24470 ;; Parameters:    Size  Location     Type
 24471 ;;  timer           1  [STACK] const unsigned char 
 24472 ;; Auto vars:     Size  Location     Type
 24473 ;;		None
 24474 ;; Return value:  Size  Location     Type
 24475 ;;                  1  [STACK] _Bool 
 24476 ;; Registers used:
 24477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24478 ;; Tracked objects:
 24479 ;;		On entry : 0/1
 24480 ;;		On exit  : 0/0
 24481 ;;		Unchanged: 0/0
 24482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24487 ;;Total ram usage:        0 bytes
 24488 ;; Hardware stack levels used:    1
 24489 ;; Hardware stack levels required when called:   15
 24490 ;; This function calls:
 24491 ;;		Nothing
 24492 ;; This function is called by:
 24493 ;;		_main
 24494 ;;		_WaitMs
 24495 ;;		_help_button
 24496 ;;		_check_help
 24497 ;;		_set_display_info
 24498 ;;		_update_adc_result
 24499 ;;		_esr_check
 24500 ;; This function uses a reentrant model
 24501 ;;
 24502                           
 24503                           	psect	text95
 24504  01C14A                     __ptext95:
 24505                           	opt callstack 0
 24506  01C14A                     _TimerDone:
 24507                           	opt callstack 14
 24508                           
 24509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24510                           ;incstack = 0
 24511  01C14A  0004               	clrwdt		;# 
 24512                           
 24513                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24514                           ;stkvar	_timer @ sp[(0)+-1]
 24515  01C14C  0EFF               	movlw	-1
 24516  01C14E  50E3               	movf	plusw1,w,c
 24517  01C150  0D02               	mullw	2
 24518  01C152  0E7D               	movlw	low _tickCount
 24519  01C154  24F3               	addwf	243,w,c
 24520  01C156  6ED9               	movwf	fsr2l,c
 24521  01C158  0E02               	movlw	high _tickCount
 24522  01C15A  20F4               	addwfc	prodh,w,c
 24523  01C15C  6EDA               	movwf	fsr2h,c
 24524  01C15E  50DE               	movf	postinc2,w,c
 24525  01C160  10DE               	iorwf	postinc2,w,c
 24526  01C162  A4D8               	btfss	status,2,c
 24527  01C164  D002               	goto	l9992
 24528                           
 24529                           ;timers.c: 24:   return 1;
 24530  01C166  0E01               	movlw	1
 24531  01C168  D001               	goto	L28
 24532  01C16A                     l9992:
 24533                           
 24534                           ;timers.c: 26:  return 0;
 24535  01C16A  0E00               	movlw	0
 24536  01C16C                     L28:
 24537  01C16C  6E01               	movwf	btemp^0,c
 24538                           
 24539                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24540  01C16E  52E5               	movf	postdec1,f,c
 24541  01C170  0012               	return		;funcret
 24542  01C172                     __end_of_TimerDone:
 24543                           	opt callstack 0
 24544                           
 24545 ;; *************** function _StartTimer *****************
 24546 ;; Defined at:
 24547 ;;		line 12 in file "timers.c"
 24548 ;; Parameters:    Size  Location     Type
 24549 ;;  timer           1  [STACK] const unsigned char 
 24550 ;;  count           2  [STACK] const unsigned short 
 24551 ;; Auto vars:     Size  Location     Type
 24552 ;;		None
 24553 ;; Return value:  Size  Location     Type
 24554 ;;                  1  [STACK] void 
 24555 ;; Registers used:
 24556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24557 ;; Tracked objects:
 24558 ;;		On entry : 0/0
 24559 ;;		On exit  : 0/0
 24560 ;;		Unchanged: 0/0
 24561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24566 ;;Total ram usage:        0 bytes
 24567 ;; Hardware stack levels used:    1
 24568 ;; Hardware stack levels required when called:   15
 24569 ;; This function calls:
 24570 ;;		Nothing
 24571 ;; This function is called by:
 24572 ;;		_main
 24573 ;;		_WaitMs
 24574 ;;		_help_button
 24575 ;;		_check_help
 24576 ;;		_update_adc_result
 24577 ;;		_calc_bsoc
 24578 ;;		_esr_check
 24579 ;; This function uses a reentrant model
 24580 ;;
 24581                           
 24582                           	psect	text96
 24583  01BCA0                     __ptext96:
 24584                           	opt callstack 0
 24585  01BCA0                     _StartTimer:
 24586                           	opt callstack 0
 24587                           
 24588                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24589                           ;stkvar	_count @ sp[(0)+-3]
 24590                           
 24591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24592                           ;incstack = 0
 24593 ;; hardware stack exceeded
 24594  01BCA0  0EFD               	movlw	-3
 24595  01BCA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24596  01BCA8  0EFE               	movlw	-2
 24597  01BCAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24598  01BCB0  90D8               	bcf	status,0,c
 24599  01BCB2  340B               	rlcf	(btemp+10)^0,w,c
 24600  01BCB4  6E09               	movwf	(btemp+8)^0,c
 24601  01BCB6  340C               	rlcf	(btemp+11)^0,w,c
 24602  01BCB8  6E0A               	movwf	(btemp+9)^0,c
 24603                           
 24604                           ;stkvar	_timer @ sp[(0)+-1]
 24605  01BCBA  0EFF               	movlw	-1
 24606  01BCBC  50E3               	movf	plusw1,w,c
 24607  01BCBE  0D02               	mullw	2
 24608  01BCC0  0E7D               	movlw	low _tickCount
 24609  01BCC2  24F3               	addwf	243,w,c
 24610  01BCC4  6ED9               	movwf	fsr2l,c
 24611  01BCC6  0E02               	movlw	high _tickCount
 24612  01BCC8  20F4               	addwfc	prodh,w,c
 24613  01BCCA  6EDA               	movwf	fsr2h,c
 24614  01BCCC  0060  F027  FFDE   	movff	btemp+8,postinc2
 24615  01BCD2  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24616                           
 24617                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24618  01BCD8  52E5               	movf	postdec1,f,c
 24619  01BCDA  52E5               	movf	postdec1,f,c
 24620  01BCDC  52E5               	movf	postdec1,f,c
 24621  01BCDE  0012               	return		;funcret
 24622  01BCE0                     __end_of_StartTimer:
 24623                           	opt callstack 0
 24624                           
 24625 ;; *************** function _display_info *****************
 24626 ;; Defined at:
 24627 ;;		line 190 in file "mconfig.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;		None
 24630 ;; Auto vars:     Size  Location     Type
 24631 ;;		None
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  1  [STACK] enum E16509
 24634 ;; Registers used:
 24635 ;;		btemp
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/1
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;Total ram usage:        0 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; Hardware stack levels required when called:   15
 24648 ;; This function calls:
 24649 ;;		Nothing
 24650 ;; This function is called by:
 24651 ;;		_check_help
 24652 ;; This function uses a reentrant model
 24653 ;;
 24654                           
 24655                           	psect	text97
 24656  01C72E                     __ptext97:
 24657                           	opt callstack 0
 24658  01C72E                     _display_info:
 24659                           	opt callstack 14
 24660                           
 24661                           ;mconfig.c: 192:  return V.response.info;
 24662                           
 24663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24664                           ;incstack = 0
 24665  01C72E  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24666                           
 24667                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24668  01C734  0012               	return		;funcret
 24669  01C736                     __end_of_display_info:
 24670                           	opt callstack 0
 24671                           
 24672 ;; *************** function _display_help *****************
 24673 ;; Defined at:
 24674 ;;		line 195 in file "mconfig.c"
 24675 ;; Parameters:    Size  Location     Type
 24676 ;;		None
 24677 ;; Auto vars:     Size  Location     Type
 24678 ;;		None
 24679 ;; Return value:  Size  Location     Type
 24680 ;;                  1  [STACK] enum E16509
 24681 ;; Registers used:
 24682 ;;		btemp
 24683 ;; Tracked objects:
 24684 ;;		On entry : 3F/1
 24685 ;;		On exit  : 0/0
 24686 ;;		Unchanged: 0/0
 24687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24692 ;;Total ram usage:        0 bytes
 24693 ;; Hardware stack levels used:    1
 24694 ;; Hardware stack levels required when called:   15
 24695 ;; This function calls:
 24696 ;;		Nothing
 24697 ;; This function is called by:
 24698 ;;		_check_help
 24699 ;; This function uses a reentrant model
 24700 ;;
 24701                           
 24702                           	psect	text98
 24703  01C736                     __ptext98:
 24704                           	opt callstack 0
 24705  01C736                     _display_help:
 24706                           	opt callstack 14
 24707                           
 24708                           ;mconfig.c: 197:  return V.response.help_temp;
 24709                           
 24710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24711                           ;incstack = 0
 24712  01C736  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24713                           
 24714                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24715  01C73C  0012               	return		;funcret
 24716  01C73E                     __end_of_display_help:
 24717                           	opt callstack 0
 24718                           
 24719 ;; *************** function _check_enter_button *****************
 24720 ;; Defined at:
 24721 ;;		line 49 in file "hid.c"
 24722 ;; Parameters:    Size  Location     Type
 24723 ;;  h               2  [STACK] PTR struct H_data
 24724 ;;		 -> H(9), 
 24725 ;; Auto vars:     Size  Location     Type
 24726 ;;		None
 24727 ;; Return value:  Size  Location     Type
 24728 ;;                  1  [STACK] _Bool 
 24729 ;; Registers used:
 24730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24731 ;; Tracked objects:
 24732 ;;		On entry : 0/0
 24733 ;;		On exit  : 0/0
 24734 ;;		Unchanged: 0/0
 24735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24740 ;;Total ram usage:        0 bytes
 24741 ;; Hardware stack levels used:    1
 24742 ;; Hardware stack levels required when called:   15
 24743 ;; This function calls:
 24744 ;;		Nothing
 24745 ;; This function is called by:
 24746 ;;		_main
 24747 ;; This function uses a reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text99
 24751  01B354                     __ptext99:
 24752                           	opt callstack 0
 24753  01B354                     _check_enter_button:
 24754                           	opt callstack 15
 24755                           
 24756                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24757                           ;stkvar	_h @ sp[(0)+-2]
 24758                           
 24759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24760                           ;incstack = 0
 24761  01B354  0EFE               	movlw	-2
 24762  01B356  006F FF8C  F00B    	movff	plusw1,btemp+10
 24763  01B35C  0EFF               	movlw	-1
 24764  01B35E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24765  01B364  0E04               	movlw	4
 24766  01B366  240B               	addwf	(btemp+10)^0,w,c
 24767  01B368  6ED9               	movwf	fsr2l,c
 24768  01B36A  0E00               	movlw	0
 24769  01B36C  200C               	addwfc	(btemp+11)^0,w,c
 24770  01B36E  6EDA               	movwf	fsr2h,c
 24771  01B370  50DF               	movf	indf2,w,c
 24772  01B372  A4D8               	btfss	status,2,c
 24773  01B374  D023               	goto	l13404
 24774                           
 24775                           ;stkvar	_h @ sp[(0)+-2]
 24776  01B376  0EFE               	movlw	-2
 24777  01B378  006F FF8C  F00B    	movff	plusw1,btemp+10
 24778  01B37E  0EFF               	movlw	-1
 24779  01B380  006F FF8C  F00C    	movff	plusw1,btemp+11
 24780  01B386  0E05               	movlw	5
 24781  01B388  240B               	addwf	(btemp+10)^0,w,c
 24782  01B38A  6ED9               	movwf	fsr2l,c
 24783  01B38C  0E00               	movlw	0
 24784  01B38E  200C               	addwfc	(btemp+11)^0,w,c
 24785  01B390  6EDA               	movwf	fsr2h,c
 24786  01B392  50DF               	movf	indf2,w,c
 24787  01B394  A4D8               	btfss	status,2,c
 24788  01B396  D012               	goto	l13404
 24789                           
 24790                           ;hid.c: 52:   h->wait_enter = 1;
 24791                           ;stkvar	_h @ sp[(0)+-2]
 24792  01B398  0EFE               	movlw	-2
 24793  01B39A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24794  01B3A0  0EFF               	movlw	-1
 24795  01B3A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24796  01B3A8  0E04               	movlw	4
 24797  01B3AA  240B               	addwf	(btemp+10)^0,w,c
 24798  01B3AC  6ED9               	movwf	fsr2l,c
 24799  01B3AE  0E00               	movlw	0
 24800  01B3B0  200C               	addwfc	(btemp+11)^0,w,c
 24801  01B3B2  6EDA               	movwf	fsr2h,c
 24802  01B3B4  0E01               	movlw	1
 24803  01B3B6  6EDF               	movwf	indf2,c
 24804                           
 24805                           ;hid.c: 53:   return 1;
 24806  01B3B8  0E01               	movlw	1
 24807  01B3BA  D001               	goto	L29
 24808  01B3BC                     l13404:
 24809                           
 24810                           ;hid.c: 55:  return 0;
 24811  01B3BC  0E00               	movlw	0
 24812  01B3BE                     L29:
 24813  01B3BE  6E01               	movwf	btemp^0,c
 24814                           
 24815                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24816  01B3C0  52E5               	movf	postdec1,f,c
 24817  01B3C2  52E5               	movf	postdec1,f,c
 24818  01B3C4  0012               	return		;funcret
 24819  01B3C6                     __end_of_check_enter_button:
 24820                           	opt callstack 0
 24821                           
 24822 ;; *************** function _calc_ror_data *****************
 24823 ;; Defined at:
 24824 ;;		line 102 in file "mbmc.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;		None
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;		None
 24829 ;; Return value:  Size  Location     Type
 24830 ;;                  1  [STACK] void 
 24831 ;; Registers used:
 24832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24833 ;; Tracked objects:
 24834 ;;		On entry : 0/39
 24835 ;;		On exit  : 0/0
 24836 ;;		Unchanged: 0/0
 24837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24842 ;;Total ram usage:        0 bytes
 24843 ;; Hardware stack levels used:    1
 24844 ;; Hardware stack levels required when called:   18
 24845 ;; This function calls:
 24846 ;;		___flge
 24847 ;;		___flsub
 24848 ;;		_conv_raw_result
 24849 ;;		_fabsf
 24850 ;; This function is called by:
 24851 ;;		_main
 24852 ;; This function uses a reentrant model
 24853 ;;
 24854                           
 24855                           	psect	text100
 24856  018DFA                     __ptext100:
 24857                           	opt callstack 0
 24858  018DFA                     _calc_ror_data:
 24859                           	opt callstack 12
 24860                           
 24861                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24862                           
 24863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24864                           ;incstack = 0
 24865  018DFA  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24866  018E00  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24867  018E06  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24868  018E0C  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24869  018E12  0E00               	movlw	0
 24870  018E14  6EE6               	movwf	postinc1,c
 24871  018E16  0E00               	movlw	0
 24872  018E18  6EE6               	movwf	postinc1,c
 24873  018E1A  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 24874  018E1E  0060  F007  FFE6   	movff	btemp,postinc1
 24875  018E24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24876  018E2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24877  018E30  0060  F013  FFE6   	movff	btemp+3,postinc1
 24878  018E36  ECAA  F0DD         	call	___flsub	;wreg free
 24879  018E3A  0060  F007  FFE6   	movff	btemp,postinc1
 24880  018E40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24881  018E46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24882  018E4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24883  018E52  EC11  F0D5         	call	_fabsf	;wreg free
 24884  018E56  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24885  018E5C  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24886  018E62  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24887  018E68  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24888                           
 24889                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24890  018E6E  0E00               	movlw	0
 24891  018E70  6EE6               	movwf	postinc1,c
 24892  018E72  0E00               	movlw	0
 24893  018E74  6EE6               	movwf	postinc1,c
 24894  018E76  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 24895  018E7A  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24896  018E80  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24897  018E86  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24898  018E8C  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24899                           
 24900                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24901  018E92  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24902  018E98  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24903  018E9E  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24904  018EA4  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24905  018EAA  0E00               	movlw	0
 24906  018EAC  6EE6               	movwf	postinc1,c
 24907  018EAE  0E04               	movlw	4
 24908  018EB0  6EE6               	movwf	postinc1,c
 24909  018EB2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 24910  018EB6  0060  F007  FFE6   	movff	btemp,postinc1
 24911  018EBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24912  018EC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24913  018EC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 24914  018ECE  ECAA  F0DD         	call	___flsub	;wreg free
 24915  018ED2  0060  F007  FFE6   	movff	btemp,postinc1
 24916  018ED8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24917  018EDE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24918  018EE4  0060  F013  FFE6   	movff	btemp+3,postinc1
 24919  018EEA  EC11  F0D5         	call	_fabsf	;wreg free
 24920  018EEE  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24921  018EF4  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24922  018EFA  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24923  018F00  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24924                           
 24925                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24926  018F06  0EE7               	movlw	231
 24927  018F08  6EE6               	movwf	postinc1,c
 24928  018F0A  0E1D               	movlw	29
 24929  018F0C  6EE6               	movwf	postinc1,c
 24930  018F0E  0EA7               	movlw	167
 24931  018F10  6EE6               	movwf	postinc1,c
 24932  018F12  0E3B               	movlw	59
 24933  018F14  6EE6               	movwf	postinc1,c
 24934  018F16  EE21  F36B         	lfsr	2,_C+108	;volatile
 24935  018F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 24936  018F20  006F FF7B FFE6     	movff	postinc2,postinc1
 24937  018F26  006F FF7B FFE6     	movff	postinc2,postinc1
 24938  018F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 24939  018F32  EC39  F0C9         	call	___flge	;wreg free
 24940  018F36  B001               	btfsc	btemp& (0+255),0,c
 24941  018F38  D010               	goto	l11212
 24942                           
 24943                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24944  018F3A  0EB0               	movlw	176
 24945  018F3C  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24946  018F42  0E03               	movlw	3
 24947  018F44  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24948  018F4A  0E67               	movlw	103
 24949  018F4C  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24950  018F52  0E3C               	movlw	60
 24951  018F54  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24952  018F5A                     l11212:
 24953                           
 24954                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24955  018F5A  0E00               	movlw	0
 24956  018F5C  6EE6               	movwf	postinc1,c
 24957  018F5E  0E04               	movlw	4
 24958  018F60  6EE6               	movwf	postinc1,c
 24959  018F62  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 24960  018F66  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24961  018F6C  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24962  018F72  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24963  018F78  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24964                           
 24965                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24966  018F7E  0012               	return		;funcret
 24967  018F80                     __end_of_calc_ror_data:
 24968                           	opt callstack 0
 24969                           
 24970 ;; *************** function _fabsf *****************
 24971 ;; Defined at:
 24972 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24973 ;; Parameters:    Size  Location     Type
 24974 ;;  x               4  [STACK] float 
 24975 ;; Auto vars:     Size  Location     Type
 24976 ;;  u               4  [STACK] struct .
 24977 ;; Return value:  Size  Location     Type
 24978 ;;                  4  [STACK] float 
 24979 ;; Registers used:
 24980 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24981 ;; Tracked objects:
 24982 ;;		On entry : 0/0
 24983 ;;		On exit  : 0/0
 24984 ;;		Unchanged: 0/0
 24985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24990 ;;Total ram usage:        0 bytes
 24991 ;; Hardware stack levels used:    1
 24992 ;; Hardware stack levels required when called:   15
 24993 ;; This function calls:
 24994 ;;		Nothing
 24995 ;; This function is called by:
 24996 ;;		_main
 24997 ;;		_calc_ror_data
 24998 ;;		_calc_bsoc
 24999 ;;		_esr_check
 25000 ;; This function uses a reentrant model
 25001 ;;
 25002                           
 25003                           	psect	text101
 25004  01AA22                     __ptext101:
 25005                           	opt callstack 0
 25006  01AA22                     _fabsf:
 25007                           	opt callstack 0
 25008                           
 25009                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25010  01AA22  52E6               	movf	postinc1,f,c
 25011  01AA24  52E6               	movf	postinc1,f,c
 25012  01AA26  52E6               	movf	postinc1,f,c
 25013  01AA28  52E6               	movf	postinc1,f,c
 25014                           
 25015                           ;incstack = 0
 25016 ;; hardware stack exceeded
 25017  01AA2A  0060  F180  F009   	movff	fabsf@F463,btemp+8
 25018  01AA30  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 25019  01AA36  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 25020  01AA3C  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 25021                           
 25022                           ;stkvar	_u @ sp[(-4)+0]
 25023  01AA42  0EFC               	movlw	-4
 25024  01AA44  0060  F027  FFE3   	movff	btemp+8,plusw1
 25025  01AA4A  0EFD               	movlw	-3
 25026  01AA4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25027  01AA52  0EFE               	movlw	-2
 25028  01AA54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25029  01AA5A  0EFF               	movlw	-1
 25030  01AA5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25031                           
 25032                           ;stkvar	_x @ sp[(-4)+-4]
 25033  01AA62  0EF8               	movlw	-8
 25034  01AA64  006F FF8C  F009    	movff	plusw1,btemp+8
 25035  01AA6A  0EF9               	movlw	-7
 25036  01AA6C  006F FF8C  F00A    	movff	plusw1,btemp+9
 25037  01AA72  0EFA               	movlw	-6
 25038  01AA74  006F FF8C  F00B    	movff	plusw1,btemp+10
 25039  01AA7A  0EFB               	movlw	-5
 25040  01AA7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25041                           
 25042                           ;stkvar	_u @ sp[(-4)+0]
 25043  01AA82  0EFC               	movlw	-4
 25044  01AA84  0060  F027  FFE3   	movff	btemp+8,plusw1
 25045  01AA8A  0EFD               	movlw	-3
 25046  01AA8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25047  01AA92  0EFE               	movlw	-2
 25048  01AA94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25049  01AA9A  0EFF               	movlw	-1
 25050  01AA9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25051                           
 25052                           ;stkvar	_u @ sp[(-4)+0]
 25053  01AAA2  0EFF               	movlw	-1
 25054  01AAA4  9EE3               	bcf	plusw1,7,c
 25055                           
 25056                           ;stkvar	_u @ sp[(-4)+0]
 25057  01AAA6  0EFC               	movlw	-4
 25058  01AAA8  006F FF8C  F001    	movff	plusw1,btemp
 25059  01AAAE  0EFD               	movlw	-3
 25060  01AAB0  006F FF8C  F002    	movff	plusw1,btemp+1
 25061  01AAB6  0EFE               	movlw	-2
 25062  01AAB8  006F FF8C  F003    	movff	plusw1,btemp+2
 25063  01AABE  0EFF               	movlw	-1
 25064  01AAC0  006F FF8C  F004    	movff	plusw1,btemp+3
 25065                           
 25066                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25067  01AAC6  0EF8               	movlw	248
 25068  01AAC8  26E1               	addwf	fsr1l,f,c
 25069  01AACA  0EFF               	movlw	255
 25070  01AACC  22E2               	addwfc	fsr1h,f,c
 25071  01AACE  0012               	return		;funcret
 25072  01AAD0                     __end_of_fabsf:
 25073                           	opt callstack 0
 25074                           
 25075 ;; *************** function _conv_raw_result *****************
 25076 ;; Defined at:
 25077 ;;		line 123 in file "daq.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;  chan            1  [STACK] const enum E16590
 25080 ;;  to_what         1  [STACK] const enum E16652
 25081 ;; Auto vars:     Size  Location     Type
 25082 ;;		None
 25083 ;; Return value:  Size  Location     Type
 25084 ;;                  4  [STACK] float 
 25085 ;; Registers used:
 25086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25087 ;; Tracked objects:
 25088 ;;		On entry : 0/39
 25089 ;;		On exit  : 0/0
 25090 ;;		Unchanged: 0/0
 25091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;Total ram usage:        0 bytes
 25097 ;; Hardware stack levels used:    1
 25098 ;; Hardware stack levels required when called:   17
 25099 ;; This function calls:
 25100 ;;		___fldiv
 25101 ;;		___flmul
 25102 ;;		___flsub
 25103 ;;		___xxtofl
 25104 ;;		_get_raw_result
 25105 ;;		_nanf
 25106 ;; This function is called by:
 25107 ;;		_main
 25108 ;;		_convert_adc_data
 25109 ;;		_calc_ror_data
 25110 ;;		_check_day_time
 25111 ;;		_init_bsoc
 25112 ;;		_esr_check
 25113 ;; This function uses a reentrant model
 25114 ;;
 25115                           
 25116                           	psect	text102
 25117  0153A0                     __ptext102:
 25118                           	opt callstack 0
 25119  0153A0                     _conv_raw_result:
 25120                           	opt callstack 0
 25121                           
 25122                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 25123                           
 25124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25125                           ;incstack = 0
 25126 ;; hardware stack exceeded
 25127  0153A0  D24A               	goto	l9974
 25128  0153A2                     l9920:
 25129                           
 25130                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 25131                           ;stkvar	_chan @ sp[(0)+-1]
 25132  0153A2  0EFF               	movlw	-1
 25133  0153A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25134  0153AA  0E77               	movlw	119
 25135  0153AC  6E09               	movwf	(btemp+8)^0,c
 25136  0153AE  0E3C               	movlw	60
 25137  0153B0  6E0A               	movwf	(btemp+9)^0,c
 25138  0153B2  2A0C               	incf	(btemp+11)^0,f,c
 25139  0153B4  D003               	goto	u9244
 25140  0153B6                     u9245:
 25141  0153B6  340A               	rlcf	(btemp+9)^0,w,c
 25142  0153B8  320A               	rrcf	(btemp+9)^0,f,c
 25143  0153BA  3209               	rrcf	(btemp+8)^0,f,c
 25144  0153BC                     u9244:
 25145  0153BC  2E0C               	decfsz	(btemp+11)^0,f,c
 25146  0153BE  D7FB               	goto	u9245
 25147  0153C0  B009               	btfsc	(btemp+8)^0,0,c
 25148  0153C2  D007               	goto	l9926
 25149                           
 25150                           ;daq.c: 129:    return nanf("");
 25151  0153C4  0E09               	movlw	low (STR_67+126)
 25152  0153C6  6EE6               	movwf	postinc1,c
 25153  0153C8  0EFC               	movlw	high (STR_67+126)
 25154  0153CA  6EE6               	movwf	postinc1,c
 25155  0153CC  EC4C  F0DB         	call	_nanf	;wreg free
 25156  0153D0  D242               	goto	l1822
 25157  0153D2                     l9926:
 25158                           
 25159                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 25160                           ;stkvar	_chan @ sp[(0)+-1]
 25161  0153D2  0EFF               	movlw	-1
 25162  0153D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25163  0153DA  0E03               	movlw	3
 25164  0153DC  6E09               	movwf	(btemp+8)^0,c
 25165  0153DE  0E00               	movlw	0
 25166  0153E0  6E0A               	movwf	(btemp+9)^0,c
 25167  0153E2  2A0C               	incf	(btemp+11)^0,f,c
 25168  0153E4  D003               	goto	u9264
 25169  0153E6                     u9265:
 25170  0153E6  340A               	rlcf	(btemp+9)^0,w,c
 25171  0153E8  320A               	rrcf	(btemp+9)^0,f,c
 25172  0153EA  3209               	rrcf	(btemp+8)^0,f,c
 25173  0153EC                     u9264:
 25174  0153EC  2E0C               	decfsz	(btemp+11)^0,f,c
 25175  0153EE  D7FB               	goto	u9265
 25176  0153F0  A009               	btfss	(btemp+8)^0,0,c
 25177  0153F2  D0F3               	goto	l9940
 25178                           
 25179                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 25180                           ;stkvar	_chan @ sp[(0)+-1]
 25181  0153F4  0EFF               	movlw	-1
 25182  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25183  0153FC  0E01               	movlw	1
 25184  0153FE  6E09               	movwf	(btemp+8)^0,c
 25185  015400  0E00               	movlw	0
 25186  015402  6E0A               	movwf	(btemp+9)^0,c
 25187  015404  2A0C               	incf	(btemp+11)^0,f,c
 25188  015406  D003               	goto	u9284
 25189  015408                     u9285:
 25190  015408  340A               	rlcf	(btemp+9)^0,w,c
 25191  01540A  320A               	rrcf	(btemp+9)^0,f,c
 25192  01540C  3209               	rrcf	(btemp+8)^0,f,c
 25193  01540E                     u9284:
 25194  01540E  2E0C               	decfsz	(btemp+11)^0,f,c
 25195  015410  D7FB               	goto	u9285
 25196  015412  A009               	btfss	(btemp+8)^0,0,c
 25197  015414  D071               	goto	l9936
 25198                           
 25199                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 25200  015416  0060  F367  FFE6   	movff	_R+42,postinc1
 25201  01541C  0060  F36B  FFE6   	movff	_R+43,postinc1
 25202  015422  0060  F36F  FFE6   	movff	_R+44,postinc1
 25203  015428  0060  F373  FFE6   	movff	_R+45,postinc1
 25204  01542E  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 25205  015434  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 25206  01543A  0E00               	movlw	0
 25207  01543C  BE0A               	btfsc	(btemp+9)^0,7,c
 25208  01543E  0EFF               	movlw	255
 25209  015440  6E0B               	movwf	(btemp+10)^0,c
 25210  015442  6E0C               	movwf	(btemp+11)^0,c
 25211  015444  0060  F027  FFE6   	movff	btemp+8,postinc1
 25212  01544A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25213  015450  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25214  015456  0060  F033  FFE6   	movff	btemp+11,postinc1
 25215  01545C  0E01               	movlw	1
 25216  01545E  6EE6               	movwf	postinc1,c
 25217  015460  EC82  F0C3         	call	___xxtofl	;wreg free
 25218  015464  0060  F007  FFE6   	movff	btemp,postinc1
 25219  01546A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25220  015470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25221  015476  0060  F013  FFE6   	movff	btemp+3,postinc1
 25222                           
 25223                           ;stkvar	_chan @ sp[(-8)+-1]
 25224  01547C  0EF7               	movlw	-9
 25225  01547E  50E3               	movf	plusw1,w,c
 25226  015480  6EE6               	movwf	postinc1,c
 25227  015482  ECB9  F0E2         	call	_get_raw_result	;wreg free
 25228  015486  0060  F004  F00B   	movff	btemp,btemp+10
 25229  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 25230  015492  500B               	movf	(btemp+10)^0,w,c
 25231  015494  6E05               	movwf	(btemp+4)^0,c
 25232  015496  500C               	movf	(btemp+11)^0,w,c
 25233  015498  6E06               	movwf	(btemp+5)^0,c
 25234  01549A  6A07               	clrf	(btemp+6)^0,c
 25235  01549C  6A08               	clrf	(btemp+7)^0,c
 25236  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 25237  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25238  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25239  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 25240  0154B6  0E00               	movlw	0
 25241  0154B8  6EE6               	movwf	postinc1,c
 25242  0154BA  EC82  F0C3         	call	___xxtofl	;wreg free
 25243  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 25244  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25245  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25246  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 25247  0154D6  ECAA  F0DD         	call	___flsub	;wreg free
 25248  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 25249  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25250  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25251  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25252  0154F2  EC20  F09F         	call	___flmul	;wreg free
 25253  0154F6  D1AF               	goto	l1822
 25254  0154F8                     l9936:
 25255                           
 25256                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 25257  0154F8  0060  F377  FFE6   	movff	_R+46,postinc1
 25258  0154FE  0060  F37B  FFE6   	movff	_R+47,postinc1
 25259  015504  0060  F37F  FFE6   	movff	_R+48,postinc1
 25260  01550A  0060  F383  FFE6   	movff	_R+49,postinc1
 25261  015510  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 25262  015516  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 25263  01551C  0E00               	movlw	0
 25264  01551E  BE0A               	btfsc	(btemp+9)^0,7,c
 25265  015520  0EFF               	movlw	255
 25266  015522  6E0B               	movwf	(btemp+10)^0,c
 25267  015524  6E0C               	movwf	(btemp+11)^0,c
 25268  015526  0060  F027  FFE6   	movff	btemp+8,postinc1
 25269  01552C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25270  015532  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25271  015538  0060  F033  FFE6   	movff	btemp+11,postinc1
 25272  01553E  0E01               	movlw	1
 25273  015540  6EE6               	movwf	postinc1,c
 25274  015542  EC82  F0C3         	call	___xxtofl	;wreg free
 25275  015546  0060  F007  FFE6   	movff	btemp,postinc1
 25276  01554C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25277  015552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25278  015558  0060  F013  FFE6   	movff	btemp+3,postinc1
 25279                           
 25280                           ;stkvar	_chan @ sp[(-8)+-1]
 25281  01555E  0EF7               	movlw	-9
 25282  015560  50E3               	movf	plusw1,w,c
 25283  015562  6EE6               	movwf	postinc1,c
 25284  015564  ECB9  F0E2         	call	_get_raw_result	;wreg free
 25285  015568  0060  F004  F00B   	movff	btemp,btemp+10
 25286  01556E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25287  015574  500B               	movf	(btemp+10)^0,w,c
 25288  015576  6E05               	movwf	(btemp+4)^0,c
 25289  015578  500C               	movf	(btemp+11)^0,w,c
 25290  01557A  6E06               	movwf	(btemp+5)^0,c
 25291  01557C  6A07               	clrf	(btemp+6)^0,c
 25292  01557E  6A08               	clrf	(btemp+7)^0,c
 25293  015580  0060  F017  FFE6   	movff	btemp+4,postinc1
 25294  015586  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25295  01558C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25296  015592  0060  F023  FFE6   	movff	btemp+7,postinc1
 25297  015598  0E00               	movlw	0
 25298  01559A  6EE6               	movwf	postinc1,c
 25299  01559C  EC82  F0C3         	call	___xxtofl	;wreg free
 25300  0155A0  0060  F007  FFE6   	movff	btemp,postinc1
 25301  0155A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25302  0155AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25303  0155B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25304  0155B8  ECAA  F0DD         	call	___flsub	;wreg free
 25305  0155BC  0060  F007  FFE6   	movff	btemp,postinc1
 25306  0155C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25307  0155C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25308  0155CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25309  0155D4  EC20  F09F         	call	___flmul	;wreg free
 25310  0155D8  D13E               	goto	l1822
 25311  0155DA                     l9940:
 25312                           
 25313                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 25314                           ;stkvar	_chan @ sp[(0)+-1]
 25315  0155DA  0EFF               	movlw	-1
 25316  0155DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25317  0155E2  0E00               	movlw	0
 25318  0155E4  6E09               	movwf	(btemp+8)^0,c
 25319  0155E6  0E08               	movlw	8
 25320  0155E8  6E0A               	movwf	(btemp+9)^0,c
 25321  0155EA  2A0C               	incf	(btemp+11)^0,f,c
 25322  0155EC  D003               	goto	u9304
 25323  0155EE                     u9305:
 25324  0155EE  340A               	rlcf	(btemp+9)^0,w,c
 25325  0155F0  320A               	rrcf	(btemp+9)^0,f,c
 25326  0155F2  3209               	rrcf	(btemp+8)^0,f,c
 25327  0155F4                     u9304:
 25328  0155F4  2E0C               	decfsz	(btemp+11)^0,f,c
 25329  0155F6  D7FB               	goto	u9305
 25330  0155F8  A009               	btfss	(btemp+8)^0,0,c
 25331  0155FA  D008               	goto	l9948
 25332                           
 25333                           ;daq.c: 139:     return 25.0;
 25334  0155FC  0E00               	movlw	0
 25335  0155FE  6E01               	movwf	btemp^0,c
 25336  015600  0E00               	movlw	0
 25337  015602  6E02               	movwf	(btemp+1)^0,c
 25338  015604  0EC8               	movlw	200
 25339  015606  6E03               	movwf	(btemp+2)^0,c
 25340  015608  0E41               	movlw	65
 25341  01560A  D113               	goto	L30
 25342  01560C                     l9948:
 25343                           
 25344                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25345  01560C  0E00               	movlw	0
 25346  01560E  6EE6               	movwf	postinc1,c
 25347  015610  0E00               	movlw	0
 25348  015612  6EE6               	movwf	postinc1,c
 25349  015614  0E7A               	movlw	122
 25350  015616  6EE6               	movwf	postinc1,c
 25351  015618  0E44               	movlw	68
 25352  01561A  6EE6               	movwf	postinc1,c
 25353  01561C  0E61               	movlw	97
 25354  01561E  6EE6               	movwf	postinc1,c
 25355  015620  0E03               	movlw	3
 25356  015622  6EE6               	movwf	postinc1,c
 25357  015624  0E84               	movlw	132
 25358  015626  6EE6               	movwf	postinc1,c
 25359  015628  0E40               	movlw	64
 25360  01562A  6EE6               	movwf	postinc1,c
 25361                           
 25362                           ;stkvar	_chan @ sp[(-8)+-1]
 25363  01562C  0EF7               	movlw	-9
 25364  01562E  50E3               	movf	plusw1,w,c
 25365  015630  6EE6               	movwf	postinc1,c
 25366  015632  ECB9  F0E2         	call	_get_raw_result	;wreg free
 25367  015636  0060  F004  F00B   	movff	btemp,btemp+10
 25368  01563C  0060  F008  F00C   	movff	btemp+1,btemp+11
 25369  015642  500B               	movf	(btemp+10)^0,w,c
 25370  015644  6E05               	movwf	(btemp+4)^0,c
 25371  015646  500C               	movf	(btemp+11)^0,w,c
 25372  015648  6E06               	movwf	(btemp+5)^0,c
 25373  01564A  6A07               	clrf	(btemp+6)^0,c
 25374  01564C  6A08               	clrf	(btemp+7)^0,c
 25375  01564E  0060  F017  FFE6   	movff	btemp+4,postinc1
 25376  015654  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25377  01565A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25378  015660  0060  F023  FFE6   	movff	btemp+7,postinc1
 25379  015666  0E00               	movlw	0
 25380  015668  6EE6               	movwf	postinc1,c
 25381  01566A  EC82  F0C3         	call	___xxtofl	;wreg free
 25382  01566E  0060  F007  FFE6   	movff	btemp,postinc1
 25383  015674  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25384  01567A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25385  015680  0060  F013  FFE6   	movff	btemp+3,postinc1
 25386  015686  EC20  F09F         	call	___flmul	;wreg free
 25387  01568A  0060  F007  FFE6   	movff	btemp,postinc1
 25388  015690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25389  015696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25390  01569C  0060  F013  FFE6   	movff	btemp+3,postinc1
 25391  0156A2  EC13  F0A7         	call	___fldiv	;wreg free
 25392  0156A6  D0D7               	goto	l1822
 25393  0156A8                     l9952:
 25394                           
 25395                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25396                           ;stkvar	_chan @ sp[(0)+-1]
 25397  0156A8  0EFF               	movlw	-1
 25398  0156AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25399  0156B0  0E03               	movlw	3
 25400  0156B2  6E09               	movwf	(btemp+8)^0,c
 25401  0156B4  0E00               	movlw	0
 25402  0156B6  6E0A               	movwf	(btemp+9)^0,c
 25403  0156B8  2A0C               	incf	(btemp+11)^0,f,c
 25404  0156BA  D003               	goto	u9324
 25405  0156BC                     u9325:
 25406  0156BC  340A               	rlcf	(btemp+9)^0,w,c
 25407  0156BE  320A               	rrcf	(btemp+9)^0,f,c
 25408  0156C0  3209               	rrcf	(btemp+8)^0,f,c
 25409  0156C2                     u9324:
 25410  0156C2  2E0C               	decfsz	(btemp+11)^0,f,c
 25411  0156C4  D7FB               	goto	u9325
 25412  0156C6  B009               	btfsc	(btemp+8)^0,0,c
 25413  0156C8  D011               	goto	u9350
 25414                           
 25415                           ;stkvar	_chan @ sp[(0)+-1]
 25416  0156CA  0EFF               	movlw	-1
 25417  0156CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25418  0156D2  0E00               	movlw	0
 25419  0156D4  6E09               	movwf	(btemp+8)^0,c
 25420  0156D6  0E08               	movlw	8
 25421  0156D8  6E0A               	movwf	(btemp+9)^0,c
 25422  0156DA  2A0C               	incf	(btemp+11)^0,f,c
 25423  0156DC  D003               	goto	u9344
 25424  0156DE                     u9345:
 25425  0156DE  340A               	rlcf	(btemp+9)^0,w,c
 25426  0156E0  320A               	rrcf	(btemp+9)^0,f,c
 25427  0156E2  3209               	rrcf	(btemp+8)^0,f,c
 25428  0156E4                     u9344:
 25429  0156E4  2E0C               	decfsz	(btemp+11)^0,f,c
 25430  0156E6  D7FB               	goto	u9345
 25431  0156E8  A009               	btfss	(btemp+8)^0,0,c
 25432  0156EA  D04E               	goto	l9960
 25433  0156EC                     u9350:
 25434                           
 25435                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25436  0156EC  0E00               	movlw	0
 25437  0156EE  6EE6               	movwf	postinc1,c
 25438  0156F0  0E00               	movlw	0
 25439  0156F2  6EE6               	movwf	postinc1,c
 25440  0156F4  0E7A               	movlw	122
 25441  0156F6  6EE6               	movwf	postinc1,c
 25442  0156F8  0E44               	movlw	68
 25443  0156FA  6EE6               	movwf	postinc1,c
 25444  0156FC  0E00               	movlw	0
 25445  0156FE  6EE6               	movwf	postinc1,c
 25446  015700  0E00               	movlw	0
 25447  015702  6EE6               	movwf	postinc1,c
 25448  015704  0E20               	movlw	32
 25449  015706  6EE6               	movwf	postinc1,c
 25450  015708  0E3F               	movlw	63
 25451  01570A  6EE6               	movwf	postinc1,c
 25452                           
 25453                           ;stkvar	_chan @ sp[(-8)+-1]
 25454  01570C  0EF7               	movlw	-9
 25455  01570E  50E3               	movf	plusw1,w,c
 25456  015710  6EE6               	movwf	postinc1,c
 25457  015712  ECB9  F0E2         	call	_get_raw_result	;wreg free
 25458  015716  0060  F004  F00B   	movff	btemp,btemp+10
 25459  01571C  0060  F008  F00C   	movff	btemp+1,btemp+11
 25460  015722  500B               	movf	(btemp+10)^0,w,c
 25461  015724  6E05               	movwf	(btemp+4)^0,c
 25462  015726  500C               	movf	(btemp+11)^0,w,c
 25463  015728  6E06               	movwf	(btemp+5)^0,c
 25464  01572A  6A07               	clrf	(btemp+6)^0,c
 25465  01572C  6A08               	clrf	(btemp+7)^0,c
 25466  01572E  0060  F017  FFE6   	movff	btemp+4,postinc1
 25467  015734  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25468  01573A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25469  015740  0060  F023  FFE6   	movff	btemp+7,postinc1
 25470  015746  0E00               	movlw	0
 25471  015748  6EE6               	movwf	postinc1,c
 25472  01574A  EC82  F0C3         	call	___xxtofl	;wreg free
 25473  01574E  0060  F007  FFE6   	movff	btemp,postinc1
 25474  015754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25475  01575A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25476  015760  0060  F013  FFE6   	movff	btemp+3,postinc1
 25477  015766  EC20  F09F         	call	___flmul	;wreg free
 25478  01576A  0060  F007  FFE6   	movff	btemp,postinc1
 25479  015770  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25480  015776  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25481  01577C  0060  F013  FFE6   	movff	btemp+3,postinc1
 25482  015782  EC13  F0A7         	call	___fldiv	;wreg free
 25483  015786  D067               	goto	l1822
 25484  015788                     l9960:
 25485                           
 25486                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25487  015788  0E00               	movlw	0
 25488  01578A  6EE6               	movwf	postinc1,c
 25489  01578C  0E00               	movlw	0
 25490  01578E  6EE6               	movwf	postinc1,c
 25491  015790  0E7A               	movlw	122
 25492  015792  6EE6               	movwf	postinc1,c
 25493  015794  0E44               	movlw	68
 25494  015796  6EE6               	movwf	postinc1,c
 25495  015798  0E61               	movlw	97
 25496  01579A  6EE6               	movwf	postinc1,c
 25497  01579C  0E03               	movlw	3
 25498  01579E  6EE6               	movwf	postinc1,c
 25499  0157A0  0E84               	movlw	132
 25500  0157A2  6EE6               	movwf	postinc1,c
 25501  0157A4  0E40               	movlw	64
 25502  0157A6  6EE6               	movwf	postinc1,c
 25503                           
 25504                           ;stkvar	_chan @ sp[(-8)+-1]
 25505  0157A8  0EF7               	movlw	-9
 25506  0157AA  50E3               	movf	plusw1,w,c
 25507  0157AC  6EE6               	movwf	postinc1,c
 25508  0157AE  ECB9  F0E2         	call	_get_raw_result	;wreg free
 25509  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 25510  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 25511  0157BE  500B               	movf	(btemp+10)^0,w,c
 25512  0157C0  6E05               	movwf	(btemp+4)^0,c
 25513  0157C2  500C               	movf	(btemp+11)^0,w,c
 25514  0157C4  6E06               	movwf	(btemp+5)^0,c
 25515  0157C6  6A07               	clrf	(btemp+6)^0,c
 25516  0157C8  6A08               	clrf	(btemp+7)^0,c
 25517  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 25518  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25519  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25520  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 25521  0157E2  0E00               	movlw	0
 25522  0157E4  6EE6               	movwf	postinc1,c
 25523  0157E6  EC82  F0C3         	call	___xxtofl	;wreg free
 25524  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 25525  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25526  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25527  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25528  015802  EC20  F09F         	call	___flmul	;wreg free
 25529  015806  0060  F007  FFE6   	movff	btemp,postinc1
 25530  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25531  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25532  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 25533  01581E  EC13  F0A7         	call	___fldiv	;wreg free
 25534  015822  D019               	goto	l1822
 25535  015824                     l9966:
 25536                           
 25537                           ;daq.c: 152:   return 0.0;
 25538  015824  0E00               	movlw	0
 25539  015826  6E01               	movwf	btemp^0,c
 25540  015828  0E00               	movlw	0
 25541  01582A  6E02               	movwf	(btemp+1)^0,c
 25542  01582C  0E00               	movlw	0
 25543  01582E  6E03               	movwf	(btemp+2)^0,c
 25544  015830  0E00               	movlw	0
 25545  015832                     L30:
 25546  015832  6E04               	movwf	(btemp+3)^0,c
 25547  015834  D010               	goto	l1822
 25548  015836                     l9974:
 25549                           
 25550                           ;stkvar	_to_what @ sp[(0)+-2]
 25551  015836  0EFE               	movlw	-2
 25552  015838  50E3               	movf	plusw1,w,c
 25553  01583A  6E0B               	movwf	(btemp+10)^0,c
 25554  01583C  6A0C               	clrf	(btemp+11)^0,c
 25555                           
 25556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25557                           ; Switch size 1, requested type "simple"
 25558                           ; Number of cases is 1, Range of values is 0 to 0
 25559                           ; switch strategies available:
 25560                           ; Name         Instructions Cycles
 25561                           ; simple_byte            4     3 (average)
 25562                           ;	Chosen strategy is simple_byte
 25563  01583E  500C               	movf	(btemp+11)^0,w,c
 25564  015840  0A00               	xorlw	0	; case 0
 25565  015842  A4D8               	btfss	status,2,c
 25566  015844  D7EF               	goto	l9966
 25567                           
 25568                           ; Switch size 1, requested type "simple"
 25569                           ; Number of cases is 2, Range of values is 0 to 1
 25570                           ; switch strategies available:
 25571                           ; Name         Instructions Cycles
 25572                           ; simple_byte            7     4 (average)
 25573                           ;	Chosen strategy is simple_byte
 25574  015846  500B               	movf	(btemp+10)^0,w,c
 25575  015848  0A00               	xorlw	0	; case 0
 25576  01584A  B4D8               	btfsc	status,2,c
 25577  01584C  D5AA               	goto	l9920
 25578  01584E  0A01               	xorlw	1	; case 1
 25579  015850  B4D8               	btfsc	status,2,c
 25580  015852  D72A               	goto	l9952
 25581  015854  D7E7               	goto	l9966
 25582  015856                     l1822:
 25583                           
 25584                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25585  015856  52E5               	movf	postdec1,f,c
 25586  015858  52E5               	movf	postdec1,f,c
 25587  01585A  0012               	return		;funcret
 25588  01585C                     __end_of_conv_raw_result:
 25589                           	opt callstack 0
 25590                           
 25591 ;; *************** function _nanf *****************
 25592 ;; Defined at:
 25593 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25594 ;; Parameters:    Size  Location     Type
 25595 ;;  s               2  [STACK] PTR const unsigned char 
 25596 ;;		 -> STR_104(1), STR_66(1), 
 25597 ;; Auto vars:     Size  Location     Type
 25598 ;;  u               4  [STACK] struct .
 25599 ;; Return value:  Size  Location     Type
 25600 ;;                  4  [STACK] float 
 25601 ;; Registers used:
 25602 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25603 ;; Tracked objects:
 25604 ;;		On entry : 0/39
 25605 ;;		On exit  : 0/0
 25606 ;;		Unchanged: 0/0
 25607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25612 ;;Total ram usage:        0 bytes
 25613 ;; Hardware stack levels used:    1
 25614 ;; Hardware stack levels required when called:   15
 25615 ;; This function calls:
 25616 ;;		Nothing
 25617 ;; This function is called by:
 25618 ;;		_conv_raw_result
 25619 ;; This function uses a reentrant model
 25620 ;;
 25621                           
 25622                           	psect	text103
 25623  01B698                     __ptext103:
 25624                           	opt callstack 0
 25625  01B698                     _nanf:
 25626                           	opt callstack 0
 25627                           
 25628                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25629  01B698  52E6               	movf	postinc1,f,c
 25630  01B69A  52E6               	movf	postinc1,f,c
 25631  01B69C  52E6               	movf	postinc1,f,c
 25632  01B69E  52E6               	movf	postinc1,f,c
 25633                           
 25634                           ;incstack = 0
 25635 ;; hardware stack exceeded
 25636  01B6A0  0EFF               	movlw	255
 25637  01B6A2  6E09               	movwf	(btemp+8)^0,c
 25638  01B6A4  0EFF               	movlw	255
 25639  01B6A6  6E0A               	movwf	(btemp+9)^0,c
 25640  01B6A8  0EFF               	movlw	255
 25641  01B6AA  6E0B               	movwf	(btemp+10)^0,c
 25642  01B6AC  0E7F               	movlw	127
 25643  01B6AE  6E0C               	movwf	(btemp+11)^0,c
 25644                           
 25645                           ;stkvar	_u @ sp[(-4)+0]
 25646  01B6B0  0EFC               	movlw	-4
 25647  01B6B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25648  01B6B8  0EFD               	movlw	-3
 25649  01B6BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25650  01B6C0  0EFE               	movlw	-2
 25651  01B6C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25652  01B6C8  0EFF               	movlw	-1
 25653  01B6CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25654                           
 25655                           ;stkvar	_u @ sp[(-4)+0]
 25656  01B6D0  0EFC               	movlw	-4
 25657  01B6D2  006F FF8C  F001    	movff	plusw1,btemp
 25658  01B6D8  0EFD               	movlw	-3
 25659  01B6DA  006F FF8C  F002    	movff	plusw1,btemp+1
 25660  01B6E0  0EFE               	movlw	-2
 25661  01B6E2  006F FF8C  F003    	movff	plusw1,btemp+2
 25662  01B6E8  0EFF               	movlw	-1
 25663  01B6EA  006F FF8C  F004    	movff	plusw1,btemp+3
 25664                           
 25665                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25666  01B6F0  0EFA               	movlw	250
 25667  01B6F2  26E1               	addwf	fsr1l,f,c
 25668  01B6F4  0EFF               	movlw	255
 25669  01B6F6  22E2               	addwfc	fsr1h,f,c
 25670  01B6F8  0012               	return		;funcret
 25671  01B6FA                     __end_of_nanf:
 25672                           	opt callstack 0
 25673                           
 25674 ;; *************** function _get_raw_result *****************
 25675 ;; Defined at:
 25676 ;;		line 115 in file "daq.c"
 25677 ;; Parameters:    Size  Location     Type
 25678 ;;  index           1  [STACK] const enum E16590
 25679 ;; Auto vars:     Size  Location     Type
 25680 ;;		None
 25681 ;; Return value:  Size  Location     Type
 25682 ;;                  2  [STACK] unsigned short 
 25683 ;; Registers used:
 25684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25685 ;; Tracked objects:
 25686 ;;		On entry : 0/1
 25687 ;;		On exit  : 0/0
 25688 ;;		Unchanged: 0/0
 25689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25694 ;;Total ram usage:        0 bytes
 25695 ;; Hardware stack levels used:    1
 25696 ;; Hardware stack levels required when called:   15
 25697 ;; This function calls:
 25698 ;;		Nothing
 25699 ;; This function is called by:
 25700 ;;		_main
 25701 ;;		_conv_raw_result
 25702 ;; This function uses a reentrant model
 25703 ;;
 25704                           
 25705                           	psect	text104
 25706  01C572                     __ptext104:
 25707                           	opt callstack 0
 25708  01C572                     _get_raw_result:
 25709                           	opt callstack 0
 25710                           
 25711                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 25712                           ;stkvar	_index @ sp[(0)+-1]
 25713                           
 25714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25715                           ;incstack = 0
 25716 ;; hardware stack exceeded
 25717  01C572  0EFF               	movlw	-1
 25718  01C574  50E3               	movf	plusw1,w,c
 25719  01C576  0D02               	mullw	2
 25720  01C578  50F3               	movf	243,w,c
 25721  01C57A  0FAF               	addlw	low _R
 25722  01C57C  6ED9               	movwf	fsr2l,c
 25723  01C57E  6ADA               	clrf	fsr2h,c
 25724  01C580  006F FF78  F001    	movff	postinc2,btemp
 25725  01C586  006F FF74  F002    	movff	postdec2,btemp+1
 25726                           
 25727                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25728  01C58C  52E5               	movf	postdec1,f,c
 25729  01C58E  0012               	return		;funcret
 25730  01C590                     __end_of_get_raw_result:
 25731                           	opt callstack 0
 25732                           
 25733 ;; *************** function ___xxtofl *****************
 25734 ;; Defined at:
 25735 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25736 ;; Parameters:    Size  Location     Type
 25737 ;;  sign            1  [STACK] unsigned char 
 25738 ;;  val             4  [STACK] long 
 25739 ;; Auto vars:     Size  Location     Type
 25740 ;;  arg             4  [STACK] unsigned long 
 25741 ;;  exp             1  [STACK] unsigned char 
 25742 ;; Return value:  Size  Location     Type
 25743 ;;                  4  [STACK] unsigned char 
 25744 ;; Registers used:
 25745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25746 ;; Tracked objects:
 25747 ;;		On entry : 0/0
 25748 ;;		On exit  : 0/0
 25749 ;;		Unchanged: 0/0
 25750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25755 ;;Total ram usage:        0 bytes
 25756 ;; Hardware stack levels used:    1
 25757 ;; Hardware stack levels required when called:   15
 25758 ;; This function calls:
 25759 ;;		Nothing
 25760 ;; This function is called by:
 25761 ;;		_conv_raw_result
 25762 ;;		_init_bsoc
 25763 ;; This function uses a reentrant model
 25764 ;;
 25765                           
 25766                           	psect	text105
 25767  018704                     __ptext105:
 25768                           	opt callstack 0
 25769  018704                     ___xxtofl:
 25770                           	opt callstack 0
 25771                           
 25772                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25773  018704  0E05               	movlw	5
 25774  018706  26E1               	addwf	fsr1l,f,c
 25775  018708  0E00               	movlw	0
 25776  01870A  22E2               	addwfc	fsr1h,f,c
 25777                           
 25778                           ;stkvar	_sign @ sp[(-5)+-1]
 25779                           
 25780                           ;incstack = 0
 25781 ;; hardware stack exceeded
 25782  01870C  0EFA               	movlw	-6
 25783  01870E  50E3               	movf	plusw1,w,c
 25784  018710  B4D8               	btfsc	status,2,c
 25785  018712  D01D               	goto	l9868
 25786                           
 25787                           ;stkvar	_val @ sp[(-5)+-5]
 25788  018714  0EF9               	movlw	-7
 25789  018716  AEE3               	btfss	plusw1,7,c
 25790  018718  D01A               	goto	l9868
 25791                           
 25792                           ;stkvar	_val @ sp[(-5)+-5]
 25793  01871A  0EF6               	movlw	-10
 25794  01871C  006F FF8C  F009    	movff	plusw1,btemp+8
 25795  018722  0EF7               	movlw	-9
 25796  018724  006F FF8C  F00A    	movff	plusw1,btemp+9
 25797  01872A  0EF8               	movlw	-8
 25798  01872C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25799  018732  0EF9               	movlw	-7
 25800  018734  006F FF8C  F00C    	movff	plusw1,btemp+11
 25801  01873A  1E09               	comf	(btemp+8)^0,f,c
 25802  01873C  1E0A               	comf	(btemp+9)^0,f,c
 25803  01873E  1E0B               	comf	(btemp+10)^0,f,c
 25804  018740  1E0C               	comf	(btemp+11)^0,f,c
 25805  018742  2A09               	incf	(btemp+8)^0,f,c
 25806  018744  0E00               	movlw	0
 25807  018746  220A               	addwfc	(btemp+9)^0,f,c
 25808  018748  220B               	addwfc	(btemp+10)^0,f,c
 25809  01874A  220C               	addwfc	(btemp+11)^0,f,c
 25810  01874C  D010               	goto	L31
 25811  01874E                     l9868:
 25812                           
 25813                           ;stkvar	_val @ sp[(-5)+-5]
 25814  01874E  0EF6               	movlw	-10
 25815  018750  006F FF8C  F009    	movff	plusw1,btemp+8
 25816  018756  0EF7               	movlw	-9
 25817  018758  006F FF8C  F00A    	movff	plusw1,btemp+9
 25818  01875E  0EF8               	movlw	-8
 25819  018760  006F FF8C  F00B    	movff	plusw1,btemp+10
 25820  018766  0EF9               	movlw	-7
 25821  018768  006F FF8C  F00C    	movff	plusw1,btemp+11
 25822  01876E                     L31:
 25823                           
 25824                           ;stkvar	_arg @ sp[(-5)+0]
 25825  01876E  0EFB               	movlw	-5
 25826  018770  0060  F027  FFE3   	movff	btemp+8,plusw1
 25827  018776  0EFC               	movlw	-4
 25828  018778  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25829  01877E  0EFD               	movlw	-3
 25830  018780  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25831  018786  0EFE               	movlw	-2
 25832  018788  0060  F033  FFE3   	movff	btemp+11,plusw1
 25833                           
 25834                           ;stkvar	_val @ sp[(-5)+-5]
 25835  01878E  0EF6               	movlw	-10
 25836  018790  50E3               	movf	plusw1,w,c
 25837  018792  E113               	bnz	l9876
 25838  018794  0EF7               	movlw	-9
 25839  018796  50E3               	movf	plusw1,w,c
 25840  018798  E110               	bnz	l9876
 25841  01879A  0EF8               	movlw	-8
 25842  01879C  50E3               	movf	plusw1,w,c
 25843  01879E  E10D               	bnz	l9876
 25844  0187A0  0EF9               	movlw	-7
 25845  0187A2  50E3               	movf	plusw1,w,c
 25846  0187A4  A4D8               	btfss	status,2,c
 25847  0187A6  D009               	goto	l9876
 25848  0187A8  0E00               	movlw	0
 25849  0187AA  6E01               	movwf	btemp^0,c
 25850  0187AC  0E00               	movlw	0
 25851  0187AE  6E02               	movwf	(btemp+1)^0,c
 25852  0187B0  0E00               	movlw	0
 25853  0187B2  6E03               	movwf	(btemp+2)^0,c
 25854  0187B4  0E00               	movlw	0
 25855  0187B6  6E04               	movwf	(btemp+3)^0,c
 25856  0187B8  D0A2               	goto	l3167
 25857  0187BA                     l9876:
 25858  0187BA  0E96               	movlw	150
 25859  0187BC  6E0C               	movwf	(btemp+11)^0,c
 25860                           
 25861                           ;stkvar	_exp @ sp[(-5)+4]
 25862  0187BE  0EFF               	movlw	-1
 25863  0187C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25864  0187C6  D00B               	goto	l9880
 25865  0187C8                     l9878:
 25866                           
 25867                           ;stkvar	_exp @ sp[(-5)+4]
 25868  0187C8  0EFF               	movlw	-1
 25869  0187CA  2AE3               	incf	plusw1,f,c
 25870                           
 25871                           ;stkvar	_arg @ sp[(-5)+0]
 25872  0187CC  90D8               	bcf	status,0,c
 25873  0187CE  0EFE               	movlw	-2
 25874  0187D0  32E3               	rrcf	plusw1,f,c
 25875  0187D2  0EFD               	movlw	-3
 25876  0187D4  32E3               	rrcf	plusw1,f,c
 25877  0187D6  0EFC               	movlw	-4
 25878  0187D8  32E3               	rrcf	plusw1,f,c
 25879  0187DA  0EFB               	movlw	-5
 25880  0187DC  32E3               	rrcf	plusw1,f,c
 25881  0187DE                     l9880:
 25882                           
 25883                           ;stkvar	_arg @ sp[(-5)+0]
 25884  0187DE  50E1               	movf	fsr1l,w,c
 25885  0187E0  0FFB               	addlw	-5
 25886  0187E2  6ED9               	movwf	fsr2l,c
 25887  0187E4  50E2               	movf	fsr1h,w,c
 25888  0187E6  6EDA               	movwf	fsr2h,c
 25889  0187E8  0EFF               	movlw	255
 25890  0187EA  22DA               	addwfc	fsr2h,f,c
 25891  0187EC  52DE               	movf	postinc2,f,c
 25892  0187EE  52DE               	movf	postinc2,f,c
 25893  0187F0  52DE               	movf	postinc2,f,c
 25894  0187F2  0EFE               	movlw	254
 25895  0187F4  14DD               	andwf	postdec2,w,c
 25896  0187F6  B4D8               	btfsc	status,2,c
 25897  0187F8  D018               	goto	l9888
 25898  0187FA  D7E6               	goto	l9878
 25899  0187FC                     l9882:
 25900                           
 25901                           ;stkvar	_exp @ sp[(-5)+4]
 25902  0187FC  0EFF               	movlw	-1
 25903  0187FE  2AE3               	incf	plusw1,f,c
 25904                           
 25905                           ;stkvar	_arg @ sp[(-5)+0]
 25906  018800  50E1               	movf	fsr1l,w,c
 25907  018802  0FFB               	addlw	-5
 25908  018804  6ED9               	movwf	fsr2l,c
 25909  018806  50E2               	movf	fsr1h,w,c
 25910  018808  6EDA               	movwf	fsr2h,c
 25911  01880A  0EFF               	movlw	255
 25912  01880C  22DA               	addwfc	fsr2h,f,c
 25913  01880E  2ADE               	incf	postinc2,f,c
 25914  018810  0E00               	movlw	0
 25915  018812  22DE               	addwfc	postinc2,f,c
 25916  018814  22DE               	addwfc	postinc2,f,c
 25917  018816  22DE               	addwfc	postinc2,f,c
 25918                           
 25919                           ;stkvar	_arg @ sp[(-5)+0]
 25920  018818  90D8               	bcf	status,0,c
 25921  01881A  0EFE               	movlw	-2
 25922  01881C  32E3               	rrcf	plusw1,f,c
 25923  01881E  0EFD               	movlw	-3
 25924  018820  32E3               	rrcf	plusw1,f,c
 25925  018822  0EFC               	movlw	-4
 25926  018824  32E3               	rrcf	plusw1,f,c
 25927  018826  0EFB               	movlw	-5
 25928  018828  32E3               	rrcf	plusw1,f,c
 25929  01882A                     l9888:
 25930                           
 25931                           ;stkvar	_arg @ sp[(-5)+0]
 25932  01882A  50E1               	movf	fsr1l,w,c
 25933  01882C  0FFB               	addlw	-5
 25934  01882E  6ED9               	movwf	fsr2l,c
 25935  018830  50E2               	movf	fsr1h,w,c
 25936  018832  6EDA               	movwf	fsr2h,c
 25937  018834  0EFF               	movlw	255
 25938  018836  22DA               	addwfc	fsr2h,f,c
 25939  018838  52DE               	movf	postinc2,f,c
 25940  01883A  52DE               	movf	postinc2,f,c
 25941  01883C  52DE               	movf	postinc2,f,c
 25942  01883E  0EFF               	movlw	255
 25943  018840  14DD               	andwf	postdec2,w,c
 25944  018842  B4D8               	btfsc	status,2,c
 25945  018844  D00C               	goto	l9892
 25946  018846  D7DA               	goto	l9882
 25947  018848                     l9890:
 25948                           
 25949                           ;stkvar	_exp @ sp[(-5)+4]
 25950  018848  0EFF               	movlw	-1
 25951  01884A  06E3               	decf	plusw1,f,c
 25952                           
 25953                           ;stkvar	_arg @ sp[(-5)+0]
 25954  01884C  90D8               	bcf	status,0,c
 25955  01884E  0EFB               	movlw	-5
 25956  018850  36E3               	rlcf	plusw1,f,c
 25957  018852  0EFC               	movlw	-4
 25958  018854  36E3               	rlcf	plusw1,f,c
 25959  018856  0EFD               	movlw	-3
 25960  018858  36E3               	rlcf	plusw1,f,c
 25961  01885A  0EFE               	movlw	-2
 25962  01885C  36E3               	rlcf	plusw1,f,c
 25963  01885E                     l9892:
 25964                           
 25965                           ;stkvar	_arg @ sp[(-5)+0]
 25966  01885E  0EFD               	movlw	-3
 25967  018860  BEE3               	btfsc	plusw1,7,c
 25968  018862  D007               	goto	u9200
 25969                           
 25970                           ;stkvar	_exp @ sp[(-5)+4]
 25971  018864  0EFF               	movlw	-1
 25972  018866  006F FF8C  F001    	movff	plusw1,btemp
 25973  01886C  0E02               	movlw	2
 25974  01886E  6001               	cpfslt	btemp^0,c
 25975  018870  D7EB               	goto	l9890
 25976  018872                     u9200:
 25977                           
 25978                           ;stkvar	_exp @ sp[(-5)+4]
 25979  018872  0EFF               	movlw	-1
 25980  018874  B0E3               	btfsc	plusw1,0,c
 25981  018876  D002               	goto	l9900
 25982                           
 25983                           ;stkvar	_arg @ sp[(-5)+0]
 25984  018878  0EFD               	movlw	-3
 25985  01887A  9EE3               	bcf	plusw1,7,c
 25986  01887C                     l9900:
 25987                           
 25988                           ;stkvar	_exp @ sp[(-5)+4]
 25989  01887C  50E1               	movf	fsr1l,w,c
 25990  01887E  0FFF               	addlw	-1
 25991  018880  6ED9               	movwf	fsr2l,c
 25992  018882  50E2               	movf	fsr1h,w,c
 25993  018884  6EDA               	movwf	fsr2h,c
 25994  018886  0EFF               	movlw	255
 25995  018888  22DA               	addwfc	fsr2h,f,c
 25996  01888A  90D8               	bcf	status,0,c
 25997  01888C  32DF               	rrcf	indf2,f,c
 25998                           
 25999                           ;stkvar	_exp @ sp[(-5)+4]
 26000  01888E  0EFF               	movlw	-1
 26001  018890  006F FF8C  F00C    	movff	plusw1,btemp+11
 26002  018896  0060  F030  F005   	movff	btemp+11,btemp+4
 26003  01889C  6A06               	clrf	(btemp+5)^0,c
 26004  01889E  6A07               	clrf	(btemp+6)^0,c
 26005  0188A0  6A08               	clrf	(btemp+7)^0,c
 26006  0188A2  0060  F014  F008   	movff	btemp+4,btemp+7
 26007  0188A8  6A07               	clrf	(btemp+6)^0,c
 26008  0188AA  6A06               	clrf	(btemp+5)^0,c
 26009  0188AC  6A05               	clrf	(btemp+4)^0,c
 26010                           
 26011                           ;stkvar	_arg @ sp[(-5)+0]
 26012  0188AE  50E1               	movf	fsr1l,w,c
 26013  0188B0  0FFB               	addlw	-5
 26014  0188B2  6ED9               	movwf	fsr2l,c
 26015  0188B4  50E2               	movf	fsr1h,w,c
 26016  0188B6  6EDA               	movwf	fsr2h,c
 26017  0188B8  0EFF               	movlw	255
 26018  0188BA  22DA               	addwfc	fsr2h,f,c
 26019  0188BC  5005               	movf	(btemp+4)^0,w,c
 26020  0188BE  12DE               	iorwf	postinc2,f,c
 26021  0188C0  5006               	movf	(btemp+5)^0,w,c
 26022  0188C2  12DE               	iorwf	postinc2,f,c
 26023  0188C4  5007               	movf	(btemp+6)^0,w,c
 26024  0188C6  12DE               	iorwf	postinc2,f,c
 26025  0188C8  5008               	movf	(btemp+7)^0,w,c
 26026  0188CA  12DE               	iorwf	postinc2,f,c
 26027                           
 26028                           ;stkvar	_sign @ sp[(-5)+-1]
 26029  0188CC  0EFA               	movlw	-6
 26030  0188CE  50E3               	movf	plusw1,w,c
 26031  0188D0  B4D8               	btfsc	status,2,c
 26032  0188D2  D005               	goto	l9910
 26033                           
 26034                           ;stkvar	_val @ sp[(-5)+-5]
 26035  0188D4  0EF9               	movlw	-7
 26036  0188D6  AEE3               	btfss	plusw1,7,c
 26037  0188D8  D002               	goto	l9910
 26038                           
 26039                           ;stkvar	_arg @ sp[(-5)+0]
 26040  0188DA  0EFE               	movlw	-2
 26041  0188DC  8EE3               	bsf	plusw1,7,c
 26042  0188DE                     l9910:
 26043                           
 26044                           ;stkvar	_arg @ sp[(-5)+0]
 26045  0188DE  0EFB               	movlw	-5
 26046  0188E0  006F FF8C  F001    	movff	plusw1,btemp
 26047  0188E6  0EFC               	movlw	-4
 26048  0188E8  006F FF8C  F002    	movff	plusw1,btemp+1
 26049  0188EE  0EFD               	movlw	-3
 26050  0188F0  006F FF8C  F003    	movff	plusw1,btemp+2
 26051  0188F6  0EFE               	movlw	-2
 26052  0188F8  006F FF8C  F004    	movff	plusw1,btemp+3
 26053  0188FE                     l3167:
 26054                           
 26055                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 26056  0188FE  0EF6               	movlw	246
 26057  018900  26E1               	addwf	fsr1l,f,c
 26058  018902  0EFF               	movlw	255
 26059  018904  22E2               	addwfc	fsr1h,f,c
 26060  018906  0012               	return		;funcret
 26061  018908                     __end_of___xxtofl:
 26062                           	opt callstack 0
 26063                           
 26064 ;; *************** function ___fldiv *****************
 26065 ;; Defined at:
 26066 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 26067 ;; Parameters:    Size  Location     Type
 26068 ;;  b               4  [STACK] unsigned char 
 26069 ;;  a               4  [STACK] unsigned char 
 26070 ;; Auto vars:     Size  Location     Type
 26071 ;;  grs             4  [STACK] unsigned long 
 26072 ;;  rem             4  [STACK] unsigned long 
 26073 ;;  new_exp         2  [STACK] short 
 26074 ;;  aexp            1  [STACK] unsigned char 
 26075 ;;  bexp            1  [STACK] unsigned char 
 26076 ;;  sign            1  [STACK] unsigned char 
 26077 ;; Return value:  Size  Location     Type
 26078 ;;                  4  [STACK] unsigned char 
 26079 ;; Registers used:
 26080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 26081 ;; Tracked objects:
 26082 ;;		On entry : 0/0
 26083 ;;		On exit  : 0/0
 26084 ;;		Unchanged: 0/0
 26085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26090 ;;Total ram usage:        0 bytes
 26091 ;; Hardware stack levels used:    1
 26092 ;; Hardware stack levels required when called:   15
 26093 ;; This function calls:
 26094 ;;		Nothing
 26095 ;; This function is called by:
 26096 ;;		_conv_raw_result
 26097 ;;		_convert_dac_raw
 26098 ;;		_calc_bsoc
 26099 ;;		_init_bsoc
 26100 ;;		_esr_check
 26101 ;;		_efgtoa
 26102 ;; This function uses a reentrant model
 26103 ;;
 26104                           
 26105                           	psect	text106
 26106  014E26                     __ptext106:
 26107                           	opt callstack 0
 26108  014E26                     ___fldiv:
 26109                           	opt callstack 0
 26110                           
 26111                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26112  014E26  0E0D               	movlw	13
 26113  014E28  26E1               	addwf	fsr1l,f,c
 26114  014E2A  0E00               	movlw	0
 26115  014E2C  22E2               	addwfc	fsr1h,f,c
 26116                           
 26117                           ;stkvar	_b @ sp[(-13)+-4]
 26118                           
 26119                           ;incstack = 0
 26120 ;; hardware stack exceeded
 26121  014E2E  0EF2               	movlw	242
 26122  014E30  24E1               	addwf	fsr1l,w,c
 26123  014E32  6ED9               	movwf	fsr2l,c
 26124  014E34  0EFF               	movlw	255
 26125  014E36  20E2               	addwfc	fsr1h,w,c
 26126  014E38  6EDA               	movwf	fsr2h,c
 26127  014E3A  50DF               	movf	indf2,w,c
 26128  014E3C  6E0C               	movwf	(btemp+11)^0,c
 26129  014E3E  0E80               	movlw	128
 26130  014E40  160C               	andwf	(btemp+11)^0,f,c
 26131                           
 26132                           ;stkvar	_sign @ sp[(-13)+12]
 26133  014E42  0EFF               	movlw	-1
 26134  014E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 26135                           
 26136                           ;stkvar	_b @ sp[(-13)+-4]
 26137  014E4A  0EF2               	movlw	242
 26138  014E4C  24E1               	addwf	fsr1l,w,c
 26139  014E4E  6ED9               	movwf	fsr2l,c
 26140  014E50  0EFF               	movlw	255
 26141  014E52  20E2               	addwfc	fsr1h,w,c
 26142  014E54  6EDA               	movwf	fsr2h,c
 26143  014E56  50DF               	movf	indf2,w,c
 26144  014E58  6E0C               	movwf	(btemp+11)^0,c
 26145  014E5A  90D8               	bcf	status,0,c
 26146  014E5C  340C               	rlcf	(btemp+11)^0,w,c
 26147  014E5E  6E0B               	movwf	(btemp+10)^0,c
 26148                           
 26149                           ;stkvar	_bexp @ sp[(-13)+11]
 26150  014E60  0EFE               	movlw	-2
 26151  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26152                           
 26153                           ;stkvar	_b @ sp[(-13)+-4]
 26154  014E68  0EF1               	movlw	241
 26155  014E6A  24E1               	addwf	fsr1l,w,c
 26156  014E6C  6ED9               	movwf	fsr2l,c
 26157  014E6E  0EFF               	movlw	255
 26158  014E70  20E2               	addwfc	fsr1h,w,c
 26159  014E72  6EDA               	movwf	fsr2h,c
 26160  014E74  AEDF               	btfss	indf2,7,c
 26161  014E76  D002               	goto	l8440
 26162                           
 26163                           ;stkvar	_bexp @ sp[(-13)+11]
 26164  014E78  0EFE               	movlw	-2
 26165  014E7A  80E3               	bsf	plusw1,0,c
 26166  014E7C                     l8440:
 26167                           
 26168                           ;stkvar	_bexp @ sp[(-13)+11]
 26169  014E7C  0EFE               	movlw	-2
 26170  014E7E  50E3               	movf	plusw1,w,c
 26171  014E80  B4D8               	btfsc	status,2,c
 26172  014E82  D027               	goto	l8450
 26173                           
 26174                           ;stkvar	_bexp @ sp[(-13)+11]
 26175  014E84  0EFE               	movlw	-2
 26176  014E86  28E3               	incf	plusw1,w,c
 26177  014E88  A4D8               	btfss	status,2,c
 26178  014E8A  D018               	goto	l8446
 26179  014E8C  0E00               	movlw	0
 26180  014E8E  6E09               	movwf	(btemp+8)^0,c
 26181  014E90  0E00               	movlw	0
 26182  014E92  6E0A               	movwf	(btemp+9)^0,c
 26183  014E94  0E00               	movlw	0
 26184  014E96  6E0B               	movwf	(btemp+10)^0,c
 26185  014E98  0E00               	movlw	0
 26186  014E9A  6E0C               	movwf	(btemp+11)^0,c
 26187                           
 26188                           ;stkvar	_b @ sp[(-13)+-4]
 26189  014E9C  0EEF               	movlw	-17
 26190  014E9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26191  014EA4  0EF0               	movlw	-16
 26192  014EA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26193  014EAC  0EF1               	movlw	-15
 26194  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26195  014EB4  0EF2               	movlw	-14
 26196  014EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26197  014EBC                     l8446:
 26198                           
 26199                           ;stkvar	_b @ sp[(-13)+-4]
 26200  014EBC  0EF1               	movlw	-15
 26201  014EBE  8EE3               	bsf	plusw1,7,c
 26202                           
 26203                           ;stkvar	_b @ sp[(-13)+-4]
 26204  014EC0  0EF2               	movlw	242
 26205  014EC2  24E1               	addwf	fsr1l,w,c
 26206  014EC4  6ED9               	movwf	fsr2l,c
 26207  014EC6  0EFF               	movlw	255
 26208  014EC8  20E2               	addwfc	fsr1h,w,c
 26209  014ECA  6EDA               	movwf	fsr2h,c
 26210  014ECC  0E00               	movlw	0
 26211  014ECE  6EDF               	movwf	indf2,c
 26212  014ED0  D018               	goto	l8452
 26213  014ED2                     l8450:
 26214  014ED2  0E00               	movlw	0
 26215  014ED4  6E09               	movwf	(btemp+8)^0,c
 26216  014ED6  0E00               	movlw	0
 26217  014ED8  6E0A               	movwf	(btemp+9)^0,c
 26218  014EDA  0E00               	movlw	0
 26219  014EDC  6E0B               	movwf	(btemp+10)^0,c
 26220  014EDE  0E00               	movlw	0
 26221  014EE0  6E0C               	movwf	(btemp+11)^0,c
 26222                           
 26223                           ;stkvar	_b @ sp[(-13)+-4]
 26224  014EE2  0EEF               	movlw	-17
 26225  014EE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26226  014EEA  0EF0               	movlw	-16
 26227  014EEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26228  014EF2  0EF1               	movlw	-15
 26229  014EF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26230  014EFA  0EF2               	movlw	-14
 26231  014EFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26232  014F02                     l8452:
 26233                           
 26234                           ;stkvar	_a @ sp[(-13)+-8]
 26235  014F02  0EEE               	movlw	238
 26236  014F04  24E1               	addwf	fsr1l,w,c
 26237  014F06  6ED9               	movwf	fsr2l,c
 26238  014F08  0EFF               	movlw	255
 26239  014F0A  20E2               	addwfc	fsr1h,w,c
 26240  014F0C  6EDA               	movwf	fsr2h,c
 26241  014F0E  50DF               	movf	indf2,w,c
 26242  014F10  6E0C               	movwf	(btemp+11)^0,c
 26243  014F12  0E80               	movlw	128
 26244  014F14  160C               	andwf	(btemp+11)^0,f,c
 26245                           
 26246                           ;stkvar	_sign @ sp[(-13)+12]
 26247  014F16  50E1               	movf	fsr1l,w,c
 26248  014F18  0FFF               	addlw	-1
 26249  014F1A  6ED9               	movwf	fsr2l,c
 26250  014F1C  50E2               	movf	fsr1h,w,c
 26251  014F1E  6EDA               	movwf	fsr2h,c
 26252  014F20  0EFF               	movlw	255
 26253  014F22  22DA               	addwfc	fsr2h,f,c
 26254  014F24  500C               	movf	(btemp+11)^0,w,c
 26255  014F26  1ADF               	xorwf	indf2,f,c
 26256                           
 26257                           ;stkvar	_a @ sp[(-13)+-8]
 26258  014F28  0EEE               	movlw	238
 26259  014F2A  24E1               	addwf	fsr1l,w,c
 26260  014F2C  6ED9               	movwf	fsr2l,c
 26261  014F2E  0EFF               	movlw	255
 26262  014F30  20E2               	addwfc	fsr1h,w,c
 26263  014F32  6EDA               	movwf	fsr2h,c
 26264  014F34  50DF               	movf	indf2,w,c
 26265  014F36  6E0C               	movwf	(btemp+11)^0,c
 26266  014F38  90D8               	bcf	status,0,c
 26267  014F3A  340C               	rlcf	(btemp+11)^0,w,c
 26268  014F3C  6E0B               	movwf	(btemp+10)^0,c
 26269                           
 26270                           ;stkvar	_aexp @ sp[(-13)+10]
 26271  014F3E  0EFD               	movlw	-3
 26272  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26273                           
 26274                           ;stkvar	_a @ sp[(-13)+-8]
 26275  014F46  0EED               	movlw	237
 26276  014F48  24E1               	addwf	fsr1l,w,c
 26277  014F4A  6ED9               	movwf	fsr2l,c
 26278  014F4C  0EFF               	movlw	255
 26279  014F4E  20E2               	addwfc	fsr1h,w,c
 26280  014F50  6EDA               	movwf	fsr2h,c
 26281  014F52  AEDF               	btfss	indf2,7,c
 26282  014F54  D002               	goto	l8460
 26283                           
 26284                           ;stkvar	_aexp @ sp[(-13)+10]
 26285  014F56  0EFD               	movlw	-3
 26286  014F58  80E3               	bsf	plusw1,0,c
 26287  014F5A                     l8460:
 26288                           
 26289                           ;stkvar	_aexp @ sp[(-13)+10]
 26290  014F5A  0EFD               	movlw	-3
 26291  014F5C  50E3               	movf	plusw1,w,c
 26292  014F5E  B4D8               	btfsc	status,2,c
 26293  014F60  D027               	goto	l8470
 26294                           
 26295                           ;stkvar	_aexp @ sp[(-13)+10]
 26296  014F62  0EFD               	movlw	-3
 26297  014F64  28E3               	incf	plusw1,w,c
 26298  014F66  A4D8               	btfss	status,2,c
 26299  014F68  D018               	goto	l8466
 26300  014F6A  0E00               	movlw	0
 26301  014F6C  6E09               	movwf	(btemp+8)^0,c
 26302  014F6E  0E00               	movlw	0
 26303  014F70  6E0A               	movwf	(btemp+9)^0,c
 26304  014F72  0E00               	movlw	0
 26305  014F74  6E0B               	movwf	(btemp+10)^0,c
 26306  014F76  0E00               	movlw	0
 26307  014F78  6E0C               	movwf	(btemp+11)^0,c
 26308                           
 26309                           ;stkvar	_a @ sp[(-13)+-8]
 26310  014F7A  0EEB               	movlw	-21
 26311  014F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26312  014F82  0EEC               	movlw	-20
 26313  014F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26314  014F8A  0EED               	movlw	-19
 26315  014F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26316  014F92  0EEE               	movlw	-18
 26317  014F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 26318  014F9A                     l8466:
 26319                           
 26320                           ;stkvar	_a @ sp[(-13)+-8]
 26321  014F9A  0EED               	movlw	-19
 26322  014F9C  8EE3               	bsf	plusw1,7,c
 26323                           
 26324                           ;stkvar	_a @ sp[(-13)+-8]
 26325  014F9E  0EEE               	movlw	238
 26326  014FA0  24E1               	addwf	fsr1l,w,c
 26327  014FA2  6ED9               	movwf	fsr2l,c
 26328  014FA4  0EFF               	movlw	255
 26329  014FA6  20E2               	addwfc	fsr1h,w,c
 26330  014FA8  6EDA               	movwf	fsr2h,c
 26331  014FAA  0E00               	movlw	0
 26332  014FAC  6EDF               	movwf	indf2,c
 26333  014FAE  D018               	goto	l8472
 26334  014FB0                     l8470:
 26335  014FB0  0E00               	movlw	0
 26336  014FB2  6E09               	movwf	(btemp+8)^0,c
 26337  014FB4  0E00               	movlw	0
 26338  014FB6  6E0A               	movwf	(btemp+9)^0,c
 26339  014FB8  0E00               	movlw	0
 26340  014FBA  6E0B               	movwf	(btemp+10)^0,c
 26341  014FBC  0E00               	movlw	0
 26342  014FBE  6E0C               	movwf	(btemp+11)^0,c
 26343                           
 26344                           ;stkvar	_a @ sp[(-13)+-8]
 26345  014FC0  0EEB               	movlw	-21
 26346  014FC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26347  014FC8  0EEC               	movlw	-20
 26348  014FCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26349  014FD0  0EED               	movlw	-19
 26350  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26351  014FD8  0EEE               	movlw	-18
 26352  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26353  014FE0                     l8472:
 26354                           
 26355                           ;stkvar	_a @ sp[(-13)+-8]
 26356  014FE0  0EEB               	movlw	-21
 26357  014FE2  50E3               	movf	plusw1,w,c
 26358  014FE4  E139               	bnz	l8484
 26359  014FE6  0EEC               	movlw	-20
 26360  014FE8  50E3               	movf	plusw1,w,c
 26361  014FEA  E136               	bnz	l8484
 26362  014FEC  0EED               	movlw	-19
 26363  014FEE  50E3               	movf	plusw1,w,c
 26364  014FF0  E133               	bnz	l8484
 26365  014FF2  0EEE               	movlw	-18
 26366  014FF4  50E3               	movf	plusw1,w,c
 26367  014FF6  A4D8               	btfss	status,2,c
 26368  014FF8  D02F               	goto	l8484
 26369                           
 26370                           ;stkvar	_b @ sp[(-13)+-4]
 26371  014FFA  0EEF               	movlw	-17
 26372  014FFC  6AE3               	clrf	plusw1,c
 26373  014FFE  0EF0               	movlw	-16
 26374  015000  6AE3               	clrf	plusw1,c
 26375  015002  0EF1               	movlw	-15
 26376  015004  6AE3               	clrf	plusw1,c
 26377  015006  0EF2               	movlw	-14
 26378  015008  6AE3               	clrf	plusw1,c
 26379                           
 26380                           ;stkvar	_b @ sp[(-13)+-4]
 26381  01500A  0EF1               	movlw	241
 26382  01500C  24E1               	addwf	fsr1l,w,c
 26383  01500E  6ED9               	movwf	fsr2l,c
 26384  015010  0EFF               	movlw	255
 26385  015012  20E2               	addwfc	fsr1h,w,c
 26386  015014  6EDA               	movwf	fsr2h,c
 26387  015016  0E80               	movlw	128
 26388  015018  12DE               	iorwf	postinc2,f,c
 26389  01501A  0E7F               	movlw	127
 26390  01501C  12DD               	iorwf	postdec2,f,c
 26391  01501E                     l8478:
 26392                           
 26393                           ;stkvar	_sign @ sp[(-13)+12]
 26394  01501E  0EFF               	movlw	-1
 26395  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 26396                           
 26397                           ;stkvar	_b @ sp[(-13)+-4]
 26398  015026  0EF2               	movlw	242
 26399  015028  24E1               	addwf	fsr1l,w,c
 26400  01502A  6ED9               	movwf	fsr2l,c
 26401  01502C  0EFF               	movlw	255
 26402  01502E  20E2               	addwfc	fsr1h,w,c
 26403  015030  6EDA               	movwf	fsr2h,c
 26404  015032  500C               	movf	(btemp+11)^0,w,c
 26405  015034  12DF               	iorwf	indf2,f,c
 26406                           
 26407                           ;stkvar	_b @ sp[(-13)+-4]
 26408  015036  0EEF               	movlw	-17
 26409  015038  006F FF8C  F001    	movff	plusw1,btemp
 26410  01503E  0EF0               	movlw	-16
 26411  015040  006F FF8C  F002    	movff	plusw1,btemp+1
 26412  015046  0EF1               	movlw	-15
 26413  015048  006F FF8C  F003    	movff	plusw1,btemp+2
 26414  01504E  0EF2               	movlw	-14
 26415  015050  006F FF8C  F004    	movff	plusw1,btemp+3
 26416  015056  D19F               	goto	l3091
 26417  015058                     l8484:
 26418                           
 26419                           ;stkvar	_bexp @ sp[(-13)+11]
 26420  015058  0EFE               	movlw	-2
 26421  01505A  50E3               	movf	plusw1,w,c
 26422  01505C  A4D8               	btfss	status,2,c
 26423  01505E  D009               	goto	l8492
 26424  015060  0E00               	movlw	0
 26425  015062  6E01               	movwf	btemp^0,c
 26426  015064  0E00               	movlw	0
 26427  015066  6E02               	movwf	(btemp+1)^0,c
 26428  015068  0E00               	movlw	0
 26429  01506A  6E03               	movwf	(btemp+2)^0,c
 26430  01506C  0E00               	movlw	0
 26431  01506E  6E04               	movwf	(btemp+3)^0,c
 26432  015070  D192               	goto	l3091
 26433  015072                     l8492:
 26434                           
 26435                           ;stkvar	_bexp @ sp[(-13)+11]
 26436  015072  0EFE               	movlw	-2
 26437  015074  50E3               	movf	plusw1,w,c
 26438  015076  6E0B               	movwf	(btemp+10)^0,c
 26439  015078  6A0C               	clrf	(btemp+11)^0,c
 26440                           
 26441                           ;stkvar	_aexp @ sp[(-13)+10]
 26442  01507A  0EFD               	movlw	-3
 26443  01507C  50E3               	movf	plusw1,w,c
 26444  01507E  5E0B               	subwf	(btemp+10)^0,f,c
 26445  015080  0E00               	movlw	0
 26446  015082  5A0C               	subwfb	(btemp+11)^0,f,c
 26447  015084  0E7F               	movlw	127
 26448  015086  260B               	addwf	(btemp+10)^0,f,c
 26449  015088  0E00               	movlw	0
 26450  01508A  220C               	addwfc	(btemp+11)^0,f,c
 26451                           
 26452                           ;stkvar	_new_exp @ sp[(-13)+8]
 26453  01508C  0EFB               	movlw	-5
 26454  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26455  015094  0EFC               	movlw	-4
 26456  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 26457                           
 26458                           ;stkvar	_b @ sp[(-13)+-4]
 26459  01509C  0EEF               	movlw	-17
 26460  01509E  006F FF8C  F009    	movff	plusw1,btemp+8
 26461  0150A4  0EF0               	movlw	-16
 26462  0150A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 26463  0150AC  0EF1               	movlw	-15
 26464  0150AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26465  0150B4  0EF2               	movlw	-14
 26466  0150B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26467                           
 26468                           ;stkvar	_rem @ sp[(-13)+4]
 26469  0150BC  0EF7               	movlw	-9
 26470  0150BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26471  0150C4  0EF8               	movlw	-8
 26472  0150C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26473  0150CC  0EF9               	movlw	-7
 26474  0150CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26475  0150D4  0EFA               	movlw	-6
 26476  0150D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26477                           
 26478                           ;stkvar	_b @ sp[(-13)+-4]
 26479  0150DC  0EEF               	movlw	-17
 26480  0150DE  6AE3               	clrf	plusw1,c
 26481  0150E0  0EF0               	movlw	-16
 26482  0150E2  6AE3               	clrf	plusw1,c
 26483  0150E4  0EF1               	movlw	-15
 26484  0150E6  6AE3               	clrf	plusw1,c
 26485  0150E8  0EF2               	movlw	-14
 26486  0150EA  6AE3               	clrf	plusw1,c
 26487                           
 26488                           ;stkvar	_grs @ sp[(-13)+0]
 26489  0150EC  0EF3               	movlw	-13
 26490  0150EE  6AE3               	clrf	plusw1,c
 26491  0150F0  0EF4               	movlw	-12
 26492  0150F2  6AE3               	clrf	plusw1,c
 26493  0150F4  0EF5               	movlw	-11
 26494  0150F6  6AE3               	clrf	plusw1,c
 26495  0150F8  0EF6               	movlw	-10
 26496  0150FA  6AE3               	clrf	plusw1,c
 26497                           
 26498                           ;stkvar	_aexp @ sp[(-13)+10]
 26499  0150FC  0EFD               	movlw	-3
 26500  0150FE  6AE3               	clrf	plusw1,c
 26501  015100  D050               	goto	l8520
 26502  015102                     l8502:
 26503                           
 26504                           ;stkvar	_aexp @ sp[(-13)+10]
 26505  015102  0EFD               	movlw	-3
 26506  015104  50E3               	movf	plusw1,w,c
 26507  015106  B4D8               	btfsc	status,2,c
 26508  015108  D020               	goto	l8512
 26509                           
 26510                           ;stkvar	_rem @ sp[(-13)+4]
 26511  01510A  90D8               	bcf	status,0,c
 26512  01510C  0EF7               	movlw	-9
 26513  01510E  36E3               	rlcf	plusw1,f,c
 26514  015110  0EF8               	movlw	-8
 26515  015112  36E3               	rlcf	plusw1,f,c
 26516  015114  0EF9               	movlw	-7
 26517  015116  36E3               	rlcf	plusw1,f,c
 26518  015118  0EFA               	movlw	-6
 26519  01511A  36E3               	rlcf	plusw1,f,c
 26520                           
 26521                           ;stkvar	_b @ sp[(-13)+-4]
 26522  01511C  90D8               	bcf	status,0,c
 26523  01511E  0EEF               	movlw	-17
 26524  015120  36E3               	rlcf	plusw1,f,c
 26525  015122  0EF0               	movlw	-16
 26526  015124  36E3               	rlcf	plusw1,f,c
 26527  015126  0EF1               	movlw	-15
 26528  015128  36E3               	rlcf	plusw1,f,c
 26529  01512A  0EF2               	movlw	-14
 26530  01512C  36E3               	rlcf	plusw1,f,c
 26531                           
 26532                           ;stkvar	_grs @ sp[(-13)+0]
 26533  01512E  0EF6               	movlw	-10
 26534  015130  AEE3               	btfss	plusw1,7,c
 26535  015132  D002               	goto	l8510
 26536                           
 26537                           ;stkvar	_b @ sp[(-13)+-4]
 26538  015134  0EEF               	movlw	-17
 26539  015136  80E3               	bsf	plusw1,0,c
 26540  015138                     l8510:
 26541                           
 26542                           ;stkvar	_grs @ sp[(-13)+0]
 26543  015138  90D8               	bcf	status,0,c
 26544  01513A  0EF3               	movlw	-13
 26545  01513C  36E3               	rlcf	plusw1,f,c
 26546  01513E  0EF4               	movlw	-12
 26547  015140  36E3               	rlcf	plusw1,f,c
 26548  015142  0EF5               	movlw	-11
 26549  015144  36E3               	rlcf	plusw1,f,c
 26550  015146  0EF6               	movlw	-10
 26551  015148  36E3               	rlcf	plusw1,f,c
 26552  01514A                     l8512:
 26553                           
 26554                           ;stkvar	_a @ sp[(-13)+-8]
 26555                           ;stkvar	_rem @ sp[(-13)+4]
 26556  01514A  50E1               	movf	fsr1l,w,c
 26557  01514C  0FF7               	addlw	-9
 26558  01514E  6ED9               	movwf	fsr2l,c
 26559  015150  50E2               	movf	fsr1h,w,c
 26560  015152  6EDA               	movwf	fsr2h,c
 26561  015154  0EFF               	movlw	255
 26562  015156  22DA               	addwfc	fsr2h,f,c
 26563  015158  0EEB               	movlw	-21
 26564  01515A  50E3               	movf	plusw1,w,c
 26565  01515C  5CDE               	subwf	postinc2,w,c
 26566  01515E  0EEC               	movlw	-20
 26567  015160  50E3               	movf	plusw1,w,c
 26568  015162  58DE               	subwfb	postinc2,w,c
 26569  015164  0EED               	movlw	-19
 26570  015166  50E3               	movf	plusw1,w,c
 26571  015168  58DE               	subwfb	postinc2,w,c
 26572  01516A  0EEE               	movlw	-18
 26573  01516C  50E3               	movf	plusw1,w,c
 26574  01516E  58DE               	subwfb	postinc2,w,c
 26575  015170  A0D8               	btfss	status,0,c
 26576  015172  D015               	goto	l8518
 26577                           
 26578                           ;stkvar	_grs @ sp[(-13)+0]
 26579  015174  0EF6               	movlw	-10
 26580  015176  8CE3               	bsf	plusw1,6,c
 26581                           
 26582                           ;stkvar	_a @ sp[(-13)+-8]
 26583                           ;stkvar	_rem @ sp[(-13)+4]
 26584  015178  50E1               	movf	fsr1l,w,c
 26585  01517A  0FF7               	addlw	-9
 26586  01517C  6ED9               	movwf	fsr2l,c
 26587  01517E  50E2               	movf	fsr1h,w,c
 26588  015180  6EDA               	movwf	fsr2h,c
 26589  015182  0EFF               	movlw	255
 26590  015184  22DA               	addwfc	fsr2h,f,c
 26591  015186  0EEB               	movlw	-21
 26592  015188  50E3               	movf	plusw1,w,c
 26593  01518A  5EDE               	subwf	postinc2,f,c
 26594  01518C  0EEC               	movlw	-20
 26595  01518E  50E3               	movf	plusw1,w,c
 26596  015190  5ADE               	subwfb	postinc2,f,c
 26597  015192  0EED               	movlw	-19
 26598  015194  50E3               	movf	plusw1,w,c
 26599  015196  5ADE               	subwfb	postinc2,f,c
 26600  015198  0EEE               	movlw	-18
 26601  01519A  50E3               	movf	plusw1,w,c
 26602  01519C  5ADE               	subwfb	postinc2,f,c
 26603  01519E                     l8518:
 26604                           
 26605                           ;stkvar	_aexp @ sp[(-13)+10]
 26606  01519E  0EFD               	movlw	-3
 26607  0151A0  2AE3               	incf	plusw1,f,c
 26608  0151A2                     l8520:
 26609                           
 26610                           ;stkvar	_aexp @ sp[(-13)+10]
 26611  0151A2  0EFD               	movlw	-3
 26612  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 26613  0151AA  0E19               	movlw	25
 26614  0151AC  6401               	cpfsgt	btemp^0,c
 26615  0151AE  D7A9               	goto	l8502
 26616                           
 26617                           ;stkvar	_rem @ sp[(-13)+4]
 26618  0151B0  0EF7               	movlw	-9
 26619  0151B2  50E3               	movf	plusw1,w,c
 26620  0151B4  E10A               	bnz	u6790
 26621  0151B6  0EF8               	movlw	-8
 26622  0151B8  50E3               	movf	plusw1,w,c
 26623  0151BA  E107               	bnz	u6790
 26624  0151BC  0EF9               	movlw	-7
 26625  0151BE  50E3               	movf	plusw1,w,c
 26626  0151C0  E104               	bnz	u6790
 26627  0151C2  0EFA               	movlw	-6
 26628  0151C4  50E3               	movf	plusw1,w,c
 26629  0151C6  B4D8               	btfsc	status,2,c
 26630  0151C8  D024               	goto	l8536
 26631  0151CA                     u6790:
 26632                           
 26633                           ;stkvar	_grs @ sp[(-13)+0]
 26634  0151CA  0EF3               	movlw	-13
 26635  0151CC  80E3               	bsf	plusw1,0,c
 26636  0151CE  D021               	goto	l8536
 26637  0151D0                     l8526:
 26638                           
 26639                           ;stkvar	_b @ sp[(-13)+-4]
 26640  0151D0  90D8               	bcf	status,0,c
 26641  0151D2  0EEF               	movlw	-17
 26642  0151D4  36E3               	rlcf	plusw1,f,c
 26643  0151D6  0EF0               	movlw	-16
 26644  0151D8  36E3               	rlcf	plusw1,f,c
 26645  0151DA  0EF1               	movlw	-15
 26646  0151DC  36E3               	rlcf	plusw1,f,c
 26647  0151DE  0EF2               	movlw	-14
 26648  0151E0  36E3               	rlcf	plusw1,f,c
 26649                           
 26650                           ;stkvar	_grs @ sp[(-13)+0]
 26651  0151E2  0EF6               	movlw	-10
 26652  0151E4  AEE3               	btfss	plusw1,7,c
 26653  0151E6  D002               	goto	l8532
 26654                           
 26655                           ;stkvar	_b @ sp[(-13)+-4]
 26656  0151E8  0EEF               	movlw	-17
 26657  0151EA  80E3               	bsf	plusw1,0,c
 26658  0151EC                     l8532:
 26659                           
 26660                           ;stkvar	_grs @ sp[(-13)+0]
 26661  0151EC  90D8               	bcf	status,0,c
 26662  0151EE  0EF3               	movlw	-13
 26663  0151F0  36E3               	rlcf	plusw1,f,c
 26664  0151F2  0EF4               	movlw	-12
 26665  0151F4  36E3               	rlcf	plusw1,f,c
 26666  0151F6  0EF5               	movlw	-11
 26667  0151F8  36E3               	rlcf	plusw1,f,c
 26668  0151FA  0EF6               	movlw	-10
 26669  0151FC  36E3               	rlcf	plusw1,f,c
 26670                           
 26671                           ;stkvar	_new_exp @ sp[(-13)+8]
 26672  0151FE  50E1               	movf	fsr1l,w,c
 26673  015200  0FFB               	addlw	-5
 26674  015202  6ED9               	movwf	fsr2l,c
 26675  015204  50E2               	movf	fsr1h,w,c
 26676  015206  6EDA               	movwf	fsr2h,c
 26677  015208  0EFF               	movlw	255
 26678  01520A  22DA               	addwfc	fsr2h,f,c
 26679  01520C  06DE               	decf	postinc2,f,c
 26680  01520E  0E00               	movlw	0
 26681  015210  5ADD               	subwfb	postdec2,f,c
 26682  015212                     l8536:
 26683                           
 26684                           ;stkvar	_b @ sp[(-13)+-4]
 26685  015212  0EF1               	movlw	-15
 26686  015214  AEE3               	btfss	plusw1,7,c
 26687  015216  D7DC               	goto	l8526
 26688                           
 26689                           ;stkvar	_aexp @ sp[(-13)+10]
 26690  015218  0EFD               	movlw	-3
 26691  01521A  6AE3               	clrf	plusw1,c
 26692                           
 26693                           ;stkvar	_grs @ sp[(-13)+0]
 26694  01521C  0EF6               	movlw	-10
 26695  01521E  AEE3               	btfss	plusw1,7,c
 26696  015220  D020               	goto	l8550
 26697                           
 26698                           ;stkvar	_grs @ sp[(-13)+0]
 26699  015222  50E1               	movf	fsr1l,w,c
 26700  015224  0FF3               	addlw	-13
 26701  015226  6ED9               	movwf	fsr2l,c
 26702  015228  50E2               	movf	fsr1h,w,c
 26703  01522A  6EDA               	movwf	fsr2h,c
 26704  01522C  0EFF               	movlw	255
 26705  01522E  22DA               	addwfc	fsr2h,f,c
 26706  015230  0EFF               	movlw	255
 26707  015232  14DE               	andwf	postinc2,w,c
 26708  015234  6E09               	movwf	(btemp+8)^0,c
 26709  015236  0EFF               	movlw	255
 26710  015238  14DE               	andwf	postinc2,w,c
 26711  01523A  6E0A               	movwf	(btemp+9)^0,c
 26712  01523C  0EFF               	movlw	255
 26713  01523E  14DE               	andwf	postinc2,w,c
 26714  015240  6E0B               	movwf	(btemp+10)^0,c
 26715  015242  0E7F               	movlw	127
 26716  015244  14DE               	andwf	postinc2,w,c
 26717  015246  6E0C               	movwf	(btemp+11)^0,c
 26718  015248  5009               	movf	(btemp+8)^0,w,c
 26719  01524A  100A               	iorwf	(btemp+9)^0,w,c
 26720  01524C  100B               	iorwf	(btemp+10)^0,w,c
 26721  01524E  100C               	iorwf	(btemp+11)^0,w,c
 26722  015250  B4D8               	btfsc	status,2,c
 26723  015252  D004               	goto	l8546
 26724  015254                     u6830:
 26725                           
 26726                           ;stkvar	_aexp @ sp[(-13)+10]
 26727  015254  0EFD               	movlw	-3
 26728  015256  6AE3               	clrf	plusw1,c
 26729  015258  2AE3               	incf	plusw1,f,c
 26730  01525A  D003               	goto	l8550
 26731  01525C                     l8546:
 26732                           
 26733                           ;stkvar	_b @ sp[(-13)+-4]
 26734  01525C  0EEF               	movlw	-17
 26735  01525E  B0E3               	btfsc	plusw1,0,c
 26736  015260  D7F9               	goto	u6830
 26737  015262                     l8550:
 26738                           
 26739                           ;stkvar	_aexp @ sp[(-13)+10]
 26740  015262  0EFD               	movlw	-3
 26741  015264  50E3               	movf	plusw1,w,c
 26742  015266  B4D8               	btfsc	status,2,c
 26743  015268  D036               	goto	l8560
 26744                           
 26745                           ;stkvar	_b @ sp[(-13)+-4]
 26746  01526A  50E1               	movf	fsr1l,w,c
 26747  01526C  0FEF               	addlw	-17
 26748  01526E  6ED9               	movwf	fsr2l,c
 26749  015270  50E2               	movf	fsr1h,w,c
 26750  015272  6EDA               	movwf	fsr2h,c
 26751  015274  0EFF               	movlw	255
 26752  015276  22DA               	addwfc	fsr2h,f,c
 26753  015278  2ADE               	incf	postinc2,f,c
 26754  01527A  0E00               	movlw	0
 26755  01527C  22DE               	addwfc	postinc2,f,c
 26756  01527E  22DE               	addwfc	postinc2,f,c
 26757  015280  22DE               	addwfc	postinc2,f,c
 26758                           
 26759                           ;stkvar	_b @ sp[(-13)+-4]
 26760  015282  0EF2               	movlw	-14
 26761  015284  A0E3               	btfss	plusw1,0,c
 26762  015286  D027               	goto	l8560
 26763  015288  0E01               	movlw	1
 26764  01528A  6E0C               	movwf	(btemp+11)^0,c
 26765                           
 26766                           ;stkvar	_b @ sp[(-13)+-4]
 26767  01528C  50E1               	movf	fsr1l,w,c
 26768  01528E  0FEF               	addlw	-17
 26769  015290  6ED9               	movwf	fsr2l,c
 26770  015292  50E2               	movf	fsr1h,w,c
 26771  015294  6EDA               	movwf	fsr2h,c
 26772  015296  0EFF               	movlw	255
 26773  015298  22DA               	addwfc	fsr2h,f,c
 26774  01529A  280C               	incf	(btemp+11)^0,w,c
 26775  01529C  52DE               	movf	postinc2,f,c
 26776  01529E  D008               	goto	u6870
 26777  0152A0                     u6875:
 26778  0152A0  52DE               	movf	postinc2,f,c
 26779  0152A2  90D8               	bcf	status,0,c
 26780  0152A4  BEDC               	btfsc	preinc2,7,c
 26781  0152A6  80D8               	bsf	status,0,c
 26782  0152A8  32DD               	rrcf	postdec2,f,c
 26783  0152AA  32DD               	rrcf	postdec2,f,c
 26784  0152AC  32DD               	rrcf	postdec2,f,c
 26785  0152AE  32DE               	rrcf	postinc2,f,c
 26786  0152B0                     u6870:
 26787  0152B0  2EE8               	decfsz	wreg,f,c
 26788  0152B2  D7F6               	goto	u6875
 26789                           
 26790                           ;stkvar	_new_exp @ sp[(-13)+8]
 26791  0152B4  0EFB               	movlw	-5
 26792  0152B6  50E3               	movf	plusw1,w,c
 26793  0152B8  0F01               	addlw	1
 26794  0152BA  6E01               	movwf	btemp^0,c
 26795  0152BC  0EFB               	movlw	-5
 26796  0152BE  0060  F007  FFE3   	movff	btemp,plusw1
 26797  0152C4  6A01               	clrf	btemp^0,c
 26798  0152C6  0EFC               	movlw	-4
 26799  0152C8  50E3               	movf	plusw1,w,c
 26800  0152CA  2001               	addwfc	btemp^0,w,c
 26801  0152CC  6E01               	movwf	btemp^0,c
 26802  0152CE  0EFC               	movlw	-4
 26803  0152D0  0060  F007  FFE3   	movff	btemp,plusw1
 26804  0152D6                     l8560:
 26805                           
 26806                           ;stkvar	_new_exp @ sp[(-13)+8]
 26807  0152D6  0EFC               	movlw	-4
 26808  0152D8  BEE3               	btfsc	plusw1,7,c
 26809  0152DA  D01B               	goto	l8566
 26810  0152DC  0EFC               	movlw	-4
 26811  0152DE  50E3               	movf	plusw1,w,c
 26812  0152E0  E104               	bnz	u6880
 26813  0152E2  0EFB               	movlw	-5
 26814  0152E4  28E3               	incf	plusw1,w,c
 26815  0152E6  A0D8               	btfss	status,0,c
 26816  0152E8  D014               	goto	l8566
 26817  0152EA                     u6880:
 26818  0152EA  0EFF               	movlw	255
 26819  0152EC  6E0B               	movwf	(btemp+10)^0,c
 26820  0152EE  0E00               	movlw	0
 26821  0152F0  6E0C               	movwf	(btemp+11)^0,c
 26822                           
 26823                           ;stkvar	_new_exp @ sp[(-13)+8]
 26824  0152F2  0EFB               	movlw	-5
 26825  0152F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26826  0152FA  0EFC               	movlw	-4
 26827  0152FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26828                           
 26829                           ;stkvar	_b @ sp[(-13)+-4]
 26830  015302  0EEF               	movlw	-17
 26831  015304  6AE3               	clrf	plusw1,c
 26832  015306  0EF0               	movlw	-16
 26833  015308  6AE3               	clrf	plusw1,c
 26834  01530A  0EF1               	movlw	-15
 26835  01530C  6AE3               	clrf	plusw1,c
 26836  01530E  0EF2               	movlw	-14
 26837  015310  6AE3               	clrf	plusw1,c
 26838  015312                     l8566:
 26839                           
 26840                           ;stkvar	_new_exp @ sp[(-13)+8]
 26841  015312  0EFC               	movlw	-4
 26842  015314  BEE3               	btfsc	plusw1,7,c
 26843  015316  D007               	goto	u6890
 26844  015318  0EFC               	movlw	-4
 26845  01531A  50E3               	movf	plusw1,w,c
 26846  01531C  E112               	bnz	l8572
 26847  01531E  0EFB               	movlw	-5
 26848  015320  04E3               	decf	plusw1,w,c
 26849  015322  B0D8               	btfsc	status,0,c
 26850  015324  D00E               	goto	l8572
 26851  015326                     u6890:
 26852                           
 26853                           ;stkvar	_new_exp @ sp[(-13)+8]
 26854  015326  0EFB               	movlw	-5
 26855  015328  6AE3               	clrf	plusw1,c
 26856  01532A  0EFC               	movlw	-4
 26857  01532C  6AE3               	clrf	plusw1,c
 26858                           
 26859                           ;stkvar	_b @ sp[(-13)+-4]
 26860  01532E  0EEF               	movlw	-17
 26861  015330  6AE3               	clrf	plusw1,c
 26862  015332  0EF0               	movlw	-16
 26863  015334  6AE3               	clrf	plusw1,c
 26864  015336  0EF1               	movlw	-15
 26865  015338  6AE3               	clrf	plusw1,c
 26866  01533A  0EF2               	movlw	-14
 26867  01533C  6AE3               	clrf	plusw1,c
 26868                           
 26869                           ;stkvar	_sign @ sp[(-13)+12]
 26870  01533E  0EFF               	movlw	-1
 26871  015340  6AE3               	clrf	plusw1,c
 26872  015342                     l8572:
 26873                           
 26874                           ;stkvar	_new_exp @ sp[(-13)+8]
 26875                           ;stkvar	_bexp @ sp[(-13)+11]
 26876  015342  0EFB               	movlw	-5
 26877  015344  006F FF8C  F001    	movff	plusw1,btemp
 26878  01534A  0EFE               	movlw	-2
 26879  01534C  0060  F007  FFE3   	movff	btemp,plusw1
 26880                           
 26881                           ;stkvar	_bexp @ sp[(-13)+11]
 26882  015352  0EFE               	movlw	-2
 26883  015354  A0E3               	btfss	plusw1,0,c
 26884  015356  D009               	goto	l8578
 26885                           
 26886                           ;stkvar	_b @ sp[(-13)+-4]
 26887  015358  0EF1               	movlw	241
 26888  01535A  24E1               	addwf	fsr1l,w,c
 26889  01535C  6ED9               	movwf	fsr2l,c
 26890  01535E  0EFF               	movlw	255
 26891  015360  20E2               	addwfc	fsr1h,w,c
 26892  015362  6EDA               	movwf	fsr2h,c
 26893  015364  0E00               	movlw	0
 26894  015366  8EDB               	bsf	plusw2,7,c
 26895  015368  D008               	goto	l8580
 26896  01536A                     l8578:
 26897                           
 26898                           ;stkvar	_b @ sp[(-13)+-4]
 26899  01536A  0EF1               	movlw	241
 26900  01536C  24E1               	addwf	fsr1l,w,c
 26901  01536E  6ED9               	movwf	fsr2l,c
 26902  015370  0EFF               	movlw	255
 26903  015372  20E2               	addwfc	fsr1h,w,c
 26904  015374  6EDA               	movwf	fsr2h,c
 26905  015376  0E7F               	movlw	127
 26906  015378  16DF               	andwf	indf2,f,c
 26907  01537A                     l8580:
 26908                           
 26909                           ;stkvar	_b @ sp[(-13)+-4]
 26910  01537A  0EF2               	movlw	242
 26911  01537C  24E1               	addwf	fsr1l,w,c
 26912  01537E  6ED9               	movwf	fsr2l,c
 26913  015380  0EFF               	movlw	255
 26914  015382  20E2               	addwfc	fsr1h,w,c
 26915  015384  6EDA               	movwf	fsr2h,c
 26916                           
 26917                           ;stkvar	_bexp @ sp[(-13)+11]
 26918  015386  0EFE               	movlw	-2
 26919  015388  006F FF8C  F00C    	movff	plusw1,btemp+11
 26920  01538E  90D8               	bcf	status,0,c
 26921  015390  300C               	rrcf	(btemp+11)^0,w,c
 26922  015392  6EDF               	movwf	indf2,c
 26923  015394  D644               	goto	l8478
 26924  015396                     l3091:
 26925                           
 26926                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26927  015396  0EEB               	movlw	235
 26928  015398  26E1               	addwf	fsr1l,f,c
 26929  01539A  0EFF               	movlw	255
 26930  01539C  22E2               	addwfc	fsr1h,f,c
 26931  01539E  0012               	return		;funcret
 26932  0153A0                     __end_of___fldiv:
 26933                           	opt callstack 0
 26934                           
 26935 ;; *************** function ___flge *****************
 26936 ;; Defined at:
 26937 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26938 ;; Parameters:    Size  Location     Type
 26939 ;;  ff1             4  [STACK] unsigned char 
 26940 ;;  ff2             4  [STACK] unsigned char 
 26941 ;; Auto vars:     Size  Location     Type
 26942 ;;		None
 26943 ;; Return value:  Size  Location     Type
 26944 ;;		None               void
 26945 ;; Registers used:
 26946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26947 ;; Tracked objects:
 26948 ;;		On entry : 0/0
 26949 ;;		On exit  : 0/0
 26950 ;;		Unchanged: 0/0
 26951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26956 ;;Total ram usage:        0 bytes
 26957 ;; Hardware stack levels used:    1
 26958 ;; Hardware stack levels required when called:   15
 26959 ;; This function calls:
 26960 ;;		Nothing
 26961 ;; This function is called by:
 26962 ;;		_main
 26963 ;;		_convert_dac_raw
 26964 ;;		_calc_ror_data
 26965 ;;		_check_day_time
 26966 ;;		_calc_bsoc
 26967 ;;		_efgtoa
 26968 ;; This function uses a reentrant model
 26969 ;;
 26970                           
 26971                           	psect	text107
 26972  019272                     __ptext107:
 26973                           	opt callstack 0
 26974  019272                     ___flge:
 26975                           	opt callstack 0
 26976                           
 26977                           ;stkvar	_ff1 @ sp[(0)+-4]
 26978                           
 26979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26980                           ;incstack = 0
 26981 ;; hardware stack exceeded
 26982  019272  50E1               	movf	fsr1l,w,c
 26983  019274  0FFC               	addlw	-4
 26984  019276  6ED9               	movwf	fsr2l,c
 26985  019278  50E2               	movf	fsr1h,w,c
 26986  01927A  6EDA               	movwf	fsr2h,c
 26987  01927C  0EFF               	movlw	255
 26988  01927E  22DA               	addwfc	fsr2h,f,c
 26989  019280  0E00               	movlw	0
 26990  019282  14DE               	andwf	postinc2,w,c
 26991  019284  6E09               	movwf	(btemp+8)^0,c
 26992  019286  0E00               	movlw	0
 26993  019288  14DE               	andwf	postinc2,w,c
 26994  01928A  6E0A               	movwf	(btemp+9)^0,c
 26995  01928C  0E80               	movlw	128
 26996  01928E  14DE               	andwf	postinc2,w,c
 26997  019290  6E0B               	movwf	(btemp+10)^0,c
 26998  019292  0E7F               	movlw	127
 26999  019294  14DE               	andwf	postinc2,w,c
 27000  019296  6E0C               	movwf	(btemp+11)^0,c
 27001  019298  5009               	movf	(btemp+8)^0,w,c
 27002  01929A  100A               	iorwf	(btemp+9)^0,w,c
 27003  01929C  100B               	iorwf	(btemp+10)^0,w,c
 27004  01929E  100C               	iorwf	(btemp+11)^0,w,c
 27005  0192A0  A4D8               	btfss	status,2,c
 27006  0192A2  D008               	goto	l8854
 27007                           
 27008                           ;stkvar	_ff1 @ sp[(0)+-4]
 27009  0192A4  0EFC               	movlw	-4
 27010  0192A6  6AE3               	clrf	plusw1,c
 27011  0192A8  0EFD               	movlw	-3
 27012  0192AA  6AE3               	clrf	plusw1,c
 27013  0192AC  0EFE               	movlw	-2
 27014  0192AE  6AE3               	clrf	plusw1,c
 27015  0192B0  0EFF               	movlw	-1
 27016  0192B2  6AE3               	clrf	plusw1,c
 27017  0192B4                     l8854:
 27018                           
 27019                           ;stkvar	_ff2 @ sp[(0)+-8]
 27020  0192B4  50E1               	movf	fsr1l,w,c
 27021  0192B6  0FF8               	addlw	-8
 27022  0192B8  6ED9               	movwf	fsr2l,c
 27023  0192BA  50E2               	movf	fsr1h,w,c
 27024  0192BC  6EDA               	movwf	fsr2h,c
 27025  0192BE  0EFF               	movlw	255
 27026  0192C0  22DA               	addwfc	fsr2h,f,c
 27027  0192C2  0E00               	movlw	0
 27028  0192C4  14DE               	andwf	postinc2,w,c
 27029  0192C6  6E09               	movwf	(btemp+8)^0,c
 27030  0192C8  0E00               	movlw	0
 27031  0192CA  14DE               	andwf	postinc2,w,c
 27032  0192CC  6E0A               	movwf	(btemp+9)^0,c
 27033  0192CE  0E80               	movlw	128
 27034  0192D0  14DE               	andwf	postinc2,w,c
 27035  0192D2  6E0B               	movwf	(btemp+10)^0,c
 27036  0192D4  0E7F               	movlw	127
 27037  0192D6  14DE               	andwf	postinc2,w,c
 27038  0192D8  6E0C               	movwf	(btemp+11)^0,c
 27039  0192DA  5009               	movf	(btemp+8)^0,w,c
 27040  0192DC  100A               	iorwf	(btemp+9)^0,w,c
 27041  0192DE  100B               	iorwf	(btemp+10)^0,w,c
 27042  0192E0  100C               	iorwf	(btemp+11)^0,w,c
 27043  0192E2  A4D8               	btfss	status,2,c
 27044  0192E4  D008               	goto	l2772
 27045                           
 27046                           ;stkvar	_ff2 @ sp[(0)+-8]
 27047  0192E6  0EF8               	movlw	-8
 27048  0192E8  6AE3               	clrf	plusw1,c
 27049  0192EA  0EF9               	movlw	-7
 27050  0192EC  6AE3               	clrf	plusw1,c
 27051  0192EE  0EFA               	movlw	-6
 27052  0192F0  6AE3               	clrf	plusw1,c
 27053  0192F2  0EFB               	movlw	-5
 27054  0192F4  6AE3               	clrf	plusw1,c
 27055  0192F6                     l2772:
 27056                           
 27057                           ;stkvar	_ff1 @ sp[(0)+-4]
 27058  0192F6  0EFF               	movlw	-1
 27059  0192F8  AEE3               	btfss	plusw1,7,c
 27060  0192FA  D024               	goto	l8860
 27061                           
 27062                           ;stkvar	_ff1 @ sp[(0)+-4]
 27063  0192FC  0E00               	movlw	0
 27064  0192FE  6E09               	movwf	(btemp+8)^0,c
 27065  019300  0E00               	movlw	0
 27066  019302  6E0A               	movwf	(btemp+9)^0,c
 27067  019304  0E00               	movlw	0
 27068  019306  6E0B               	movwf	(btemp+10)^0,c
 27069  019308  0E80               	movlw	128
 27070  01930A  6E0C               	movwf	(btemp+11)^0,c
 27071  01930C  0EFC               	movlw	-4
 27072  01930E  50E3               	movf	plusw1,w,c
 27073  019310  5E09               	subwf	(btemp+8)^0,f,c
 27074  019312  0EFD               	movlw	-3
 27075  019314  50E3               	movf	plusw1,w,c
 27076  019316  5A0A               	subwfb	(btemp+9)^0,f,c
 27077  019318  0EFE               	movlw	-2
 27078  01931A  50E3               	movf	plusw1,w,c
 27079  01931C  5A0B               	subwfb	(btemp+10)^0,f,c
 27080  01931E  0EFF               	movlw	-1
 27081  019320  50E3               	movf	plusw1,w,c
 27082  019322  5A0C               	subwfb	(btemp+11)^0,f,c
 27083                           
 27084                           ;stkvar	_ff1 @ sp[(0)+-4]
 27085  019324  0EFC               	movlw	-4
 27086  019326  0060  F027  FFE3   	movff	btemp+8,plusw1
 27087  01932C  0EFD               	movlw	-3
 27088  01932E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27089  019334  0EFE               	movlw	-2
 27090  019336  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27091  01933C  0EFF               	movlw	-1
 27092  01933E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27093  019344                     l8860:
 27094                           
 27095                           ;stkvar	_ff2 @ sp[(0)+-8]
 27096  019344  0EFB               	movlw	-5
 27097  019346  AEE3               	btfss	plusw1,7,c
 27098  019348  D024               	goto	l8864
 27099                           
 27100                           ;stkvar	_ff2 @ sp[(0)+-8]
 27101  01934A  0E00               	movlw	0
 27102  01934C  6E09               	movwf	(btemp+8)^0,c
 27103  01934E  0E00               	movlw	0
 27104  019350  6E0A               	movwf	(btemp+9)^0,c
 27105  019352  0E00               	movlw	0
 27106  019354  6E0B               	movwf	(btemp+10)^0,c
 27107  019356  0E80               	movlw	128
 27108  019358  6E0C               	movwf	(btemp+11)^0,c
 27109  01935A  0EF8               	movlw	-8
 27110  01935C  50E3               	movf	plusw1,w,c
 27111  01935E  5E09               	subwf	(btemp+8)^0,f,c
 27112  019360  0EF9               	movlw	-7
 27113  019362  50E3               	movf	plusw1,w,c
 27114  019364  5A0A               	subwfb	(btemp+9)^0,f,c
 27115  019366  0EFA               	movlw	-6
 27116  019368  50E3               	movf	plusw1,w,c
 27117  01936A  5A0B               	subwfb	(btemp+10)^0,f,c
 27118  01936C  0EFB               	movlw	-5
 27119  01936E  50E3               	movf	plusw1,w,c
 27120  019370  5A0C               	subwfb	(btemp+11)^0,f,c
 27121                           
 27122                           ;stkvar	_ff2 @ sp[(0)+-8]
 27123  019372  0EF8               	movlw	-8
 27124  019374  0060  F027  FFE3   	movff	btemp+8,plusw1
 27125  01937A  0EF9               	movlw	-7
 27126  01937C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27127  019382  0EFA               	movlw	-6
 27128  019384  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27129  01938A  0EFB               	movlw	-5
 27130  01938C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27131  019392                     l8864:
 27132                           
 27133                           ;stkvar	_ff1 @ sp[(0)+-4]
 27134  019392  0EFF               	movlw	-1
 27135  019394  7EE3               	btg	plusw1,7,c
 27136                           
 27137                           ;stkvar	_ff2 @ sp[(0)+-8]
 27138  019396  0EFB               	movlw	-5
 27139  019398  7EE3               	btg	plusw1,7,c
 27140                           
 27141                           ;stkvar	_ff2 @ sp[(0)+-8]
 27142                           ;stkvar	_ff1 @ sp[(0)+-4]
 27143  01939A  50E1               	movf	fsr1l,w,c
 27144  01939C  0FFC               	addlw	-4
 27145  01939E  6ED9               	movwf	fsr2l,c
 27146  0193A0  50E2               	movf	fsr1h,w,c
 27147  0193A2  6EDA               	movwf	fsr2h,c
 27148  0193A4  0EFF               	movlw	255
 27149  0193A6  22DA               	addwfc	fsr2h,f,c
 27150  0193A8  0EF8               	movlw	-8
 27151  0193AA  50E3               	movf	plusw1,w,c
 27152  0193AC  5CDE               	subwf	postinc2,w,c
 27153  0193AE  0EF9               	movlw	-7
 27154  0193B0  50E3               	movf	plusw1,w,c
 27155  0193B2  58DE               	subwfb	postinc2,w,c
 27156  0193B4  0EFA               	movlw	-6
 27157  0193B6  50E3               	movf	plusw1,w,c
 27158  0193B8  58DE               	subwfb	postinc2,w,c
 27159  0193BA  0EFB               	movlw	-5
 27160  0193BC  50E3               	movf	plusw1,w,c
 27161  0193BE  58DE               	subwfb	postinc2,w,c
 27162  0193C0  B0D8               	btfsc	status,0,c
 27163  0193C2  D002               	goto	l8872
 27164  0193C4  9001               	bcf	btemp& (0+255),0,c
 27165  0193C6  D001               	goto	l2779
 27166  0193C8                     l8872:
 27167  0193C8  8001               	bsf	btemp& (0+255),0,c
 27168  0193CA                     l2779:
 27169                           
 27170                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 27171  0193CA  0EF8               	movlw	248
 27172  0193CC  26E1               	addwf	fsr1l,f,c
 27173  0193CE  0EFF               	movlw	255
 27174  0193D0  22E2               	addwfc	fsr1h,f,c
 27175  0193D2  0012               	return		;funcret
 27176  0193D4                     __end_of___flge:
 27177                           	opt callstack 0
 27178                           
 27179 ;; *************** function _calc_model_data *****************
 27180 ;; Defined at:
 27181 ;;		line 67 in file "mbmc.c"
 27182 ;; Parameters:    Size  Location     Type
 27183 ;;		None
 27184 ;; Auto vars:     Size  Location     Type
 27185 ;;		None
 27186 ;; Return value:  Size  Location     Type
 27187 ;;                  1  [STACK] void 
 27188 ;; Registers used:
 27189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27190 ;; Tracked objects:
 27191 ;;		On entry : 0/1
 27192 ;;		On exit  : 3F/39
 27193 ;;		Unchanged: 0/0
 27194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27199 ;;Total ram usage:        0 bytes
 27200 ;; Hardware stack levels used:    1
 27201 ;; Hardware stack levels required when called:   18
 27202 ;; This function calls:
 27203 ;;		___fladd
 27204 ;;		___flmul
 27205 ;;		___flsub
 27206 ;;		_lp_filter
 27207 ;;		_start_bsoc
 27208 ;;		_stop_bsoc
 27209 ;; This function is called by:
 27210 ;;		_main
 27211 ;; This function uses a reentrant model
 27212 ;;
 27213                           
 27214                           	psect	text108
 27215  015CDC                     __ptext108:
 27216                           	opt callstack 0
 27217  015CDC                     _calc_model_data:
 27218                           	opt callstack 12
 27219                           
 27220                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 27221                           
 27222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27223                           ;incstack = 0
 27224  015CDC  ECAC  F0E3         	call	_stop_bsoc	;wreg free
 27225                           
 27226                           ; BSR set to: 57
 27227                           ;mbmc.c: 72:  if (!V.calib) {
 27228  015CE0  0101               	movlb	1	; () banked
 27229  015CE2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 27230  015CE4  A4D8               	btfss	status,2,c
 27231  015CE6  D219               	goto	l11382
 27232                           
 27233                           ; BSR set to: 1
 27234                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 27235  015CE8  EE21  F2FF         	lfsr	2,_C
 27236  015CEC  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 27237  015CF2  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 27238  015CF8  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 27239  015CFE  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 27240                           
 27241                           ; BSR set to: 1
 27242                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 27243  015D04  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 27244  015D0A  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 27245  015D10  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 27246  015D16  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 27247  015D1C  EE21  F343         	lfsr	2,_C+68	;volatile
 27248  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 27249  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 27250  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 27251  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 27252  015D38  ECAA  F0DD         	call	___flsub	;wreg free
 27253  015D3C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 27254  015D42  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 27255  015D48  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 27256  015D4E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 27257                           
 27258                           ;mbmc.c: 75:   bcror = C.c_bat;
 27259  015D54  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 27260  015D58  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 27261  015D5C  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 27262  015D60  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 27263                           
 27264                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 27265  015D64  EE21  F303         	lfsr	2,_C+4	;volatile
 27266  015D68  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 27267  015D6E  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 27268  015D74  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 27269  015D7A  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 27270                           
 27271                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 27272  015D80  EE21  F30F         	lfsr	2,_C+16	;volatile
 27273  015D84  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 27274  015D8A  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 27275  015D90  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 27276  015D96  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 27277                           
 27278                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 27279  015D9C  EE21  F333         	lfsr	2,_C+52	;volatile
 27280  015DA0  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 27281  015DA6  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 27282  015DAC  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 27283  015DB2  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 27284                           
 27285                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 27286  015DB8  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 27287  015DBE  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 27288  015DC4  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 27289  015DCA  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 27290  015DD0  EE21  F353         	lfsr	2,_C+84	;volatile
 27291  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 27292  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 27293  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27294  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27295  015DEC  ECAA  F0DD         	call	___flsub	;wreg free
 27296  015DF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 27297  015DF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 27298  015DFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 27299  015E02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 27300                           
 27301                           ;mbmc.c: 80:   bvror = C.v_bat;
 27302  015E08  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 27303  015E0C  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 27304  015E10  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 27305  015E14  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 27306                           
 27307                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 27308  015E18  EE21  F313         	lfsr	2,_C+20	;volatile
 27309  015E1C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27310  015E22  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27311  015E28  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27312  015E2E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27313                           
 27314                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27315  015E34  EE21  F307         	lfsr	2,_C+8	;volatile
 27316  015E38  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27317  015E3E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27318  015E44  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27319  015E4A  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27320                           
 27321                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27322  015E50  EE21  F32F         	lfsr	2,_C+48	;volatile
 27323  015E54  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27324  015E5A  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27325  015E60  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27326  015E66  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27327                           
 27328                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27329  015E6C  0E01               	movlw	1
 27330  015E6E  6EE6               	movwf	postinc1,c
 27331  015E70  0E10               	movlw	16
 27332  015E72  6EE6               	movwf	postinc1,c
 27333  015E74  EE21  F2FF         	lfsr	2,_C
 27334  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 27335  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 27336  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 27337  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 27338  015E90  EE21  F303         	lfsr	2,_C+4	;volatile
 27339  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 27340  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 27341  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 27342  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 27343  015EAC  ECAA  F0DD         	call	___flsub	;wreg free
 27344  015EB0  0060  F007  FFE6   	movff	btemp,postinc1
 27345  015EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27346  015EBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27347  015EC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 27348  015EC8  EC84  F0C4         	call	_lp_filter	;wreg free
 27349  015ECC  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27350  015ED2  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27351  015ED8  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27352  015EDE  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27353                           
 27354                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27355  015EE4  0E01               	movlw	1
 27356  015EE6  6EE6               	movwf	postinc1,c
 27357  015EE8  0E11               	movlw	17
 27358  015EEA  6EE6               	movwf	postinc1,c
 27359  015EEC  EE21  F353         	lfsr	2,_C+84	;volatile
 27360  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 27361  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 27362  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 27363  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 27364  015F08  EE21  F33F         	lfsr	2,_C+64	;volatile
 27365  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 27366  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 27367  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 27368  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 27369  015F24  EC20  F09F         	call	___flmul	;wreg free
 27370  015F28  0060  F007  FFE6   	movff	btemp,postinc1
 27371  015F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27372  015F34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27373  015F3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27374  015F40  EC84  F0C4         	call	_lp_filter	;wreg free
 27375  015F44  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27376  015F4A  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27377  015F50  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27378  015F56  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27379                           
 27380                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27381  015F5C  0E01               	movlw	1
 27382  015F5E  6EE6               	movwf	postinc1,c
 27383  015F60  0E12               	movlw	18
 27384  015F62  6EE6               	movwf	postinc1,c
 27385  015F64  EE21  F34F         	lfsr	2,_C+80	;volatile
 27386  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 27387  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 27388  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 27389  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 27390  015F80  EE21  F347         	lfsr	2,_C+72	;volatile
 27391  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 27392  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 27393  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 27394  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 27395  015F9C  EC20  F09F         	call	___flmul	;wreg free
 27396  015FA0  0060  F007  FFE6   	movff	btemp,postinc1
 27397  015FA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27398  015FAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27399  015FB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 27400  015FB8  EC84  F0C4         	call	_lp_filter	;wreg free
 27401  015FBC  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27402  015FC2  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27403  015FC8  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27404  015FCE  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27405                           
 27406                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27407  015FD4  0E01               	movlw	1
 27408  015FD6  6EE6               	movwf	postinc1,c
 27409  015FD8  0E13               	movlw	19
 27410  015FDA  6EE6               	movwf	postinc1,c
 27411  015FDC  0E00               	movlw	0
 27412  015FDE  6EE6               	movwf	postinc1,c
 27413  015FE0  0E00               	movlw	0
 27414  015FE2  6EE6               	movwf	postinc1,c
 27415  015FE4  0E60               	movlw	96
 27416  015FE6  6EE6               	movwf	postinc1,c
 27417  015FE8  0EC1               	movlw	193
 27418  015FEA  6EE6               	movwf	postinc1,c
 27419  015FEC  EE21  F363         	lfsr	2,_C+100	;volatile
 27420  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 27421  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 27422  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 27423  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 27424  016008  EE21  F33F         	lfsr	2,_C+64	;volatile
 27425  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 27426  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 27427  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 27428  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 27429  016024  EC20  F09F         	call	___flmul	;wreg free
 27430  016028  0060  F007  FFE6   	movff	btemp,postinc1
 27431  01602E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27432  016034  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27433  01603A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27434  016040  EC35  F0A3         	call	___fladd	;wreg free
 27435  016044  0060  F007  FFE6   	movff	btemp,postinc1
 27436  01604A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27437  016050  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27438  016056  0060  F013  FFE6   	movff	btemp+3,postinc1
 27439  01605C  EC84  F0C4         	call	_lp_filter	;wreg free
 27440  016060  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27441  016066  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27442  01606C  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27443  016072  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27444                           
 27445                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27446  016078  0E01               	movlw	1
 27447  01607A  6EE6               	movwf	postinc1,c
 27448  01607C  0E14               	movlw	20
 27449  01607E  6EE6               	movwf	postinc1,c
 27450  016080  EE21  F353         	lfsr	2,_C+84	;volatile
 27451  016084  006F FF7B FFE6     	movff	postinc2,postinc1
 27452  01608A  006F FF7B FFE6     	movff	postinc2,postinc1
 27453  016090  006F FF7B FFE6     	movff	postinc2,postinc1
 27454  016096  006F FF7B FFE6     	movff	postinc2,postinc1
 27455  01609C  EE21  F343         	lfsr	2,_C+68	;volatile
 27456  0160A0  006F FF7B FFE6     	movff	postinc2,postinc1
 27457  0160A6  006F FF7B FFE6     	movff	postinc2,postinc1
 27458  0160AC  006F FF7B FFE6     	movff	postinc2,postinc1
 27459  0160B2  006F FF7B FFE6     	movff	postinc2,postinc1
 27460  0160B8  EC20  F09F         	call	___flmul	;wreg free
 27461  0160BC  0060  F007  FFE6   	movff	btemp,postinc1
 27462  0160C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27463  0160C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27464  0160CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 27465  0160D4  EC84  F0C4         	call	_lp_filter	;wreg free
 27466  0160D8  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27467  0160DE  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27468  0160E4  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27469  0160EA  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27470                           
 27471                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27472  0160F0  EE21  F377         	lfsr	2,_C+120	;volatile
 27473  0160F4  0E03               	movlw	3
 27474  0160F6  AEDB               	btfss	plusw2,7,c
 27475  0160F8  D010               	goto	l11382
 27476                           
 27477                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27478  0160FA  0E17               	movlw	23
 27479  0160FC  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27480  016102  0EB7               	movlw	183
 27481  016104  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27482  01610A  0ED1               	movlw	209
 27483  01610C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27484  016112  0E38               	movlw	56
 27485  016114  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27486  01611A                     l11382:
 27487                           
 27488                           ;mbmc.c: 95:  start_bsoc();
 27489  01611A  EC3B  F0E2         	call	_start_bsoc	;wreg free
 27490                           
 27491                           ; BSR set to: 57
 27492                           ;mbmc.c: 96:  C.update = 1;
 27493  01611E  0E01               	movlw	1
 27494  016120  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27495                           
 27496                           ; BSR set to: 57
 27497                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27498  016126  0012               	return		;funcret
 27499  016128                     __end_of_calc_model_data:
 27500                           	opt callstack 0
 27501                           
 27502 ;; *************** function _stop_bsoc *****************
 27503 ;; Defined at:
 27504 ;;		line 130 in file "bsoc.c"
 27505 ;; Parameters:    Size  Location     Type
 27506 ;;		None
 27507 ;; Auto vars:     Size  Location     Type
 27508 ;;		None
 27509 ;; Return value:  Size  Location     Type
 27510 ;;                  1  [STACK] void 
 27511 ;; Registers used:
 27512 ;;		None
 27513 ;; Tracked objects:
 27514 ;;		On entry : 0/1
 27515 ;;		On exit  : 3F/39
 27516 ;;		Unchanged: 0/0
 27517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27522 ;;Total ram usage:        0 bytes
 27523 ;; Hardware stack levels used:    1
 27524 ;; Hardware stack levels required when called:   15
 27525 ;; This function calls:
 27526 ;;		Nothing
 27527 ;; This function is called by:
 27528 ;;		_calc_model_data
 27529 ;; This function uses a reentrant model
 27530 ;;
 27531                           
 27532                           	psect	text109
 27533  01C758                     __ptext109:
 27534                           	opt callstack 0
 27535  01C758                     _stop_bsoc:
 27536                           	opt callstack 14
 27537                           
 27538                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 27539                           
 27540                           ; BSR set to: 57
 27541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27542                           ;incstack = 0
 27543  01C758  0139               	movlb	57	; () banked
 27544  01C75A  9D96               	bcf	150,6,b	;volatile
 27545                           
 27546                           ; BSR set to: 57
 27547                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27548  01C75C  0012               	return		;funcret
 27549  01C75E                     __end_of_stop_bsoc:
 27550                           	opt callstack 0
 27551                           
 27552 ;; *************** function _start_bsoc *****************
 27553 ;; Defined at:
 27554 ;;		line 121 in file "bsoc.c"
 27555 ;; Parameters:    Size  Location     Type
 27556 ;;		None
 27557 ;; Auto vars:     Size  Location     Type
 27558 ;;		None
 27559 ;; Return value:  Size  Location     Type
 27560 ;;                  1  [STACK] void 
 27561 ;; Registers used:
 27562 ;;		wreg, status,2, status,0, btemp+11
 27563 ;; Tracked objects:
 27564 ;;		On entry : 0/1
 27565 ;;		On exit  : 3F/39
 27566 ;;		Unchanged: 0/0
 27567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27572 ;;Total ram usage:        0 bytes
 27573 ;; Hardware stack levels used:    1
 27574 ;; Hardware stack levels required when called:   15
 27575 ;; This function calls:
 27576 ;;		Nothing
 27577 ;; This function is called by:
 27578 ;;		_calc_model_data
 27579 ;; This function uses a reentrant model
 27580 ;;
 27581                           
 27582                           	psect	text110
 27583  01C476                     __ptext110:
 27584                           	opt callstack 0
 27585  01C476                     _start_bsoc:
 27586                           	opt callstack 14
 27587                           
 27588                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 27589                           
 27590                           ; BSR set to: 57
 27591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27592                           ;incstack = 0
 27593  01C476  0139               	movlb	57	; () banked
 27594  01C478  8D96               	bsf	150,6,b	;volatile
 27595                           
 27596                           ; BSR set to: 57
 27597  01C47A  A4BE               	btfss	190,2,c	;volatile
 27598  01C47C  D002               	goto	u9840
 27599  01C47E  0E01               	movlw	1
 27600  01C480  D001               	goto	u9846
 27601  01C482                     u9840:
 27602  01C482  0E00               	movlw	0
 27603  01C484                     u9846:
 27604  01C484  0AFF               	xorlw	255
 27605  01C486  6E0C               	movwf	(btemp+11)^0,c
 27606  01C488  460C               	rlncf	(btemp+11)^0,f,c
 27607  01C48A  460C               	rlncf	(btemp+11)^0,f,c
 27608  01C48C  50BE               	movf	190,w,c	;volatile
 27609  01C48E  180C               	xorwf	(btemp+11)^0,w,c
 27610  01C490  0BFB               	andlw	-5
 27611  01C492  180C               	xorwf	(btemp+11)^0,w,c
 27612  01C494  6EBE               	movwf	190,c	;volatile
 27613                           
 27614                           ; BSR set to: 57
 27615                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27616  01C496  0012               	return		;funcret
 27617  01C498                     __end_of_start_bsoc:
 27618                           	opt callstack 0
 27619                           
 27620 ;; *************** function _lp_filter *****************
 27621 ;; Defined at:
 27622 ;;		line 29 in file "mbmc.c"
 27623 ;; Parameters:    Size  Location     Type
 27624 ;;  new             4  [STACK] const float 
 27625 ;;  bn              1  [STACK] const unsigned char 
 27626 ;;  slow            1  [STACK] const char 
 27627 ;; Auto vars:     Size  Location     Type
 27628 ;;  lp_speed        4  [STACK] float 
 27629 ;; Return value:  Size  Location     Type
 27630 ;;                  4  [STACK] float 
 27631 ;; Registers used:
 27632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27633 ;; Tracked objects:
 27634 ;;		On entry : 0/1
 27635 ;;		On exit  : 0/0
 27636 ;;		Unchanged: 0/0
 27637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27642 ;;Total ram usage:        0 bytes
 27643 ;; Hardware stack levels used:    1
 27644 ;; Hardware stack levels required when called:   17
 27645 ;; This function calls:
 27646 ;;		___fladd
 27647 ;;		___flmul
 27648 ;;		___flsub
 27649 ;; This function is called by:
 27650 ;;		_main
 27651 ;;		_convert_adc_data
 27652 ;;		_calc_model_data
 27653 ;; This function uses a reentrant model
 27654 ;;
 27655                           
 27656                           	psect	text111
 27657  018908                     __ptext111:
 27658                           	opt callstack 0
 27659  018908                     _lp_filter:
 27660                           	opt callstack 0
 27661                           
 27662                           ; BSR set to: 57
 27663                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27664  018908  52E6               	movf	postinc1,f,c
 27665  01890A  52E6               	movf	postinc1,f,c
 27666  01890C  52E6               	movf	postinc1,f,c
 27667  01890E  52E6               	movf	postinc1,f,c
 27668                           
 27669                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27670                           ;stkvar	_bn @ sp[(-4)+-5]
 27671                           
 27672                           ;incstack = 0
 27673  018910  0EF7               	movlw	-9
 27674  018912  006F FF8C  F001    	movff	plusw1,btemp
 27675  018918  0E14               	movlw	20
 27676  01891A  6401               	cpfsgt	btemp^0,c
 27677  01891C  D011               	goto	l10656
 27678  01891E                     u9700:
 27679                           
 27680                           ;mbmc.c: 35:   return new;
 27681                           ;stkvar	_new @ sp[(-4)+-4]
 27682  01891E  0EF8               	movlw	-8
 27683  018920  006F FF8C  F001    	movff	plusw1,btemp
 27684  018926  0EF9               	movlw	-7
 27685  018928  006F FF8C  F002    	movff	plusw1,btemp+1
 27686  01892E  0EFA               	movlw	-6
 27687  018930  006F FF8C  F003    	movff	plusw1,btemp+2
 27688  018936  0EFB               	movlw	-5
 27689  018938  006F FF8C  F004    	movff	plusw1,btemp+3
 27690  01893E  D0BD               	goto	l1938
 27691  018940                     l10656:
 27692                           
 27693                           ;mbmc.c: 37:  if (slow == (-1)) {
 27694                           ;stkvar	_slow @ sp[(-4)+-6]
 27695  018940  0EF6               	movlw	-10
 27696  018942  28E3               	incf	plusw1,w,c
 27697  018944  A4D8               	btfss	status,2,c
 27698  018946  D012               	goto	l10664
 27699                           
 27700                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27701                           ;stkvar	_bn @ sp[(-4)+-5]
 27702  018948  0EF7               	movlw	-9
 27703  01894A  50E3               	movf	plusw1,w,c
 27704  01894C  0D04               	mullw	4
 27705  01894E  0E00               	movlw	low lp_filter@smooth
 27706  018950  24F3               	addwf	243,w,c
 27707  018952  6ED9               	movwf	fsr2l,c
 27708  018954  0E02               	movlw	high lp_filter@smooth
 27709  018956  20F4               	addwfc	prodh,w,c
 27710  018958  6EDA               	movwf	fsr2h,c
 27711  01895A  0E00               	movlw	0
 27712  01895C  6EDE               	movwf	postinc2,c
 27713  01895E  0E00               	movlw	0
 27714  018960  6EDE               	movwf	postinc2,c
 27715  018962  0E00               	movlw	0
 27716  018964  6EDE               	movwf	postinc2,c
 27717  018966  0E00               	movlw	0
 27718  018968  6EDD               	movwf	postdec2,c
 27719  01896A  D7D9               	goto	u9700
 27720  01896C                     l10664:
 27721                           
 27722                           ;mbmc.c: 42:  if (slow) {
 27723                           ;stkvar	_slow @ sp[(-4)+-6]
 27724  01896C  0EF6               	movlw	-10
 27725  01896E  50E3               	movf	plusw1,w,c
 27726  018970  B4D8               	btfsc	status,2,c
 27727  018972  D006               	goto	l10668
 27728                           
 27729                           ;mbmc.c: 43:   lp_speed = 0.033;
 27730  018974  0E02               	movlw	2
 27731  018976  6E09               	movwf	(btemp+8)^0,c
 27732  018978  0E2B               	movlw	43
 27733  01897A  6E0A               	movwf	(btemp+9)^0,c
 27734  01897C  0E07               	movlw	7
 27735  01897E  D005               	goto	L32
 27736  018980                     l10668:
 27737                           
 27738                           ;mbmc.c: 45:   lp_speed = 0.066;
 27739  018980  0E02               	movlw	2
 27740  018982  6E09               	movwf	(btemp+8)^0,c
 27741  018984  0E2B               	movlw	43
 27742  018986  6E0A               	movwf	(btemp+9)^0,c
 27743  018988  0E87               	movlw	135
 27744  01898A                     L32:
 27745  01898A  6E0B               	movwf	(btemp+10)^0,c
 27746  01898C  0E3D               	movlw	61
 27747  01898E  6E0C               	movwf	(btemp+11)^0,c
 27748                           
 27749                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27750  018990  0EFC               	movlw	-4
 27751  018992  0060  F027  FFE3   	movff	btemp+8,plusw1
 27752  018998  0EFD               	movlw	-3
 27753  01899A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27754  0189A0  0EFE               	movlw	-2
 27755  0189A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27756  0189A8  0EFF               	movlw	-1
 27757  0189AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27758                           
 27759                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27760                           ;stkvar	_bn @ sp[(-4)+-5]
 27761  0189B0  0EF7               	movlw	-9
 27762  0189B2  50E3               	movf	plusw1,w,c
 27763  0189B4  0D04               	mullw	4
 27764  0189B6  0E00               	movlw	low lp_filter@smooth
 27765  0189B8  24F3               	addwf	243,w,c
 27766  0189BA  6ED9               	movwf	fsr2l,c
 27767  0189BC  0E02               	movlw	high lp_filter@smooth
 27768  0189BE  20F4               	addwfc	prodh,w,c
 27769  0189C0  6EDA               	movwf	fsr2h,c
 27770  0189C2  006F FF7B FFE6     	movff	postinc2,postinc1
 27771  0189C8  006F FF7B FFE6     	movff	postinc2,postinc1
 27772  0189CE  006F FF7B FFE6     	movff	postinc2,postinc1
 27773  0189D4  006F FF7B FFE6     	movff	postinc2,postinc1
 27774                           
 27775                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27776  0189DA  0EF8               	movlw	-8
 27777  0189DC  006F FF8F FFE6     	movff	plusw1,postinc1
 27778  0189E2  006F FF8F FFE6     	movff	plusw1,postinc1
 27779  0189E8  006F FF8F FFE6     	movff	plusw1,postinc1
 27780  0189EE  006F FF8F FFE6     	movff	plusw1,postinc1
 27781                           
 27782                           ;stkvar	_bn @ sp[(-12)+-5]
 27783  0189F4  0EEF               	movlw	-17
 27784  0189F6  50E3               	movf	plusw1,w,c
 27785  0189F8  0D04               	mullw	4
 27786  0189FA  0E00               	movlw	low lp_filter@smooth
 27787  0189FC  24F3               	addwf	243,w,c
 27788  0189FE  6ED9               	movwf	fsr2l,c
 27789  018A00  0E02               	movlw	high lp_filter@smooth
 27790  018A02  20F4               	addwfc	prodh,w,c
 27791  018A04  6EDA               	movwf	fsr2h,c
 27792  018A06  006F FF7B FFE6     	movff	postinc2,postinc1
 27793  018A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 27794  018A12  006F FF7B FFE6     	movff	postinc2,postinc1
 27795  018A18  006F FF7B FFE6     	movff	postinc2,postinc1
 27796                           
 27797                           ;stkvar	_new @ sp[(-16)+-4]
 27798  018A1E  0EEC               	movlw	-20
 27799  018A20  006F FF8F FFE6     	movff	plusw1,postinc1
 27800  018A26  006F FF8F FFE6     	movff	plusw1,postinc1
 27801  018A2C  006F FF8F FFE6     	movff	plusw1,postinc1
 27802  018A32  006F FF8F FFE6     	movff	plusw1,postinc1
 27803  018A38  ECAA  F0DD         	call	___flsub	;wreg free
 27804  018A3C  0060  F007  FFE6   	movff	btemp,postinc1
 27805  018A42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27806  018A48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27807  018A4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27808  018A54  EC20  F09F         	call	___flmul	;wreg free
 27809  018A58  0060  F007  FFE6   	movff	btemp,postinc1
 27810  018A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27811  018A64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27812  018A6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27813  018A70  EC35  F0A3         	call	___fladd	;wreg free
 27814                           
 27815                           ;stkvar	_bn @ sp[(-4)+-5]
 27816  018A74  0EF7               	movlw	-9
 27817  018A76  50E3               	movf	plusw1,w,c
 27818  018A78  0D04               	mullw	4
 27819  018A7A  0E00               	movlw	low lp_filter@smooth
 27820  018A7C  24F3               	addwf	243,w,c
 27821  018A7E  6ED9               	movwf	fsr2l,c
 27822  018A80  0E02               	movlw	high lp_filter@smooth
 27823  018A82  20F4               	addwfc	prodh,w,c
 27824  018A84  6EDA               	movwf	fsr2h,c
 27825  018A86  0060  F007  FFDE   	movff	btemp,postinc2
 27826  018A8C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27827  018A92  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27828  018A98  0060  F013  FFDD   	movff	btemp+3,postdec2
 27829  018A9E  52DD               	movf	postdec2,f,c
 27830  018AA0  52DD               	movf	postdec2,f,c
 27831  018AA2  006F FF78  F001    	movff	postinc2,btemp
 27832  018AA8  006F FF78  F002    	movff	postinc2,btemp+1
 27833  018AAE  006F FF78  F003    	movff	postinc2,btemp+2
 27834  018AB4  006F FF78  F004    	movff	postinc2,btemp+3
 27835  018ABA                     l1938:
 27836                           
 27837                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27838  018ABA  0EF6               	movlw	246
 27839  018ABC  26E1               	addwf	fsr1l,f,c
 27840  018ABE  0EFF               	movlw	255
 27841  018AC0  22E2               	addwfc	fsr1h,f,c
 27842  018AC2  0012               	return		;funcret
 27843  018AC4                     __end_of_lp_filter:
 27844                           	opt callstack 0
 27845                           
 27846 ;; *************** function ___flsub *****************
 27847 ;; Defined at:
 27848 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27849 ;; Parameters:    Size  Location     Type
 27850 ;;  b               4  [STACK] float 
 27851 ;;  a               4  [STACK] float 
 27852 ;; Auto vars:     Size  Location     Type
 27853 ;;		None
 27854 ;; Return value:  Size  Location     Type
 27855 ;;                  4  [STACK] float 
 27856 ;; Registers used:
 27857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27858 ;; Tracked objects:
 27859 ;;		On entry : 0/0
 27860 ;;		On exit  : 0/0
 27861 ;;		Unchanged: 0/0
 27862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27867 ;;Total ram usage:        0 bytes
 27868 ;; Hardware stack levels used:    1
 27869 ;; Hardware stack levels required when called:   16
 27870 ;; This function calls:
 27871 ;;		___fladd
 27872 ;; This function is called by:
 27873 ;;		_conv_raw_result
 27874 ;;		_lp_filter
 27875 ;;		_calc_model_data
 27876 ;;		_calc_ror_data
 27877 ;;		_esr_check
 27878 ;;		_efgtoa
 27879 ;; This function uses a reentrant model
 27880 ;;
 27881                           
 27882                           	psect	text112
 27883  01BB54                     __ptext112:
 27884                           	opt callstack 0
 27885  01BB54                     ___flsub:
 27886                           	opt callstack 0
 27887                           
 27888                           ;stkvar	_a @ sp[(0)+-8]
 27889                           
 27890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27891                           ;incstack = 0
 27892 ;; hardware stack exceeded
 27893  01BB54  0EFB               	movlw	-5
 27894  01BB56  7EE3               	btg	plusw1,7,c
 27895                           
 27896                           ;stkvar	_a @ sp[(0)+-8]
 27897  01BB58  0EF8               	movlw	-8
 27898  01BB5A  006F FF8F FFE6     	movff	plusw1,postinc1
 27899  01BB60  006F FF8F FFE6     	movff	plusw1,postinc1
 27900  01BB66  006F FF8F FFE6     	movff	plusw1,postinc1
 27901  01BB6C  006F FF8F FFE6     	movff	plusw1,postinc1
 27902                           
 27903                           ;stkvar	_b @ sp[(-4)+-4]
 27904  01BB72  0EF8               	movlw	-8
 27905  01BB74  006F FF8F FFE6     	movff	plusw1,postinc1
 27906  01BB7A  006F FF8F FFE6     	movff	plusw1,postinc1
 27907  01BB80  006F FF8F FFE6     	movff	plusw1,postinc1
 27908  01BB86  006F FF8F FFE6     	movff	plusw1,postinc1
 27909  01BB8C  EC35  F0A3         	call	___fladd	;wreg free
 27910                           
 27911                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27912  01BB90  0EF8               	movlw	248
 27913  01BB92  26E1               	addwf	fsr1l,f,c
 27914  01BB94  0EFF               	movlw	255
 27915  01BB96  22E2               	addwfc	fsr1h,f,c
 27916  01BB98  0012               	return		;funcret
 27917  01BB9A                     __end_of___flsub:
 27918                           	opt callstack 0
 27919                           
 27920 ;; *************** function ___fladd *****************
 27921 ;; Defined at:
 27922 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27923 ;; Parameters:    Size  Location     Type
 27924 ;;  b               4  [STACK] float 
 27925 ;;  a               4  [STACK] float 
 27926 ;; Auto vars:     Size  Location     Type
 27927 ;;  grs             1  [STACK] unsigned char 
 27928 ;;  bexp            1  [STACK] unsigned char 
 27929 ;;  aexp            1  [STACK] unsigned char 
 27930 ;;  signs           1  [STACK] unsigned char 
 27931 ;; Return value:  Size  Location     Type
 27932 ;;                  4  [STACK] unsigned char 
 27933 ;; Registers used:
 27934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27935 ;; Tracked objects:
 27936 ;;		On entry : 0/0
 27937 ;;		On exit  : 0/0
 27938 ;;		Unchanged: 0/0
 27939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27944 ;;Total ram usage:        0 bytes
 27945 ;; Hardware stack levels used:    1
 27946 ;; Hardware stack levels required when called:   15
 27947 ;; This function calls:
 27948 ;;		Nothing
 27949 ;; This function is called by:
 27950 ;;		_main
 27951 ;;		_lp_filter
 27952 ;;		_calc_model_data
 27953 ;;		_efgtoa
 27954 ;;		___asfladd
 27955 ;;		___flsub
 27956 ;; This function uses a reentrant model
 27957 ;;
 27958                           
 27959                           	psect	text113
 27960  01466A                     __ptext113:
 27961                           	opt callstack 0
 27962  01466A                     ___fladd:
 27963                           	opt callstack 0
 27964                           
 27965                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27966  01466A  52E6               	movf	postinc1,f,c
 27967  01466C  52E6               	movf	postinc1,f,c
 27968  01466E  52E6               	movf	postinc1,f,c
 27969  014670  52E6               	movf	postinc1,f,c
 27970                           
 27971                           ;stkvar	_b @ sp[(-4)+-4]
 27972                           
 27973                           ;incstack = 0
 27974 ;; hardware stack exceeded
 27975  014672  0EFB               	movlw	251
 27976  014674  24E1               	addwf	fsr1l,w,c
 27977  014676  6ED9               	movwf	fsr2l,c
 27978  014678  0EFF               	movlw	255
 27979  01467A  20E2               	addwfc	fsr1h,w,c
 27980  01467C  6EDA               	movwf	fsr2h,c
 27981  01467E  50DF               	movf	indf2,w,c
 27982  014680  6E0C               	movwf	(btemp+11)^0,c
 27983  014682  0E80               	movlw	128
 27984  014684  160C               	andwf	(btemp+11)^0,f,c
 27985                           
 27986                           ;stkvar	_signs @ sp[(-4)+3]
 27987  014686  0EFF               	movlw	-1
 27988  014688  0060  F033  FFE3   	movff	btemp+11,plusw1
 27989                           
 27990                           ;stkvar	_b @ sp[(-4)+-4]
 27991  01468E  0EFB               	movlw	251
 27992  014690  24E1               	addwf	fsr1l,w,c
 27993  014692  6ED9               	movwf	fsr2l,c
 27994  014694  0EFF               	movlw	255
 27995  014696  20E2               	addwfc	fsr1h,w,c
 27996  014698  6EDA               	movwf	fsr2h,c
 27997  01469A  50DF               	movf	indf2,w,c
 27998  01469C  6E0C               	movwf	(btemp+11)^0,c
 27999  01469E  90D8               	bcf	status,0,c
 28000  0146A0  340C               	rlcf	(btemp+11)^0,w,c
 28001  0146A2  6E0B               	movwf	(btemp+10)^0,c
 28002                           
 28003                           ;stkvar	_bexp @ sp[(-4)+1]
 28004  0146A4  0EFD               	movlw	-3
 28005  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28006                           
 28007                           ;stkvar	_b @ sp[(-4)+-4]
 28008  0146AC  0EFA               	movlw	250
 28009  0146AE  24E1               	addwf	fsr1l,w,c
 28010  0146B0  6ED9               	movwf	fsr2l,c
 28011  0146B2  0EFF               	movlw	255
 28012  0146B4  20E2               	addwfc	fsr1h,w,c
 28013  0146B6  6EDA               	movwf	fsr2h,c
 28014  0146B8  AEDF               	btfss	indf2,7,c
 28015  0146BA  D002               	goto	l7962
 28016                           
 28017                           ;stkvar	_bexp @ sp[(-4)+1]
 28018  0146BC  0EFD               	movlw	-3
 28019  0146BE  80E3               	bsf	plusw1,0,c
 28020  0146C0                     l7962:
 28021                           
 28022                           ;stkvar	_bexp @ sp[(-4)+1]
 28023  0146C0  0EFD               	movlw	-3
 28024  0146C2  50E3               	movf	plusw1,w,c
 28025  0146C4  B4D8               	btfsc	status,2,c
 28026  0146C6  D027               	goto	l7972
 28027                           
 28028                           ;stkvar	_bexp @ sp[(-4)+1]
 28029  0146C8  0EFD               	movlw	-3
 28030  0146CA  28E3               	incf	plusw1,w,c
 28031  0146CC  A4D8               	btfss	status,2,c
 28032  0146CE  D018               	goto	l7968
 28033  0146D0  0E00               	movlw	0
 28034  0146D2  6E09               	movwf	(btemp+8)^0,c
 28035  0146D4  0E00               	movlw	0
 28036  0146D6  6E0A               	movwf	(btemp+9)^0,c
 28037  0146D8  0E00               	movlw	0
 28038  0146DA  6E0B               	movwf	(btemp+10)^0,c
 28039  0146DC  0E00               	movlw	0
 28040  0146DE  6E0C               	movwf	(btemp+11)^0,c
 28041                           
 28042                           ;stkvar	_b @ sp[(-4)+-4]
 28043  0146E0  0EF8               	movlw	-8
 28044  0146E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28045  0146E8  0EF9               	movlw	-7
 28046  0146EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28047  0146F0  0EFA               	movlw	-6
 28048  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28049  0146F8  0EFB               	movlw	-5
 28050  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28051  014700                     l7968:
 28052                           
 28053                           ;stkvar	_b @ sp[(-4)+-4]
 28054  014700  0EFA               	movlw	-6
 28055  014702  8EE3               	bsf	plusw1,7,c
 28056                           
 28057                           ;stkvar	_b @ sp[(-4)+-4]
 28058  014704  0EFB               	movlw	251
 28059  014706  24E1               	addwf	fsr1l,w,c
 28060  014708  6ED9               	movwf	fsr2l,c
 28061  01470A  0EFF               	movlw	255
 28062  01470C  20E2               	addwfc	fsr1h,w,c
 28063  01470E  6EDA               	movwf	fsr2h,c
 28064  014710  0E00               	movlw	0
 28065  014712  6EDF               	movwf	indf2,c
 28066  014714  D018               	goto	l7974
 28067  014716                     l7972:
 28068  014716  0E00               	movlw	0
 28069  014718  6E09               	movwf	(btemp+8)^0,c
 28070  01471A  0E00               	movlw	0
 28071  01471C  6E0A               	movwf	(btemp+9)^0,c
 28072  01471E  0E00               	movlw	0
 28073  014720  6E0B               	movwf	(btemp+10)^0,c
 28074  014722  0E00               	movlw	0
 28075  014724  6E0C               	movwf	(btemp+11)^0,c
 28076                           
 28077                           ;stkvar	_b @ sp[(-4)+-4]
 28078  014726  0EF8               	movlw	-8
 28079  014728  0060  F027  FFE3   	movff	btemp+8,plusw1
 28080  01472E  0EF9               	movlw	-7
 28081  014730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28082  014736  0EFA               	movlw	-6
 28083  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28084  01473E  0EFB               	movlw	-5
 28085  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 28086  014746                     l7974:
 28087                           
 28088                           ;stkvar	_a @ sp[(-4)+-8]
 28089  014746  0EF7               	movlw	247
 28090  014748  24E1               	addwf	fsr1l,w,c
 28091  01474A  6ED9               	movwf	fsr2l,c
 28092  01474C  0EFF               	movlw	255
 28093  01474E  20E2               	addwfc	fsr1h,w,c
 28094  014750  6EDA               	movwf	fsr2h,c
 28095  014752  50DF               	movf	indf2,w,c
 28096  014754  6E0C               	movwf	(btemp+11)^0,c
 28097  014756  0E80               	movlw	128
 28098  014758  160C               	andwf	(btemp+11)^0,f,c
 28099                           
 28100                           ;stkvar	_aexp @ sp[(-4)+2]
 28101  01475A  0EFE               	movlw	-2
 28102  01475C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28103                           
 28104                           ;stkvar	_signs @ sp[(-4)+3]
 28105                           ;stkvar	_aexp @ sp[(-4)+2]
 28106  014762  50E1               	movf	fsr1l,w,c
 28107  014764  0FFE               	addlw	-2
 28108  014766  6ED9               	movwf	fsr2l,c
 28109  014768  50E2               	movf	fsr1h,w,c
 28110  01476A  6EDA               	movwf	fsr2h,c
 28111  01476C  0EFF               	movlw	255
 28112  01476E  22DA               	addwfc	fsr2h,f,c
 28113  014770  0EFF               	movlw	-1
 28114  014772  50E3               	movf	plusw1,w,c
 28115  014774  18DE               	xorwf	postinc2,w,c
 28116  014776  B4D8               	btfsc	status,2,c
 28117  014778  D002               	goto	l7980
 28118                           
 28119                           ;stkvar	_signs @ sp[(-4)+3]
 28120  01477A  0EFF               	movlw	-1
 28121  01477C  8CE3               	bsf	plusw1,6,c
 28122  01477E                     l7980:
 28123                           
 28124                           ;stkvar	_a @ sp[(-4)+-8]
 28125  01477E  0EF7               	movlw	247
 28126  014780  24E1               	addwf	fsr1l,w,c
 28127  014782  6ED9               	movwf	fsr2l,c
 28128  014784  0EFF               	movlw	255
 28129  014786  20E2               	addwfc	fsr1h,w,c
 28130  014788  6EDA               	movwf	fsr2h,c
 28131  01478A  50DF               	movf	indf2,w,c
 28132  01478C  6E0C               	movwf	(btemp+11)^0,c
 28133  01478E  90D8               	bcf	status,0,c
 28134  014790  340C               	rlcf	(btemp+11)^0,w,c
 28135  014792  6E0B               	movwf	(btemp+10)^0,c
 28136                           
 28137                           ;stkvar	_aexp @ sp[(-4)+2]
 28138  014794  0EFE               	movlw	-2
 28139  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28140                           
 28141                           ;stkvar	_a @ sp[(-4)+-8]
 28142  01479C  0EF6               	movlw	246
 28143  01479E  24E1               	addwf	fsr1l,w,c
 28144  0147A0  6ED9               	movwf	fsr2l,c
 28145  0147A2  0EFF               	movlw	255
 28146  0147A4  20E2               	addwfc	fsr1h,w,c
 28147  0147A6  6EDA               	movwf	fsr2h,c
 28148  0147A8  AEDF               	btfss	indf2,7,c
 28149  0147AA  D002               	goto	l7986
 28150                           
 28151                           ;stkvar	_aexp @ sp[(-4)+2]
 28152  0147AC  0EFE               	movlw	-2
 28153  0147AE  80E3               	bsf	plusw1,0,c
 28154  0147B0                     l7986:
 28155                           
 28156                           ;stkvar	_aexp @ sp[(-4)+2]
 28157  0147B0  0EFE               	movlw	-2
 28158  0147B2  50E3               	movf	plusw1,w,c
 28159  0147B4  B4D8               	btfsc	status,2,c
 28160  0147B6  D027               	goto	l7996
 28161                           
 28162                           ;stkvar	_aexp @ sp[(-4)+2]
 28163  0147B8  0EFE               	movlw	-2
 28164  0147BA  28E3               	incf	plusw1,w,c
 28165  0147BC  A4D8               	btfss	status,2,c
 28166  0147BE  D018               	goto	l7992
 28167  0147C0  0E00               	movlw	0
 28168  0147C2  6E09               	movwf	(btemp+8)^0,c
 28169  0147C4  0E00               	movlw	0
 28170  0147C6  6E0A               	movwf	(btemp+9)^0,c
 28171  0147C8  0E00               	movlw	0
 28172  0147CA  6E0B               	movwf	(btemp+10)^0,c
 28173  0147CC  0E00               	movlw	0
 28174  0147CE  6E0C               	movwf	(btemp+11)^0,c
 28175                           
 28176                           ;stkvar	_a @ sp[(-4)+-8]
 28177  0147D0  0EF4               	movlw	-12
 28178  0147D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28179  0147D8  0EF5               	movlw	-11
 28180  0147DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28181  0147E0  0EF6               	movlw	-10
 28182  0147E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28183  0147E8  0EF7               	movlw	-9
 28184  0147EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28185  0147F0                     l7992:
 28186                           
 28187                           ;stkvar	_a @ sp[(-4)+-8]
 28188  0147F0  0EF6               	movlw	-10
 28189  0147F2  8EE3               	bsf	plusw1,7,c
 28190                           
 28191                           ;stkvar	_a @ sp[(-4)+-8]
 28192  0147F4  0EF7               	movlw	247
 28193  0147F6  24E1               	addwf	fsr1l,w,c
 28194  0147F8  6ED9               	movwf	fsr2l,c
 28195  0147FA  0EFF               	movlw	255
 28196  0147FC  20E2               	addwfc	fsr1h,w,c
 28197  0147FE  6EDA               	movwf	fsr2h,c
 28198  014800  0E00               	movlw	0
 28199  014802  6EDF               	movwf	indf2,c
 28200  014804  D018               	goto	l7998
 28201  014806                     l7996:
 28202  014806  0E00               	movlw	0
 28203  014808  6E09               	movwf	(btemp+8)^0,c
 28204  01480A  0E00               	movlw	0
 28205  01480C  6E0A               	movwf	(btemp+9)^0,c
 28206  01480E  0E00               	movlw	0
 28207  014810  6E0B               	movwf	(btemp+10)^0,c
 28208  014812  0E00               	movlw	0
 28209  014814  6E0C               	movwf	(btemp+11)^0,c
 28210                           
 28211                           ;stkvar	_a @ sp[(-4)+-8]
 28212  014816  0EF4               	movlw	-12
 28213  014818  0060  F027  FFE3   	movff	btemp+8,plusw1
 28214  01481E  0EF5               	movlw	-11
 28215  014820  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28216  014826  0EF6               	movlw	-10
 28217  014828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28218  01482E  0EF7               	movlw	-9
 28219  014830  0060  F033  FFE3   	movff	btemp+11,plusw1
 28220  014836                     l7998:
 28221                           
 28222                           ;stkvar	_bexp @ sp[(-4)+1]
 28223                           ;stkvar	_aexp @ sp[(-4)+2]
 28224  014836  50E1               	movf	fsr1l,w,c
 28225  014838  0FFE               	addlw	-2
 28226  01483A  6ED9               	movwf	fsr2l,c
 28227  01483C  50E2               	movf	fsr1h,w,c
 28228  01483E  6EDA               	movwf	fsr2h,c
 28229  014840  0EFF               	movlw	255
 28230  014842  22DA               	addwfc	fsr2h,f,c
 28231  014844  0EFD               	movlw	-3
 28232  014846  50E3               	movf	plusw1,w,c
 28233  014848  5CDE               	subwf	postinc2,w,c
 28234  01484A  B0D8               	btfsc	status,0,c
 28235  01484C  D0A4               	goto	l8034
 28236                           
 28237                           ;stkvar	_signs @ sp[(-4)+3]
 28238  01484E  0EFF               	movlw	-1
 28239  014850  ACE3               	btfss	plusw1,6,c
 28240  014852  D002               	goto	l8004
 28241                           
 28242                           ;stkvar	_signs @ sp[(-4)+3]
 28243  014854  0EFF               	movlw	-1
 28244  014856  7EE3               	btg	plusw1,7,c
 28245  014858                     l8004:
 28246                           
 28247                           ;stkvar	_bexp @ sp[(-4)+1]
 28248                           ;stkvar	_grs @ sp[(-4)+0]
 28249  014858  0EFD               	movlw	-3
 28250  01485A  006F FF8C  F001    	movff	plusw1,btemp
 28251  014860  0EFC               	movlw	-4
 28252  014862  0060  F007  FFE3   	movff	btemp,plusw1
 28253                           
 28254                           ;stkvar	_aexp @ sp[(-4)+2]
 28255                           ;stkvar	_bexp @ sp[(-4)+1]
 28256  014868  0EFE               	movlw	-2
 28257  01486A  006F FF8C  F001    	movff	plusw1,btemp
 28258  014870  0EFD               	movlw	-3
 28259  014872  0060  F007  FFE3   	movff	btemp,plusw1
 28260                           
 28261                           ;stkvar	_grs @ sp[(-4)+0]
 28262                           ;stkvar	_aexp @ sp[(-4)+2]
 28263  014878  0EFC               	movlw	-4
 28264  01487A  006F FF8C  F001    	movff	plusw1,btemp
 28265  014880  0EFE               	movlw	-2
 28266  014882  0060  F007  FFE3   	movff	btemp,plusw1
 28267                           
 28268                           ;stkvar	_b @ sp[(-4)+-4]
 28269                           ;stkvar	_grs @ sp[(-4)+0]
 28270  014888  0EF8               	movlw	-8
 28271  01488A  006F FF8C  F001    	movff	plusw1,btemp
 28272  014890  0EFC               	movlw	-4
 28273  014892  0060  F007  FFE3   	movff	btemp,plusw1
 28274                           
 28275                           ;stkvar	_a @ sp[(-4)+-8]
 28276                           ;stkvar	_b @ sp[(-4)+-4]
 28277  014898  0EF4               	movlw	-12
 28278  01489A  006F FF8C  F001    	movff	plusw1,btemp
 28279  0148A0  0EF8               	movlw	-8
 28280  0148A2  0060  F007  FFE3   	movff	btemp,plusw1
 28281                           
 28282                           ;stkvar	_grs @ sp[(-4)+0]
 28283                           ;stkvar	_a @ sp[(-4)+-8]
 28284  0148A8  0EFC               	movlw	-4
 28285  0148AA  006F FF8C  F001    	movff	plusw1,btemp
 28286  0148B0  0EF4               	movlw	-12
 28287  0148B2  0060  F007  FFE3   	movff	btemp,plusw1
 28288                           
 28289                           ;stkvar	_b @ sp[(-4)+-4]
 28290  0148B8  0EF9               	movlw	249
 28291  0148BA  24E1               	addwf	fsr1l,w,c
 28292  0148BC  6ED9               	movwf	fsr2l,c
 28293  0148BE  0EFF               	movlw	255
 28294  0148C0  20E2               	addwfc	fsr1h,w,c
 28295  0148C2  6EDA               	movwf	fsr2h,c
 28296  0148C4  50DF               	movf	indf2,w,c
 28297  0148C6  6E0C               	movwf	(btemp+11)^0,c
 28298                           
 28299                           ;stkvar	_grs @ sp[(-4)+0]
 28300  0148C8  0EFC               	movlw	-4
 28301  0148CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28302                           
 28303                           ;stkvar	_a @ sp[(-4)+-8]
 28304  0148D0  0EF5               	movlw	245
 28305  0148D2  24E1               	addwf	fsr1l,w,c
 28306  0148D4  6ED9               	movwf	fsr2l,c
 28307  0148D6  0EFF               	movlw	255
 28308  0148D8  20E2               	addwfc	fsr1h,w,c
 28309  0148DA  6EDA               	movwf	fsr2h,c
 28310                           
 28311                           ;stkvar	_b @ sp[(-4)+-4]
 28312  0148DC  0EF9               	movlw	249
 28313  0148DE  24E1               	addwf	fsr1l,w,c
 28314  0148E0  6EE9               	movwf	fsr0l,c
 28315  0148E2  0EFF               	movlw	255
 28316  0148E4  20E2               	addwfc	fsr1h,w,c
 28317  0148E6  6EEA               	movwf	fsr0h,c
 28318  0148E8  006F FF7F FFEF     	movff	indf2,indf0
 28319                           
 28320                           ;stkvar	_grs @ sp[(-4)+0]
 28321                           ;stkvar	_a @ sp[(-4)+-8]
 28322  0148EE  0EF5               	movlw	245
 28323  0148F0  24E1               	addwf	fsr1l,w,c
 28324  0148F2  6ED9               	movwf	fsr2l,c
 28325  0148F4  0EFF               	movlw	255
 28326  0148F6  20E2               	addwfc	fsr1h,w,c
 28327  0148F8  6EDA               	movwf	fsr2h,c
 28328  0148FA  0EFC               	movlw	-4
 28329  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
 28330                           
 28331                           ;stkvar	_b @ sp[(-4)+-4]
 28332  014902  0EFA               	movlw	250
 28333  014904  24E1               	addwf	fsr1l,w,c
 28334  014906  6ED9               	movwf	fsr2l,c
 28335  014908  0EFF               	movlw	255
 28336  01490A  20E2               	addwfc	fsr1h,w,c
 28337  01490C  6EDA               	movwf	fsr2h,c
 28338  01490E  50DF               	movf	indf2,w,c
 28339  014910  6E0C               	movwf	(btemp+11)^0,c
 28340                           
 28341                           ;stkvar	_grs @ sp[(-4)+0]
 28342  014912  0EFC               	movlw	-4
 28343  014914  0060  F033  FFE3   	movff	btemp+11,plusw1
 28344                           
 28345                           ;stkvar	_a @ sp[(-4)+-8]
 28346  01491A  0EF6               	movlw	246
 28347  01491C  24E1               	addwf	fsr1l,w,c
 28348  01491E  6ED9               	movwf	fsr2l,c
 28349  014920  0EFF               	movlw	255
 28350  014922  20E2               	addwfc	fsr1h,w,c
 28351  014924  6EDA               	movwf	fsr2h,c
 28352                           
 28353                           ;stkvar	_b @ sp[(-4)+-4]
 28354  014926  0EFA               	movlw	250
 28355  014928  24E1               	addwf	fsr1l,w,c
 28356  01492A  6EE9               	movwf	fsr0l,c
 28357  01492C  0EFF               	movlw	255
 28358  01492E  20E2               	addwfc	fsr1h,w,c
 28359  014930  6EEA               	movwf	fsr0h,c
 28360  014932  006F FF7F FFEF     	movff	indf2,indf0
 28361                           
 28362                           ;stkvar	_grs @ sp[(-4)+0]
 28363                           ;stkvar	_a @ sp[(-4)+-8]
 28364  014938  0EF6               	movlw	246
 28365  01493A  24E1               	addwf	fsr1l,w,c
 28366  01493C  6ED9               	movwf	fsr2l,c
 28367  01493E  0EFF               	movlw	255
 28368  014940  20E2               	addwfc	fsr1h,w,c
 28369  014942  6EDA               	movwf	fsr2h,c
 28370  014944  0EFC               	movlw	-4
 28371  014946  006F FF8F FFDF     	movff	plusw1,indf2
 28372                           
 28373                           ;stkvar	_b @ sp[(-4)+-4]
 28374  01494C  0EFB               	movlw	251
 28375  01494E  24E1               	addwf	fsr1l,w,c
 28376  014950  6ED9               	movwf	fsr2l,c
 28377  014952  0EFF               	movlw	255
 28378  014954  20E2               	addwfc	fsr1h,w,c
 28379  014956  6EDA               	movwf	fsr2h,c
 28380  014958  50DF               	movf	indf2,w,c
 28381  01495A  6E0C               	movwf	(btemp+11)^0,c
 28382                           
 28383                           ;stkvar	_grs @ sp[(-4)+0]
 28384  01495C  0EFC               	movlw	-4
 28385  01495E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28386                           
 28387                           ;stkvar	_a @ sp[(-4)+-8]
 28388  014964  0EF7               	movlw	247
 28389  014966  24E1               	addwf	fsr1l,w,c
 28390  014968  6ED9               	movwf	fsr2l,c
 28391  01496A  0EFF               	movlw	255
 28392  01496C  20E2               	addwfc	fsr1h,w,c
 28393  01496E  6EDA               	movwf	fsr2h,c
 28394                           
 28395                           ;stkvar	_b @ sp[(-4)+-4]
 28396  014970  0EFB               	movlw	251
 28397  014972  24E1               	addwf	fsr1l,w,c
 28398  014974  6EE9               	movwf	fsr0l,c
 28399  014976  0EFF               	movlw	255
 28400  014978  20E2               	addwfc	fsr1h,w,c
 28401  01497A  6EEA               	movwf	fsr0h,c
 28402  01497C  006F FF7F FFEF     	movff	indf2,indf0
 28403                           
 28404                           ;stkvar	_grs @ sp[(-4)+0]
 28405                           ;stkvar	_a @ sp[(-4)+-8]
 28406  014982  0EF7               	movlw	247
 28407  014984  24E1               	addwf	fsr1l,w,c
 28408  014986  6ED9               	movwf	fsr2l,c
 28409  014988  0EFF               	movlw	255
 28410  01498A  20E2               	addwfc	fsr1h,w,c
 28411  01498C  6EDA               	movwf	fsr2h,c
 28412  01498E  0EFC               	movlw	-4
 28413  014990  006F FF8F FFDF     	movff	plusw1,indf2
 28414  014996                     l8034:
 28415                           
 28416                           ;stkvar	_grs @ sp[(-4)+0]
 28417  014996  0EFC               	movlw	-4
 28418  014998  6AE3               	clrf	plusw1,c
 28419                           
 28420                           ;stkvar	_aexp @ sp[(-4)+2]
 28421  01499A  0EFE               	movlw	-2
 28422  01499C  50E3               	movf	plusw1,w,c
 28423  01499E  6E0B               	movwf	(btemp+10)^0,c
 28424  0149A0  6A0C               	clrf	(btemp+11)^0,c
 28425                           
 28426                           ;stkvar	_bexp @ sp[(-4)+1]
 28427  0149A2  0EFD               	movlw	-3
 28428  0149A4  50E3               	movf	plusw1,w,c
 28429  0149A6  5E0B               	subwf	(btemp+10)^0,f,c
 28430  0149A8  0E00               	movlw	0
 28431  0149AA  5A0C               	subwfb	(btemp+11)^0,f,c
 28432  0149AC  BE0C               	btfsc	(btemp+11)^0,7,c
 28433  0149AE  D062               	goto	l8058
 28434  0149B0  500C               	movf	(btemp+11)^0,w,c
 28435  0149B2  E104               	bnz	u5700
 28436  0149B4  0E1A               	movlw	26
 28437  0149B6  5C0B               	subwf	(btemp+10)^0,w,c
 28438  0149B8  A0D8               	btfss	status,0,c
 28439  0149BA  D05C               	goto	l8058
 28440  0149BC                     u5700:
 28441                           
 28442                           ;stkvar	_b @ sp[(-4)+-4]
 28443  0149BC  0EF8               	movlw	-8
 28444  0149BE  50E3               	movf	plusw1,w,c
 28445  0149C0  E10A               	bnz	u5711
 28446  0149C2  0EF9               	movlw	-7
 28447  0149C4  50E3               	movf	plusw1,w,c
 28448  0149C6  E107               	bnz	u5711
 28449  0149C8  0EFA               	movlw	-6
 28450  0149CA  50E3               	movf	plusw1,w,c
 28451  0149CC  E104               	bnz	u5711
 28452  0149CE  0EFB               	movlw	-5
 28453  0149D0  50E3               	movf	plusw1,w,c
 28454  0149D2  B4D8               	btfsc	status,2,c
 28455  0149D4  D003               	goto	u5710
 28456  0149D6                     u5711:
 28457  0149D6  6A0C               	clrf	(btemp+11)^0,c
 28458  0149D8  2A0C               	incf	(btemp+11)^0,f,c
 28459  0149DA  D001               	goto	u5728
 28460  0149DC                     u5710:
 28461  0149DC  6A0C               	clrf	(btemp+11)^0,c
 28462  0149DE                     u5728:
 28463                           
 28464                           ;stkvar	_grs @ sp[(-4)+0]
 28465  0149DE  0EFC               	movlw	-4
 28466  0149E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28467                           
 28468                           ;stkvar	_b @ sp[(-4)+-4]
 28469  0149E6  0EF8               	movlw	-8
 28470  0149E8  6AE3               	clrf	plusw1,c
 28471  0149EA  0EF9               	movlw	-7
 28472  0149EC  6AE3               	clrf	plusw1,c
 28473  0149EE  0EFA               	movlw	-6
 28474  0149F0  6AE3               	clrf	plusw1,c
 28475  0149F2  0EFB               	movlw	-5
 28476  0149F4  6AE3               	clrf	plusw1,c
 28477                           
 28478                           ;stkvar	_aexp @ sp[(-4)+2]
 28479                           ;stkvar	_bexp @ sp[(-4)+1]
 28480  0149F6  0EFE               	movlw	-2
 28481  0149F8  006F FF8C  F001    	movff	plusw1,btemp
 28482  0149FE  0EFD               	movlw	-3
 28483  014A00  0060  F007  FFE3   	movff	btemp,plusw1
 28484  014A06  D042               	goto	u5760
 28485  014A08                     l8044:
 28486                           
 28487                           ;stkvar	_grs @ sp[(-4)+0]
 28488  014A08  0EFC               	movlw	-4
 28489  014A0A  A0E3               	btfss	plusw1,0,c
 28490  014A0C  D00D               	goto	l8048
 28491                           
 28492                           ;stkvar	_grs @ sp[(-4)+0]
 28493  014A0E  0EFC               	movlw	-4
 28494  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 28495  014A16  90D8               	bcf	status,0,c
 28496  014A18  320C               	rrcf	(btemp+11)^0,f,c
 28497  014A1A  0E01               	movlw	1
 28498  014A1C  120C               	iorwf	(btemp+11)^0,f,c
 28499                           
 28500                           ;stkvar	_grs @ sp[(-4)+0]
 28501  014A1E  0EFC               	movlw	-4
 28502  014A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 28503  014A26  D009               	goto	l8050
 28504  014A28                     l8048:
 28505                           
 28506                           ;stkvar	_grs @ sp[(-4)+0]
 28507  014A28  50E1               	movf	fsr1l,w,c
 28508  014A2A  0FFC               	addlw	-4
 28509  014A2C  6ED9               	movwf	fsr2l,c
 28510  014A2E  50E2               	movf	fsr1h,w,c
 28511  014A30  6EDA               	movwf	fsr2h,c
 28512  014A32  0EFF               	movlw	255
 28513  014A34  22DA               	addwfc	fsr2h,f,c
 28514  014A36  90D8               	bcf	status,0,c
 28515  014A38  32DF               	rrcf	indf2,f,c
 28516  014A3A                     l8050:
 28517                           
 28518                           ;stkvar	_b @ sp[(-4)+-4]
 28519  014A3A  0EF8               	movlw	-8
 28520  014A3C  A0E3               	btfss	plusw1,0,c
 28521  014A3E  D002               	goto	l8054
 28522                           
 28523                           ;stkvar	_grs @ sp[(-4)+0]
 28524  014A40  0EFC               	movlw	-4
 28525  014A42  8EE3               	bsf	plusw1,7,c
 28526  014A44                     l8054:
 28527  014A44  0E01               	movlw	1
 28528  014A46  6E0C               	movwf	(btemp+11)^0,c
 28529                           
 28530                           ;stkvar	_b @ sp[(-4)+-4]
 28531  014A48  50E1               	movf	fsr1l,w,c
 28532  014A4A  0FF8               	addlw	-8
 28533  014A4C  6ED9               	movwf	fsr2l,c
 28534  014A4E  50E2               	movf	fsr1h,w,c
 28535  014A50  6EDA               	movwf	fsr2h,c
 28536  014A52  0EFF               	movlw	255
 28537  014A54  22DA               	addwfc	fsr2h,f,c
 28538  014A56  280C               	incf	(btemp+11)^0,w,c
 28539  014A58  52DE               	movf	postinc2,f,c
 28540  014A5A  D008               	goto	u5750
 28541  014A5C                     u5755:
 28542  014A5C  52DE               	movf	postinc2,f,c
 28543  014A5E  90D8               	bcf	status,0,c
 28544  014A60  BEDC               	btfsc	preinc2,7,c
 28545  014A62  80D8               	bsf	status,0,c
 28546  014A64  32DD               	rrcf	postdec2,f,c
 28547  014A66  32DD               	rrcf	postdec2,f,c
 28548  014A68  32DD               	rrcf	postdec2,f,c
 28549  014A6A  32DE               	rrcf	postinc2,f,c
 28550  014A6C                     u5750:
 28551  014A6C  2EE8               	decfsz	wreg,f,c
 28552  014A6E  D7F6               	goto	u5755
 28553                           
 28554                           ;stkvar	_bexp @ sp[(-4)+1]
 28555  014A70  0EFD               	movlw	-3
 28556  014A72  2AE3               	incf	plusw1,f,c
 28557  014A74                     l8058:
 28558                           
 28559                           ;stkvar	_aexp @ sp[(-4)+2]
 28560                           ;stkvar	_bexp @ sp[(-4)+1]
 28561  014A74  50E1               	movf	fsr1l,w,c
 28562  014A76  0FFD               	addlw	-3
 28563  014A78  6ED9               	movwf	fsr2l,c
 28564  014A7A  50E2               	movf	fsr1h,w,c
 28565  014A7C  6EDA               	movwf	fsr2h,c
 28566  014A7E  0EFF               	movlw	255
 28567  014A80  22DA               	addwfc	fsr2h,f,c
 28568  014A82  0EFE               	movlw	-2
 28569  014A84  50E3               	movf	plusw1,w,c
 28570  014A86  5CDE               	subwf	postinc2,w,c
 28571  014A88  A0D8               	btfss	status,0,c
 28572  014A8A  D7BE               	goto	l8044
 28573  014A8C                     u5760:
 28574                           
 28575                           ;stkvar	_signs @ sp[(-4)+3]
 28576  014A8C  0EFF               	movlw	-1
 28577  014A8E  BCE3               	btfsc	plusw1,6,c
 28578  014A90  D066               	goto	l8086
 28579                           
 28580                           ;stkvar	_bexp @ sp[(-4)+1]
 28581  014A92  0EFD               	movlw	-3
 28582  014A94  50E3               	movf	plusw1,w,c
 28583  014A96  B4D8               	btfsc	status,2,c
 28584  014A98  D0F2               	goto	u5860
 28585                           
 28586                           ;stkvar	_a @ sp[(-4)+-8]
 28587                           ;stkvar	_b @ sp[(-4)+-4]
 28588  014A9A  0EF8               	movlw	-8
 28589  014A9C  50E3               	movf	plusw1,w,c
 28590  014A9E  6E01               	movwf	btemp^0,c
 28591  014AA0  0EF4               	movlw	-12
 28592  014AA2  50E3               	movf	plusw1,w,c
 28593  014AA4  2601               	addwf	btemp^0,f,c
 28594  014AA6  0EF8               	movlw	-8
 28595  014AA8  0060  F007  FFE3   	movff	btemp,plusw1
 28596  014AAE  0EF9               	movlw	-7
 28597  014AB0  50E3               	movf	plusw1,w,c
 28598  014AB2  6E01               	movwf	btemp^0,c
 28599  014AB4  0EF5               	movlw	-11
 28600  014AB6  50E3               	movf	plusw1,w,c
 28601  014AB8  2201               	addwfc	btemp^0,f,c
 28602  014ABA  0EF9               	movlw	-7
 28603  014ABC  0060  F007  FFE3   	movff	btemp,plusw1
 28604  014AC2  0EFA               	movlw	-6
 28605  014AC4  50E3               	movf	plusw1,w,c
 28606  014AC6  6E01               	movwf	btemp^0,c
 28607  014AC8  0EF6               	movlw	-10
 28608  014ACA  50E3               	movf	plusw1,w,c
 28609  014ACC  2201               	addwfc	btemp^0,f,c
 28610  014ACE  0EFA               	movlw	-6
 28611  014AD0  0060  F007  FFE3   	movff	btemp,plusw1
 28612  014AD6  0EFB               	movlw	-5
 28613  014AD8  50E3               	movf	plusw1,w,c
 28614  014ADA  6E01               	movwf	btemp^0,c
 28615  014ADC  0EF7               	movlw	-9
 28616  014ADE  50E3               	movf	plusw1,w,c
 28617  014AE0  2201               	addwfc	btemp^0,f,c
 28618  014AE2  0EFB               	movlw	-5
 28619  014AE4  0060  F007  FFE3   	movff	btemp,plusw1
 28620                           
 28621                           ;stkvar	_b @ sp[(-4)+-4]
 28622  014AEA  0EFB               	movlw	-5
 28623  014AEC  A0E3               	btfss	plusw1,0,c
 28624  014AEE  D101               	goto	u5900
 28625                           
 28626                           ;stkvar	_grs @ sp[(-4)+0]
 28627  014AF0  0EFC               	movlw	-4
 28628  014AF2  A0E3               	btfss	plusw1,0,c
 28629  014AF4  D00D               	goto	l8076
 28630                           
 28631                           ;stkvar	_grs @ sp[(-4)+0]
 28632  014AF6  0EFC               	movlw	-4
 28633  014AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 28634  014AFE  90D8               	bcf	status,0,c
 28635  014B00  320C               	rrcf	(btemp+11)^0,f,c
 28636  014B02  0E01               	movlw	1
 28637  014B04  120C               	iorwf	(btemp+11)^0,f,c
 28638                           
 28639                           ;stkvar	_grs @ sp[(-4)+0]
 28640  014B06  0EFC               	movlw	-4
 28641  014B08  0060  F033  FFE3   	movff	btemp+11,plusw1
 28642  014B0E  D009               	goto	l8078
 28643  014B10                     l8076:
 28644                           
 28645                           ;stkvar	_grs @ sp[(-4)+0]
 28646  014B10  50E1               	movf	fsr1l,w,c
 28647  014B12  0FFC               	addlw	-4
 28648  014B14  6ED9               	movwf	fsr2l,c
 28649  014B16  50E2               	movf	fsr1h,w,c
 28650  014B18  6EDA               	movwf	fsr2h,c
 28651  014B1A  0EFF               	movlw	255
 28652  014B1C  22DA               	addwfc	fsr2h,f,c
 28653  014B1E  90D8               	bcf	status,0,c
 28654  014B20  32DF               	rrcf	indf2,f,c
 28655  014B22                     l8078:
 28656                           
 28657                           ;stkvar	_b @ sp[(-4)+-4]
 28658  014B22  0EF8               	movlw	-8
 28659  014B24  A0E3               	btfss	plusw1,0,c
 28660  014B26  D002               	goto	l8082
 28661                           
 28662                           ;stkvar	_grs @ sp[(-4)+0]
 28663  014B28  0EFC               	movlw	-4
 28664  014B2A  8EE3               	bsf	plusw1,7,c
 28665  014B2C                     l8082:
 28666  014B2C  0E01               	movlw	1
 28667  014B2E  6E0C               	movwf	(btemp+11)^0,c
 28668                           
 28669                           ;stkvar	_b @ sp[(-4)+-4]
 28670  014B30  50E1               	movf	fsr1l,w,c
 28671  014B32  0FF8               	addlw	-8
 28672  014B34  6ED9               	movwf	fsr2l,c
 28673  014B36  50E2               	movf	fsr1h,w,c
 28674  014B38  6EDA               	movwf	fsr2h,c
 28675  014B3A  0EFF               	movlw	255
 28676  014B3C  22DA               	addwfc	fsr2h,f,c
 28677  014B3E  280C               	incf	(btemp+11)^0,w,c
 28678  014B40  52DE               	movf	postinc2,f,c
 28679  014B42  D008               	goto	u5820
 28680  014B44                     u5825:
 28681  014B44  52DE               	movf	postinc2,f,c
 28682  014B46  90D8               	bcf	status,0,c
 28683  014B48  BEDC               	btfsc	preinc2,7,c
 28684  014B4A  80D8               	bsf	status,0,c
 28685  014B4C  32DD               	rrcf	postdec2,f,c
 28686  014B4E  32DD               	rrcf	postdec2,f,c
 28687  014B50  32DD               	rrcf	postdec2,f,c
 28688  014B52  32DE               	rrcf	postinc2,f,c
 28689  014B54                     u5820:
 28690  014B54  2EE8               	decfsz	wreg,f,c
 28691  014B56  D7F6               	goto	u5825
 28692                           
 28693                           ;stkvar	_bexp @ sp[(-4)+1]
 28694  014B58  0EFD               	movlw	-3
 28695  014B5A  2AE3               	incf	plusw1,f,c
 28696  014B5C  D0CA               	goto	u5900
 28697  014B5E                     l8086:
 28698                           
 28699                           ;stkvar	_a @ sp[(-4)+-8]
 28700                           ;stkvar	_b @ sp[(-4)+-4]
 28701  014B5E  50E1               	movf	fsr1l,w,c
 28702  014B60  0FF8               	addlw	-8
 28703  014B62  6ED9               	movwf	fsr2l,c
 28704  014B64  50E2               	movf	fsr1h,w,c
 28705  014B66  6EDA               	movwf	fsr2h,c
 28706  014B68  0EFF               	movlw	255
 28707  014B6A  22DA               	addwfc	fsr2h,f,c
 28708  014B6C  0EF4               	movlw	-12
 28709  014B6E  50E3               	movf	plusw1,w,c
 28710  014B70  5CDE               	subwf	postinc2,w,c
 28711  014B72  0EF5               	movlw	-11
 28712  014B74  50E3               	movf	plusw1,w,c
 28713  014B76  58DE               	subwfb	postinc2,w,c
 28714  014B78  0EF6               	movlw	-10
 28715  014B7A  50E3               	movf	plusw1,w,c
 28716  014B7C  58DE               	subwfb	postinc2,w,c
 28717  014B7E  50DE               	movf	postinc2,w,c
 28718  014B80  0A80               	xorlw	128
 28719  014B82  6E01               	movwf	btemp^0,c
 28720  014B84  0EF7               	movlw	-9
 28721  014B86  50E3               	movf	plusw1,w,c
 28722  014B88  0A80               	xorlw	128
 28723  014B8A  5801               	subwfb	btemp^0,w,c
 28724  014B8C  B0D8               	btfsc	status,0,c
 28725  014B8E  D053               	goto	l8098
 28726                           
 28727                           ;stkvar	_b @ sp[(-4)+-4]
 28728                           ;stkvar	_a @ sp[(-4)+-8]
 28729  014B90  0EF4               	movlw	-12
 28730  014B92  006F FF8C  F009    	movff	plusw1,btemp+8
 28731  014B98  0EF5               	movlw	-11
 28732  014B9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 28733  014BA0  0EF6               	movlw	-10
 28734  014BA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28735  014BA8  0EF7               	movlw	-9
 28736  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28737  014BB0  0EF8               	movlw	-8
 28738  014BB2  50E3               	movf	plusw1,w,c
 28739  014BB4  5E09               	subwf	(btemp+8)^0,f,c
 28740  014BB6  0EF9               	movlw	-7
 28741  014BB8  50E3               	movf	plusw1,w,c
 28742  014BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 28743  014BBC  0EFA               	movlw	-6
 28744  014BBE  50E3               	movf	plusw1,w,c
 28745  014BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 28746  014BC2  0EFB               	movlw	-5
 28747  014BC4  50E3               	movf	plusw1,w,c
 28748  014BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 28749  014BC8  0EFF               	movlw	255
 28750  014BCA  2409               	addwf	(btemp+8)^0,w,c
 28751  014BCC  6E05               	movwf	(btemp+4)^0,c
 28752  014BCE  0EFF               	movlw	255
 28753  014BD0  200A               	addwfc	(btemp+9)^0,w,c
 28754  014BD2  6E06               	movwf	(btemp+5)^0,c
 28755  014BD4  0EFF               	movlw	255
 28756  014BD6  200B               	addwfc	(btemp+10)^0,w,c
 28757  014BD8  6E07               	movwf	(btemp+6)^0,c
 28758  014BDA  0EFF               	movlw	255
 28759  014BDC  200C               	addwfc	(btemp+11)^0,w,c
 28760  014BDE  6E08               	movwf	(btemp+7)^0,c
 28761                           
 28762                           ;stkvar	_b @ sp[(-4)+-4]
 28763  014BE0  0EF8               	movlw	-8
 28764  014BE2  0060  F017  FFE3   	movff	btemp+4,plusw1
 28765  014BE8  0EF9               	movlw	-7
 28766  014BEA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28767  014BF0  0EFA               	movlw	-6
 28768  014BF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28769  014BF8  0EFB               	movlw	-5
 28770  014BFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 28771                           
 28772                           ;stkvar	_signs @ sp[(-4)+3]
 28773  014C00  0EFF               	movlw	-1
 28774  014C02  7EE3               	btg	plusw1,7,c
 28775                           
 28776                           ;stkvar	_grs @ sp[(-4)+0]
 28777  014C04  0EFC               	movlw	-4
 28778  014C06  50E3               	movf	plusw1,w,c
 28779  014C08  0800               	sublw	0
 28780  014C0A  6E0C               	movwf	(btemp+11)^0,c
 28781                           
 28782                           ;stkvar	_grs @ sp[(-4)+0]
 28783  014C0C  0EFC               	movlw	-4
 28784  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28785                           
 28786                           ;stkvar	_grs @ sp[(-4)+0]
 28787  014C14  0EFC               	movlw	-4
 28788  014C16  50E3               	movf	plusw1,w,c
 28789  014C18  A4D8               	btfss	status,2,c
 28790  014C1A  D020               	goto	l8100
 28791                           
 28792                           ;stkvar	_b @ sp[(-4)+-4]
 28793  014C1C  50E1               	movf	fsr1l,w,c
 28794  014C1E  0FF8               	addlw	-8
 28795  014C20  6ED9               	movwf	fsr2l,c
 28796  014C22  50E2               	movf	fsr1h,w,c
 28797  014C24  6EDA               	movwf	fsr2h,c
 28798  014C26  0EFF               	movlw	255
 28799  014C28  22DA               	addwfc	fsr2h,f,c
 28800  014C2A  2ADE               	incf	postinc2,f,c
 28801  014C2C  0E00               	movlw	0
 28802  014C2E  22DE               	addwfc	postinc2,f,c
 28803  014C30  22DE               	addwfc	postinc2,f,c
 28804  014C32  22DE               	addwfc	postinc2,f,c
 28805  014C34  D013               	goto	l8100
 28806  014C36                     l8098:
 28807                           
 28808                           ;stkvar	_a @ sp[(-4)+-8]
 28809                           ;stkvar	_b @ sp[(-4)+-4]
 28810  014C36  50E1               	movf	fsr1l,w,c
 28811  014C38  0FF8               	addlw	-8
 28812  014C3A  6ED9               	movwf	fsr2l,c
 28813  014C3C  50E2               	movf	fsr1h,w,c
 28814  014C3E  6EDA               	movwf	fsr2h,c
 28815  014C40  0EFF               	movlw	255
 28816  014C42  22DA               	addwfc	fsr2h,f,c
 28817  014C44  0EF4               	movlw	-12
 28818  014C46  50E3               	movf	plusw1,w,c
 28819  014C48  5EDE               	subwf	postinc2,f,c
 28820  014C4A  0EF5               	movlw	-11
 28821  014C4C  50E3               	movf	plusw1,w,c
 28822  014C4E  5ADE               	subwfb	postinc2,f,c
 28823  014C50  0EF6               	movlw	-10
 28824  014C52  50E3               	movf	plusw1,w,c
 28825  014C54  5ADE               	subwfb	postinc2,f,c
 28826  014C56  0EF7               	movlw	-9
 28827  014C58  50E3               	movf	plusw1,w,c
 28828  014C5A  5ADE               	subwfb	postinc2,f,c
 28829  014C5C                     l8100:
 28830                           
 28831                           ;stkvar	_b @ sp[(-4)+-4]
 28832  014C5C  0EF8               	movlw	-8
 28833  014C5E  50E3               	movf	plusw1,w,c
 28834  014C60  E145               	bnz	l8122
 28835  014C62  0EF9               	movlw	-7
 28836  014C64  50E3               	movf	plusw1,w,c
 28837  014C66  E142               	bnz	l8122
 28838  014C68  0EFA               	movlw	-6
 28839  014C6A  50E3               	movf	plusw1,w,c
 28840  014C6C  E13F               	bnz	l8122
 28841  014C6E  0EFB               	movlw	-5
 28842  014C70  50E3               	movf	plusw1,w,c
 28843  014C72  A4D8               	btfss	status,2,c
 28844  014C74  D03B               	goto	l8122
 28845                           
 28846                           ;stkvar	_grs @ sp[(-4)+0]
 28847  014C76  0EFC               	movlw	-4
 28848  014C78  50E3               	movf	plusw1,w,c
 28849  014C7A  A4D8               	btfss	status,2,c
 28850  014C7C  D037               	goto	l8122
 28851  014C7E                     u5860:
 28852  014C7E  0E00               	movlw	0
 28853  014C80  6E01               	movwf	btemp^0,c
 28854  014C82  0E00               	movlw	0
 28855  014C84  6E02               	movwf	(btemp+1)^0,c
 28856  014C86  0E00               	movlw	0
 28857  014C88  6E03               	movwf	(btemp+2)^0,c
 28858  014C8A  0E00               	movlw	0
 28859  014C8C  6E04               	movwf	(btemp+3)^0,c
 28860  014C8E  D0C6               	goto	l3046
 28861  014C90                     l8108:
 28862                           
 28863                           ;stkvar	_b @ sp[(-4)+-4]
 28864  014C90  90D8               	bcf	status,0,c
 28865  014C92  0EF8               	movlw	-8
 28866  014C94  36E3               	rlcf	plusw1,f,c
 28867  014C96  0EF9               	movlw	-7
 28868  014C98  36E3               	rlcf	plusw1,f,c
 28869  014C9A  0EFA               	movlw	-6
 28870  014C9C  36E3               	rlcf	plusw1,f,c
 28871  014C9E  0EFB               	movlw	-5
 28872  014CA0  36E3               	rlcf	plusw1,f,c
 28873                           
 28874                           ;stkvar	_grs @ sp[(-4)+0]
 28875  014CA2  0EFC               	movlw	-4
 28876  014CA4  AEE3               	btfss	plusw1,7,c
 28877  014CA6  D002               	goto	l3058
 28878                           
 28879                           ;stkvar	_b @ sp[(-4)+-4]
 28880  014CA8  0EF8               	movlw	-8
 28881  014CAA  80E3               	bsf	plusw1,0,c
 28882  014CAC                     l3058:
 28883                           
 28884                           ;stkvar	_grs @ sp[(-4)+0]
 28885  014CAC  0EFC               	movlw	-4
 28886  014CAE  A0E3               	btfss	plusw1,0,c
 28887  014CB0  D00E               	goto	l8116
 28888                           
 28889                           ;stkvar	_grs @ sp[(-4)+0]
 28890  014CB2  0EFC               	movlw	-4
 28891  014CB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28892  014CBA  90D8               	bcf	status,0,c
 28893  014CBC  340C               	rlcf	(btemp+11)^0,w,c
 28894  014CBE  6E0B               	movwf	(btemp+10)^0,c
 28895  014CC0  0E01               	movlw	1
 28896  014CC2  120B               	iorwf	(btemp+10)^0,f,c
 28897                           
 28898                           ;stkvar	_grs @ sp[(-4)+0]
 28899  014CC4  0EFC               	movlw	-4
 28900  014CC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28901  014CCC  D009               	goto	l8118
 28902  014CCE                     l8116:
 28903                           
 28904                           ;stkvar	_grs @ sp[(-4)+0]
 28905  014CCE  50E1               	movf	fsr1l,w,c
 28906  014CD0  0FFC               	addlw	-4
 28907  014CD2  6ED9               	movwf	fsr2l,c
 28908  014CD4  50E2               	movf	fsr1h,w,c
 28909  014CD6  6EDA               	movwf	fsr2h,c
 28910  014CD8  0EFF               	movlw	255
 28911  014CDA  22DA               	addwfc	fsr2h,f,c
 28912  014CDC  90D8               	bcf	status,0,c
 28913  014CDE  36DF               	rlcf	indf2,f,c
 28914  014CE0                     l8118:
 28915                           
 28916                           ;stkvar	_bexp @ sp[(-4)+1]
 28917  014CE0  0EFD               	movlw	-3
 28918  014CE2  50E3               	movf	plusw1,w,c
 28919  014CE4  B4D8               	btfsc	status,2,c
 28920  014CE6  D002               	goto	l8122
 28921                           
 28922                           ;stkvar	_bexp @ sp[(-4)+1]
 28923  014CE8  0EFD               	movlw	-3
 28924  014CEA  06E3               	decf	plusw1,f,c
 28925  014CEC                     l8122:
 28926                           
 28927                           ;stkvar	_b @ sp[(-4)+-4]
 28928  014CEC  0EFA               	movlw	-6
 28929  014CEE  AEE3               	btfss	plusw1,7,c
 28930  014CF0  D7CF               	goto	l8108
 28931  014CF2                     u5900:
 28932                           
 28933                           ;stkvar	_aexp @ sp[(-4)+2]
 28934  014CF2  0EFE               	movlw	-2
 28935  014CF4  6AE3               	clrf	plusw1,c
 28936                           
 28937                           ;stkvar	_grs @ sp[(-4)+0]
 28938  014CF6  0EFC               	movlw	-4
 28939  014CF8  AEE3               	btfss	plusw1,7,c
 28940  014CFA  D00F               	goto	l8136
 28941                           
 28942                           ;stkvar	_grs @ sp[(-4)+0]
 28943  014CFC  0EFC               	movlw	-4
 28944  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28945  014D04  0E7F               	movlw	127
 28946  014D06  160C               	andwf	(btemp+11)^0,f,c
 28947  014D08  B4D8               	btfsc	status,2,c
 28948  014D0A  D004               	goto	l8132
 28949  014D0C                     u5920:
 28950                           
 28951                           ;stkvar	_aexp @ sp[(-4)+2]
 28952  014D0C  0EFE               	movlw	-2
 28953  014D0E  6AE3               	clrf	plusw1,c
 28954  014D10  2AE3               	incf	plusw1,f,c
 28955  014D12  D003               	goto	l8136
 28956  014D14                     l8132:
 28957                           
 28958                           ;stkvar	_b @ sp[(-4)+-4]
 28959  014D14  0EF8               	movlw	-8
 28960  014D16  B0E3               	btfsc	plusw1,0,c
 28961  014D18  D7F9               	goto	u5920
 28962  014D1A                     l8136:
 28963                           
 28964                           ;stkvar	_aexp @ sp[(-4)+2]
 28965  014D1A  0EFE               	movlw	-2
 28966  014D1C  50E3               	movf	plusw1,w,c
 28967  014D1E  B4D8               	btfsc	status,2,c
 28968  014D20  D02B               	goto	l8148
 28969                           
 28970                           ;stkvar	_b @ sp[(-4)+-4]
 28971  014D22  50E1               	movf	fsr1l,w,c
 28972  014D24  0FF8               	addlw	-8
 28973  014D26  6ED9               	movwf	fsr2l,c
 28974  014D28  50E2               	movf	fsr1h,w,c
 28975  014D2A  6EDA               	movwf	fsr2h,c
 28976  014D2C  0EFF               	movlw	255
 28977  014D2E  22DA               	addwfc	fsr2h,f,c
 28978  014D30  2ADE               	incf	postinc2,f,c
 28979  014D32  0E00               	movlw	0
 28980  014D34  22DE               	addwfc	postinc2,f,c
 28981  014D36  22DE               	addwfc	postinc2,f,c
 28982  014D38  22DE               	addwfc	postinc2,f,c
 28983                           
 28984                           ;stkvar	_b @ sp[(-4)+-4]
 28985  014D3A  0EFB               	movlw	-5
 28986  014D3C  A0E3               	btfss	plusw1,0,c
 28987  014D3E  D01C               	goto	l8148
 28988  014D40  0E01               	movlw	1
 28989  014D42  6E0C               	movwf	(btemp+11)^0,c
 28990                           
 28991                           ;stkvar	_b @ sp[(-4)+-4]
 28992  014D44  50E1               	movf	fsr1l,w,c
 28993  014D46  0FF8               	addlw	-8
 28994  014D48  6ED9               	movwf	fsr2l,c
 28995  014D4A  50E2               	movf	fsr1h,w,c
 28996  014D4C  6EDA               	movwf	fsr2h,c
 28997  014D4E  0EFF               	movlw	255
 28998  014D50  22DA               	addwfc	fsr2h,f,c
 28999  014D52  280C               	incf	(btemp+11)^0,w,c
 29000  014D54  52DE               	movf	postinc2,f,c
 29001  014D56  D008               	goto	u5960
 29002  014D58                     u5965:
 29003  014D58  52DE               	movf	postinc2,f,c
 29004  014D5A  90D8               	bcf	status,0,c
 29005  014D5C  BEDC               	btfsc	preinc2,7,c
 29006  014D5E  80D8               	bsf	status,0,c
 29007  014D60  32DD               	rrcf	postdec2,f,c
 29008  014D62  32DD               	rrcf	postdec2,f,c
 29009  014D64  32DD               	rrcf	postdec2,f,c
 29010  014D66  32DE               	rrcf	postinc2,f,c
 29011  014D68                     u5960:
 29012  014D68  2EE8               	decfsz	wreg,f,c
 29013  014D6A  D7F6               	goto	u5965
 29014                           
 29015                           ;stkvar	_bexp @ sp[(-4)+1]
 29016  014D6C  0EFD               	movlw	-3
 29017  014D6E  28E3               	incf	plusw1,w,c
 29018  014D70  B4D8               	btfsc	status,2,c
 29019  014D72  D002               	goto	l8148
 29020                           
 29021                           ;stkvar	_bexp @ sp[(-4)+1]
 29022  014D74  0EFD               	movlw	-3
 29023  014D76  2AE3               	incf	plusw1,f,c
 29024  014D78                     l8148:
 29025                           
 29026                           ;stkvar	_bexp @ sp[(-4)+1]
 29027  014D78  0EFD               	movlw	-3
 29028  014D7A  28E3               	incf	plusw1,w,c
 29029  014D7C  B4D8               	btfsc	status,2,c
 29030  014D7E  D004               	goto	u5990
 29031                           
 29032                           ;stkvar	_bexp @ sp[(-4)+1]
 29033  014D80  0EFD               	movlw	-3
 29034  014D82  50E3               	movf	plusw1,w,c
 29035  014D84  A4D8               	btfss	status,2,c
 29036  014D86  D00E               	goto	l8158
 29037  014D88                     u5990:
 29038                           
 29039                           ;stkvar	_b @ sp[(-4)+-4]
 29040  014D88  0EF8               	movlw	-8
 29041  014D8A  6AE3               	clrf	plusw1,c
 29042  014D8C  0EF9               	movlw	-7
 29043  014D8E  6AE3               	clrf	plusw1,c
 29044  014D90  0EFA               	movlw	-6
 29045  014D92  6AE3               	clrf	plusw1,c
 29046  014D94  0EFB               	movlw	-5
 29047  014D96  6AE3               	clrf	plusw1,c
 29048                           
 29049                           ;stkvar	_bexp @ sp[(-4)+1]
 29050  014D98  0EFD               	movlw	-3
 29051  014D9A  50E3               	movf	plusw1,w,c
 29052  014D9C  A4D8               	btfss	status,2,c
 29053  014D9E  D002               	goto	l8158
 29054                           
 29055                           ;stkvar	_signs @ sp[(-4)+3]
 29056  014DA0  0EFF               	movlw	-1
 29057  014DA2  6AE3               	clrf	plusw1,c
 29058  014DA4                     l8158:
 29059                           
 29060                           ;stkvar	_bexp @ sp[(-4)+1]
 29061  014DA4  0EFD               	movlw	-3
 29062  014DA6  A0E3               	btfss	plusw1,0,c
 29063  014DA8  D009               	goto	l8162
 29064                           
 29065                           ;stkvar	_b @ sp[(-4)+-4]
 29066  014DAA  0EFA               	movlw	250
 29067  014DAC  24E1               	addwf	fsr1l,w,c
 29068  014DAE  6ED9               	movwf	fsr2l,c
 29069  014DB0  0EFF               	movlw	255
 29070  014DB2  20E2               	addwfc	fsr1h,w,c
 29071  014DB4  6EDA               	movwf	fsr2h,c
 29072  014DB6  0E00               	movlw	0
 29073  014DB8  8EDB               	bsf	plusw2,7,c
 29074  014DBA  D008               	goto	l8164
 29075  014DBC                     l8162:
 29076                           
 29077                           ;stkvar	_b @ sp[(-4)+-4]
 29078  014DBC  0EFA               	movlw	250
 29079  014DBE  24E1               	addwf	fsr1l,w,c
 29080  014DC0  6ED9               	movwf	fsr2l,c
 29081  014DC2  0EFF               	movlw	255
 29082  014DC4  20E2               	addwfc	fsr1h,w,c
 29083  014DC6  6EDA               	movwf	fsr2h,c
 29084  014DC8  0E7F               	movlw	127
 29085  014DCA  16DF               	andwf	indf2,f,c
 29086  014DCC                     l8164:
 29087                           
 29088                           ;stkvar	_b @ sp[(-4)+-4]
 29089  014DCC  0EFB               	movlw	251
 29090  014DCE  24E1               	addwf	fsr1l,w,c
 29091  014DD0  6ED9               	movwf	fsr2l,c
 29092  014DD2  0EFF               	movlw	255
 29093  014DD4  20E2               	addwfc	fsr1h,w,c
 29094  014DD6  6EDA               	movwf	fsr2h,c
 29095                           
 29096                           ;stkvar	_bexp @ sp[(-4)+1]
 29097  014DD8  0EFD               	movlw	-3
 29098  014DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29099  014DE0  90D8               	bcf	status,0,c
 29100  014DE2  300C               	rrcf	(btemp+11)^0,w,c
 29101  014DE4  6EDF               	movwf	indf2,c
 29102                           
 29103                           ;stkvar	_signs @ sp[(-4)+3]
 29104  014DE6  0EFF               	movlw	-1
 29105  014DE8  AEE3               	btfss	plusw1,7,c
 29106  014DEA  D008               	goto	l8170
 29107                           
 29108                           ;stkvar	_b @ sp[(-4)+-4]
 29109  014DEC  0EFB               	movlw	251
 29110  014DEE  24E1               	addwf	fsr1l,w,c
 29111  014DF0  6ED9               	movwf	fsr2l,c
 29112  014DF2  0EFF               	movlw	255
 29113  014DF4  20E2               	addwfc	fsr1h,w,c
 29114  014DF6  6EDA               	movwf	fsr2h,c
 29115  014DF8  0E00               	movlw	0
 29116  014DFA  8EDB               	bsf	plusw2,7,c
 29117  014DFC                     l8170:
 29118                           
 29119                           ;stkvar	_b @ sp[(-4)+-4]
 29120  014DFC  0EF8               	movlw	-8
 29121  014DFE  006F FF8C  F001    	movff	plusw1,btemp
 29122  014E04  0EF9               	movlw	-7
 29123  014E06  006F FF8C  F002    	movff	plusw1,btemp+1
 29124  014E0C  0EFA               	movlw	-6
 29125  014E0E  006F FF8C  F003    	movff	plusw1,btemp+2
 29126  014E14  0EFB               	movlw	-5
 29127  014E16  006F FF8C  F004    	movff	plusw1,btemp+3
 29128  014E1C                     l3046:
 29129                           
 29130                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29131  014E1C  0EF4               	movlw	244
 29132  014E1E  26E1               	addwf	fsr1l,f,c
 29133  014E20  0EFF               	movlw	255
 29134  014E22  22E2               	addwfc	fsr1h,f,c
 29135  014E24  0012               	return		;funcret
 29136  014E26                     __end_of___fladd:
 29137                           	opt callstack 0
 29138                           
 29139 ;; *************** function ___flmul *****************
 29140 ;; Defined at:
 29141 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  b               4  [STACK] unsigned char 
 29144 ;;  a               4  [STACK] unsigned char 
 29145 ;; Auto vars:     Size  Location     Type
 29146 ;;  prod            4  [STACK] struct .
 29147 ;;  grs             4  [STACK] unsigned long 
 29148 ;;  temp            2  [STACK] struct .
 29149 ;;  bexp            1  [STACK] unsigned char 
 29150 ;;  aexp            1  [STACK] unsigned char 
 29151 ;;  sign            1  [STACK] unsigned char 
 29152 ;; Return value:  Size  Location     Type
 29153 ;;                  4  [STACK] unsigned char 
 29154 ;; Registers used:
 29155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29156 ;; Tracked objects:
 29157 ;;		On entry : 0/0
 29158 ;;		On exit  : 0/0
 29159 ;;		Unchanged: 0/0
 29160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29165 ;;Total ram usage:        0 bytes
 29166 ;; Hardware stack levels used:    1
 29167 ;; Hardware stack levels required when called:   15
 29168 ;; This function calls:
 29169 ;;		Nothing
 29170 ;; This function is called by:
 29171 ;;		_conv_raw_result
 29172 ;;		_lp_filter
 29173 ;;		_calc_model_data
 29174 ;;		_calc_bsoc
 29175 ;;		_init_bsoc
 29176 ;;		_efgtoa
 29177 ;; This function uses a reentrant model
 29178 ;;
 29179                           
 29180                           	psect	text114
 29181  013E40                     __ptext114:
 29182                           	opt callstack 0
 29183  013E40                     ___flmul:
 29184                           	opt callstack 0
 29185                           
 29186                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29187  013E40  0E0D               	movlw	13
 29188  013E42  26E1               	addwf	fsr1l,f,c
 29189  013E44  0E00               	movlw	0
 29190  013E46  22E2               	addwfc	fsr1h,f,c
 29191                           
 29192                           ;stkvar	_b @ sp[(-13)+-4]
 29193                           
 29194                           ;incstack = 0
 29195 ;; hardware stack exceeded
 29196  013E48  0EF2               	movlw	242
 29197  013E4A  24E1               	addwf	fsr1l,w,c
 29198  013E4C  6ED9               	movwf	fsr2l,c
 29199  013E4E  0EFF               	movlw	255
 29200  013E50  20E2               	addwfc	fsr1h,w,c
 29201  013E52  6EDA               	movwf	fsr2h,c
 29202  013E54  50DF               	movf	indf2,w,c
 29203  013E56  6E0C               	movwf	(btemp+11)^0,c
 29204  013E58  0E80               	movlw	128
 29205  013E5A  160C               	andwf	(btemp+11)^0,f,c
 29206                           
 29207                           ;stkvar	_sign @ sp[(-13)+12]
 29208  013E5C  0EFF               	movlw	-1
 29209  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29210                           
 29211                           ;stkvar	_b @ sp[(-13)+-4]
 29212  013E64  0EF2               	movlw	242
 29213  013E66  24E1               	addwf	fsr1l,w,c
 29214  013E68  6ED9               	movwf	fsr2l,c
 29215  013E6A  0EFF               	movlw	255
 29216  013E6C  20E2               	addwfc	fsr1h,w,c
 29217  013E6E  6EDA               	movwf	fsr2h,c
 29218  013E70  50DF               	movf	indf2,w,c
 29219  013E72  6E0C               	movwf	(btemp+11)^0,c
 29220  013E74  90D8               	bcf	status,0,c
 29221  013E76  340C               	rlcf	(btemp+11)^0,w,c
 29222  013E78  6E0B               	movwf	(btemp+10)^0,c
 29223                           
 29224                           ;stkvar	_bexp @ sp[(-13)+10]
 29225  013E7A  0EFD               	movlw	-3
 29226  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29227                           
 29228                           ;stkvar	_b @ sp[(-13)+-4]
 29229  013E82  0EF1               	movlw	241
 29230  013E84  24E1               	addwf	fsr1l,w,c
 29231  013E86  6ED9               	movwf	fsr2l,c
 29232  013E88  0EFF               	movlw	255
 29233  013E8A  20E2               	addwfc	fsr1h,w,c
 29234  013E8C  6EDA               	movwf	fsr2h,c
 29235  013E8E  AEDF               	btfss	indf2,7,c
 29236  013E90  D002               	goto	l8596
 29237                           
 29238                           ;stkvar	_bexp @ sp[(-13)+10]
 29239  013E92  0EFD               	movlw	-3
 29240  013E94  80E3               	bsf	plusw1,0,c
 29241  013E96                     l8596:
 29242                           
 29243                           ;stkvar	_bexp @ sp[(-13)+10]
 29244  013E96  0EFD               	movlw	-3
 29245  013E98  50E3               	movf	plusw1,w,c
 29246  013E9A  B4D8               	btfsc	status,2,c
 29247  013E9C  D01F               	goto	l8604
 29248                           
 29249                           ;stkvar	_bexp @ sp[(-13)+10]
 29250  013E9E  0EFD               	movlw	-3
 29251  013EA0  28E3               	incf	plusw1,w,c
 29252  013EA2  A4D8               	btfss	status,2,c
 29253  013EA4  D018               	goto	l8602
 29254  013EA6  0E00               	movlw	0
 29255  013EA8  6E09               	movwf	(btemp+8)^0,c
 29256  013EAA  0E00               	movlw	0
 29257  013EAC  6E0A               	movwf	(btemp+9)^0,c
 29258  013EAE  0E00               	movlw	0
 29259  013EB0  6E0B               	movwf	(btemp+10)^0,c
 29260  013EB2  0E00               	movlw	0
 29261  013EB4  6E0C               	movwf	(btemp+11)^0,c
 29262                           
 29263                           ;stkvar	_b @ sp[(-13)+-4]
 29264  013EB6  0EEF               	movlw	-17
 29265  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29266  013EBE  0EF0               	movlw	-16
 29267  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29268  013EC6  0EF1               	movlw	-15
 29269  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29270  013ECE  0EF2               	movlw	-14
 29271  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29272  013ED6                     l8602:
 29273                           
 29274                           ;stkvar	_b @ sp[(-13)+-4]
 29275  013ED6  0EF1               	movlw	-15
 29276  013ED8  8EE3               	bsf	plusw1,7,c
 29277  013EDA  D018               	goto	l8606
 29278  013EDC                     l8604:
 29279  013EDC  0E00               	movlw	0
 29280  013EDE  6E09               	movwf	(btemp+8)^0,c
 29281  013EE0  0E00               	movlw	0
 29282  013EE2  6E0A               	movwf	(btemp+9)^0,c
 29283  013EE4  0E00               	movlw	0
 29284  013EE6  6E0B               	movwf	(btemp+10)^0,c
 29285  013EE8  0E00               	movlw	0
 29286  013EEA  6E0C               	movwf	(btemp+11)^0,c
 29287                           
 29288                           ;stkvar	_b @ sp[(-13)+-4]
 29289  013EEC  0EEF               	movlw	-17
 29290  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29291  013EF4  0EF0               	movlw	-16
 29292  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29293  013EFC  0EF1               	movlw	-15
 29294  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29295  013F04  0EF2               	movlw	-14
 29296  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 29297  013F0C                     l8606:
 29298                           
 29299                           ;stkvar	_a @ sp[(-13)+-8]
 29300  013F0C  0EEE               	movlw	238
 29301  013F0E  24E1               	addwf	fsr1l,w,c
 29302  013F10  6ED9               	movwf	fsr2l,c
 29303  013F12  0EFF               	movlw	255
 29304  013F14  20E2               	addwfc	fsr1h,w,c
 29305  013F16  6EDA               	movwf	fsr2h,c
 29306  013F18  50DF               	movf	indf2,w,c
 29307  013F1A  6E0C               	movwf	(btemp+11)^0,c
 29308  013F1C  0E80               	movlw	128
 29309  013F1E  160C               	andwf	(btemp+11)^0,f,c
 29310                           
 29311                           ;stkvar	_sign @ sp[(-13)+12]
 29312  013F20  50E1               	movf	fsr1l,w,c
 29313  013F22  0FFF               	addlw	-1
 29314  013F24  6ED9               	movwf	fsr2l,c
 29315  013F26  50E2               	movf	fsr1h,w,c
 29316  013F28  6EDA               	movwf	fsr2h,c
 29317  013F2A  0EFF               	movlw	255
 29318  013F2C  22DA               	addwfc	fsr2h,f,c
 29319  013F2E  500C               	movf	(btemp+11)^0,w,c
 29320  013F30  1ADF               	xorwf	indf2,f,c
 29321                           
 29322                           ;stkvar	_a @ sp[(-13)+-8]
 29323  013F32  0EEE               	movlw	238
 29324  013F34  24E1               	addwf	fsr1l,w,c
 29325  013F36  6ED9               	movwf	fsr2l,c
 29326  013F38  0EFF               	movlw	255
 29327  013F3A  20E2               	addwfc	fsr1h,w,c
 29328  013F3C  6EDA               	movwf	fsr2h,c
 29329  013F3E  50DF               	movf	indf2,w,c
 29330  013F40  6E0C               	movwf	(btemp+11)^0,c
 29331  013F42  90D8               	bcf	status,0,c
 29332  013F44  340C               	rlcf	(btemp+11)^0,w,c
 29333  013F46  6E0B               	movwf	(btemp+10)^0,c
 29334                           
 29335                           ;stkvar	_aexp @ sp[(-13)+11]
 29336  013F48  0EFE               	movlw	-2
 29337  013F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29338                           
 29339                           ;stkvar	_a @ sp[(-13)+-8]
 29340  013F50  0EED               	movlw	237
 29341  013F52  24E1               	addwf	fsr1l,w,c
 29342  013F54  6ED9               	movwf	fsr2l,c
 29343  013F56  0EFF               	movlw	255
 29344  013F58  20E2               	addwfc	fsr1h,w,c
 29345  013F5A  6EDA               	movwf	fsr2h,c
 29346  013F5C  AEDF               	btfss	indf2,7,c
 29347  013F5E  D002               	goto	l8614
 29348                           
 29349                           ;stkvar	_aexp @ sp[(-13)+11]
 29350  013F60  0EFE               	movlw	-2
 29351  013F62  80E3               	bsf	plusw1,0,c
 29352  013F64                     l8614:
 29353                           
 29354                           ;stkvar	_aexp @ sp[(-13)+11]
 29355  013F64  0EFE               	movlw	-2
 29356  013F66  50E3               	movf	plusw1,w,c
 29357  013F68  B4D8               	btfsc	status,2,c
 29358  013F6A  D01F               	goto	l8622
 29359                           
 29360                           ;stkvar	_aexp @ sp[(-13)+11]
 29361  013F6C  0EFE               	movlw	-2
 29362  013F6E  28E3               	incf	plusw1,w,c
 29363  013F70  A4D8               	btfss	status,2,c
 29364  013F72  D018               	goto	l8620
 29365  013F74  0E00               	movlw	0
 29366  013F76  6E09               	movwf	(btemp+8)^0,c
 29367  013F78  0E00               	movlw	0
 29368  013F7A  6E0A               	movwf	(btemp+9)^0,c
 29369  013F7C  0E00               	movlw	0
 29370  013F7E  6E0B               	movwf	(btemp+10)^0,c
 29371  013F80  0E00               	movlw	0
 29372  013F82  6E0C               	movwf	(btemp+11)^0,c
 29373                           
 29374                           ;stkvar	_a @ sp[(-13)+-8]
 29375  013F84  0EEB               	movlw	-21
 29376  013F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 29377  013F8C  0EEC               	movlw	-20
 29378  013F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29379  013F94  0EED               	movlw	-19
 29380  013F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29381  013F9C  0EEE               	movlw	-18
 29382  013F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29383  013FA4                     l8620:
 29384                           
 29385                           ;stkvar	_a @ sp[(-13)+-8]
 29386  013FA4  0EED               	movlw	-19
 29387  013FA6  8EE3               	bsf	plusw1,7,c
 29388  013FA8  D018               	goto	l8624
 29389  013FAA                     l8622:
 29390  013FAA  0E00               	movlw	0
 29391  013FAC  6E09               	movwf	(btemp+8)^0,c
 29392  013FAE  0E00               	movlw	0
 29393  013FB0  6E0A               	movwf	(btemp+9)^0,c
 29394  013FB2  0E00               	movlw	0
 29395  013FB4  6E0B               	movwf	(btemp+10)^0,c
 29396  013FB6  0E00               	movlw	0
 29397  013FB8  6E0C               	movwf	(btemp+11)^0,c
 29398                           
 29399                           ;stkvar	_a @ sp[(-13)+-8]
 29400  013FBA  0EEB               	movlw	-21
 29401  013FBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 29402  013FC2  0EEC               	movlw	-20
 29403  013FC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29404  013FCA  0EED               	movlw	-19
 29405  013FCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29406  013FD2  0EEE               	movlw	-18
 29407  013FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 29408  013FDA                     l8624:
 29409                           
 29410                           ;stkvar	_aexp @ sp[(-13)+11]
 29411  013FDA  0EFE               	movlw	-2
 29412  013FDC  50E3               	movf	plusw1,w,c
 29413  013FDE  B4D8               	btfsc	status,2,c
 29414  013FE0  D004               	goto	u6980
 29415                           
 29416                           ;stkvar	_bexp @ sp[(-13)+10]
 29417  013FE2  0EFD               	movlw	-3
 29418  013FE4  50E3               	movf	plusw1,w,c
 29419  013FE6  A4D8               	btfss	status,2,c
 29420  013FE8  D009               	goto	l8632
 29421  013FEA                     u6980:
 29422  013FEA  0E00               	movlw	0
 29423  013FEC  6E01               	movwf	btemp^0,c
 29424  013FEE  0E00               	movlw	0
 29425  013FF0  6E02               	movwf	(btemp+1)^0,c
 29426  013FF2  0E00               	movlw	0
 29427  013FF4  6E03               	movwf	(btemp+2)^0,c
 29428  013FF6  0E00               	movlw	0
 29429  013FF8  6E04               	movwf	(btemp+3)^0,c
 29430  013FFA  D332               	goto	l3127
 29431  013FFC                     l8632:
 29432                           
 29433                           ;stkvar	_b @ sp[(-13)+-4]
 29434  013FFC  0EEF               	movlw	-17
 29435  013FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29436                           
 29437                           ;stkvar	_a @ sp[(-13)+-8]
 29438  014004  0EED               	movlw	237
 29439  014006  24E1               	addwf	fsr1l,w,c
 29440  014008  6ED9               	movwf	fsr2l,c
 29441  01400A  0EFF               	movlw	255
 29442  01400C  20E2               	addwfc	fsr1h,w,c
 29443  01400E  6EDA               	movwf	fsr2h,c
 29444  014010  50DF               	movf	indf2,w,c
 29445  014012  020C               	mulwf	(btemp+11)^0,c
 29446                           
 29447                           ;stkvar	_temp @ sp[(-13)+8]
 29448  014014  0EFB               	movlw	-5
 29449  014016  006F FFCF FFE3     	movff	prodl,plusw1
 29450  01401C  0EFC               	movlw	-4
 29451  01401E  006F FFD3 FFE3     	movff	prodh,plusw1
 29452                           
 29453                           ;stkvar	_temp @ sp[(-13)+8]
 29454  014024  0EFB               	movlw	-5
 29455  014026  006F FF8C  F00C    	movff	plusw1,btemp+11
 29456  01402C  0060  F030  F005   	movff	btemp+11,btemp+4
 29457  014032  6A06               	clrf	(btemp+5)^0,c
 29458  014034  6A07               	clrf	(btemp+6)^0,c
 29459  014036  6A08               	clrf	(btemp+7)^0,c
 29460                           
 29461                           ;stkvar	_grs @ sp[(-13)+4]
 29462  014038  0EF7               	movlw	-9
 29463  01403A  0060  F017  FFE3   	movff	btemp+4,plusw1
 29464  014040  0EF8               	movlw	-8
 29465  014042  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29466  014048  0EF9               	movlw	-7
 29467  01404A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29468  014050  0EFA               	movlw	-6
 29469  014052  0060  F023  FFE3   	movff	btemp+7,plusw1
 29470                           
 29471                           ;stkvar	_temp @ sp[(-13)+8]
 29472  014058  0EFC               	movlw	252
 29473  01405A  24E1               	addwf	fsr1l,w,c
 29474  01405C  6ED9               	movwf	fsr2l,c
 29475  01405E  0EFF               	movlw	255
 29476  014060  20E2               	addwfc	fsr1h,w,c
 29477  014062  6EDA               	movwf	fsr2h,c
 29478  014064  50DF               	movf	indf2,w,c
 29479  014066  6E0C               	movwf	(btemp+11)^0,c
 29480  014068  0060  F030  F005   	movff	btemp+11,btemp+4
 29481  01406E  6A06               	clrf	(btemp+5)^0,c
 29482  014070  6A07               	clrf	(btemp+6)^0,c
 29483  014072  6A08               	clrf	(btemp+7)^0,c
 29484                           
 29485                           ;stkvar	_prod @ sp[(-13)+0]
 29486  014074  0EF3               	movlw	-13
 29487  014076  0060  F017  FFE3   	movff	btemp+4,plusw1
 29488  01407C  0EF4               	movlw	-12
 29489  01407E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29490  014084  0EF5               	movlw	-11
 29491  014086  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29492  01408C  0EF6               	movlw	-10
 29493  01408E  0060  F023  FFE3   	movff	btemp+7,plusw1
 29494                           
 29495                           ;stkvar	_b @ sp[(-13)+-4]
 29496  014094  0EF0               	movlw	240
 29497  014096  24E1               	addwf	fsr1l,w,c
 29498  014098  6ED9               	movwf	fsr2l,c
 29499  01409A  0EFF               	movlw	255
 29500  01409C  20E2               	addwfc	fsr1h,w,c
 29501  01409E  6EDA               	movwf	fsr2h,c
 29502  0140A0  50DF               	movf	indf2,w,c
 29503  0140A2  6E0C               	movwf	(btemp+11)^0,c
 29504                           
 29505                           ;stkvar	_a @ sp[(-13)+-8]
 29506  0140A4  0EEC               	movlw	236
 29507  0140A6  24E1               	addwf	fsr1l,w,c
 29508  0140A8  6ED9               	movwf	fsr2l,c
 29509  0140AA  0EFF               	movlw	255
 29510  0140AC  20E2               	addwfc	fsr1h,w,c
 29511  0140AE  6EDA               	movwf	fsr2h,c
 29512  0140B0  50DF               	movf	indf2,w,c
 29513  0140B2  020C               	mulwf	(btemp+11)^0,c
 29514                           
 29515                           ;stkvar	_temp @ sp[(-13)+8]
 29516  0140B4  0EFB               	movlw	-5
 29517  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 29518  0140BC  0EFC               	movlw	-4
 29519  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 29520                           
 29521                           ;stkvar	_grs @ sp[(-13)+4]
 29522  0140C4  50E1               	movf	fsr1l,w,c
 29523  0140C6  0FF7               	addlw	-9
 29524  0140C8  6ED9               	movwf	fsr2l,c
 29525  0140CA  50E2               	movf	fsr1h,w,c
 29526  0140CC  6EDA               	movwf	fsr2h,c
 29527  0140CE  0EFF               	movlw	255
 29528  0140D0  22DA               	addwfc	fsr2h,f,c
 29529                           
 29530                           ;stkvar	_temp @ sp[(-13)+8]
 29531  0140D2  0EFB               	movlw	-5
 29532  0140D4  50E3               	movf	plusw1,w,c
 29533  0140D6  26DE               	addwf	postinc2,f,c
 29534  0140D8  0E00               	movlw	0
 29535  0140DA  22DE               	addwfc	postinc2,f,c
 29536  0140DC  22DE               	addwfc	postinc2,f,c
 29537  0140DE  22DE               	addwfc	postinc2,f,c
 29538                           
 29539                           ;stkvar	_prod @ sp[(-13)+0]
 29540  0140E0  50E1               	movf	fsr1l,w,c
 29541  0140E2  0FF3               	addlw	-13
 29542  0140E4  6ED9               	movwf	fsr2l,c
 29543  0140E6  50E2               	movf	fsr1h,w,c
 29544  0140E8  6EDA               	movwf	fsr2h,c
 29545  0140EA  0EFF               	movlw	255
 29546  0140EC  22DA               	addwfc	fsr2h,f,c
 29547                           
 29548                           ;stkvar	_temp @ sp[(-13)+8]
 29549  0140EE  0EFC               	movlw	252
 29550  0140F0  24E1               	addwf	fsr1l,w,c
 29551  0140F2  6EE9               	movwf	fsr0l,c
 29552  0140F4  0EFF               	movlw	255
 29553  0140F6  20E2               	addwfc	fsr1h,w,c
 29554  0140F8  6EEA               	movwf	fsr0h,c
 29555  0140FA  50EF               	movf	indf0,w,c
 29556  0140FC  26DE               	addwf	postinc2,f,c
 29557  0140FE  0E00               	movlw	0
 29558  014100  22DE               	addwfc	postinc2,f,c
 29559  014102  22DE               	addwfc	postinc2,f,c
 29560  014104  22DE               	addwfc	postinc2,f,c
 29561                           
 29562                           ;stkvar	_b @ sp[(-13)+-4]
 29563  014106  0EF1               	movlw	241
 29564  014108  24E1               	addwf	fsr1l,w,c
 29565  01410A  6ED9               	movwf	fsr2l,c
 29566  01410C  0EFF               	movlw	255
 29567  01410E  20E2               	addwfc	fsr1h,w,c
 29568  014110  6EDA               	movwf	fsr2h,c
 29569  014112  50DF               	movf	indf2,w,c
 29570  014114  6E0C               	movwf	(btemp+11)^0,c
 29571                           
 29572                           ;stkvar	_a @ sp[(-13)+-8]
 29573  014116  0EEB               	movlw	-21
 29574  014118  50E3               	movf	plusw1,w,c
 29575  01411A  020C               	mulwf	(btemp+11)^0,c
 29576                           
 29577                           ;stkvar	_temp @ sp[(-13)+8]
 29578  01411C  0EFB               	movlw	-5
 29579  01411E  006F FFCF FFE3     	movff	prodl,plusw1
 29580  014124  0EFC               	movlw	-4
 29581  014126  006F FFD3 FFE3     	movff	prodh,plusw1
 29582                           
 29583                           ;stkvar	_grs @ sp[(-13)+4]
 29584  01412C  50E1               	movf	fsr1l,w,c
 29585  01412E  0FF7               	addlw	-9
 29586  014130  6ED9               	movwf	fsr2l,c
 29587  014132  50E2               	movf	fsr1h,w,c
 29588  014134  6EDA               	movwf	fsr2h,c
 29589  014136  0EFF               	movlw	255
 29590  014138  22DA               	addwfc	fsr2h,f,c
 29591                           
 29592                           ;stkvar	_temp @ sp[(-13)+8]
 29593  01413A  0EFB               	movlw	-5
 29594  01413C  50E3               	movf	plusw1,w,c
 29595  01413E  26DE               	addwf	postinc2,f,c
 29596  014140  0E00               	movlw	0
 29597  014142  22DE               	addwfc	postinc2,f,c
 29598  014144  22DE               	addwfc	postinc2,f,c
 29599  014146  22DE               	addwfc	postinc2,f,c
 29600                           
 29601                           ;stkvar	_prod @ sp[(-13)+0]
 29602  014148  50E1               	movf	fsr1l,w,c
 29603  01414A  0FF3               	addlw	-13
 29604  01414C  6ED9               	movwf	fsr2l,c
 29605  01414E  50E2               	movf	fsr1h,w,c
 29606  014150  6EDA               	movwf	fsr2h,c
 29607  014152  0EFF               	movlw	255
 29608  014154  22DA               	addwfc	fsr2h,f,c
 29609                           
 29610                           ;stkvar	_temp @ sp[(-13)+8]
 29611  014156  0EFC               	movlw	252
 29612  014158  24E1               	addwf	fsr1l,w,c
 29613  01415A  6EE9               	movwf	fsr0l,c
 29614  01415C  0EFF               	movlw	255
 29615  01415E  20E2               	addwfc	fsr1h,w,c
 29616  014160  6EEA               	movwf	fsr0h,c
 29617  014162  50EF               	movf	indf0,w,c
 29618  014164  26DE               	addwf	postinc2,f,c
 29619  014166  0E00               	movlw	0
 29620  014168  22DE               	addwfc	postinc2,f,c
 29621  01416A  22DE               	addwfc	postinc2,f,c
 29622  01416C  22DE               	addwfc	postinc2,f,c
 29623                           
 29624                           ;stkvar	_grs @ sp[(-13)+4]
 29625  01416E  50E1               	movf	fsr1l,w,c
 29626  014170  0FF7               	addlw	-9
 29627  014172  6ED9               	movwf	fsr2l,c
 29628  014174  50E2               	movf	fsr1h,w,c
 29629  014176  6EDA               	movwf	fsr2h,c
 29630  014178  0EFF               	movlw	255
 29631  01417A  22DA               	addwfc	fsr2h,f,c
 29632  01417C  0E08               	movlw	8
 29633  01417E                     u6995:
 29634  01417E  90D8               	bcf	status,0,c
 29635  014180  36DE               	rlcf	postinc2,f,c
 29636  014182  36DE               	rlcf	postinc2,f,c
 29637  014184  36DE               	rlcf	postinc2,f,c
 29638  014186  36DD               	rlcf	postdec2,f,c
 29639  014188  52DD               	movf	postdec2,f,c
 29640  01418A  52DD               	movf	postdec2,f,c
 29641  01418C  2EE8               	decfsz	wreg,f,c
 29642  01418E  D7F7               	goto	u6995
 29643                           
 29644                           ;stkvar	_b @ sp[(-13)+-4]
 29645  014190  0EF0               	movlw	240
 29646  014192  24E1               	addwf	fsr1l,w,c
 29647  014194  6ED9               	movwf	fsr2l,c
 29648  014196  0EFF               	movlw	255
 29649  014198  20E2               	addwfc	fsr1h,w,c
 29650  01419A  6EDA               	movwf	fsr2h,c
 29651  01419C  50DF               	movf	indf2,w,c
 29652  01419E  6E0C               	movwf	(btemp+11)^0,c
 29653                           
 29654                           ;stkvar	_a @ sp[(-13)+-8]
 29655  0141A0  0EEB               	movlw	-21
 29656  0141A2  50E3               	movf	plusw1,w,c
 29657  0141A4  020C               	mulwf	(btemp+11)^0,c
 29658                           
 29659                           ;stkvar	_temp @ sp[(-13)+8]
 29660  0141A6  0EFB               	movlw	-5
 29661  0141A8  006F FFCF FFE3     	movff	prodl,plusw1
 29662  0141AE  0EFC               	movlw	-4
 29663  0141B0  006F FFD3 FFE3     	movff	prodh,plusw1
 29664                           
 29665                           ;stkvar	_temp @ sp[(-13)+8]
 29666  0141B6  0EFB               	movlw	-5
 29667  0141B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 29668  0141BE  0EFC               	movlw	-4
 29669  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29670                           
 29671                           ;stkvar	_grs @ sp[(-13)+4]
 29672  0141C6  50E1               	movf	fsr1l,w,c
 29673  0141C8  0FF7               	addlw	-9
 29674  0141CA  6ED9               	movwf	fsr2l,c
 29675  0141CC  50E2               	movf	fsr1h,w,c
 29676  0141CE  6EDA               	movwf	fsr2h,c
 29677  0141D0  0EFF               	movlw	255
 29678  0141D2  22DA               	addwfc	fsr2h,f,c
 29679  0141D4  500B               	movf	(btemp+10)^0,w,c
 29680  0141D6  26DE               	addwf	postinc2,f,c
 29681  0141D8  500C               	movf	(btemp+11)^0,w,c
 29682  0141DA  22DE               	addwfc	postinc2,f,c
 29683  0141DC  0E00               	movlw	0
 29684  0141DE  22DE               	addwfc	postinc2,f,c
 29685  0141E0  22DE               	addwfc	postinc2,f,c
 29686                           
 29687                           ;stkvar	_b @ sp[(-13)+-4]
 29688  0141E2  0EEF               	movlw	-17
 29689  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29690                           
 29691                           ;stkvar	_a @ sp[(-13)+-8]
 29692  0141EA  0EEC               	movlw	236
 29693  0141EC  24E1               	addwf	fsr1l,w,c
 29694  0141EE  6ED9               	movwf	fsr2l,c
 29695  0141F0  0EFF               	movlw	255
 29696  0141F2  20E2               	addwfc	fsr1h,w,c
 29697  0141F4  6EDA               	movwf	fsr2h,c
 29698  0141F6  50DF               	movf	indf2,w,c
 29699  0141F8  020C               	mulwf	(btemp+11)^0,c
 29700                           
 29701                           ;stkvar	_temp @ sp[(-13)+8]
 29702  0141FA  0EFB               	movlw	-5
 29703  0141FC  006F FFCF FFE3     	movff	prodl,plusw1
 29704  014202  0EFC               	movlw	-4
 29705  014204  006F FFD3 FFE3     	movff	prodh,plusw1
 29706                           
 29707                           ;stkvar	_temp @ sp[(-13)+8]
 29708  01420A  0EFB               	movlw	-5
 29709  01420C  006F FF8C  F00B    	movff	plusw1,btemp+10
 29710  014212  0EFC               	movlw	-4
 29711  014214  006F FF8C  F00C    	movff	plusw1,btemp+11
 29712                           
 29713                           ;stkvar	_grs @ sp[(-13)+4]
 29714  01421A  50E1               	movf	fsr1l,w,c
 29715  01421C  0FF7               	addlw	-9
 29716  01421E  6ED9               	movwf	fsr2l,c
 29717  014220  50E2               	movf	fsr1h,w,c
 29718  014222  6EDA               	movwf	fsr2h,c
 29719  014224  0EFF               	movlw	255
 29720  014226  22DA               	addwfc	fsr2h,f,c
 29721  014228  500B               	movf	(btemp+10)^0,w,c
 29722  01422A  26DE               	addwf	postinc2,f,c
 29723  01422C  500C               	movf	(btemp+11)^0,w,c
 29724  01422E  22DE               	addwfc	postinc2,f,c
 29725  014230  0E00               	movlw	0
 29726  014232  22DE               	addwfc	postinc2,f,c
 29727  014234  22DE               	addwfc	postinc2,f,c
 29728                           
 29729                           ;stkvar	_grs @ sp[(-13)+4]
 29730  014236  50E1               	movf	fsr1l,w,c
 29731  014238  0FF7               	addlw	-9
 29732  01423A  6ED9               	movwf	fsr2l,c
 29733  01423C  50E2               	movf	fsr1h,w,c
 29734  01423E  6EDA               	movwf	fsr2h,c
 29735  014240  0EFF               	movlw	255
 29736  014242  22DA               	addwfc	fsr2h,f,c
 29737  014244  0E08               	movlw	8
 29738  014246                     u7005:
 29739  014246  90D8               	bcf	status,0,c
 29740  014248  36DE               	rlcf	postinc2,f,c
 29741  01424A  36DE               	rlcf	postinc2,f,c
 29742  01424C  36DE               	rlcf	postinc2,f,c
 29743  01424E  36DD               	rlcf	postdec2,f,c
 29744  014250  52DD               	movf	postdec2,f,c
 29745  014252  52DD               	movf	postdec2,f,c
 29746  014254  2EE8               	decfsz	wreg,f,c
 29747  014256  D7F7               	goto	u7005
 29748                           
 29749                           ;stkvar	_b @ sp[(-13)+-4]
 29750  014258  0EEF               	movlw	-17
 29751  01425A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29752                           
 29753                           ;stkvar	_a @ sp[(-13)+-8]
 29754  014260  0EEB               	movlw	-21
 29755  014262  50E3               	movf	plusw1,w,c
 29756  014264  020C               	mulwf	(btemp+11)^0,c
 29757                           
 29758                           ;stkvar	_temp @ sp[(-13)+8]
 29759  014266  0EFB               	movlw	-5
 29760  014268  006F FFCF FFE3     	movff	prodl,plusw1
 29761  01426E  0EFC               	movlw	-4
 29762  014270  006F FFD3 FFE3     	movff	prodh,plusw1
 29763                           
 29764                           ;stkvar	_temp @ sp[(-13)+8]
 29765  014276  0EFB               	movlw	-5
 29766  014278  006F FF8C  F00B    	movff	plusw1,btemp+10
 29767  01427E  0EFC               	movlw	-4
 29768  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 29769                           
 29770                           ;stkvar	_grs @ sp[(-13)+4]
 29771  014286  50E1               	movf	fsr1l,w,c
 29772  014288  0FF7               	addlw	-9
 29773  01428A  6ED9               	movwf	fsr2l,c
 29774  01428C  50E2               	movf	fsr1h,w,c
 29775  01428E  6EDA               	movwf	fsr2h,c
 29776  014290  0EFF               	movlw	255
 29777  014292  22DA               	addwfc	fsr2h,f,c
 29778  014294  500B               	movf	(btemp+10)^0,w,c
 29779  014296  26DE               	addwf	postinc2,f,c
 29780  014298  500C               	movf	(btemp+11)^0,w,c
 29781  01429A  22DE               	addwfc	postinc2,f,c
 29782  01429C  0E00               	movlw	0
 29783  01429E  22DE               	addwfc	postinc2,f,c
 29784  0142A0  22DE               	addwfc	postinc2,f,c
 29785                           
 29786                           ;stkvar	_b @ sp[(-13)+-4]
 29787  0142A2  0EF0               	movlw	240
 29788  0142A4  24E1               	addwf	fsr1l,w,c
 29789  0142A6  6ED9               	movwf	fsr2l,c
 29790  0142A8  0EFF               	movlw	255
 29791  0142AA  20E2               	addwfc	fsr1h,w,c
 29792  0142AC  6EDA               	movwf	fsr2h,c
 29793  0142AE  50DF               	movf	indf2,w,c
 29794  0142B0  6E0C               	movwf	(btemp+11)^0,c
 29795                           
 29796                           ;stkvar	_a @ sp[(-13)+-8]
 29797  0142B2  0EED               	movlw	237
 29798  0142B4  24E1               	addwf	fsr1l,w,c
 29799  0142B6  6ED9               	movwf	fsr2l,c
 29800  0142B8  0EFF               	movlw	255
 29801  0142BA  20E2               	addwfc	fsr1h,w,c
 29802  0142BC  6EDA               	movwf	fsr2h,c
 29803  0142BE  50DF               	movf	indf2,w,c
 29804  0142C0  020C               	mulwf	(btemp+11)^0,c
 29805                           
 29806                           ;stkvar	_temp @ sp[(-13)+8]
 29807  0142C2  0EFB               	movlw	-5
 29808  0142C4  006F FFCF FFE3     	movff	prodl,plusw1
 29809  0142CA  0EFC               	movlw	-4
 29810  0142CC  006F FFD3 FFE3     	movff	prodh,plusw1
 29811                           
 29812                           ;stkvar	_temp @ sp[(-13)+8]
 29813  0142D2  0EFB               	movlw	-5
 29814  0142D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 29815  0142DA  0EFC               	movlw	-4
 29816  0142DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 29817                           
 29818                           ;stkvar	_prod @ sp[(-13)+0]
 29819  0142E2  50E1               	movf	fsr1l,w,c
 29820  0142E4  0FF3               	addlw	-13
 29821  0142E6  6ED9               	movwf	fsr2l,c
 29822  0142E8  50E2               	movf	fsr1h,w,c
 29823  0142EA  6EDA               	movwf	fsr2h,c
 29824  0142EC  0EFF               	movlw	255
 29825  0142EE  22DA               	addwfc	fsr2h,f,c
 29826  0142F0  500B               	movf	(btemp+10)^0,w,c
 29827  0142F2  26DE               	addwf	postinc2,f,c
 29828  0142F4  500C               	movf	(btemp+11)^0,w,c
 29829  0142F6  22DE               	addwfc	postinc2,f,c
 29830  0142F8  0E00               	movlw	0
 29831  0142FA  22DE               	addwfc	postinc2,f,c
 29832  0142FC  22DE               	addwfc	postinc2,f,c
 29833                           
 29834                           ;stkvar	_b @ sp[(-13)+-4]
 29835  0142FE  0EF1               	movlw	241
 29836  014300  24E1               	addwf	fsr1l,w,c
 29837  014302  6ED9               	movwf	fsr2l,c
 29838  014304  0EFF               	movlw	255
 29839  014306  20E2               	addwfc	fsr1h,w,c
 29840  014308  6EDA               	movwf	fsr2h,c
 29841  01430A  50DF               	movf	indf2,w,c
 29842  01430C  6E0C               	movwf	(btemp+11)^0,c
 29843                           
 29844                           ;stkvar	_a @ sp[(-13)+-8]
 29845  01430E  0EEC               	movlw	236
 29846  014310  24E1               	addwf	fsr1l,w,c
 29847  014312  6ED9               	movwf	fsr2l,c
 29848  014314  0EFF               	movlw	255
 29849  014316  20E2               	addwfc	fsr1h,w,c
 29850  014318  6EDA               	movwf	fsr2h,c
 29851  01431A  50DF               	movf	indf2,w,c
 29852  01431C  020C               	mulwf	(btemp+11)^0,c
 29853                           
 29854                           ;stkvar	_temp @ sp[(-13)+8]
 29855  01431E  0EFB               	movlw	-5
 29856  014320  006F FFCF FFE3     	movff	prodl,plusw1
 29857  014326  0EFC               	movlw	-4
 29858  014328  006F FFD3 FFE3     	movff	prodh,plusw1
 29859                           
 29860                           ;stkvar	_temp @ sp[(-13)+8]
 29861  01432E  0EFB               	movlw	-5
 29862  014330  006F FF8C  F00B    	movff	plusw1,btemp+10
 29863  014336  0EFC               	movlw	-4
 29864  014338  006F FF8C  F00C    	movff	plusw1,btemp+11
 29865                           
 29866                           ;stkvar	_prod @ sp[(-13)+0]
 29867  01433E  50E1               	movf	fsr1l,w,c
 29868  014340  0FF3               	addlw	-13
 29869  014342  6ED9               	movwf	fsr2l,c
 29870  014344  50E2               	movf	fsr1h,w,c
 29871  014346  6EDA               	movwf	fsr2h,c
 29872  014348  0EFF               	movlw	255
 29873  01434A  22DA               	addwfc	fsr2h,f,c
 29874  01434C  500B               	movf	(btemp+10)^0,w,c
 29875  01434E  26DE               	addwf	postinc2,f,c
 29876  014350  500C               	movf	(btemp+11)^0,w,c
 29877  014352  22DE               	addwfc	postinc2,f,c
 29878  014354  0E00               	movlw	0
 29879  014356  22DE               	addwfc	postinc2,f,c
 29880  014358  22DE               	addwfc	postinc2,f,c
 29881                           
 29882                           ;stkvar	_b @ sp[(-13)+-4]
 29883  01435A  0EF1               	movlw	241
 29884  01435C  24E1               	addwf	fsr1l,w,c
 29885  01435E  6ED9               	movwf	fsr2l,c
 29886  014360  0EFF               	movlw	255
 29887  014362  20E2               	addwfc	fsr1h,w,c
 29888  014364  6EDA               	movwf	fsr2h,c
 29889  014366  50DF               	movf	indf2,w,c
 29890  014368  6E0C               	movwf	(btemp+11)^0,c
 29891                           
 29892                           ;stkvar	_a @ sp[(-13)+-8]
 29893  01436A  0EED               	movlw	237
 29894  01436C  24E1               	addwf	fsr1l,w,c
 29895  01436E  6ED9               	movwf	fsr2l,c
 29896  014370  0EFF               	movlw	255
 29897  014372  20E2               	addwfc	fsr1h,w,c
 29898  014374  6EDA               	movwf	fsr2h,c
 29899  014376  50DF               	movf	indf2,w,c
 29900  014378  020C               	mulwf	(btemp+11)^0,c
 29901                           
 29902                           ;stkvar	_temp @ sp[(-13)+8]
 29903  01437A  0EFB               	movlw	-5
 29904  01437C  006F FFCF FFE3     	movff	prodl,plusw1
 29905  014382  0EFC               	movlw	-4
 29906  014384  006F FFD3 FFE3     	movff	prodh,plusw1
 29907                           
 29908                           ;stkvar	_temp @ sp[(-13)+8]
 29909  01438A  0EFB               	movlw	-5
 29910  01438C  006F FF8C  F00B    	movff	plusw1,btemp+10
 29911  014392  0EFC               	movlw	-4
 29912  014394  006F FF8C  F00C    	movff	plusw1,btemp+11
 29913  01439A  500B               	movf	(btemp+10)^0,w,c
 29914  01439C  6E05               	movwf	(btemp+4)^0,c
 29915  01439E  500C               	movf	(btemp+11)^0,w,c
 29916  0143A0  6E06               	movwf	(btemp+5)^0,c
 29917  0143A2  6A07               	clrf	(btemp+6)^0,c
 29918  0143A4  6A08               	clrf	(btemp+7)^0,c
 29919  0143A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 29920  0143AC  0060  F018  F007   	movff	btemp+5,btemp+6
 29921  0143B2  0060  F014  F006   	movff	btemp+4,btemp+5
 29922  0143B8  6A05               	clrf	(btemp+4)^0,c
 29923                           
 29924                           ;stkvar	_prod @ sp[(-13)+0]
 29925  0143BA  50E1               	movf	fsr1l,w,c
 29926  0143BC  0FF3               	addlw	-13
 29927  0143BE  6ED9               	movwf	fsr2l,c
 29928  0143C0  50E2               	movf	fsr1h,w,c
 29929  0143C2  6EDA               	movwf	fsr2h,c
 29930  0143C4  0EFF               	movlw	255
 29931  0143C6  22DA               	addwfc	fsr2h,f,c
 29932  0143C8  5005               	movf	(btemp+4)^0,w,c
 29933  0143CA  26DE               	addwf	postinc2,f,c
 29934  0143CC  5006               	movf	(btemp+5)^0,w,c
 29935  0143CE  22DE               	addwfc	postinc2,f,c
 29936  0143D0  5007               	movf	(btemp+6)^0,w,c
 29937  0143D2  22DE               	addwfc	postinc2,f,c
 29938  0143D4  5008               	movf	(btemp+7)^0,w,c
 29939  0143D6  22DE               	addwfc	postinc2,f,c
 29940                           
 29941                           ;stkvar	_prod @ sp[(-13)+0]
 29942  0143D8  50E1               	movf	fsr1l,w,c
 29943  0143DA  0FF3               	addlw	-13
 29944  0143DC  6ED9               	movwf	fsr2l,c
 29945  0143DE  50E2               	movf	fsr1h,w,c
 29946  0143E0  6EDA               	movwf	fsr2h,c
 29947  0143E2  0EFF               	movlw	255
 29948  0143E4  22DA               	addwfc	fsr2h,f,c
 29949                           
 29950                           ;stkvar	_grs @ sp[(-13)+4]
 29951  0143E6  0EFA               	movlw	250
 29952  0143E8  24E1               	addwf	fsr1l,w,c
 29953  0143EA  6EE9               	movwf	fsr0l,c
 29954  0143EC  0EFF               	movlw	255
 29955  0143EE  20E2               	addwfc	fsr1h,w,c
 29956  0143F0  6EEA               	movwf	fsr0h,c
 29957  0143F2  50EF               	movf	indf0,w,c
 29958  0143F4  26DE               	addwf	postinc2,f,c
 29959  0143F6  0E00               	movlw	0
 29960  0143F8  22DE               	addwfc	postinc2,f,c
 29961  0143FA  22DE               	addwfc	postinc2,f,c
 29962  0143FC  22DE               	addwfc	postinc2,f,c
 29963                           
 29964                           ;stkvar	_grs @ sp[(-13)+4]
 29965  0143FE  50E1               	movf	fsr1l,w,c
 29966  014400  0FF7               	addlw	-9
 29967  014402  6ED9               	movwf	fsr2l,c
 29968  014404  50E2               	movf	fsr1h,w,c
 29969  014406  6EDA               	movwf	fsr2h,c
 29970  014408  0EFF               	movlw	255
 29971  01440A  22DA               	addwfc	fsr2h,f,c
 29972  01440C  0E08               	movlw	8
 29973  01440E                     u7015:
 29974  01440E  90D8               	bcf	status,0,c
 29975  014410  36DE               	rlcf	postinc2,f,c
 29976  014412  36DE               	rlcf	postinc2,f,c
 29977  014414  36DE               	rlcf	postinc2,f,c
 29978  014416  36DD               	rlcf	postdec2,f,c
 29979  014418  52DD               	movf	postdec2,f,c
 29980  01441A  52DD               	movf	postdec2,f,c
 29981  01441C  2EE8               	decfsz	wreg,f,c
 29982  01441E  D7F7               	goto	u7015
 29983  014420  0E82               	movlw	130
 29984  014422  6E0B               	movwf	(btemp+10)^0,c
 29985  014424  0EFF               	movlw	255
 29986  014426  6E0C               	movwf	(btemp+11)^0,c
 29987                           
 29988                           ;stkvar	_bexp @ sp[(-13)+10]
 29989  014428  0EFD               	movlw	-3
 29990  01442A  50E3               	movf	plusw1,w,c
 29991  01442C  6E09               	movwf	(btemp+8)^0,c
 29992  01442E  6A0A               	clrf	(btemp+9)^0,c
 29993                           
 29994                           ;stkvar	_aexp @ sp[(-13)+11]
 29995  014430  0EFE               	movlw	-2
 29996  014432  50E3               	movf	plusw1,w,c
 29997  014434  2609               	addwf	(btemp+8)^0,f,c
 29998  014436  0E00               	movlw	0
 29999  014438  220A               	addwfc	(btemp+9)^0,f,c
 30000  01443A  500B               	movf	(btemp+10)^0,w,c
 30001  01443C  2609               	addwf	(btemp+8)^0,f,c
 30002  01443E  500C               	movf	(btemp+11)^0,w,c
 30003  014440  220A               	addwfc	(btemp+9)^0,f,c
 30004                           
 30005                           ;stkvar	_temp @ sp[(-13)+8]
 30006  014442  0EFB               	movlw	-5
 30007  014444  0060  F027  FFE3   	movff	btemp+8,plusw1
 30008  01444A  0EFC               	movlw	-4
 30009  01444C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30010  014452  D021               	goto	l8694
 30011  014454                     l8684:
 30012                           
 30013                           ;stkvar	_prod @ sp[(-13)+0]
 30014  014454  90D8               	bcf	status,0,c
 30015  014456  0EF3               	movlw	-13
 30016  014458  36E3               	rlcf	plusw1,f,c
 30017  01445A  0EF4               	movlw	-12
 30018  01445C  36E3               	rlcf	plusw1,f,c
 30019  01445E  0EF5               	movlw	-11
 30020  014460  36E3               	rlcf	plusw1,f,c
 30021  014462  0EF6               	movlw	-10
 30022  014464  36E3               	rlcf	plusw1,f,c
 30023                           
 30024                           ;stkvar	_grs @ sp[(-13)+4]
 30025  014466  0EFA               	movlw	-6
 30026  014468  AEE3               	btfss	plusw1,7,c
 30027  01446A  D002               	goto	l8690
 30028                           
 30029                           ;stkvar	_prod @ sp[(-13)+0]
 30030  01446C  0EF3               	movlw	-13
 30031  01446E  80E3               	bsf	plusw1,0,c
 30032  014470                     l8690:
 30033                           
 30034                           ;stkvar	_grs @ sp[(-13)+4]
 30035  014470  90D8               	bcf	status,0,c
 30036  014472  0EF7               	movlw	-9
 30037  014474  36E3               	rlcf	plusw1,f,c
 30038  014476  0EF8               	movlw	-8
 30039  014478  36E3               	rlcf	plusw1,f,c
 30040  01447A  0EF9               	movlw	-7
 30041  01447C  36E3               	rlcf	plusw1,f,c
 30042  01447E  0EFA               	movlw	-6
 30043  014480  36E3               	rlcf	plusw1,f,c
 30044                           
 30045                           ;stkvar	_temp @ sp[(-13)+8]
 30046  014482  50E1               	movf	fsr1l,w,c
 30047  014484  0FFB               	addlw	-5
 30048  014486  6ED9               	movwf	fsr2l,c
 30049  014488  50E2               	movf	fsr1h,w,c
 30050  01448A  6EDA               	movwf	fsr2h,c
 30051  01448C  0EFF               	movlw	255
 30052  01448E  22DA               	addwfc	fsr2h,f,c
 30053  014490  06DE               	decf	postinc2,f,c
 30054  014492  0E00               	movlw	0
 30055  014494  5ADD               	subwfb	postdec2,f,c
 30056  014496                     l8694:
 30057                           
 30058                           ;stkvar	_prod @ sp[(-13)+0]
 30059  014496  0EF5               	movlw	-11
 30060  014498  AEE3               	btfss	plusw1,7,c
 30061  01449A  D7DC               	goto	l8684
 30062                           
 30063                           ;stkvar	_aexp @ sp[(-13)+11]
 30064  01449C  0EFE               	movlw	-2
 30065  01449E  6AE3               	clrf	plusw1,c
 30066                           
 30067                           ;stkvar	_grs @ sp[(-13)+4]
 30068  0144A0  0EFA               	movlw	-6
 30069  0144A2  AEE3               	btfss	plusw1,7,c
 30070  0144A4  D020               	goto	l8708
 30071                           
 30072                           ;stkvar	_grs @ sp[(-13)+4]
 30073  0144A6  50E1               	movf	fsr1l,w,c
 30074  0144A8  0FF7               	addlw	-9
 30075  0144AA  6ED9               	movwf	fsr2l,c
 30076  0144AC  50E2               	movf	fsr1h,w,c
 30077  0144AE  6EDA               	movwf	fsr2h,c
 30078  0144B0  0EFF               	movlw	255
 30079  0144B2  22DA               	addwfc	fsr2h,f,c
 30080  0144B4  0EFF               	movlw	255
 30081  0144B6  14DE               	andwf	postinc2,w,c
 30082  0144B8  6E09               	movwf	(btemp+8)^0,c
 30083  0144BA  0EFF               	movlw	255
 30084  0144BC  14DE               	andwf	postinc2,w,c
 30085  0144BE  6E0A               	movwf	(btemp+9)^0,c
 30086  0144C0  0EFF               	movlw	255
 30087  0144C2  14DE               	andwf	postinc2,w,c
 30088  0144C4  6E0B               	movwf	(btemp+10)^0,c
 30089  0144C6  0E7F               	movlw	127
 30090  0144C8  14DE               	andwf	postinc2,w,c
 30091  0144CA  6E0C               	movwf	(btemp+11)^0,c
 30092  0144CC  5009               	movf	(btemp+8)^0,w,c
 30093  0144CE  100A               	iorwf	(btemp+9)^0,w,c
 30094  0144D0  100B               	iorwf	(btemp+10)^0,w,c
 30095  0144D2  100C               	iorwf	(btemp+11)^0,w,c
 30096  0144D4  B4D8               	btfsc	status,2,c
 30097  0144D6  D004               	goto	l8704
 30098  0144D8                     u7050:
 30099                           
 30100                           ;stkvar	_aexp @ sp[(-13)+11]
 30101  0144D8  0EFE               	movlw	-2
 30102  0144DA  6AE3               	clrf	plusw1,c
 30103  0144DC  2AE3               	incf	plusw1,f,c
 30104  0144DE  D003               	goto	l8708
 30105  0144E0                     l8704:
 30106                           
 30107                           ;stkvar	_prod @ sp[(-13)+0]
 30108  0144E0  0EF3               	movlw	-13
 30109  0144E2  B0E3               	btfsc	plusw1,0,c
 30110  0144E4  D7F9               	goto	u7050
 30111  0144E6                     l8708:
 30112                           
 30113                           ;stkvar	_aexp @ sp[(-13)+11]
 30114  0144E6  0EFE               	movlw	-2
 30115  0144E8  50E3               	movf	plusw1,w,c
 30116  0144EA  B4D8               	btfsc	status,2,c
 30117  0144EC  D036               	goto	l8718
 30118                           
 30119                           ;stkvar	_prod @ sp[(-13)+0]
 30120  0144EE  50E1               	movf	fsr1l,w,c
 30121  0144F0  0FF3               	addlw	-13
 30122  0144F2  6ED9               	movwf	fsr2l,c
 30123  0144F4  50E2               	movf	fsr1h,w,c
 30124  0144F6  6EDA               	movwf	fsr2h,c
 30125  0144F8  0EFF               	movlw	255
 30126  0144FA  22DA               	addwfc	fsr2h,f,c
 30127  0144FC  2ADE               	incf	postinc2,f,c
 30128  0144FE  0E00               	movlw	0
 30129  014500  22DE               	addwfc	postinc2,f,c
 30130  014502  22DE               	addwfc	postinc2,f,c
 30131  014504  22DE               	addwfc	postinc2,f,c
 30132                           
 30133                           ;stkvar	_prod @ sp[(-13)+0]
 30134  014506  0EF6               	movlw	-10
 30135  014508  A0E3               	btfss	plusw1,0,c
 30136  01450A  D027               	goto	l8718
 30137  01450C  0E01               	movlw	1
 30138  01450E  6E0C               	movwf	(btemp+11)^0,c
 30139                           
 30140                           ;stkvar	_prod @ sp[(-13)+0]
 30141  014510  50E1               	movf	fsr1l,w,c
 30142  014512  0FF3               	addlw	-13
 30143  014514  6ED9               	movwf	fsr2l,c
 30144  014516  50E2               	movf	fsr1h,w,c
 30145  014518  6EDA               	movwf	fsr2h,c
 30146  01451A  0EFF               	movlw	255
 30147  01451C  22DA               	addwfc	fsr2h,f,c
 30148  01451E  280C               	incf	(btemp+11)^0,w,c
 30149  014520  52DE               	movf	postinc2,f,c
 30150  014522  D008               	goto	u7090
 30151  014524                     u7095:
 30152  014524  52DE               	movf	postinc2,f,c
 30153  014526  90D8               	bcf	status,0,c
 30154  014528  BEDC               	btfsc	preinc2,7,c
 30155  01452A  80D8               	bsf	status,0,c
 30156  01452C  32DD               	rrcf	postdec2,f,c
 30157  01452E  32DD               	rrcf	postdec2,f,c
 30158  014530  32DD               	rrcf	postdec2,f,c
 30159  014532  32DE               	rrcf	postinc2,f,c
 30160  014534                     u7090:
 30161  014534  2EE8               	decfsz	wreg,f,c
 30162  014536  D7F6               	goto	u7095
 30163                           
 30164                           ;stkvar	_temp @ sp[(-13)+8]
 30165  014538  0EFB               	movlw	-5
 30166  01453A  50E3               	movf	plusw1,w,c
 30167  01453C  0F01               	addlw	1
 30168  01453E  6E01               	movwf	btemp^0,c
 30169  014540  0EFB               	movlw	-5
 30170  014542  0060  F007  FFE3   	movff	btemp,plusw1
 30171  014548  6A01               	clrf	btemp^0,c
 30172  01454A  0EFC               	movlw	-4
 30173  01454C  50E3               	movf	plusw1,w,c
 30174  01454E  2001               	addwfc	btemp^0,w,c
 30175  014550  6E01               	movwf	btemp^0,c
 30176  014552  0EFC               	movlw	-4
 30177  014554  0060  F007  FFE3   	movff	btemp,plusw1
 30178  01455A                     l8718:
 30179                           
 30180                           ;stkvar	_temp @ sp[(-13)+8]
 30181  01455A  0EFC               	movlw	-4
 30182  01455C  BEE3               	btfsc	plusw1,7,c
 30183  01455E  D020               	goto	l8722
 30184  014560  0EFC               	movlw	-4
 30185  014562  50E3               	movf	plusw1,w,c
 30186  014564  E104               	bnz	u7100
 30187  014566  0EFB               	movlw	-5
 30188  014568  28E3               	incf	plusw1,w,c
 30189  01456A  A0D8               	btfss	status,0,c
 30190  01456C  D019               	goto	l8722
 30191  01456E                     u7100:
 30192  01456E  0E00               	movlw	0
 30193  014570  6E09               	movwf	(btemp+8)^0,c
 30194  014572  0E00               	movlw	0
 30195  014574  6E0A               	movwf	(btemp+9)^0,c
 30196  014576  0E80               	movlw	128
 30197  014578  6E0B               	movwf	(btemp+10)^0,c
 30198  01457A  0E7F               	movlw	127
 30199  01457C  6E0C               	movwf	(btemp+11)^0,c
 30200                           
 30201                           ;stkvar	_prod @ sp[(-13)+0]
 30202  01457E  0EF3               	movlw	-13
 30203  014580  0060  F027  FFE3   	movff	btemp+8,plusw1
 30204  014586  0EF4               	movlw	-12
 30205  014588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30206  01458E  0EF5               	movlw	-11
 30207  014590  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30208  014596  0EF6               	movlw	-10
 30209  014598  0060  F033  FFE3   	movff	btemp+11,plusw1
 30210  01459E  D044               	goto	l8738
 30211  0145A0                     l8722:
 30212                           
 30213                           ;stkvar	_temp @ sp[(-13)+8]
 30214  0145A0  0EFC               	movlw	-4
 30215  0145A2  BEE3               	btfsc	plusw1,7,c
 30216  0145A4  D007               	goto	u7110
 30217  0145A6  0EFC               	movlw	-4
 30218  0145A8  50E3               	movf	plusw1,w,c
 30219  0145AA  E10F               	bnz	l8728
 30220  0145AC  0EFB               	movlw	-5
 30221  0145AE  04E3               	decf	plusw1,w,c
 30222  0145B0  B0D8               	btfsc	status,0,c
 30223  0145B2  D00B               	goto	l8728
 30224  0145B4                     u7110:
 30225                           
 30226                           ;stkvar	_prod @ sp[(-13)+0]
 30227  0145B4  0EF3               	movlw	-13
 30228  0145B6  6AE3               	clrf	plusw1,c
 30229  0145B8  0EF4               	movlw	-12
 30230  0145BA  6AE3               	clrf	plusw1,c
 30231  0145BC  0EF5               	movlw	-11
 30232  0145BE  6AE3               	clrf	plusw1,c
 30233  0145C0  0EF6               	movlw	-10
 30234  0145C2  6AE3               	clrf	plusw1,c
 30235                           
 30236                           ;stkvar	_sign @ sp[(-13)+12]
 30237  0145C4  0EFF               	movlw	-1
 30238  0145C6  6AE3               	clrf	plusw1,c
 30239  0145C8  D02F               	goto	l8738
 30240  0145CA                     l8728:
 30241                           
 30242                           ;stkvar	_temp @ sp[(-13)+8]
 30243                           ;stkvar	_bexp @ sp[(-13)+10]
 30244  0145CA  0EFB               	movlw	-5
 30245  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30246  0145D2  0EFD               	movlw	-3
 30247  0145D4  0060  F007  FFE3   	movff	btemp,plusw1
 30248                           
 30249                           ;stkvar	_prod @ sp[(-13)+0]
 30250  0145DA  50E1               	movf	fsr1l,w,c
 30251  0145DC  0FF3               	addlw	-13
 30252  0145DE  6ED9               	movwf	fsr2l,c
 30253  0145E0  50E2               	movf	fsr1h,w,c
 30254  0145E2  6EDA               	movwf	fsr2h,c
 30255  0145E4  0EFF               	movlw	255
 30256  0145E6  22DA               	addwfc	fsr2h,f,c
 30257  0145E8  0EFF               	movlw	255
 30258  0145EA  16DE               	andwf	postinc2,f,c
 30259  0145EC  0EFF               	movlw	255
 30260  0145EE  16DE               	andwf	postinc2,f,c
 30261  0145F0  0E7F               	movlw	127
 30262  0145F2  16DE               	andwf	postinc2,f,c
 30263  0145F4  0E00               	movlw	0
 30264  0145F6  16DE               	andwf	postinc2,f,c
 30265                           
 30266                           ;stkvar	_bexp @ sp[(-13)+10]
 30267  0145F8  0EFD               	movlw	-3
 30268  0145FA  A0E3               	btfss	plusw1,0,c
 30269  0145FC  D008               	goto	l8736
 30270                           
 30271                           ;stkvar	_prod @ sp[(-13)+0]
 30272  0145FE  0EF5               	movlw	245
 30273  014600  24E1               	addwf	fsr1l,w,c
 30274  014602  6ED9               	movwf	fsr2l,c
 30275  014604  0EFF               	movlw	255
 30276  014606  20E2               	addwfc	fsr1h,w,c
 30277  014608  6EDA               	movwf	fsr2h,c
 30278  01460A  0E00               	movlw	0
 30279  01460C  8EDB               	bsf	plusw2,7,c
 30280  01460E                     l8736:
 30281                           
 30282                           ;stkvar	_prod @ sp[(-13)+0]
 30283  01460E  0EF6               	movlw	246
 30284  014610  24E1               	addwf	fsr1l,w,c
 30285  014612  6ED9               	movwf	fsr2l,c
 30286  014614  0EFF               	movlw	255
 30287  014616  20E2               	addwfc	fsr1h,w,c
 30288  014618  6EDA               	movwf	fsr2h,c
 30289                           
 30290                           ;stkvar	_bexp @ sp[(-13)+10]
 30291  01461A  0EFD               	movlw	-3
 30292  01461C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30293  014622  90D8               	bcf	status,0,c
 30294  014624  300C               	rrcf	(btemp+11)^0,w,c
 30295  014626  6EDF               	movwf	indf2,c
 30296  014628                     l8738:
 30297                           
 30298                           ;stkvar	_sign @ sp[(-13)+12]
 30299  014628  0EFF               	movlw	-1
 30300  01462A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30301                           
 30302                           ;stkvar	_prod @ sp[(-13)+0]
 30303  014630  0EF6               	movlw	246
 30304  014632  24E1               	addwf	fsr1l,w,c
 30305  014634  6ED9               	movwf	fsr2l,c
 30306  014636  0EFF               	movlw	255
 30307  014638  20E2               	addwfc	fsr1h,w,c
 30308  01463A  6EDA               	movwf	fsr2h,c
 30309  01463C  500C               	movf	(btemp+11)^0,w,c
 30310  01463E  12DF               	iorwf	indf2,f,c
 30311                           
 30312                           ;stkvar	_prod @ sp[(-13)+0]
 30313  014640  0EF3               	movlw	-13
 30314  014642  006F FF8C  F001    	movff	plusw1,btemp
 30315  014648  0EF4               	movlw	-12
 30316  01464A  006F FF8C  F002    	movff	plusw1,btemp+1
 30317  014650  0EF5               	movlw	-11
 30318  014652  006F FF8C  F003    	movff	plusw1,btemp+2
 30319  014658  0EF6               	movlw	-10
 30320  01465A  006F FF8C  F004    	movff	plusw1,btemp+3
 30321  014660                     l3127:
 30322                           
 30323                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30324  014660  0EEB               	movlw	235
 30325  014662  26E1               	addwf	fsr1l,f,c
 30326  014664  0EFF               	movlw	255
 30327  014666  22E2               	addwfc	fsr1h,f,c
 30328  014668  0012               	return		;funcret
 30329  01466A                     __end_of___flmul:
 30330                           	opt callstack 0
 30331                           
 30332 ;; *************** function _SYSTEM_Initialize *****************
 30333 ;; Defined at:
 30334 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30335 ;; Parameters:    Size  Location     Type
 30336 ;;		None
 30337 ;; Auto vars:     Size  Location     Type
 30338 ;;		None
 30339 ;; Return value:  Size  Location     Type
 30340 ;;                  1  [STACK] void 
 30341 ;; Registers used:
 30342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30343 ;; Tracked objects:
 30344 ;;		On entry : 0/0
 30345 ;;		On exit  : 3F/3C
 30346 ;;		Unchanged: 0/0
 30347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30352 ;;Total ram usage:        0 bytes
 30353 ;; Hardware stack levels used:    1
 30354 ;; Hardware stack levels required when called:   17
 30355 ;; This function calls:
 30356 ;;		_ADCC_Initialize
 30357 ;;		_CLKREF_Initialize
 30358 ;;		_DMA1_Initialize
 30359 ;;		_DMA2_Initialize
 30360 ;;		_EXT_INT_Initialize
 30361 ;;		_FVR_Initialize
 30362 ;;		_INTERRUPT_Initialize
 30363 ;;		_OSCILLATOR_Initialize
 30364 ;;		_PIN_MANAGER_Initialize
 30365 ;;		_PMD_Initialize
 30366 ;;		_PWM8_Initialize
 30367 ;;		_SPI1_Initialize
 30368 ;;		_TMR2_Initialize
 30369 ;;		_TMR3_Initialize
 30370 ;;		_TMR5_Initialize
 30371 ;;		_TMR6_Initialize
 30372 ;;		_UART1_Initialize
 30373 ;;		_UART2_Initialize
 30374 ;; This function is called by:
 30375 ;;		_main
 30376 ;; This function uses a reentrant model
 30377 ;;
 30378                           
 30379                           	psect	text115
 30380  01B9A4                     __ptext115:
 30381                           	opt callstack 0
 30382  01B9A4                     _SYSTEM_Initialize:
 30383                           	opt callstack 13
 30384                           
 30385                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30386                           
 30387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30388                           ;incstack = 0
 30389  01B9A4  ECB6  F0DA         	call	_INTERRUPT_Initialize	;wreg free
 30390                           
 30391                           ; BSR set to: 57
 30392                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30393  01B9A8  EC1C  F0E3         	call	_PMD_Initialize	;wreg free
 30394                           
 30395                           ; BSR set to: 57
 30396                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30397  01B9AC  ECA0  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30398                           
 30399                           ; BSR set to: 58
 30400                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30401  01B9B0  EC11  F0E3         	call	_OSCILLATOR_Initialize	;wreg free
 30402                           
 30403                           ; BSR set to: 57
 30404                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30405  01B9B4  EC9F  F0E3         	call	_FVR_Initialize	;wreg free
 30406                           
 30407                           ; BSR set to: 62
 30408                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30409  01B9B8  EC18  F0DA         	call	_ADCC_Initialize	;wreg free
 30410                           
 30411                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 30412  01B9BC  EC06  F0E3         	call	_PWM8_Initialize	;wreg free
 30413                           
 30414                           ; BSR set to: 63
 30415                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 30416  01B9C0  ECEF  F0E2         	call	_TMR2_Initialize	;wreg free
 30417                           
 30418                           ; BSR set to: 57
 30419                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30420  01B9C4  ECA8  F0DF         	call	_EXT_INT_Initialize	;wreg free
 30421                           
 30422                           ; BSR set to: 57
 30423                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30424  01B9C8  EC7C  F0E0         	call	_TMR6_Initialize	;wreg free
 30425                           
 30426                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30427  01B9CC  EC63  F0DD         	call	_TMR3_Initialize	;wreg free
 30428                           
 30429                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30430  01B9D0  EC3F  F0DD         	call	_TMR5_Initialize	;wreg free
 30431                           
 30432                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30433  01B9D4  EC1B  F0DD         	call	_UART1_Initialize	;wreg free
 30434                           
 30435                           ; BSR set to: 57
 30436                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30437  01B9D8  EC7D  F0DB         	call	_UART2_Initialize	;wreg free
 30438                           
 30439                           ; BSR set to: 57
 30440                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30441  01B9DC  ECFB  F0E2         	call	_SPI1_Initialize	;wreg free
 30442                           
 30443                           ; BSR set to: 61
 30444                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30445  01B9E0  EC07  F0DC         	call	_DMA2_Initialize	;wreg free
 30446                           
 30447                           ; BSR set to: 59
 30448                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30449  01B9E4  ECE3  F0D9         	call	_DMA1_Initialize	;wreg free
 30450                           
 30451                           ; BSR set to: 59
 30452                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30453  01B9E8  EC73  F0E3         	call	_CLKREF_Initialize	;wreg free
 30454                           
 30455                           ; BSR set to: 60
 30456                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30457  01B9EC  0012               	return		;funcret
 30458  01B9EE                     __end_of_SYSTEM_Initialize:
 30459                           	opt callstack 0
 30460                           
 30461 ;; *************** function _UART2_Initialize *****************
 30462 ;; Defined at:
 30463 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30464 ;; Parameters:    Size  Location     Type
 30465 ;;		None
 30466 ;; Auto vars:     Size  Location     Type
 30467 ;;		None
 30468 ;; Return value:  Size  Location     Type
 30469 ;;                  1  [STACK] void 
 30470 ;; Registers used:
 30471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30472 ;; Tracked objects:
 30473 ;;		On entry : 3F/39
 30474 ;;		On exit  : 3F/39
 30475 ;;		Unchanged: 0/0
 30476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30481 ;;Total ram usage:        0 bytes
 30482 ;; Hardware stack levels used:    1
 30483 ;; Hardware stack levels required when called:   16
 30484 ;; This function calls:
 30485 ;;		_UART2_SetRxInterruptHandler
 30486 ;;		_UART2_SetTxInterruptHandler
 30487 ;; This function is called by:
 30488 ;;		_SYSTEM_Initialize
 30489 ;; This function uses a reentrant model
 30490 ;;
 30491                           
 30492                           	psect	text116
 30493  01B6FA                     __ptext116:
 30494                           	opt callstack 0
 30495  01B6FA                     _UART2_Initialize:
 30496                           	opt callstack 13
 30497                           
 30498                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30499                           
 30500                           ; BSR set to: 60
 30501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30502                           ;incstack = 0
 30503  01B6FA  0139               	movlb	57	; () banked
 30504  01B6FC  9596               	bcf	150,2,b	;volatile
 30505                           
 30506                           ; BSR set to: 57
 30507                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30508  01B6FE  0EDA               	movlw	low _UART2_Receive_ISR
 30509  01B700  6EE6               	movwf	postinc1,c
 30510  01B702  0EC4               	movlw	high _UART2_Receive_ISR
 30511  01B704  6EE6               	movwf	postinc1,c
 30512  01B706  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30513  01B708  6EE6               	movwf	postinc1,c
 30514  01B70A  ECCD  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30515                           
 30516                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30517  01B70E  0139               	movlb	57	; () banked
 30518  01B710  9796               	bcf	150,3,b	;volatile
 30519                           
 30520                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30521  01B712  0ECC               	movlw	low _UART2_Transmit_ISR
 30522  01B714  6EE6               	movwf	postinc1,c
 30523  01B716  0EC0               	movlw	high _UART2_Transmit_ISR
 30524  01B718  6EE6               	movwf	postinc1,c
 30525  01B71A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30526  01B71C  6EE6               	movwf	postinc1,c
 30527  01B71E  ECB9  F0E0         	call	_UART2_SetTxInterruptHandler	;wreg free
 30528                           
 30529                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30530  01B722  013D               	movlb	61	; () banked
 30531  01B724  6BD4               	clrf	212,b	;volatile
 30532                           
 30533                           ; BSR set to: 61
 30534                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30535  01B726  6BD6               	clrf	214,b	;volatile
 30536                           
 30537                           ; BSR set to: 61
 30538                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30539  01B728  6BD8               	clrf	216,b	;volatile
 30540                           
 30541                           ; BSR set to: 61
 30542                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30543  01B72A  0EB0               	movlw	176
 30544  01B72C  6FDA               	movwf	218,b	;volatile
 30545                           
 30546                           ; BSR set to: 61
 30547                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30548  01B72E  0E80               	movlw	128
 30549  01B730  6FDB               	movwf	219,b	;volatile
 30550                           
 30551                           ; BSR set to: 61
 30552                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30553  01B732  6BDC               	clrf	220,b	;volatile
 30554                           
 30555                           ; BSR set to: 61
 30556                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30557  01B734  0E82               	movlw	130
 30558  01B736  6FDD               	movwf	221,b	;volatile
 30559                           
 30560                           ; BSR set to: 61
 30561                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30562  01B738  0E06               	movlw	6
 30563  01B73A  6FDE               	movwf	222,b	;volatile
 30564                           
 30565                           ; BSR set to: 61
 30566                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30567  01B73C  6BDF               	clrf	223,b	;volatile
 30568                           
 30569                           ; BSR set to: 61
 30570                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30571  01B73E  6BE0               	clrf	224,b	;volatile
 30572                           
 30573                           ; BSR set to: 61
 30574                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30575  01B740  6BE1               	clrf	225,b	;volatile
 30576                           
 30577                           ; BSR set to: 61
 30578                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30579  01B742  6BE2               	clrf	226,b	;volatile
 30580                           
 30581                           ; BSR set to: 61
 30582                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30583  01B744  0100               	movlb	0	; () banked
 30584  01B746  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30588  01B748  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30589                           
 30590                           ; BSR set to: 0
 30591                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30592  01B74A  0E40               	movlw	64
 30593  01B74C  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30594                           
 30595                           ; BSR set to: 0
 30596                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30597  01B74E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30598                           
 30599                           ; BSR set to: 0
 30600                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30601  01B750  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30602                           
 30603                           ; BSR set to: 0
 30604                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30605  01B752  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30606                           
 30607                           ; BSR set to: 0
 30608                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30609  01B754  0139               	movlb	57	; () banked
 30610  01B756  8596               	bsf	150,2,b	;volatile
 30611                           
 30612                           ; BSR set to: 57
 30613                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30614  01B758  0012               	return		;funcret
 30615  01B75A                     __end_of_UART2_Initialize:
 30616                           	opt callstack 0
 30617                           
 30618 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30619 ;; Defined at:
 30620 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30621 ;; Parameters:    Size  Location     Type
 30622 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30623 ;;		 -> UART2_Transmit_ISR(1), 
 30624 ;; Auto vars:     Size  Location     Type
 30625 ;;		None
 30626 ;; Return value:  Size  Location     Type
 30627 ;;                  1  [STACK] void 
 30628 ;; Registers used:
 30629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30630 ;; Tracked objects:
 30631 ;;		On entry : 3F/39
 30632 ;;		On exit  : 0/0
 30633 ;;		Unchanged: 0/0
 30634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30639 ;;Total ram usage:        0 bytes
 30640 ;; Hardware stack levels used:    1
 30641 ;; Hardware stack levels required when called:   15
 30642 ;; This function calls:
 30643 ;;		Nothing
 30644 ;; This function is called by:
 30645 ;;		_UART2_Initialize
 30646 ;; This function uses a reentrant model
 30647 ;;
 30648                           
 30649                           	psect	text117
 30650  01C172                     __ptext117:
 30651                           	opt callstack 0
 30652  01C172                     _UART2_SetTxInterruptHandler:
 30653                           	opt callstack 13
 30654                           
 30655                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30656                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30657                           
 30658                           ; BSR set to: 57
 30659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30660                           ;incstack = 0
 30661  01C172  50E1               	movf	fsr1l,w,c
 30662  01C174  0FFD               	addlw	-3
 30663  01C176  6ED9               	movwf	fsr2l,c
 30664  01C178  50E2               	movf	fsr1h,w,c
 30665  01C17A  6EDA               	movwf	fsr2h,c
 30666  01C17C  0EFF               	movlw	255
 30667  01C17E  22DA               	addwfc	fsr2h,f,c
 30668  01C180  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30669  01C186  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30670  01C18C  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30671                           
 30672                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30673  01C192  52E5               	movf	postdec1,f,c
 30674  01C194  52E5               	movf	postdec1,f,c
 30675  01C196  52E5               	movf	postdec1,f,c
 30676  01C198  0012               	return		;funcret
 30677  01C19A                     __end_of_UART2_SetTxInterruptHandler:
 30678                           	opt callstack 0
 30679                           
 30680 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30681 ;; Defined at:
 30682 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30683 ;; Parameters:    Size  Location     Type
 30684 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30685 ;;		 -> UART2_Receive_ISR(1), 
 30686 ;; Auto vars:     Size  Location     Type
 30687 ;;		None
 30688 ;; Return value:  Size  Location     Type
 30689 ;;                  1  [STACK] void 
 30690 ;; Registers used:
 30691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30692 ;; Tracked objects:
 30693 ;;		On entry : 3F/39
 30694 ;;		On exit  : 0/0
 30695 ;;		Unchanged: 0/0
 30696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30701 ;;Total ram usage:        0 bytes
 30702 ;; Hardware stack levels used:    1
 30703 ;; Hardware stack levels required when called:   15
 30704 ;; This function calls:
 30705 ;;		Nothing
 30706 ;; This function is called by:
 30707 ;;		_UART2_Initialize
 30708 ;; This function uses a reentrant model
 30709 ;;
 30710                           
 30711                           	psect	text118
 30712  01C19A                     __ptext118:
 30713                           	opt callstack 0
 30714  01C19A                     _UART2_SetRxInterruptHandler:
 30715                           	opt callstack 13
 30716                           
 30717                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30718                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30719                           
 30720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30721                           ;incstack = 0
 30722  01C19A  50E1               	movf	fsr1l,w,c
 30723  01C19C  0FFD               	addlw	-3
 30724  01C19E  6ED9               	movwf	fsr2l,c
 30725  01C1A0  50E2               	movf	fsr1h,w,c
 30726  01C1A2  6EDA               	movwf	fsr2h,c
 30727  01C1A4  0EFF               	movlw	255
 30728  01C1A6  22DA               	addwfc	fsr2h,f,c
 30729  01C1A8  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30730  01C1AE  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30731  01C1B4  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30732                           
 30733                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30734  01C1BA  52E5               	movf	postdec1,f,c
 30735  01C1BC  52E5               	movf	postdec1,f,c
 30736  01C1BE  52E5               	movf	postdec1,f,c
 30737  01C1C0  0012               	return		;funcret
 30738  01C1C2                     __end_of_UART2_SetRxInterruptHandler:
 30739                           	opt callstack 0
 30740                           
 30741 ;; *************** function _UART1_Initialize *****************
 30742 ;; Defined at:
 30743 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30744 ;; Parameters:    Size  Location     Type
 30745 ;;		None
 30746 ;; Auto vars:     Size  Location     Type
 30747 ;;		None
 30748 ;; Return value:  Size  Location     Type
 30749 ;;                  1  [STACK] void 
 30750 ;; Registers used:
 30751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30752 ;; Tracked objects:
 30753 ;;		On entry : 0/39
 30754 ;;		On exit  : 3F/39
 30755 ;;		Unchanged: 0/0
 30756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30761 ;;Total ram usage:        0 bytes
 30762 ;; Hardware stack levels used:    1
 30763 ;; Hardware stack levels required when called:   16
 30764 ;; This function calls:
 30765 ;;		_UART1_SetRxInterruptHandler
 30766 ;; This function is called by:
 30767 ;;		_SYSTEM_Initialize
 30768 ;; This function uses a reentrant model
 30769 ;;
 30770                           
 30771                           	psect	text119
 30772  01BA36                     __ptext119:
 30773                           	opt callstack 0
 30774  01BA36                     _UART1_Initialize:
 30775                           	opt callstack 13
 30776                           
 30777                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30778                           
 30779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30780                           ;incstack = 0
 30781  01BA36  0139               	movlb	57	; () banked
 30782  01BA38  9793               	bcf	147,3,b	;volatile
 30783                           
 30784                           ; BSR set to: 57
 30785                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30786  01BA3A  0E98               	movlw	low _UART1_Receive_ISR
 30787  01BA3C  6EE6               	movwf	postinc1,c
 30788  01BA3E  0EC4               	movlw	high _UART1_Receive_ISR
 30789  01BA40  6EE6               	movwf	postinc1,c
 30790  01BA42  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30791  01BA44  6EE6               	movwf	postinc1,c
 30792  01BA46  ECE1  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30793                           
 30794                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30795  01BA4A  013D               	movlb	61	; () banked
 30796  01BA4C  6BEC               	clrf	236,b	;volatile
 30797                           
 30798                           ; BSR set to: 61
 30799                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30800  01BA4E  6BED               	clrf	237,b	;volatile
 30801                           
 30802                           ; BSR set to: 61
 30803                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30804  01BA50  6BEE               	clrf	238,b	;volatile
 30805                           
 30806                           ; BSR set to: 61
 30807                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30808  01BA52  6BEF               	clrf	239,b	;volatile
 30809                           
 30810                           ; BSR set to: 61
 30811                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30812  01BA54  6BF0               	clrf	240,b	;volatile
 30813                           
 30814                           ; BSR set to: 61
 30815                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30816  01BA56  6BF1               	clrf	241,b	;volatile
 30817                           
 30818                           ; BSR set to: 61
 30819                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30820  01BA58  0EB0               	movlw	176
 30821  01BA5A  6FF2               	movwf	242,b	;volatile
 30822                           
 30823                           ; BSR set to: 61
 30824                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30825  01BA5C  0E80               	movlw	128
 30826  01BA5E  6FF3               	movwf	243,b	;volatile
 30827                           
 30828                           ; BSR set to: 61
 30829                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30830  01BA60  6BF4               	clrf	244,b	;volatile
 30831                           
 30832                           ; BSR set to: 61
 30833                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30834  01BA62  0E8A               	movlw	138
 30835  01BA64  6FF5               	movwf	245,b	;volatile
 30836                           
 30837                           ; BSR set to: 61
 30838                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30839  01BA66  6BF6               	clrf	246,b	;volatile
 30840                           
 30841                           ; BSR set to: 61
 30842                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30843  01BA68  6BF7               	clrf	247,b	;volatile
 30844                           
 30845                           ; BSR set to: 61
 30846                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30847  01BA6A  6BF8               	clrf	248,b	;volatile
 30848                           
 30849                           ; BSR set to: 61
 30850                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30851  01BA6C  6BF9               	clrf	249,b	;volatile
 30852                           
 30853                           ; BSR set to: 61
 30854                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30855  01BA6E  6BFA               	clrf	250,b	;volatile
 30856                           
 30857                           ; BSR set to: 61
 30858                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30859  01BA70  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30860                           
 30861                           ; BSR set to: 61
 30862                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30863  01BA72  0100               	movlb	0	; () banked
 30864  01BA74  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30865                           
 30866                           ; BSR set to: 0
 30867                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30868  01BA76  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30869                           
 30870                           ; BSR set to: 0
 30871                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30872  01BA78  0139               	movlb	57	; () banked
 30873  01BA7A  8793               	bsf	147,3,b	;volatile
 30874                           
 30875                           ; BSR set to: 57
 30876                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30877  01BA7C  0012               	return		;funcret
 30878  01BA7E                     __end_of_UART1_Initialize:
 30879                           	opt callstack 0
 30880                           
 30881 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30882 ;; Defined at:
 30883 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30884 ;; Parameters:    Size  Location     Type
 30885 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30886 ;;		 -> UART1_Receive_ISR(1), 
 30887 ;; Auto vars:     Size  Location     Type
 30888 ;;		None
 30889 ;; Return value:  Size  Location     Type
 30890 ;;                  1  [STACK] void 
 30891 ;; Registers used:
 30892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30893 ;; Tracked objects:
 30894 ;;		On entry : 3F/39
 30895 ;;		On exit  : 0/0
 30896 ;;		Unchanged: 0/0
 30897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30902 ;;Total ram usage:        0 bytes
 30903 ;; Hardware stack levels used:    1
 30904 ;; Hardware stack levels required when called:   15
 30905 ;; This function calls:
 30906 ;;		Nothing
 30907 ;; This function is called by:
 30908 ;;		_UART1_Initialize
 30909 ;; This function uses a reentrant model
 30910 ;;
 30911                           
 30912                           	psect	text120
 30913  01C1C2                     __ptext120:
 30914                           	opt callstack 0
 30915  01C1C2                     _UART1_SetRxInterruptHandler:
 30916                           	opt callstack 13
 30917                           
 30918                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30919                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30920                           
 30921                           ; BSR set to: 57
 30922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30923                           ;incstack = 0
 30924  01C1C2  50E1               	movf	fsr1l,w,c
 30925  01C1C4  0FFD               	addlw	-3
 30926  01C1C6  6ED9               	movwf	fsr2l,c
 30927  01C1C8  50E2               	movf	fsr1h,w,c
 30928  01C1CA  6EDA               	movwf	fsr2h,c
 30929  01C1CC  0EFF               	movlw	255
 30930  01C1CE  22DA               	addwfc	fsr2h,f,c
 30931  01C1D0  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30932  01C1D6  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30933  01C1DC  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30934                           
 30935                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30936  01C1E2  52E5               	movf	postdec1,f,c
 30937  01C1E4  52E5               	movf	postdec1,f,c
 30938  01C1E6  52E5               	movf	postdec1,f,c
 30939  01C1E8  0012               	return		;funcret
 30940  01C1EA                     __end_of_UART1_SetRxInterruptHandler:
 30941                           	opt callstack 0
 30942                           
 30943 ;; *************** function _TMR6_Initialize *****************
 30944 ;; Defined at:
 30945 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30946 ;; Parameters:    Size  Location     Type
 30947 ;;		None
 30948 ;; Auto vars:     Size  Location     Type
 30949 ;;		None
 30950 ;; Return value:  Size  Location     Type
 30951 ;;                  1  [STACK] void 
 30952 ;; Registers used:
 30953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30954 ;; Tracked objects:
 30955 ;;		On entry : 3F/39
 30956 ;;		On exit  : 0/0
 30957 ;;		Unchanged: 0/0
 30958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30963 ;;Total ram usage:        0 bytes
 30964 ;; Hardware stack levels used:    1
 30965 ;; Hardware stack levels required when called:   16
 30966 ;; This function calls:
 30967 ;;		_TMR6_SetInterruptHandler
 30968 ;; This function is called by:
 30969 ;;		_SYSTEM_Initialize
 30970 ;; This function uses a reentrant model
 30971 ;;
 30972                           
 30973                           	psect	text121
 30974  01C0F8                     __ptext121:
 30975                           	opt callstack 0
 30976  01C0F8                     _TMR6_Initialize:
 30977                           	opt callstack 13
 30978                           
 30979                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30980                           
 30981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30982                           ;incstack = 0
 30983  01C0F8  0E01               	movlw	1
 30984  01C0FA  6E96               	movwf	150,c	;volatile
 30985                           
 30986                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30987  01C0FC  6A95               	clrf	149,c	;volatile
 30988                           
 30989                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30990  01C0FE  6A97               	clrf	151,c	;volatile
 30991                           
 30992                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30993  01C100  0E7C               	movlw	124
 30994  01C102  6E93               	movwf	147,c	;volatile
 30995                           
 30996                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30997  01C104  6A92               	clrf	146,c	;volatile
 30998                           
 30999                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 31000  01C106  0139               	movlb	57	; () banked
 31001  01C108  91A9               	bcf	169,0,b	;volatile
 31002                           
 31003                           ; BSR set to: 57
 31004                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 31005  01C10A  8199               	bsf	153,0,b	;volatile
 31006                           
 31007                           ; BSR set to: 57
 31008                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 31009  01C10C  0E0C               	movlw	low _TMR6_DefaultInterruptHandler
 31010  01C10E  6EE6               	movwf	postinc1,c
 31011  01C110  0EB9               	movlw	high _TMR6_DefaultInterruptHandler
 31012  01C112  6EE6               	movwf	postinc1,c
 31013  01C114  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 31014  01C116  6EE6               	movwf	postinc1,c
 31015  01C118  ECF5  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 31016                           
 31017                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 31018  01C11C  0EE0               	movlw	224
 31019  01C11E  6E94               	movwf	148,c	;volatile
 31020                           
 31021                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31022  01C120  0012               	return		;funcret
 31023  01C122                     __end_of_TMR6_Initialize:
 31024                           	opt callstack 0
 31025                           
 31026 ;; *************** function _TMR6_SetInterruptHandler *****************
 31027 ;; Defined at:
 31028 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 31029 ;; Parameters:    Size  Location     Type
 31030 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31031 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 31032 ;; Auto vars:     Size  Location     Type
 31033 ;;		None
 31034 ;; Return value:  Size  Location     Type
 31035 ;;                  1  [STACK] void 
 31036 ;; Registers used:
 31037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31038 ;; Tracked objects:
 31039 ;;		On entry : 3F/39
 31040 ;;		On exit  : 0/0
 31041 ;;		Unchanged: 0/0
 31042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31047 ;;Total ram usage:        0 bytes
 31048 ;; Hardware stack levels used:    1
 31049 ;; Hardware stack levels required when called:   15
 31050 ;; This function calls:
 31051 ;;		Nothing
 31052 ;; This function is called by:
 31053 ;;		_TMR6_Initialize
 31054 ;; This function uses a reentrant model
 31055 ;;
 31056                           
 31057                           	psect	text122
 31058  01C1EA                     __ptext122:
 31059                           	opt callstack 0
 31060  01C1EA                     _TMR6_SetInterruptHandler:
 31061                           	opt callstack 13
 31062                           
 31063                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 31064                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31065                           
 31066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31067                           ;incstack = 0
 31068  01C1EA  50E1               	movf	fsr1l,w,c
 31069  01C1EC  0FFD               	addlw	-3
 31070  01C1EE  6ED9               	movwf	fsr2l,c
 31071  01C1F0  50E2               	movf	fsr1h,w,c
 31072  01C1F2  6EDA               	movwf	fsr2h,c
 31073  01C1F4  0EFF               	movlw	255
 31074  01C1F6  22DA               	addwfc	fsr2h,f,c
 31075  01C1F8  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 31076  01C1FE  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 31077  01C204  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 31078                           
 31079                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31080  01C20A  52E5               	movf	postdec1,f,c
 31081  01C20C  52E5               	movf	postdec1,f,c
 31082  01C20E  52E5               	movf	postdec1,f,c
 31083  01C210  0012               	return		;funcret
 31084  01C212                     __end_of_TMR6_SetInterruptHandler:
 31085                           	opt callstack 0
 31086                           
 31087 ;; *************** function _TMR5_Initialize *****************
 31088 ;; Defined at:
 31089 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 31090 ;; Parameters:    Size  Location     Type
 31091 ;;		None
 31092 ;; Auto vars:     Size  Location     Type
 31093 ;;		None
 31094 ;; Return value:  Size  Location     Type
 31095 ;;                  1  [STACK] void 
 31096 ;; Registers used:
 31097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31098 ;; Tracked objects:
 31099 ;;		On entry : 0/39
 31100 ;;		On exit  : 0/0
 31101 ;;		Unchanged: 0/0
 31102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31107 ;;Total ram usage:        0 bytes
 31108 ;; Hardware stack levels used:    1
 31109 ;; Hardware stack levels required when called:   16
 31110 ;; This function calls:
 31111 ;;		_TMR5_SetInterruptHandler
 31112 ;; This function is called by:
 31113 ;;		_SYSTEM_Initialize
 31114 ;; This function uses a reentrant model
 31115 ;;
 31116                           
 31117                           	psect	text123
 31118  01BA7E                     __ptext123:
 31119                           	opt callstack 0
 31120  01BA7E                     _TMR5_Initialize:
 31121                           	opt callstack 13
 31122                           
 31123                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 31124                           
 31125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31126                           ;incstack = 0
 31127  01BA7E  6A9B               	clrf	155,c	;volatile
 31128                           
 31129                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 31130  01BA80  6A9C               	clrf	156,c	;volatile
 31131                           
 31132                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 31133  01BA82  0E01               	movlw	1
 31134  01BA84  6E9D               	movwf	157,c	;volatile
 31135                           
 31136                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 31137  01BA86  0E63               	movlw	99
 31138  01BA88  6E99               	movwf	153,c	;volatile
 31139                           
 31140                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 31141  01BA8A  0EC0               	movlw	192
 31142  01BA8C  6E98               	movwf	152,c	;volatile
 31143                           
 31144                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 31145  01BA8E  5098               	movf	152,w,c	;volatile
 31146  01BA90  006F FE64  F001    	movff	16281,btemp	;volatile
 31147  01BA96  6A02               	clrf	(btemp+1)^0,c
 31148  01BA98  0060  F004  F002   	movff	btemp,btemp+1
 31149  01BA9E  6A01               	clrf	btemp^0,c
 31150  01BAA0  1001               	iorwf	btemp^0,w,c
 31151  01BAA2  0100               	movlb	0	; () banked
 31152  01BAA4  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 31153  01BAA6  5002               	movf	(btemp+1)^0,w,c
 31154  01BAA8  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 31158  01BAAA  0139               	movlb	57	; () banked
 31159  01BAAC  9DA8               	bcf	168,6,b	;volatile
 31160                           
 31161                           ; BSR set to: 57
 31162                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 31163  01BAAE  8D98               	bsf	152,6,b	;volatile
 31164                           
 31165                           ; BSR set to: 57
 31166                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 31167  01BAB0  0E10               	movlw	low _TMR5_DefaultInterruptHandler
 31168  01BAB2  6EE6               	movwf	postinc1,c
 31169  01BAB4  0EBE               	movlw	high _TMR5_DefaultInterruptHandler
 31170  01BAB6  6EE6               	movwf	postinc1,c
 31171  01BAB8  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 31172  01BABA  6EE6               	movwf	postinc1,c
 31173  01BABC  EC09  F0E1         	call	_TMR5_SetInterruptHandler	;wreg free
 31174                           
 31175                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 31176  01BAC0  0E31               	movlw	49
 31177  01BAC2  6E9A               	movwf	154,c	;volatile
 31178                           
 31179                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31180  01BAC4  0012               	return		;funcret
 31181  01BAC6                     __end_of_TMR5_Initialize:
 31182                           	opt callstack 0
 31183                           
 31184 ;; *************** function _TMR5_SetInterruptHandler *****************
 31185 ;; Defined at:
 31186 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 31187 ;; Parameters:    Size  Location     Type
 31188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31189 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 31190 ;; Auto vars:     Size  Location     Type
 31191 ;;		None
 31192 ;; Return value:  Size  Location     Type
 31193 ;;                  1  [STACK] void 
 31194 ;; Registers used:
 31195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31196 ;; Tracked objects:
 31197 ;;		On entry : 3F/39
 31198 ;;		On exit  : 0/0
 31199 ;;		Unchanged: 0/0
 31200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;Total ram usage:        0 bytes
 31206 ;; Hardware stack levels used:    1
 31207 ;; Hardware stack levels required when called:   15
 31208 ;; This function calls:
 31209 ;;		Nothing
 31210 ;; This function is called by:
 31211 ;;		_TMR5_Initialize
 31212 ;; This function uses a reentrant model
 31213 ;;
 31214                           
 31215                           	psect	text124
 31216  01C212                     __ptext124:
 31217                           	opt callstack 0
 31218  01C212                     _TMR5_SetInterruptHandler:
 31219                           	opt callstack 13
 31220                           
 31221                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 31222                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31223                           
 31224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31225                           ;incstack = 0
 31226  01C212  50E1               	movf	fsr1l,w,c
 31227  01C214  0FFD               	addlw	-3
 31228  01C216  6ED9               	movwf	fsr2l,c
 31229  01C218  50E2               	movf	fsr1h,w,c
 31230  01C21A  6EDA               	movwf	fsr2h,c
 31231  01C21C  0EFF               	movlw	255
 31232  01C21E  22DA               	addwfc	fsr2h,f,c
 31233  01C220  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 31234  01C226  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 31235  01C22C  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 31236                           
 31237                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31238  01C232  52E5               	movf	postdec1,f,c
 31239  01C234  52E5               	movf	postdec1,f,c
 31240  01C236  52E5               	movf	postdec1,f,c
 31241  01C238  0012               	return		;funcret
 31242  01C23A                     __end_of_TMR5_SetInterruptHandler:
 31243                           	opt callstack 0
 31244                           
 31245 ;; *************** function _TMR3_Initialize *****************
 31246 ;; Defined at:
 31247 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 31248 ;; Parameters:    Size  Location     Type
 31249 ;;		None
 31250 ;; Auto vars:     Size  Location     Type
 31251 ;;		None
 31252 ;; Return value:  Size  Location     Type
 31253 ;;                  1  [STACK] void 
 31254 ;; Registers used:
 31255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31256 ;; Tracked objects:
 31257 ;;		On entry : 0/39
 31258 ;;		On exit  : 0/0
 31259 ;;		Unchanged: 0/0
 31260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31265 ;;Total ram usage:        0 bytes
 31266 ;; Hardware stack levels used:    1
 31267 ;; Hardware stack levels required when called:   16
 31268 ;; This function calls:
 31269 ;;		_TMR3_SetInterruptHandler
 31270 ;; This function is called by:
 31271 ;;		_SYSTEM_Initialize
 31272 ;; This function uses a reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text125
 31276  01BAC6                     __ptext125:
 31277                           	opt callstack 0
 31278  01BAC6                     _TMR3_Initialize:
 31279                           	opt callstack 13
 31280                           
 31281                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 31282                           
 31283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31284                           ;incstack = 0
 31285  01BAC6  6AA7               	clrf	167,c	;volatile
 31286                           
 31287                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 31288  01BAC8  6AA8               	clrf	168,c	;volatile
 31289                           
 31290                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 31291  01BACA  0E01               	movlw	1
 31292  01BACC  6EA9               	movwf	169,c	;volatile
 31293                           
 31294                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 31295  01BACE  0E3C               	movlw	60
 31296  01BAD0  6EA5               	movwf	165,c	;volatile
 31297                           
 31298                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 31299  01BAD2  0EB0               	movlw	176
 31300  01BAD4  6EA4               	movwf	164,c	;volatile
 31301                           
 31302                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 31303  01BAD6  50A4               	movf	164,w,c	;volatile
 31304  01BAD8  006F FE94  F001    	movff	16293,btemp	;volatile
 31305  01BADE  6A02               	clrf	(btemp+1)^0,c
 31306  01BAE0  0060  F004  F002   	movff	btemp,btemp+1
 31307  01BAE6  6A01               	clrf	btemp^0,c
 31308  01BAE8  1001               	iorwf	btemp^0,w,c
 31309  01BAEA  0100               	movlb	0	; () banked
 31310  01BAEC  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31311  01BAEE  5002               	movf	(btemp+1)^0,w,c
 31312  01BAF0  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31313                           
 31314                           ; BSR set to: 0
 31315                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31316  01BAF2  0139               	movlb	57	; () banked
 31317  01BAF4  9DA6               	bcf	166,6,b	;volatile
 31318                           
 31319                           ; BSR set to: 57
 31320                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31321  01BAF6  8D96               	bsf	150,6,b	;volatile
 31322                           
 31323                           ; BSR set to: 57
 31324                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31325  01BAF8  0E68               	movlw	low _TMR3_DefaultInterruptHandler
 31326  01BAFA  6EE6               	movwf	postinc1,c
 31327  01BAFC  0EC7               	movlw	high _TMR3_DefaultInterruptHandler
 31328  01BAFE  6EE6               	movwf	postinc1,c
 31329  01BB00  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31330  01BB02  6EE6               	movwf	postinc1,c
 31331  01BB04  EC1D  F0E1         	call	_TMR3_SetInterruptHandler	;wreg free
 31332                           
 31333                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31334  01BB08  0E31               	movlw	49
 31335  01BB0A  6EA6               	movwf	166,c	;volatile
 31336                           
 31337                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31338  01BB0C  0012               	return		;funcret
 31339  01BB0E                     __end_of_TMR3_Initialize:
 31340                           	opt callstack 0
 31341                           
 31342 ;; *************** function _TMR3_SetInterruptHandler *****************
 31343 ;; Defined at:
 31344 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31345 ;; Parameters:    Size  Location     Type
 31346 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31347 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1  [STACK] void 
 31352 ;; Registers used:
 31353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31354 ;; Tracked objects:
 31355 ;;		On entry : 0/0
 31356 ;;		On exit  : 0/0
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31363 ;;Total ram usage:        0 bytes
 31364 ;; Hardware stack levels used:    1
 31365 ;; Hardware stack levels required when called:   15
 31366 ;; This function calls:
 31367 ;;		Nothing
 31368 ;; This function is called by:
 31369 ;;		_TMR3_Initialize
 31370 ;;		_init_bsoc
 31371 ;; This function uses a reentrant model
 31372 ;;
 31373                           
 31374                           	psect	text126
 31375  01C23A                     __ptext126:
 31376                           	opt callstack 0
 31377  01C23A                     _TMR3_SetInterruptHandler:
 31378                           	opt callstack 14
 31379                           
 31380                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31381                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31382                           
 31383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31384                           ;incstack = 0
 31385  01C23A  50E1               	movf	fsr1l,w,c
 31386  01C23C  0FFD               	addlw	-3
 31387  01C23E  6ED9               	movwf	fsr2l,c
 31388  01C240  50E2               	movf	fsr1h,w,c
 31389  01C242  6EDA               	movwf	fsr2h,c
 31390  01C244  0EFF               	movlw	255
 31391  01C246  22DA               	addwfc	fsr2h,f,c
 31392  01C248  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31393  01C24E  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31394  01C254  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31395                           
 31396                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31397  01C25A  52E5               	movf	postdec1,f,c
 31398  01C25C  52E5               	movf	postdec1,f,c
 31399  01C25E  52E5               	movf	postdec1,f,c
 31400  01C260  0012               	return		;funcret
 31401  01C262                     __end_of_TMR3_SetInterruptHandler:
 31402                           	opt callstack 0
 31403                           
 31404 ;; *************** function _TMR2_Initialize *****************
 31405 ;; Defined at:
 31406 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31407 ;; Parameters:    Size  Location     Type
 31408 ;;		None
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;		None
 31411 ;; Return value:  Size  Location     Type
 31412 ;;                  1  [STACK] void 
 31413 ;; Registers used:
 31414 ;;		wreg, status,2
 31415 ;; Tracked objects:
 31416 ;;		On entry : 3F/3F
 31417 ;;		On exit  : 3F/39
 31418 ;;		Unchanged: 0/0
 31419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31424 ;;Total ram usage:        0 bytes
 31425 ;; Hardware stack levels used:    1
 31426 ;; Hardware stack levels required when called:   15
 31427 ;; This function calls:
 31428 ;;		Nothing
 31429 ;; This function is called by:
 31430 ;;		_SYSTEM_Initialize
 31431 ;; This function uses a reentrant model
 31432 ;;
 31433                           
 31434                           	psect	text127
 31435  01C5DE                     __ptext127:
 31436                           	opt callstack 0
 31437  01C5DE                     _TMR2_Initialize:
 31438                           	opt callstack 14
 31439                           
 31440                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31441                           
 31442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31443                           ;incstack = 0
 31444  01C5DE  0E01               	movlw	1
 31445  01C5E0  6EAE               	movwf	174,c	;volatile
 31446                           
 31447                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31448  01C5E2  6AAD               	clrf	173,c	;volatile
 31449                           
 31450                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31451  01C5E4  6AAF               	clrf	175,c	;volatile
 31452                           
 31453                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31454  01C5E6  0E63               	movlw	99
 31455  01C5E8  6EAB               	movwf	171,c	;volatile
 31456                           
 31457                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31458  01C5EA  6AAA               	clrf	170,c	;volatile
 31459                           
 31460                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31461  01C5EC  0139               	movlb	57	; () banked
 31462  01C5EE  95A4               	bcf	164,2,b	;volatile
 31463                           
 31464                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31465  01C5F0  0EC0               	movlw	192
 31466  01C5F2  6EAC               	movwf	172,c	;volatile
 31467                           
 31468                           ; BSR set to: 57
 31469                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31470  01C5F4  0012               	return		;funcret
 31471  01C5F6                     __end_of_TMR2_Initialize:
 31472                           	opt callstack 0
 31473                           
 31474 ;; *************** function _SPI1_Initialize *****************
 31475 ;; Defined at:
 31476 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31477 ;; Parameters:    Size  Location     Type
 31478 ;;		None
 31479 ;; Auto vars:     Size  Location     Type
 31480 ;;		None
 31481 ;; Return value:  Size  Location     Type
 31482 ;;                  1  [STACK] void 
 31483 ;; Registers used:
 31484 ;;		wreg, status,2
 31485 ;; Tracked objects:
 31486 ;;		On entry : 3F/39
 31487 ;;		On exit  : 3F/3D
 31488 ;;		Unchanged: 0/0
 31489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31494 ;;Total ram usage:        0 bytes
 31495 ;; Hardware stack levels used:    1
 31496 ;; Hardware stack levels required when called:   15
 31497 ;; This function calls:
 31498 ;;		Nothing
 31499 ;; This function is called by:
 31500 ;;		_SYSTEM_Initialize
 31501 ;; This function uses a reentrant model
 31502 ;;
 31503                           
 31504                           	psect	text128
 31505  01C5F6                     __ptext128:
 31506                           	opt callstack 0
 31507  01C5F6                     _SPI1_Initialize:
 31508                           	opt callstack 14
 31509                           
 31510                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31511                           
 31512                           ; BSR set to: 57
 31513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31514                           ;incstack = 0
 31515  01C5F6  0E40               	movlw	64
 31516  01C5F8  013D               	movlb	61	; () banked
 31517  01C5FA  6F15               	movwf	21,b	;volatile
 31518                           
 31519                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31520  01C5FC  0E03               	movlw	3
 31521  01C5FE  6F16               	movwf	22,b	;volatile
 31522                           
 31523                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31524  01C600  0E4F               	movlw	79
 31525  01C602  6F19               	movwf	25,b	;volatile
 31526                           
 31527                           ; BSR set to: 61
 31528                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31529  01C604  6B1C               	clrf	28,b	;volatile
 31530                           
 31531                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31532  01C606  0E83               	movlw	131
 31533  01C608  6F14               	movwf	20,b	;volatile
 31534                           
 31535                           ; BSR set to: 61
 31536                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31537  01C60A  0012               	return		;funcret
 31538  01C60C                     __end_of_SPI1_Initialize:
 31539                           	opt callstack 0
 31540                           
 31541 ;; *************** function _PWM8_Initialize *****************
 31542 ;; Defined at:
 31543 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31544 ;; Parameters:    Size  Location     Type
 31545 ;;		None
 31546 ;; Auto vars:     Size  Location     Type
 31547 ;;		None
 31548 ;; Return value:  Size  Location     Type
 31549 ;;                  1  [STACK] void 
 31550 ;; Registers used:
 31551 ;;		wreg, status,2
 31552 ;; Tracked objects:
 31553 ;;		On entry : 0/3E
 31554 ;;		On exit  : 3F/3F
 31555 ;;		Unchanged: 0/0
 31556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31561 ;;Total ram usage:        0 bytes
 31562 ;; Hardware stack levels used:    1
 31563 ;; Hardware stack levels required when called:   15
 31564 ;; This function calls:
 31565 ;;		Nothing
 31566 ;; This function is called by:
 31567 ;;		_SYSTEM_Initialize
 31568 ;; This function uses a reentrant model
 31569 ;;
 31570                           
 31571                           	psect	text129
 31572  01C60C                     __ptext129:
 31573                           	opt callstack 0
 31574  01C60C                     _PWM8_Initialize:
 31575                           	opt callstack 14
 31576                           
 31577                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31578                           
 31579                           ; BSR set to: 61
 31580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31581                           ;incstack = 0
 31582  01C60C  0E80               	movlw	128
 31583  01C60E  6E62               	movwf	98,c	;volatile
 31584                           
 31585                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31586  01C610  6A61               	clrf	97,c	;volatile
 31587                           
 31588                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31589  01C612  0E40               	movlw	64
 31590  01C614  6E60               	movwf	96,c	;volatile
 31591                           
 31592                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31593  01C616  013F               	movlb	63	; () banked
 31594  01C618  515F               	movf	95,w,b	;volatile
 31595  01C61A  0B3F               	andlw	-193
 31596  01C61C  0940               	iorlw	64
 31597  01C61E  6F5F               	movwf	95,b	;volatile
 31598                           
 31599                           ; BSR set to: 63
 31600                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31601  01C620  0012               	return		;funcret
 31602  01C622                     __end_of_PWM8_Initialize:
 31603                           	opt callstack 0
 31604                           
 31605 ;; *************** function _PMD_Initialize *****************
 31606 ;; Defined at:
 31607 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31608 ;; Parameters:    Size  Location     Type
 31609 ;;		None
 31610 ;; Auto vars:     Size  Location     Type
 31611 ;;		None
 31612 ;; Return value:  Size  Location     Type
 31613 ;;                  1  [STACK] void 
 31614 ;; Registers used:
 31615 ;;		None
 31616 ;; Tracked objects:
 31617 ;;		On entry : 3F/39
 31618 ;;		On exit  : 3F/39
 31619 ;;		Unchanged: 0/0
 31620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31625 ;;Total ram usage:        0 bytes
 31626 ;; Hardware stack levels used:    1
 31627 ;; Hardware stack levels required when called:   15
 31628 ;; This function calls:
 31629 ;;		Nothing
 31630 ;; This function is called by:
 31631 ;;		_SYSTEM_Initialize
 31632 ;; This function uses a reentrant model
 31633 ;;
 31634                           
 31635                           	psect	text130
 31636  01C638                     __ptext130:
 31637                           	opt callstack 0
 31638  01C638                     _PMD_Initialize:
 31639                           	opt callstack 14
 31640                           
 31641                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31642                           
 31643                           ; BSR set to: 63
 31644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31645                           ;incstack = 0
 31646  01C638  0139               	movlb	57	; () banked
 31647  01C63A  6BC0               	clrf	192,b	;volatile
 31648                           
 31649                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31650  01C63C  6BC1               	clrf	193,b	;volatile
 31651                           
 31652                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31653  01C63E  6BC2               	clrf	194,b	;volatile
 31654                           
 31655                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31656  01C640  6BC3               	clrf	195,b	;volatile
 31657                           
 31658                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31659  01C642  6BC4               	clrf	196,b	;volatile
 31660                           
 31661                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31662  01C644  6BC5               	clrf	197,b	;volatile
 31663                           
 31664                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31665  01C646  6BC6               	clrf	198,b	;volatile
 31666                           
 31667                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31668  01C648  6BC7               	clrf	199,b	;volatile
 31669                           
 31670                           ; BSR set to: 57
 31671                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31672  01C64A  0012               	return		;funcret
 31673  01C64C                     __end_of_PMD_Initialize:
 31674                           	opt callstack 0
 31675                           
 31676 ;; *************** function _PIN_MANAGER_Initialize *****************
 31677 ;; Defined at:
 31678 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31679 ;; Parameters:    Size  Location     Type
 31680 ;;		None
 31681 ;; Auto vars:     Size  Location     Type
 31682 ;;		None
 31683 ;; Return value:  Size  Location     Type
 31684 ;;                  1  [STACK] void 
 31685 ;; Registers used:
 31686 ;;		wreg, status,2
 31687 ;; Tracked objects:
 31688 ;;		On entry : 3F/39
 31689 ;;		On exit  : 3F/3A
 31690 ;;		Unchanged: 0/0
 31691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31696 ;;Total ram usage:        0 bytes
 31697 ;; Hardware stack levels used:    1
 31698 ;; Hardware stack levels required when called:   15
 31699 ;; This function calls:
 31700 ;;		Nothing
 31701 ;; This function is called by:
 31702 ;;		_SYSTEM_Initialize
 31703 ;; This function uses a reentrant model
 31704 ;;
 31705                           
 31706                           	psect	text131
 31707  01AF40                     __ptext131:
 31708                           	opt callstack 0
 31709  01AF40                     _PIN_MANAGER_Initialize:
 31710                           	opt callstack 14
 31711                           
 31712                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31713                           
 31714                           ; BSR set to: 57
 31715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31716                           ;incstack = 0
 31717  01AF40  0E07               	movlw	7
 31718  01AF42  6EBE               	movwf	190,c	;volatile
 31719                           
 31720                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31721  01AF44  6ABD               	clrf	189,c	;volatile
 31722                           
 31723                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31724  01AF46  6ABA               	clrf	186,c	;volatile
 31725                           
 31726                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31727  01AF48  0E23               	movlw	35
 31728  01AF4A  6EBF               	movwf	191,c	;volatile
 31729                           
 31730                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31731  01AF4C  6ABB               	clrf	187,c	;volatile
 31732                           
 31733                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31734  01AF4E  0E07               	movlw	7
 31735  01AF50  6EBC               	movwf	188,c	;volatile
 31736                           
 31737                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31738  01AF52  6AC6               	clrf	198,c	;volatile
 31739                           
 31740                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31741  01AF54  0E0C               	movlw	12
 31742  01AF56  6EC7               	movwf	199,c	;volatile
 31743                           
 31744                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31745  01AF58  68C2               	setf	194,c	;volatile
 31746                           
 31747                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31748  01AF5A  0EBF               	movlw	191
 31749  01AF5C  6EC3               	movwf	195,c	;volatile
 31750                           
 31751                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31752  01AF5E  0E90               	movlw	144
 31753  01AF60  6EC4               	movwf	196,c	;volatile
 31754                           
 31755                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31756  01AF62  0E0C               	movlw	12
 31757  01AF64  6EC5               	movwf	197,c	;volatile
 31758                           
 31759                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31760  01AF66  013A               	movlb	58	; () banked
 31761  01AF68  6B70               	clrf	112,b	;volatile
 31762                           
 31763                           ; BSR set to: 58
 31764                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31765  01AF6A  6B60               	clrf	96,b	;volatile
 31766                           
 31767                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31768  01AF6C  0E3C               	movlw	60
 31769  01AF6E  6F50               	movwf	80,b	;volatile
 31770                           
 31771                           ; BSR set to: 58
 31772                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31773  01AF70  6B80               	clrf	128,b	;volatile
 31774                           
 31775                           ; BSR set to: 58
 31776                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31777  01AF72  6B90               	clrf	144,b	;volatile
 31778                           
 31779                           ; BSR set to: 58
 31780                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31781  01AF74  6940               	setf	64,b	;volatile
 31782                           
 31783                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31784  01AF76  0E0C               	movlw	12
 31785  01AF78  6F71               	movwf	113,b	;volatile
 31786                           
 31787                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31788  01AF7A  0E0C               	movlw	12
 31789  01AF7C  6F91               	movwf	145,b	;volatile
 31790                           
 31791                           ; BSR set to: 58
 31792                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31793  01AF7E  6B81               	clrf	129,b	;volatile
 31794                           
 31795                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31796  01AF80  0E83               	movlw	131
 31797  01AF82  6F51               	movwf	81,b	;volatile
 31798                           
 31799                           ; BSR set to: 58
 31800                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31801  01AF84  6B41               	clrf	65,b	;volatile
 31802                           
 31803                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31804  01AF86  0E97               	movlw	151
 31805  01AF88  6F61               	movwf	97,b	;volatile
 31806                           
 31807                           ; BSR set to: 58
 31808                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31809  01AF8A  6B82               	clrf	130,b	;volatile
 31810                           
 31811                           ; BSR set to: 58
 31812                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31813  01AF8C  6B92               	clrf	146,b	;volatile
 31814                           
 31815                           ; BSR set to: 58
 31816                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31817  01AF8E  6B42               	clrf	66,b	;volatile
 31818                           
 31819                           ; BSR set to: 58
 31820                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31821  01AF90  6B52               	clrf	82,b	;volatile
 31822                           
 31823                           ; BSR set to: 58
 31824                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31825  01AF92  6B62               	clrf	98,b	;volatile
 31826                           
 31827                           ; BSR set to: 58
 31828                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31829  01AF94  6B72               	clrf	114,b	;volatile
 31830                           
 31831                           ; BSR set to: 58
 31832                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31833  01AF96  6943               	setf	67,b	;volatile
 31834                           
 31835                           ; BSR set to: 58
 31836                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31837  01AF98  6953               	setf	83,b	;volatile
 31838                           
 31839                           ; BSR set to: 58
 31840                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31841  01AF9A  6963               	setf	99,b	;volatile
 31842                           
 31843                           ; BSR set to: 58
 31844                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31845  01AF9C  6973               	setf	115,b	;volatile
 31846                           
 31847                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31848  01AF9E  0E07               	movlw	7
 31849  01AFA0  6F83               	movwf	131,b	;volatile
 31850                           
 31851                           ; BSR set to: 58
 31852                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31853  01AFA2  6993               	setf	147,b	;volatile
 31854                           
 31855                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31856  01AFA4  0E0F               	movlw	15
 31857  01AFA6  6FE8               	movwf	232,b	;volatile
 31858                           
 31859                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31860  01AFA8  0E13               	movlw	19
 31861  01AFAA  6FDE               	movwf	222,b	;volatile
 31862                           
 31863                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31864  01AFAC  0E16               	movlw	22
 31865  01AFAE  6F0E               	movwf	14,b	;volatile
 31866                           
 31867                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31868  01AFB0  0E1E               	movlw	30
 31869  01AFB2  6F13               	movwf	19,b	;volatile
 31870                           
 31871                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31872  01AFB4  0E08               	movlw	8
 31873  01AFB6  6FC0               	movwf	192,b	;volatile
 31874                           
 31875                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31876  01AFB8  0E10               	movlw	16
 31877  01AFBA  6F19               	movwf	25,b	;volatile
 31878                           
 31879                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31880  01AFBC  0E09               	movlw	9
 31881  01AFBE  6FC1               	movwf	193,b	;volatile
 31882                           
 31883                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31884  01AFC0  0E1F               	movlw	31
 31885  01AFC2  6F15               	movwf	21,b	;volatile
 31886                           
 31887                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31888  01AFC4  0E13               	movlw	19
 31889  01AFC6  6F16               	movwf	22,b	;volatile
 31890                           
 31891                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31892  01AFC8  0E17               	movlw	23
 31893  01AFCA  6FE5               	movwf	229,b	;volatile
 31894                           
 31895                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31896  01AFCC  0E14               	movlw	20
 31897  01AFCE  6FDF               	movwf	223,b	;volatile
 31898                           
 31899                           ; BSR set to: 58
 31900                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31901  01AFD0  0012               	return		;funcret
 31902  01AFD2                     __end_of_PIN_MANAGER_Initialize:
 31903                           	opt callstack 0
 31904                           
 31905 ;; *************** function _OSCILLATOR_Initialize *****************
 31906 ;; Defined at:
 31907 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31908 ;; Parameters:    Size  Location     Type
 31909 ;;		None
 31910 ;; Auto vars:     Size  Location     Type
 31911 ;;		None
 31912 ;; Return value:  Size  Location     Type
 31913 ;;                  1  [STACK] void 
 31914 ;; Registers used:
 31915 ;;		wreg, status,2
 31916 ;; Tracked objects:
 31917 ;;		On entry : 3F/3A
 31918 ;;		On exit  : 3F/39
 31919 ;;		Unchanged: 0/0
 31920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31925 ;;Total ram usage:        0 bytes
 31926 ;; Hardware stack levels used:    1
 31927 ;; Hardware stack levels required when called:   15
 31928 ;; This function calls:
 31929 ;;		Nothing
 31930 ;; This function is called by:
 31931 ;;		_SYSTEM_Initialize
 31932 ;; This function uses a reentrant model
 31933 ;;
 31934                           
 31935                           	psect	text132
 31936  01C622                     __ptext132:
 31937                           	opt callstack 0
 31938  01C622                     _OSCILLATOR_Initialize:
 31939                           	opt callstack 14
 31940                           
 31941                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31942                           
 31943                           ; BSR set to: 58
 31944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31945                           ;incstack = 0
 31946  01C622  0E20               	movlw	32
 31947  01C624  0139               	movlb	57	; () banked
 31948  01C626  6FD9               	movwf	217,b	;volatile
 31949                           
 31950                           ; BSR set to: 57
 31951                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31952  01C628  6BDB               	clrf	219,b	;volatile
 31953                           
 31954                           ; BSR set to: 57
 31955                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31956  01C62A  6BDD               	clrf	221,b	;volatile
 31957                           
 31958                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31959  01C62C  0E02               	movlw	2
 31960  01C62E  6FDF               	movwf	223,b	;volatile
 31961                           
 31962                           ; BSR set to: 57
 31963                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31964  01C630  6BDE               	clrf	222,b	;volatile
 31965  01C632                     l169:
 31966                           
 31967                           ; BSR set to: 57
 31968                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31969  01C632  B1DC               	btfsc	220,0,b	;volatile
 31970  01C634  0012               	return	
 31971  01C636  D7FD               	goto	l169
 31972  01C638                     __end_of_OSCILLATOR_Initialize:
 31973                           	opt callstack 0
 31974                           
 31975 ;; *************** function _INTERRUPT_Initialize *****************
 31976 ;; Defined at:
 31977 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31978 ;; Parameters:    Size  Location     Type
 31979 ;;		None
 31980 ;; Auto vars:     Size  Location     Type
 31981 ;;  state           1  [STACK] _Bool 
 31982 ;; Return value:  Size  Location     Type
 31983 ;;                  1  [STACK] void 
 31984 ;; Registers used:
 31985 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31986 ;; Tracked objects:
 31987 ;;		On entry : 0/0
 31988 ;;		On exit  : 3F/39
 31989 ;;		Unchanged: 0/0
 31990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31995 ;;Total ram usage:        0 bytes
 31996 ;; Hardware stack levels used:    1
 31997 ;; Hardware stack levels required when called:   15
 31998 ;; This function calls:
 31999 ;;		Nothing
 32000 ;; This function is called by:
 32001 ;;		_SYSTEM_Initialize
 32002 ;; This function uses a reentrant model
 32003 ;;
 32004                           
 32005                           	psect	text133
 32006  01B56C                     __ptext133:
 32007                           	opt callstack 0
 32008  01B56C                     _INTERRUPT_Initialize:
 32009                           	opt callstack 0
 32010                           
 32011                           ; BSR set to: 57
 32012                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32013  01B56C  52E6               	movf	postinc1,f,c
 32014                           
 32015                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32016                           
 32017                           ;incstack = 0
 32018  01B56E  8AD2               	bsf	210,5,c	;volatile
 32019                           
 32020                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32021  01B570  AED2               	btfss	16338,7,c	;volatile
 32022  01B572  D003               	goto	u9580
 32023  01B574  6A0C               	clrf	(btemp+11)^0,c
 32024  01B576  2A0C               	incf	(btemp+11)^0,f,c
 32025  01B578  D001               	goto	u9598
 32026  01B57A                     u9580:
 32027  01B57A  6A0C               	clrf	(btemp+11)^0,c
 32028  01B57C                     u9598:
 32029                           
 32030                           ;stkvar	_state @ sp[(-1)+0]
 32031  01B57C  0EFF               	movlw	-1
 32032  01B57E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32033                           
 32034                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32035  01B584  9ED2               	bcf	16338,7,c	;volatile
 32036                           
 32037                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32038  01B586  0E55               	movlw	85
 32039  01B588  6ED4               	movwf	212,c	;volatile
 32040                           
 32041                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32042  01B58A  0EAA               	movlw	170
 32043  01B58C  6ED4               	movwf	212,c	;volatile
 32044                           
 32045                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32046  01B58E  90D4               	bcf	212,0,c	;volatile
 32047                           
 32048                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 32049  01B590  0138               	movlb	56	; () banked
 32050  01B592  6B9F               	clrf	159,b	;volatile
 32051                           
 32052                           ; BSR set to: 56
 32053                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 32054  01B594  6B9E               	clrf	158,b	;volatile
 32055                           
 32056                           ; BSR set to: 56
 32057                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 32058  01B596  0E08               	movlw	8
 32059  01B598  6F9D               	movwf	157,b	;volatile
 32060                           
 32061                           ; BSR set to: 56
 32062                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32063  01B59A  0E55               	movlw	85
 32064  01B59C  6ED4               	movwf	212,c	;volatile
 32065                           
 32066                           ; BSR set to: 56
 32067                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32068  01B59E  0EAA               	movlw	170
 32069  01B5A0  6ED4               	movwf	212,c	;volatile
 32070                           
 32071                           ; BSR set to: 56
 32072                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32073  01B5A2  80D4               	bsf	212,0,c	;volatile
 32074                           
 32075                           ; BSR set to: 56
 32076                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32077                           ;stkvar	_state @ sp[(-1)+0]
 32078  01B5A4  0EFF               	movlw	-1
 32079  01B5A6  B0E3               	btfsc	plusw1,0,c
 32080  01B5A8  D002               	bra	u9605
 32081  01B5AA  9ED2               	bcf	16338,7,c	;volatile
 32082  01B5AC  D001               	bra	u9606
 32083  01B5AE                     u9605:
 32084  01B5AE  8ED2               	bsf	16338,7,c	;volatile
 32085  01B5B0                     u9606:
 32086                           
 32087                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 32088  01B5B0  0139               	movlb	57	; () banked
 32089  01B5B2  8782               	bsf	130,3,b	;volatile
 32090                           
 32091                           ; BSR set to: 57
 32092                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 32093  01B5B4  8382               	bsf	130,1,b	;volatile
 32094                           
 32095                           ; BSR set to: 57
 32096                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 32097  01B5B6  8182               	bsf	130,0,b	;volatile
 32098                           
 32099                           ; BSR set to: 57
 32100                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 32101  01B5B8  8582               	bsf	130,2,b	;volatile
 32102                           
 32103                           ; BSR set to: 57
 32104                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 32105  01B5BA  8786               	bsf	134,3,b	;volatile
 32106                           
 32107                           ; BSR set to: 57
 32108                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 32109  01B5BC  8586               	bsf	134,2,b	;volatile
 32110                           
 32111                           ; BSR set to: 57
 32112                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 32113  01B5BE  8783               	bsf	131,3,b	;volatile
 32114                           
 32115                           ; BSR set to: 57
 32116                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 32117  01B5C0  8181               	bsf	129,0,b	;volatile
 32118                           
 32119                           ; BSR set to: 57
 32120                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 32121  01B5C2  9185               	bcf	133,0,b	;volatile
 32122                           
 32123                           ; BSR set to: 57
 32124                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 32125  01B5C4  8189               	bsf	137,0,b	;volatile
 32126                           
 32127                           ; BSR set to: 57
 32128                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 32129  01B5C6  9D88               	bcf	136,6,b	;volatile
 32130                           
 32131                           ; BSR set to: 57
 32132                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 32133  01B5C8  9D86               	bcf	134,6,b	;volatile
 32134                           
 32135                           ; BSR set to: 57
 32136                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 32137  01B5CA  8581               	bsf	129,2,b	;volatile
 32138                           
 32139                           ; BSR set to: 57
 32140                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 32141  01B5CC  8781               	bsf	129,3,b	;volatile
 32142                           
 32143                           ; BSR set to: 57
 32144                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32145  01B5CE  52E5               	movf	postdec1,f,c
 32146  01B5D0  0012               	return		;funcret
 32147  01B5D2                     __end_of_INTERRUPT_Initialize:
 32148                           	opt callstack 0
 32149                           
 32150 ;; *************** function _FVR_Initialize *****************
 32151 ;; Defined at:
 32152 ;;		line 58 in file "mcc_generated_files/fvr.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;		None
 32155 ;; Auto vars:     Size  Location     Type
 32156 ;;		None
 32157 ;; Return value:  Size  Location     Type
 32158 ;;                  1  [STACK] void 
 32159 ;; Registers used:
 32160 ;;		wreg, status,2
 32161 ;; Tracked objects:
 32162 ;;		On entry : 3F/39
 32163 ;;		On exit  : 3F/3E
 32164 ;;		Unchanged: 0/0
 32165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32170 ;;Total ram usage:        0 bytes
 32171 ;; Hardware stack levels used:    1
 32172 ;; Hardware stack levels required when called:   15
 32173 ;; This function calls:
 32174 ;;		Nothing
 32175 ;; This function is called by:
 32176 ;;		_SYSTEM_Initialize
 32177 ;; This function uses a reentrant model
 32178 ;;
 32179                           
 32180                           	psect	text134
 32181  01C73E                     __ptext134:
 32182                           	opt callstack 0
 32183  01C73E                     _FVR_Initialize:
 32184                           	opt callstack 14
 32185                           
 32186                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 32187                           
 32188                           ; BSR set to: 57
 32189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32190                           ;incstack = 0
 32191  01C73E  0EAF               	movlw	175
 32192  01C740  013E               	movlb	62	; () banked
 32193  01C742  6FC1               	movwf	193,b	;volatile
 32194                           
 32195                           ; BSR set to: 62
 32196                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32197  01C744  0012               	return		;funcret
 32198  01C746                     __end_of_FVR_Initialize:
 32199                           	opt callstack 0
 32200                           
 32201 ;; *************** function _EXT_INT_Initialize *****************
 32202 ;; Defined at:
 32203 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 32204 ;; Parameters:    Size  Location     Type
 32205 ;;		None
 32206 ;; Auto vars:     Size  Location     Type
 32207 ;;		None
 32208 ;; Return value:  Size  Location     Type
 32209 ;;                  1  [STACK] void 
 32210 ;; Registers used:
 32211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32212 ;; Tracked objects:
 32213 ;;		On entry : 3F/39
 32214 ;;		On exit  : 3F/39
 32215 ;;		Unchanged: 0/0
 32216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32221 ;;Total ram usage:        0 bytes
 32222 ;; Hardware stack levels used:    1
 32223 ;; Hardware stack levels required when called:   16
 32224 ;; This function calls:
 32225 ;;		_INT0_SetInterruptHandler
 32226 ;;		_INT1_SetInterruptHandler
 32227 ;; This function is called by:
 32228 ;;		_SYSTEM_Initialize
 32229 ;; This function uses a reentrant model
 32230 ;;
 32231                           
 32232                           	psect	text135
 32233  01BF50                     __ptext135:
 32234                           	opt callstack 0
 32235  01BF50                     _EXT_INT_Initialize:
 32236                           	opt callstack 13
 32237                           
 32238                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 32239                           
 32240                           ; BSR set to: 62
 32241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32242                           ;incstack = 0
 32243  01BF50  0139               	movlb	57	; () banked
 32244  01BF52  91A1               	bcf	161,0,b	;volatile
 32245                           
 32246                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 32247  01BF54  90D2               	bcf	210,0,c	;volatile
 32248                           
 32249                           ; BSR set to: 57
 32250                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 32251  01BF56  0E6A               	movlw	low _INT0_DefaultInterruptHandler
 32252  01BF58  6EE6               	movwf	postinc1,c
 32253  01BF5A  0EC7               	movlw	high _INT0_DefaultInterruptHandler
 32254  01BF5C  6EE6               	movwf	postinc1,c
 32255  01BF5E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 32256  01BF60  6EE6               	movwf	postinc1,c
 32257  01BF62  EC45  F0E1         	call	_INT0_SetInterruptHandler	;wreg free
 32258                           
 32259                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 32260  01BF66  0139               	movlb	57	; () banked
 32261  01BF68  8191               	bsf	145,0,b	;volatile
 32262                           
 32263                           ; BSR set to: 57
 32264                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 32265  01BF6A  91A5               	bcf	165,0,b	;volatile
 32266                           
 32267                           ; BSR set to: 57
 32268                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 32269  01BF6C  92D2               	bcf	210,1,c	;volatile
 32270                           
 32271                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 32272  01BF6E  0E66               	movlw	low _INT1_DefaultInterruptHandler
 32273  01BF70  6EE6               	movwf	postinc1,c
 32274  01BF72  0EC7               	movlw	high _INT1_DefaultInterruptHandler
 32275  01BF74  6EE6               	movwf	postinc1,c
 32276  01BF76  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 32277  01BF78  6EE6               	movwf	postinc1,c
 32278  01BF7A  EC31  F0E1         	call	_INT1_SetInterruptHandler	;wreg free
 32279                           
 32280                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 32281  01BF7E  0139               	movlb	57	; () banked
 32282  01BF80  8195               	bsf	149,0,b	;volatile
 32283                           
 32284                           ; BSR set to: 57
 32285                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32286  01BF82  0012               	return		;funcret
 32287  01BF84                     __end_of_EXT_INT_Initialize:
 32288                           	opt callstack 0
 32289                           
 32290 ;; *************** function _INT1_SetInterruptHandler *****************
 32291 ;; Defined at:
 32292 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 32293 ;; Parameters:    Size  Location     Type
 32294 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32295 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 32296 ;; Auto vars:     Size  Location     Type
 32297 ;;		None
 32298 ;; Return value:  Size  Location     Type
 32299 ;;                  1  [STACK] void 
 32300 ;; Registers used:
 32301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32302 ;; Tracked objects:
 32303 ;;		On entry : 3F/39
 32304 ;;		On exit  : 0/0
 32305 ;;		Unchanged: 0/0
 32306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32311 ;;Total ram usage:        0 bytes
 32312 ;; Hardware stack levels used:    1
 32313 ;; Hardware stack levels required when called:   15
 32314 ;; This function calls:
 32315 ;;		Nothing
 32316 ;; This function is called by:
 32317 ;;		_EXT_INT_Initialize
 32318 ;;		_start_switch_handler
 32319 ;; This function uses a reentrant model
 32320 ;;
 32321                           
 32322                           	psect	text136
 32323  01C262                     __ptext136:
 32324                           	opt callstack 0
 32325  01C262                     _INT1_SetInterruptHandler:
 32326                           	opt callstack 14
 32327                           
 32328                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32329                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32330                           
 32331                           ; BSR set to: 57
 32332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32333                           ;incstack = 0
 32334  01C262  50E1               	movf	fsr1l,w,c
 32335  01C264  0FFD               	addlw	-3
 32336  01C266  6ED9               	movwf	fsr2l,c
 32337  01C268  50E2               	movf	fsr1h,w,c
 32338  01C26A  6EDA               	movwf	fsr2h,c
 32339  01C26C  0EFF               	movlw	255
 32340  01C26E  22DA               	addwfc	fsr2h,f,c
 32341  01C270  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32342  01C276  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32343  01C27C  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32344                           
 32345                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32346  01C282  52E5               	movf	postdec1,f,c
 32347  01C284  52E5               	movf	postdec1,f,c
 32348  01C286  52E5               	movf	postdec1,f,c
 32349  01C288  0012               	return		;funcret
 32350  01C28A                     __end_of_INT1_SetInterruptHandler:
 32351                           	opt callstack 0
 32352                           
 32353 ;; *************** function _INT0_SetInterruptHandler *****************
 32354 ;; Defined at:
 32355 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32356 ;; Parameters:    Size  Location     Type
 32357 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32358 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32359 ;; Auto vars:     Size  Location     Type
 32360 ;;		None
 32361 ;; Return value:  Size  Location     Type
 32362 ;;                  1  [STACK] void 
 32363 ;; Registers used:
 32364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32365 ;; Tracked objects:
 32366 ;;		On entry : 3F/39
 32367 ;;		On exit  : 0/0
 32368 ;;		Unchanged: 0/0
 32369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32374 ;;Total ram usage:        0 bytes
 32375 ;; Hardware stack levels used:    1
 32376 ;; Hardware stack levels required when called:   15
 32377 ;; This function calls:
 32378 ;;		Nothing
 32379 ;; This function is called by:
 32380 ;;		_EXT_INT_Initialize
 32381 ;; This function uses a reentrant model
 32382 ;;
 32383                           
 32384                           	psect	text137
 32385  01C28A                     __ptext137:
 32386                           	opt callstack 0
 32387  01C28A                     _INT0_SetInterruptHandler:
 32388                           	opt callstack 13
 32389                           
 32390                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32391                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32392                           
 32393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32394                           ;incstack = 0
 32395  01C28A  50E1               	movf	fsr1l,w,c
 32396  01C28C  0FFD               	addlw	-3
 32397  01C28E  6ED9               	movwf	fsr2l,c
 32398  01C290  50E2               	movf	fsr1h,w,c
 32399  01C292  6EDA               	movwf	fsr2h,c
 32400  01C294  0EFF               	movlw	255
 32401  01C296  22DA               	addwfc	fsr2h,f,c
 32402  01C298  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32403  01C29E  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32404  01C2A4  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32405                           
 32406                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32407  01C2AA  52E5               	movf	postdec1,f,c
 32408  01C2AC  52E5               	movf	postdec1,f,c
 32409  01C2AE  52E5               	movf	postdec1,f,c
 32410  01C2B0  0012               	return		;funcret
 32411  01C2B2                     __end_of_INT0_SetInterruptHandler:
 32412                           	opt callstack 0
 32413                           
 32414 ;; *************** function _DMA2_Initialize *****************
 32415 ;; Defined at:
 32416 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32417 ;; Parameters:    Size  Location     Type
 32418 ;;		None
 32419 ;; Auto vars:     Size  Location     Type
 32420 ;;		None
 32421 ;; Return value:  Size  Location     Type
 32422 ;;                  1  [STACK] void 
 32423 ;; Registers used:
 32424 ;;		wreg, status,2
 32425 ;; Tracked objects:
 32426 ;;		On entry : 3F/3D
 32427 ;;		On exit  : 3F/3B
 32428 ;;		Unchanged: 0/0
 32429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32434 ;;Total ram usage:        0 bytes
 32435 ;; Hardware stack levels used:    1
 32436 ;; Hardware stack levels required when called:   15
 32437 ;; This function calls:
 32438 ;;		Nothing
 32439 ;; This function is called by:
 32440 ;;		_SYSTEM_Initialize
 32441 ;; This function uses a reentrant model
 32442 ;;
 32443                           
 32444                           	psect	text138
 32445  01B80E                     __ptext138:
 32446                           	opt callstack 0
 32447  01B80E                     _DMA2_Initialize:
 32448                           	opt callstack 14
 32449                           
 32450                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32451                           
 32452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32453                           ;incstack = 0
 32454  01B80E  0E00               	movlw	0
 32455  01B810  013B               	movlb	59	; () banked
 32456  01B812  6FD9               	movwf	217,b	;volatile
 32457  01B814  0E10               	movlw	16
 32458  01B816  6FDA               	movwf	218,b	;volatile
 32459  01B818  0E00               	movlw	0
 32460  01B81A  6FDB               	movwf	219,b	;volatile
 32461                           
 32462                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32463  01B81C  0E3F               	movlw	63
 32464  01B81E  6FD1               	movwf	209,b	;volatile
 32465  01B820  0EBB               	movlw	187
 32466  01B822  6FD0               	movwf	208,b	;volatile
 32467                           
 32468                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32469  01B824  0E03               	movlw	3
 32470  01B826  6FDD               	movwf	221,b	;volatile
 32471                           
 32472                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32473  01B828  0E00               	movlw	0
 32474  01B82A  6FD8               	movwf	216,b	;volatile
 32475  01B82C  0E01               	movlw	1
 32476  01B82E  6FD7               	movwf	215,b	;volatile
 32477                           
 32478                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32479  01B830  0E00               	movlw	0
 32480  01B832  6FCF               	movwf	207,b	;volatile
 32481  01B834  0E01               	movlw	1
 32482  01B836  6FCE               	movwf	206,b	;volatile
 32483                           
 32484                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32485  01B838  0E1C               	movlw	28
 32486  01B83A  6FDF               	movwf	223,b	;volatile
 32487                           
 32488                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32489  01B83C  0E3D               	movlw	61
 32490  01B83E  6FDE               	movwf	222,b	;volatile
 32491                           
 32492                           ; BSR set to: 59
 32493                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32494  01B840  0139               	movlb	57	; () banked
 32495  01B842  97A5               	bcf	165,3,b	;volatile
 32496                           
 32497                           ; BSR set to: 57
 32498                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32499  01B844  95A5               	bcf	165,2,b	;volatile
 32500                           
 32501                           ; BSR set to: 57
 32502                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32503  01B846  9BA5               	bcf	165,5,b	;volatile
 32504                           
 32505                           ; BSR set to: 57
 32506                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32507  01B848  99A5               	bcf	165,4,b	;volatile
 32508                           
 32509                           ; BSR set to: 57
 32510                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32511  01B84A  9795               	bcf	149,3,b	;volatile
 32512                           
 32513                           ; BSR set to: 57
 32514                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32515  01B84C  9595               	bcf	149,2,b	;volatile
 32516                           
 32517                           ; BSR set to: 57
 32518                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32519  01B84E  9B95               	bcf	149,5,b	;volatile
 32520                           
 32521                           ; BSR set to: 57
 32522                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32523  01B850  9995               	bcf	149,4,b	;volatile
 32524  01B852  9ED2               	bcf	16338,7,c	;# 
 32525  01B854  0139               	banksel	14831	;# 
 32526  01B856  0E55               	movlw	85	;# 
 32527  01B858  6FEF               	movwf	14831,b	;# 
 32528  01B85A  0EAA               	movlw	170	;# 
 32529  01B85C  6FEF               	movwf	14831,b	;# 
 32530  01B85E  81EF               	bsf	14831,0,b	;# 
 32531  01B860  8ED2               	bsf	16338,7,c	;# 
 32532                           
 32533                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32534  01B862  013B               	movlb	59	; () banked
 32535  01B864  6BDC               	clrf	220,b	;volatile
 32536                           
 32537                           ; BSR set to: 59
 32538                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32539  01B866  0012               	return		;funcret
 32540  01B868                     __end_of_DMA2_Initialize:
 32541                           	opt callstack 0
 32542                           
 32543 ;; *************** function _DMA1_Initialize *****************
 32544 ;; Defined at:
 32545 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32546 ;; Parameters:    Size  Location     Type
 32547 ;;		None
 32548 ;; Auto vars:     Size  Location     Type
 32549 ;;		None
 32550 ;; Return value:  Size  Location     Type
 32551 ;;                  1  [STACK] void 
 32552 ;; Registers used:
 32553 ;;		wreg, status,2
 32554 ;; Tracked objects:
 32555 ;;		On entry : 3F/3B
 32556 ;;		On exit  : 3F/3B
 32557 ;;		Unchanged: 0/0
 32558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32563 ;;Total ram usage:        0 bytes
 32564 ;; Hardware stack levels used:    1
 32565 ;; Hardware stack levels required when called:   15
 32566 ;; This function calls:
 32567 ;;		Nothing
 32568 ;; This function is called by:
 32569 ;;		_SYSTEM_Initialize
 32570 ;; This function uses a reentrant model
 32571 ;;
 32572                           
 32573                           	psect	text139
 32574  01B3C6                     __ptext139:
 32575                           	opt callstack 0
 32576  01B3C6                     _DMA1_Initialize:
 32577                           	opt callstack 14
 32578                           
 32579                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32580                           
 32581                           ; BSR set to: 59
 32582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32583                           ;incstack = 0
 32584  01B3C6  0E00               	movlw	0
 32585  01B3C8  013B               	movlb	59	; () banked
 32586  01B3CA  6FF9               	movwf	249,b	;volatile
 32587  01B3CC  0E10               	movlw	16
 32588  01B3CE  6FFA               	movwf	250,b	;volatile
 32589  01B3D0  0E00               	movlw	0
 32590  01B3D2  6FFB               	movwf	251,b	;volatile
 32591                           
 32592                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32593  01B3D4  0E3D               	movlw	61
 32594  01B3D6  6FF1               	movwf	241,b	;volatile
 32595  01B3D8  0E11               	movlw	17
 32596  01B3DA  6FF0               	movwf	240,b	;volatile
 32597                           
 32598                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32599  01B3DC  0E03               	movlw	3
 32600  01B3DE  6FFD               	movwf	253,b	;volatile
 32601                           
 32602                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32603  01B3E0  0E00               	movlw	0
 32604  01B3E2  6FF8               	movwf	248,b	;volatile
 32605  01B3E4  0E01               	movlw	1
 32606  01B3E6  6FF7               	movwf	247,b	;volatile
 32607                           
 32608                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32609  01B3E8  0E00               	movlw	0
 32610  01B3EA  6FEF               	movwf	239,b	;volatile
 32611  01B3EC  0E01               	movlw	1
 32612  01B3EE  6FEE               	movwf	238,b	;volatile
 32613                           
 32614                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32615  01B3F0  0E15               	movlw	21
 32616  01B3F2  6FFF               	movwf	255,b	;volatile
 32617                           
 32618                           ; BSR set to: 59
 32619                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32620  01B3F4  6BFE               	clrf	254,b	;volatile
 32621                           
 32622                           ; BSR set to: 59
 32623                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32624  01B3F6  0139               	movlb	57	; () banked
 32625  01B3F8  93A2               	bcf	162,1,b	;volatile
 32626                           
 32627                           ; BSR set to: 57
 32628                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32629  01B3FA  91A2               	bcf	162,0,b	;volatile
 32630                           
 32631                           ; BSR set to: 57
 32632                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32633  01B3FC  97A2               	bcf	162,3,b	;volatile
 32634                           
 32635                           ; BSR set to: 57
 32636                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32637  01B3FE  95A2               	bcf	162,2,b	;volatile
 32638                           
 32639                           ; BSR set to: 57
 32640                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32641  01B400  8392               	bsf	146,1,b	;volatile
 32642                           
 32643                           ; BSR set to: 57
 32644                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32645  01B402  8192               	bsf	146,0,b	;volatile
 32646                           
 32647                           ; BSR set to: 57
 32648                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32649  01B404  8792               	bsf	146,3,b	;volatile
 32650                           
 32651                           ; BSR set to: 57
 32652                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32653  01B406  8592               	bsf	146,2,b	;volatile
 32654                           
 32655                           ; BSR set to: 57
 32656                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32657  01B408  6BF1               	clrf	241,b	;volatile
 32658                           
 32659                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32660  01B40A  0E01               	movlw	1
 32661  01B40C  6FF2               	movwf	242,b	;volatile
 32662                           
 32663                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32664  01B40E  0E04               	movlw	4
 32665  01B410  6FF3               	movwf	243,b	;volatile
 32666                           
 32667                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32668  01B412  0E02               	movlw	2
 32669  01B414  6FF4               	movwf	244,b	;volatile
 32670                           
 32671                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32672  01B416  0E03               	movlw	3
 32673  01B418  6FF7               	movwf	247,b	;volatile
 32674  01B41A  9ED2               	bcf	16338,7,c	;# 
 32675  01B41C  0139               	banksel	14831	;# 
 32676  01B41E  0E55               	movlw	85	;# 
 32677  01B420  6FEF               	movwf	14831,b	;# 
 32678  01B422  0EAA               	movlw	170	;# 
 32679  01B424  6FEF               	movwf	14831,b	;# 
 32680  01B426  81EF               	bsf	14831,0,b	;# 
 32681  01B428  8ED2               	bsf	16338,7,c	;# 
 32682                           
 32683                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32684  01B42A  013B               	movlb	59	; () banked
 32685  01B42C  6BFC               	clrf	252,b	;volatile
 32686                           
 32687                           ; BSR set to: 59
 32688                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32689  01B42E  0012               	return		;funcret
 32690  01B430                     __end_of_DMA1_Initialize:
 32691                           	opt callstack 0
 32692                           
 32693 ;; *************** function _CLKREF_Initialize *****************
 32694 ;; Defined at:
 32695 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32696 ;; Parameters:    Size  Location     Type
 32697 ;;		None
 32698 ;; Auto vars:     Size  Location     Type
 32699 ;;		None
 32700 ;; Return value:  Size  Location     Type
 32701 ;;                  1  [STACK] void 
 32702 ;; Registers used:
 32703 ;;		wreg, status,2
 32704 ;; Tracked objects:
 32705 ;;		On entry : 3F/3B
 32706 ;;		On exit  : 3F/3C
 32707 ;;		Unchanged: 0/0
 32708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32713 ;;Total ram usage:        0 bytes
 32714 ;; Hardware stack levels used:    1
 32715 ;; Hardware stack levels required when called:   15
 32716 ;; This function calls:
 32717 ;;		Nothing
 32718 ;; This function is called by:
 32719 ;;		_SYSTEM_Initialize
 32720 ;; This function uses a reentrant model
 32721 ;;
 32722                           
 32723                           	psect	text140
 32724  01C6E6                     __ptext140:
 32725                           	opt callstack 0
 32726  01C6E6                     _CLKREF_Initialize:
 32727                           	opt callstack 14
 32728                           
 32729                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32730                           
 32731                           ; BSR set to: 59
 32732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32733                           ;incstack = 0
 32734  01C6E6  013C               	movlb	60	; () banked
 32735  01C6E8  6BE6               	clrf	230,b	;volatile
 32736                           
 32737                           ; BSR set to: 60
 32738                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32739  01C6EA  0E94               	movlw	148
 32740  01C6EC  6FE5               	movwf	229,b	;volatile
 32741                           
 32742                           ; BSR set to: 60
 32743                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32744  01C6EE  0012               	return		;funcret
 32745  01C6F0                     __end_of_CLKREF_Initialize:
 32746                           	opt callstack 0
 32747                           
 32748 ;; *************** function _ADCC_Initialize *****************
 32749 ;; Defined at:
 32750 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32751 ;; Parameters:    Size  Location     Type
 32752 ;;		None
 32753 ;; Auto vars:     Size  Location     Type
 32754 ;;		None
 32755 ;; Return value:  Size  Location     Type
 32756 ;;                  1  [STACK] void 
 32757 ;; Registers used:
 32758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32759 ;; Tracked objects:
 32760 ;;		On entry : 3F/3E
 32761 ;;		On exit  : 0/0
 32762 ;;		Unchanged: 0/0
 32763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32768 ;;Total ram usage:        0 bytes
 32769 ;; Hardware stack levels used:    1
 32770 ;; Hardware stack levels required when called:   16
 32771 ;; This function calls:
 32772 ;;		_ADCC_SetADIInterruptHandler
 32773 ;;		_ADCC_SetADTIInterruptHandler
 32774 ;; This function is called by:
 32775 ;;		_SYSTEM_Initialize
 32776 ;; This function uses a reentrant model
 32777 ;;
 32778                           
 32779                           	psect	text141
 32780  01B430                     __ptext141:
 32781                           	opt callstack 0
 32782  01B430                     _ADCC_Initialize:
 32783                           	opt callstack 13
 32784                           
 32785                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32786                           
 32787                           ; BSR set to: 60
 32788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32789                           ;incstack = 0
 32790  01B430  013E               	movlb	62	; () banked
 32791  01B432  6BDE               	clrf	222,b	;volatile
 32792                           
 32793                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32794  01B434  6BDF               	clrf	223,b	;volatile
 32795                           
 32796                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32797  01B436  6BE0               	clrf	224,b	;volatile
 32798                           
 32799                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32800  01B438  6BE1               	clrf	225,b	;volatile
 32801                           
 32802                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32803  01B43A  6BE4               	clrf	228,b	;volatile
 32804                           
 32805                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32806  01B43C  6BE5               	clrf	229,b	;volatile
 32807                           
 32808                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32809  01B43E  6BEA               	clrf	234,b	;volatile
 32810                           
 32811                           ; BSR set to: 62
 32812                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32813  01B440  0E40               	movlw	64
 32814  01B442  6FEC               	movwf	236,b	;volatile
 32815                           
 32816                           ; BSR set to: 62
 32817                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32818  01B444  6BF1               	clrf	241,b	;volatile
 32819                           
 32820                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32821  01B446  0E20               	movlw	32
 32822  01B448  6FF3               	movwf	243,b	;volatile
 32823                           
 32824                           ; BSR set to: 62
 32825                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32826  01B44A  6BF4               	clrf	244,b	;volatile
 32827                           
 32828                           ; BSR set to: 62
 32829                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32830  01B44C  6BF5               	clrf	245,b	;volatile
 32831                           
 32832                           ; BSR set to: 62
 32833                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32834  01B44E  6BF6               	clrf	246,b	;volatile
 32835                           
 32836                           ; BSR set to: 62
 32837                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32838  01B450  6BF7               	clrf	247,b	;volatile
 32839                           
 32840                           ; BSR set to: 62
 32841                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32842  01B452  6BF9               	clrf	249,b	;volatile
 32843                           
 32844                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32845  01B454  0E5B               	movlw	91
 32846  01B456  6FFA               	movwf	250,b	;volatile
 32847                           
 32848                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32849  01B458  0E27               	movlw	39
 32850  01B45A  6FFB               	movwf	251,b	;volatile
 32851                           
 32852                           ; BSR set to: 62
 32853                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32854  01B45C  6BFC               	clrf	252,b	;volatile
 32855                           
 32856                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32857  01B45E  0E02               	movlw	2
 32858  01B460  6FFD               	movwf	253,b	;volatile
 32859                           
 32860                           ; BSR set to: 62
 32861                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32862  01B462  6BFE               	clrf	254,b	;volatile
 32863                           
 32864                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32865  01B464  0E07               	movlw	7
 32866  01B466  6FFF               	movwf	255,b	;volatile
 32867                           
 32868                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32869  01B468  0E84               	movlw	132
 32870  01B46A  6FF8               	movwf	248,b	;volatile
 32871                           
 32872                           ; BSR set to: 62
 32873                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32874  01B46C  0139               	movlb	57	; () banked
 32875  01B46E  95A1               	bcf	161,2,b	;volatile
 32876                           
 32877                           ; BSR set to: 57
 32878                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32879  01B470  8591               	bsf	145,2,b	;volatile
 32880                           
 32881                           ; BSR set to: 57
 32882                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32883  01B472  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 32884  01B474  6EE6               	movwf	postinc1,c
 32885  01B476  0EC7               	movlw	high _ADCC_DefaultInterruptHandler
 32886  01B478  6EE6               	movwf	postinc1,c
 32887  01B47A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32888  01B47C  6EE6               	movwf	postinc1,c
 32889  01B47E  EC6D  F0E1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32890                           
 32891                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32892  01B482  0139               	movlb	57	; () banked
 32893  01B484  97A1               	bcf	161,3,b	;volatile
 32894                           
 32895                           ; BSR set to: 57
 32896                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32897  01B486  8791               	bsf	145,3,b	;volatile
 32898                           
 32899                           ; BSR set to: 57
 32900                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32901  01B488  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 32902  01B48A  6EE6               	movwf	postinc1,c
 32903  01B48C  0EC7               	movlw	high _ADCC_DefaultInterruptHandler
 32904  01B48E  6EE6               	movwf	postinc1,c
 32905  01B490  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32906  01B492  6EE6               	movwf	postinc1,c
 32907  01B494  EC59  F0E1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32908                           
 32909                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32910  01B498  0012               	return		;funcret
 32911  01B49A                     __end_of_ADCC_Initialize:
 32912                           	opt callstack 0
 32913                           
 32914 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32915 ;; Defined at:
 32916 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32917 ;; Parameters:    Size  Location     Type
 32918 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32919 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32920 ;; Auto vars:     Size  Location     Type
 32921 ;;		None
 32922 ;; Return value:  Size  Location     Type
 32923 ;;                  1  [STACK] void 
 32924 ;; Registers used:
 32925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32926 ;; Tracked objects:
 32927 ;;		On entry : 0/0
 32928 ;;		On exit  : 0/0
 32929 ;;		Unchanged: 0/0
 32930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32935 ;;Total ram usage:        0 bytes
 32936 ;; Hardware stack levels used:    1
 32937 ;; Hardware stack levels required when called:   15
 32938 ;; This function calls:
 32939 ;;		Nothing
 32940 ;; This function is called by:
 32941 ;;		_ADCC_Initialize
 32942 ;;		_start_adc_scan
 32943 ;; This function uses a reentrant model
 32944 ;;
 32945                           
 32946                           	psect	text142
 32947  01C2B2                     __ptext142:
 32948                           	opt callstack 0
 32949  01C2B2                     _ADCC_SetADTIInterruptHandler:
 32950                           	opt callstack 14
 32951                           
 32952                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32953                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32954                           
 32955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32956                           ;incstack = 0
 32957  01C2B2  50E1               	movf	fsr1l,w,c
 32958  01C2B4  0FFD               	addlw	-3
 32959  01C2B6  6ED9               	movwf	fsr2l,c
 32960  01C2B8  50E2               	movf	fsr1h,w,c
 32961  01C2BA  6EDA               	movwf	fsr2h,c
 32962  01C2BC  0EFF               	movlw	255
 32963  01C2BE  22DA               	addwfc	fsr2h,f,c
 32964  01C2C0  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32965  01C2C6  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32966  01C2CC  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32967                           
 32968                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32969  01C2D2  52E5               	movf	postdec1,f,c
 32970  01C2D4  52E5               	movf	postdec1,f,c
 32971  01C2D6  52E5               	movf	postdec1,f,c
 32972  01C2D8  0012               	return		;funcret
 32973  01C2DA                     __end_of_ADCC_SetADTIInterruptHandler:
 32974                           	opt callstack 0
 32975                           
 32976 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32977 ;; Defined at:
 32978 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32979 ;; Parameters:    Size  Location     Type
 32980 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32981 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32982 ;; Auto vars:     Size  Location     Type
 32983 ;;		None
 32984 ;; Return value:  Size  Location     Type
 32985 ;;                  1  [STACK] void 
 32986 ;; Registers used:
 32987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32988 ;; Tracked objects:
 32989 ;;		On entry : 6/0
 32990 ;;		On exit  : 0/0
 32991 ;;		Unchanged: 0/0
 32992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32997 ;;Total ram usage:        0 bytes
 32998 ;; Hardware stack levels used:    1
 32999 ;; Hardware stack levels required when called:   15
 33000 ;; This function calls:
 33001 ;;		Nothing
 33002 ;; This function is called by:
 33003 ;;		_ADCC_Initialize
 33004 ;;		_start_adc_scan
 33005 ;; This function uses a reentrant model
 33006 ;;
 33007                           
 33008                           	psect	text143
 33009  01C2DA                     __ptext143:
 33010                           	opt callstack 0
 33011  01C2DA                     _ADCC_SetADIInterruptHandler:
 33012                           	opt callstack 14
 33013                           
 33014                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 33015                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33016                           
 33017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33018                           ;incstack = 0
 33019  01C2DA  50E1               	movf	fsr1l,w,c
 33020  01C2DC  0FFD               	addlw	-3
 33021  01C2DE  6ED9               	movwf	fsr2l,c
 33022  01C2E0  50E2               	movf	fsr1h,w,c
 33023  01C2E2  6EDA               	movwf	fsr2h,c
 33024  01C2E4  0EFF               	movlw	255
 33025  01C2E6  22DA               	addwfc	fsr2h,f,c
 33026  01C2E8  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 33027  01C2EE  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 33028  01C2F4  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 33029                           
 33030                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33031  01C2FA  52E5               	movf	postdec1,f,c
 33032  01C2FC  52E5               	movf	postdec1,f,c
 33033  01C2FE  52E5               	movf	postdec1,f,c
 33034  01C300  0012               	return		;funcret
 33035  01C302                     __end_of_ADCC_SetADIInterruptHandler:
 33036                           	opt callstack 0
 33037                           
 33038 ;; *************** function _INT1_ISR *****************
 33039 ;; Defined at:
 33040 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 33041 ;; Parameters:    Size  Location     Type
 33042 ;;		None
 33043 ;; Auto vars:     Size  Location     Type
 33044 ;;		None
 33045 ;; Return value:  Size  Location     Type
 33046 ;;                  1    wreg      void 
 33047 ;; Registers used:
 33048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33049 ;; Tracked objects:
 33050 ;;		On entry : 0/0
 33051 ;;		On exit  : 0/0
 33052 ;;		Unchanged: 0/0
 33053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33058 ;;Total ram usage:        4 bytes
 33059 ;; Hardware stack levels used:    1
 33060 ;; Hardware stack levels required when called:    5
 33061 ;; This function calls:
 33062 ;;		_INT1_CallBack
 33063 ;; This function is called by:
 33064 ;;		Interrupt level 1
 33065 ;; This function uses a non-reentrant model
 33066 ;;
 33067                           
 33068                           	psect	text144
 33069  01BD60                     __ptext144:
 33070                           	opt callstack 0
 33071  01BD60                     _INT1_ISR:
 33072                           	opt callstack 11
 33073                           
 33074                           ;incstack = 0
 33075  01BD60  006F FF60  F027    	movff	status,??_INT1_ISR
 33076  01BD66  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 33077  01BD6C  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 33078  01BD72  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 33079  01BD78  EE16  F0AF         	lfsr	1,___intlo_sp
 33080                           
 33081                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 33082  01BD7C  0139               	movlb	57	; () banked
 33083  01BD7E  91A5               	bcf	165,0,b	;volatile
 33084                           
 33085                           ; BSR set to: 57
 33086                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 33087  01BD80  ECD0  F0E1         	call	_INT1_CallBack	;wreg free
 33088  01BD84  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 33089  01BD8A  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 33090  01BD90  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 33091  01BD96  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 33092  01BD9C  0011               	retfie		f
 33093  01BD9E                     __end_of_INT1_ISR:
 33094                           	opt callstack 0
 33095                           
 33096 ;; *************** function _INT1_CallBack *****************
 33097 ;; Defined at:
 33098 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 33099 ;; Parameters:    Size  Location     Type
 33100 ;;		None
 33101 ;; Auto vars:     Size  Location     Type
 33102 ;;		None
 33103 ;; Return value:  Size  Location     Type
 33104 ;;                  1  [STACK] void 
 33105 ;; Registers used:
 33106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33107 ;; Tracked objects:
 33108 ;;		On entry : 3F/39
 33109 ;;		On exit  : 0/0
 33110 ;;		Unchanged: 0/0
 33111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33116 ;;Total ram usage:        0 bytes
 33117 ;; Hardware stack levels used:    1
 33118 ;; Hardware stack levels required when called:    4
 33119 ;; This function calls:
 33120 ;;		Absolute function
 33121 ;;		_INT1_DefaultInterruptHandler
 33122 ;;		_switch_handler
 33123 ;; This function is called by:
 33124 ;;		_INT1_ISR
 33125 ;; This function uses a reentrant model
 33126 ;;
 33127                           
 33128                           	psect	text145
 33129  01C3A0                     __ptext145:
 33130                           	opt callstack 0
 33131  01C3A0                     _INT1_CallBack:
 33132                           	opt callstack 11
 33133                           
 33134                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 33135                           
 33136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33137                           ;incstack = 0
 33138  01C3A0  0100               	movlb	0	; () banked
 33139  01C3A2  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33140  01C3A4  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33141  01C3A6  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33142  01C3A8  B4D8               	btfsc	status,2,c
 33143  01C3AA  0012               	return	
 33144                           
 33145                           ; BSR set to: 0
 33146                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 33147  01C3AC  D801               	call	u1021_28
 33148  01C3AE  0012               	return	
 33149  01C3B0                     u1021_28:
 33150  01C3B0  0005               	push	
 33151  01C3B2  6EFA               	movwf	pclath,c
 33152  01C3B4  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33153  01C3B6  6EFD               	movwf	tosl,c
 33154  01C3B8  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33155  01C3BA  6EFE               	movwf	tosh,c
 33156  01C3BC  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33157  01C3BE  6EFF               	movwf	tosu,c
 33158  01C3C0  50FA               	movf	pclath,w,c
 33159  01C3C2  0012               	return		;indir
 33160  01C3C4                     __end_of_INT1_CallBack:
 33161                           	opt callstack 0
 33162                           
 33163 ;; *************** function _INT1_DefaultInterruptHandler *****************
 33164 ;; Defined at:
 33165 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 33166 ;; Parameters:    Size  Location     Type
 33167 ;;		None
 33168 ;; Auto vars:     Size  Location     Type
 33169 ;;		None
 33170 ;; Return value:  Size  Location     Type
 33171 ;;                  1  [STACK] void 
 33172 ;; Registers used:
 33173 ;;		None
 33174 ;; Tracked objects:
 33175 ;;		On entry : 3F/0
 33176 ;;		On exit  : 0/0
 33177 ;;		Unchanged: 0/0
 33178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;Total ram usage:        0 bytes
 33184 ;; Hardware stack levels used:    1
 33185 ;; Hardware stack levels required when called:    3
 33186 ;; This function calls:
 33187 ;;		Nothing
 33188 ;; This function is called by:
 33189 ;;		_EXT_INT_Initialize
 33190 ;;		_INT1_CallBack
 33191 ;; This function uses a reentrant model
 33192 ;;
 33193                           
 33194                           	psect	text146
 33195  01C766                     __ptext146:
 33196                           	opt callstack 0
 33197  01C766                     _INT1_DefaultInterruptHandler:
 33198                           	opt callstack 11
 33199                           
 33200                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33201                           
 33202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33203                           ;incstack = 0
 33204  01C766  0012               	return		;funcret
 33205  01C768                     __end_of_INT1_DefaultInterruptHandler:
 33206                           	opt callstack 0
 33207                           
 33208 ;; *************** function _switch_handler *****************
 33209 ;; Defined at:
 33210 ;;		line 58 in file "dio.c"
 33211 ;; Parameters:    Size  Location     Type
 33212 ;;		None
 33213 ;; Auto vars:     Size  Location     Type
 33214 ;;  i               1  [STACK] unsigned char 
 33215 ;;  sw_value        1  [STACK] unsigned char 
 33216 ;; Return value:  Size  Location     Type
 33217 ;;                  1  [STACK] void 
 33218 ;; Registers used:
 33219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 33220 ;; Tracked objects:
 33221 ;;		On entry : 3F/0
 33222 ;;		On exit  : 0/0
 33223 ;;		Unchanged: 0/0
 33224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;Total ram usage:        0 bytes
 33230 ;; Hardware stack levels used:    1
 33231 ;; Hardware stack levels required when called:    3
 33232 ;; This function calls:
 33233 ;;		Nothing
 33234 ;; This function is called by:
 33235 ;;		_start_switch_handler
 33236 ;;		_INT1_CallBack
 33237 ;; This function uses a reentrant model
 33238 ;;
 33239                           
 33240                           	psect	text147
 33241  019684                     __ptext147:
 33242                           	opt callstack 0
 33243  019684                     _switch_handler:
 33244                           	opt callstack 0
 33245                           
 33246                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33247  019684  52E6               	movf	postinc1,f,c
 33248  019686  52E6               	movf	postinc1,f,c
 33249                           
 33250                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 33251                           ;stkvar	_i @ sp[(-2)+0]
 33252                           
 33253                           ;incstack = 0
 33254  019688  0EFE               	movlw	-2
 33255  01968A  6AE3               	clrf	plusw1,c
 33256  01968C  9ABF               	bcf	191,5,c	;volatile
 33257                           
 33258                           ;dio.c: 72:  __nop();
 33259  01968E  F000               	nop	
 33260                           
 33261                           ;dio.c: 73:  __nop();
 33262  019690  F000               	nop	
 33263                           
 33264                           ;dio.c: 74:  __nop();
 33265  019692  F000               	nop	
 33266                           
 33267                           ;dio.c: 75:  __nop();
 33268  019694  F000               	nop	
 33269                           
 33270                           ;dio.c: 76:  __nop();
 33271  019696  F000               	nop	
 33272                           
 33273                           ;dio.c: 77:  __nop();
 33274  019698  F000               	nop	
 33275  01969A  D016               	goto	l10836
 33276  01969C                     l10822:
 33277                           
 33278                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 33279  01969C  A6CF               	btfss	207,3,c	;volatile
 33280  01969E  D00E               	goto	u987_20
 33281  0196A0  D00A               	goto	u987_21
 33282  0196A2                     u985_28:
 33283                           
 33284                           ;stkvar	_sw_value @ sp[(-2)+1]
 33285  0196A2  0EFF               	movlw	-1
 33286  0196A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 33287                           
 33288                           ;dio.c: 83:    break;
 33289  0196AA  D027               	goto	l10838
 33290  0196AC                     l10824:
 33291                           
 33292                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 33293  0196AC  A4CF               	btfss	207,2,c	;volatile
 33294  0196AE  D006               	goto	u987_20
 33295  0196B0  D002               	goto	u987_21
 33296  0196B2                     l10826:
 33297                           
 33298                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 33299  0196B2  A6CD               	btfss	205,3,c	;volatile
 33300  0196B4  D003               	goto	u987_20
 33301  0196B6                     u987_21:
 33302  0196B6  6A0C               	clrf	(btemp+11)^0,c
 33303  0196B8  2A0C               	incf	(btemp+11)^0,f,c
 33304  0196BA  D7F3               	goto	u985_28
 33305  0196BC                     u987_20:
 33306  0196BC  6A0C               	clrf	(btemp+11)^0,c
 33307  0196BE  D7F1               	goto	u985_28
 33308  0196C0                     l10828:
 33309                           
 33310                           ;dio.c: 91:    sw_value = 1;
 33311                           ;stkvar	_sw_value @ sp[(-2)+1]
 33312  0196C0  0EFF               	movlw	-1
 33313  0196C2  6AE3               	clrf	plusw1,c
 33314  0196C4  2AE3               	incf	plusw1,f,c
 33315                           
 33316                           ;dio.c: 92:    break;
 33317  0196C6  D019               	goto	l10838
 33318  0196C8                     l10836:
 33319                           
 33320                           ;stkvar	_i @ sp[(-2)+0]
 33321  0196C8  0EFE               	movlw	-2
 33322  0196CA  50E3               	movf	plusw1,w,c
 33323  0196CC  6E0B               	movwf	(btemp+10)^0,c
 33324  0196CE  6A0C               	clrf	(btemp+11)^0,c
 33325                           
 33326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33327                           ; Switch size 1, requested type "simple"
 33328                           ; Number of cases is 1, Range of values is 0 to 0
 33329                           ; switch strategies available:
 33330                           ; Name         Instructions Cycles
 33331                           ; simple_byte            4     3 (average)
 33332                           ;	Chosen strategy is simple_byte
 33333  0196D0  500C               	movf	(btemp+11)^0,w,c
 33334  0196D2  0A00               	xorlw	0	; case 0
 33335  0196D4  A4D8               	btfss	status,2,c
 33336  0196D6  D7F4               	goto	l10828
 33337                           
 33338                           ; Switch size 1, requested type "simple"
 33339                           ; Number of cases is 5, Range of values is 0 to 4
 33340                           ; switch strategies available:
 33341                           ; Name         Instructions Cycles
 33342                           ; simple_byte           16     9 (average)
 33343                           ;	Chosen strategy is simple_byte
 33344  0196D8  500B               	movf	(btemp+10)^0,w,c
 33345  0196DA  0A00               	xorlw	0	; case 0
 33346  0196DC  B4D8               	btfsc	status,2,c
 33347  0196DE  D7F0               	goto	l10828
 33348  0196E0  0A01               	xorlw	1	; case 1
 33349  0196E2  B4D8               	btfsc	status,2,c
 33350  0196E4  D7ED               	goto	l10828
 33351  0196E6  0A03               	xorlw	3	; case 2
 33352  0196E8  B4D8               	btfsc	status,2,c
 33353  0196EA  D7E0               	goto	l10824
 33354  0196EC  0A01               	xorlw	1	; case 3
 33355  0196EE  B4D8               	btfsc	status,2,c
 33356  0196F0  D7D5               	goto	l10822
 33357  0196F2  0A07               	xorlw	7	; case 4
 33358  0196F4  B4D8               	btfsc	status,2,c
 33359  0196F6  D7DD               	goto	l10826
 33360  0196F8  D7E3               	goto	l10828
 33361  0196FA                     l10838:
 33362                           
 33363                           ;dio.c: 102:   if (sw_value) {
 33364                           ;stkvar	_sw_value @ sp[(-2)+1]
 33365  0196FA  0EFF               	movlw	-1
 33366  0196FC  50E3               	movf	plusw1,w,c
 33367  0196FE  B4D8               	btfsc	status,2,c
 33368  019700  D018               	goto	l10844
 33369                           
 33370                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 33371                           ;stkvar	_i @ sp[(-2)+0]
 33372  019702  0EFE               	movlw	-2
 33373  019704  50E3               	movf	plusw1,w,c
 33374  019706  0D05               	mullw	5
 33375  019708  0E54               	movlw	low _S
 33376  01970A  24F3               	addwf	243,w,c
 33377  01970C  6ED9               	movwf	fsr2l,c
 33378  01970E  0E02               	movlw	high _S
 33379  019710  20F4               	addwfc	prodh,w,c
 33380  019712  6EDA               	movwf	fsr2h,c
 33381  019714  04DE               	decf	postinc2,w,c
 33382  019716  A4D8               	btfss	status,2,c
 33383  019718  D049               	goto	l10852
 33384                           
 33385                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 33386                           ;stkvar	_i @ sp[(-2)+0]
 33387  01971A  0EFE               	movlw	-2
 33388  01971C  50E3               	movf	plusw1,w,c
 33389  01971E  0D05               	mullw	5
 33390  019720  0E54               	movlw	low _S
 33391  019722  24F3               	addwf	243,w,c
 33392  019724  6ED9               	movwf	fsr2l,c
 33393  019726  0E02               	movlw	high _S
 33394  019728  20F4               	addwfc	prodh,w,c
 33395  01972A  6EDA               	movwf	fsr2h,c
 33396  01972C  0E00               	movlw	0
 33397  01972E  6EDF               	movwf	indf2,c
 33398  019730  D03D               	goto	l10852
 33399  019732                     l10844:
 33400                           
 33401                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 33402                           ;stkvar	_i @ sp[(-2)+0]
 33403  019732  0EFE               	movlw	-2
 33404  019734  50E3               	movf	plusw1,w,c
 33405  019736  0D05               	mullw	5
 33406  019738  0E54               	movlw	low _S
 33407  01973A  24F3               	addwf	243,w,c
 33408  01973C  6ED9               	movwf	fsr2l,c
 33409  01973E  0E02               	movlw	high _S
 33410  019740  20F4               	addwfc	prodh,w,c
 33411  019742  6EDA               	movwf	fsr2h,c
 33412  019744  50DF               	movf	indf2,w,c
 33413  019746  A4D8               	btfss	status,2,c
 33414  019748  D031               	goto	l10852
 33415                           
 33416                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 33417                           ;stkvar	_i @ sp[(-2)+0]
 33418  01974A  0EFE               	movlw	-2
 33419  01974C  50E3               	movf	plusw1,w,c
 33420  01974E  0D05               	mullw	5
 33421  019750  0E54               	movlw	low _S
 33422  019752  24F3               	addwf	243,w,c
 33423  019754  6ED9               	movwf	fsr2l,c
 33424  019756  0E02               	movlw	high _S
 33425  019758  20F4               	addwfc	prodh,w,c
 33426  01975A  6EDA               	movwf	fsr2h,c
 33427  01975C  0E01               	movlw	1
 33428  01975E  6EDF               	movwf	indf2,c
 33429                           
 33430                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 33431  019760  EE20  F1C3         	lfsr	2,_V+188	;volatile
 33432                           
 33433                           ;stkvar	_i @ sp[(-2)+0]
 33434  019764  0EFE               	movlw	-2
 33435  019766  50E3               	movf	plusw1,w,c
 33436  019768  0D05               	mullw	5
 33437  01976A  0E55               	movlw	low (_S+1)
 33438  01976C  24F3               	addwf	243,w,c
 33439  01976E  6EE9               	movwf	fsr0l,c
 33440  019770  0E02               	movlw	high (_S+1)
 33441  019772  20F4               	addwfc	prodh,w,c
 33442  019774  6EEA               	movwf	fsr0h,c
 33443  019776  006F FF7B FFEE     	movff	postinc2,postinc0
 33444  01977C  006F FF7B FFEE     	movff	postinc2,postinc0
 33445  019782  006F FF7B FFEE     	movff	postinc2,postinc0
 33446  019788  006F FF7B FFEE     	movff	postinc2,postinc0
 33447                           
 33448                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 33449                           ;stkvar	_i @ sp[(-2)+0]
 33450  01978E  0EFE               	movlw	-2
 33451  019790  006F FF8C  F00C    	movff	plusw1,btemp+11
 33452  019796  0E01               	movlw	1
 33453  019798  6E0B               	movwf	(btemp+10)^0,c
 33454  01979A  2A0C               	incf	(btemp+11)^0,f,c
 33455  01979C  D002               	goto	u991_24
 33456  01979E                     u991_25:
 33457  01979E  90D8               	bcf	status,0,c
 33458  0197A0  360B               	rlcf	(btemp+10)^0,f,c
 33459  0197A2                     u991_24:
 33460  0197A2  2E0C               	decfsz	(btemp+11)^0,f,c
 33461  0197A4  D7FC               	goto	u991_25
 33462  0197A6  500B               	movf	(btemp+10)^0,w,c
 33463  0197A8  0102               	movlb	2	; () banked
 33464  0197AA  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33465  0197AC                     l10852:
 33466                           
 33467                           ;dio.c: 113:  } while (++i < 6);
 33468                           ;stkvar	_i @ sp[(-2)+0]
 33469  0197AC  0EFE               	movlw	-2
 33470  0197AE  2AE3               	incf	plusw1,f,c
 33471  0197B0  0EFE               	movlw	-2
 33472  0197B2  006F FF8C  F001    	movff	plusw1,btemp
 33473  0197B8  0E05               	movlw	5
 33474  0197BA  6401               	cpfsgt	btemp^0,c
 33475  0197BC  D785               	goto	l10836
 33476                           
 33477                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 33478  0197BE  8ABF               	bsf	191,5,c	;volatile
 33479                           
 33480                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33481  0197C0  52E5               	movf	postdec1,f,c
 33482  0197C2  52E5               	movf	postdec1,f,c
 33483  0197C4  0012               	return		;funcret
 33484  0197C6                     __end_of_switch_handler:
 33485                           	opt callstack 0
 33486                           
 33487 ;; *************** function _TMR5_ISR *****************
 33488 ;; Defined at:
 33489 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33490 ;; Parameters:    Size  Location     Type
 33491 ;;		None
 33492 ;; Auto vars:     Size  Location     Type
 33493 ;;		None
 33494 ;; Return value:  Size  Location     Type
 33495 ;;                  1    wreg      void 
 33496 ;; Registers used:
 33497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33498 ;; Tracked objects:
 33499 ;;		On entry : 0/0
 33500 ;;		On exit  : 3F/0
 33501 ;;		Unchanged: 0/0
 33502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33505 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33506 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33507 ;;Total ram usage:       15 bytes
 33508 ;; Hardware stack levels used:    1
 33509 ;; Hardware stack levels required when called:    9
 33510 ;; This function calls:
 33511 ;;		_TMR5_CallBack
 33512 ;;		_TMR5_WriteTimer
 33513 ;; This function is called by:
 33514 ;;		Interrupt level 1
 33515 ;; This function uses a non-reentrant model
 33516 ;;
 33517                           
 33518                           	psect	text148
 33519  01A3D0                     __ptext148:
 33520                           	opt callstack 0
 33521  01A3D0                     _TMR5_ISR:
 33522                           	opt callstack 7
 33523                           
 33524                           ;incstack = 0
 33525  01A3D0  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33526  01A3D6  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33527  01A3DC  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33528  01A3E2  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33529  01A3E8  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33530  01A3EE  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33531  01A3F4  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33532  01A3FA  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33533  01A400  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33534  01A406  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33535  01A40C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33536  01A412  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33537  01A418  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33538  01A41E  EE16  F0AF         	lfsr	1,___intlo_sp
 33539                           
 33540                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33541  01A422  0139               	movlb	57	; () banked
 33542  01A424  9DA8               	bcf	168,6,b	;volatile
 33543                           
 33544                           ; BSR set to: 57
 33545                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33546  01A426  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33547  01A42C  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33548  01A432  EC70  F0DE         	call	_TMR5_WriteTimer	;wreg free
 33549                           
 33550                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33551  01A436  0101               	movlb	1	; () banked
 33552  01A438  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33553  01A43A  6E2B               	movwf	??_TMR5_ISR^0,c
 33554  01A43C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33555  01A43E  0E05               	movlw	5
 33556  01A440  262B               	addwf	??_TMR5_ISR^0,f,c
 33557  01A442  0E00               	movlw	0
 33558  01A444  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33559  01A446  0100               	movlb	0	; () banked
 33560  01A448  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33561  01A44A  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33562  01A44C  502B               	movf	??_TMR5_ISR^0,w,c
 33563  01A44E  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33564  01A450  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33565  01A452  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33566  01A454  A0D8               	btfss	status,0,c
 33567  01A456  D005               	goto	i1l1019
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33571  01A458  ECE2  F0E1         	call	_TMR5_CallBack	;wreg free
 33572                           
 33573                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33574  01A45C  0100               	movlb	0	; () banked
 33575  01A45E  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33576  01A460  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33577  01A462                     i1l1019:
 33578                           
 33579                           ; BSR set to: 0
 33580  01A462  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33581  01A468  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33582  01A46E  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33583  01A474  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33584  01A47A  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33585  01A480  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33586  01A486  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33587  01A48C  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33588  01A492  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33589  01A498  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33590  01A49E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33591  01A4A4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33592  01A4AA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33593  01A4B0  0011               	retfie		f
 33594  01A4B2                     __end_of_TMR5_ISR:
 33595                           	opt callstack 0
 33596                           
 33597 ;; *************** function _TMR5_WriteTimer *****************
 33598 ;; Defined at:
 33599 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33600 ;; Parameters:    Size  Location     Type
 33601 ;;  timerVal        2  [STACK] unsigned short 
 33602 ;; Auto vars:     Size  Location     Type
 33603 ;;		None
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1  [STACK] void 
 33606 ;; Registers used:
 33607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33608 ;; Tracked objects:
 33609 ;;		On entry : 3F/39
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33617 ;;Total ram usage:        0 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:    3
 33620 ;; This function calls:
 33621 ;;		Nothing
 33622 ;; This function is called by:
 33623 ;;		_TMR5_ISR
 33624 ;; This function uses a reentrant model
 33625 ;;
 33626                           
 33627                           	psect	text149
 33628  01BCE0                     __ptext149:
 33629                           	opt callstack 0
 33630  01BCE0                     _TMR5_WriteTimer:
 33631                           	opt callstack 12
 33632                           
 33633                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33634                           
 33635                           ; BSR set to: 0
 33636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33637                           ;incstack = 0
 33638  01BCE0  A49A               	btfss	154,2,c	;volatile
 33639  01BCE2  D00F               	goto	l11062
 33640                           
 33641                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33642  01BCE4  909A               	bcf	154,0,c	;volatile
 33643                           
 33644                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33645                           ;stkvar	_timerVal @ sp[(0)+-2]
 33646  01BCE6  0EFF               	movlw	255
 33647  01BCE8  24E1               	addwf	fsr1l,w,c
 33648  01BCEA  6ED9               	movwf	fsr2l,c
 33649  01BCEC  0EFF               	movlw	255
 33650  01BCEE  20E2               	addwfc	fsr1h,w,c
 33651  01BCF0  6EDA               	movwf	fsr2h,c
 33652  01BCF2  50DF               	movf	indf2,w,c
 33653  01BCF4  6E99               	movwf	153,c	;volatile
 33654                           
 33655                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33656                           ;stkvar	_timerVal @ sp[(0)+-2]
 33657  01BCF6  0EFE               	movlw	-2
 33658  01BCF8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33659                           
 33660                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33661  01BCFE  809A               	bsf	154,0,c	;volatile
 33662                           
 33663                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33664  01BD00  D00C               	goto	l1002
 33665  01BD02                     l11062:
 33666                           
 33667                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33668                           ;stkvar	_timerVal @ sp[(0)+-2]
 33669  01BD02  0EFF               	movlw	255
 33670  01BD04  24E1               	addwf	fsr1l,w,c
 33671  01BD06  6ED9               	movwf	fsr2l,c
 33672  01BD08  0EFF               	movlw	255
 33673  01BD0A  20E2               	addwfc	fsr1h,w,c
 33674  01BD0C  6EDA               	movwf	fsr2h,c
 33675  01BD0E  50DF               	movf	indf2,w,c
 33676  01BD10  6E99               	movwf	153,c	;volatile
 33677                           
 33678                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33679                           ;stkvar	_timerVal @ sp[(0)+-2]
 33680  01BD12  0EFE               	movlw	-2
 33681  01BD14  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33682  01BD1A                     l1002:
 33683                           
 33684                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33685  01BD1A  52E5               	movf	postdec1,f,c
 33686  01BD1C  52E5               	movf	postdec1,f,c
 33687  01BD1E  0012               	return		;funcret
 33688  01BD20                     __end_of_TMR5_WriteTimer:
 33689                           	opt callstack 0
 33690                           
 33691 ;; *************** function _TMR5_CallBack *****************
 33692 ;; Defined at:
 33693 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33694 ;; Parameters:    Size  Location     Type
 33695 ;;		None
 33696 ;; Auto vars:     Size  Location     Type
 33697 ;;		None
 33698 ;; Return value:  Size  Location     Type
 33699 ;;                  1  [STACK] void 
 33700 ;; Registers used:
 33701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33702 ;; Tracked objects:
 33703 ;;		On entry : 3F/0
 33704 ;;		On exit  : 0/0
 33705 ;;		Unchanged: 0/0
 33706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33711 ;;Total ram usage:        0 bytes
 33712 ;; Hardware stack levels used:    1
 33713 ;; Hardware stack levels required when called:    8
 33714 ;; This function calls:
 33715 ;;		Absolute function
 33716 ;;		_TMR5_DefaultInterruptHandler
 33717 ;; This function is called by:
 33718 ;;		_TMR5_ISR
 33719 ;; This function uses a reentrant model
 33720 ;;
 33721                           
 33722                           	psect	text150
 33723  01C3C4                     __ptext150:
 33724                           	opt callstack 0
 33725  01C3C4                     _TMR5_CallBack:
 33726                           	opt callstack 7
 33727                           
 33728                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33729                           
 33730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33731                           ;incstack = 0
 33732  01C3C4  0100               	movlb	0	; () banked
 33733  01C3C6  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33734  01C3C8  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33735  01C3CA  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33736  01C3CC  B4D8               	btfsc	status,2,c
 33737  01C3CE  0012               	return	
 33738                           
 33739                           ; BSR set to: 0
 33740                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33741  01C3D0  D801               	call	u1030_28
 33742  01C3D2  0012               	return	
 33743  01C3D4                     u1030_28:
 33744  01C3D4  0005               	push	
 33745  01C3D6  6EFA               	movwf	pclath,c
 33746  01C3D8  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33747  01C3DA  6EFD               	movwf	tosl,c
 33748  01C3DC  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33749  01C3DE  6EFE               	movwf	tosh,c
 33750  01C3E0  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33751  01C3E2  6EFF               	movwf	tosu,c
 33752  01C3E4  50FA               	movf	pclath,w,c
 33753  01C3E6  0012               	return		;indir
 33754  01C3E8                     __end_of_TMR5_CallBack:
 33755                           	opt callstack 0
 33756                           
 33757 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33758 ;; Defined at:
 33759 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33760 ;; Parameters:    Size  Location     Type
 33761 ;;		None
 33762 ;; Auto vars:     Size  Location     Type
 33763 ;;		None
 33764 ;; Return value:  Size  Location     Type
 33765 ;;                  1  [STACK] void 
 33766 ;; Registers used:
 33767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33768 ;; Tracked objects:
 33769 ;;		On entry : 3F/0
 33770 ;;		On exit  : 0/0
 33771 ;;		Unchanged: 0/0
 33772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33777 ;;Total ram usage:        0 bytes
 33778 ;; Hardware stack levels used:    1
 33779 ;; Hardware stack levels required when called:    7
 33780 ;; This function calls:
 33781 ;;		_check_day_time
 33782 ;; This function is called by:
 33783 ;;		_TMR5_Initialize
 33784 ;;		_TMR5_CallBack
 33785 ;; This function uses a reentrant model
 33786 ;;
 33787                           
 33788                           	psect	text151
 33789  01BE10                     __ptext151:
 33790                           	opt callstack 0
 33791  01BE10                     _TMR5_DefaultInterruptHandler:
 33792                           	opt callstack 7
 33793                           
 33794                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33795                           
 33796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33797                           ;incstack = 0
 33798  01BE10  A0BE               	btfss	190,0,c	;volatile
 33799  01BE12  D002               	goto	u964_20
 33800  01BE14  0E01               	movlw	1
 33801  01BE16  D001               	goto	u964_26
 33802  01BE18                     u964_20:
 33803  01BE18  0E00               	movlw	0
 33804  01BE1A                     u964_26:
 33805  01BE1A  0AFF               	xorlw	255
 33806  01BE1C  6E0C               	movwf	(btemp+11)^0,c
 33807  01BE1E  50BE               	movf	190,w,c	;volatile
 33808  01BE20  180C               	xorwf	(btemp+11)^0,w,c
 33809  01BE22  0BFE               	andlw	-2
 33810  01BE24  180C               	xorwf	(btemp+11)^0,w,c
 33811  01BE26  6EBE               	movwf	190,c	;volatile
 33812                           
 33813                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33814  01BE28  0E01               	movlw	1
 33815  01BE2A  0101               	movlb	1	; () banked
 33816  01BE2C  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 33817  01BE2E  0E00               	movlw	0
 33818  01BE30  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33819  01BE32  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33820  01BE34  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 33821                           
 33822                           ; BSR set to: 1
 33823                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33824  01BE36  0E01               	movlw	1
 33825  01BE38  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33826  01BE3A  0E00               	movlw	0
 33827  01BE3C  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33828  01BE3E  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33829  01BE40  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33830                           
 33831                           ; BSR set to: 1
 33832                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33833  01BE42  EC62  F0C5         	call	_check_day_time	;wreg free
 33834                           
 33835                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33836  01BE46  0012               	return		;funcret
 33837  01BE48                     __end_of_TMR5_DefaultInterruptHandler:
 33838                           	opt callstack 0
 33839                           
 33840 ;; *************** function _check_day_time *****************
 33841 ;; Defined at:
 33842 ;;		line 165 in file "mbmc.c"
 33843 ;; Parameters:    Size  Location     Type
 33844 ;;		None
 33845 ;; Auto vars:     Size  Location     Type
 33846 ;;  light           4  [STACK] float 
 33847 ;; Return value:  Size  Location     Type
 33848 ;;                  1  [STACK] _Bool 
 33849 ;; Registers used:
 33850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33851 ;; Tracked objects:
 33852 ;;		On entry : 3F/1
 33853 ;;		On exit  : 0/0
 33854 ;;		Unchanged: 0/0
 33855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33860 ;;Total ram usage:        0 bytes
 33861 ;; Hardware stack levels used:    1
 33862 ;; Hardware stack levels required when called:    6
 33863 ;; This function calls:
 33864 ;;		___flge
 33865 ;;		_conv_raw_result
 33866 ;;		_get_ac_charger_relay
 33867 ;;		_set_ac_charger_relay
 33868 ;; This function is called by:
 33869 ;;		_TMR5_DefaultInterruptHandler
 33870 ;; This function uses a reentrant model
 33871 ;;
 33872                           
 33873                           	psect	text152
 33874  018AC4                     __ptext152:
 33875                           	opt callstack 0
 33876  018AC4                     _check_day_time:
 33877                           	opt callstack 0
 33878                           
 33879                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33880  018AC4  52E6               	movf	postinc1,f,c
 33881  018AC6  52E6               	movf	postinc1,f,c
 33882  018AC8  52E6               	movf	postinc1,f,c
 33883  018ACA  52E6               	movf	postinc1,f,c
 33884                           
 33885                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33886                           
 33887                           ;incstack = 0
 33888  018ACC  0E00               	movlw	0
 33889  018ACE  6EE6               	movwf	postinc1,c
 33890  018AD0  0E0D               	movlw	13
 33891  018AD2  6EE6               	movwf	postinc1,c
 33892  018AD4  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 33893                           
 33894                           ;stkvar	_light @ sp[(-4)+0]
 33895  018AD8  0EFC               	movlw	-4
 33896  018ADA  0060  F007  FFE3   	movff	btemp,plusw1
 33897  018AE0  0EFD               	movlw	-3
 33898  018AE2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33899  018AE8  0EFE               	movlw	-2
 33900  018AEA  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33901  018AF0  0EFF               	movlw	-1
 33902  018AF2  0060  F013  FFE3   	movff	btemp+3,plusw1
 33903                           
 33904                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33905  018AF8  2A41               	incf	check_day_time@day_delay^0,f,c
 33906  018AFA  0441               	decf	check_day_time@day_delay^0,w,c
 33907  018AFC  A4D8               	btfss	status,2,c
 33908  018AFE  D0A9               	goto	l2002
 33909  018B00  0101               	movlb	1	; () banked
 33910  018B02  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 33911  018B04  B4D8               	btfsc	status,2,c
 33912  018B06  D0A5               	goto	l2002
 33913                           
 33914                           ; BSR set to: 1
 33915                           ;mbmc.c: 173:   if (C.soc > 3) {
 33916  018B08  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33917  018B0C  0E01               	movlw	1
 33918  018B0E  50DB               	movf	plusw2,w,c
 33919  018B10  E104               	bnz	u943_20
 33920  018B12  0E04               	movlw	4
 33921  018B14  5CDE               	subwf	postinc2,w,c
 33922  018B16  A0D8               	btfss	status,0,c
 33923  018B18  D073               	goto	l10092
 33924  018B1A                     u943_20:
 33925                           
 33926                           ; BSR set to: 1
 33927                           ;mbmc.c: 174:    if (!C.day) {
 33928  018B1A  EE22  F021         	lfsr	2,_C+290	;volatile
 33929  018B1E  50DF               	movf	indf2,w,c
 33930  018B20  A4D8               	btfss	status,2,c
 33931  018B22  D035               	goto	l10080
 33932                           
 33933                           ; BSR set to: 1
 33934                           ;mbmc.c: 175:     if (light > 22.0) {
 33935                           ;stkvar	_light @ sp[(-4)+0]
 33936  018B24  0EFC               	movlw	-4
 33937  018B26  006F FF8F FFE6     	movff	plusw1,postinc1
 33938  018B2C  006F FF8F FFE6     	movff	plusw1,postinc1
 33939  018B32  006F FF8F FFE6     	movff	plusw1,postinc1
 33940  018B38  006F FF8F FFE6     	movff	plusw1,postinc1
 33941  018B3E  0E00               	movlw	0
 33942  018B40  6EE6               	movwf	postinc1,c
 33943  018B42  0E00               	movlw	0
 33944  018B44  6EE6               	movwf	postinc1,c
 33945  018B46  0EB0               	movlw	176
 33946  018B48  6EE6               	movwf	postinc1,c
 33947  018B4A  0E41               	movlw	65
 33948  018B4C  6EE6               	movwf	postinc1,c
 33949  018B4E  EC39  F0C9         	call	___flge	;wreg free
 33950  018B52  B001               	btfsc	btemp& (0+255),0,c
 33951  018B54  D07E               	goto	l2002
 33952                           
 33953                           ;mbmc.c: 176:      C.day = 1;
 33954  018B56  0E01               	movlw	1
 33955  018B58  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33956                           
 33957                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33958  018B5E  EE20  F188         	lfsr	2,_V+129	;volatile
 33959  018B62  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33960  018B68  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33961  018B6E  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33962  018B74  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33963                           
 33964                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33965  018B7A  EC5D  F0E3         	call	_get_ac_charger_relay	;wreg free
 33966  018B7E  5001               	movf	btemp^0,w,c
 33967  018B80  B4D8               	btfsc	status,2,c
 33968  018B82  D06B               	goto	l1998
 33969                           
 33970                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33971  018B84  0E00               	movlw	0
 33972  018B86  6EE6               	movwf	postinc1,c
 33973  018B88  EC47  F0E3         	call	_set_ac_charger_relay	;wreg free
 33974  018B8C  D066               	goto	l1998
 33975  018B8E                     l10080:
 33976                           
 33977                           ; BSR set to: 1
 33978                           ;mbmc.c: 184:     if (light < 12.0) {
 33979  018B8E  0E00               	movlw	0
 33980  018B90  6EE6               	movwf	postinc1,c
 33981  018B92  0E00               	movlw	0
 33982  018B94  6EE6               	movwf	postinc1,c
 33983  018B96  0E40               	movlw	64
 33984  018B98  6EE6               	movwf	postinc1,c
 33985  018B9A  0E41               	movlw	65
 33986  018B9C  6EE6               	movwf	postinc1,c
 33987                           
 33988                           ;stkvar	_light @ sp[(-8)+0]
 33989  018B9E  0EF8               	movlw	-8
 33990  018BA0  006F FF8F FFE6     	movff	plusw1,postinc1
 33991  018BA6  006F FF8F FFE6     	movff	plusw1,postinc1
 33992  018BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 33993  018BB2  006F FF8F FFE6     	movff	plusw1,postinc1
 33994  018BB8  EC39  F0C9         	call	___flge	;wreg free
 33995  018BBC  B001               	btfsc	btemp& (0+255),0,c
 33996  018BBE  D049               	goto	l2002
 33997                           
 33998                           ;mbmc.c: 185:      C.day = 0;
 33999  018BC0  0E00               	movlw	0
 34000  018BC2  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34001                           
 34002                           ;mbmc.c: 186:      C.day_end = V.ticks;
 34003  018BC8  EE20  F188         	lfsr	2,_V+129	;volatile
 34004  018BCC  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 34005  018BD2  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 34006  018BD8  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 34007  018BDE  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 34008                           
 34009                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 34010  018BE4  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34011  018BE8  0E01               	movlw	1
 34012  018BEA  50DB               	movf	plusw2,w,c
 34013  018BEC  E136               	bnz	l1998
 34014  018BEE  0E14               	movlw	20
 34015  018BF0  5CDE               	subwf	postinc2,w,c
 34016  018BF2  B0D8               	btfsc	status,0,c
 34017  018BF4  D032               	goto	l1998
 34018                           
 34019                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 34020  018BF6  0E01               	movlw	1
 34021  018BF8  6EE6               	movwf	postinc1,c
 34022  018BFA  EC47  F0E3         	call	_set_ac_charger_relay	;wreg free
 34023  018BFE  D02D               	goto	l1998
 34024  018C00                     l10092:
 34025                           
 34026                           ; BSR set to: 1
 34027                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 34028  018C00  EE21  F377         	lfsr	2,_C+120	;volatile
 34029  018C04  006F FF7B FFE6     	movff	postinc2,postinc1
 34030  018C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34031  018C10  006F FF7B FFE6     	movff	postinc2,postinc1
 34032  018C16  006F FF7B FFE6     	movff	postinc2,postinc1
 34033  018C1C  EE21  F37B         	lfsr	2,_C+124	;volatile
 34034  018C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34035  018C26  006F FF7B FFE6     	movff	postinc2,postinc1
 34036  018C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34037  018C32  006F FF7B FFE6     	movff	postinc2,postinc1
 34038  018C38  EC39  F0C9         	call	___flge	;wreg free
 34039  018C3C  B001               	btfsc	btemp& (0+255),0,c
 34040  018C3E  D009               	goto	l2002
 34041                           
 34042                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 34043  018C40  EC5D  F0E3         	call	_get_ac_charger_relay	;wreg free
 34044  018C44  5001               	movf	btemp^0,w,c
 34045  018C46  A4D8               	btfss	status,2,c
 34046  018C48  D004               	goto	l2002
 34047                           
 34048                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 34049  018C4A  0E01               	movlw	1
 34050  018C4C  6EE6               	movwf	postinc1,c
 34051  018C4E  EC47  F0E3         	call	_set_ac_charger_relay	;wreg free
 34052  018C52                     l2002:
 34053                           
 34054                           ;mbmc.c: 204:  if (day_delay >= 240)
 34055  018C52  0EEF               	movlw	239
 34056  018C54  6441               	cpfsgt	check_day_time@day_delay^0,c
 34057  018C56  D001               	goto	l1998
 34058                           
 34059                           ;mbmc.c: 205:   day_delay = 0;
 34060  018C58  6A41               	clrf	check_day_time@day_delay^0,c
 34061  018C5A                     l1998:
 34062                           
 34063                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34064  018C5A  52E5               	movf	postdec1,f,c
 34065  018C5C  52E5               	movf	postdec1,f,c
 34066  018C5E  52E5               	movf	postdec1,f,c
 34067  018C60  52E5               	movf	postdec1,f,c
 34068  018C62  0012               	return		;funcret
 34069  018C64                     __end_of_check_day_time:
 34070                           	opt callstack 0
 34071                           
 34072 ;; *************** function _set_ac_charger_relay *****************
 34073 ;; Defined at:
 34074 ;;		line 135 in file "mbmc.c"
 34075 ;; Parameters:    Size  Location     Type
 34076 ;;  mode            1  [STACK] const _Bool 
 34077 ;; Auto vars:     Size  Location     Type
 34078 ;;		None
 34079 ;; Return value:  Size  Location     Type
 34080 ;;                  1  [STACK] void 
 34081 ;; Registers used:
 34082 ;;		wreg, fsr1l, fsr1h
 34083 ;; Tracked objects:
 34084 ;;		On entry : 0/1
 34085 ;;		On exit  : 0/0
 34086 ;;		Unchanged: 0/0
 34087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34092 ;;Total ram usage:        0 bytes
 34093 ;; Hardware stack levels used:    1
 34094 ;; Hardware stack levels required when called:    3
 34095 ;; This function calls:
 34096 ;;		Nothing
 34097 ;; This function is called by:
 34098 ;;		_check_day_time
 34099 ;; This function uses a reentrant model
 34100 ;;
 34101                           
 34102                           	psect	text153
 34103  01C68E                     __ptext153:
 34104                           	opt callstack 0
 34105  01C68E                     _set_ac_charger_relay:
 34106                           	opt callstack 9
 34107                           
 34108                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 34109                           ;stkvar	_mode @ sp[(0)+-1]
 34110                           
 34111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34112                           ;incstack = 0
 34113  01C68E  0EFF               	movlw	-1
 34114  01C690  B0E3               	btfsc	plusw1,0,c
 34115  01C692  D002               	bra	u938_25
 34116  01C694  9CBD               	bcf	189,6,c	;volatile
 34117  01C696  D001               	bra	u938_26
 34118  01C698                     u938_25:
 34119  01C698  8CBD               	bsf	189,6,c	;volatile
 34120  01C69A                     u938_26:
 34121                           
 34122                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 34123  01C69A  52E5               	movf	postdec1,f,c
 34124  01C69C  0012               	return		;funcret
 34125  01C69E                     __end_of_set_ac_charger_relay:
 34126                           	opt callstack 0
 34127                           
 34128 ;; *************** function _get_ac_charger_relay *****************
 34129 ;; Defined at:
 34130 ;;		line 140 in file "mbmc.c"
 34131 ;; Parameters:    Size  Location     Type
 34132 ;;		None
 34133 ;; Auto vars:     Size  Location     Type
 34134 ;;		None
 34135 ;; Return value:  Size  Location     Type
 34136 ;;                  1  [STACK] _Bool 
 34137 ;; Registers used:
 34138 ;;		btemp
 34139 ;; Tracked objects:
 34140 ;;		On entry : 0/1
 34141 ;;		On exit  : 0/0
 34142 ;;		Unchanged: 0/0
 34143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34148 ;;Total ram usage:        0 bytes
 34149 ;; Hardware stack levels used:    1
 34150 ;; Hardware stack levels required when called:    3
 34151 ;; This function calls:
 34152 ;;		Nothing
 34153 ;; This function is called by:
 34154 ;;		_check_day_time
 34155 ;;		_calc_bsoc
 34156 ;; This function uses a reentrant model
 34157 ;;
 34158                           
 34159                           	psect	text154
 34160  01C6BA                     __ptext154:
 34161                           	opt callstack 0
 34162  01C6BA                     _get_ac_charger_relay:
 34163                           	opt callstack 10
 34164                           
 34165                           ;mbmc.c: 142:  return LATDbits.LATD6;
 34166                           
 34167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34168                           ;incstack = 0
 34169  01C6BA  ACBD               	btfss	189,6,c	;volatile
 34170  01C6BC  D003               	goto	u957_20
 34171  01C6BE  6A01               	clrf	btemp^0,c
 34172  01C6C0  2A01               	incf	btemp^0,f,c
 34173  01C6C2  0012               	return	
 34174  01C6C4                     u957_20:
 34175  01C6C4  6A01               	clrf	btemp^0,c
 34176                           
 34177                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34178  01C6C6  0012               	return		;funcret
 34179  01C6C8                     __end_of_get_ac_charger_relay:
 34180                           	opt callstack 0
 34181                           
 34182 ;; *************** function _TMR3_ISR *****************
 34183 ;; Defined at:
 34184 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 34185 ;; Parameters:    Size  Location     Type
 34186 ;;		None
 34187 ;; Auto vars:     Size  Location     Type
 34188 ;;		None
 34189 ;; Return value:  Size  Location     Type
 34190 ;;                  1    wreg      void 
 34191 ;; Registers used:
 34192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34193 ;; Tracked objects:
 34194 ;;		On entry : 0/0
 34195 ;;		On exit  : 3F/0
 34196 ;;		Unchanged: 0/0
 34197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34200 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34201 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34202 ;;Total ram usage:       25 bytes
 34203 ;; Hardware stack levels used:    1
 34204 ;; Hardware stack levels required when called:   14
 34205 ;; This function calls:
 34206 ;;		_TMR3_CallBack
 34207 ;;		_TMR3_WriteTimer
 34208 ;; This function is called by:
 34209 ;;		Interrupt level 1
 34210 ;; This function uses a non-reentrant model
 34211 ;;
 34212                           
 34213                           	psect	text155
 34214  0193D4                     __ptext155:
 34215                           	opt callstack 0
 34216  0193D4                     _TMR3_ISR:
 34217                           	opt callstack 2
 34218                           
 34219                           ;incstack = 0
 34220  0193D4  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 34221  0193DA  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 34222  0193E0  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 34223  0193E6  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 34224  0193EC  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 34225  0193F2  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 34226  0193F8  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 34227  0193FE  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 34228  019404  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 34229  01940A  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 34230  019410  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 34231  019416  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 34232  01941C  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 34233  019422  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 34234  019428  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 34235  01942E  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 34236  019434  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 34237  01943A  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 34238  019440  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 34239  019446  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 34240  01944C  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 34241  019452  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 34242  019458  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 34243  01945E  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 34244  019464  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 34245  01946A  EE16  F0AF         	lfsr	1,___intlo_sp
 34246                           
 34247                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 34248  01946E  0139               	movlb	57	; () banked
 34249  019470  9DA6               	bcf	166,6,b	;volatile
 34250                           
 34251                           ; BSR set to: 57
 34252                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 34253  019472  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 34254  019478  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 34255  01947E  EC90  F0DE         	call	_TMR3_WriteTimer	;wreg free
 34256                           
 34257                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 34258  019482  0100               	movlb	0	; () banked
 34259  019484  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 34260  019486  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34261  019488  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34262  01948A  E104               	bnz	i1u1297_20
 34263  01948C  0E28               	movlw	40
 34264  01948E  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 34265  019490  A0D8               	btfss	status,0,c
 34266  019492  D005               	goto	i1l1207
 34267  019494                     i1u1297_20:
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 34271  019494  ECF4  F0E1         	call	_TMR3_CallBack	;wreg free
 34272                           
 34273                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 34274  019498  0100               	movlb	0	; () banked
 34275  01949A  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 34276  01949C  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 34277  01949E                     i1l1207:
 34278                           
 34279                           ; BSR set to: 0
 34280  01949E  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 34281  0194A4  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 34282  0194AA  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 34283  0194B0  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 34284  0194B6  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 34285  0194BC  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 34286  0194C2  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 34287  0194C8  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 34288  0194CE  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 34289  0194D4  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 34290  0194DA  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 34291  0194E0  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 34292  0194E6  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 34293  0194EC  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 34294  0194F2  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 34295  0194F8  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 34296  0194FE  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 34297  019504  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 34298  01950A  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 34299  019510  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 34300  019516  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 34301  01951C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 34302  019522  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 34303  019528  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 34304  01952E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 34305  019534  0011               	retfie		f
 34306  019536                     __end_of_TMR3_ISR:
 34307                           	opt callstack 0
 34308                           
 34309 ;; *************** function _TMR3_WriteTimer *****************
 34310 ;; Defined at:
 34311 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 34312 ;; Parameters:    Size  Location     Type
 34313 ;;  timerVal        2  [STACK] unsigned short 
 34314 ;; Auto vars:     Size  Location     Type
 34315 ;;		None
 34316 ;; Return value:  Size  Location     Type
 34317 ;;                  1  [STACK] void 
 34318 ;; Registers used:
 34319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34320 ;; Tracked objects:
 34321 ;;		On entry : 3F/39
 34322 ;;		On exit  : 0/0
 34323 ;;		Unchanged: 0/0
 34324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34329 ;;Total ram usage:        0 bytes
 34330 ;; Hardware stack levels used:    1
 34331 ;; Hardware stack levels required when called:    3
 34332 ;; This function calls:
 34333 ;;		Nothing
 34334 ;; This function is called by:
 34335 ;;		_TMR3_ISR
 34336 ;; This function uses a reentrant model
 34337 ;;
 34338                           
 34339                           	psect	text156
 34340  01BD20                     __ptext156:
 34341                           	opt callstack 0
 34342  01BD20                     _TMR3_WriteTimer:
 34343                           	opt callstack 12
 34344                           
 34345                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34346                           
 34347                           ; BSR set to: 0
 34348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34349                           ;incstack = 0
 34350  01BD20  A4A6               	btfss	166,2,c	;volatile
 34351  01BD22  D00F               	goto	l11080
 34352                           
 34353                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34354  01BD24  90A6               	bcf	166,0,c	;volatile
 34355                           
 34356                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34357                           ;stkvar	_timerVal @ sp[(0)+-2]
 34358  01BD26  0EFF               	movlw	255
 34359  01BD28  24E1               	addwf	fsr1l,w,c
 34360  01BD2A  6ED9               	movwf	fsr2l,c
 34361  01BD2C  0EFF               	movlw	255
 34362  01BD2E  20E2               	addwfc	fsr1h,w,c
 34363  01BD30  6EDA               	movwf	fsr2h,c
 34364  01BD32  50DF               	movf	indf2,w,c
 34365  01BD34  6EA5               	movwf	165,c	;volatile
 34366                           
 34367                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34368                           ;stkvar	_timerVal @ sp[(0)+-2]
 34369  01BD36  0EFE               	movlw	-2
 34370  01BD38  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34371                           
 34372                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34373  01BD3E  80A6               	bsf	166,0,c	;volatile
 34374                           
 34375                           ;mcc_generated_files/tmr3.c: 141:     }
 34376  01BD40  D00C               	goto	l1190
 34377  01BD42                     l11080:
 34378                           
 34379                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34380                           ;stkvar	_timerVal @ sp[(0)+-2]
 34381  01BD42  0EFF               	movlw	255
 34382  01BD44  24E1               	addwf	fsr1l,w,c
 34383  01BD46  6ED9               	movwf	fsr2l,c
 34384  01BD48  0EFF               	movlw	255
 34385  01BD4A  20E2               	addwfc	fsr1h,w,c
 34386  01BD4C  6EDA               	movwf	fsr2h,c
 34387  01BD4E  50DF               	movf	indf2,w,c
 34388  01BD50  6EA5               	movwf	165,c	;volatile
 34389                           
 34390                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34391                           ;stkvar	_timerVal @ sp[(0)+-2]
 34392  01BD52  0EFE               	movlw	-2
 34393  01BD54  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34394  01BD5A                     l1190:
 34395                           
 34396                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34397  01BD5A  52E5               	movf	postdec1,f,c
 34398  01BD5C  52E5               	movf	postdec1,f,c
 34399  01BD5E  0012               	return		;funcret
 34400  01BD60                     __end_of_TMR3_WriteTimer:
 34401                           	opt callstack 0
 34402                           
 34403 ;; *************** function _TMR3_CallBack *****************
 34404 ;; Defined at:
 34405 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34406 ;; Parameters:    Size  Location     Type
 34407 ;;		None
 34408 ;; Auto vars:     Size  Location     Type
 34409 ;;		None
 34410 ;; Return value:  Size  Location     Type
 34411 ;;                  1  [STACK] void 
 34412 ;; Registers used:
 34413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34414 ;; Tracked objects:
 34415 ;;		On entry : 3F/0
 34416 ;;		On exit  : 0/0
 34417 ;;		Unchanged: 0/0
 34418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34423 ;;Total ram usage:        0 bytes
 34424 ;; Hardware stack levels used:    1
 34425 ;; Hardware stack levels required when called:   13
 34426 ;; This function calls:
 34427 ;;		Absolute function
 34428 ;;		_TMR3_DefaultInterruptHandler
 34429 ;;		_calc_bsoc
 34430 ;; This function is called by:
 34431 ;;		_TMR3_ISR
 34432 ;; This function uses a reentrant model
 34433 ;;
 34434                           
 34435                           	psect	text157
 34436  01C3E8                     __ptext157:
 34437                           	opt callstack 0
 34438  01C3E8                     _TMR3_CallBack:
 34439                           	opt callstack 2
 34440                           
 34441                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34442                           
 34443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34444                           ;incstack = 0
 34445  01C3E8  0100               	movlb	0	; () banked
 34446  01C3EA  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34447  01C3EC  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34448  01C3EE  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34449  01C3F0  B4D8               	btfsc	status,2,c
 34450  01C3F2  0012               	return	
 34451                           
 34452                           ; BSR set to: 0
 34453                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34454  01C3F4  D801               	call	u1284_28
 34455  01C3F6  0012               	return	
 34456  01C3F8                     u1284_28:
 34457  01C3F8  0005               	push	
 34458  01C3FA  6EFA               	movwf	pclath,c
 34459  01C3FC  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34460  01C3FE  6EFD               	movwf	tosl,c
 34461  01C400  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34462  01C402  6EFE               	movwf	tosh,c
 34463  01C404  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34464  01C406  6EFF               	movwf	tosu,c
 34465  01C408  50FA               	movf	pclath,w,c
 34466  01C40A  0012               	return		;indir
 34467  01C40C                     __end_of_TMR3_CallBack:
 34468                           	opt callstack 0
 34469                           
 34470 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34471 ;; Defined at:
 34472 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34473 ;; Parameters:    Size  Location     Type
 34474 ;;		None
 34475 ;; Auto vars:     Size  Location     Type
 34476 ;;		None
 34477 ;; Return value:  Size  Location     Type
 34478 ;;                  1  [STACK] void 
 34479 ;; Registers used:
 34480 ;;		None
 34481 ;; Tracked objects:
 34482 ;;		On entry : 3F/0
 34483 ;;		On exit  : 0/0
 34484 ;;		Unchanged: 0/0
 34485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34490 ;;Total ram usage:        0 bytes
 34491 ;; Hardware stack levels used:    1
 34492 ;; Hardware stack levels required when called:    3
 34493 ;; This function calls:
 34494 ;;		Nothing
 34495 ;; This function is called by:
 34496 ;;		_TMR3_Initialize
 34497 ;;		_TMR3_CallBack
 34498 ;; This function uses a reentrant model
 34499 ;;
 34500                           
 34501                           	psect	text158
 34502  01C768                     __ptext158:
 34503                           	opt callstack 0
 34504  01C768                     _TMR3_DefaultInterruptHandler:
 34505                           	opt callstack 11
 34506                           
 34507                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34508                           
 34509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34510                           ;incstack = 0
 34511  01C768  0012               	return		;funcret
 34512  01C76A                     __end_of_TMR3_DefaultInterruptHandler:
 34513                           	opt callstack 0
 34514                           
 34515 ;; *************** function _calc_bsoc *****************
 34516 ;; Defined at:
 34517 ;;		line 39 in file "bsoc.c"
 34518 ;; Parameters:    Size  Location     Type
 34519 ;;		None
 34520 ;; Auto vars:     Size  Location     Type
 34521 ;;  adj             4  [STACK] float 
 34522 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34523 ;;		 -> port_data(512), 
 34524 ;; Return value:  Size  Location     Type
 34525 ;;                  1  [STACK] void 
 34526 ;; Registers used:
 34527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34528 ;; Tracked objects:
 34529 ;;		On entry : 3F/0
 34530 ;;		On exit  : 5/1
 34531 ;;		Unchanged: 0/0
 34532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34537 ;;Total ram usage:        0 bytes
 34538 ;; Hardware stack levels used:    1
 34539 ;; Hardware stack levels required when called:   12
 34540 ;; This function calls:
 34541 ;;		_StartTimer
 34542 ;;		___asfladd
 34543 ;;		___fldiv
 34544 ;;		___flge
 34545 ;;		___flmul
 34546 ;;		___flneg
 34547 ;;		___fltol
 34548 ;;		_fabsf
 34549 ;;		_get_ac_charger_relay
 34550 ;;		_port_data_dma_ptr
 34551 ;;		_send_port_data_dma
 34552 ;;		_sprintf
 34553 ;;		_strlen
 34554 ;; This function is called by:
 34555 ;;		_init_bsoc
 34556 ;;		_TMR3_CallBack
 34557 ;; This function uses a reentrant model
 34558 ;;
 34559                           
 34560                           	psect	text159
 34561  0133D2                     __ptext159:
 34562                           	opt callstack 0
 34563  0133D2                     _calc_bsoc:
 34564                           	opt callstack 0
 34565                           
 34566                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34567  0133D2  0E06               	movlw	6
 34568  0133D4  26E1               	addwf	fsr1l,f,c
 34569  0133D6  0E00               	movlw	0
 34570  0133D8  22E2               	addwfc	fsr1h,f,c
 34571                           
 34572                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34573                           
 34574                           ;incstack = 0
 34575  0133DA  0E00               	movlw	0
 34576  0133DC  6E09               	movwf	(btemp+8)^0,c
 34577  0133DE  0E00               	movlw	0
 34578  0133E0  6E0A               	movwf	(btemp+9)^0,c
 34579  0133E2  0E80               	movlw	128
 34580  0133E4  6E0B               	movwf	(btemp+10)^0,c
 34581  0133E6  0E3F               	movlw	63
 34582  0133E8  6E0C               	movwf	(btemp+11)^0,c
 34583                           
 34584                           ;stkvar	_adj @ sp[(-6)+0]
 34585  0133EA  0EFA               	movlw	-6
 34586  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 34587  0133F2  0EFB               	movlw	-5
 34588  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34589  0133FA  0EFC               	movlw	-4
 34590  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34591  013402  0EFD               	movlw	-3
 34592  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 34593  01340A  82BE               	bsf	190,1,c	;volatile
 34594                           
 34595                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34596  01340C  0E00               	movlw	0
 34597  01340E  6EE6               	movwf	postinc1,c
 34598  013410  0E00               	movlw	0
 34599  013412  6EE6               	movwf	postinc1,c
 34600  013414  0E61               	movlw	97
 34601  013416  6EE6               	movwf	postinc1,c
 34602  013418  0E45               	movlw	69
 34603  01341A  6EE6               	movwf	postinc1,c
 34604  01341C  EE21  F343         	lfsr	2,_C+68	;volatile
 34605  013420  006F FF7B FFE6     	movff	postinc2,postinc1
 34606  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34607  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34608  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34609  013438  EC13  F0A7         	call	___fldiv	;wreg free
 34610  01343C  0060  F007  FFE6   	movff	btemp,postinc1
 34611  013442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34612  013448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34613  01344E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34614  013454  0E8F               	movlw	low (_C+144)
 34615  013456  6EE6               	movwf	postinc1,c
 34616  013458  0E07               	movlw	high (_C+144)
 34617  01345A  6EE6               	movwf	postinc1,c
 34618  01345C  EC6E  F0D9         	call	___asfladd	;wreg free
 34619                           
 34620                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34621  013460  EE21  F38F         	lfsr	2,_C+144	;volatile
 34622  013464  006F FF7B FFE6     	movff	postinc2,postinc1
 34623  01346A  006F FF7B FFE6     	movff	postinc2,postinc1
 34624  013470  006F FF7B FFE6     	movff	postinc2,postinc1
 34625  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 34626  01347C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34627  013480  006F FF7B FFE6     	movff	postinc2,postinc1
 34628  013486  006F FF7B FFE6     	movff	postinc2,postinc1
 34629  01348C  006F FF7B FFE6     	movff	postinc2,postinc1
 34630  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34631  013498  EC39  F0C9         	call	___flge	;wreg free
 34632  01349C  B001               	btfsc	btemp& (0+255),0,c
 34633  01349E  D00E               	goto	l13214
 34634                           
 34635                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34636  0134A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 34637  0134A4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34638  0134AA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34639  0134B0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34640  0134B6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34641  0134BC                     l13214:
 34642                           
 34643                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34644  0134BC  0ECD               	movlw	205
 34645  0134BE  6EE6               	movwf	postinc1,c
 34646  0134C0  0ECC               	movlw	204
 34647  0134C2  6EE6               	movwf	postinc1,c
 34648  0134C4  0ECC               	movlw	204
 34649  0134C6  6EE6               	movwf	postinc1,c
 34650  0134C8  0E3D               	movlw	61
 34651  0134CA  6EE6               	movwf	postinc1,c
 34652  0134CC  EE21  F38F         	lfsr	2,_C+144	;volatile
 34653  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 34654  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34655  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34656  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34657  0134E8  EC39  F0C9         	call	___flge	;wreg free
 34658  0134EC  B001               	btfsc	btemp& (0+255),0,c
 34659  0134EE  D010               	goto	l13218
 34660                           
 34661                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34662  0134F0  0ECD               	movlw	205
 34663  0134F2  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34664  0134F8  0ECC               	movlw	204
 34665  0134FA  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34666  013500  0ECC               	movlw	204
 34667  013502  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34668  013508  0E3D               	movlw	61
 34669  01350A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34670  013510                     l13218:
 34671                           
 34672                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34673  013510  EE21  F343         	lfsr	2,_C+68	;volatile
 34674  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 34675  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 34676  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 34677  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 34678  01352C  0E0A               	movlw	10
 34679  01352E  6EE6               	movwf	postinc1,c
 34680  013530  0ED7               	movlw	215
 34681  013532  6EE6               	movwf	postinc1,c
 34682  013534  0E23               	movlw	35
 34683  013536  6EE6               	movwf	postinc1,c
 34684  013538  0E3C               	movlw	60
 34685  01353A  6EE6               	movwf	postinc1,c
 34686  01353C  EC39  F0C9         	call	___flge	;wreg free
 34687  013540  B001               	btfsc	btemp& (0+255),0,c
 34688  013542  D01C               	goto	l13222
 34689                           
 34690                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34691  013544  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34692  01354A  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34693  013550  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34694  013556  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34695                           
 34696                           ;stkvar	_adj @ sp[(-6)+0]
 34697  01355C  0EFA               	movlw	-6
 34698  01355E  0060  F027  FFE3   	movff	btemp+8,plusw1
 34699  013564  0EFB               	movlw	-5
 34700  013566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34701  01356C  0EFC               	movlw	-4
 34702  01356E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34703  013574  0EFD               	movlw	-3
 34704  013576  0060  F033  FFE3   	movff	btemp+11,plusw1
 34705  01357C                     l13222:
 34706                           
 34707                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34708  01357C  0E0A               	movlw	10
 34709  01357E  6EE6               	movwf	postinc1,c
 34710  013580  0ED7               	movlw	215
 34711  013582  6EE6               	movwf	postinc1,c
 34712  013584  0E23               	movlw	35
 34713  013586  6EE6               	movwf	postinc1,c
 34714  013588  0E3C               	movlw	60
 34715  01358A  6EE6               	movwf	postinc1,c
 34716  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 34717  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 34718  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 34719  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 34720  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 34721  0135A8  EC39  F0C9         	call	___flge	;wreg free
 34722  0135AC  B001               	btfsc	btemp& (0+255),0,c
 34723  0135AE  D01C               	goto	l13226
 34724                           
 34725                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34726  0135B0  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34727  0135B6  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34728  0135BC  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34729  0135C2  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34730                           
 34731                           ;stkvar	_adj @ sp[(-6)+0]
 34732  0135C8  0EFA               	movlw	-6
 34733  0135CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 34734  0135D0  0EFB               	movlw	-5
 34735  0135D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34736  0135D8  0EFC               	movlw	-4
 34737  0135DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34738  0135E0  0EFD               	movlw	-3
 34739  0135E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 34740  0135E8                     l13226:
 34741                           
 34742                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34743  0135E8  0E00               	movlw	0
 34744  0135EA  6EE6               	movwf	postinc1,c
 34745  0135EC  0E00               	movlw	0
 34746  0135EE  6EE6               	movwf	postinc1,c
 34747  0135F0  0E61               	movlw	97
 34748  0135F2  6EE6               	movwf	postinc1,c
 34749  0135F4  0E45               	movlw	69
 34750  0135F6  6EE6               	movwf	postinc1,c
 34751                           
 34752                           ;stkvar	_adj @ sp[(-10)+0]
 34753  0135F8  0EF6               	movlw	-10
 34754  0135FA  006F FF8F FFE6     	movff	plusw1,postinc1
 34755  013600  006F FF8F FFE6     	movff	plusw1,postinc1
 34756  013606  006F FF8F FFE6     	movff	plusw1,postinc1
 34757  01360C  006F FF8F FFE6     	movff	plusw1,postinc1
 34758  013612  EE21  F343         	lfsr	2,_C+68	;volatile
 34759  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 34760  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 34761  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 34762  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 34763  01362E  EC20  F09F         	call	___flmul	;wreg free
 34764  013632  0060  F007  FFE6   	movff	btemp,postinc1
 34765  013638  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34766  01363E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34767  013644  0060  F013  FFE6   	movff	btemp+3,postinc1
 34768  01364A  EC13  F0A7         	call	___fldiv	;wreg free
 34769  01364E  0060  F007  FFE6   	movff	btemp,postinc1
 34770  013654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34771  01365A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34772  013660  0060  F013  FFE6   	movff	btemp+3,postinc1
 34773  013666  0E8F               	movlw	low (_C+144)
 34774  013668  6EE6               	movwf	postinc1,c
 34775  01366A  0E07               	movlw	high (_C+144)
 34776  01366C  6EE6               	movwf	postinc1,c
 34777  01366E  EC6E  F0D9         	call	___asfladd	;wreg free
 34778                           
 34779                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34780  013672  EE21  F38F         	lfsr	2,_C+144	;volatile
 34781  013676  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34782  01367C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34783  013682  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34784  013688  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34785                           
 34786                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34787  01368E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34788  013692  006F FF7B FFE6     	movff	postinc2,postinc1
 34789  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 34790  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 34791  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34792  0136AA  EE21  F38B         	lfsr	2,_C+140	;volatile
 34793  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 34794  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 34795  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 34796  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34797  0136C6  EC39  F0C9         	call	___flge	;wreg free
 34798  0136CA  B001               	btfsc	btemp& (0+255),0,c
 34799  0136CC  D00E               	goto	l13234
 34800                           
 34801                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34802  0136CE  EE21  F38B         	lfsr	2,_C+140	;volatile
 34803  0136D2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34804  0136D8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34805  0136DE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34806  0136E4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34807  0136EA                     l13234:
 34808                           
 34809                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34810  0136EA  0ECD               	movlw	205
 34811  0136EC  6EE6               	movwf	postinc1,c
 34812  0136EE  0ECC               	movlw	204
 34813  0136F0  6EE6               	movwf	postinc1,c
 34814  0136F2  0ECC               	movlw	204
 34815  0136F4  6EE6               	movwf	postinc1,c
 34816  0136F6  0E3D               	movlw	61
 34817  0136F8  6EE6               	movwf	postinc1,c
 34818  0136FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 34819  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 34820  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 34821  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 34822  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 34823  013716  EC39  F0C9         	call	___flge	;wreg free
 34824  01371A  B001               	btfsc	btemp& (0+255),0,c
 34825  01371C  D010               	goto	l13238
 34826                           
 34827                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34828  01371E  0ECD               	movlw	205
 34829  013720  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34830  013726  0ECC               	movlw	204
 34831  013728  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34832  01372E  0ECC               	movlw	204
 34833  013730  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34834  013736  0E3D               	movlw	61
 34835  013738  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34836  01373E                     l13238:
 34837                           
 34838                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34839  01373E  0E00               	movlw	0
 34840  013740  6EE6               	movwf	postinc1,c
 34841  013742  0E00               	movlw	0
 34842  013744  6EE6               	movwf	postinc1,c
 34843  013746  0E61               	movlw	97
 34844  013748  6EE6               	movwf	postinc1,c
 34845  01374A  0E45               	movlw	69
 34846  01374C  6EE6               	movwf	postinc1,c
 34847  01374E  EE21  F347         	lfsr	2,_C+72	;volatile
 34848  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 34849  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 34850  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 34851  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 34852  01376A  EC13  F0A7         	call	___fldiv	;wreg free
 34853  01376E  0060  F007  FFE6   	movff	btemp,postinc1
 34854  013774  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34855  01377A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34856  013780  0060  F013  FFE6   	movff	btemp+3,postinc1
 34857  013786  0E93               	movlw	low (_C+148)
 34858  013788  6EE6               	movwf	postinc1,c
 34859  01378A  0E07               	movlw	high (_C+148)
 34860  01378C  6EE6               	movwf	postinc1,c
 34861  01378E  EC6E  F0D9         	call	___asfladd	;wreg free
 34862                           
 34863                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34864  013792  0E00               	movlw	0
 34865  013794  6EE6               	movwf	postinc1,c
 34866  013796  0E00               	movlw	0
 34867  013798  6EE6               	movwf	postinc1,c
 34868  01379A  0E61               	movlw	97
 34869  01379C  6EE6               	movwf	postinc1,c
 34870  01379E  0E45               	movlw	69
 34871  0137A0  6EE6               	movwf	postinc1,c
 34872  0137A2  EE21  F37B         	lfsr	2,_C+124	;volatile
 34873  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 34874  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 34875  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 34876  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 34877  0137BE  EC13  F0A7         	call	___fldiv	;wreg free
 34878  0137C2  0060  F007  FFE6   	movff	btemp,postinc1
 34879  0137C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34880  0137CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34881  0137D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 34882  0137DA  0EA7               	movlw	low (_C+168)
 34883  0137DC  6EE6               	movwf	postinc1,c
 34884  0137DE  0E07               	movlw	high (_C+168)
 34885  0137E0  6EE6               	movwf	postinc1,c
 34886  0137E2  EC6E  F0D9         	call	___asfladd	;wreg free
 34887                           
 34888                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34889  0137E6  0E00               	movlw	0
 34890  0137E8  6EE6               	movwf	postinc1,c
 34891  0137EA  0E00               	movlw	0
 34892  0137EC  6EE6               	movwf	postinc1,c
 34893  0137EE  0E61               	movlw	97
 34894  0137F0  6EE6               	movwf	postinc1,c
 34895  0137F2  0E45               	movlw	69
 34896  0137F4  6EE6               	movwf	postinc1,c
 34897  0137F6  EE21  F377         	lfsr	2,_C+120	;volatile
 34898  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 34899  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 34900  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 34901  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 34902  013812  EC13  F0A7         	call	___fldiv	;wreg free
 34903  013816  0060  F007  FFE6   	movff	btemp,postinc1
 34904  01381C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34905  013822  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34906  013828  0060  F013  FFE6   	movff	btemp+3,postinc1
 34907  01382E  0EAB               	movlw	low (_C+172)
 34908  013830  6EE6               	movwf	postinc1,c
 34909  013832  0E07               	movlw	high (_C+172)
 34910  013834  6EE6               	movwf	postinc1,c
 34911  013836  EC6E  F0D9         	call	___asfladd	;wreg free
 34912                           
 34913                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34914  01383A  0E00               	movlw	0
 34915  01383C  6EE6               	movwf	postinc1,c
 34916  01383E  0E00               	movlw	0
 34917  013840  6EE6               	movwf	postinc1,c
 34918  013842  0E61               	movlw	97
 34919  013844  6EE6               	movwf	postinc1,c
 34920  013846  0E45               	movlw	69
 34921  013848  6EE6               	movwf	postinc1,c
 34922  01384A  EE21  F373         	lfsr	2,_C+116	;volatile
 34923  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 34924  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34927  013866  EC13  F0A7         	call	___fldiv	;wreg free
 34928  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 34929  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34930  013876  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34931  01387C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34932  013882  0EAF               	movlw	low (_C+176)
 34933  013884  6EE6               	movwf	postinc1,c
 34934  013886  0E07               	movlw	high (_C+176)
 34935  013888  6EE6               	movwf	postinc1,c
 34936  01388A  EC6E  F0D9         	call	___asfladd	;wreg free
 34937                           
 34938                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34939  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 34940  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 34941  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34942  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34943  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34944  0138AA  0E00               	movlw	0
 34945  0138AC  6EE6               	movwf	postinc1,c
 34946  0138AE  0E00               	movlw	0
 34947  0138B0  6EE6               	movwf	postinc1,c
 34948  0138B2  0E00               	movlw	0
 34949  0138B4  6EE6               	movwf	postinc1,c
 34950  0138B6  0E00               	movlw	0
 34951  0138B8  6EE6               	movwf	postinc1,c
 34952  0138BA  EC39  F0C9         	call	___flge	;wreg free
 34953  0138BE  B001               	btfsc	btemp& (0+255),0,c
 34954  0138C0  D02A               	goto	l13244
 34955                           
 34956                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34957  0138C2  0E00               	movlw	0
 34958  0138C4  6EE6               	movwf	postinc1,c
 34959  0138C6  0E00               	movlw	0
 34960  0138C8  6EE6               	movwf	postinc1,c
 34961  0138CA  0E61               	movlw	97
 34962  0138CC  6EE6               	movwf	postinc1,c
 34963  0138CE  0E45               	movlw	69
 34964  0138D0  6EE6               	movwf	postinc1,c
 34965  0138D2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34966  0138D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34967  0138DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34968  0138E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34969  0138E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34970  0138EE  EC13  F0A7         	call	___fldiv	;wreg free
 34971  0138F2  0060  F007  FFE6   	movff	btemp,postinc1
 34972  0138F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34973  0138FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34974  013904  0060  F013  FFE6   	movff	btemp+3,postinc1
 34975  01390A  0E9F               	movlw	low (_C+160)
 34976  01390C  6EE6               	movwf	postinc1,c
 34977  01390E  0E07               	movlw	high (_C+160)
 34978  013910  6EE6               	movwf	postinc1,c
 34979  013912  EC6E  F0D9         	call	___asfladd	;wreg free
 34980  013916                     l13244:
 34981                           
 34982                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34983  013916  EE21  F37F         	lfsr	2,_C+128	;volatile
 34984  01391A  0E03               	movlw	3
 34985  01391C  AEDB               	btfss	plusw2,7,c
 34986  01391E  D038               	goto	l13248
 34987                           
 34988                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34989  013920  0E00               	movlw	0
 34990  013922  6EE6               	movwf	postinc1,c
 34991  013924  0E00               	movlw	0
 34992  013926  6EE6               	movwf	postinc1,c
 34993  013928  0E61               	movlw	97
 34994  01392A  6EE6               	movwf	postinc1,c
 34995  01392C  0E45               	movlw	69
 34996  01392E  6EE6               	movwf	postinc1,c
 34997  013930  EE21  F37F         	lfsr	2,_C+128	;volatile
 34998  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 34999  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 35000  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 35001  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 35002  01394C  EC13  F0A7         	call	___fldiv	;wreg free
 35003  013950  0060  F007  FFE6   	movff	btemp,postinc1
 35004  013956  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35005  01395C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35006  013962  0060  F013  FFE6   	movff	btemp+3,postinc1
 35007  013968  EC11  F0D5         	call	_fabsf	;wreg free
 35008  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 35009  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35010  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35011  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35012  013984  0EA3               	movlw	low (_C+164)
 35013  013986  6EE6               	movwf	postinc1,c
 35014  013988  0E07               	movlw	high (_C+164)
 35015  01398A  6EE6               	movwf	postinc1,c
 35016  01398C  EC6E  F0D9         	call	___asfladd	;wreg free
 35017  013990                     l13248:
 35018                           
 35019                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 35020  013990  0E00               	movlw	0
 35021  013992  6EE6               	movwf	postinc1,c
 35022  013994  0E00               	movlw	0
 35023  013996  6EE6               	movwf	postinc1,c
 35024  013998  0EC8               	movlw	200
 35025  01399A  6EE6               	movwf	postinc1,c
 35026  01399C  0E42               	movlw	66
 35027  01399E  6EE6               	movwf	postinc1,c
 35028  0139A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35029  0139A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35030  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35031  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35032  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35033  0139BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 35034  0139C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35035  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35036  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35037  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35038  0139D8  EC13  F0A7         	call	___fldiv	;wreg free
 35039  0139DC  0060  F007  FFE6   	movff	btemp,postinc1
 35040  0139E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35041  0139E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35042  0139EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35043  0139F4  EC20  F09F         	call	___flmul	;wreg free
 35044  0139F8  0060  F007  FFE6   	movff	btemp,postinc1
 35045  0139FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35046  013A04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35047  013A0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 35048  013A10  EC80  F0C8         	call	___fltol	;wreg free
 35049  013A14  0060  F004  F00B   	movff	btemp,btemp+10
 35050  013A1A  0060  F008  F00C   	movff	btemp+1,btemp+11
 35051  013A20  0E01               	movlw	1
 35052  013A22  260B               	addwf	(btemp+10)^0,f,c
 35053  013A24  0E00               	movlw	0
 35054  013A26  220C               	addwfc	(btemp+11)^0,f,c
 35055  013A28  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 35056  013A2E  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 35057                           
 35058                           ;bsoc.c: 76:  if (C.soc > 100)
 35059  013A34  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35060  013A38  0E01               	movlw	1
 35061  013A3A  50DB               	movf	plusw2,w,c
 35062  013A3C  E104               	bnz	u1277_20
 35063  013A3E  0E65               	movlw	101
 35064  013A40  5CDE               	subwf	postinc2,w,c
 35065  013A42  A0D8               	btfss	status,0,c
 35066  013A44  D008               	goto	l13254
 35067  013A46                     u1277_20:
 35068                           
 35069                           ;bsoc.c: 77:   C.soc = 100;
 35070  013A46  0E64               	movlw	100
 35071  013A48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 35072  013A4E  0E00               	movlw	0
 35073  013A50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 35074  013A56                     l13254:
 35075                           
 35076                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 35077  013A56  EE21  F343         	lfsr	2,_C+68	;volatile
 35078  013A5A  0E03               	movlw	3
 35079  013A5C  AEDB               	btfss	plusw2,7,c
 35080  013A5E  D047               	goto	l2147
 35081                           
 35082                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 35083  013A60  EE21  F343         	lfsr	2,_C+68	;volatile
 35084  013A64  006F FF7B FFE6     	movff	postinc2,postinc1
 35085  013A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35086  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 35087  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 35088  013A7C  EE21  F39B         	lfsr	2,_C+156	;volatile
 35089  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 35090  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 35091  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35092  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 35093  013A98  EC13  F0A7         	call	___fldiv	;wreg free
 35094  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 35095  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35096  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35097  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35098  013AB4  ECF7  F0DC         	call	___flneg	;wreg free
 35099  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 35100  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35101  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35102  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 35103  013AD0  EC80  F0C8         	call	___fltol	;wreg free
 35104  013AD4  0060  F004  F00B   	movff	btemp,btemp+10
 35105  013ADA  0060  F008  F00C   	movff	btemp+1,btemp+11
 35106  013AE0  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 35107  013AE6  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 35108                           
 35109                           ;bsoc.c: 81:  } else {
 35110  013AEC  D008               	goto	l13258
 35111  013AEE                     l2147:
 35112                           
 35113                           ;bsoc.c: 82:   C.runtime = 99;
 35114  013AEE  0E63               	movlw	99
 35115  013AF0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35116  013AF6  0E00               	movlw	0
 35117  013AF8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35118  013AFE                     l13258:
 35119                           
 35120                           ;bsoc.c: 84:  if (C.runtime > 99)
 35121  013AFE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35122  013B02  0E01               	movlw	1
 35123  013B04  50DB               	movf	plusw2,w,c
 35124  013B06  E104               	bnz	u1279_20
 35125  013B08  0E64               	movlw	100
 35126  013B0A  5CDE               	subwf	postinc2,w,c
 35127  013B0C  A0D8               	btfss	status,0,c
 35128  013B0E  D008               	goto	l13262
 35129  013B10                     u1279_20:
 35130                           
 35131                           ;bsoc.c: 85:   C.runtime = 99;
 35132  013B10  0E63               	movlw	99
 35133  013B12  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35134  013B18  0E00               	movlw	0
 35135  013B1A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35136  013B20                     l13262:
 35137                           
 35138                           ;bsoc.c: 87:  V.lowint_count++;
 35139  013B20  0E01               	movlw	1
 35140  013B22  0101               	movlb	1	; () banked
 35141  013B24  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 35142  013B26  0E00               	movlw	0
 35143  013B28  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 35144  013B2A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 35145  013B2C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 35146                           
 35147                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 35148  013B2E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 35149  013B30  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 35150  013B32  A4D8               	btfss	status,2,c
 35151  013B34  D177               	goto	l13274
 35152                           
 35153                           ; BSR set to: 1
 35154  013B36  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35155  013B38  B4D8               	btfsc	status,2,c
 35156  013B3A  D174               	goto	l13274
 35157                           
 35158                           ; BSR set to: 1
 35159                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 35160  013B3C  EC78  F0E3         	call	_port_data_dma_ptr	;wreg free
 35161                           
 35162                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35163  013B40  0EFF               	movlw	-1
 35164  013B42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35165  013B48  0EFE               	movlw	-2
 35166  013B4A  0060  F007  FFE3   	movff	btemp,plusw1
 35167                           
 35168                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 35169  013B50  EE21  F3B9         	lfsr	2,_C+186	;volatile
 35170  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 35171  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35172  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 35173  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 35174  013B6C  EE21  F3BD         	lfsr	2,_C+190	;volatile
 35175  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 35176  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 35177  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 35178  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 35179  013B88  EE21  F39B         	lfsr	2,_C+156	;volatile
 35180  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35181  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 35182  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 35183  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 35184  013BA4  EE22  F026         	lfsr	2,_C+295	;volatile
 35185  013BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35186  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35187  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 35188  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 35189  013BC0  EE22  F022         	lfsr	2,_C+291	;volatile
 35190  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 35191  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 35192  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 35193  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 35194  013BDC  EE22  F021         	lfsr	2,_C+290	;volatile
 35195  013BE0  50DF               	movf	indf2,w,c
 35196  013BE2  6EE6               	movwf	postinc1,c
 35197  013BE4  0E00               	movlw	0
 35198  013BE6  6EE6               	movwf	postinc1,c
 35199  013BE8  EC5D  F0E3         	call	_get_ac_charger_relay	;wreg free
 35200  013BEC  5001               	movf	btemp^0,w,c
 35201  013BEE  6EE6               	movwf	postinc1,c
 35202  013BF0  0E00               	movlw	0
 35203  013BF2  6EE6               	movwf	postinc1,c
 35204  013BF4  EE21  F367         	lfsr	2,_C+104	;volatile
 35205  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 35206  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 35207  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 35208  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 35209  013C10  EE21  F387         	lfsr	2,_C+136	;volatile
 35210  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 35211  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 35212  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 35213  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 35214  013C2C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35215  013C30  006F FF78  F00B    	movff	postinc2,btemp+10
 35216  013C36  006F FF74  F00C    	movff	postdec2,btemp+11
 35217  013C3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35218  013C42  0060  F033  FFE6   	movff	btemp+11,postinc1
 35219  013C48  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35220  013C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 35221  013C52  006F FF74  F00C    	movff	postdec2,btemp+11
 35222  013C58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35223  013C5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 35224  013C64  EE21  F393         	lfsr	2,_C+148	;volatile
 35225  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 35226  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 35227  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 35228  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 35229  013C80  EE21  F38F         	lfsr	2,_C+144	;volatile
 35230  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 35231  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 35232  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 35233  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 35234  013C9C  EE21  F377         	lfsr	2,_C+120	;volatile
 35235  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 35236  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 35237  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 35238  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 35239  013CB8  EE21  F373         	lfsr	2,_C+116	;volatile
 35240  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 35241  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 35242  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 35243  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 35244  013CD4  EE21  F37B         	lfsr	2,_C+124	;volatile
 35245  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 35246  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 35247  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 35248  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 35249  013CF0  EE21  F37F         	lfsr	2,_C+128	;volatile
 35250  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 35251  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 35252  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 35253  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 35254  013D0C  EE21  F347         	lfsr	2,_C+72	;volatile
 35255  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 35256  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 35257  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 35258  013D22  006F FF7B FFE6     	movff	postinc2,postinc1
 35259  013D28  EE21  F343         	lfsr	2,_C+68	;volatile
 35260  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 35261  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 35262  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 35263  013D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 35264  013D44  EE21  F363         	lfsr	2,_C+100	;volatile
 35265  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 35266  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 35267  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 35268  013D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35269  013D60  EE21  F34B         	lfsr	2,_C+76	;volatile
 35270  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 35271  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35272  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 35273  013D76  006F FF7B FFE6     	movff	postinc2,postinc1
 35274  013D7C  EE21  F34F         	lfsr	2,_C+80	;volatile
 35275  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 35276  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 35277  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35278  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 35279  013D98  EE21  F353         	lfsr	2,_C+84	;volatile
 35280  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 35281  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 35282  013DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35283  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35284  013DB4  0060  F623  FFE6   	movff	_V+129,postinc1
 35285  013DBA  0060  F627  FFE6   	movff	_V+130,postinc1
 35286  013DC0  0060  F62B  FFE6   	movff	_V+131,postinc1
 35287  013DC6  0060  F62F  FFE6   	movff	_V+132,postinc1
 35288  013DCC  0E32               	movlw	50
 35289  013DCE  6EE6               	movwf	postinc1,c
 35290  013DD0  0E00               	movlw	0
 35291  013DD2  6EE6               	movwf	postinc1,c
 35292  013DD4  0E8B               	movlw	low STR_67
 35293  013DD6  6EE6               	movwf	postinc1,c
 35294  013DD8  0EFB               	movlw	high STR_67
 35295  013DDA  6EE6               	movwf	postinc1,c
 35296                           
 35297                           ;stkvar	_log_ptr @ sp[(-98)+4]
 35298  013DDC  0EA2               	movlw	-94
 35299  013DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 35300  013DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 35301  013DEA  0E5E               	movlw	94
 35302  013DEC  6EE6               	movwf	postinc1,c
 35303  013DEE  EC72  F0D0         	call	_sprintf	;wreg free
 35304                           
 35305                           ; BSR set to: 0
 35306                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 35307  013DF2  0E7D               	movlw	125
 35308  013DF4  6EE6               	movwf	postinc1,c
 35309  013DF6  0E00               	movlw	0
 35310  013DF8  6EE6               	movwf	postinc1,c
 35311  013DFA  0E0A               	movlw	10
 35312  013DFC  6EE6               	movwf	postinc1,c
 35313  013DFE  EC50  F0DE         	call	_StartTimer	;wreg free
 35314                           
 35315                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 35316                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35317  013E02  0EFE               	movlw	-2
 35318  013E04  006F FF8F FFE6     	movff	plusw1,postinc1
 35319  013E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 35320  013E10  ECBA  F0D6         	call	_strlen	;wreg free
 35321  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 35322  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35323  013E20  EC5D  F0DC         	call	_send_port_data_dma	;wreg free
 35324  013E24                     l13274:
 35325                           
 35326                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 35327  013E24  0E09               	movlw	9
 35328  013E26  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35329  013E28  D001               	goto	l2151
 35330                           
 35331                           ;bsoc.c: 102:   log_update_wait = 0;
 35332  013E2A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35333  013E2C                     l2151:
 35334                           
 35335                           ;bsoc.c: 104:  C.update = 0;
 35336  013E2C  0E00               	movlw	0
 35337  013E2E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35338                           
 35339                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 35340  013E34  92BE               	bcf	190,1,c	;volatile
 35341                           
 35342                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35343  013E36  0EFA               	movlw	250
 35344  013E38  26E1               	addwf	fsr1l,f,c
 35345  013E3A  0EFF               	movlw	255
 35346  013E3C  22E2               	addwfc	fsr1h,f,c
 35347  013E3E  0012               	return		;funcret
 35348  013E40                     __end_of_calc_bsoc:
 35349                           	opt callstack 0
 35350                           
 35351 ;; *************** function _send_port_data_dma *****************
 35352 ;; Defined at:
 35353 ;;		line 398 in file "eadog.c"
 35354 ;; Parameters:    Size  Location     Type
 35355 ;;  dsize           2  [STACK] unsigned short 
 35356 ;; Auto vars:     Size  Location     Type
 35357 ;;		None
 35358 ;; Return value:  Size  Location     Type
 35359 ;;                  1  [STACK] void 
 35360 ;; Registers used:
 35361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35362 ;; Tracked objects:
 35363 ;;		On entry : 0/0
 35364 ;;		On exit  : 3F/3B
 35365 ;;		Unchanged: 0/0
 35366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35371 ;;Total ram usage:        0 bytes
 35372 ;; Hardware stack levels used:    1
 35373 ;; Hardware stack levels required when called:    3
 35374 ;; This function calls:
 35375 ;;		Nothing
 35376 ;; This function is called by:
 35377 ;;		_calc_bsoc
 35378 ;; This function uses a reentrant model
 35379 ;;
 35380                           
 35381                           	psect	text160
 35382  01B8BA                     __ptext160:
 35383                           	opt callstack 0
 35384  01B8BA                     _send_port_data_dma:
 35385                           	opt callstack 10
 35386                           
 35387                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35388                           ;stkvar	_dsize @ sp[(0)+-2]
 35389                           
 35390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35391                           ;incstack = 0
 35392  01B8BA  0EFE               	movlw	-2
 35393  01B8BC  04E3               	decf	plusw1,w,c
 35394  01B8BE  0EFF               	movlw	-1
 35395  01B8C0  006F FF8C  F001    	movff	plusw1,btemp
 35396  01B8C6  0E02               	movlw	2
 35397  01B8C8  5A01               	subwfb	btemp^0,f,c
 35398  01B8CA  A0D8               	btfss	status,0,c
 35399  01B8CC  D00C               	goto	l10202
 35400                           
 35401                           ;eadog.c: 401:   dsize = 512;
 35402  01B8CE  0E00               	movlw	0
 35403  01B8D0  6E0B               	movwf	(btemp+10)^0,c
 35404  01B8D2  0E02               	movlw	2
 35405  01B8D4  6E0C               	movwf	(btemp+11)^0,c
 35406                           
 35407                           ;stkvar	_dsize @ sp[(0)+-2]
 35408  01B8D6  0EFE               	movlw	-2
 35409  01B8D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35410  01B8DE  0EFF               	movlw	-1
 35411  01B8E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 35412  01B8E6                     l10202:
 35413                           
 35414                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35415  01B8E6  013B               	movlb	59	; () banked
 35416  01B8E8  9FDC               	bcf	220,7,b	;volatile
 35417                           
 35418                           ; BSR set to: 59
 35419                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35420                           ;stkvar	_dsize @ sp[(0)+-2]
 35421  01B8EA  0EFE               	movlw	-2
 35422  01B8EC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35423  01B8F2  0EFF               	movlw	-1
 35424  01B8F4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35425                           
 35426                           ; BSR set to: 59
 35427                           ;eadog.c: 405:  DMA2DSZ = 1;
 35428  01B8FA  0E00               	movlw	0
 35429  01B8FC  6FCF               	movwf	207,b	;volatile
 35430  01B8FE  0E01               	movlw	1
 35431  01B900  6FCE               	movwf	206,b	;volatile
 35432                           
 35433                           ; BSR set to: 59
 35434                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35435  01B902  8FDC               	bsf	220,7,b	;volatile
 35436                           
 35437                           ; BSR set to: 59
 35438                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35439  01B904  8DDC               	bsf	220,6,b	;volatile
 35440                           
 35441                           ; BSR set to: 59
 35442                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35443  01B906  52E5               	movf	postdec1,f,c
 35444  01B908  52E5               	movf	postdec1,f,c
 35445  01B90A  0012               	return		;funcret
 35446  01B90C                     __end_of_send_port_data_dma:
 35447                           	opt callstack 0
 35448                           
 35449 ;; *************** function _port_data_dma_ptr *****************
 35450 ;; Defined at:
 35451 ;;		line 413 in file "eadog.c"
 35452 ;; Parameters:    Size  Location     Type
 35453 ;;		None
 35454 ;; Auto vars:     Size  Location     Type
 35455 ;;		None
 35456 ;; Return value:  Size  Location     Type
 35457 ;;                  2  [STACK] PTR unsigned char 
 35458 ;; Registers used:
 35459 ;;		wreg, status,2, status,0, btemp, btemp+1
 35460 ;; Tracked objects:
 35461 ;;		On entry : 3F/1
 35462 ;;		On exit  : 0/0
 35463 ;;		Unchanged: 0/0
 35464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35469 ;;Total ram usage:        0 bytes
 35470 ;; Hardware stack levels used:    1
 35471 ;; Hardware stack levels required when called:    3
 35472 ;; This function calls:
 35473 ;;		Nothing
 35474 ;; This function is called by:
 35475 ;;		_calc_bsoc
 35476 ;; This function uses a reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text161
 35480  01C6F0                     __ptext161:
 35481                           	opt callstack 0
 35482  01C6F0                     _port_data_dma_ptr:
 35483                           	opt callstack 10
 35484                           
 35485                           ;eadog.c: 415:  return port_data;
 35486                           
 35487                           ; BSR set to: 59
 35488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35489                           ;incstack = 0
 35490  01C6F0  0EFF               	movlw	low _port_data
 35491  01C6F2  6E01               	movwf	btemp^0,c
 35492  01C6F4  0E04               	movlw	high _port_data
 35493  01C6F6  6E02               	movwf	(btemp+1)^0,c
 35494                           
 35495                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35496  01C6F8  0012               	return		;funcret
 35497  01C6FA                     __end_of_port_data_dma_ptr:
 35498                           	opt callstack 0
 35499                           
 35500 ;; *************** function ___asfladd *****************
 35501 ;; Defined at:
 35502 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35503 ;; Parameters:    Size  Location     Type
 35504 ;;  f1p             2  [STACK] PTR 
 35505 ;;		 -> C(299), 
 35506 ;;  f2              4  [STACK] PTR 
 35507 ;; Auto vars:     Size  Location     Type
 35508 ;;		None
 35509 ;; Return value:  Size  Location     Type
 35510 ;;                  4  [STACK] PTR 
 35511 ;; Registers used:
 35512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35513 ;; Tracked objects:
 35514 ;;		On entry : 0/0
 35515 ;;		On exit  : 0/0
 35516 ;;		Unchanged: 0/0
 35517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35522 ;;Total ram usage:        0 bytes
 35523 ;; Hardware stack levels used:    1
 35524 ;; Hardware stack levels required when called:    4
 35525 ;; This function calls:
 35526 ;;		___fladd
 35527 ;; This function is called by:
 35528 ;;		_calc_bsoc
 35529 ;; This function uses a reentrant model
 35530 ;;
 35531                           
 35532                           	psect	text162
 35533  01B2DC                     __ptext162:
 35534                           	opt callstack 0
 35535  01B2DC                     ___asfladd:
 35536                           	opt callstack 9
 35537                           
 35538                           ;	Return value of ___asfladd is never used
 35539                           ;stkvar	_f2 @ sp[(0)+-6]
 35540                           
 35541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35542                           ;incstack = 0
 35543  01B2DC  0EFA               	movlw	-6
 35544  01B2DE  006F FF8F FFE6     	movff	plusw1,postinc1
 35545  01B2E4  006F FF8F FFE6     	movff	plusw1,postinc1
 35546  01B2EA  006F FF8F FFE6     	movff	plusw1,postinc1
 35547  01B2F0  006F FF8F FFE6     	movff	plusw1,postinc1
 35548                           
 35549                           ;stkvar	_f1p @ sp[(-4)+-2]
 35550  01B2F6  0EFA               	movlw	-6
 35551  01B2F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 35552  01B2FE  0EFB               	movlw	-5
 35553  01B300  006F FF8F FFDA     	movff	plusw1,fsr2h
 35554  01B306  006F FF7B FFE6     	movff	postinc2,postinc1
 35555  01B30C  006F FF7B FFE6     	movff	postinc2,postinc1
 35556  01B312  006F FF7B FFE6     	movff	postinc2,postinc1
 35557  01B318  006F FF7B FFE6     	movff	postinc2,postinc1
 35558  01B31E  EC35  F0A3         	call	___fladd	;wreg free
 35559                           
 35560                           ;stkvar	_f1p @ sp[(0)+-2]
 35561  01B322  0EFE               	movlw	-2
 35562  01B324  006F FF8F FFD9     	movff	plusw1,fsr2l
 35563  01B32A  0EFF               	movlw	-1
 35564  01B32C  006F FF8F FFDA     	movff	plusw1,fsr2h
 35565  01B332  0060  F007  FFDE   	movff	btemp,postinc2
 35566  01B338  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35567  01B33E  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35568  01B344  0060  F013  FFDE   	movff	btemp+3,postinc2
 35569                           
 35570                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35571  01B34A  0EFA               	movlw	250
 35572  01B34C  26E1               	addwf	fsr1l,f,c
 35573  01B34E  0EFF               	movlw	255
 35574  01B350  22E2               	addwfc	fsr1h,f,c
 35575  01B352  0012               	return		;funcret
 35576  01B354                     __end_of___asfladd:
 35577                           	opt callstack 0
 35578                           
 35579 ;; *************** function _INT0_ISR *****************
 35580 ;; Defined at:
 35581 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35582 ;; Parameters:    Size  Location     Type
 35583 ;;		None
 35584 ;; Auto vars:     Size  Location     Type
 35585 ;;		None
 35586 ;; Return value:  Size  Location     Type
 35587 ;;                  1    wreg      void 
 35588 ;; Registers used:
 35589 ;;		wreg, status,2, status,0, pclath, tosl
 35590 ;; Tracked objects:
 35591 ;;		On entry : 0/0
 35592 ;;		On exit  : 0/0
 35593 ;;		Unchanged: 0/0
 35594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35599 ;;Total ram usage:        0 bytes
 35600 ;; Hardware stack levels used:    1
 35601 ;; Hardware stack levels required when called:    2
 35602 ;; This function calls:
 35603 ;;		_INT0_CallBack
 35604 ;; This function is called by:
 35605 ;;		Interrupt level 2
 35606 ;; This function uses a non-reentrant model
 35607 ;;
 35608                           
 35609                           	psect	text163
 35610  01C6C8                     __ptext163:
 35611                           	opt callstack 0
 35612  01C6C8                     _INT0_ISR:
 35613                           	opt callstack 2
 35614                           
 35615                           ;incstack = 0
 35616  01C6C8  EE14  F15E         	lfsr	1,___inthi_sp
 35617                           
 35618                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35619  01C6CC  0139               	movlb	57	; () banked
 35620  01C6CE  91A1               	bcf	161,0,b	;volatile
 35621                           
 35622                           ; BSR set to: 57
 35623                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35624  01C6D0  EC06  F0E2         	call	_INT0_CallBack	;wreg free
 35625  01C6D4  0011               	retfie		f
 35626  01C6D6                     __end_of_INT0_ISR:
 35627                           	opt callstack 0
 35628                           
 35629 ;; *************** function _INT0_CallBack *****************
 35630 ;; Defined at:
 35631 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35632 ;; Parameters:    Size  Location     Type
 35633 ;;		None
 35634 ;; Auto vars:     Size  Location     Type
 35635 ;;		None
 35636 ;; Return value:  Size  Location     Type
 35637 ;;                  1  [STACK] void 
 35638 ;; Registers used:
 35639 ;;		wreg, status,2, status,0, pclath, tosl
 35640 ;; Tracked objects:
 35641 ;;		On entry : 3F/39
 35642 ;;		On exit  : 0/0
 35643 ;;		Unchanged: 0/0
 35644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35649 ;;Total ram usage:        0 bytes
 35650 ;; Hardware stack levels used:    1
 35651 ;; Hardware stack levels required when called:    1
 35652 ;; This function calls:
 35653 ;;		Absolute function
 35654 ;;		_INT0_DefaultInterruptHandler
 35655 ;; This function is called by:
 35656 ;;		_INT0_ISR
 35657 ;; This function uses a reentrant model
 35658 ;;
 35659                           
 35660                           	psect	text164
 35661  01C40C                     __ptext164:
 35662                           	opt callstack 0
 35663  01C40C                     _INT0_CallBack:
 35664                           	opt callstack 2
 35665                           
 35666                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35667                           
 35668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35669                           ;incstack = 0
 35670  01C40C  0100               	movlb	0	; () banked
 35671  01C40E  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35672  01C410  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35673  01C412  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35674  01C414  B4D8               	btfsc	status,2,c
 35675  01C416  0012               	return	
 35676                           
 35677                           ; BSR set to: 0
 35678                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35679  01C418  D801               	call	u1019_48
 35680  01C41A  0012               	return	
 35681  01C41C                     u1019_48:
 35682  01C41C  0005               	push	
 35683  01C41E  6EFA               	movwf	pclath,c
 35684  01C420  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35685  01C422  6EFD               	movwf	tosl,c
 35686  01C424  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35687  01C426  6EFE               	movwf	tosh,c
 35688  01C428  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35689  01C42A  6EFF               	movwf	tosu,c
 35690  01C42C  50FA               	movf	pclath,w,c
 35691  01C42E  0012               	return		;indir
 35692  01C430                     __end_of_INT0_CallBack:
 35693                           	opt callstack 0
 35694                           
 35695 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35696 ;; Defined at:
 35697 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35698 ;; Parameters:    Size  Location     Type
 35699 ;;		None
 35700 ;; Auto vars:     Size  Location     Type
 35701 ;;		None
 35702 ;; Return value:  Size  Location     Type
 35703 ;;                  1  [STACK] void 
 35704 ;; Registers used:
 35705 ;;		None
 35706 ;; Tracked objects:
 35707 ;;		On entry : 3F/0
 35708 ;;		On exit  : 0/0
 35709 ;;		Unchanged: 0/0
 35710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;Total ram usage:        0 bytes
 35716 ;; Hardware stack levels used:    1
 35717 ;; This function calls:
 35718 ;;		Nothing
 35719 ;; This function is called by:
 35720 ;;		_EXT_INT_Initialize
 35721 ;;		_INT0_CallBack
 35722 ;; This function uses a reentrant model
 35723 ;;
 35724                           
 35725                           	psect	text165
 35726  01C76A                     __ptext165:
 35727                           	opt callstack 0
 35728  01C76A                     _INT0_DefaultInterruptHandler:
 35729                           	opt callstack 2
 35730                           
 35731                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35732                           
 35733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35734                           ;incstack = 0
 35735  01C76A  0012               	return		;funcret
 35736  01C76C                     __end_of_INT0_DefaultInterruptHandler:
 35737                           	opt callstack 0
 35738                           
 35739 ;; *************** function _Default_ISR *****************
 35740 ;; Defined at:
 35741 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35742 ;; Parameters:    Size  Location     Type
 35743 ;;		None
 35744 ;; Auto vars:     Size  Location     Type
 35745 ;;		None
 35746 ;; Return value:  Size  Location     Type
 35747 ;;                  1    wreg      void 
 35748 ;; Registers used:
 35749 ;;		None
 35750 ;; Tracked objects:
 35751 ;;		On entry : 0/0
 35752 ;;		On exit  : 0/0
 35753 ;;		Unchanged: 0/0
 35754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35759 ;;Total ram usage:        0 bytes
 35760 ;; Hardware stack levels used:    1
 35761 ;; This function calls:
 35762 ;;		Nothing
 35763 ;; This function is called by:
 35764 ;;		Interrupt level 2
 35765 ;; This function uses a non-reentrant model
 35766 ;;
 35767                           
 35768                           	psect	text166
 35769  01C760                     __ptext166:
 35770                           	opt callstack 0
 35771  01C760                     _Default_ISR:
 35772                           	opt callstack 4
 35773                           
 35774                           ;incstack = 0
 35775  01C760  EE14  F15E         	lfsr	1,___inthi_sp
 35776  01C764  0011               	retfie		f
 35777  01C766                     __end_of_Default_ISR:
 35778                           	opt callstack 0
 35779                           
 35780 ;; *************** function _ADCC_ISR *****************
 35781 ;; Defined at:
 35782 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;		None
 35785 ;; Auto vars:     Size  Location     Type
 35786 ;;		None
 35787 ;; Return value:  Size  Location     Type
 35788 ;;                  1    wreg      void 
 35789 ;; Registers used:
 35790 ;;		wreg, status,2, status,0, pclath, tosl
 35791 ;; Tracked objects:
 35792 ;;		On entry : 0/0
 35793 ;;		On exit  : 0/0
 35794 ;;		Unchanged: 0/0
 35795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35800 ;;Total ram usage:        0 bytes
 35801 ;; Hardware stack levels used:    1
 35802 ;; Hardware stack levels required when called:    1
 35803 ;; This function calls:
 35804 ;;		Absolute function
 35805 ;;		_ADCC_DefaultInterruptHandler
 35806 ;;		_adc_int_handler
 35807 ;; This function is called by:
 35808 ;;		Interrupt level 2
 35809 ;; This function uses a non-reentrant model
 35810 ;;
 35811                           
 35812                           	psect	text167
 35813  01C0A0                     __ptext167:
 35814                           	opt callstack 0
 35815  01C0A0                     _ADCC_ISR:
 35816                           	opt callstack 3
 35817                           
 35818                           ;incstack = 0
 35819  01C0A0  EE14  F15E         	lfsr	1,___inthi_sp
 35820                           
 35821                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35822  01C0A4  0139               	movlb	57	; () banked
 35823  01C0A6  95A1               	bcf	161,2,b	;volatile
 35824                           
 35825                           ; BSR set to: 57
 35826                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35827  01C0A8  0100               	movlb	0	; () banked
 35828  01C0AA  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35829  01C0AC  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35830  01C0AE  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35831  01C0B0  B4D8               	btfsc	status,2,c
 35832  01C0B2  0011               	retfie		f
 35833                           
 35834                           ; BSR set to: 0
 35835                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35836  01C0B4  D801               	call	i2u1064_48
 35837  01C0B6  0011               	retfie		f
 35838  01C0B8                     i2u1064_48:
 35839  01C0B8  0005               	push	
 35840  01C0BA  6EFA               	movwf	pclath,c
 35841  01C0BC  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35842  01C0BE  6EFD               	movwf	tosl,c
 35843  01C0C0  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35844  01C0C2  6EFE               	movwf	tosh,c
 35845  01C0C4  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35846  01C0C6  6EFF               	movwf	tosu,c
 35847  01C0C8  50FA               	movf	pclath,w,c
 35848  01C0CA  0012               	return		;indir
 35849  01C0CC                     __end_of_ADCC_ISR:
 35850                           	opt callstack 0
 35851                           
 35852 ;; *************** function _adc_int_t_handler *****************
 35853 ;; Defined at:
 35854 ;;		line 171 in file "daq.c"
 35855 ;; Parameters:    Size  Location     Type
 35856 ;;		None
 35857 ;; Auto vars:     Size  Location     Type
 35858 ;;		None
 35859 ;; Return value:  Size  Location     Type
 35860 ;;                  1  [STACK] void 
 35861 ;; Registers used:
 35862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35863 ;; Tracked objects:
 35864 ;;		On entry : 3F/0
 35865 ;;		On exit  : 1/0
 35866 ;;		Unchanged: 0/0
 35867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35872 ;;Total ram usage:        0 bytes
 35873 ;; Hardware stack levels used:    1
 35874 ;; Hardware stack levels required when called:    1
 35875 ;; This function calls:
 35876 ;;		_ADCC_DischargeSampleCapacitor
 35877 ;;		_ADCC_StartConversion
 35878 ;; This function is called by:
 35879 ;;		_start_adc_scan
 35880 ;;		_ADCC_ThresholdISR
 35881 ;; This function uses a reentrant model
 35882 ;;
 35883                           
 35884                           	psect	text168
 35885  01B1E4                     __ptext168:
 35886                           	opt callstack 0
 35887  01B1E4                     _adc_int_t_handler:
 35888                           	opt callstack 2
 35889                           
 35890                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35891                           
 35892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35893                           ;incstack = 0
 35894  01B1E4  013E               	movlb	62	; () banked
 35895  01B1E6  51E6               	movf	230,w,b	;volatile
 35896  01B1E8  006F FB9C  F001    	movff	16103,btemp	;volatile
 35897  01B1EE  6A02               	clrf	(btemp+1)^0,c
 35898  01B1F0  0060  F004  F002   	movff	btemp,btemp+1
 35899  01B1F6  6A01               	clrf	btemp^0,c
 35900  01B1F8  2601               	addwf	btemp^0,f,c
 35901  01B1FA  0E00               	movlw	0
 35902  01B1FC  2202               	addwfc	(btemp+1)^0,f,c
 35903  01B1FE  0100               	movlb	0	; () banked
 35904  01B200  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35905  01B202  0D02               	mullw	2
 35906  01B204  50F3               	movf	243,w,c
 35907  01B206  0FAF               	addlw	low _R
 35908  01B208  6ED9               	movwf	fsr2l,c
 35909  01B20A  6ADA               	clrf	fsr2h,c
 35910  01B20C  0060  F007  FFDE   	movff	btemp,postinc2
 35911  01B212  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35912  01B218                     l11504:
 35913                           
 35914                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 35915  01B218  0100               	movlb	0	; () banked
 35916  01B21A  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35917  01B21C  0E0D               	movlw	13
 35918  01B21E  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35919  01B220  D003               	goto	l11510
 35920                           
 35921                           ; BSR set to: 0
 35922                           ;daq.c: 179:    R.done = 1;
 35923  01B222  0E01               	movlw	1
 35924  01B224  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35925  01B226  0012               	return	
 35926  01B228                     l11510:
 35927                           
 35928                           ; BSR set to: 0
 35929                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35930  01B228  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35931  01B22E  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35932  01B232  006F FF78  F009    	movff	postinc2,btemp+8
 35933  01B238  006F FF74  F00A    	movff	postdec2,btemp+9
 35934  01B23E  2A0C               	incf	(btemp+11)^0,f,c
 35935  01B240  D003               	goto	u1061_44
 35936  01B242                     u1061_45:
 35937  01B242  90D8               	bcf	status,0,c
 35938  01B244  320A               	rrcf	(btemp+9)^0,f,c
 35939  01B246  3209               	rrcf	(btemp+8)^0,f,c
 35940  01B248                     u1061_44:
 35941  01B248  2E0C               	decfsz	(btemp+11)^0,f,c
 35942  01B24A  D7FB               	goto	u1061_45
 35943  01B24C  A009               	btfss	(btemp+8)^0,0,c
 35944  01B24E  D7E4               	goto	l11504
 35945                           
 35946                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 35947  01B250  EC8F  F0E3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35948                           
 35949                           ; BSR set to: 62
 35950                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 35951  01B254  0100               	movlb	0	; () banked
 35952  01B256  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35953  01B258  0B0F               	andlw	15
 35954  01B25A  6EE6               	movwf	postinc1,c
 35955  01B25C  EC26  F0E3         	call	_ADCC_StartConversion	;wreg free
 35956                           
 35957                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35958  01B260  0012               	return		;funcret
 35959  01B262                     __end_of_adc_int_t_handler:
 35960                           	opt callstack 0
 35961                           
 35962 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35963 ;; Defined at:
 35964 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35965 ;; Parameters:    Size  Location     Type
 35966 ;;		None
 35967 ;; Auto vars:     Size  Location     Type
 35968 ;;		None
 35969 ;; Return value:  Size  Location     Type
 35970 ;;                  1  [STACK] void 
 35971 ;; Registers used:
 35972 ;;		None
 35973 ;; Tracked objects:
 35974 ;;		On entry : 3F/0
 35975 ;;		On exit  : 0/0
 35976 ;;		Unchanged: 0/0
 35977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35982 ;;Total ram usage:        0 bytes
 35983 ;; Hardware stack levels used:    1
 35984 ;; This function calls:
 35985 ;;		Nothing
 35986 ;; This function is called by:
 35987 ;;		_ADCC_Initialize
 35988 ;;		_ADCC_ISR
 35989 ;;		_ADCC_ThresholdISR
 35990 ;; This function uses a reentrant model
 35991 ;;
 35992                           
 35993                           	psect	text169
 35994  01C76C                     __ptext169:
 35995                           	opt callstack 0
 35996  01C76C                     _ADCC_DefaultInterruptHandler:
 35997                           	opt callstack 3
 35998                           
 35999                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36000                           
 36001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36002                           ;incstack = 0
 36003  01C76C  0012               	return		;funcret
 36004  01C76E                     __end_of_ADCC_DefaultInterruptHandler:
 36005                           	opt callstack 0
 36006                           
 36007 ;; *************** function _adc_int_handler *****************
 36008 ;; Defined at:
 36009 ;;		line 161 in file "daq.c"
 36010 ;; Parameters:    Size  Location     Type
 36011 ;;		None
 36012 ;; Auto vars:     Size  Location     Type
 36013 ;;		None
 36014 ;; Return value:  Size  Location     Type
 36015 ;;                  1  [STACK] void 
 36016 ;; Registers used:
 36017 ;;		None
 36018 ;; Tracked objects:
 36019 ;;		On entry : 3F/0
 36020 ;;		On exit  : 0/0
 36021 ;;		Unchanged: 0/0
 36022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36027 ;;Total ram usage:        0 bytes
 36028 ;; Hardware stack levels used:    1
 36029 ;; This function calls:
 36030 ;;		Nothing
 36031 ;; This function is called by:
 36032 ;;		_start_adc_scan
 36033 ;;		_ADCC_ISR
 36034 ;; This function uses a reentrant model
 36035 ;;
 36036                           
 36037                           	psect	text170
 36038  01C76E                     __ptext170:
 36039                           	opt callstack 0
 36040  01C76E                     _adc_int_handler:
 36041                           	opt callstack 3
 36042                           
 36043                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36044                           
 36045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36046                           ;incstack = 0
 36047  01C76E  0012               	return		;funcret
 36048  01C770                     __end_of_adc_int_handler:
 36049                           	opt callstack 0
 36050                           
 36051 ;; *************** function _ADCC_ThresholdISR *****************
 36052 ;; Defined at:
 36053 ;;		line 327 in file "mcc_generated_files/adcc.c"
 36054 ;; Parameters:    Size  Location     Type
 36055 ;;		None
 36056 ;; Auto vars:     Size  Location     Type
 36057 ;;		None
 36058 ;; Return value:  Size  Location     Type
 36059 ;;                  1    wreg      void 
 36060 ;; Registers used:
 36061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 36062 ;; Tracked objects:
 36063 ;;		On entry : 0/0
 36064 ;;		On exit  : 0/0
 36065 ;;		Unchanged: 0/0
 36066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36069 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36070 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36071 ;;Total ram usage:        5 bytes
 36072 ;; Hardware stack levels used:    1
 36073 ;; Hardware stack levels required when called:    2
 36074 ;; This function calls:
 36075 ;;		Absolute function
 36076 ;;		_ADCC_DefaultInterruptHandler
 36077 ;;		_adc_int_t_handler
 36078 ;; This function is called by:
 36079 ;;		Interrupt level 2
 36080 ;; This function uses a non-reentrant model
 36081 ;;
 36082                           
 36083                           	psect	text171
 36084  01B49C                     __ptext171:
 36085                           	opt callstack 0
 36086  01B49C                     _ADCC_ThresholdISR:
 36087                           	opt callstack 2
 36088                           
 36089                           ;incstack = 0
 36090  01B49C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 36091  01B4A2  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 36092  01B4A8  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 36093  01B4AE  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 36094  01B4B4  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 36095  01B4BA  EE14  F15E         	lfsr	1,___inthi_sp
 36096                           
 36097                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 36098  01B4BE  0139               	movlb	57	; () banked
 36099  01B4C0  97A1               	bcf	161,3,b	;volatile
 36100                           
 36101                           ; BSR set to: 57
 36102                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 36103  01B4C2  0100               	movlb	0	; () banked
 36104  01B4C4  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36105  01B4C6  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36106  01B4C8  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36107  01B4CA  B4D8               	btfsc	status,2,c
 36108  01B4CC  D00C               	goto	i2u1066_49
 36109                           
 36110                           ; BSR set to: 0
 36111                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 36112  01B4CE  D801               	call	i2u1066_48
 36113  01B4D0  D00A               	goto	i2u1066_49
 36114  01B4D2                     i2u1066_48:
 36115  01B4D2  0005               	push	
 36116  01B4D4  6EFA               	movwf	pclath,c
 36117  01B4D6  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36118  01B4D8  6EFD               	movwf	tosl,c
 36119  01B4DA  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36120  01B4DC  6EFE               	movwf	tosh,c
 36121  01B4DE  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36122  01B4E0  6EFF               	movwf	tosu,c
 36123  01B4E2  50FA               	movf	pclath,w,c
 36124  01B4E4  0012               	return		;indir
 36125  01B4E6                     i2u1066_49:
 36126  01B4E6  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 36127  01B4EC  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 36128  01B4F2  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 36129  01B4F8  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 36130  01B4FE  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 36131  01B504  0011               	retfie		f
 36132  01B506                     __end_of_ADCC_ThresholdISR:
 36133                           	opt callstack 0
 36134                           
 36135 ;; *************** function _UART1_rx_vect_isr *****************
 36136 ;; Defined at:
 36137 ;;		line 181 in file "mcc_generated_files/uart1.c"
 36138 ;; Parameters:    Size  Location     Type
 36139 ;;		None
 36140 ;; Auto vars:     Size  Location     Type
 36141 ;;		None
 36142 ;; Return value:  Size  Location     Type
 36143 ;;                  1    wreg      void 
 36144 ;; Registers used:
 36145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36146 ;; Tracked objects:
 36147 ;;		On entry : 0/0
 36148 ;;		On exit  : 0/0
 36149 ;;		Unchanged: 0/0
 36150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36155 ;;Total ram usage:        0 bytes
 36156 ;; Hardware stack levels used:    1
 36157 ;; Hardware stack levels required when called:    1
 36158 ;; This function calls:
 36159 ;;		Absolute function
 36160 ;;		_UART1_Receive_ISR
 36161 ;; This function is called by:
 36162 ;;		Interrupt level 2
 36163 ;; This function uses a non-reentrant model
 36164 ;;
 36165                           
 36166                           	psect	text172
 36167  01C304                     __ptext172:
 36168                           	opt callstack 0
 36169  01C304                     _UART1_rx_vect_isr:
 36170                           	opt callstack 3
 36171                           
 36172                           ;incstack = 0
 36173  01C304  EE14  F15E         	lfsr	1,___inthi_sp
 36174                           
 36175                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 36176  01C308  0100               	movlb	0	; () banked
 36177  01C30A  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36178  01C30C  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36179  01C30E  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36180  01C310  B4D8               	btfsc	status,2,c
 36181  01C312  0011               	retfie		f
 36182                           
 36183                           ; BSR set to: 0
 36184                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 36185  01C314  D801               	call	i2u1068_48
 36186  01C316  0011               	retfie		f
 36187  01C318                     i2u1068_48:
 36188  01C318  0005               	push	
 36189  01C31A  6EFA               	movwf	pclath,c
 36190  01C31C  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36191  01C31E  6EFD               	movwf	tosl,c
 36192  01C320  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36193  01C322  6EFE               	movwf	tosh,c
 36194  01C324  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36195  01C326  6EFF               	movwf	tosu,c
 36196  01C328  50FA               	movf	pclath,w,c
 36197  01C32A  0012               	return		;indir
 36198  01C32C                     __end_of_UART1_rx_vect_isr:
 36199                           	opt callstack 0
 36200                           
 36201 ;; *************** function _UART1_Receive_ISR *****************
 36202 ;; Defined at:
 36203 ;;		line 192 in file "mcc_generated_files/uart1.c"
 36204 ;; Parameters:    Size  Location     Type
 36205 ;;		None
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;		None
 36208 ;; Return value:  Size  Location     Type
 36209 ;;                  1  [STACK] void 
 36210 ;; Registers used:
 36211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36212 ;; Tracked objects:
 36213 ;;		On entry : 3F/0
 36214 ;;		On exit  : 3F/0
 36215 ;;		Unchanged: 0/0
 36216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36221 ;;Total ram usage:        0 bytes
 36222 ;; Hardware stack levels used:    1
 36223 ;; This function calls:
 36224 ;;		Nothing
 36225 ;; This function is called by:
 36226 ;;		_UART1_Initialize
 36227 ;;		_UART1_rx_vect_isr
 36228 ;; This function uses a reentrant model
 36229 ;;
 36230                           
 36231                           	psect	text173
 36232  01C498                     __ptext173:
 36233                           	opt callstack 0
 36234  01C498                     _UART1_Receive_ISR:
 36235                           	opt callstack 3
 36236                           
 36237                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 36238                           
 36239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36240                           ;incstack = 0
 36241  01C498  0EDC               	movlw	low _uart1RxBuffer
 36242  01C49A  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 36243  01C49C  6ED9               	movwf	fsr2l,c
 36244  01C49E  6ADA               	clrf	fsr2h,c
 36245  01C4A0  0E01               	movlw	high _uart1RxBuffer
 36246  01C4A2  22DA               	addwfc	fsr2h,f,c
 36247  01C4A4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 36248  01C4AA  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 36249                           
 36250                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 36251  01C4AC  0E07               	movlw	7
 36252  01C4AE  6447               	cpfsgt	_uart1RxHead^0,c
 36253  01C4B0  D001               	goto	l11024
 36254                           
 36255                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 36256  01C4B2  6A47               	clrf	_uart1RxHead^0,c	;volatile
 36257  01C4B4                     l11024:
 36258                           
 36259                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 36260  01C4B4  0100               	movlb	0	; () banked
 36261  01C4B6  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 36262                           
 36263                           ; BSR set to: 0
 36264                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36265  01C4B8  0012               	return		;funcret
 36266  01C4BA                     __end_of_UART1_Receive_ISR:
 36267                           	opt callstack 0
 36268                           
 36269 ;; *************** function _UART2_tx_vect_isr *****************
 36270 ;; Defined at:
 36271 ;;		line 195 in file "mcc_generated_files/uart2.c"
 36272 ;; Parameters:    Size  Location     Type
 36273 ;;		None
 36274 ;; Auto vars:     Size  Location     Type
 36275 ;;		None
 36276 ;; Return value:  Size  Location     Type
 36277 ;;                  1    wreg      void 
 36278 ;; Registers used:
 36279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36280 ;; Tracked objects:
 36281 ;;		On entry : 0/0
 36282 ;;		On exit  : 0/0
 36283 ;;		Unchanged: 0/0
 36284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36289 ;;Total ram usage:        0 bytes
 36290 ;; Hardware stack levels used:    1
 36291 ;; Hardware stack levels required when called:    1
 36292 ;; This function calls:
 36293 ;;		Absolute function
 36294 ;;		_UART2_Transmit_ISR
 36295 ;; This function is called by:
 36296 ;;		Interrupt level 2
 36297 ;; This function uses a non-reentrant model
 36298 ;;
 36299                           
 36300                           	psect	text174
 36301  01C32C                     __ptext174:
 36302                           	opt callstack 0
 36303  01C32C                     _UART2_tx_vect_isr:
 36304                           	opt callstack 3
 36305                           
 36306                           ; BSR set to: 0
 36307                           ;incstack = 0
 36308  01C32C  EE14  F15E         	lfsr	1,___inthi_sp
 36309                           
 36310                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 36311  01C330  0100               	movlb	0	; () banked
 36312  01C332  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36313  01C334  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36314  01C336  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36315  01C338  B4D8               	btfsc	status,2,c
 36316  01C33A  0011               	retfie		f
 36317                           
 36318                           ; BSR set to: 0
 36319                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 36320  01C33C  D801               	call	i2u1070_48
 36321  01C33E  0011               	retfie		f
 36322  01C340                     i2u1070_48:
 36323  01C340  0005               	push	
 36324  01C342  6EFA               	movwf	pclath,c
 36325  01C344  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36326  01C346  6EFD               	movwf	tosl,c
 36327  01C348  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36328  01C34A  6EFE               	movwf	tosh,c
 36329  01C34C  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36330  01C34E  6EFF               	movwf	tosu,c
 36331  01C350  50FA               	movf	pclath,w,c
 36332  01C352  0012               	return		;indir
 36333  01C354                     __end_of_UART2_tx_vect_isr:
 36334                           	opt callstack 0
 36335                           
 36336 ;; *************** function _UART2_Transmit_ISR *****************
 36337 ;; Defined at:
 36338 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36339 ;; Parameters:    Size  Location     Type
 36340 ;;		None
 36341 ;; Auto vars:     Size  Location     Type
 36342 ;;		None
 36343 ;; Return value:  Size  Location     Type
 36344 ;;                  1  [STACK] void 
 36345 ;; Registers used:
 36346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36347 ;; Tracked objects:
 36348 ;;		On entry : 3F/0
 36349 ;;		On exit  : 3B/39
 36350 ;;		Unchanged: 0/0
 36351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36356 ;;Total ram usage:        0 bytes
 36357 ;; Hardware stack levels used:    1
 36358 ;; This function calls:
 36359 ;;		Nothing
 36360 ;; This function is called by:
 36361 ;;		_UART2_Initialize
 36362 ;;		_UART2_tx_vect_isr
 36363 ;; This function uses a reentrant model
 36364 ;;
 36365                           
 36366                           	psect	text175
 36367  01C0CC                     __ptext175:
 36368                           	opt callstack 0
 36369  01C0CC                     _UART2_Transmit_ISR:
 36370                           	opt callstack 3
 36371                           
 36372                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36373                           
 36374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36375                           ;incstack = 0
 36376  01C0CC  0E40               	movlw	64
 36377  01C0CE  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36378  01C0D0  D010               	goto	l673
 36379                           
 36380                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36381  01C0D2  0E00               	movlw	low _uart2TxBuffer
 36382  01C0D4  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36383  01C0D6  6ED9               	movwf	fsr2l,c
 36384  01C0D8  6ADA               	clrf	fsr2h,c
 36385  01C0DA  0E03               	movlw	high _uart2TxBuffer
 36386  01C0DC  22DA               	addwfc	fsr2h,f,c
 36387  01C0DE  50DF               	movf	indf2,w,c
 36388  01C0E0  013D               	movlb	61	; () banked
 36389  01C0E2  6FD2               	movwf	210,b	;volatile
 36390                           
 36391                           ; BSR set to: 61
 36392  01C0E4  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36393                           
 36394                           ; BSR set to: 61
 36395                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36396  01C0E6  0E3F               	movlw	63
 36397  01C0E8  6446               	cpfsgt	_uart2TxTail^0,c
 36398  01C0EA  D001               	goto	l11036
 36399                           
 36400                           ; BSR set to: 61
 36401                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36402  01C0EC  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36403  01C0EE                     l11036:
 36404                           
 36405                           ; BSR set to: 61
 36406                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36407  01C0EE  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36408                           
 36409                           ;mcc_generated_files/uart2.c: 224:     }
 36410  01C0F0  0012               	return	
 36411  01C0F2                     l673:
 36412                           
 36413                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36414  01C0F2  0139               	movlb	57	; () banked
 36415  01C0F4  9796               	bcf	150,3,b	;volatile
 36416                           
 36417                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36418  01C0F6  0012               	return		;funcret
 36419  01C0F8                     __end_of_UART2_Transmit_ISR:
 36420                           	opt callstack 0
 36421                           
 36422 ;; *************** function _UART2_rx_vect_isr *****************
 36423 ;; Defined at:
 36424 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36425 ;; Parameters:    Size  Location     Type
 36426 ;;		None
 36427 ;; Auto vars:     Size  Location     Type
 36428 ;;		None
 36429 ;; Return value:  Size  Location     Type
 36430 ;;                  1    wreg      void 
 36431 ;; Registers used:
 36432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36433 ;; Tracked objects:
 36434 ;;		On entry : 0/0
 36435 ;;		On exit  : 0/0
 36436 ;;		Unchanged: 0/0
 36437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36442 ;;Total ram usage:        0 bytes
 36443 ;; Hardware stack levels used:    1
 36444 ;; Hardware stack levels required when called:    1
 36445 ;; This function calls:
 36446 ;;		Absolute function
 36447 ;;		_UART2_Receive_ISR
 36448 ;; This function is called by:
 36449 ;;		Interrupt level 2
 36450 ;; This function uses a non-reentrant model
 36451 ;;
 36452                           
 36453                           	psect	text176
 36454  01C354                     __ptext176:
 36455                           	opt callstack 0
 36456  01C354                     _UART2_rx_vect_isr:
 36457                           	opt callstack 3
 36458                           
 36459                           ;incstack = 0
 36460  01C354  EE14  F15E         	lfsr	1,___inthi_sp
 36461                           
 36462                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36463  01C358  0100               	movlb	0	; () banked
 36464  01C35A  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36465  01C35C  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36466  01C35E  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36467  01C360  B4D8               	btfsc	status,2,c
 36468  01C362  0011               	retfie		f
 36469                           
 36470                           ; BSR set to: 0
 36471                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36472  01C364  D801               	call	i2u1072_48
 36473  01C366  0011               	retfie		f
 36474  01C368                     i2u1072_48:
 36475  01C368  0005               	push	
 36476  01C36A  6EFA               	movwf	pclath,c
 36477  01C36C  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36478  01C36E  6EFD               	movwf	tosl,c
 36479  01C370  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36480  01C372  6EFE               	movwf	tosh,c
 36481  01C374  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36482  01C376  6EFF               	movwf	tosu,c
 36483  01C378  50FA               	movf	pclath,w,c
 36484  01C37A  0012               	return		;indir
 36485  01C37C                     __end_of_UART2_rx_vect_isr:
 36486                           	opt callstack 0
 36487                           
 36488 ;; *************** function _UART2_Receive_ISR *****************
 36489 ;; Defined at:
 36490 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36491 ;; Parameters:    Size  Location     Type
 36492 ;;		None
 36493 ;; Auto vars:     Size  Location     Type
 36494 ;;		None
 36495 ;; Return value:  Size  Location     Type
 36496 ;;                  1  [STACK] void 
 36497 ;; Registers used:
 36498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36499 ;; Tracked objects:
 36500 ;;		On entry : 3F/0
 36501 ;;		On exit  : 3F/0
 36502 ;;		Unchanged: 0/0
 36503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36508 ;;Total ram usage:        0 bytes
 36509 ;; Hardware stack levels used:    1
 36510 ;; This function calls:
 36511 ;;		Nothing
 36512 ;; This function is called by:
 36513 ;;		_UART2_Initialize
 36514 ;;		_UART2_rx_vect_isr
 36515 ;; This function uses a reentrant model
 36516 ;;
 36517                           
 36518                           	psect	text177
 36519  01C4DA                     __ptext177:
 36520                           	opt callstack 0
 36521  01C4DA                     _UART2_Receive_ISR:
 36522                           	opt callstack 3
 36523                           
 36524                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36525                           
 36526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36527                           ;incstack = 0
 36528  01C4DA  0E00               	movlw	low _uart2RxBuffer
 36529  01C4DC  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36530  01C4DE  6ED9               	movwf	fsr2l,c
 36531  01C4E0  6ADA               	clrf	fsr2h,c
 36532  01C4E2  0E04               	movlw	high _uart2RxBuffer
 36533  01C4E4  22DA               	addwfc	fsr2h,f,c
 36534  01C4E6  006F F743 FFDF     	movff	15824,indf2	;volatile
 36535  01C4EC  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36536                           
 36537                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36538  01C4EE  2844               	incf	_uart2RxHead^0,w,c
 36539  01C4F0  B4D8               	btfsc	status,2,c
 36540                           
 36541                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36542  01C4F2  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36543                           
 36544                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36545  01C4F4  0100               	movlb	0	; () banked
 36546  01C4F6  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36547                           
 36548                           ; BSR set to: 0
 36549                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36550  01C4F8  0012               	return		;funcret
 36551  01C4FA                     __end_of_UART2_Receive_ISR:
 36552                           	opt callstack 0
 36553                           
 36554 ;; *************** function _TMR6_ISR *****************
 36555 ;; Defined at:
 36556 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36557 ;; Parameters:    Size  Location     Type
 36558 ;;		None
 36559 ;; Auto vars:     Size  Location     Type
 36560 ;;		None
 36561 ;; Return value:  Size  Location     Type
 36562 ;;                  1    wreg      void 
 36563 ;; Registers used:
 36564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36565 ;; Tracked objects:
 36566 ;;		On entry : 0/0
 36567 ;;		On exit  : 0/0
 36568 ;;		Unchanged: 0/0
 36569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36574 ;;Total ram usage:        1 bytes
 36575 ;; Hardware stack levels used:    1
 36576 ;; Hardware stack levels required when called:    2
 36577 ;; This function calls:
 36578 ;;		_TMR6_CallBack
 36579 ;; This function is called by:
 36580 ;;		Interrupt level 2
 36581 ;; This function uses a non-reentrant model
 36582 ;;
 36583                           
 36584                           	psect	text178
 36585  01C5AC                     __ptext178:
 36586                           	opt callstack 0
 36587  01C5AC                     _TMR6_ISR:
 36588                           	opt callstack 2
 36589                           
 36590                           ; BSR set to: 0
 36591                           ;incstack = 0
 36592  01C5AC  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36593  01C5B2  EE14  F15E         	lfsr	1,___inthi_sp
 36594                           
 36595                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36596  01C5B6  0139               	movlb	57	; () banked
 36597  01C5B8  91A9               	bcf	169,0,b	;volatile
 36598                           
 36599                           ; BSR set to: 57
 36600                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36601  01C5BA  EC18  F0E2         	call	_TMR6_CallBack	;wreg free
 36602  01C5BE  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36603  01C5C4  0011               	retfie		f
 36604  01C5C6                     __end_of_TMR6_ISR:
 36605                           	opt callstack 0
 36606                           
 36607 ;; *************** function _TMR6_CallBack *****************
 36608 ;; Defined at:
 36609 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36610 ;; Parameters:    Size  Location     Type
 36611 ;;		None
 36612 ;; Auto vars:     Size  Location     Type
 36613 ;;		None
 36614 ;; Return value:  Size  Location     Type
 36615 ;;                  1  [STACK] void 
 36616 ;; Registers used:
 36617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36618 ;; Tracked objects:
 36619 ;;		On entry : 3F/39
 36620 ;;		On exit  : 0/0
 36621 ;;		Unchanged: 0/0
 36622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36627 ;;Total ram usage:        0 bytes
 36628 ;; Hardware stack levels used:    1
 36629 ;; Hardware stack levels required when called:    1
 36630 ;; This function calls:
 36631 ;;		Absolute function
 36632 ;;		_TMR6_DefaultInterruptHandler
 36633 ;; This function is called by:
 36634 ;;		_TMR6_ISR
 36635 ;; This function uses a reentrant model
 36636 ;;
 36637                           
 36638                           	psect	text179
 36639  01C430                     __ptext179:
 36640                           	opt callstack 0
 36641  01C430                     _TMR6_CallBack:
 36642                           	opt callstack 2
 36643                           
 36644                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36645                           
 36646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36647                           ;incstack = 0
 36648  01C430  0100               	movlb	0	; () banked
 36649  01C432  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36650  01C434  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36651  01C436  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36652  01C438  B4D8               	btfsc	status,2,c
 36653  01C43A  0012               	return	
 36654                           
 36655                           ; BSR set to: 0
 36656                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36657  01C43C  D801               	call	u1027_48
 36658  01C43E  0012               	return	
 36659  01C440                     u1027_48:
 36660  01C440  0005               	push	
 36661  01C442  6EFA               	movwf	pclath,c
 36662  01C444  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36663  01C446  6EFD               	movwf	tosl,c
 36664  01C448  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36665  01C44A  6EFE               	movwf	tosh,c
 36666  01C44C  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36667  01C44E  6EFF               	movwf	tosu,c
 36668  01C450  50FA               	movf	pclath,w,c
 36669  01C452  0012               	return		;indir
 36670  01C454                     __end_of_TMR6_CallBack:
 36671                           	opt callstack 0
 36672                           
 36673 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36674 ;; Defined at:
 36675 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36676 ;; Parameters:    Size  Location     Type
 36677 ;;		None
 36678 ;; Auto vars:     Size  Location     Type
 36679 ;;  i               1  [STACK] unsigned char 
 36680 ;; Return value:  Size  Location     Type
 36681 ;;                  1  [STACK] void 
 36682 ;; Registers used:
 36683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36684 ;; Tracked objects:
 36685 ;;		On entry : 3F/0
 36686 ;;		On exit  : 0/0
 36687 ;;		Unchanged: 0/0
 36688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36693 ;;Total ram usage:        0 bytes
 36694 ;; Hardware stack levels used:    1
 36695 ;; This function calls:
 36696 ;;		Nothing
 36697 ;; This function is called by:
 36698 ;;		_TMR6_Initialize
 36699 ;;		_TMR6_CallBack
 36700 ;; This function uses a reentrant model
 36701 ;;
 36702                           
 36703                           	psect	text180
 36704  01B90C                     __ptext180:
 36705                           	opt callstack 0
 36706  01B90C                     _TMR6_DefaultInterruptHandler:
 36707                           	opt callstack 0
 36708                           
 36709                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36710  01B90C  52E6               	movf	postinc1,f,c
 36711                           
 36712                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36713                           ;stkvar	_i @ sp[(-1)+0]
 36714                           
 36715                           ;incstack = 0
 36716  01B90E  0EFF               	movlw	-1
 36717  01B910  6AE3               	clrf	plusw1,c
 36718  01B912                     l10592:
 36719                           
 36720                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36721                           ;stkvar	_i @ sp[(-1)+0]
 36722  01B912  0EFF               	movlw	-1
 36723  01B914  50E3               	movf	plusw1,w,c
 36724  01B916  0D02               	mullw	2
 36725  01B918  0E7D               	movlw	low _tickCount
 36726  01B91A  24F3               	addwf	243,w,c
 36727  01B91C  6ED9               	movwf	fsr2l,c
 36728  01B91E  0E02               	movlw	high _tickCount
 36729  01B920  20F4               	addwfc	prodh,w,c
 36730  01B922  6EDA               	movwf	fsr2h,c
 36731  01B924  50DE               	movf	postinc2,w,c
 36732  01B926  10DE               	iorwf	postinc2,w,c
 36733  01B928  B4D8               	btfsc	status,2,c
 36734  01B92A  D00C               	goto	l10596
 36735                           
 36736                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36737                           ;stkvar	_i @ sp[(-1)+0]
 36738  01B92C  0EFF               	movlw	-1
 36739  01B92E  50E3               	movf	plusw1,w,c
 36740  01B930  0D02               	mullw	2
 36741  01B932  0E7D               	movlw	low _tickCount
 36742  01B934  24F3               	addwf	243,w,c
 36743  01B936  6ED9               	movwf	fsr2l,c
 36744  01B938  0E02               	movlw	high _tickCount
 36745  01B93A  20F4               	addwfc	prodh,w,c
 36746  01B93C  6EDA               	movwf	fsr2h,c
 36747  01B93E  06DE               	decf	postinc2,f,c
 36748  01B940  0E00               	movlw	0
 36749  01B942  5ADD               	subwfb	postdec2,f,c
 36750  01B944                     l10596:
 36751                           
 36752                           ;mcc_generated_files/tmr6.c: 207:  }
 36753                           ;stkvar	_i @ sp[(-1)+0]
 36754  01B944  0EFF               	movlw	-1
 36755  01B946  2AE3               	incf	plusw1,f,c
 36756                           
 36757                           ;stkvar	_i @ sp[(-1)+0]
 36758  01B948  0EFF               	movlw	-1
 36759  01B94A  006F FF8C  F001    	movff	plusw1,btemp
 36760  01B950  0E0C               	movlw	12
 36761  01B952  6401               	cpfsgt	btemp^0,c
 36762  01B954  D7DE               	goto	l10592
 36763                           
 36764                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36765  01B956  52E5               	movf	postdec1,f,c
 36766  01B958  0012               	return		;funcret
 36767  01B95A                     __end_of_TMR6_DefaultInterruptHandler:
 36768                           	opt callstack 0
 36769                           
 36770 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36771 ;; Defined at:
 36772 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36773 ;; Parameters:    Size  Location     Type
 36774 ;;		None
 36775 ;; Auto vars:     Size  Location     Type
 36776 ;;		None
 36777 ;; Return value:  Size  Location     Type
 36778 ;;                  1    wreg      void 
 36779 ;; Registers used:
 36780 ;;		None
 36781 ;; Tracked objects:
 36782 ;;		On entry : 0/0
 36783 ;;		On exit  : 3F/1
 36784 ;;		Unchanged: 0/0
 36785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36790 ;;Total ram usage:        0 bytes
 36791 ;; Hardware stack levels used:    1
 36792 ;; This function calls:
 36793 ;;		Nothing
 36794 ;; This function is called by:
 36795 ;;		Interrupt level 2
 36796 ;; This function uses a non-reentrant model
 36797 ;;
 36798                           
 36799                           	psect	text181
 36800  01C6D8                     __ptext181:
 36801                           	opt callstack 0
 36802  01C6D8                     _DMA1_DMASCNT_ISR:
 36803                           	opt callstack 4
 36804                           
 36805                           ;incstack = 0
 36806  01C6D8  EE14  F15E         	lfsr	1,___inthi_sp
 36807                           
 36808                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36809  01C6DC  0139               	movlb	57	; () banked
 36810  01C6DE  91A2               	bcf	162,0,b	;volatile
 36811                           
 36812                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36813  01C6E0  0101               	movlb	1	; () banked
 36814  01C6E2  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 36815                           
 36816                           ; BSR set to: 1
 36817  01C6E4  0011               	retfie		f
 36818  01C6E6                     __end_of_DMA1_DMASCNT_ISR:
 36819                           	opt callstack 0
 36820                           
 36821 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36822 ;; Defined at:
 36823 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36824 ;; Parameters:    Size  Location     Type
 36825 ;;		None
 36826 ;; Auto vars:     Size  Location     Type
 36827 ;;		None
 36828 ;; Return value:  Size  Location     Type
 36829 ;;                  1    wreg      void 
 36830 ;; Registers used:
 36831 ;;		None
 36832 ;; Tracked objects:
 36833 ;;		On entry : 0/0
 36834 ;;		On exit  : 3F/39
 36835 ;;		Unchanged: 0/0
 36836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36841 ;;Total ram usage:        0 bytes
 36842 ;; Hardware stack levels used:    1
 36843 ;; This function calls:
 36844 ;;		Nothing
 36845 ;; This function is called by:
 36846 ;;		Interrupt level 2
 36847 ;; This function uses a non-reentrant model
 36848 ;;
 36849                           
 36850                           	psect	text182
 36851  01C6FC                     __ptext182:
 36852                           	opt callstack 0
 36853  01C6FC                     _DMA1_DMADCNT_ISR:
 36854                           	opt callstack 4
 36855                           
 36856                           ; BSR set to: 1
 36857                           ;incstack = 0
 36858  01C6FC  EE14  F15E         	lfsr	1,___inthi_sp
 36859                           
 36860                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36861  01C700  0139               	movlb	57	; () banked
 36862  01C702  93A2               	bcf	162,1,b	;volatile
 36863                           
 36864                           ; BSR set to: 57
 36865  01C704  0011               	retfie		f
 36866  01C706                     __end_of_DMA1_DMADCNT_ISR:
 36867                           	opt callstack 0
 36868                           
 36869 ;; *************** function _DMA1_DMAA_ISR *****************
 36870 ;; Defined at:
 36871 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36872 ;; Parameters:    Size  Location     Type
 36873 ;;		None
 36874 ;; Auto vars:     Size  Location     Type
 36875 ;;		None
 36876 ;; Return value:  Size  Location     Type
 36877 ;;                  1    wreg      void 
 36878 ;; Registers used:
 36879 ;;		None
 36880 ;; Tracked objects:
 36881 ;;		On entry : 0/0
 36882 ;;		On exit  : 3F/39
 36883 ;;		Unchanged: 0/0
 36884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36889 ;;Total ram usage:        0 bytes
 36890 ;; Hardware stack levels used:    1
 36891 ;; This function calls:
 36892 ;;		Nothing
 36893 ;; This function is called by:
 36894 ;;		Interrupt level 2
 36895 ;; This function uses a non-reentrant model
 36896 ;;
 36897                           
 36898                           	psect	text183
 36899  01C708                     __ptext183:
 36900                           	opt callstack 0
 36901  01C708                     _DMA1_DMAA_ISR:
 36902                           	opt callstack 4
 36903                           
 36904                           ; BSR set to: 57
 36905                           ;incstack = 0
 36906  01C708  EE14  F15E         	lfsr	1,___inthi_sp
 36907                           
 36908                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36909  01C70C  0139               	movlb	57	; () banked
 36910  01C70E  97A2               	bcf	162,3,b	;volatile
 36911                           
 36912                           ; BSR set to: 57
 36913  01C710  0011               	retfie		f
 36914  01C712                     __end_of_DMA1_DMAA_ISR:
 36915                           	opt callstack 0
 36916                           
 36917 ;; *************** function _DMA1_DMAOR_ISR *****************
 36918 ;; Defined at:
 36919 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36920 ;; Parameters:    Size  Location     Type
 36921 ;;		None
 36922 ;; Auto vars:     Size  Location     Type
 36923 ;;		None
 36924 ;; Return value:  Size  Location     Type
 36925 ;;                  1    wreg      void 
 36926 ;; Registers used:
 36927 ;;		None
 36928 ;; Tracked objects:
 36929 ;;		On entry : 0/0
 36930 ;;		On exit  : 3F/39
 36931 ;;		Unchanged: 0/0
 36932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36937 ;;Total ram usage:        0 bytes
 36938 ;; Hardware stack levels used:    1
 36939 ;; This function calls:
 36940 ;;		Nothing
 36941 ;; This function is called by:
 36942 ;;		Interrupt level 2
 36943 ;; This function uses a non-reentrant model
 36944 ;;
 36945                           
 36946                           	psect	text184
 36947  01C714                     __ptext184:
 36948                           	opt callstack 0
 36949  01C714                     _DMA1_DMAOR_ISR:
 36950                           	opt callstack 4
 36951                           
 36952                           ; BSR set to: 57
 36953                           ;incstack = 0
 36954  01C714  EE14  F15E         	lfsr	1,___inthi_sp
 36955                           
 36956                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36957  01C718  0139               	movlb	57	; () banked
 36958  01C71A  95A2               	bcf	162,2,b	;volatile
 36959                           
 36960                           ; BSR set to: 57
 36961  01C71C  0011               	retfie		f
 36962  01C71E                     __end_of_DMA1_DMAOR_ISR:
 36963                           	opt callstack 0
 36964                           
 36965                           ;
 36966                           ; Interrupt Vector Table @ 0x8
 36967                           ;
 36968                           
 36969                           	psect	ivt0x8
 36970  000008                     __pivt0x8:
 36971                           	opt callstack 0
 36972  000008                     ivt0x8_base:
 36973                           	opt callstack 0
 36974                           
 36975                           ; Vector 0 : SWINT
 36976  000008  71D8               	dw	_Default_ISR shr (0+2)
 36977                           
 36978                           ; Vector 1 : HLVD
 36979  00000A  71D8               	dw	_Default_ISR shr (0+2)
 36980                           
 36981                           ; Vector 2 : OSF
 36982  00000C  71D8               	dw	_Default_ISR shr (0+2)
 36983                           
 36984                           ; Vector 3 : CSW
 36985  00000E  71D8               	dw	_Default_ISR shr (0+2)
 36986                           
 36987                           ; Vector 4 : NVM
 36988  000010  71D8               	dw	_Default_ISR shr (0+2)
 36989                           
 36990                           ; Vector 5 : SCAN
 36991  000012  71D8               	dw	_Default_ISR shr (0+2)
 36992                           
 36993                           ; Vector 6 : CRC
 36994  000014  71D8               	dw	_Default_ISR shr (0+2)
 36995                           
 36996                           ; Vector 7 : IOC
 36997  000016  71D8               	dw	_Default_ISR shr (0+2)
 36998                           
 36999                           ; Vector 8 : INT0
 37000  000018  71B2               	dw	_INT0_ISR shr (0+2)
 37001                           
 37002                           ; Vector 9 : ZCD
 37003  00001A  71D8               	dw	_Default_ISR shr (0+2)
 37004                           
 37005                           ; Vector 10 : AD
 37006  00001C  7028               	dw	_ADCC_ISR shr (0+2)
 37007                           
 37008                           ; Vector 11 : ADT
 37009  00001E  6D27               	dw	_ADCC_ThresholdISR shr (0+2)
 37010                           
 37011                           ; Vector 12 : CMP1
 37012  000020  71D8               	dw	_Default_ISR shr (0+2)
 37013                           
 37014                           ; Vector 13 : SMT1
 37015  000022  71D8               	dw	_Default_ISR shr (0+2)
 37016                           
 37017                           ; Vector 14 : SMT1PRA
 37018  000024  71D8               	dw	_Default_ISR shr (0+2)
 37019                           
 37020                           ; Vector 15 : SMT1PRW
 37021  000026  71D8               	dw	_Default_ISR shr (0+2)
 37022                           
 37023                           ; Vector 16 : DMA1SCNT
 37024  000028  71B6               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 37025                           
 37026                           ; Vector 17 : DMA1DCNT
 37027  00002A  71BF               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 37028                           
 37029                           ; Vector 18 : DMA1OR
 37030  00002C  71C5               	dw	_DMA1_DMAOR_ISR shr (0+2)
 37031                           
 37032                           ; Vector 19 : DMA1A
 37033  00002E  71C2               	dw	_DMA1_DMAA_ISR shr (0+2)
 37034                           
 37035                           ; Vector 20 : SPI1RX
 37036  000030  71D8               	dw	_Default_ISR shr (0+2)
 37037                           
 37038                           ; Vector 21 : SPI1TX
 37039  000032  71D8               	dw	_Default_ISR shr (0+2)
 37040                           
 37041                           ; Vector 22 : SPI1
 37042  000034  71D8               	dw	_Default_ISR shr (0+2)
 37043                           
 37044                           ; Vector 23 : I2C1RX
 37045  000036  71D8               	dw	_Default_ISR shr (0+2)
 37046                           
 37047                           ; Vector 24 : I2C1TX
 37048  000038  71D8               	dw	_Default_ISR shr (0+2)
 37049                           
 37050                           ; Vector 25 : I2C1
 37051  00003A  71D8               	dw	_Default_ISR shr (0+2)
 37052                           
 37053                           ; Vector 26 : I2C1E
 37054  00003C  71D8               	dw	_Default_ISR shr (0+2)
 37055                           
 37056                           ; Vector 27 : U1RX
 37057  00003E  70C1               	dw	_UART1_rx_vect_isr shr (0+2)
 37058                           
 37059                           ; Vector 28 : U1TX
 37060  000040  71D8               	dw	_Default_ISR shr (0+2)
 37061                           
 37062                           ; Vector 29 : U1E
 37063  000042  71D8               	dw	_Default_ISR shr (0+2)
 37064                           
 37065                           ; Vector 30 : U1
 37066  000044  71D8               	dw	_Default_ISR shr (0+2)
 37067                           
 37068                           ; Vector 31 : TMR0
 37069  000046  71D8               	dw	_Default_ISR shr (0+2)
 37070                           
 37071                           ; Vector 32 : TMR1
 37072  000048  71D8               	dw	_Default_ISR shr (0+2)
 37073                           
 37074                           ; Vector 33 : TMR1G
 37075  00004A  71D8               	dw	_Default_ISR shr (0+2)
 37076                           
 37077                           ; Vector 34 : TMR2
 37078  00004C  71D8               	dw	_Default_ISR shr (0+2)
 37079                           
 37080                           ; Vector 35 : CCP1
 37081  00004E  71D8               	dw	_Default_ISR shr (0+2)
 37082                           
 37083                           ; Vector 36 : Undefined
 37084  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 37085                           
 37086                           ; Vector 37 : NCO1
 37087  000052  71D8               	dw	_Default_ISR shr (0+2)
 37088                           
 37089                           ; Vector 38 : CWG1
 37090  000054  71D8               	dw	_Default_ISR shr (0+2)
 37091                           
 37092                           ; Vector 39 : CLC1
 37093  000056  71D8               	dw	_Default_ISR shr (0+2)
 37094                           
 37095                           ; Vector 40 : INT1
 37096  000058  6F58               	dw	_INT1_ISR shr (0+2)
 37097                           
 37098                           ; Vector 41 : CMP2
 37099  00005A  71D8               	dw	_Default_ISR shr (0+2)
 37100                           
 37101                           ; Vector 42 : DMA2SCNT
 37102  00005C  71D8               	dw	_Default_ISR shr (0+2)
 37103                           
 37104                           ; Vector 43 : DMA2DCNT
 37105  00005E  71D8               	dw	_Default_ISR shr (0+2)
 37106                           
 37107                           ; Vector 44 : DMA2OR
 37108  000060  71D8               	dw	_Default_ISR shr (0+2)
 37109                           
 37110                           ; Vector 45 : DMA2A
 37111  000062  71D8               	dw	_Default_ISR shr (0+2)
 37112                           
 37113                           ; Vector 46 : I2C2RX
 37114  000064  71D8               	dw	_Default_ISR shr (0+2)
 37115                           
 37116                           ; Vector 47 : I2C2TX
 37117  000066  71D8               	dw	_Default_ISR shr (0+2)
 37118                           
 37119                           ; Vector 48 : I2C2
 37120  000068  71D8               	dw	_Default_ISR shr (0+2)
 37121                           
 37122                           ; Vector 49 : I2C2E
 37123  00006A  71D8               	dw	_Default_ISR shr (0+2)
 37124                           
 37125                           ; Vector 50 : U2RX
 37126  00006C  70D5               	dw	_UART2_rx_vect_isr shr (0+2)
 37127                           
 37128                           ; Vector 51 : U2TX
 37129  00006E  70CB               	dw	_UART2_tx_vect_isr shr (0+2)
 37130                           
 37131                           ; Vector 52 : U2E
 37132  000070  71D8               	dw	_Default_ISR shr (0+2)
 37133                           
 37134                           ; Vector 53 : U2
 37135  000072  71D8               	dw	_Default_ISR shr (0+2)
 37136                           
 37137                           ; Vector 54 : TMR3
 37138  000074  64F5               	dw	_TMR3_ISR shr (0+2)
 37139                           
 37140                           ; Vector 55 : TMR3G
 37141  000076  71D8               	dw	_Default_ISR shr (0+2)
 37142                           
 37143                           ; Vector 56 : TMR4
 37144  000078  71D8               	dw	_Default_ISR shr (0+2)
 37145                           
 37146                           ; Vector 57 : CCP2
 37147  00007A  71D8               	dw	_Default_ISR shr (0+2)
 37148                           
 37149                           ; Vector 58 : Undefined
 37150  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 37151                           
 37152                           ; Vector 59 : CWG2
 37153  00007E  71D8               	dw	_Default_ISR shr (0+2)
 37154                           
 37155                           ; Vector 60 : CLC2
 37156  000080  71D8               	dw	_Default_ISR shr (0+2)
 37157                           
 37158                           ; Vector 61 : INT2
 37159  000082  71D8               	dw	_Default_ISR shr (0+2)
 37160                           
 37161                           ; Vector 62 : Undefined
 37162  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 37163                           
 37164                           ; Vector 63 : Undefined
 37165  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 37166                           
 37167                           ; Vector 64 : Undefined
 37168  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 37169                           
 37170                           ; Vector 65 : Undefined
 37171  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 37172                           
 37173                           ; Vector 66 : Undefined
 37174  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 37175                           
 37176                           ; Vector 67 : Undefined
 37177  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 37178                           
 37179                           ; Vector 68 : Undefined
 37180  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 37181                           
 37182                           ; Vector 69 : Undefined
 37183  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 37184                           
 37185                           ; Vector 70 : TMR5
 37186  000094  68F4               	dw	_TMR5_ISR shr (0+2)
 37187                           
 37188                           ; Vector 71 : TMR5G
 37189  000096  71D8               	dw	_Default_ISR shr (0+2)
 37190                           
 37191                           ; Vector 72 : TMR6
 37192  000098  716B               	dw	_TMR6_ISR shr (0+2)
 37193                           
 37194                           ; Vector 73 : CCP3
 37195  00009A  71D8               	dw	_Default_ISR shr (0+2)
 37196                           
 37197                           ; Vector 74 : CWG3
 37198  00009C  71D8               	dw	_Default_ISR shr (0+2)
 37199                           
 37200                           ; Vector 75 : CLC3
 37201  00009E  71D8               	dw	_Default_ISR shr (0+2)
 37202                           
 37203                           ; Vector 76 : Undefined
 37204  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 37205                           
 37206                           ; Vector 77 : Undefined
 37207  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 37208                           
 37209                           ; Vector 78 : Undefined
 37210  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 37211                           
 37212                           ; Vector 79 : Undefined
 37213  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 37214                           
 37215                           ; Vector 80 : CCP4
 37216  0000A8  71D8               	dw	_Default_ISR shr (0+2)
 37217                           
 37218                           ; Vector 81 : CLC4
 37219  0000AA  71D8               	dw	_Default_ISR shr (0+2)
 37220  0000AC                     ivt0x8_undefint:
 37221                           	opt callstack 0
 37222  0000AC  00FF               	reset	
 37223                           
 37224                           	psect	text185
 37225  000000                     __ptext185:
 37226                           	opt callstack 0
 37227                           
 37228                           	psect	rparam
 37229  0000                     
 37230                           	psect	temp
 37231  000001                     btemp:
 37232                           	opt callstack 0
 37233  000001                     	ds	32
 37234  0000                     wtemp0	set	btemp
 37235  0000                     wtemp1	set	btemp+2
 37236  0000                     wtemp2	set	btemp+4
 37237  0000                     wtemp3	set	btemp+6
 37238  0000                     wtemp4	set	btemp+8
 37239  0000                     wtemp5	set	btemp+10
 37240  0000                     wtemp8	set	btemp+1
 37241  0000                     ttemp0	set	btemp
 37242  0000                     ttemp1	set	btemp+3
 37243  0000                     ttemp2	set	btemp+6
 37244  0000                     ttemp3	set	btemp+9
 37245  0000                     ttemp5	set	btemp+1
 37246  0000                     ttemp6	set	btemp+4
 37247  0000                     ttemp7	set	btemp+8
 37248  0000                     ltemp0	set	btemp
 37249  0000                     ltemp1	set	btemp+4
 37250  0000                     ltemp2	set	btemp+8
 37251  0000                     lltemp0	set	btemp
 37252  0000                     lltemp1	set	btemp+8
 37253  0000                     lltemp2	set	btemp+16
 37254  0000                     lltemp3	set	btemp+24
 37255                           tosu	equ	0x3FFF
 37256                           tosh	equ	0x3FFE
 37257                           tosl	equ	0x3FFD
 37258                           stkptr	equ	0x3FFC
 37259                           pclatu	equ	0x3FFB
 37260                           pclath	equ	0x3FFA
 37261                           pcl	equ	0x3FF9
 37262                           tblptru	equ	0x3FF8
 37263                           tblptrh	equ	0x3FF7
 37264                           tblptrl	equ	0x3FF6
 37265                           tablat	equ	0x3FF5
 37266                           prodh	equ	0x3FF4
 37267                           prodl	equ	0x3FF3
 37268                           indf0	equ	0x3FEF
 37269                           postinc0	equ	0x3FEE
 37270                           postdec0	equ	0x3FED
 37271                           preinc0	equ	0x3FEC
 37272                           plusw0	equ	0x3FEB
 37273                           fsr0h	equ	0x3FEA
 37274                           fsr0l	equ	0x3FE9
 37275                           wreg	equ	0x3FE8
 37276                           indf1	equ	0x3FE7
 37277                           postinc1	equ	0x3FE6
 37278                           postdec1	equ	0x3FE5
 37279                           preinc1	equ	0x3FE4
 37280                           plusw1	equ	0x3FE3
 37281                           fsr1h	equ	0x3FE2
 37282                           fsr1l	equ	0x3FE1
 37283                           bsr	equ	0x3FE0
 37284                           indf2	equ	0x3FDF
 37285                           postinc2	equ	0x3FDE
 37286                           postdec2	equ	0x3FDD
 37287                           preinc2	equ	0x3FDC
 37288                           plusw2	equ	0x3FDB
 37289                           fsr2h	equ	0x3FDA
 37290                           fsr2l	equ	0x3FD9
 37291                           status	equ	0x3FD8


Data Sizes:
    Strings     1139
    Constant    492
    Data        1073
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     254
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_104(CODE[1]), STR_66(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_97(CODE[3]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[3]), STR_78(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_97(CODE[3]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[3]), STR_78(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), 
		 -> STR_63(CODE[19]), STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), 
		 -> STR_55(CODE[15]), STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_47(CODE[3]), STR_46(CODE[3]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), 
		 -> STR_63(CODE[19]), STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), 
		 -> STR_55(CODE[15]), STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_47(CODE[3]), STR_46(CODE[3]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_49(CODE[9]), STR_48(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_49(CODE[9]), STR_48(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_73(CODE[4]), STR_72(CODE[4]), STR_69(CODE[4]), STR_68(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_73(CODE[4]), STR_72(CODE[4]), STR_69(CODE[4]), STR_68(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), STR_46(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), STR_63(CODE[19]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), STR_55(CODE[15]), 
		 -> STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6478_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), STR_63(CODE[19]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), STR_55(CODE[15]), 
		 -> STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_47(CODE[3]), STR_46(CODE[3]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), STR_63(CODE[19]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), STR_55(CODE[15]), 
		 -> STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_47(CODE[3]), STR_46(CODE[3]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_67(CODE[127]), STR_65(CODE[3]), STR_64(CODE[3]), STR_63(CODE[19]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[24]), STR_56(CODE[15]), STR_55(CODE[15]), 
		 -> STR_54(CODE[15]), STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_47(CODE[3]), STR_46(CODE[3]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_49(CODE[9]), STR_48(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_49(CODE[9]), STR_48(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_49(CODE[9]), 
		 -> STR_48(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4882tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_49(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_48(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  595999
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   0     0      0  124275
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _get_vterm_ptr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F      58        0.0%
DATA                 0      0     97C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb  6 21:30:04 2020

                     _SPI1_Exchange8bit C4FA                __end_of_set_display_info C572  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F2  
                                     _R 00AF                                       _S 0254  
                                     _T FA6F                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C23A            __end_of_start_switch_handler C4DA  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FB77                  __end_of_FVR_Initialize C746  
                        _check_day_time 8AC4                             __CFG_LVP$ON 000000  
                                   l169 C632                                     l807 C508  
                                   l673 C0F2                                     _GIE 01FE97  
                                   _abs BB0E                                     _pad 9EC0  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C5DE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C40C  
                     _update_adc_result BD9E                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C3A0  
                          __CFG_ZCD$OFF 000000                                    l1002 BD1A  
                                  l2002 8C52                                    l1190 BD5A  
                                  l1334 12A2                                    l2151 3E2C  
                                  l1351 194E                                    l1361 19F2  
                                  l1353 1952                                    l2147 3AEE  
                                  l1603 AC1E                                    l2411 6892  
                                  l1371 1BF6                         _timer3ReloadVal 009E  
                                  l2252 9F1C                                    l2308 123A  
                                  l2068 9A38                                    l1372 1E1E  
                                  l2077 84EC                                    l3046 4E1C  
                                  l1622 BE96                                    l3127 4660  
                                  l1607 AF38                                    l2272 593A  
                                  l2352 0B1A                                    l2337 066A  
                                  l2193 747A                                    l1377 23E6  
                                  l3058 4CAC                                    l2426 616C  
                                  l3091 5396                                    l1475 B7BE  
                                  l3229 7C26                                    l1822 5856  
                                  l3190 8DF0                                    l2390 7568  
                                  l3167 88FE                                    l1681 BDF4  
                                  l1738 C56E                                    l1690 85A4  
                                  l1691 8700                                    l2476 33C8  
                                  l3198 BB4E                                    l2806 9268  
                                  l1862 B2D8                    _ADCC_StartConversion C64C  
                                  l1938 8ABA                                    l3298 9C86  
                                  l1698 A0E0                                    l2772 92F6  
                                  l3580 B158                                    l3565 82CC  
                                  l1878 AA10                                    l2768 A7F0  
                                  l3593 B0D4                                    l1985 A202  
                                  l2779 93CA                                    l8100 4C5C  
                                  l8004 4858                                    l1998 8C5A  
                                  l8122 4CEC                                    l8050 4A3A  
                                  l8034 4996                                    l8132 4D14  
                                  l8116 4CCE                                    l8108 4C90  
                                  l8044 4A08                                    l8118 4CE0  
                                  l8054 4A44                                    l8302 6600  
                                  l8136 4D1A                                    l8048 4A28  
                                  l8170 4DFC                                    l8162 4DBC  
                                  l8082 4B2C                                    l8058 4A74  
                                  l8322 67B6                                    l8164 4DCC  
                                  l8148 4D78                                    l8076 4B10  
                                  l8420 8008                                    l8412 7F5C  
                                  l8404 7ED4                                    l8260 8D8E  
                                  l8316 671E                                    l8158 4DA4  
                                  l8078 4B22                                    l8086 4B5E  
                                  l8510 5138                                    l8502 5102  
                                  l8246 BB3E                                    l8270 8DE8  
                                  l8326 6824                                    l8318 676E  
                                  l8512 514A                                    l8520 51A2  
                                  l8440 4E7C                                    l8360 779E  
                                  l8264 8D92                                    l8344 B0C4  
                                  l8602 3ED6                                    l8098 4C36  
                                  l8450 4ED2                                    l8620 3FA4  
                                  l8604 3EDC                                    l8532 51EC  
                                  l8460 4F5A                                    l8452 4F02  
                                  l8372 7838                                    l8622 3FAA  
                                  l8614 3F64                                    l8606 3F0C  
                                  l8550 5262                                    l8526 51D0  
                                  l8518 519E                                    l8470 4FB0  
                                  l8446 4EBC                                    l8366 77F2  
                                  l8704 44E0                                    l8632 3FFC  
                                  l8624 3FDA                                    l8560 52D6  
                                  l8536 5212                                    l8472 4FE0  
                                  l8384 790A                                    l8288 B148  
                                  l8722 45A0                                    l8546 525C  
                                  l8466 4F9A                                    l9610 813E  
                                  l8708 44E6                                    l8580 537A  
                                  l8572 5342                                    l8492 5072  
                                  l8484 5058                                    l8812 9DF2  
                                  l8804 9DC8                                    l9612 81AA  
                                  l8718 455A                                    l8566 5312  
                                  l8478 501E                                    l7934 AD9A  
                                  l8830 9EA6                                    l8822 9E72  
                                  l8736 460E                                    l8728 45CA  
                                  l9560 79F8                                    l7936 ADBC  
                                  l8808 9DDA                                    l8738 4628  
                                  l8690 4470                                    l7962 46C0  
                                  l8578 536A                                    l8770 9590  
                                  l8842 A7BA                                    l8914 9200  
                                  l8906 91D4                                    l8930 8FCE  
                                  l8684 4454                                    l8596 3E96  
                                  l7980 477E                                    l7972 4716  
                                  l8860 9344                                    l9900 887C  
                                  l9580 7B12                                    l8764 9570  
                                  l8916 9216                                    l8908 91F0  
                                  l8694 4496                                    l7974 4746  
                                  l8854 92B4                                    l9910 88DE  
                                  l9574 7A98                                    l9558 79D6  
                                  l8758 955A                                    l8846 A7EE  
                                  l8838 A778                                    l8942 90A0  
                                  l7992 47F0                                    l7968 4700  
                                  l8872 93C8                                    l8864 9392  
                                  l9920 53A2                                    l9584 7B7A  
                                  l9576 7AB0                                    l9568 7A6C  
                                  l8792 966A                                    l8784 9636  
                                  l8880 BA0C                                    l7986 47B0  
                                  l9594 7C16                                    l9578 7AD4  
                                  l8890 9152                                    l8962 98AC  
                                  l8954 9800                                    l7996 4806  
                                  l9940 55DA                                    l7998 4836  
                                  l9926 53D2                                    STR_1 FF08  
                                  l9880 87DE                                    l9960 5788  
                                  l9952 56A8                                    l9936 54F8  
                                  STR_2 FEF3                                    STR_3 FFD1  
                                  l9890 8848                                    l9882 87FC  
                                  l8978 B8AA                                    STR_4 FE9F  
                                  STR_5 FE60                                    l9892 885E  
                                  l9876 87BA                                    l9868 874E  
                                  l9948 560C                                    STR_6 FE60  
                                  STR_7 FE60                                    l9878 87C8  
                                  l9966 5824                                    l9974 5836  
                                  STR_8 FE8A                                    STR_9 FC5B  
                                  l9888 882A                                    l9992 C16A  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6030 BFD8  
                                  u6200 8DE0                                    u6040 BFDA  
                                  u6210 8DE2                                    _T6PR 003F93  
                                  u7100 456E                                    u6140 BB22  
                                  _PMD0 0039C0                                    u7005 4246  
                                  _PMD1 0039C1                                    u7110 45B4  
                                  u6150 8D12                                    _PMD2 0039C2  
                                  u7015 440E                                    _PMD3 0039C3  
                                  u6320 66C4                                    u5600 C00A  
                                  u6240 B106                                    u6400 B084  
                                  _PMD4 0039C4                                    u6305 661E  
                                  _PMD5 0039C5                                    u7050 44D8  
                                  u6306 6624                                    u6250 B108  
                                  _PMD6 0039C6                                    u6155 8D08  
                                  u6307 6632                                    _PMD7 0039C7  
                                  u5700 49BC                                    u6420 C038  
                                  u6500 7864                                    u6340 679C  
                                  u6325 66BA                                    u5710 49DC  
                                  u6430 C03A                                    u7230 9E1E  
                                  u6270 6598                                    u5711 49D6  
                                  u5560 ADEA                                    u6520 7942  
                                  u6600 7F56                                    u7160 95BC  
                                  u6280 65E4                                    u6345 6792  
                                  u7090 4534                                    u6450 7798  
                                  u6610 7F88                                    u7250 9E92  
                                  u6370 BBD2                                    u6195 8DC2  
                                  u6275 658E                                    u5900 4CF2  
                                  u5820 4B54                                    u6540 7994  
                                  u7180 9656                                    u7500 90D8  
                                  u6380 BBD4                                    u5750 4A6C  
                                  u6470 77EE                                    u6630 8040  
                                  u7350 BA08                                    u7430 921E  
                                  u5590 C008                                    u6390 B082  
                                  u7095 4524                                    u5567 ADDC  
                                  u5920 4D0C                                    u5760 4A8C  
                                  u5728 49DE                                    u9200 8872  
                                  u7360 9132                                    u7520 97FA  
                                  u5825 4B44                                    u6481 77F8  
                                  u6490 7832                                    u6650 8092  
                                  u6570 7ECE                                    u7290 A7EA  
                                  u7450 9248                                    u7370 9146  
                                  u7530 982C                                    u5755 4A5C  
                                  u5860 4C7E                                    u7380 9180  
                                  u7365 9128                                    u7461 8F8E  
                                  u6830 5254                                    u6590 7F24  
                                  u7470 8FC8                                    u7550 98E4  
                                  u5960 4D68                                    u9304 55F4  
                                  u7480 8FFA                                    u9305 55EE  
                                  u7385 9176                                    u7570 B886  
                                  u9324 56C2                                    u9244 53BC  
                                  u7580 B8A6                                    u8700 7BC0  
                                  u5965 4D58                                    u9325 56BC  
                                  u9245 53B6                                    u5990 4D88  
                                  u6870 52B0                                    u6790 51CA  
                                  u9350 56EC                                    u8710 7BC2  
                                  u6880 52EA                                    u9344 56E4  
                                  u9264 53EC                                    u8800 82A0  
                                  u9345 56DE                                    u9265 53E6  
                                  u6890 5326                                    u8810 C45A  
                                  u6875 52A0                                    u6980 3FEA  
                                  u9700 891E                                    u9284 540E  
                                  u9605 B5AE                                    u9285 5408  
                                  u9525 BC0E                                    u9606 B5B0  
                                  u8750 81D8                                    u8807 8292  
                                  u8680 7A68                                    _PLLR 01CEE0  
                                  u6995 417E                                    u9580 B57A  
                                  u8757 81CA                                    u8790 8272  
                                  u9655 C678                                    u9840 C482  
                                  u9656 C67A                                    u9665 C668  
                                  u9666 C66A                                    u8795 826C  
                                  u8797 825E                                    u9598 B57C  
                                  u9846 C484                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C0CC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FB87                                    _cp_l FB83  
                                  _atoi 79BC                                    _ctoa AFD2  
                                  _main 1244                                    _dtoa 585C  
                                  _nanf B698                                    _seed 01F6  
                                  _prec 003C                                    _nout 009A  
                                  _spin FAFF                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 747E                                    btemp 0001  
                                  _utoa 684E                                    _xtoa 6128  
                __end_of_check_adc_scan C72E                           ___fpclassifyf 8C64  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C518               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize BAC6             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C304  
                          ___param_bank 000000                  __end_of_check_day_time 8C64  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR C6D6  
                      __end_of_INT1_ISR BD9E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma AC26           __end_of_OSCILLATOR_Initialize C638  
                                 l10110 BEA0                                   l10202 B8E6  
                                 l11024 C4B4                                   l10080 8B8E  
                                 l11036 C0EE                                   l10092 8C00  
                                 l11212 8F5A                                   l10164 C084  
                                 l11220 A222                                   l11062 BD02  
                                 l11080 BD42                                   l12202 AE26  
                                 l11250 71D2                                   l11226 A2D4  
                                 l11252 71D8                                   l11316 7440  
                                 l11510 B228                                   l12206 AE64  
                                 l13022 31BE                                   l12222 6F52  
                                 l11334 A8BA                                   l11262 7214  
                                 l11318 746A                                   l11504 B218  
                                 l13008 3042                                   l13120 AC4A  
                                 l11248 71C2                                   l10706 BE0A  
                                 l12330 5992                                   l12410 0216  
                                 l13042 3350                                   l12242 7128  
                                 l12234 707A                                   l13114 AC2A  
                                 l11338 A8F8                                   l11274 7266  
                                 l11258 7208                                   l12260 9F26  
                                 l12340 5BA4                                   l12412 022C  
                                 l13036 32F6                                   l13052 3374  
                                 l12228 7010                                   l13116 AC32  
                                 l11268 723E                                   l13222 357C  
                                 l13214 34BC                                   l10822 969C  
                                 l11382 611A                                   l12190 9B9C  
                                 l12254 9EEC                                   l12326 5974  
                                 l12318 592A                                   l12502 06B8  
                                 l13046 3354                                   l13070 AD26  
                                 l13118 AC3C                                   l13126 AC52  
                                 l13150 9FF8                                   l11294 72E6  
                                 l11286 72C0                                   l11278 7272  
                                 l10592 B912                                   l10824 96AC  
                                 l10664 896C                                   l10656 8940  
                                 l12264 9F62                                   l12360 5C56  
                                 l12512 077A                                   l12408 01EA  
                                 l12416 0258                                   l13128 AC7E  
                                 l13234 36EA                                   l13226 35E8  
                                 l13218 3510                                   l10826 96B2  
                                 l12258 9F14                                   l12274 A5DA  
                                 l12522 0926                                   l12506 06F0  
                                 l12442 0396                                   l12426 02FC  
                                 l12434 032A                                   l13090 AAFC  
                                 l10596 B944                                   l13244 3916  
                                 l10852 97AC                                   l10844 9732  
                                 l10828 96C0                                   l10836 96C8  
                                 l10668 8980                                   l13404 B3BC  
                                 l12268 9FAC                                   l12292 AFF0  
                                 l12364 5C92                                   l12452 04D2  
                                 l12700 75DA                                   l13092 AB3E  
                                 l10748 BDBE                                   l10772 B296  
                                 l13500 12BC                                   PRLOCK 0039EF  
                                 l13262 3B20                                   l13254 3A56  
                                 l13238 373E                                   l10838 96FA  
                                 l12294 B01C                                   l12622 0FD6  
                                 l12470 058E                                   l12446 0406  
                                 l12390 00F0                                   l12710 7694  
                                 l13430 8574                                   l13190 996C  
                                 l13248 3990                                   l12624 0FF0  
                                 l12608 0F3A                                   l12560 0C32  
                                 l12544 0B12                                   l12536 0A48  
                                 l12464 0554                                   l12448 0470  
                                 l12704 760A                                   l13360 82EA  
                                 l10960 A80C                                   l10784 B2AE  
                                 l10792 9CF2                                   l13274 3E24  
                                 l13258 3AFE                                   l12634 1092  
                                 l12546 0B34                                   l12378 00AC  
                                 l12714 76C0                                   l13610 17B4  
                                 l12660 119A                                   l12644 10E2  
                                 l12572 0CBA                                   l12580 0D24  
                                 l12484 05F6                                   l12476 0594  
                                 l12468 057C                                   l12740 68DE  
                                 l12732 6882                                   l13444 869C  
                                 l13196 99D2                                   l10964 A888  
                                 l10796 9D54                                   l12486 0602  
                                 l12398 0146                                   l12718 76FC  
                                 l12750 6AD4                                   l12680 74EA  
                                 l12832 6498                                   l12808 6328  
                                 l12816 63AE                                   l12912 283E  
                                 l13376 83DE                                   l13720 22BE  
                                 l13704 223C                                   l13552 1472  
                                 l12930 29C2                                   l12922 28D6  
                                 l13386 84B6                                   l13706 2268  
                                 l13634 1956                                   l12588 0D90  
                                 l12596 0EA2                                   l12772 615C  
                                 l13732 2310                                   l13636 1984  
                                 l13628 1944                                   l13492 1284  
                                 l12934 2A16                                   l12870 2508  
                                 l13750 2378                                   l13742 234E  
                                 l13494 128C                                   l12696 759E  
                                 l12792 6232                                   l12784 61D2  
                                 l12872 2542                                   l13760 23BC  
                                 l13656 19DE                                   l13648 19B8  
                                 l12778 6196                                   l12954 2C28  
                                 l12946 2B70                                   l12874 2558  
                                 l13770 2412                                   l13690 205A  
                                 l13666 1A02                                   l13498 12AA  
                                 l12892 268A                                   l13756 2396  
                                 l13748 2360                                   l12958 2C5C  
                                 l12894 26C4                                   l13694 20BA  
                                 l13678 1B02                                   l13598 16DA  
                                 l12896 26DA                                   l12978 2DBC  
                                 l12988 2E6A                                   l12998 2F8C  
                       __end_of___aodiv 79BC                            _Volts_to_SOC A7FA  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4E26                                   _ADCLK 003EFF  
                       __end_of___aomod 80B6                                   _ADPCH 003EF1  
                       __end_of___fldiv 53A0                                   _ADREF 003EFD  
                       __end_of___awdiv 9684                         __end_of___flneg BA36  
                                 STR_10 FD16                                   STR_11 FDF2  
                                 STR_12 FEB4                                   STR_21 FF82  
                                 STR_13 FEC9                                   STR_14 FF47  
                                 STR_30 FE1E                                   STR_22 FDDC  
                                 STR_15 FF32                                   STR_23 FDC6  
                                 STR_31 FD2C                                   STR_40 FE4A  
                                 STR_24 FDB0                                   STR_32 FD42  
                                 STR_16 FD00                                   STR_41 FE4A  
                                 STR_25 FD9A                                   STR_33 FD58  
                                 STR_17 FC27                           __CFG_WDTE$OFF 000000  
                                 STR_42 FE4A                                   STR_50 FF5C  
                                 STR_26 FD84                                   STR_34 FCA4  
                                 STR_18 FC41                                   STR_51 FF5C  
                                 STR_19 FF93                                   STR_43 FF1D  
                                 STR_27 FD6E                                   STR_35 FCE9  
                                 STR_52 FFBE                                   STR_44 FE75  
                                 STR_28 FE34                                   STR_36 FC0A  
                       __end_of___awmod 9EC0                                   STR_53 FFBE  
                                 STR_45 FEDE                                   STR_29 FE08  
                                 STR_37 FC8D                                   STR_46 FFFB  
                                 STR_54 FFA3                                   STR_38 FCBB  
                                 STR_55 FFA3                                   STR_47 FFF8  
                                 STR_39 FCD2                                   STR_56 FFA3  
                                 STR_80 FFEF                                   STR_72 FFDA  
                                 STR_48 FFB2                                   _ADRPT 003EEC  
                                 STR_73 FFE2                                   STR_49 FFC8  
                                 STR_57 FC75                                   STR_66 FC09  
                                 STR_82 FFEF                                   STR_90 FFF2  
                                 STR_59 FF6F                                   STR_67 FB8B  
                                 STR_92 FFF2                                   STR_76 FFE9  
                                 STR_68 FFD6                                   STR_85 FFEC  
                                 STR_69 FFDE                                   STR_78 FFE9  
                                 STR_87 FFEC                                   STR_95 FFF5  
                       __end_of___flmul 466A                                   STR_97 FFF5  
                                 STR_99 FFE6                         __end_of___flsub BB9A  
                       __end_of___fltol 9272                                   u11030 9B90  
                                 u11110 719C                                   u12000 6868  
                                 u11050 9C0C                                   u11210 588C  
                                 u11220 588E                                   u11301 5BE8  
                                 u11310 5BFE                                   u12110 622A  
                                 u11311 5BFC                                   u12031 6B16  
                                 u11320 5C12                                   u11240 58FE  
                                 u11160 A654                                   u12040 6B2C  
                                 u12120 627E                                   u12041 6B2A  
                                 u12201 63FA                                   u11330 5C16  
                                 u12050 6B40                                   u12210 6410  
                                 u12130 6280                                   u13010 158C  
                       __end_of___lodiv 9100                                   u12211 640E  
                                 u11260 5910                                   u11420 0194  
                                 u12060 6B44                                   u12220 6424  
                                 u12300 25C8                                   u11350 5C2C  
                                 u11510 050E                                   u11430 0196  
                                 u12230 6428                                   u12150 62DE  
                                 u13030 17E2                                   u11167 A646  
                                 u11280 5960                                   u12160 62E0  
                                 u12080 6142                                   u12400 292A  
                                 u13040 190C                                   u11290 5BB8  
                                 u11610 0648                                   u12330 2722  
                                 u13050 190E                                   _U1P1H 003DED  
                                 u11540 0562                                   u11460 02A6  
                                 u12180 63AA                                   u12420 2A9E  
                                 u12340 2724                                   _U1P2H 003DEF  
                                 u11470 02A8                                   u11390 00DA  
                                 u12190 63CA                                   u12350 274A  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u12520 3096  
                                 u12280 25A0                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12185 638C  
                                 u11570 05C6                                   u12450 2D16  
                                 u12290 25A2                                   u12610 9948  
                                 u13170 22AE                                   _U1P3L 003DF0  
                                 u12540 3246                                   u12460 2D18  
                                 u13180 22C6                                   u13190 22D8  
                                 _U2P1L 003DD4                                   u11840 10B8  
                                 u11680 0A18                                   u12560 AD06  
                                 u12640 99AE                                   u13176 22B0  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u13186 22C8                                   _U2P3L 003DD8  
                                 u11860 116E                                   u11780 0EE4  
                                 u11940 7600                                   u12628 994A  
                                 u13196 22DA                                   u11870 1170  
                                 u11950 7646                                   u12670 9A14  
                                 _T5CLK 003F9D                         __end_of___lomod 9906  
                                 u12658 99B0                                   u11980 7722  
                                 _T2HLT 003FAD                                   u11957 7638  
                                 u12950 86EC                                   u12960 86EE  
                                 u12688 9A16                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BDD8                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C760  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal B162  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9536  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A4B2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C5C6                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf AA22  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C6C8                                   _fputc 9B6C  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BBDE  
                                 _fputs AE16                         __end_of_isdigit C044  
                       __end_of_ivln2_h FB83                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand BEB4                                   _width 003A  
                                 _putch C590            __end_of_set_ac_charger_relay C69E  
                       __end_of_islower BFE4                         __end_of_isspace B8BA  
              _INT1_SetInterruptHandler C262                         __end_of_set_dac AA22  
                       __end_of_isupper C014                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C1EA  
           _UART1_SetRxInterruptHandler C1C2                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A1EE                         __end_of_tolower B162  
                       __end_of_strncmp 82D6                         __end_of_toupper B0DE  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C32C  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize BA7E  
                 __end_of_ringBufS_init C14A                         __initialization A4B2  
                     _UART2_rx_vect_isr C354                            __end_of_cp_h FB8B  
                          __end_of_cp_l FB87                            __end_of_atoi 7C30  
                          __end_of_ctoa B05A                            __end_of_main 2426  
                          __end_of_dtoa 5CDC                            __end_of_nanf B6FA  
                          __end_of_spin FB77                            __end_of_stoa 773C  
                          __end_of_utoa 6B8E                            __end_of_xtoa 64E2  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C5F6                   __end_of_send_lcd_data C3A0  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B3C6  
              _TMR5_SetInterruptHandler C212                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr C6F0                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize C0F8                         _PWM8_Initialize C60C  
                      _UART1_Initialize BA36                       _UART2_tx_vect_isr C32C  
                    _UART2_Transmit_ISR C0CC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B5D2                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  STR_101 FFE6  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BBDE  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A462                                  _RB6PPS 003A0E  
                                i1l1207 949E                    _start_switch_handler C4BA  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize BB0E                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C6AC  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u943_20 8B1A                                  u938_25 C698  
                                u938_26 C69A                                  u964_20 BE18  
                  __size_of_hid_display 021C                                  u964_26 BE1A  
                                u957_20 C6C4                                  u991_24 97A2  
                                u991_25 979E                                  u985_28 96A2  
                                u987_20 96BC                                  u987_21 96B6  
                      __end_of___xxtofl 8908   __end_of_ADCC_DischargeSampleCapacitor C726  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C71E  
              __end_of_send_lcd_cmd_dma C536                         _TMR3_WriteTimer BD20  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C37C  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C6E6  
                      _UART2_Initialize B6FA                                  _WaitMs BE7E  
                       _conv_raw_result 53A0                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9272  
                                ___fleq A736                       _ADCC_ThresholdISR B49C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AEAE  
                                _efgtoa 0000                                  _floorf 64E2  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6EBA                    __size_of_help_button 0038  
                                clear_0 A524                                  clear_1 A538  
                                clear_2 A54A                                  clear_3 A556  
                                clear_4 A562                                  clear_5 A56E  
                                clear_6 A57A               __end_of_port_data_dma_ptr C6FA  
                                _printf B636                      _eaDogM_WriteString ACCE  
                                _strcpy A592                               ?_ADCC_ISR 0021  
                                _strlen AD74                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B430  
                        _PMD_Initialize C638              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C354                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B636                            __mediumconst F99E  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B80E  
                      __end_of_spinners A2E4                        __end_of_vfprintf AB7C  
                            _StartTimer BCA0                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize BAC6  
                     _SYSTEM_Initialize B9A4                              __accesstop 0060  
               __end_of__initialization A58C                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C73E  
                  __end_of_display_info C736               __end_of_CLKREF_Initialize C6F0  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer BCE0                   _set_temp_display_help C67E  
                      _clear_hid_pflags B506                   __end_of_TMR3_CallBack C40C  
             __end_of_ADCC_ThresholdISR B506                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush AF40                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BE48                            __pidataBANK1 A666  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf AAD0  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9C90                           __end_of_fputs AEAE  
                  _get_ac_charger_relay C6BA                           __end_of_srand BEE8  
                 __end_of_TMR5_CallBack C3E8                           __end_of_putch C5AA  
                  _set_ac_charger_relay C68E                 __end_of_PWM8_Initialize C622  
               __end_of_TMR6_Initialize C122                       _adc_int_t_handler B1E4  
                __end_of_PMD_Initialize C64C                              __end_of_bp FB7F  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C454  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C708  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C746  
                    __size_of_hid_input 0138                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B9EE  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BD60                              __pbssBANK0 0060  
                            __pbssBANK1 01D0                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 84F2                 __end_of_conv_raw_result 585C  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone C172                        _DMA1_DMADCNT_ISR C6FC  
                       _convert_dac_raw 9C90                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma BF84  
                 __end_of_wait_lcd_done C476        __end_of_TMR3_SetInterruptHandler C262  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C212  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B49A  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B262  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B354  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C2DA   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C2B2                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C498                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C74C  
                               u1021_28 C3B0                                 u1030_28 C3D4  
                               u1027_48 C440                                 u1019_48 C41C  
                               u1061_44 B248                                 u1061_45 B242  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C6D8  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1277_20 3A46  
                               u1284_28 C3F8                                 u1279_20 3B10  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B262  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3E40                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch C072                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer BD20                 __size_of_switch_handler 0142  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one C67E  
            __end_of_set_load_relay_two C66E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8DFA  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim C5C6  
                               __Lparam 0000                __end_of_UART1_Initialize BA7E  
                     __end_of_hid_input 9A3E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 773C                                 ___fladd 466A  
                               ___aomod 7E76                                 ___fldiv 4E26  
                               ___awdiv 9536                                 ___flneg B9EE  
                               ___awmod 9DA8                                 ___flmul 3E40  
                               ___flsub BB54                                 ___fltol 9100  
                               ___lodiv 8F80                                 ___lomod 97C6  
             __end_of_UART1_Receive_ISR C4BA                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A3CE  
                               __pcinit A4B2                __end_of_mode_lamp_bright C6BA  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C69E                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B75A  
                               __ptext2 C4BA                                 __ptext3 BEB4  
                               __ptext4 A1EE                                 __ptext5 BEE8  
                               __ptext6 BF1C                                 __ptext7 9C90  
                               __ptext8 A96C                                 __ptext9 B262  
                     __end_of_esr_check 747E                       _UART2_Receive_ISR C4DA  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize C622                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 7E76  
                               _isalpha BB9A                                 us655999 79A6  
                               us751999 90EA                                 _isdigit C014  
                               _ivln2_h FB7F                                 us666999 80A4  
                               us756999 98F6                               _T3CONbits 003FA6  
                               _mode_sw 00A9                       __end_of_lp_filter 8AC4  
                               _islower BFB4                                 _isspace B868  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac A96C                __end_of_UART2_Initialize B75A  
                               _isupper BFE4              __size_of_SYSTEM_Initialize 004A  
                               _sprintf A0E4                                 _tolower B0DE  
                 __size_of_display_help 0008                                 _utctime 01EE  
               __end_of_convert_dac_raw 9DA8                   __size_of_display_info 0008  
                               _strncmp 80B6                                 _toupper B05A  
                  end_of_initialization A58C               __size_of_convert_adc_data 00B8  
                    _check_enter_button B354                       __end_of_set_dac_a BF50  
                     __end_of_set_dac_b BF1C                               i1u1297_20 9494  
   __end_of_UART2_SetRxInterruptHandler C1C2             _UART2_SetRxInterruptHandler C19A  
                             i2u1070_48 C340                               i2u1072_48 C368  
                             i2u1064_48 C0B8                               i2u1066_48 B4D2  
                             i2u1066_49 B4E6                               i2u1068_48 C318  
               check_day_time@day_delay 0041                       __end_of_set_vterm C554  
                     __end_of_vfpfcnvrt 33D2                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C758               __end_of_UART2_Receive_ISR C4FA  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B2DC  
           __size_of_current_sensor_cal 0082                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0094  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc C75E  
                             _PORTDbits 003FCD                _TMR3_SetInterruptHandler C23A  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C1EA  
                          _display_help C736                   _TMR5_InterruptHandler 007F  
                          _display_info C72E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B56C                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C302             _ADCC_SetADIInterruptHandler C2DA  
                            _update_lcd 9FD4                         _calc_model_data 5CDC  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B75A                         _DMA1_Initialize B3C6  
                            _start_bsoc C476                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C5F6                   __end_of_get_vterm_ptr C072  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BEB4            __end_of_INTERRUPT_Initialize B5D2  
                            _vterm_dump 9A3E                          __end_of___flge 93D4  
                        __end_of___fleq A7FA    __end_of_INT0_DefaultInterruptHandler C76C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C76A  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B80E  
                         __pidataBIGRAM 6B8E                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 684E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 71A6  
                        __end_of_printf B698                __end_of_DMA1_DMADCNT_ISR C706  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C430  
                        __end_of_strcpy A666                          __end_of_strlen AE16  
                   start_initialization A4B2    __end_of_TMR5_DefaultInterruptHandler BE48  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BE10  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BB54  
                 __end_of_INT1_CallBack C3C4               __size_of_set_display_info 001E  
                           __end_of_pad 9FD4                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BCA0                          _switch_handler 9684  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 8DFA  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C6E6  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C714  
                   __end_of_hid_display 84F2              __end_of_send_port_data_dma B90C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C14A  
                         _ringBufS_init C122                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BF84  
               __end_of_calc_model_data 6128                           _send_lcd_data C37C  
                   __end_of_help_button BE10         __end_of_eaDogM_WriteStringAtPos ACCE  
                   __end_of_BVSOC_TABLE FA6F                               ___asfladd B2DC  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B430                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C2B2  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 97C6  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C60C  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FAFF                        _convert_adc_data A8B4  
                             _calc_bsoc 33D2               __size_of_ringBufS_put_dma 00AA  
                          _init_display A2E4                  __end_of_DMA1_DMAOR_ISR C71E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B868                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AF40                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C752                           __pmediumconst F99E  
                             __ptext100 8DFA                               __ptext101 AA22  
                             __ptext110 C476                               __ptext102 53A0  
                             __ptext111 8908                               __ptext103 B698  
                             __ptext120 C1C2                               __ptext112 BB54  
                             __ptext104 C572                               __ptext121 C0F8  
                             __ptext113 466A                               __ptext105 8704  
                             __ptext130 C638                               __ptext122 C1EA  
                             __ptext114 3E40                               __ptext106 4E26  
                             __ptext131 AF40                               __ptext123 BA7E  
                             __ptext115 B9A4                               __ptext107 9272  
                             __ptext140 C6E6                               __ptext132 C622  
                             __ptext124 C212                               __ptext116 B6FA  
                             __ptext108 5CDC                               __ptext141 B430  
                             __ptext133 B56C                               __ptext125 BAC6  
                             __ptext117 C172                               __ptext109 C758  
                             __ptext150 C3C4                               __ptext142 C2B2  
                             __ptext134 C73E                               __ptext126 C23A  
                             __ptext118 C19A                               __ptext151 BE10  
                             __ptext143 C2DA                               __ptext135 BF50  
                             __ptext127 C5DE                               __ptext119 BA36  
                             __ptext160 B8BA                               __ptext152 8AC4  
                             __ptext144 BD60                               __ptext136 C262  
                             __ptext128 C5F6                               __ptext161 C6F0  
                             __ptext153 C68E                               __ptext145 C3A0  
                             __ptext137 C28A                               __ptext129 C60C  
                             __ptext170 C76E                               __ptext162 B2DC  
                             __ptext154 C6BA                               __ptext146 C766  
                             __ptext138 B80E                               __ptext171 B49C  
                             __ptext163 C6C8                               __ptext155 93D4  
                             __ptext147 9684                               __ptext139 B3C6  
                             __ptext180 B90C                               __ptext172 C304  
                             __ptext164 C40C                               __ptext156 BD20  
                             __ptext148 A3D0                               __ptext181 C6D8  
                             __ptext173 C498                               __ptext165 C76A  
                             __ptext157 C3E8                               __ptext149 BCE0  
                             __ptext182 C6FC                               __ptext174 C32C  
                             __ptext166 C760                               __ptext158 C768  
                             __ptext183 C708                               __ptext175 C0CC  
                             __ptext167 C0A0                               __ptext159 33D2  
                             __ptext184 C714                               __ptext176 C354  
                             __ptext168 B1E4                               __ptext185 0000  
                             __ptext177 C4DA                               __ptext169 C76C  
                             __ptext178 C5AC                               __ptext179 C430  
                             _hid_input 9906                      __end_of_StartTimer BCE0  
                    _set_load_relay_one C66E                      _set_load_relay_two C65E  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR C0A0  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0060  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 71A6                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7C30  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 8908                             _hid_display 82D6  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize B56C                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C6C8                                _INT1_ISR BD60  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a BF1C  
                             _set_dac_b BEE8                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C3E8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C536                     __size_of_update_lcd 0110  
                           _help_button BDD8                                _TMR3_ISR 93D4  
                           _BVSOC_TABLE F99F                                _TMR5_ISR A3D0  
                              _TMR6_ISR C5AC                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 2426  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C3C4                              _ADCON0bits 003EF8  
                    __end_of_check_help 8704                               _start_lcd C752  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C430                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C758  
                      _set_display_info C554                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A4C6                               copy_data1 A4EC  
                             copy_data2 A50E                _INT0_SetInterruptHandler C28A  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler C19A  
           _UART2_SetTxInterruptHandler C172                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
            __end_of_current_sensor_cal B1E4                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done C454                            _send_lcd_cmd BC60  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C76E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch C09E  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C712  
                    ___fpclassifyf@F463 0064    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8704  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C6AC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 BF84  
                              __ptext11 A2E4                                __ptext20 9906  
                              __ptext12 C37C                                __ptext21 C072  
                              __ptext13 BC20                                __ptext30 C66E  
                              __ptext22 71A6                                __ptext14 BC60  
                              __ptext31 C69E                                __ptext23 BD9E  
                              __ptext15 C4FA                                __ptext40 9FD4  
                              __ptext32 B162                                __ptext24 B5D2  
                              __ptext16 C122                                __ptext41 AC26  
                              __ptext33 A8B4                                __ptext25 C64C  
                              __ptext17 7C30                                __ptext50 6EBA  
                              __ptext42 C518                                __ptext34 B506  
                              __ptext26 C71E                                __ptext18 A7FA  
                              __ptext51 B636                                __ptext43 C454  
                              __ptext35 84F2                                __ptext27 C746  
                              __ptext19 82D6                                __ptext60 8F80  
                              __ptext52 AAD0                                __ptext44 B7B4  
                              __ptext36 9A3E                                __ptext28 C726  
                              __ptext61 80B6                                __ptext53 2426  
                              __ptext45 B95A                                __ptext37 A0E4  
                              __ptext29 C65E                                __ptext70 B9EE  
                              __ptext62 747E                                __ptext54 6128  
                              __ptext46 ACCE                                __ptext38 C044  
                              __ptext71 A736                                __ptext63 0000  
                              __ptext55 B05A                                __ptext47 C74C  
                              __ptext39 BE7E                                __ptext80 AD74  
                              __ptext72 9DA8                                __ptext64 B0DE  
                              __ptext56 BFB4                                __ptext48 C752  
                              __ptext81 AE16                                __ptext73 9536  
                              __ptext65 BFE4                                __ptext57 BB9A  
                              __ptext49 AEAE                                __ptext90 C554  
                              __ptext82 9B6C                                __ptext74 585C  
                              __ptext66 A592                                __ptext58 684E  
                              __ptext91 C5C6                                __ptext83 C590  
                              __ptext75 BB0E                                __ptext67 64E2  
                              __ptext59 97C6                                __ptext92 C6AC  
                              __ptext84 AB7C                                __ptext76 7E76  
                              __ptext68 8C64                                __ptext93 BBDE  
                              __ptext85 79BC                                __ptext77 773C  
                              __ptext69 9100                                __ptext94 BDD8  
                              __ptext86 B868                                __ptext78 AFD2  
                              __ptext95 C14A                                __ptext87 C014  
                              __ptext79 9EC0                                __ptext96 BCA0  
                              __ptext88 C536                                __ptext97 C72E  
                              __ptext89 C67E                                __ptext98 C736  
                              __ptext99 B354                        __size_of_isupper 0030  
                              us1120999 5876                                us1201999 68B4  
                              us1210999 61A8                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1189999 7490  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma AB7C                    __end_of_Volts_to_SOC A8B4  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 11E2                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma BFB4                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0088  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C65E                                _spi_link 01D0  
                              _wdtdelay B7B4              __end_of_UART2_Transmit_ISR C0F8  
                              _spinners A1EE                                _vfprintf AAD0  
              __end_of_convert_adc_data A96C              __end_of_PWM8_LoadDutyValue BC20  
  __end_of_TMR3_DefaultInterruptHandler C76A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C768    __end_of_INT1_DefaultInterruptHandler C768  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C766  
                    _send_port_data_dma B8BA                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AE  
                        _get_raw_result C572                             _uart2TxHead 00AC  
                           _uart2RxTail 00AB                               spinners@s 01E4  
                           _uart2TxTail 0046                            _wait_lcd_set C74C  
                    _EXT_INT_Initialize BF50    __end_of_TMR6_DefaultInterruptHandler B95A  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B90C  
                     _send_lcd_data_dma B95A    __end_of_ADCC_DefaultInterruptHandler C76E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C76C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long BC20          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C68E                   __end_of_calc_ror_data 8F80  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString AD74  
                 __end_of_mode_lamp_dim C5DE                 __end_of_adc_int_handler C770  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A0E4  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc B7B4  
                    __end_of_start_bsoc C498                          _FVR_Initialize C73E  
                __end_of_get_raw_result C590                        _send_lcd_cmd_dma C518  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C28A               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma B9A4  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BC60  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C766  
        __end_of_PIN_MANAGER_Initialize AFD2               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9B6C                 _eaDogM_WriteStringAtPos AC26  
                         _get_vterm_ptr C044                          _check_adc_scan C726  
             __size_of_UART2_Initialize 0060  
