

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 04:30:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=4,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=4,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=4,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=4,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   175                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   176                           	psect	text149,global,reloc=4,class=CODE,delta=1
   177                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   178                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   179  0000                     
   180                           ; Version 2.10
   181                           ; Generated 31/07/2019 GMT
   182                           ; 
   183                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   184                           ; All rights reserved.
   185                           ; 
   186                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   187                           ; 
   188                           ; Redistribution and use in source and binary forms, with or without modification, are
   189                           ; permitted provided that the following conditions are met:
   190                           ; 
   191                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   192                           ;        conditions and the following disclaimer.
   193                           ; 
   194                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   195                           ;        of conditions and the following disclaimer in the documentation and/or other
   196                           ;        materials provided with the distribution.
   197                           ; 
   198                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   199                           ;        software without specific prior written permission.
   200                           ; 
   201                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   202                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   203                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   204                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   205                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   206                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   207                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   208                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   209                           ; 
   210                           ; 
   211                           ; Code-generator required, PIC18F57K42 Definitions
   212                           ; 
   213                           ; SFR Addresses
   214  0000                     
   215 ;;_mode	offset	0
   216 ;;_channel	offset=-1 (param)
   217 ;;_s	offset=-2 (param)
   218 ;;_cmd	offset=-1 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_data	offset=-1 (param)
   221 ;;__this	offset=-2 (param)
   222 ;;_h	offset=-1 (param)
   223 ;;_h	offset=-1 (param)
   224 ;;_i	offset=-1 (param)
   225 ;;_cmd	offset=-1 (param)
   226 ;;_i	offset	0
   227 ;;_chan	offset=-1 (param)
   228 ;;_to_what	offset=-2 (param)
   229 ;;_u	offset	0
   230 ;;_s	offset=-2 (param)
   231 ;;_index	offset=-1 (param)
   232 ;;_arg	offset	0
   233 ;;_exp	offset	4
   234 ;;_sign	offset=-1 (param)
   235 ;;_val	offset=-5 (param)
   236 ;;_estatus	offset	0
   237 ;;_flipper	offset=-1 (param)
   238 ;;_f	offset	0
   239 ;;_ap	offset	6
   240 ;;_s	offset=-3 (param)
   241 ;;_fmt	offset=-5 (param)
   242 ;;_line	offset=-1 (param)
   243 ;;_vterm	offset=-2 (param)
   244 ;;_numMilliseconds	offset=-2 (param)
   245 ;;_vterm	offset=-1 (param)
   246 ;;_r	offset=-1 (param)
   247 ;;_c	offset=-2 (param)
   248 ;;_strPtr	offset=-4 (param)
   249 ;;_strPtr	offset=-1 (param)
   250 ;;_delay	offset=-4 (param)
   251 ;;_strPtr	offset=-2 (param)
   252 ;;__this	offset=-2 (param)
   253 ;;_clearBuffer	offset=-3 (param)
   254 ;;_s	offset	0
   255 ;;_k	offset	2
   256 ;;_dest	offset=-2 (param)
   257 ;;_c	offset=-4 (param)
   258 ;;_n	offset=-6 (param)
   259 ;;_ap	offset	0
   260 ;;_fmt	offset=-3 (param)
   261 ;;_cfmt	offset	0
   262 ;;_fp	offset=-2 (param)
   263 ;;_fmt	offset=-4 (param)
   264 ;;_ap	offset=-6 (param)
   265 ;;_vfpfcnvrt$4515	offset	0
   266 ;;_vfpfcnvrt$4521	offset	2
   267 ;;_vfpfcnvrt$4514	offset	4
   268 ;;_llu	offset	6
   269 ;;_ll	offset	14
   270 ;;_f	offset	22
   271 ;;_ct	offset	26
   272 ;;_cp	offset	29
   273 ;;_c	offset	31
   274 ;;_fp	offset=-2 (param)
   275 ;;_fmt	offset=-4 (param)
   276 ;;_ap	offset=-6 (param)
   277 ;;_xtoa$4500	offset	0
   278 ;;_xtoa$4499	offset	2
   279 ;;_n	offset	4
   280 ;;_c	offset	12
   281 ;;_i	offset	14
   282 ;;_w	offset	16
   283 ;;_p	offset	18
   284 ;;_fp	offset=-2 (param)
   285 ;;_d	offset=-10 (param)
   286 ;;_x	offset=-11 (param)
   287 ;;_toupper$5160	offset	0
   288 ;;_c	offset=-2 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_c	offset=-2 (param)
   291 ;;_r	offset	0
   292 ;;_l	offset	2
   293 ;;__l	offset=-2 (param)
   294 ;;__r	offset=-4 (param)
   295 ;;_n	offset=-6 (param)
   296 ;;_nuls	offset	0
   297 ;;_l	offset	7
   298 ;;_p	offset	9
   299 ;;_cp	offset	11
   300 ;;_w	offset	13
   301 ;;_i	offset	15
   302 ;;_fp	offset=-2 (param)
   303 ;;_s	offset=-4 (param)
   304 ;;_efgtoa$4479	offset	0
   305 ;;_efgtoa$4478	offset	2
   306 ;;_efgtoa$4477	offset	4
   307 ;;_efgtoa$4473	offset	6
   308 ;;_efgtoa$4469	offset	8
   309 ;;_efgtoa$4468	offset	10
   310 ;;_u	offset	12
   311 ;;_g	offset	16
   312 ;;_l	offset	20
   313 ;;_h	offset	24
   314 ;;_ou	offset	28
   315 ;;_n	offset	32
   316 ;;_e	offset	34
   317 ;;_i	offset	36
   318 ;;_w	offset	38
   319 ;;_p	offset	40
   320 ;;_sign	offset	42
   321 ;;_d	offset	44
   322 ;;_ne	offset	46
   323 ;;_m	offset	48
   324 ;;_pp	offset	50
   325 ;;_t	offset	52
   326 ;;_mode	offset	54
   327 ;;_nmode	offset	55
   328 ;;_fp	offset=-2 (param)
   329 ;;_f	offset=-6 (param)
   330 ;;_c	offset=-7 (param)
   331 ;;_tolower$5145	offset	0
   332 ;;_c	offset=-2 (param)
   333 ;;_c	offset=-2 (param)
   334 ;;_d	offset	0
   335 ;;_s	offset	2
   336 ;;_dest	offset=-2 (param)
   337 ;;_src	offset=-4 (param)
   338 ;;_u	offset	0
   339 ;;_m	offset	4
   340 ;;_e	offset	8
   341 ;;_x	offset=-4 (param)
   342 ;;_u	offset	0
   343 ;;_e	offset	4
   344 ;;_x	offset=-4 (param)
   345 ;;_exp1	offset	0
   346 ;;_sign1	offset	1
   347 ;;_f1	offset=-4 (param)
   348 ;;_f1	offset=-4 (param)
   349 ;;_ff1	offset=-4 (param)
   350 ;;_ff2	offset=-8 (param)
   351 ;;_ff1	offset=-4 (param)
   352 ;;_ff2	offset=-8 (param)
   353 ;;_grs	offset	0
   354 ;;_rem	offset	4
   355 ;;_new_exp	offset	8
   356 ;;_aexp	offset	10
   357 ;;_bexp	offset	11
   358 ;;_sign	offset	12
   359 ;;_b	offset=-4 (param)
   360 ;;_a	offset=-8 (param)
   361 ;;_sign	offset	0
   362 ;;_counter	offset	1
   363 ;;_dividend	offset=-2 (param)
   364 ;;_divisor	offset=-4 (param)
   365 ;;_quotient	offset	0
   366 ;;_sign	offset	2
   367 ;;_counter	offset	3
   368 ;;_dividend	offset=-2 (param)
   369 ;;_divisor	offset=-4 (param)
   370 ;;_dtoa$4445	offset	0
   371 ;;_n	offset	2
   372 ;;_i	offset	10
   373 ;;_s	offset	12
   374 ;;_w	offset	14
   375 ;;_p	offset	16
   376 ;;_fp	offset=-2 (param)
   377 ;;_d	offset=-10 (param)
   378 ;;_a	offset=-2 (param)
   379 ;;_sign	offset	0
   380 ;;_counter	offset	1
   381 ;;_dividend	offset=-8 (param)
   382 ;;_divisor	offset=-16 (param)
   383 ;;_quotient	offset	0
   384 ;;_sign	offset	8
   385 ;;_counter	offset	9
   386 ;;_dividend	offset=-8 (param)
   387 ;;_divisor	offset=-16 (param)
   388 ;;_w	offset	0
   389 ;;_fp	offset=-2 (param)
   390 ;;_c	offset=-3 (param)
   391 ;;_w	offset	0
   392 ;;_i	offset	2
   393 ;;_fp	offset=-2 (param)
   394 ;;_buf	offset=-4 (param)
   395 ;;_p	offset=-6 (param)
   396 ;;_a	offset	0
   397 ;;_s	offset=-2 (param)
   398 ;;_i	offset	0
   399 ;;_c	offset	2
   400 ;;_s	offset=-2 (param)
   401 ;;_fp	offset=-4 (param)
   402 ;;_c	offset=-2 (param)
   403 ;;_fp	offset=-4 (param)
   404 ;;_c	offset=-1 (param)
   405 ;;__this	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_atoi$4998	offset	0
   408 ;;_atoi$4996	offset	2
   409 ;;_atoi$4997	offset	4
   410 ;;_n	offset	5
   411 ;;_neg	offset	7
   412 ;;_s	offset=-2 (param)
   413 ;;_isspace$5036	offset	0
   414 ;;_c	offset=-2 (param)
   415 ;;_c	offset=-2 (param)
   416 ;;_vterm	offset=-1 (param)
   417 ;;_new_response_info	offset=-1 (param)
   418 ;;_new_response_info	offset=-1 (param)
   419 ;;_level	offset=-2 (param)
   420 ;;_dutyValue	offset=-2 (param)
   421 ;;_timer	offset=-1 (param)
   422 ;;_timer	offset=-1 (param)
   423 ;;_count	offset=-3 (param)
   424 ;;_lp_speed	offset	0
   425 ;;_new	offset=-4 (param)
   426 ;;_bn	offset=-5 (param)
   427 ;;_slow	offset=-6 (param)
   428 ;;_b	offset=-4 (param)
   429 ;;_a	offset=-8 (param)
   430 ;;_grs	offset	0
   431 ;;_bexp	offset	1
   432 ;;_aexp	offset	2
   433 ;;_signs	offset	3
   434 ;;_b	offset=-4 (param)
   435 ;;_a	offset=-8 (param)
   436 ;;_prod	offset	0
   437 ;;_grs	offset	4
   438 ;;_temp	offset	8
   439 ;;_bexp	offset	10
   440 ;;_aexp	offset	11
   441 ;;_sign	offset	12
   442 ;;_b	offset=-4 (param)
   443 ;;_a	offset=-8 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_state	offset	0
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_i	offset	0
   456 ;;_sw_value	offset	1
   457 ;;_timerVal	offset=-2 (param)
   458 ;;_channel	offset=-1 (param)
   459 ;;_i	offset	0
   460                           
   461                           	psect	idataBANK0
   462  018192                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _R
   466  018192  0000               	dw	0
   467  018194  0000               	dw	0
   468  018196  0000               	dw	0
   469  018198  0000               	dw	0
   470  01819A  0000               	dw	0
   471  01819C  0000               	dw	0
   472  01819E  0000               	dw	0
   473  0181A0  0000               	dw	0
   474  0181A2  0000               	dw	0
   475  0181A4  0000               	dw	0
   476  0181A6  0000               	dw	0
   477  0181A8  0000               	dw	0
   478  0181AA  0000               	dw	0
   479  0181AC  0000               	dw	0
   480  0181AE  0000               	dw	0
   481  0181B0  0000               	dw	0
   482  0181B2  0F67               	dw	3943
   483  0181B4  0F8F               	dw	3983
   484  0181B6  00                 	db	0
   485  0181B7  0000               	dw	0
   486  0181B9  00                 	db	0
   487                           
   488                           ;initializer for stoa@F1166
   489  0181BA  28                 	db	40
   490  0181BB  6E                 	db	110
   491  0181BC  75                 	db	117
   492  0181BD  6C                 	db	108
   493  0181BE  6C                 	db	108
   494  0181BF  29                 	db	41
   495  0181C0  00                 	db	0
   496                           
   497                           ;initializer for _H
   498  0181C1  00                 	db	0
   499  0181C2  00                 	db	0
   500  0181C3  01                 	db	1
   501  0181C4  00                 	db	0
   502  0181C5  01                 	db	1
   503  0181C6  00                 	db	0
   504                           
   505                           	psect	idataBANK1
   506  0188FE                     __pidataBANK1:
   507                           	opt callstack 0
   508                           
   509                           ;initializer for _port_data
   510  0188FE  FF                 	db	255
   511  0188FF  00                 	db	0
   512  018900  FF                 	db	255
   513  018901  00                 	db	0
   514  018902  FF                 	db	255
   515  018903  00                 	db	0
   516  018904  FF                 	db	255
   517  018905  00                 	db	0
   518  018906  FF                 	db	255
   519  018907  00                 	db	0
   520  018908  FF                 	db	255
   521  018909  00                 	db	0
   522  01890A  FF                 	db	255
   523  01890B  00                 	db	0
   524  01890C  FF                 	db	255
   525  01890D  00                 	db	0
   526                           
   527                           	psect	idataBANK2
   528  017000                     __pidataBANK2:
   529                           	opt callstack 0
   530                           
   531                           ;initializer for _V
   532  017000  00                 	db	0
   533  017001  00                 	db	0
   534  017002  00                 	db	0
   535  017003  00                 	db	0
   536  017004  00                 	db	0
   537  017005  00                 	db	0
   538  017006  00                 	db	0
   539  017007  00                 	db	0
   540  017008  00                 	db	0
   541  017009  00                 	db	0
   542  01700A  00                 	db	0
   543  01700B  00                 	db	0
   544  01700C  00                 	db	0
   545  01700D  00                 	db	0
   546  01700E  00                 	db	0
   547  01700F  00                 	db	0
   548  017010  00                 	db	0
   549  017011  00                 	db	0
   550  017012  00                 	db	0
   551  017013  00                 	db	0
   552  017014  00                 	db	0
   553  017015  00                 	db	0
   554  017016  00                 	db	0
   555  017017  00                 	db	0
   556  017018  00                 	db	0
   557  017019  00                 	db	0
   558  01701A  00                 	db	0
   559  01701B  00                 	db	0
   560  01701C  00                 	db	0
   561  01701D  00                 	db	0
   562  01701E  00                 	db	0
   563  01701F  00                 	db	0
   564  017020  00                 	db	0
   565  017021  00                 	db	0
   566  017022  00                 	db	0
   567  017023  00                 	db	0
   568  017024  00                 	db	0
   569  017025  00                 	db	0
   570  017026  00                 	db	0
   571  017027  00                 	db	0
   572  017028  00                 	db	0
   573  017029  00                 	db	0
   574  01702A  00                 	db	0
   575  01702B  00                 	db	0
   576  01702C  00                 	db	0
   577  01702D  00                 	db	0
   578  01702E  00                 	db	0
   579  01702F  00                 	db	0
   580  017030  00                 	db	0
   581  017031  00                 	db	0
   582  017032  00                 	db	0
   583  017033  00                 	db	0
   584  017034  00                 	db	0
   585  017035  00                 	db	0
   586  017036  00                 	db	0
   587  017037  00                 	db	0
   588  017038  00                 	db	0
   589  017039  00                 	db	0
   590  01703A  00                 	db	0
   591  01703B  00                 	db	0
   592  01703C  00                 	db	0
   593  01703D  00                 	db	0
   594  01703E  00                 	db	0
   595  01703F  00                 	db	0
   596  017040  00                 	db	0
   597  017041  00                 	db	0
   598  017042  00                 	db	0
   599  017043  00                 	db	0
   600  017044  00                 	db	0
   601  017045  00                 	db	0
   602  017046  00                 	db	0
   603  017047  00                 	db	0
   604  017048  00                 	db	0
   605  017049  00                 	db	0
   606  01704A  00                 	db	0
   607  01704B  00                 	db	0
   608  01704C  00                 	db	0
   609  01704D  00                 	db	0
   610  01704E  00                 	db	0
   611  01704F  00                 	db	0
   612  017050  00                 	db	0
   613  017051  00                 	db	0
   614  017052  00                 	db	0
   615  017053  00                 	db	0
   616  017054  00                 	db	0
   617  017055  00                 	db	0
   618  017056  00                 	db	0
   619  017057  00                 	db	0
   620  017058  00                 	db	0
   621  017059  00                 	db	0
   622  01705A  00                 	db	0
   623  01705B  00                 	db	0
   624  01705C  00                 	db	0
   625  01705D  00                 	db	0
   626  01705E  00                 	db	0
   627  01705F  00                 	db	0
   628  017060  00                 	db	0
   629  017061  00                 	db	0
   630  017062  00                 	db	0
   631  017063  00                 	db	0
   632  017064  00                 	db	0
   633  017065  00                 	db	0
   634  017066  00                 	db	0
   635  017067  00                 	db	0
   636  017068  00                 	db	0
   637  017069  00                 	db	0
   638  01706A  00                 	db	0
   639  01706B  00                 	db	0
   640  01706C  00                 	db	0
   641  01706D  00                 	db	0
   642  01706E  00                 	db	0
   643  01706F  00                 	db	0
   644  017070  00                 	db	0
   645  017071  00                 	db	0
   646  017072  00                 	db	0
   647  017073  00                 	db	0
   648  017074  00                 	db	0
   649  017075  00                 	db	0
   650  017076  00                 	db	0
   651  017077  00                 	db	0
   652  017078  00                 	db	0
   653  017079  00                 	db	0
   654  01707A  00                 	db	0
   655  01707B  00                 	db	0
   656  01707C  00                 	db	0
   657  01707D  00                 	db	0
   658  01707E  00                 	db	0
   659  01707F  00                 	db	0
   660  017080  00                 	db	0
   661  017081  0000               	dw	0
   662  017083  0000               	dw	0
   663  017085  0000               	dw	0
   664  017087  0000               	dw	0
   665  017089  00                 	db	0
   666  01708A  00                 	db	0
   667  01708B  00                 	db	0
   668  01708C  00                 	db	0
   669  01708D  00                 	db	0
   670  01708E  00                 	db	0
   671  01708F  0000               	dw	0
   672  017091  0000               	dw	0
   673  017093  0000               	dw	0
   674  017095  0000               	dw	0
   675  017097  0000               	dw	0
   676  017099  0000               	dw	0
   677  01709B  00                 	db	0
   678  01709C  00                 	db	0
   679  01709D  00                 	db	0
   680  01709E  00                 	db	0
   681  01709F  00                 	db	0
   682  0170A0  00                 	db	0
   683  0170A1  00                 	db	0
   684  0170A2  00                 	db	0
   685  0170A3  00                 	db	0
   686  0170A4  00                 	db	0
   687  0170A5  0000               	dw	0
   688  0170A7  0000               	dw	0
   689  0170A9  2D                 	db	45
   690  0170AA  00                 	db	0
   691  0170AB  0000               	dw	0
   692  0170AD  0000               	dw	0
   693  0170AF  0000               	dw	0
   694  0170B1  0000               	dw	0
   695  0170B3  0000               	dw	0
   696  0170B5  0000               	dw	0
   697  0170B7  0000               	dw	0
   698  0170B9  0000               	dw	0
   699                           
   700                           	psect	mediumconst
   701  00FE0A                     __pmediumconst:
   702                           	opt callstack 0
   703  00FE0A  00                 	db	0
   704  00FE0B                     _T:
   705                           	opt callstack 0
   706  00FE0B  63                 	db	99
   707  00FE0C  6F                 	db	111
   708  00FE0D  6D                 	db	109
   709  00FE0E  6D                 	db	109
   710  00FE0F  61                 	db	97
   711  00FE10  6E                 	db	110
   712  00FE11  64                 	db	100
   713  00FE12  73                 	db	115
   714  00FE13  20                 	db	32
   715  00FE14  31                 	db	49
   716  00FE15  00                 	db	0
   717  00FE16  00                 	db	0
   718  00FE17  00                 	db	0
   719  00FE18  00                 	db	0
   720  00FE19  00                 	db	0
   721  00FE1A  00                 	db	0
   722  00FE1B  00                 	db	0
   723  00FE1C  00                 	db	0
   724  00FE1D  64                 	db	100
   725  00FE1E  69                 	db	105
   726  00FE1F  73                 	db	115
   727  00FE20  70                 	db	112
   728  00FE21  6C                 	db	108
   729  00FE22  61                 	db	97
   730  00FE23  79                 	db	121
   731  00FE24  73                 	db	115
   732  00FE25  20                 	db	32
   733  00FE26  31                 	db	49
   734  00FE27  00                 	db	0
   735  00FE28  00                 	db	0
   736  00FE29  00                 	db	0
   737  00FE2A  00                 	db	0
   738  00FE2B  00                 	db	0
   739  00FE2C  00                 	db	0
   740  00FE2D  00                 	db	0
   741  00FE2E  00                 	db	0
   742  00FE2F  63                 	db	99
   743  00FE30  6F                 	db	111
   744  00FE31  6D                 	db	109
   745  00FE32  6D                 	db	109
   746  00FE33  61                 	db	97
   747  00FE34  6E                 	db	110
   748  00FE35  64                 	db	100
   749  00FE36  73                 	db	115
   750  00FE37  20                 	db	32
   751  00FE38  32                 	db	50
   752  00FE39  00                 	db	0
   753  00FE3A  00                 	db	0
   754  00FE3B  00                 	db	0
   755  00FE3C  00                 	db	0
   756  00FE3D  00                 	db	0
   757  00FE3E  00                 	db	0
   758  00FE3F  00                 	db	0
   759  00FE40  00                 	db	0
   760  00FE41  64                 	db	100
   761  00FE42  69                 	db	105
   762  00FE43  73                 	db	115
   763  00FE44  70                 	db	112
   764  00FE45  6C                 	db	108
   765  00FE46  61                 	db	97
   766  00FE47  79                 	db	121
   767  00FE48  73                 	db	115
   768  00FE49  20                 	db	32
   769  00FE4A  32                 	db	50
   770  00FE4B  00                 	db	0
   771  00FE4C  00                 	db	0
   772  00FE4D  00                 	db	0
   773  00FE4E  00                 	db	0
   774  00FE4F  00                 	db	0
   775  00FE50  00                 	db	0
   776  00FE51  00                 	db	0
   777  00FE52  00                 	db	0
   778  00FE53  63                 	db	99
   779  00FE54  6F                 	db	111
   780  00FE55  6D                 	db	109
   781  00FE56  6D                 	db	109
   782  00FE57  61                 	db	97
   783  00FE58  6E                 	db	110
   784  00FE59  64                 	db	100
   785  00FE5A  73                 	db	115
   786  00FE5B  20                 	db	32
   787  00FE5C  33                 	db	51
   788  00FE5D  00                 	db	0
   789  00FE5E  00                 	db	0
   790  00FE5F  00                 	db	0
   791  00FE60  00                 	db	0
   792  00FE61  00                 	db	0
   793  00FE62  00                 	db	0
   794  00FE63  00                 	db	0
   795  00FE64  00                 	db	0
   796  00FE65  64                 	db	100
   797  00FE66  69                 	db	105
   798  00FE67  73                 	db	115
   799  00FE68  70                 	db	112
   800  00FE69  6C                 	db	108
   801  00FE6A  61                 	db	97
   802  00FE6B  79                 	db	121
   803  00FE6C  73                 	db	115
   804  00FE6D  20                 	db	32
   805  00FE6E  33                 	db	51
   806  00FE6F  00                 	db	0
   807  00FE70  00                 	db	0
   808  00FE71  00                 	db	0
   809  00FE72  00                 	db	0
   810  00FE73  00                 	db	0
   811  00FE74  00                 	db	0
   812  00FE75  00                 	db	0
   813  00FE76  00                 	db	0
   814  00FE77  63                 	db	99
   815  00FE78  6F                 	db	111
   816  00FE79  6D                 	db	109
   817  00FE7A  6D                 	db	109
   818  00FE7B  61                 	db	97
   819  00FE7C  6E                 	db	110
   820  00FE7D  64                 	db	100
   821  00FE7E  73                 	db	115
   822  00FE7F  20                 	db	32
   823  00FE80  34                 	db	52
   824  00FE81  00                 	db	0
   825  00FE82  00                 	db	0
   826  00FE83  00                 	db	0
   827  00FE84  00                 	db	0
   828  00FE85  00                 	db	0
   829  00FE86  00                 	db	0
   830  00FE87  00                 	db	0
   831  00FE88  00                 	db	0
   832  00FE89  64                 	db	100
   833  00FE8A  69                 	db	105
   834  00FE8B  73                 	db	115
   835  00FE8C  70                 	db	112
   836  00FE8D  6C                 	db	108
   837  00FE8E  61                 	db	97
   838  00FE8F  79                 	db	121
   839  00FE90  73                 	db	115
   840  00FE91  20                 	db	32
   841  00FE92  34                 	db	52
   842  00FE93  00                 	db	0
   843  00FE94  00                 	db	0
   844  00FE95  00                 	db	0
   845  00FE96  00                 	db	0
   846  00FE97  00                 	db	0
   847  00FE98  00                 	db	0
   848  00FE99  00                 	db	0
   849  00FE9A  00                 	db	0
   850  00FE9B                     __end_of_T:
   851                           	opt callstack 0
   852  0000                     _IVTADL	set	14493
   853  0000                     _IVTADH	set	14494
   854  0000                     _IVTADU	set	14495
   855  0000                     _PIR4bits	set	14756
   856  0000                     _PIE8bits	set	14744
   857  0000                     _PIR8bits	set	14760
   858  0000                     _SCANPR	set	14839
   859  0000                     _DMA2PR	set	14836
   860  0000                     _DMA1PR	set	14835
   861  0000                     _MAINPR	set	14834
   862  0000                     _ISRPR	set	14833
   863  0000                     _PIE2bits	set	14738
   864  0000                     _PIR2bits	set	14754
   865  0000                     _PIE9bits	set	14745
   866  0000                     _PIR9bits	set	14761
   867  0000                     _PIE6bits	set	14742
   868  0000                     _PIE3bits	set	14739
   869  0000                     _PMD7	set	14791
   870  0000                     _PMD6	set	14790
   871  0000                     _PMD5	set	14789
   872  0000                     _PMD4	set	14788
   873  0000                     _PMD3	set	14787
   874  0000                     _PMD2	set	14786
   875  0000                     _PMD1	set	14785
   876  0000                     _PMD0	set	14784
   877  0000                     _OSCTUNE	set	14814
   878  0000                     _OSCFRQ	set	14815
   879  0000                     _OSCEN	set	14813
   880  0000                     _OSCCON3	set	14811
   881  0000                     _OSCCON1	set	14809
   882  0000                     _IPR8bits	set	14728
   883  0000                     _IPR9bits	set	14729
   884  0000                     _IPR5bits	set	14725
   885  0000                     _IPR1bits	set	14721
   886  0000                     _IPR3bits	set	14723
   887  0000                     _IPR6bits	set	14726
   888  0000                     _IPR2bits	set	14722
   889  0000                     _PIE5bits	set	14741
   890  0000                     _PIE1bits	set	14737
   891  0000                     _PIR5bits	set	14757
   892  0000                     _PIR1bits	set	14753
   893  0000                     _PLLR	set	118496
   894  0000                     _SPI1SDIPPS	set	15071
   895  0000                     _U1RXPPS	set	15077
   896  0000                     _RC6PPS	set	14870
   897  0000                     _RC5PPS	set	14869
   898  0000                     _INT1PPS	set	15041
   899  0000                     _RD1PPS	set	14873
   900  0000                     _INT0PPS	set	15040
   901  0000                     _RC3PPS	set	14867
   902  0000                     _RB6PPS	set	14862
   903  0000                     _SPI1SCKPPS	set	15070
   904  0000                     _U2RXPPS	set	15080
   905  0000                     _SLRCONF	set	14995
   906  0000                     _SLRCONE	set	14979
   907  0000                     _SLRCOND	set	14963
   908  0000                     _SLRCONC	set	14947
   909  0000                     _SLRCONB	set	14931
   910  0000                     _SLRCONA	set	14915
   911  0000                     _ODCOND	set	14962
   912  0000                     _ODCONC	set	14946
   913  0000                     _ODCONB	set	14930
   914  0000                     _ODCONA	set	14914
   915  0000                     _ODCONF	set	14994
   916  0000                     _ODCONE	set	14978
   917  0000                     _WPUC	set	14945
   918  0000                     _WPUA	set	14913
   919  0000                     _WPUB	set	14929
   920  0000                     _WPUE	set	14977
   921  0000                     _WPUF	set	14993
   922  0000                     _WPUD	set	14961
   923  0000                     _ANSELA	set	14912
   924  0000                     _ANSELF	set	14992
   925  0000                     _ANSELE	set	14976
   926  0000                     _ANSELB	set	14928
   927  0000                     _ANSELC	set	14944
   928  0000                     _ANSELD	set	14960
   929  0000                     _DMA2SSA	set	15321
   930  0000                     _DMA1SSA	set	15353
   931  0000                     _DMA2DSZ	set	15310
   932  0000                     _DMA2SSZ	set	15319
   933  0000                     _DMA2DSA	set	15312
   934  0000                     _DMA1DSZ	set	15342
   935  0000                     _DMA1SSZ	set	15351
   936  0000                     _DMA1DSA	set	15344
   937  0000                     _DMA1CON0bits	set	15356
   938  0000                     _DMA1CON1bits	set	15357
   939  0000                     _DMA2CON0	set	15324
   940  0000                     _DMA2AIRQ	set	15326
   941  0000                     _DMA2SIRQ	set	15327
   942  0000                     _DMA2CON1	set	15325
   943  0000                     _DMA1CON0	set	15356
   944  0000                     _DMA1AIRQ	set	15358
   945  0000                     _DMA1SIRQ	set	15359
   946  0000                     _DMA1CON1	set	15357
   947  0000                     _CLKRCON	set	15589
   948  0000                     _CLKRCLK	set	15590
   949  0000                     _SPI1INTFbits	set	15642
   950  0000                     _SPI1RXB	set	15632
   951  0000                     _SPI1TXB	set	15633
   952  0000                     _SPI1TCNTL	set	15634
   953  0000                     _SPI1CON0	set	15636
   954  0000                     _SPI1CLK	set	15644
   955  0000                     _SPI1BAUD	set	15641
   956  0000                     _SPI1CON2	set	15638
   957  0000                     _SPI1CON1	set	15637
   958  0000                     _U2RXB	set	15824
   959  0000                     _U2TXB	set	15826
   960  0000                     _U2ERRIE	set	15842
   961  0000                     _U2ERRIR	set	15841
   962  0000                     _U2UIR	set	15840
   963  0000                     _U2FIFO	set	15839
   964  0000                     _U2BRGH	set	15838
   965  0000                     _U2BRGL	set	15837
   966  0000                     _U2CON2	set	15836
   967  0000                     _U2CON1	set	15835
   968  0000                     _U2CON0	set	15834
   969  0000                     _U2P3L	set	15832
   970  0000                     _U2P2L	set	15830
   971  0000                     _U2P1L	set	15828
   972  0000                     _U1RXB	set	15848
   973  0000                     _U1TXB	set	15850
   974  0000                     _U1ERRIE	set	15866
   975  0000                     _U1ERRIR	set	15865
   976  0000                     _U1UIR	set	15864
   977  0000                     _U1FIFO	set	15863
   978  0000                     _U1BRGH	set	15862
   979  0000                     _U1BRGL	set	15861
   980  0000                     _U1CON2	set	15860
   981  0000                     _U1CON1	set	15859
   982  0000                     _U1CON0	set	15858
   983  0000                     _U1P3H	set	15857
   984  0000                     _U1P3L	set	15856
   985  0000                     _U1P2H	set	15855
   986  0000                     _U1P2L	set	15854
   987  0000                     _U1P1H	set	15853
   988  0000                     _U1P1L	set	15852
   989  0000                     _FVRCON	set	16065
   990  0000                     _ADFLTRL	set	16102
   991  0000                     _ADFLTRH	set	16103
   992  0000                     _ADCON0bits	set	16120
   993  0000                     _ADCON0	set	16120
   994  0000                     _ADCLK	set	16127
   995  0000                     _ADACT	set	16126
   996  0000                     _ADREF	set	16125
   997  0000                     _ADSTAT	set	16124
   998  0000                     _ADCON3	set	16123
   999  0000                     _ADCON2	set	16122
  1000  0000                     _ADCON1	set	16121
  1001  0000                     _ADPREH	set	16119
  1002  0000                     _ADPREL	set	16118
  1003  0000                     _ADCAP	set	16117
  1004  0000                     _ADACQH	set	16116
  1005  0000                     _ADACQL	set	16115
  1006  0000                     _ADPCH	set	16113
  1007  0000                     _ADRPT	set	16108
  1008  0000                     _ADACCU	set	16106
  1009  0000                     _ADSTPTH	set	16101
  1010  0000                     _ADSTPTL	set	16100
  1011  0000                     _ADUTHH	set	16097
  1012  0000                     _ADUTHL	set	16096
  1013  0000                     _ADLTHH	set	16095
  1014  0000                     _ADLTHL	set	16094
  1015  0000                     _CCPTMRS1bits	set	16223
  1016  0000                     _PORTFbits	set	16335
  1017  0000                     _LATCbits	set	16316
  1018  0000                     _LATDbits	set	16317
  1019  0000                     _PORTBbits	set	16331
  1020  0000                     _T2CON	set	16300
  1021  0000                     _T2TMR	set	16298
  1022  0000                     _T2PR	set	16299
  1023  0000                     _T2RST	set	16303
  1024  0000                     _T2HLT	set	16301
  1025  0000                     _T2CLKCON	set	16302
  1026  0000                     _PWM8DCL	set	16224
  1027  0000                     _PWM8DCH	set	16225
  1028  0000                     _PWM8CON	set	16226
  1029  0000                     _LATEbits	set	16318
  1030  0000                     _T5CONbits	set	16282
  1031  0000                     _T5CON	set	16282
  1032  0000                     _TMR5L	set	16280
  1033  0000                     _TMR5H	set	16281
  1034  0000                     _T5CLK	set	16285
  1035  0000                     _T5GATE	set	16284
  1036  0000                     _T5GCON	set	16283
  1037  0000                     _T6CON	set	16276
  1038  0000                     _T6TMR	set	16274
  1039  0000                     _T6PR	set	16275
  1040  0000                     _T6RST	set	16279
  1041  0000                     _T6HLT	set	16277
  1042  0000                     _T6CLKCON	set	16278
  1043  0000                     _TRISD	set	16325
  1044  0000                     _TRISC	set	16324
  1045  0000                     _TRISB	set	16323
  1046  0000                     _TRISA	set	16322
  1047  0000                     _TRISF	set	16327
  1048  0000                     _TRISE	set	16326
  1049  0000                     _LATC	set	16316
  1050  0000                     _LATB	set	16315
  1051  0000                     _LATF	set	16319
  1052  0000                     _LATA	set	16314
  1053  0000                     _LATD	set	16317
  1054  0000                     _LATE	set	16318
  1055  0000                     _IVTLOCKbits	set	16340
  1056  0000                     _IVTLOCK	set	16340
  1057  0000                     _INTCON0bits	set	16338
  1058  0000                     _GIE	set	130711
  1059  00FE9B                     
  1060                           ; BSR set to: 57
  1061  00FE9B  20                 	db	32
  1062  00FE9C  4D                 	db	77	;'M'
  1063  00FE9D  65                 	db	101	;'e'
  1064  00FE9E  73                 	db	115	;'s'
  1065  00FE9F  67                 	db	103	;'g'
  1066  00FEA0  20                 	db	32
  1067  00FEA1  25                 	db	37
  1068  00FEA2  64                 	db	100	;'d'
  1069  00FEA3  20                 	db	32
  1070  00FEA4  53                 	db	83	;'S'
  1071  00FEA5  74                 	db	116	;'t'
  1072  00FEA6  61                 	db	97	;'a'
  1073  00FEA7  63                 	db	99	;'c'
  1074  00FEA8  6B                 	db	107	;'k'
  1075  00FEA9  20                 	db	32
  1076  00FEAA  25                 	db	37
  1077  00FEAB  64                 	db	100	;'d'
  1078  00FEAC  20                 	db	32
  1079  00FEAD  20                 	db	32
  1080  00FEAE  20                 	db	32
  1081  00FEAF  20                 	db	32
  1082  00FEB0  20                 	db	32
  1083  00FEB1  20                 	db	32
  1084  00FEB2  00                 	db	0
  1085  00FEB3                     STR_30:
  1086                           
  1087                           ; BSR set to: 57
  1088  00FEB3  20                 	db	32
  1089  00FEB4  20                 	db	32
  1090  00FEB5  20                 	db	32
  1091  00FEB6  20                 	db	32
  1092  00FEB7  20                 	db	32
  1093  00FEB8  20                 	db	32
  1094  00FEB9  20                 	db	32
  1095  00FEBA  20                 	db	32
  1096  00FEBB  20                 	db	32
  1097  00FEBC  20                 	db	32
  1098  00FEBD  20                 	db	32
  1099  00FEBE  20                 	db	32
  1100  00FEBF  20                 	db	32
  1101  00FEC0  20                 	db	32
  1102  00FEC1  20                 	db	32
  1103  00FEC2  20                 	db	32
  1104  00FEC3  20                 	db	32
  1105  00FEC4  20                 	db	32
  1106  00FEC5  00                 	db	0
  1107  00FEC6                     STR_20:
  1108                           
  1109                           ; BSR set to: 57
  1110  00FEC6  48                 	db	72	;'H'
  1111  00FEC7  45                 	db	69	;'E'
  1112  00FEC8  4C                 	db	76	;'L'
  1113  00FEC9  50                 	db	80	;'P'
  1114  00FECA  20                 	db	32
  1115  00FECB  25                 	db	37
  1116  00FECC  73                 	db	115	;'s'
  1117  00FECD  20                 	db	32
  1118  00FECE  20                 	db	32
  1119  00FECF  20                 	db	32
  1120  00FED0  20                 	db	32
  1121  00FED1  20                 	db	32
  1122  00FED2  20                 	db	32
  1123  00FED3  20                 	db	32
  1124  00FED4  20                 	db	32
  1125  00FED5  20                 	db	32
  1126  00FED6  20                 	db	32
  1127  00FED7  20                 	db	32
  1128  00FED8  00                 	db	0
  1129  00FED9                     
  1130                           ; BSR set to: 57
  1131  00FED9  44                 	db	68	;'D'
  1132  00FEDA  49                 	db	73	;'I'
  1133  00FEDB  53                 	db	83	;'S'
  1134  00FEDC  50                 	db	80	;'P'
  1135  00FEDD  4C                 	db	76	;'L'
  1136  00FEDE  41                 	db	65	;'A'
  1137  00FEDF  59                 	db	89	;'Y'
  1138  00FEE0  20                 	db	32
  1139  00FEE1  25                 	db	37
  1140  00FEE2  73                 	db	115	;'s'
  1141  00FEE3  20                 	db	32
  1142  00FEE4  20                 	db	32
  1143  00FEE5  20                 	db	32
  1144  00FEE6  20                 	db	32
  1145  00FEE7  20                 	db	32
  1146  00FEE8  20                 	db	32
  1147  00FEE9  20                 	db	32
  1148  00FEEA  20                 	db	32
  1149  00FEEB  00                 	db	0
  1150  00FEEC                     STR_9:
  1151                           
  1152                           ; BSR set to: 57
  1153  00FEEC  50                 	db	80	;'P'
  1154  00FEED  56                 	db	86	;'V'
  1155  00FEEE  20                 	db	32
  1156  00FEEF  20                 	db	32
  1157  00FEF0  20                 	db	32
  1158  00FEF1  50                 	db	80	;'P'
  1159  00FEF2  57                 	db	87	;'W'
  1160  00FEF3  52                 	db	82	;'R'
  1161  00FEF4  20                 	db	32
  1162  00FEF5  25                 	db	37
  1163  00FEF6  33                 	db	51	;'3'
  1164  00FEF7  2E                 	db	46
  1165  00FEF8  32                 	db	50	;'2'
  1166  00FEF9  66                 	db	102	;'f'
  1167  00FEFA  20                 	db	32
  1168  00FEFB  20                 	db	32
  1169  00FEFC  20                 	db	32
  1170  00FEFD  20                 	db	32
  1171  00FEFE  00                 	db	0
  1172  00FEFF                     STR_11:
  1173                           
  1174                           ; BSR set to: 57
  1175  00FEFF  49                 	db	73	;'I'
  1176  00FF00  4E                 	db	78	;'N'
  1177  00FF01  56                 	db	86	;'V'
  1178  00FF02  20                 	db	32
  1179  00FF03  20                 	db	32
  1180  00FF04  50                 	db	80	;'P'
  1181  00FF05  57                 	db	87	;'W'
  1182  00FF06  52                 	db	82	;'R'
  1183  00FF07  20                 	db	32
  1184  00FF08  25                 	db	37
  1185  00FF09  33                 	db	51	;'3'
  1186  00FF0A  2E                 	db	46
  1187  00FF0B  32                 	db	50	;'2'
  1188  00FF0C  66                 	db	102	;'f'
  1189  00FF0D  20                 	db	32
  1190  00FF0E  20                 	db	32
  1191  00FF0F  20                 	db	32
  1192  00FF10  20                 	db	32
  1193  00FF11  00                 	db	0
  1194  00FF12                     STR_10:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FF12  4C                 	db	76	;'L'
  1198  00FF13  4F                 	db	79	;'O'
  1199  00FF14  41                 	db	65	;'A'
  1200  00FF15  44                 	db	68	;'D'
  1201  00FF16  20                 	db	32
  1202  00FF17  50                 	db	80	;'P'
  1203  00FF18  57                 	db	87	;'W'
  1204  00FF19  52                 	db	82	;'R'
  1205  00FF1A  20                 	db	32
  1206  00FF1B  25                 	db	37
  1207  00FF1C  33                 	db	51	;'3'
  1208  00FF1D  2E                 	db	46
  1209  00FF1E  32                 	db	50	;'2'
  1210  00FF1F  66                 	db	102	;'f'
  1211  00FF20  20                 	db	32
  1212  00FF21  20                 	db	32
  1213  00FF22  20                 	db	32
  1214  00FF23  20                 	db	32
  1215  00FF24  00                 	db	0
  1216  00FF25                     STR_13:
  1217                           
  1218                           ; BSR set to: 57
  1219  00FF25  42                 	db	66	;'B'
  1220  00FF26  56                 	db	86	;'V'
  1221  00FF27  20                 	db	32
  1222  00FF28  25                 	db	37
  1223  00FF29  32                 	db	50	;'2'
  1224  00FF2A  2E                 	db	46
  1225  00FF2B  32                 	db	50	;'2'
  1226  00FF2C  66                 	db	102	;'f'
  1227  00FF2D  20                 	db	32
  1228  00FF2E  42                 	db	66	;'B'
  1229  00FF2F  41                 	db	65	;'A'
  1230  00FF30  20                 	db	32
  1231  00FF31  25                 	db	37
  1232  00FF32  32                 	db	50	;'2'
  1233  00FF33  2E                 	db	46
  1234  00FF34  32                 	db	50	;'2'
  1235  00FF35  66                 	db	102	;'f'
  1236  00FF36  20                 	db	32
  1237  00FF37  00                 	db	0
  1238  00FF38                     STR_14:
  1239                           
  1240                           ; BSR set to: 57
  1241  00FF38  43                 	db	67	;'C'
  1242  00FF39  56                 	db	86	;'V'
  1243  00FF3A  20                 	db	32
  1244  00FF3B  25                 	db	37
  1245  00FF3C  32                 	db	50	;'2'
  1246  00FF3D  2E                 	db	46
  1247  00FF3E  32                 	db	50	;'2'
  1248  00FF3F  66                 	db	102	;'f'
  1249  00FF40  20                 	db	32
  1250  00FF41  4C                 	db	76	;'L'
  1251  00FF42  41                 	db	65	;'A'
  1252  00FF43  20                 	db	32
  1253  00FF44  25                 	db	37
  1254  00FF45  32                 	db	50	;'2'
  1255  00FF46  2E                 	db	46
  1256  00FF47  32                 	db	50	;'2'
  1257  00FF48  66                 	db	102	;'f'
  1258  00FF49  20                 	db	32
  1259  00FF4A  00                 	db	0
  1260  00FF4B                     STR_12:
  1261                           
  1262                           ; BSR set to: 57
  1263  00FF4B  50                 	db	80	;'P'
  1264  00FF4C  56                 	db	86	;'V'
  1265  00FF4D  20                 	db	32
  1266  00FF4E  25                 	db	37
  1267  00FF4F  32                 	db	50	;'2'
  1268  00FF50  2E                 	db	46
  1269  00FF51  32                 	db	50	;'2'
  1270  00FF52  66                 	db	102	;'f'
  1271  00FF53  20                 	db	32
  1272  00FF54  50                 	db	80	;'P'
  1273  00FF55  41                 	db	65	;'A'
  1274  00FF56  20                 	db	32
  1275  00FF57  25                 	db	37
  1276  00FF58  32                 	db	50	;'2'
  1277  00FF59  2E                 	db	46
  1278  00FF5A  32                 	db	50	;'2'
  1279  00FF5B  66                 	db	102	;'f'
  1280  00FF5C  20                 	db	32
  1281  00FF5D  00                 	db	0
  1282  00FF5E                     STR_8:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FF5E  20                 	db	32
  1286  00FF5F  56                 	db	86	;'V'
  1287  00FF60  54                 	db	84	;'T'
  1288  00FF61  45                 	db	69	;'E'
  1289  00FF62  52                 	db	82	;'R'
  1290  00FF63  4D                 	db	77	;'M'
  1291  00FF64  20                 	db	32
  1292  00FF65  23                 	db	35
  1293  00FF66  32                 	db	50	;'2'
  1294  00FF67  20                 	db	32
  1295  00FF68  20                 	db	32
  1296  00FF69  20                 	db	32
  1297  00FF6A  20                 	db	32
  1298  00FF6B  20                 	db	32
  1299  00FF6C  20                 	db	32
  1300  00FF6D  20                 	db	32
  1301  00FF6E  00                 	db	0
  1302  00FF6F                     STR_4:
  1303                           
  1304                           ; BSR set to: 57
  1305  00FF6F  20                 	db	32
  1306  00FF70  4E                 	db	78	;'N'
  1307  00FF71  53                 	db	83	;'S'
  1308  00FF72  41                 	db	65	;'A'
  1309  00FF73  53                 	db	83	;'S'
  1310  00FF74  50                 	db	80	;'P'
  1311  00FF75  4F                 	db	79	;'O'
  1312  00FF76  4F                 	db	79	;'O'
  1313  00FF77  4B                 	db	75	;'K'
  1314  00FF78  20                 	db	32
  1315  00FF79  20                 	db	32
  1316  00FF7A  20                 	db	32
  1317  00FF7B  20                 	db	32
  1318  00FF7C  20                 	db	32
  1319  00FF7D  20                 	db	32
  1320  00FF7E  20                 	db	32
  1321  00FF7F  00                 	db	0
  1322  00FF80                     STR_1:
  1323                           
  1324                           ; BSR set to: 57
  1325  00FF80  20                 	db	32
  1326  00FF81  4D                 	db	77	;'M'
  1327  00FF82  42                 	db	66	;'B'
  1328  00FF83  4D                 	db	77	;'M'
  1329  00FF84  43                 	db	67	;'C'
  1330  00FF85  20                 	db	32
  1331  00FF86  53                 	db	83	;'S'
  1332  00FF87  4F                 	db	79	;'O'
  1333  00FF88  4C                 	db	76	;'L'
  1334  00FF89  41                 	db	65	;'A'
  1335  00FF8A  52                 	db	82	;'R'
  1336  00FF8B  4D                 	db	77	;'M'
  1337  00FF8C  4F                 	db	79	;'O'
  1338  00FF8D  4E                 	db	78	;'N'
  1339  00FF8E  20                 	db	32
  1340  00FF8F  20                 	db	32
  1341  00FF90  00                 	db	0
  1342  00FF91                     STR_5:
  1343                           
  1344                           ; BSR set to: 57
  1345  00FF91  20                 	db	32
  1346  00FF92  53                 	db	83	;'S'
  1347  00FF93  45                 	db	69	;'E'
  1348  00FF94  51                 	db	81	;'Q'
  1349  00FF95  55                 	db	85	;'U'
  1350  00FF96  45                 	db	69	;'E'
  1351  00FF97  4E                 	db	78	;'N'
  1352  00FF98  43                 	db	67	;'C'
  1353  00FF99  45                 	db	69	;'E'
  1354  00FF9A  20                 	db	32
  1355  00FF9B  54                 	db	84	;'T'
  1356  00FF9C  45                 	db	69	;'E'
  1357  00FF9D  53                 	db	83	;'S'
  1358  00FF9E  54                 	db	84	;'T'
  1359  00FF9F  20                 	db	32
  1360  00FFA0  20                 	db	32
  1361  00FFA1  00                 	db	0
  1362  00FFA2                     STR_24:
  1363                           
  1364                           ; BSR set to: 57
  1365  00FFA2  76                 	db	118	;'v'
  1366  00FFA3  74                 	db	116	;'t'
  1367  00FFA4  65                 	db	101	;'e'
  1368  00FFA5  72                 	db	114	;'r'
  1369  00FFA6  6D                 	db	109	;'m'
  1370  00FFA7  20                 	db	32
  1371  00FFA8  25                 	db	37
  1372  00FFA9  78                 	db	120	;'x'
  1373  00FFAA  3A                 	db	58	;':'
  1374  00FFAB  25                 	db	37
  1375  00FFAC  78                 	db	120	;'x'
  1376  00FFAD  20                 	db	32
  1377  00FFAE  20                 	db	32
  1378  00FFAF  20                 	db	32
  1379  00FFB0  00                 	db	0
  1380  00FFB1                     STR_2:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FFB1  20                 	db	32
  1384  00FFB2  56                 	db	86	;'V'
  1385  00FFB3  65                 	db	101	;'e'
  1386  00FFB4  72                 	db	114	;'r'
  1387  00FFB5  73                 	db	115	;'s'
  1388  00FFB6  69                 	db	105	;'i'
  1389  00FFB7  6F                 	db	111	;'o'
  1390  00FFB8  6E                 	db	110	;'n'
  1391  00FFB9  20                 	db	32
  1392  00FFBA  25                 	db	37
  1393  00FFBB  73                 	db	115	;'s'
  1394  00FFBC  20                 	db	32
  1395  00FFBD  20                 	db	32
  1396  00FFBE  20                 	db	32
  1397  00FFBF  00                 	db	0
  1398  00FFC0                     STR_18:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFC0  4E                 	db	78	;'N'
  1402  00FFC1  6F                 	db	111	;'o'
  1403  00FFC2  76                 	db	118	;'v'
  1404  00FFC3  20                 	db	32
  1405  00FFC4  32                 	db	50	;'2'
  1406  00FFC5  39                 	db	57	;'9'
  1407  00FFC6  20                 	db	32
  1408  00FFC7  32                 	db	50	;'2'
  1409  00FFC8  30                 	db	48	;'0'
  1410  00FFC9  31                 	db	49	;'1'
  1411  00FFCA  39                 	db	57	;'9'
  1412  00FFCB  00                 	db	0
  1413  00FFCC                     STR_22:
  1414                           
  1415                           ; BSR set to: 57
  1416  00FFCC  25                 	db	37
  1417  00FFCD  73                 	db	115	;'s'
  1418  00FFCE  20                 	db	32
  1419  00FFCF  20                 	db	32
  1420  00FFD0  20                 	db	32
  1421  00FFD1  20                 	db	32
  1422  00FFD2  20                 	db	32
  1423  00FFD3  20                 	db	32
  1424  00FFD4  20                 	db	32
  1425  00FFD5  00                 	db	0
  1426  00FFD6                     STR_19:
  1427                           
  1428                           ; BSR set to: 57
  1429  00FFD6  32                 	db	50	;'2'
  1430  00FFD7  30                 	db	48	;'0'
  1431  00FFD8  3A                 	db	58	;':'
  1432  00FFD9  33                 	db	51	;'3'
  1433  00FFDA  30                 	db	48	;'0'
  1434  00FFDB  3A                 	db	58	;':'
  1435  00FFDC  31                 	db	49	;'1'
  1436  00FFDD  32                 	db	50	;'2'
  1437  00FFDE  00                 	db	0
  1438  00FFDF                     STR_3:
  1439                           
  1440                           ; BSR set to: 57
  1441  00FFDF  30                 	db	48	;'0'
  1442  00FFE0  2E                 	db	46
  1443  00FFE1  39                 	db	57	;'9'
  1444  00FFE2  39                 	db	57	;'9'
  1445  00FFE3  31                 	db	49	;'1'
  1446  00FFE4  00                 	db	0
  1447  00FFE5                     STR_37:
  1448                           
  1449                           ; BSR set to: 57
  1450  00FFE5  49                 	db	73	;'I'
  1451  00FFE6  4E                 	db	78	;'N'
  1452  00FFE7  46                 	db	70	;'F'
  1453  00FFE8  00                 	db	0
  1454  00FFE9                     STR_41:
  1455                           
  1456                           ; BSR set to: 57
  1457  00FFE9  4E                 	db	78	;'N'
  1458  00FFEA  41                 	db	65	;'A'
  1459  00FFEB  4E                 	db	78	;'N'
  1460  00FFEC  00                 	db	0
  1461  00FFED                     STR_38:
  1462                           
  1463                           ; BSR set to: 57
  1464  00FFED  69                 	db	105	;'i'
  1465  00FFEE  6E                 	db	110	;'n'
  1466  00FFEF  66                 	db	102	;'f'
  1467  00FFF0  00                 	db	0
  1468  00FFF1                     STR_42:
  1469                           
  1470                           ; BSR set to: 57
  1471  00FFF1  6E                 	db	110	;'n'
  1472  00FFF2  61                 	db	97	;'a'
  1473  00FFF3  6E                 	db	110	;'n'
  1474  00FFF4  00                 	db	0
  1475  00FFF5                     STR_45:
  1476                           
  1477                           ; BSR set to: 57
  1478  00FFF5  6C                 	db	108	;'l'
  1479  00FFF6  66                 	db	102	;'f'
  1480  00FFF7  00                 	db	0
  1481  00FFF8                     STR_16:
  1482                           
  1483                           ; BSR set to: 57
  1484  00FFF8  25                 	db	37
  1485  00FFF9  63                 	db	99	;'c'
  1486  00FFFA  00                 	db	0
  1487  00FFFB                     STR_15:
  1488                           
  1489                           ; BSR set to: 57
  1490  00FFFB  25                 	db	37
  1491  00FFFC  73                 	db	115	;'s'
  1492  00FFFD  00                 	db	0
  1493  0000                     
  1494                           ; #config settings
  1495  00FFFE  00                 	db	0	; dummy byte at the end
  1496  0000                     
  1497                           	psect	cinit
  1498  016C8A                     __pcinit:
  1499                           	opt callstack 0
  1500  016C8A                     start_initialization:
  1501                           	opt callstack 0
  1502  016C8A                     __initialization:
  1503                           	opt callstack 0
  1504                           
  1505                           ; Initialize objects allocated to BANK2 (187 bytes)
  1506                           ; load TBLPTR registers with __pidataBANK2
  1507  016C8A  0E00               	movlw	low __pidataBANK2
  1508  016C8C  6EF6               	movwf	tblptrl,c
  1509  016C8E  0E70               	movlw	high __pidataBANK2
  1510  016C90  6EF7               	movwf	tblptrh,c
  1511  016C92  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1512  016C94  6EF8               	movwf	tblptru,c
  1513  016C96  EE00  F200         	lfsr	0,__pdataBANK2
  1514  016C9A  EE20 F0BB          	lfsr	2,187
  1515  016C9E                     copy_data0:
  1516  016C9E  0009               	tblrd		*+
  1517  016CA0  006F FFD7 FFEE     	movff	tablat,postinc0
  1518  016CA6  50DD               	movf	postdec2,w,c
  1519  016CA8  50D9               	movf	fsr2l,w,c
  1520  016CAA  E1F9               	bnz	copy_data0
  1521                           
  1522                           ; Initialize objects allocated to BANK1 (16 bytes)
  1523                           ; load TBLPTR registers with __pidataBANK1
  1524  016CAC  0EFE               	movlw	low __pidataBANK1
  1525  016CAE  6EF6               	movwf	tblptrl,c
  1526  016CB0  0E88               	movlw	high __pidataBANK1
  1527  016CB2  6EF7               	movwf	tblptrh,c
  1528  016CB4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1529  016CB6  6EF8               	movwf	tblptru,c
  1530  016CB8  EE00  F1D0         	lfsr	0,__pdataBANK1
  1531  016CBC  EE20 F010          	lfsr	2,16
  1532  016CC0                     copy_data1:
  1533  016CC0  0009               	tblrd		*+
  1534  016CC2  006F FFD7 FFEE     	movff	tablat,postinc0
  1535  016CC8  50DD               	movf	postdec2,w,c
  1536  016CCA  50D9               	movf	fsr2l,w,c
  1537  016CCC  E1F9               	bnz	copy_data1
  1538                           
  1539                           ; Initialize objects allocated to BANK0 (53 bytes)
  1540                           ; load TBLPTR registers with __pidataBANK0
  1541  016CCE  0E92               	movlw	low __pidataBANK0
  1542  016CD0  6EF6               	movwf	tblptrl,c
  1543  016CD2  0E81               	movlw	high __pidataBANK0
  1544  016CD4  6EF7               	movwf	tblptrh,c
  1545  016CD6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1546  016CD8  6EF8               	movwf	tblptru,c
  1547  016CDA  EE00  F0C7         	lfsr	0,__pdataBANK0
  1548  016CDE  EE20 F035          	lfsr	2,53
  1549  016CE2                     copy_data2:
  1550  016CE2  0009               	tblrd		*+
  1551  016CE4  006F FFD7 FFEE     	movff	tablat,postinc0
  1552  016CEA  50DD               	movf	postdec2,w,c
  1553  016CEC  50D9               	movf	fsr2l,w,c
  1554  016CEE  E1F9               	bnz	copy_data2
  1555                           
  1556                           ; Clear objects allocated to BANK7 (255 bytes)
  1557  016CF0  EE01  F300         	lfsr	0,__pbssBANK7
  1558  016CF4  EE20 F0FF          	lfsr	2,255
  1559  016CF8                     clear_0:
  1560  016CF8  6AEE               	clrf	postinc0,c
  1561  016CFA  50DD               	movf	postdec2,w,c
  1562  016CFC  50D9               	movf	fsr2l,w,c
  1563  016CFE  E1FC               	bnz	clear_0
  1564  016D00  50DA               	movf	fsr2h,w,c
  1565  016D02  E1FA               	bnz	clear_0
  1566                           
  1567                           ; Clear objects allocated to BANK6 (255 bytes)
  1568  016D04  EE01  F200         	lfsr	0,__pbssBANK6
  1569  016D08  EE20 F0FF          	lfsr	2,255
  1570  016D0C                     clear_1:
  1571  016D0C  6AEE               	clrf	postinc0,c
  1572  016D0E  50DD               	movf	postdec2,w,c
  1573  016D10  50D9               	movf	fsr2l,w,c
  1574  016D12  E1FC               	bnz	clear_1
  1575  016D14  50DA               	movf	fsr2h,w,c
  1576  016D16  E1FA               	bnz	clear_1
  1577                           
  1578                           ; Clear objects allocated to BANK5 (218 bytes)
  1579  016D18  EE01  F100         	lfsr	0,__pbssBANK5
  1580  016D1C  0EDA               	movlw	218
  1581  016D1E                     clear_2:
  1582  016D1E  6AEE               	clrf	postinc0,c
  1583  016D20  06E8               	decf	wreg,f,c
  1584  016D22  E1FD               	bnz	clear_2
  1585                           
  1586                           ; Clear objects allocated to BANK4 (67 bytes)
  1587  016D24  EE01  F000         	lfsr	0,__pbssBANK4
  1588  016D28  0E43               	movlw	67
  1589  016D2A                     clear_3:
  1590  016D2A  6AEE               	clrf	postinc0,c
  1591  016D2C  06E8               	decf	wreg,f,c
  1592  016D2E  E1FD               	bnz	clear_3
  1593                           
  1594                           ; Clear objects allocated to BANK3 (211 bytes)
  1595  016D30  EE00  F300         	lfsr	0,__pbssBANK3
  1596  016D34  0ED3               	movlw	211
  1597  016D36                     clear_4:
  1598  016D36  6AEE               	clrf	postinc0,c
  1599  016D38  06E8               	decf	wreg,f,c
  1600  016D3A  E1FD               	bnz	clear_4
  1601                           
  1602                           ; Clear objects allocated to BANK2 (64 bytes)
  1603  016D3C  EE00  F2BB         	lfsr	0,__pbssBANK2
  1604  016D40  0E40               	movlw	64
  1605  016D42                     clear_5:
  1606  016D42  6AEE               	clrf	postinc0,c
  1607  016D44  06E8               	decf	wreg,f,c
  1608  016D46  E1FD               	bnz	clear_5
  1609                           
  1610                           ; Clear objects allocated to BANK1 (208 bytes)
  1611  016D48  EE00  F100         	lfsr	0,__pbssBANK1
  1612  016D4C  0ED0               	movlw	208
  1613  016D4E                     clear_6:
  1614  016D4E  6AEE               	clrf	postinc0,c
  1615  016D50  06E8               	decf	wreg,f,c
  1616  016D52  E1FD               	bnz	clear_6
  1617                           
  1618                           ; Clear objects allocated to BANK0 (103 bytes)
  1619  016D54  EE00  F060         	lfsr	0,__pbssBANK0
  1620  016D58  0E67               	movlw	103
  1621  016D5A                     clear_7:
  1622  016D5A  6AEE               	clrf	postinc0,c
  1623  016D5C  06E8               	decf	wreg,f,c
  1624  016D5E  E1FD               	bnz	clear_7
  1625                           
  1626                           ; Clear objects allocated to COMRAM (49 bytes)
  1627  016D60  EE00  F001         	lfsr	0,__pbssCOMRAM
  1628  016D64  0E31               	movlw	49
  1629  016D66                     clear_8:
  1630  016D66  6AEE               	clrf	postinc0,c
  1631  016D68  06E8               	decf	wreg,f,c
  1632  016D6A  E1FD               	bnz	clear_8
  1633                           
  1634                           ;
  1635                           ; Setup IVTBASE
  1636                           ;
  1637  016D6C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1638  016D6E  6ED5               	movwf	213,c
  1639  016D70  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1640  016D72  6ED6               	movwf	214,c
  1641  016D74  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1642  016D76  6ED7               	movwf	215,c
  1643  016D78                     end_of_initialization:
  1644                           	opt callstack 0
  1645  016D78                     __end_of__initialization:
  1646                           	opt callstack 0
  1647  016D78  0100               	movlb	0
  1648  016D7A  EF71  F099         	goto	_main	;jump to C main() function
  1649                           
  1650                           	psect	bssCOMRAM
  1651  000001                     __pbssCOMRAM:
  1652                           	opt callstack 0
  1653  000001                     _ADCC_ADTI_InterruptHandler:
  1654                           	opt callstack 0
  1655  000001                     	ds	3
  1656  000004                     _ADCC_ADI_InterruptHandler:
  1657                           	opt callstack 0
  1658  000004                     	ds	3
  1659  000007                     _UART1_TxInterruptHandler:
  1660                           	opt callstack 0
  1661  000007                     	ds	3
  1662  00000A                     _UART1_RxInterruptHandler:
  1663                           	opt callstack 0
  1664  00000A                     	ds	3
  1665  00000D                     _UART2_TxInterruptHandler:
  1666                           	opt callstack 0
  1667  00000D                     	ds	3
  1668  000010                     _UART2_RxInterruptHandler:
  1669                           	opt callstack 0
  1670  000010                     	ds	3
  1671  000013                     _INT1_InterruptHandler:
  1672                           	opt callstack 0
  1673  000013                     	ds	3
  1674  000016                     _INT0_InterruptHandler:
  1675                           	opt callstack 0
  1676  000016                     	ds	3
  1677  000019                     _nout:
  1678                           	opt callstack 0
  1679  000019                     	ds	2
  1680  00001B                     _width:
  1681                           	opt callstack 0
  1682  00001B                     	ds	2
  1683  00001D                     _prec:
  1684                           	opt callstack 0
  1685  00001D                     	ds	2
  1686  00001F                     _flags:
  1687                           	opt callstack 0
  1688  00001F                     	ds	2
  1689  000021                     TMR5_ISR@CountCallBack:
  1690                           	opt callstack 0
  1691  000021                     	ds	2
  1692  000023                     _timer5ReloadVal:
  1693                           	opt callstack 0
  1694  000023                     	ds	2
  1695  000025                     _mode_sw:
  1696                           	opt callstack 0
  1697  000025                     	ds	1
  1698  000026                     _uart2RxCount:
  1699                           	opt callstack 0
  1700  000026                     	ds	1
  1701  000027                     _uart2RxTail:
  1702                           	opt callstack 0
  1703  000027                     	ds	1
  1704  000028                     _uart2RxHead:
  1705                           	opt callstack 0
  1706  000028                     	ds	1
  1707  000029                     _uart2TxBufferRemaining:
  1708                           	opt callstack 0
  1709  000029                     	ds	1
  1710  00002A                     _uart2TxTail:
  1711                           	opt callstack 0
  1712  00002A                     	ds	1
  1713  00002B                     _uart2TxHead:
  1714                           	opt callstack 0
  1715  00002B                     	ds	1
  1716  00002C                     _uart1RxCount:
  1717                           	opt callstack 0
  1718  00002C                     	ds	1
  1719  00002D                     _uart1RxTail:
  1720                           	opt callstack 0
  1721  00002D                     	ds	1
  1722  00002E                     _uart1RxHead:
  1723                           	opt callstack 0
  1724  00002E                     	ds	1
  1725  00002F                     _uart1TxBufferRemaining:
  1726                           	opt callstack 0
  1727  00002F                     	ds	1
  1728  000030                     _uart1TxTail:
  1729                           	opt callstack 0
  1730  000030                     	ds	1
  1731  000031                     _uart1TxHead:
  1732                           	opt callstack 0
  1733  000031                     	ds	1
  1734                           
  1735                           	psect	bssBANK0
  1736  000060                     __pbssBANK0:
  1737                           	opt callstack 0
  1738  000060                     _S:
  1739                           	opt callstack 0
  1740  000060                     	ds	41
  1741  000089                     _tickCount:
  1742                           	opt callstack 0
  1743  000089                     	ds	24
  1744  0000A1                     _spi_link:
  1745                           	opt callstack 0
  1746  0000A1                     	ds	12
  1747  0000AD                     floorf@F524:
  1748                           	opt callstack 0
  1749  0000AD                     	ds	4
  1750  0000B1                     ___fpclassifyf@F463:
  1751                           	opt callstack 0
  1752  0000B1                     	ds	4
  1753  0000B5                     _utctime:
  1754                           	opt callstack 0
  1755  0000B5                     	ds	4
  1756  0000B9                     wdtdelay@dcount:
  1757                           	opt callstack 0
  1758  0000B9                     	ds	4
  1759  0000BD                     _P:
  1760                           	opt callstack 0
  1761  0000BD                     	ds	4
  1762  0000C1                     _TMR5_InterruptHandler:
  1763                           	opt callstack 0
  1764  0000C1                     	ds	3
  1765  0000C4                     _TMR6_InterruptHandler:
  1766                           	opt callstack 0
  1767  0000C4                     	ds	3
  1768                           
  1769                           	psect	dataBANK0
  1770  0000C7                     __pdataBANK0:
  1771                           	opt callstack 0
  1772  0000C7                     _R:
  1773                           	opt callstack 0
  1774  0000C7                     	ds	40
  1775  0000EF                     stoa@F1166:
  1776                           	opt callstack 0
  1777  0000EF                     	ds	7
  1778  0000F6                     _H:
  1779                           	opt callstack 0
  1780  0000F6                     	ds	6
  1781                           
  1782                           	psect	bssBANK1
  1783  000100                     __pbssBANK1:
  1784                           	opt callstack 0
  1785  000100                     _C:
  1786                           	opt callstack 0
  1787  000100                     	ds	120
  1788  000178                     _dbuf:
  1789                           	opt callstack 0
  1790  000178                     	ds	80
  1791  0001C8                     _seed:
  1792                           	opt callstack 0
  1793  0001C8                     	ds	8
  1794                           
  1795                           	psect	dataBANK1
  1796  0001D0                     __pdataBANK1:
  1797                           	opt callstack 0
  1798  0001D0                     _port_data:
  1799                           	opt callstack 0
  1800  0001D0                     	ds	16
  1801                           
  1802                           	psect	bssBANK2
  1803  0002BB                     __pbssBANK2:
  1804                           	opt callstack 0
  1805  0002BB                     _uart1TxBuffer:
  1806                           	opt callstack 0
  1807  0002BB                     	ds	64
  1808                           
  1809                           	psect	dataBANK2
  1810  000200                     __pdataBANK2:
  1811                           	opt callstack 0
  1812  000200                     _V:
  1813                           	opt callstack 0
  1814  000200                     	ds	187
  1815                           
  1816                           	psect	bssBANK3
  1817  000300                     __pbssBANK3:
  1818                           	opt callstack 0
  1819  000300                     lp_filter@smooth:
  1820                           	opt callstack 0
  1821  000300                     	ds	80
  1822  000350                     _uart2TxBuffer:
  1823                           	opt callstack 0
  1824  000350                     	ds	64
  1825  000390                     _ring_buf1:
  1826                           	opt callstack 0
  1827  000390                     	ds	67
  1828                           
  1829                           	psect	bssBANK4
  1830  000400                     __pbssBANK4:
  1831                           	opt callstack 0
  1832  000400                     _ring_buf2:
  1833                           	opt callstack 0
  1834  000400                     	ds	67
  1835                           
  1836                           	psect	bssBANK5
  1837  000500                     __pbssBANK5:
  1838                           	opt callstack 0
  1839  000500                     _D:
  1840                           	opt callstack 0
  1841  000500                     	ds	218
  1842                           
  1843                           	psect	bssBANK6
  1844  000600                     __pbssBANK6:
  1845                           	opt callstack 0
  1846  000600                     _uart1RxBuffer:
  1847                           	opt callstack 0
  1848  000600                     	ds	255
  1849                           
  1850                           	psect	bssBANK7
  1851  000700                     __pbssBANK7:
  1852                           	opt callstack 0
  1853  000700                     _uart2RxBuffer:
  1854                           	opt callstack 0
  1855  000700                     	ds	255
  1856                           
  1857                           	psect	cstackBANK1
  1858  0001E0                     __pcstackBANK1:
  1859                           	opt callstack 0
  1860  0001E0                     ??_TMR5_ISR:
  1861                           
  1862                           ; 1 bytes @ 0x0
  1863  0001E0                     	ds	4
  1864                           
  1865                           	psect	cstackBANK0
  1866  0000FC                     __pcstackBANK0:
  1867                           	opt callstack 0
  1868  0000FC                     ??_INT1_ISR:
  1869                           
  1870                           ; 1 bytes @ 0x0
  1871  0000FC                     	ds	4
  1872                           
  1873                           	psect	cstackCOMRAM
  1874  000052                     __pcstackCOMRAM:
  1875                           	opt callstack 0
  1876  000052                     ??_ADCC_ThresholdISR:
  1877  000052                     
  1878                           ; 1 bytes @ 0x0
  1879  000052                     	ds	5
  1880  000057                     ??_TMR6_ISR:
  1881                           
  1882                           ; 1 bytes @ 0x5
  1883  000057                     	ds	1
  1884  000058                     
  1885                           ; 1 bytes @ 0x6
  1886 ;;
  1887 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1888 ;;
  1889 ;; *************** function _main *****************
  1890 ;; Defined at:
  1891 ;;		line 165 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  mode            1  [STACK] enum E17005
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1  [STACK] void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 1/1
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels required when called:   19
  1911 ;; This function calls:
  1912 ;;		_SYSTEM_Initialize
  1913 ;;		_StartTimer
  1914 ;;		_TimerDone
  1915 ;;		_WaitMs
  1916 ;;		_calc_model_data
  1917 ;;		_check_adc_scan
  1918 ;;		_check_help
  1919 ;;		_clear_adc_scan
  1920 ;;		_convert_adc_data
  1921 ;;		_eaDogM_WriteCommand
  1922 ;;		_get_vterm_ptr
  1923 ;;		_hid_display
  1924 ;;		_init_display
  1925 ;;		_mode_lamp_dim
  1926 ;;		_set_display_info
  1927 ;;		_set_vterm
  1928 ;;		_sprintf
  1929 ;;		_srand
  1930 ;;		_start_adc_scan
  1931 ;;		_start_switch_handler
  1932 ;;		_update_lcd
  1933 ;; This function is called by:
  1934 ;;		Startup code after reset
  1935 ;; This function uses a reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text0
  1939  0132E2                     __ptext0:
  1940                           	opt callstack 0
  1941  0132E2                     _main:
  1942                           	opt callstack 0
  1943                           
  1944                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1945  0132E2  52E6               	movf	postinc1,f,c
  1946                           
  1947                           ;main.c: 167:  UI_STATES mode;;main.c: 172:  SYSTEM_Initialize();
  1948                           
  1949                           ;incstack = 0
  1950  0132E4  EC6E  F0BF         	call	_SYSTEM_Initialize	;wreg free
  1951                           
  1952                           ; BSR set to: 60
  1953                           ;main.c: 175:  (INTCON0bits.GIEH = 1);
  1954  0132E8  8ED2               	bsf	210,7,c	;volatile
  1955                           
  1956                           ; BSR set to: 60
  1957                           ;main.c: 178:  (INTCON0bits.GIEL = 1);
  1958  0132EA  8CD2               	bsf	210,6,c	;volatile
  1959                           
  1960                           ; BSR set to: 60
  1961                           ;main.c: 180:  V.ui_state = UI_STATE_INIT;
  1962  0132EC  0102               	movlb	2	; () banked
  1963  0132EE  6B00               	clrf	_V& (0+255),b	;volatile
  1964                           
  1965                           ; BSR set to: 2
  1966                           ;main.c: 185:  WaitMs(300);
  1967  0132F0  0E2C               	movlw	44
  1968  0132F2  6EE6               	movwf	postinc1,c
  1969  0132F4  0E01               	movlw	1
  1970  0132F6  6EE6               	movwf	postinc1,c
  1971  0132F8  EC93  F0C0         	call	_WaitMs	;wreg free
  1972                           
  1973                           ;main.c: 186:  if (PORTBbits.RB0) {
  1974  0132FC  A0CB               	btfss	203,0,c	;volatile
  1975  0132FE  D004               	goto	l10470
  1976                           
  1977                           ;main.c: 187:   mode = UI_STATE_HOST;
  1978                           ;stkvar	_mode @ sp[(-1)+0]
  1979  013300  0EFF               	movlw	-1
  1980  013302  6AE3               	clrf	plusw1,c
  1981  013304  2AE3               	incf	plusw1,f,c
  1982                           
  1983                           ;main.c: 188:  } else {
  1984  013306  D004               	goto	l10472
  1985  013308                     l10470:
  1986                           
  1987                           ;main.c: 189:   mode = UI_STATE_LOG;
  1988                           ;stkvar	_mode @ sp[(-1)+0]
  1989  013308  0EFF               	movlw	-1
  1990  01330A  6AE3               	clrf	plusw1,c
  1991  01330C  80E3               	bsf	plusw1,0,c
  1992  01330E  82E3               	bsf	plusw1,1,c	;indir
  1993  013310                     l10472:
  1994                           
  1995                           ;main.c: 192:  if (mode == UI_STATE_HOST) {
  1996                           ;stkvar	_mode @ sp[(-1)+0]
  1997  013310  0EFF               	movlw	-1
  1998  013312  04E3               	decf	plusw1,w,c
  1999  013314  A4D8               	btfss	status,2,c
  2000  013316  D007               	goto	l1248
  2001                           
  2002                           ;main.c: 193:   do { LATDbits.LATD0 = 1; } while(0);
  2003  013318  80BD               	bsf	189,0,c	;volatile
  2004                           
  2005                           ;main.c: 194:   V.mode_pwm = 70;
  2006  01331A  0E00               	movlw	0
  2007  01331C  0102               	movlb	2	; () banked
  2008  01331E  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2009  013320  0E46               	movlw	70
  2010  013322  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2011                           
  2012                           ;main.c: 195:  } else {
  2013  013324  D004               	goto	l10476
  2014  013326                     l1248:
  2015  013326  90BD               	bcf	189,0,c	;volatile
  2016                           
  2017                           ;main.c: 197:   V.mode_pwm = 0;
  2018  013328  0102               	movlb	2	; () banked
  2019  01332A  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2020  01332C  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2021  01332E                     l10476:
  2022                           
  2023                           ; BSR set to: 2
  2024                           ;main.c: 199:  mode_lamp_dim(V.mode_pwm);
  2025  01332E  0060  FA57  FFE6   	movff	_V+149,postinc1
  2026  013334  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2027  01333A  EC33  F0C4         	call	_mode_lamp_dim	;wreg free
  2028  01333E  D0D0               	goto	l10520
  2029  013340                     l10478:
  2030                           
  2031                           ; BSR set to: 2
  2032                           ;main.c: 210:    init_display();
  2033  013340  ECBF  F0B6         	call	_init_display	;wreg free
  2034                           
  2035                           ; BSR set to: 61
  2036                           ;main.c: 211:    eaDogM_WriteCommand(0b00001100);
  2037  013344  0E0C               	movlw	12
  2038  013346  6EE6               	movwf	postinc1,c
  2039  013348  EC8F  F0C4         	call	_eaDogM_WriteCommand	;wreg free
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 213:    V.ui_state = mode;
  2043                           ;stkvar	_mode @ sp[(-1)+0]
  2044  01334C  0EFF               	movlw	-1
  2045  01334E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 214:    srand(1957);
  2049  013354  0EA5               	movlw	165
  2050  013356  6EE6               	movwf	postinc1,c
  2051  013358  0E07               	movlw	7
  2052  01335A  6EE6               	movwf	postinc1,c
  2053  01335C  ECE4  F0C0         	call	_srand	;wreg free
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main.c: 215:    set_vterm(0);
  2057  013360  0E00               	movlw	0
  2058  013362  6EE6               	movwf	postinc1,c
  2059  013364  EC0A  F0C4         	call	_set_vterm	;wreg free
  2060                           
  2061                           ; BSR set to: 5
  2062                           ;main.c: 216:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2063  013368  0E80               	movlw	low STR_1
  2064  01336A  6EE6               	movwf	postinc1,c
  2065  01336C  0EFF               	movlw	high STR_1
  2066  01336E  6EE6               	movwf	postinc1,c
  2067  013370  0E00               	movlw	0
  2068  013372  6EE6               	movwf	postinc1,c
  2069  013374  0E00               	movlw	0
  2070  013376  6EE6               	movwf	postinc1,c
  2071  013378  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2072  01337C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2073  013382  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2074  013388  0E04               	movlw	4
  2075  01338A  6EE6               	movwf	postinc1,c
  2076  01338C  ECC0  F0B5         	call	_sprintf	;wreg free
  2077                           
  2078                           ;main.c: 217:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.991");
  2079  013390  0EDF               	movlw	low STR_3
  2080  013392  6EE6               	movwf	postinc1,c
  2081  013394  0EFF               	movlw	high STR_3
  2082  013396  6EE6               	movwf	postinc1,c
  2083  013398  0EB1               	movlw	low STR_2
  2084  01339A  6EE6               	movwf	postinc1,c
  2085  01339C  0EFF               	movlw	high STR_2
  2086  01339E  6EE6               	movwf	postinc1,c
  2087  0133A0  0E00               	movlw	0
  2088  0133A2  6EE6               	movwf	postinc1,c
  2089  0133A4  0E01               	movlw	1
  2090  0133A6  6EE6               	movwf	postinc1,c
  2091  0133A8  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2092  0133AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2093  0133B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2094  0133B8  0E06               	movlw	6
  2095  0133BA  6EE6               	movwf	postinc1,c
  2096  0133BC  ECC0  F0B5         	call	_sprintf	;wreg free
  2097                           
  2098                           ;main.c: 218:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2099  0133C0  0E6F               	movlw	low STR_4
  2100  0133C2  6EE6               	movwf	postinc1,c
  2101  0133C4  0EFF               	movlw	high STR_4
  2102  0133C6  6EE6               	movwf	postinc1,c
  2103  0133C8  0E00               	movlw	0
  2104  0133CA  6EE6               	movwf	postinc1,c
  2105  0133CC  0E02               	movlw	2
  2106  0133CE  6EE6               	movwf	postinc1,c
  2107  0133D0  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2108  0133D4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2109  0133DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2110  0133E0  0E04               	movlw	4
  2111  0133E2  6EE6               	movwf	postinc1,c
  2112  0133E4  ECC0  F0B5         	call	_sprintf	;wreg free
  2113                           
  2114                           ;main.c: 219:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2115  0133E8  0E91               	movlw	low STR_5
  2116  0133EA  6EE6               	movwf	postinc1,c
  2117  0133EC  0EFF               	movlw	high STR_5
  2118  0133EE  6EE6               	movwf	postinc1,c
  2119  0133F0  0E02               	movlw	2
  2120  0133F2  6EE6               	movwf	postinc1,c
  2121  0133F4  0E00               	movlw	0
  2122  0133F6  6EE6               	movwf	postinc1,c
  2123  0133F8  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2124  0133FC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2125  013402  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2126  013408  0E04               	movlw	4
  2127  01340A  6EE6               	movwf	postinc1,c
  2128  01340C  ECC0  F0B5         	call	_sprintf	;wreg free
  2129                           
  2130                           ;main.c: 220:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.991");
  2131  013410  0EDF               	movlw	low STR_3
  2132  013412  6EE6               	movwf	postinc1,c
  2133  013414  0EFF               	movlw	high STR_3
  2134  013416  6EE6               	movwf	postinc1,c
  2135  013418  0EB1               	movlw	low STR_2
  2136  01341A  6EE6               	movwf	postinc1,c
  2137  01341C  0EFF               	movlw	high STR_2
  2138  01341E  6EE6               	movwf	postinc1,c
  2139  013420  0E02               	movlw	2
  2140  013422  6EE6               	movwf	postinc1,c
  2141  013424  0E01               	movlw	1
  2142  013426  6EE6               	movwf	postinc1,c
  2143  013428  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2144  01342C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2145  013432  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2146  013438  0E06               	movlw	6
  2147  01343A  6EE6               	movwf	postinc1,c
  2148  01343C  ECC0  F0B5         	call	_sprintf	;wreg free
  2149                           
  2150                           ;main.c: 221:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2151  013440  0E5E               	movlw	low STR_8
  2152  013442  6EE6               	movwf	postinc1,c
  2153  013444  0EFF               	movlw	high STR_8
  2154  013446  6EE6               	movwf	postinc1,c
  2155  013448  0E02               	movlw	2
  2156  01344A  6EE6               	movwf	postinc1,c
  2157  01344C  0E02               	movlw	2
  2158  01344E  6EE6               	movwf	postinc1,c
  2159  013450  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2160  013454  0060  F0CB  FFE6   	movff	btemp,postinc1
  2161  01345A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2162  013460  0E04               	movlw	4
  2163  013462  6EE6               	movwf	postinc1,c
  2164  013464  ECC0  F0B5         	call	_sprintf	;wreg free
  2165                           
  2166                           ;main.c: 222:    update_lcd(0);
  2167  013468  0E00               	movlw	0
  2168  01346A  6EE6               	movwf	postinc1,c
  2169  01346C  EC39  F0B5         	call	_update_lcd	;wreg free
  2170                           
  2171                           ;main.c: 223:    WaitMs(3000);
  2172  013470  0EB8               	movlw	184
  2173  013472  6EE6               	movwf	postinc1,c
  2174  013474  0E0B               	movlw	11
  2175  013476  6EE6               	movwf	postinc1,c
  2176  013478  EC93  F0C0         	call	_WaitMs	;wreg free
  2177                           
  2178                           ;main.c: 224:    StartTimer(TMR_DISPLAY, 250);
  2179  01347C  0EFA               	movlw	250
  2180  01347E  6EE6               	movwf	postinc1,c
  2181  013480  0E00               	movlw	0
  2182  013482  6EE6               	movwf	postinc1,c
  2183  013484  0E0A               	movlw	10
  2184  013486  6EE6               	movwf	postinc1,c
  2185  013488  EC59  F0C0         	call	_StartTimer	;wreg free
  2186                           
  2187                           ;main.c: 225:    StartTimer(TMR_ADC, 200);
  2188  01348C  0EC8               	movlw	200
  2189  01348E  6EE6               	movwf	postinc1,c
  2190  013490  0E00               	movlw	0
  2191  013492  6EE6               	movwf	postinc1,c
  2192  013494  0E01               	movlw	1
  2193  013496  6EE6               	movwf	postinc1,c
  2194  013498  EC59  F0C0         	call	_StartTimer	;wreg free
  2195                           
  2196                           ;main.c: 226:    StartTimer(TMR_INFO, 3000);
  2197  01349C  0EB8               	movlw	184
  2198  01349E  6EE6               	movwf	postinc1,c
  2199  0134A0  0E0B               	movlw	11
  2200  0134A2  6EE6               	movwf	postinc1,c
  2201  0134A4  0E07               	movlw	7
  2202  0134A6  6EE6               	movwf	postinc1,c
  2203  0134A8  EC59  F0C0         	call	_StartTimer	;wreg free
  2204                           
  2205                           ;main.c: 227:    StartTimer(TMR_FLIPPER, 1500);
  2206  0134AC  0EDC               	movlw	220
  2207  0134AE  6EE6               	movwf	postinc1,c
  2208  0134B0  0E05               	movlw	5
  2209  0134B2  6EE6               	movwf	postinc1,c
  2210  0134B4  0E0B               	movlw	11
  2211  0134B6  6EE6               	movwf	postinc1,c
  2212  0134B8  EC59  F0C0         	call	_StartTimer	;wreg free
  2213                           
  2214                           ;main.c: 228:    StartTimer(TMR_HELPDIS, 3000);
  2215  0134BC  0EB8               	movlw	184
  2216  0134BE  6EE6               	movwf	postinc1,c
  2217  0134C0  0E0B               	movlw	11
  2218  0134C2  6EE6               	movwf	postinc1,c
  2219  0134C4  0E09               	movlw	9
  2220  0134C6  6EE6               	movwf	postinc1,c
  2221  0134C8  EC59  F0C0         	call	_StartTimer	;wreg free
  2222                           
  2223                           ;main.c: 230:    start_adc_scan();
  2224  0134CC  EC35  F0BD         	call	_start_adc_scan	;wreg free
  2225                           
  2226                           ;main.c: 231:    start_switch_handler();
  2227  0134D0  ECA1  F0C3         	call	_start_switch_handler	;wreg free
  2228                           
  2229                           ;main.c: 233:    break;
  2230  0134D4  D01C               	goto	l10522
  2231  0134D6                     l1256:
  2232                           
  2233                           ; BSR set to: 2
  2234                           ;main.c: 239:    P.SYSTEM_STABLE = 1;
  2235  0134D6  0100               	movlb	0	; () banked
  2236  0134D8  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2237                           
  2238                           ;main.c: 240:    break;
  2239  0134DA  D019               	goto	l10522
  2240  0134DC                     l1258:
  2241                           
  2242                           ; BSR set to: 2
  2243                           ;main.c: 243:    V.ui_state = UI_STATE_INIT;
  2244  0134DC  6B00               	clrf	_V& (0+255),b	;volatile
  2245                           
  2246                           ;main.c: 244:    break;
  2247  0134DE  D017               	goto	l10522
  2248  0134E0                     l10520:
  2249  0134E0  0102               	movlb	2	; () banked
  2250  0134E2  5100               	movf	_V& (0+255),w,b	;volatile
  2251  0134E4  6E3C               	movwf	(btemp+10)^0,c
  2252  0134E6  6A3D               	clrf	(btemp+11)^0,c
  2253                           
  2254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 1, Range of values is 0 to 0
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte            4     3 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  0134E8  503D               	movf	(btemp+11)^0,w,c
  2262  0134EA  0A00               	xorlw	0	; case 0
  2263  0134EC  A4D8               	btfss	status,2,c
  2264  0134EE  D7F6               	goto	l1258
  2265                           
  2266                           ; BSR set to: 2
  2267                           ; Switch size 1, requested type "simple"
  2268                           ; Number of cases is 5, Range of values is 0 to 5
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte           16     9 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273  0134F0  503C               	movf	(btemp+10)^0,w,c
  2274  0134F2  0A00               	xorlw	0	; case 0
  2275  0134F4  B4D8               	btfsc	status,2,c
  2276  0134F6  D724               	goto	l10478
  2277  0134F8  0A01               	xorlw	1	; case 1
  2278  0134FA  B4D8               	btfsc	status,2,c
  2279  0134FC  D008               	goto	l10522
  2280  0134FE  0A02               	xorlw	2	; case 3
  2281  013500  B4D8               	btfsc	status,2,c
  2282  013502  D005               	goto	l10522
  2283  013504  0A07               	xorlw	7	; case 4
  2284  013506  B4D8               	btfsc	status,2,c
  2285  013508  D7E6               	goto	l1256
  2286  01350A  0A01               	xorlw	1	; case 5
  2287  01350C  D7E7               	goto	l1258
  2288  01350E                     l10522:
  2289                           
  2290                           ;main.c: 247:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2291  01350E  0E01               	movlw	1
  2292  013510  6EE6               	movwf	postinc1,c
  2293  013512  EC49  F0C3         	call	_TimerDone	;wreg free
  2294  013516  5032               	movf	btemp^0,w,c
  2295  013518  B4D8               	btfsc	status,2,c
  2296  01351A  D013               	goto	l10534
  2297  01351C  ECCF  F0C4         	call	_check_adc_scan	;wreg free
  2298  013520  5032               	movf	btemp^0,w,c
  2299  013522  B4D8               	btfsc	status,2,c
  2300  013524  D00E               	goto	l10534
  2301                           
  2302                           ;main.c: 251:    convert_adc_data();
  2303  013526  EC26  F0BC         	call	_convert_adc_data	;wreg free
  2304                           
  2305                           ;main.c: 255:    clear_adc_scan();
  2306  01352A  ECD7  F0C4         	call	_clear_adc_scan	;wreg free
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 256:    start_adc_scan();
  2310  01352E  EC35  F0BD         	call	_start_adc_scan	;wreg free
  2311                           
  2312                           ;main.c: 257:    StartTimer(TMR_ADC, 200);
  2313  013532  0EC8               	movlw	200
  2314  013534  6EE6               	movwf	postinc1,c
  2315  013536  0E00               	movlw	0
  2316  013538  6EE6               	movwf	postinc1,c
  2317  01353A  0E01               	movlw	1
  2318  01353C  6EE6               	movwf	postinc1,c
  2319  01353E  EC59  F0C0         	call	_StartTimer	;wreg free
  2320  013542                     l10534:
  2321                           
  2322                           ;main.c: 264:   if (TimerDone(TMR_DISPLAY)) {
  2323                           
  2324                           ;main.c: 260:   if (V.ticks) {
  2325  013542  0E0A               	movlw	10
  2326  013544  6EE6               	movwf	postinc1,c
  2327  013546  EC49  F0C3         	call	_TimerDone	;wreg free
  2328  01354A  5032               	movf	btemp^0,w,c
  2329  01354C  B4D8               	btfsc	status,2,c
  2330  01354E  D113               	goto	l10558
  2331                           
  2332                           ;main.c: 265:    if (TimerDone(TMR_HELPDIS)) {
  2333  013550  0E09               	movlw	9
  2334  013552  6EE6               	movwf	postinc1,c
  2335  013554  EC49  F0C3         	call	_TimerDone	;wreg free
  2336  013558  5032               	movf	btemp^0,w,c
  2337  01355A  B4D8               	btfsc	status,2,c
  2338  01355C  D004               	goto	l10542
  2339                           
  2340                           ;main.c: 266:     set_display_info(DIS_STR);
  2341  01355E  0E00               	movlw	0
  2342  013560  6EE6               	movwf	postinc1,c
  2343  013562  ECCF  F0C3         	call	_set_display_info	;wreg free
  2344  013566                     l10542:
  2345                           
  2346                           ;main.c: 268:    calc_model_data();
  2347  013566  EC56  F0A9         	call	_calc_model_data	;wreg free
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;main.c: 274:    hid_display(&H);
  2351  01356A  0EF6               	movlw	_H& (0+255)
  2352  01356C  6EE6               	movwf	postinc1,c
  2353  01356E  ECAB  F0B9         	call	_hid_display	;wreg free
  2354                           
  2355                           ;main.c: 275:    switch (H.hid_display) {
  2356  013572  D0E6               	goto	l10552
  2357  013574                     l10546:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 277:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2361  013574  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2362  01357A  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2363  013580  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2364  013586  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2365  01358C  0EEC               	movlw	low STR_9
  2366  01358E  6EE6               	movwf	postinc1,c
  2367  013590  0EFE               	movlw	high STR_9
  2368  013592  6EE6               	movwf	postinc1,c
  2369  013594  0E00               	movlw	0
  2370  013596  6EE6               	movwf	postinc1,c
  2371  013598  0E00               	movlw	0
  2372  01359A  6EE6               	movwf	postinc1,c
  2373  01359C  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2374  0135A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2375  0135A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2376  0135AC  0E08               	movlw	8
  2377  0135AE  6EE6               	movwf	postinc1,c
  2378  0135B0  ECC0  F0B5         	call	_sprintf	;wreg free
  2379                           
  2380                           ;main.c: 278:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2381  0135B4  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2382  0135BA  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2383  0135C0  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2384  0135C6  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2385  0135CC  0E12               	movlw	low STR_10
  2386  0135CE  6EE6               	movwf	postinc1,c
  2387  0135D0  0EFF               	movlw	high STR_10
  2388  0135D2  6EE6               	movwf	postinc1,c
  2389  0135D4  0E00               	movlw	0
  2390  0135D6  6EE6               	movwf	postinc1,c
  2391  0135D8  0E01               	movlw	1
  2392  0135DA  6EE6               	movwf	postinc1,c
  2393  0135DC  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2394  0135E0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2395  0135E6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2396  0135EC  0E08               	movlw	8
  2397  0135EE  6EE6               	movwf	postinc1,c
  2398  0135F0  ECC0  F0B5         	call	_sprintf	;wreg free
  2399                           
  2400                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2401  0135F4  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2402  0135FA  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2403  013600  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2404  013606  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2405  01360C  0EFF               	movlw	low STR_11
  2406  01360E  6EE6               	movwf	postinc1,c
  2407  013610  0EFE               	movlw	high STR_11
  2408  013612  6EE6               	movwf	postinc1,c
  2409  013614  0E00               	movlw	0
  2410  013616  6EE6               	movwf	postinc1,c
  2411  013618  0E02               	movlw	2
  2412  01361A  6EE6               	movwf	postinc1,c
  2413  01361C  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2414  013620  0060  F0CB  FFE6   	movff	btemp,postinc1
  2415  013626  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2416  01362C  0E08               	movlw	8
  2417  01362E  6EE6               	movwf	postinc1,c
  2418  013630  ECC0  F0B5         	call	_sprintf	;wreg free
  2419                           
  2420                           ;main.c: 280:     break;
  2421  013634  D094               	goto	l10554
  2422  013636                     l10548:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 282:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2426  013636  0060  F413  FFE6   	movff	_C+4,postinc1
  2427  01363C  0060  F417  FFE6   	movff	_C+5,postinc1
  2428  013642  0060  F41B  FFE6   	movff	_C+6,postinc1
  2429  013648  0060  F41F  FFE6   	movff	_C+7,postinc1
  2430  01364E  0060  F453  FFE6   	movff	_C+20,postinc1
  2431  013654  0060  F457  FFE6   	movff	_C+21,postinc1
  2432  01365A  0060  F45B  FFE6   	movff	_C+22,postinc1
  2433  013660  0060  F45F  FFE6   	movff	_C+23,postinc1
  2434  013666  0E4B               	movlw	low STR_12
  2435  013668  6EE6               	movwf	postinc1,c
  2436  01366A  0EFF               	movlw	high STR_12
  2437  01366C  6EE6               	movwf	postinc1,c
  2438  01366E  0E00               	movlw	0
  2439  013670  6EE6               	movwf	postinc1,c
  2440  013672  0E00               	movlw	0
  2441  013674  6EE6               	movwf	postinc1,c
  2442  013676  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2443  01367A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2444  013680  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2445  013686  0E0C               	movlw	12
  2446  013688  6EE6               	movwf	postinc1,c
  2447  01368A  ECC0  F0B5         	call	_sprintf	;wreg free
  2448                           
  2449                           ;main.c: 283:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2450  01368E  0060  F403  FFE6   	movff	_C,postinc1
  2451  013694  0060  F407  FFE6   	movff	_C+1,postinc1
  2452  01369A  0060  F40B  FFE6   	movff	_C+2,postinc1
  2453  0136A0  0060  F40F  FFE6   	movff	_C+3,postinc1
  2454  0136A6  0060  F443  FFE6   	movff	_C+16,postinc1
  2455  0136AC  0060  F447  FFE6   	movff	_C+17,postinc1
  2456  0136B2  0060  F44B  FFE6   	movff	_C+18,postinc1
  2457  0136B8  0060  F44F  FFE6   	movff	_C+19,postinc1
  2458  0136BE  0E25               	movlw	low STR_13
  2459  0136C0  6EE6               	movwf	postinc1,c
  2460  0136C2  0EFF               	movlw	high STR_13
  2461  0136C4  6EE6               	movwf	postinc1,c
  2462  0136C6  0E00               	movlw	0
  2463  0136C8  6EE6               	movwf	postinc1,c
  2464  0136CA  0E01               	movlw	1
  2465  0136CC  6EE6               	movwf	postinc1,c
  2466  0136CE  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2467  0136D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2468  0136D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2469  0136DE  0E0C               	movlw	12
  2470  0136E0  6EE6               	movwf	postinc1,c
  2471  0136E2  ECC0  F0B5         	call	_sprintf	;wreg free
  2472                           
  2473                           ;main.c: 284:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2474  0136E6  0060  F503  FFE6   	movff	_C+64,postinc1
  2475  0136EC  0060  F507  FFE6   	movff	_C+65,postinc1
  2476  0136F2  0060  F50B  FFE6   	movff	_C+66,postinc1
  2477  0136F8  0060  F50F  FFE6   	movff	_C+67,postinc1
  2478  0136FE  0060  F423  FFE6   	movff	_C+8,postinc1
  2479  013704  0060  F427  FFE6   	movff	_C+9,postinc1
  2480  01370A  0060  F42B  FFE6   	movff	_C+10,postinc1
  2481  013710  0060  F42F  FFE6   	movff	_C+11,postinc1
  2482  013716  0E38               	movlw	low STR_14
  2483  013718  6EE6               	movwf	postinc1,c
  2484  01371A  0EFF               	movlw	high STR_14
  2485  01371C  6EE6               	movwf	postinc1,c
  2486  01371E  0E00               	movlw	0
  2487  013720  6EE6               	movwf	postinc1,c
  2488  013722  0E02               	movlw	2
  2489  013724  6EE6               	movwf	postinc1,c
  2490  013726  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  2491  01372A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2492  013730  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2493  013736  0E0C               	movlw	12
  2494  013738  6EE6               	movwf	postinc1,c
  2495  01373A  ECC0  F0B5         	call	_sprintf	;wreg free
  2496                           
  2497                           ;main.c: 285:     break;
  2498  01373E  D00F               	goto	l10554
  2499  013740                     l10552:
  2500  013740  0100               	movlb	0	; () banked
  2501  013742  51F6               	movf	_H& (0+255),w,b
  2502  013744  6E3C               	movwf	(btemp+10)^0,c
  2503  013746  6A3D               	clrf	(btemp+11)^0,c
  2504                           
  2505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2506                           ; Switch size 1, requested type "simple"
  2507                           ; Number of cases is 1, Range of values is 0 to 0
  2508                           ; switch strategies available:
  2509                           ; Name         Instructions Cycles
  2510                           ; simple_byte            4     3 (average)
  2511                           ;	Chosen strategy is simple_byte
  2512  013748  503D               	movf	(btemp+11)^0,w,c
  2513  01374A  0A00               	xorlw	0	; case 0
  2514  01374C  A4D8               	btfss	status,2,c
  2515  01374E  D007               	goto	l10554
  2516                           
  2517                           ; BSR set to: 0
  2518                           ; Switch size 1, requested type "simple"
  2519                           ; Number of cases is 2, Range of values is 0 to 1
  2520                           ; switch strategies available:
  2521                           ; Name         Instructions Cycles
  2522                           ; simple_byte            7     4 (average)
  2523                           ;	Chosen strategy is simple_byte
  2524  013750  503C               	movf	(btemp+10)^0,w,c
  2525  013752  0A00               	xorlw	0	; case 0
  2526  013754  B4D8               	btfsc	status,2,c
  2527  013756  D76F               	goto	l10548
  2528  013758  0A01               	xorlw	1	; case 1
  2529  01375A  B4D8               	btfsc	status,2,c
  2530  01375C  D70B               	goto	l10546
  2531  01375E                     l10554:
  2532                           
  2533                           ;main.c: 290:    StartTimer(TMR_DISPLAY, 250);
  2534  01375E  0EFA               	movlw	250
  2535  013760  6EE6               	movwf	postinc1,c
  2536  013762  0E00               	movlw	0
  2537  013764  6EE6               	movwf	postinc1,c
  2538  013766  0E0A               	movlw	10
  2539  013768  6EE6               	movwf	postinc1,c
  2540  01376A  EC59  F0C0         	call	_StartTimer	;wreg free
  2541                           
  2542                           ;main.c: 291:    update_lcd(0);
  2543  01376E  0E00               	movlw	0
  2544  013770  6EE6               	movwf	postinc1,c
  2545  013772  EC39  F0B5         	call	_update_lcd	;wreg free
  2546  013776                     l10558:
  2547                           
  2548                           ;main.c: 297:   if (check_help(V.flipper)) {
  2549  013776  0102               	movlb	2	; () banked
  2550  013778  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2551  01377A  6EE6               	movwf	postinc1,c
  2552  01377C  ECA0  F0AB         	call	_check_help	;wreg free
  2553                           
  2554                           ;main.c: 333:   if (V.set_sequ) {
  2555                           
  2556                           ;main.c: 328:   };
  2557  013780  0102               	movlb	2	; () banked
  2558  013782  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2559  013784  D6AD               	goto	l10520
  2560                           
  2561                           ; BSR set to: 2
  2562                           ;main.c: 334:    if (TimerDone(TMR_INFO)) {
  2563  013786  0E07               	movlw	7
  2564  013788  6EE6               	movwf	postinc1,c
  2565  01378A  EC49  F0C3         	call	_TimerDone	;wreg free
  2566  01378E  5032               	movf	btemp^0,w,c
  2567  013790  B4D8               	btfsc	status,2,c
  2568  013792  D00B               	goto	l10568
  2569                           
  2570                           ;main.c: 335:     V.set_sequ = 0;
  2571  013794  0102               	movlb	2	; () banked
  2572  013796  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2573                           
  2574                           ; BSR set to: 2
  2575                           ;main.c: 336:     set_vterm(0);
  2576  013798  0E00               	movlw	0
  2577  01379A  6EE6               	movwf	postinc1,c
  2578  01379C  EC0A  F0C4         	call	_set_vterm	;wreg free
  2579                           
  2580                           ; BSR set to: 5
  2581                           ;main.c: 337:     update_lcd(0);
  2582  0137A0  0E00               	movlw	0
  2583  0137A2  6EE6               	movwf	postinc1,c
  2584  0137A4  EC39  F0B5         	call	_update_lcd	;wreg free
  2585                           
  2586                           ;main.c: 338:    } else {
  2587  0137A8  D69B               	goto	l10520
  2588  0137AA                     l10568:
  2589                           
  2590                           ;main.c: 339:     set_vterm(2);
  2591  0137AA  0E02               	movlw	2
  2592  0137AC  6EE6               	movwf	postinc1,c
  2593  0137AE  EC0A  F0C4         	call	_set_vterm	;wreg free
  2594                           
  2595                           ; BSR set to: 5
  2596                           ;main.c: 340:     update_lcd(2);
  2597  0137B2  0E02               	movlw	2
  2598  0137B4  6EE6               	movwf	postinc1,c
  2599  0137B6  EC39  F0B5         	call	_update_lcd	;wreg free
  2600  0137BA  D692               	goto	l10520
  2601  0137BC                     __end_of_main:
  2602                           	opt callstack 0
  2603                           
  2604 ;; *************** function _start_switch_handler *****************
  2605 ;; Defined at:
  2606 ;;		line 119 in file "dio.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1  [STACK] void 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2615 ;; Tracked objects:
  2616 ;;		On entry : 1/4
  2617 ;;		On exit  : 3F/39
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    7
  2627 ;; This function calls:
  2628 ;;		_INT1_SetInterruptHandler
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text1
  2635  018742                     __ptext1:
  2636                           	opt callstack 0
  2637  018742                     _start_switch_handler:
  2638                           	opt callstack 23
  2639                           
  2640                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2641                           
  2642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2643                           ;incstack = 0
  2644  018742  0139               	movlb	57	; () banked
  2645  018744  9195               	bcf	149,0,b	;volatile
  2646                           
  2647                           ; BSR set to: 57
  2648                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2649  018746  0EAC               	movlw	low _switch_handler
  2650  018748  6EE6               	movwf	postinc1,c
  2651  01874A  0E64               	movlw	high _switch_handler
  2652  01874C  6EE6               	movwf	postinc1,c
  2653  01874E  0E01               	movlw	low (_switch_handler shr (0+16))
  2654  018750  6EE6               	movwf	postinc1,c
  2655  018752  EC95  F0C2         	call	_INT1_SetInterruptHandler	;wreg free
  2656                           
  2657                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2658  018756  0E02               	movlw	2
  2659  018758  0100               	movlb	0	; () banked
  2660  01875A  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2664  01875C  0139               	movlb	57	; () banked
  2665  01875E  8195               	bsf	149,0,b	;volatile
  2666                           
  2667                           ; BSR set to: 57
  2668                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2669  018760  0012               	return		;funcret
  2670  018762                     __end_of_start_switch_handler:
  2671                           	opt callstack 0
  2672                           
  2673 ;; *************** function _start_adc_scan *****************
  2674 ;; Defined at:
  2675 ;;		line 33 in file "daq.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1  [STACK] _Bool 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/5
  2686 ;;		On exit  : 1/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    7
  2696 ;; This function calls:
  2697 ;;		_ADCC_DischargeSampleCapacitor
  2698 ;;		_ADCC_SetADIInterruptHandler
  2699 ;;		_ADCC_SetADTIInterruptHandler
  2700 ;;		_ADCC_StartConversion
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text2
  2707  017A6A                     __ptext2:
  2708                           	opt callstack 0
  2709  017A6A                     _start_adc_scan:
  2710                           	opt callstack 23
  2711                           
  2712                           ;daq.c: 35:  if (R.done)
  2713                           
  2714                           ; BSR set to: 57
  2715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2716                           ;incstack = 0
  2717  017A6A  0100               	movlb	0	; () banked
  2718  017A6C  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2719  017A6E  A4D8               	btfss	status,2,c
  2720  017A70  0012               	return	
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;daq.c: 38:  R.scan_index = 0;
  2724  017A72  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2728  017A74  013A               	movlb	58	; () banked
  2729  017A76  5140               	movf	64,w,b	;volatile
  2730  017A78  006E F940  F032    	movff	14928,btemp	;volatile
  2731  017A7E  6A33               	clrf	(btemp+1)^0,c
  2732  017A80  0060  F0C8  F033   	movff	btemp,btemp+1
  2733  017A86  6A32               	clrf	btemp^0,c
  2734  017A88  2632               	addwf	btemp^0,f,c
  2735  017A8A  0E00               	movlw	0
  2736  017A8C  2233               	addwfc	(btemp+1)^0,f,c
  2737  017A8E  0E77               	movlw	119
  2738  017A90  1432               	andwf	btemp^0,w,c
  2739  017A92  0100               	movlb	0	; () banked
  2740  017A94  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2741  017A96  0E3C               	movlw	60
  2742  017A98  1433               	andwf	(btemp+1)^0,w,c
  2743  017A9A  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2747  017A9C  0ECC               	movlw	low _adc_int_handler
  2748  017A9E  6EE6               	movwf	postinc1,c
  2749  017AA0  0E89               	movlw	high _adc_int_handler
  2750  017AA2  6EE6               	movwf	postinc1,c
  2751  017AA4  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2752  017AA6  6EE6               	movwf	postinc1,c
  2753  017AA8  ECD1  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2754                           
  2755                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2756  017AAC  0ECE               	movlw	low _adc_int_t_handler
  2757  017AAE  6EE6               	movwf	postinc1,c
  2758  017AB0  0E77               	movlw	high _adc_int_t_handler
  2759  017AB2  6EE6               	movwf	postinc1,c
  2760  017AB4  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2761  017AB6  6EE6               	movwf	postinc1,c
  2762  017AB8  ECBD  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2763                           
  2764                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2765  017ABC  ECC3  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2766                           
  2767                           ; BSR set to: 62
  2768                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2769  017AC0  0100               	movlb	0	; () banked
  2770  017AC2  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2771  017AC4  0B0F               	andlw	15
  2772  017AC6  6EE6               	movwf	postinc1,c
  2773  017AC8  EC76  F0C4         	call	_ADCC_StartConversion	;wreg free
  2774                           
  2775                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2776  017ACC  0012               	return		;funcret
  2777  017ACE                     __end_of_start_adc_scan:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _ADCC_StartConversion *****************
  2781 ;; Defined at:
  2782 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  channel         1  [STACK] enum E16136
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1  [STACK] void 
  2789 ;; Registers used:
  2790 ;;		fsr1l, fsr1h
  2791 ;; Tracked objects:
  2792 ;;		On entry : 3F/0
  2793 ;;		On exit  : 3F/3E
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    6
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_start_adc_scan
  2807 ;;		_adc_int_t_handler
  2808 ;; This function uses a reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text3
  2812  0188EC                     __ptext3:
  2813                           	opt callstack 0
  2814  0188EC                     _ADCC_StartConversion:
  2815                           	opt callstack 6
  2816                           
  2817                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2818                           ;stkvar	_channel @ sp[(0)+-1]
  2819                           
  2820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2821                           ;incstack = 0
  2822  0188EC  0EFF               	movlw	-1
  2823  0188EE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2824                           
  2825                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2826  0188F4  013E               	movlb	62	; () banked
  2827  0188F6  8FF8               	bsf	248,7,b	;volatile
  2828                           
  2829                           ; BSR set to: 62
  2830                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2831  0188F8  81F8               	bsf	248,0,b	;volatile
  2832                           
  2833                           ; BSR set to: 62
  2834                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2835  0188FA  52E5               	movf	postdec1,f,c
  2836  0188FC  0012               	return		;funcret
  2837  0188FE                     __end_of_ADCC_StartConversion:
  2838                           	opt callstack 0
  2839                           
  2840 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2841 ;; Defined at:
  2842 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1  [STACK] void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 3F/3E
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    6
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_start_adc_scan
  2867 ;;		_adc_int_t_handler
  2868 ;; This function uses a reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text4
  2872  018986                     __ptext4:
  2873                           	opt callstack 0
  2874  018986                     _ADCC_DischargeSampleCapacitor:
  2875                           	opt callstack 6
  2876                           
  2877                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2878                           
  2879                           ; BSR set to: 62
  2880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2881                           ;incstack = 0
  2882  018986  0E3B               	movlw	59
  2883  018988  013E               	movlb	62	; () banked
  2884  01898A  6FF1               	movwf	241,b	;volatile
  2885                           
  2886                           ; BSR set to: 62
  2887                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2888  01898C  0012               	return		;funcret
  2889  01898E                     __end_of_ADCC_DischargeSampleCapacitor:
  2890                           	opt callstack 0
  2891                           
  2892 ;; *************** function _srand *****************
  2893 ;; Defined at:
  2894 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  s               2  [STACK] unsigned int 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1  [STACK] void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2903 ;; Tracked objects:
  2904 ;;		On entry : 3F/0
  2905 ;;		On exit  : 3F/1
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    6
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text5
  2923  0181C8                     __ptext5:
  2924                           	opt callstack 0
  2925  0181C8                     _srand:
  2926                           	opt callstack 24
  2927                           
  2928                           ;stkvar	_s @ sp[(0)+-2]
  2929                           
  2930                           ; BSR set to: 62
  2931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2932                           ;incstack = 0
  2933  0181C8  0EFE               	movlw	-2
  2934  0181CA  50E3               	movf	plusw1,w,c
  2935  0181CC  0FFF               	addlw	255
  2936  0181CE  6E3C               	movwf	(btemp+10)^0,c
  2937  0181D0  0EFF               	movlw	-1
  2938  0181D2  006F FF8C  F03D    	movff	plusw1,btemp+11
  2939  0181D8  0EFF               	movlw	255
  2940  0181DA  223D               	addwfc	(btemp+11)^0,f,c
  2941  0181DC  0060  F0F0  F1C8   	movff	btemp+10,_seed
  2942  0181E2  0060  F0F4  F1C9   	movff	btemp+11,_seed+1
  2943  0181E8  0101               	movlb	1	; () banked
  2944  0181EA  6BCA               	clrf	(_seed+2)& (0+255),b
  2945  0181EC  6BCB               	clrf	(_seed+3)& (0+255),b
  2946  0181EE  6BCC               	clrf	(_seed+4)& (0+255),b
  2947  0181F0  6BCD               	clrf	(_seed+5)& (0+255),b
  2948  0181F2  6BCE               	clrf	(_seed+6)& (0+255),b
  2949  0181F4  6BCF               	clrf	(_seed+7)& (0+255),b
  2950                           
  2951                           ; BSR set to: 1
  2952                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2953  0181F6  52E5               	movf	postdec1,f,c
  2954  0181F8  52E5               	movf	postdec1,f,c
  2955  0181FA  0012               	return		;funcret
  2956  0181FC                     __end_of_srand:
  2957                           	opt callstack 0
  2958                           
  2959 ;; *************** function _init_display *****************
  2960 ;; Defined at:
  2961 ;;		line 37 in file "eadog.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1  [STACK] void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/2
  2972 ;;		On exit  : 3F/3D
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    8
  2982 ;; This function calls:
  2983 ;;		_ringBufS_init
  2984 ;;		_send_lcd_cmd
  2985 ;;		_send_lcd_cmd_long
  2986 ;;		_wdtdelay
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text6
  2993  016D7E                     __ptext6:
  2994                           	opt callstack 0
  2995  016D7E                     _init_display:
  2996                           	opt callstack 22
  2997                           
  2998                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2999                           
  3000                           ; BSR set to: 1
  3001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3002                           ;incstack = 0
  3003  016D7E  0E90               	movlw	low _ring_buf1
  3004  016D80  0100               	movlb	0	; () banked
  3005  016D82  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3006  016D84  0E03               	movlw	high _ring_buf1
  3007  016D86  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3008                           
  3009                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3010  016D88  0E00               	movlw	low _ring_buf2
  3011  016D8A  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3012  016D8C  0E04               	movlw	high _ring_buf2
  3013  016D8E  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3017  016D90  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3018  016D96  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3019  016D9C  ECF5  F0C1         	call	_ringBufS_init	;wreg free
  3020                           
  3021                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3022  016DA0  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3023  016DA6  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3024  016DAC  ECF5  F0C1         	call	_ringBufS_init	;wreg free
  3025                           
  3026                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3027  016DB0  84BE               	bsf	190,2,c	;volatile
  3028  016DB2  84BC               	bsf	188,2,c	;volatile
  3029                           
  3030                           ;eadog.c: 46:  wdtdelay(350000);
  3031  016DB4  0E30               	movlw	48
  3032  016DB6  6EE6               	movwf	postinc1,c
  3033  016DB8  0E57               	movlw	87
  3034  016DBA  6EE6               	movwf	postinc1,c
  3035  016DBC  0E05               	movlw	5
  3036  016DBE  6EE6               	movwf	postinc1,c
  3037  016DC0  0E00               	movlw	0
  3038  016DC2  6EE6               	movwf	postinc1,c
  3039  016DC4  EC58  F0BE         	call	_wdtdelay	;wreg free
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3043  016DC8  0E39               	movlw	57
  3044  016DCA  6EE6               	movwf	postinc1,c
  3045  016DCC  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3049  016DD0  0E1D               	movlw	29
  3050  016DD2  6EE6               	movwf	postinc1,c
  3051  016DD4  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3055  016DD8  0E50               	movlw	80
  3056  016DDA  6EE6               	movwf	postinc1,c
  3057  016DDC  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3061  016DE0  0E6C               	movlw	108
  3062  016DE2  6EE6               	movwf	postinc1,c
  3063  016DE4  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3067  016DE8  0E76               	movlw	118
  3068  016DEA  6EE6               	movwf	postinc1,c
  3069  016DEC  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3073  016DF0  0E38               	movlw	56
  3074  016DF2  6EE6               	movwf	postinc1,c
  3075  016DF4  ECCD  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3079  016DF8  0E0F               	movlw	15
  3080  016DFA  6EE6               	movwf	postinc1,c
  3081  016DFC  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3085  016E00  0E01               	movlw	1
  3086  016E02  6EE6               	movwf	postinc1,c
  3087  016E04  ECCD  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3091  016E08  0E02               	movlw	2
  3092  016E0A  6EE6               	movwf	postinc1,c
  3093  016E0C  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3097  016E10  0E06               	movlw	6
  3098  016E12  6EE6               	movwf	postinc1,c
  3099  016E14  ECE1  F0C1         	call	_send_lcd_cmd	;wreg free
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;eadog.c: 57:  wdtdelay(30);
  3103  016E18  0E1E               	movlw	30
  3104  016E1A  6EE6               	movwf	postinc1,c
  3105  016E1C  0E00               	movlw	0
  3106  016E1E  6EE6               	movwf	postinc1,c
  3107  016E20  0E00               	movlw	0
  3108  016E22  6EE6               	movwf	postinc1,c
  3109  016E24  0E00               	movlw	0
  3110  016E26  6EE6               	movwf	postinc1,c
  3111  016E28  EC58  F0BE         	call	_wdtdelay	;wreg free
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3115  016E2C  0E02               	movlw	2
  3116  016E2E  013D               	movlb	61	; () banked
  3117  016E30  6F16               	movwf	22,b	;volatile
  3118                           
  3119                           ; BSR set to: 61
  3120                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3121  016E32  0E40               	movlw	64
  3122  016E34  6F15               	movwf	21,b	;volatile
  3123                           
  3124                           ; BSR set to: 61
  3125                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3126  016E36  0E83               	movlw	131
  3127  016E38  6F14               	movwf	20,b	;volatile
  3128                           
  3129                           ; BSR set to: 61
  3130                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3131  016E3A  931A               	bcf	26,1,b	;volatile
  3132                           
  3133                           ; BSR set to: 61
  3134                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3135  016E3C  0E3F               	movlw	-193
  3136  016E3E  013B               	movlb	59	; () banked
  3137  016E40  17FD               	andwf	253,f,b	;volatile
  3138                           
  3139                           ; BSR set to: 59
  3140                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3141  016E42  9BFD               	bcf	253,5,b	;volatile
  3142                           
  3143                           ; BSR set to: 59
  3144                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3145  016E44  51FD               	movf	253,w,b	;volatile
  3146  016E46  0BF9               	andlw	-7
  3147  016E48  0902               	iorlw	2
  3148  016E4A  6FFD               	movwf	253,b	;volatile
  3149                           
  3150                           ; BSR set to: 59
  3151                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3152  016E4C  0EE7               	movlw	-25
  3153  016E4E  17FD               	andwf	253,f,b	;volatile
  3154                           
  3155                           ; BSR set to: 59
  3156                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3157  016E50  81FD               	bsf	253,0,b	;volatile
  3158                           
  3159                           ; BSR set to: 59
  3160                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3161  016E52  0E90               	movlw	low _ring_buf1
  3162  016E54  6FF9               	movwf	249,b	;volatile
  3163  016E56  0E03               	movlw	high _ring_buf1
  3164  016E58  6FFA               	movwf	250,b	;volatile
  3165  016E5A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3166  016E5C  6FFB               	movwf	251,b	;volatile
  3167                           
  3168                           ; BSR set to: 59
  3169                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3170  016E5E  9BFC               	bcf	252,5,b	;volatile
  3171                           
  3172                           ; BSR set to: 59
  3173                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3174  016E60  013D               	movlb	61	; () banked
  3175  016E62  831A               	bsf	26,1,b	;volatile
  3176                           
  3177                           ; BSR set to: 61
  3178                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3179  016E64  94BE               	bcf	190,2,c	;volatile
  3180                           
  3181                           ; BSR set to: 61
  3182                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3183  016E66  0012               	return		;funcret
  3184  016E68                     __end_of_init_display:
  3185                           	opt callstack 0
  3186                           
  3187 ;; *************** function _send_lcd_cmd_long *****************
  3188 ;; Defined at:
  3189 ;;		line 114 in file "eadog.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  cmd             1  [STACK] const unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1  [STACK] void 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3198 ;; Tracked objects:
  3199 ;;		On entry : 3F/0
  3200 ;;		On exit  : 3F/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    7
  3210 ;; This function calls:
  3211 ;;		_SPI1_Exchange8bit
  3212 ;;		_wdtdelay
  3213 ;; This function is called by:
  3214 ;;		_init_display
  3215 ;; This function uses a reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text7
  3219  01839A                     __ptext7:
  3220                           	opt callstack 0
  3221  01839A                     _send_lcd_cmd_long:
  3222                           	opt callstack 22
  3223                           
  3224                           ; BSR set to: 61
  3225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3226                           ;incstack = 0
  3227                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3228  01839A  92BC               	bcf	188,1,c	;volatile
  3229                           
  3230                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3231  01839C  94BC               	bcf	188,2,c	;volatile
  3232                           
  3233                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3234                           ;stkvar	_cmd @ sp[(0)+-1]
  3235  01839E  0EFF               	movlw	-1
  3236  0183A0  50E3               	movf	plusw1,w,c
  3237  0183A2  6EE6               	movwf	postinc1,c
  3238  0183A4  ECB1  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3239                           
  3240                           ; BSR set to: 57
  3241                           ;eadog.c: 119:  wdtdelay(800);
  3242  0183A8  0E20               	movlw	32
  3243  0183AA  6EE6               	movwf	postinc1,c
  3244  0183AC  0E03               	movlw	3
  3245  0183AE  6EE6               	movwf	postinc1,c
  3246  0183B0  0E00               	movlw	0
  3247  0183B2  6EE6               	movwf	postinc1,c
  3248  0183B4  0E00               	movlw	0
  3249  0183B6  6EE6               	movwf	postinc1,c
  3250  0183B8  EC58  F0BE         	call	_wdtdelay	;wreg free
  3251                           
  3252                           ; BSR set to: 0
  3253  0183BC  82BC               	bsf	188,1,c	;volatile
  3254                           
  3255                           ; BSR set to: 0
  3256                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3257  0183BE  52E5               	movf	postdec1,f,c
  3258  0183C0  0012               	return		;funcret
  3259  0183C2                     __end_of_send_lcd_cmd_long:
  3260                           	opt callstack 0
  3261                           
  3262 ;; *************** function _send_lcd_cmd *****************
  3263 ;; Defined at:
  3264 ;;		line 102 in file "eadog.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  cmd             1  [STACK] const unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1  [STACK] void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3273 ;; Tracked objects:
  3274 ;;		On entry : 3F/0
  3275 ;;		On exit  : 3F/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    7
  3285 ;; This function calls:
  3286 ;;		_SPI1_Exchange8bit
  3287 ;;		_wdtdelay
  3288 ;; This function is called by:
  3289 ;;		_init_display
  3290 ;; This function uses a reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text8
  3294  0183C2                     __ptext8:
  3295                           	opt callstack 0
  3296  0183C2                     _send_lcd_cmd:
  3297                           	opt callstack 22
  3298                           
  3299                           ; BSR set to: 0
  3300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3301                           ;incstack = 0
  3302                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3303  0183C2  92BC               	bcf	188,1,c	;volatile
  3304                           
  3305                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3306  0183C4  94BC               	bcf	188,2,c	;volatile
  3307                           
  3308                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3309                           ;stkvar	_cmd @ sp[(0)+-1]
  3310  0183C6  0EFF               	movlw	-1
  3311  0183C8  50E3               	movf	plusw1,w,c
  3312  0183CA  6EE6               	movwf	postinc1,c
  3313  0183CC  ECB1  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3314                           
  3315                           ; BSR set to: 57
  3316                           ;eadog.c: 107:  wdtdelay(30);
  3317  0183D0  0E1E               	movlw	30
  3318  0183D2  6EE6               	movwf	postinc1,c
  3319  0183D4  0E00               	movlw	0
  3320  0183D6  6EE6               	movwf	postinc1,c
  3321  0183D8  0E00               	movlw	0
  3322  0183DA  6EE6               	movwf	postinc1,c
  3323  0183DC  0E00               	movlw	0
  3324  0183DE  6EE6               	movwf	postinc1,c
  3325  0183E0  EC58  F0BE         	call	_wdtdelay	;wreg free
  3326                           
  3327                           ; BSR set to: 0
  3328  0183E4  82BC               	bsf	188,1,c	;volatile
  3329                           
  3330                           ; BSR set to: 0
  3331                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3332  0183E6  52E5               	movf	postdec1,f,c
  3333  0183E8  0012               	return		;funcret
  3334  0183EA                     __end_of_send_lcd_cmd:
  3335                           	opt callstack 0
  3336                           
  3337 ;; *************** function _SPI1_Exchange8bit *****************
  3338 ;; Defined at:
  3339 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  data            1  [STACK] unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1  [STACK] unsigned char 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 3F/39
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    6
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_send_lcd_cmd
  3364 ;;		_send_lcd_cmd_long
  3365 ;; This function uses a reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text9
  3369  018762                     __ptext9:
  3370                           	opt callstack 0
  3371  018762                     _SPI1_Exchange8bit:
  3372                           	opt callstack 22
  3373                           
  3374                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3375                           
  3376                           ; BSR set to: 0
  3377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3378                           ;incstack = 0
  3379  018762  0E01               	movlw	1
  3380  018764  013D               	movlb	61	; () banked
  3381  018766  6F12               	movwf	18,b	;volatile
  3382                           
  3383                           ; BSR set to: 61
  3384                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3385                           ;stkvar	_data @ sp[(0)+-1]
  3386  018768  0EFF               	movlw	-1
  3387  01876A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3388  018770                     l835:
  3389                           
  3390                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3391  018770  0139               	movlb	57	; () banked
  3392  018772  A9A2               	btfss	162,4,b	;volatile
  3393  018774  D7FD               	goto	l835
  3394                           
  3395                           ; BSR set to: 57
  3396                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3397  018776  006F F440  F032    	movff	15632,btemp	;volatile
  3398                           
  3399                           ; BSR set to: 57
  3400                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3401  01877C  52E5               	movf	postdec1,f,c
  3402  01877E  0012               	return		;funcret
  3403  018780                     __end_of_SPI1_Exchange8bit:
  3404                           	opt callstack 0
  3405                           
  3406 ;; *************** function _ringBufS_init *****************
  3407 ;; Defined at:
  3408 ;;		line 22 in file "ringbufs.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  _this           2  [STACK] PTR volatile struct ring
  3411 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1  [STACK] void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    7
  3430 ;; This function calls:
  3431 ;;		_memset
  3432 ;; This function is called by:
  3433 ;;		_init_display
  3434 ;; This function uses a reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text10
  3438  0183EA                     __ptext10:
  3439                           	opt callstack 0
  3440  0183EA                     _ringBufS_init:
  3441                           	opt callstack 22
  3442                           
  3443                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3444                           
  3445                           ; BSR set to: 57
  3446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3447                           ;incstack = 0
  3448  0183EA  0E43               	movlw	67
  3449  0183EC  6EE6               	movwf	postinc1,c
  3450  0183EE  0E00               	movlw	0
  3451  0183F0  6EE6               	movwf	postinc1,c
  3452  0183F2  0E00               	movlw	0
  3453  0183F4  6EE6               	movwf	postinc1,c
  3454  0183F6  0E00               	movlw	0
  3455  0183F8  6EE6               	movwf	postinc1,c
  3456                           
  3457                           ;stkvar	__this @ sp[(-4)+-2]
  3458  0183FA  0EFA               	movlw	-6
  3459  0183FC  006F FF8F FFE6     	movff	plusw1,postinc1
  3460  018402  006F FF8F FFE6     	movff	plusw1,postinc1
  3461  018408  EC07  F0A4         	call	_memset	;wreg free
  3462                           
  3463                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3464  01840C  52E5               	movf	postdec1,f,c
  3465  01840E  52E5               	movf	postdec1,f,c
  3466  018410  0012               	return		;funcret
  3467  018412                     __end_of_ringBufS_init:
  3468                           	opt callstack 0
  3469                           
  3470 ;; *************** function _hid_display *****************
  3471 ;; Defined at:
  3472 ;;		line 17 in file "hid.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  h               1  [STACK] PTR struct H_data
  3475 ;;		 -> H(6), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1  [STACK] PTR struct H_data
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3482 ;; Tracked objects:
  3483 ;;		On entry : 3F/1
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    8
  3494 ;; This function calls:
  3495 ;;		_hid_input
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text11
  3502  017356                     __ptext11:
  3503                           	opt callstack 0
  3504  017356                     _hid_display:
  3505                           	opt callstack 22
  3506                           
  3507                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  3508                           ;stkvar	_h @ sp[(0)+-1]
  3509                           
  3510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3511                           ;incstack = 0
  3512  017356  0EFF               	movlw	-1
  3513  017358  50E3               	movf	plusw1,w,c
  3514  01735A  6EE6               	movwf	postinc1,c
  3515  01735C  ECD7  F0BA         	call	_hid_input	;wreg free
  3516                           
  3517                           ;hid.c: 21:  switch (h->h_state) {
  3518  017360  D033               	goto	l9066
  3519  017362                     l9050:
  3520                           
  3521                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  3522                           ;stkvar	_h @ sp[(0)+-1]
  3523  017362  0EFF               	movlw	-1
  3524  017364  50E3               	movf	plusw1,w,c
  3525  017366  6ED9               	movwf	fsr2l,c
  3526  017368  6ADA               	clrf	fsr2h,c
  3527  01736A  0E01               	movlw	1
  3528  01736C  26D9               	addwf	fsr2l,f,c
  3529  01736E  0E01               	movlw	1
  3530  017370  6EDF               	movwf	indf2,c
  3531                           
  3532                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  3533                           ;stkvar	_h @ sp[(0)+-1]
  3534  017372  0EFF               	movlw	-1
  3535  017374  50E3               	movf	plusw1,w,c
  3536  017376  6ED9               	movwf	fsr2l,c
  3537  017378  6ADA               	clrf	fsr2h,c
  3538  01737A  0E00               	movlw	0
  3539  01737C  6EDF               	movwf	indf2,c
  3540                           
  3541                           ;hid.c: 25:   h->wait_enter = 1;
  3542                           ;stkvar	_h @ sp[(0)+-1]
  3543  01737E  0EFF               	movlw	-1
  3544  017380  50E3               	movf	plusw1,w,c
  3545  017382  6ED9               	movwf	fsr2l,c
  3546  017384  6ADA               	clrf	fsr2h,c
  3547  017386  0E04               	movlw	4
  3548  017388  26D9               	addwf	fsr2l,f,c
  3549  01738A  0E01               	movlw	1
  3550  01738C  6EDF               	movwf	indf2,c
  3551                           
  3552                           ;hid.c: 26:   h->wait_select = 1;
  3553                           ;stkvar	_h @ sp[(0)+-1]
  3554  01738E  0EFF               	movlw	-1
  3555  017390  50E3               	movf	plusw1,w,c
  3556  017392  6ED9               	movwf	fsr2l,c
  3557  017394  6ADA               	clrf	fsr2h,c
  3558  017396  0E02               	movlw	2
  3559  017398  26D9               	addwf	fsr2l,f,c
  3560  01739A  D00D               	goto	L1
  3561  01739C                     l9058:
  3562                           
  3563                           ;hid.c: 30:   if (h->select_p) {
  3564                           ;stkvar	_h @ sp[(0)+-1]
  3565  01739C  0EFF               	movlw	-1
  3566  01739E  50E3               	movf	plusw1,w,c
  3567  0173A0  6ED9               	movwf	fsr2l,c
  3568  0173A2  6ADA               	clrf	fsr2h,c
  3569  0173A4  0E03               	movlw	3
  3570  0173A6  26D9               	addwf	fsr2l,f,c
  3571  0173A8  50DF               	movf	indf2,w,c
  3572  0173AA  B4D8               	btfsc	status,2,c
  3573  0173AC  D006               	goto	l9062
  3574                           
  3575                           ;hid.c: 31:    h->hid_display = HID_PWR;
  3576                           ;stkvar	_h @ sp[(0)+-1]
  3577  0173AE  0EFF               	movlw	-1
  3578  0173B0  50E3               	movf	plusw1,w,c
  3579  0173B2  6ED9               	movwf	fsr2l,c
  3580  0173B4  6ADA               	clrf	fsr2h,c
  3581  0173B6                     L1:
  3582  0173B6  0E01               	movlw	1
  3583  0173B8  D005               	goto	L2
  3584  0173BA                     l9062:
  3585                           
  3586                           ;hid.c: 33:    h->hid_display = HID_MAIN;
  3587                           ;stkvar	_h @ sp[(0)+-1]
  3588  0173BA  0EFF               	movlw	-1
  3589  0173BC  50E3               	movf	plusw1,w,c
  3590  0173BE  6ED9               	movwf	fsr2l,c
  3591  0173C0  6ADA               	clrf	fsr2h,c
  3592  0173C2  0E00               	movlw	0
  3593  0173C4                     L2:
  3594  0173C4  6EDF               	movwf	indf2,c
  3595  0173C6  D013               	goto	l1788
  3596  0173C8                     l9066:
  3597                           
  3598                           ;stkvar	_h @ sp[(0)+-1]
  3599  0173C8  0EFF               	movlw	-1
  3600  0173CA  50E3               	movf	plusw1,w,c
  3601  0173CC  6ED9               	movwf	fsr2l,c
  3602  0173CE  6ADA               	clrf	fsr2h,c
  3603  0173D0  0E01               	movlw	1
  3604  0173D2  26D9               	addwf	fsr2l,f,c
  3605  0173D4  50DF               	movf	indf2,w,c
  3606  0173D6  6E3C               	movwf	(btemp+10)^0,c
  3607  0173D8  6A3D               	clrf	(btemp+11)^0,c
  3608                           
  3609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3610                           ; Switch size 1, requested type "simple"
  3611                           ; Number of cases is 1, Range of values is 0 to 0
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte            4     3 (average)
  3615                           ;	Chosen strategy is simple_byte
  3616  0173DA  503D               	movf	(btemp+11)^0,w,c
  3617  0173DC  0A00               	xorlw	0	; case 0
  3618  0173DE  A4D8               	btfss	status,2,c
  3619  0173E0  D7DD               	goto	l9058
  3620                           
  3621                           ; Switch size 1, requested type "simple"
  3622                           ; Number of cases is 2, Range of values is 0 to 1
  3623                           ; switch strategies available:
  3624                           ; Name         Instructions Cycles
  3625                           ; simple_byte            7     4 (average)
  3626                           ;	Chosen strategy is simple_byte
  3627  0173E2  503C               	movf	(btemp+10)^0,w,c
  3628  0173E4  0A00               	xorlw	0	; case 0
  3629  0173E6  B4D8               	btfsc	status,2,c
  3630  0173E8  D7BC               	goto	l9050
  3631  0173EA  0A01               	xorlw	1	; case 1
  3632  0173EC  D7D7               	goto	l9058
  3633  0173EE                     l1788:
  3634                           
  3635                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3636  0173EE  52E5               	movf	postdec1,f,c
  3637  0173F0  0012               	return		;funcret
  3638  0173F2                     __end_of_hid_display:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _hid_input *****************
  3642 ;; Defined at:
  3643 ;;		line 3 in file "hid.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  h               1  [STACK] PTR struct H_data
  3646 ;;		 -> H(6), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1  [STACK] PTR struct H_data
  3651 ;; Registers used:
  3652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/1
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    7
  3665 ;; This function calls:
  3666 ;;		_get_switch
  3667 ;; This function is called by:
  3668 ;;		_hid_display
  3669 ;; This function uses a reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text12
  3673  0175AE                     __ptext12:
  3674                           	opt callstack 0
  3675  0175AE                     _hid_input:
  3676                           	opt callstack 22
  3677                           
  3678                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  3679                           
  3680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3681                           ;incstack = 0
  3682  0175AE  0E02               	movlw	2
  3683  0175B0  6EE6               	movwf	postinc1,c
  3684  0175B2  EC09  F0C2         	call	_get_switch	;wreg free
  3685  0175B6  5032               	movf	btemp^0,w,c
  3686  0175B8  B4D8               	btfsc	status,2,c
  3687  0175BA  D01C               	goto	l8828
  3688                           
  3689                           ;hid.c: 6:   h->wait_select = 0;
  3690                           ;stkvar	_h @ sp[(0)+-1]
  3691  0175BC  0EFF               	movlw	-1
  3692  0175BE  50E3               	movf	plusw1,w,c
  3693  0175C0  6ED9               	movwf	fsr2l,c
  3694  0175C2  6ADA               	clrf	fsr2h,c
  3695  0175C4  0E02               	movlw	2
  3696  0175C6  26D9               	addwf	fsr2l,f,c
  3697  0175C8  0E00               	movlw	0
  3698  0175CA  6EDF               	movwf	indf2,c
  3699                           
  3700                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  3701  0175CC  0E02               	movlw	2
  3702  0175CE  6EE6               	movwf	postinc1,c
  3703  0175D0  EC09  F0C2         	call	_get_switch	;wreg free
  3704  0175D4  5032               	movf	btemp^0,w,c
  3705  0175D6  B4D8               	btfsc	status,2,c
  3706  0175D8  D003               	goto	u8390
  3707  0175DA  6A3D               	clrf	(btemp+11)^0,c
  3708  0175DC  2A3D               	incf	(btemp+11)^0,f,c
  3709  0175DE  D001               	goto	u8408
  3710  0175E0                     u8390:
  3711  0175E0  6A3D               	clrf	(btemp+11)^0,c
  3712  0175E2                     u8408:
  3713                           
  3714                           ;stkvar	_h @ sp[(0)+-1]
  3715  0175E2  0EFF               	movlw	-1
  3716  0175E4  50E3               	movf	plusw1,w,c
  3717  0175E6  6ED9               	movwf	fsr2l,c
  3718  0175E8  6ADA               	clrf	fsr2h,c
  3719  0175EA  0E03               	movlw	3
  3720  0175EC  26D9               	addwf	fsr2l,f,c
  3721  0175EE  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3722  0175F4                     l8828:
  3723                           
  3724                           ;hid.c: 10:  if (get_switch(SENTER)) {
  3725  0175F4  0E03               	movlw	3
  3726  0175F6  6EE6               	movwf	postinc1,c
  3727  0175F8  EC09  F0C2         	call	_get_switch	;wreg free
  3728  0175FC  5032               	movf	btemp^0,w,c
  3729  0175FE  B4D8               	btfsc	status,2,c
  3730  017600  D01C               	goto	l1778
  3731                           
  3732                           ;hid.c: 11:   h->wait_enter = 0;
  3733                           ;stkvar	_h @ sp[(0)+-1]
  3734  017602  0EFF               	movlw	-1
  3735  017604  50E3               	movf	plusw1,w,c
  3736  017606  6ED9               	movwf	fsr2l,c
  3737  017608  6ADA               	clrf	fsr2h,c
  3738  01760A  0E04               	movlw	4
  3739  01760C  26D9               	addwf	fsr2l,f,c
  3740  01760E  0E00               	movlw	0
  3741  017610  6EDF               	movwf	indf2,c
  3742                           
  3743                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  3744  017612  0E03               	movlw	3
  3745  017614  6EE6               	movwf	postinc1,c
  3746  017616  EC09  F0C2         	call	_get_switch	;wreg free
  3747  01761A  5032               	movf	btemp^0,w,c
  3748  01761C  B4D8               	btfsc	status,2,c
  3749  01761E  D003               	goto	u8420
  3750  017620  6A3D               	clrf	(btemp+11)^0,c
  3751  017622  2A3D               	incf	(btemp+11)^0,f,c
  3752  017624  D001               	goto	u8438
  3753  017626                     u8420:
  3754  017626  6A3D               	clrf	(btemp+11)^0,c
  3755  017628                     u8438:
  3756                           
  3757                           ;stkvar	_h @ sp[(0)+-1]
  3758  017628  0EFF               	movlw	-1
  3759  01762A  50E3               	movf	plusw1,w,c
  3760  01762C  6ED9               	movwf	fsr2l,c
  3761  01762E  6ADA               	clrf	fsr2h,c
  3762  017630  0E05               	movlw	5
  3763  017632  26D9               	addwf	fsr2l,f,c
  3764  017634  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3765  01763A                     l1778:
  3766                           
  3767                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  3768  01763A  52E5               	movf	postdec1,f,c
  3769  01763C  0012               	return		;funcret
  3770  01763E                     __end_of_hid_input:
  3771                           	opt callstack 0
  3772                           
  3773 ;; *************** function _get_switch *****************
  3774 ;; Defined at:
  3775 ;;		line 18 in file "dio.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  i               1  [STACK] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1  [STACK] enum E16283
  3782 ;; Registers used:
  3783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/1
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    6
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_hid_input
  3800 ;; This function uses a reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text13
  3804  018412                     __ptext13:
  3805                           	opt callstack 0
  3806  018412                     _get_switch:
  3807                           	opt callstack 22
  3808                           
  3809                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3810                           ;stkvar	_i @ sp[(0)+-1]
  3811                           
  3812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3813                           ;incstack = 0
  3814  018412  0EFF               	movlw	-1
  3815  018414  006F FF8C  F032    	movff	plusw1,btemp
  3816  01841A  0E03               	movlw	3
  3817  01841C  6432               	cpfsgt	btemp^0,c
  3818  01841E  D002               	goto	l8152
  3819                           
  3820                           ;dio.c: 21:   return SW_OFF;
  3821  018420  0E00               	movlw	0
  3822  018422  D008               	goto	L3
  3823  018424                     l8152:
  3824                           
  3825                           ;dio.c: 23:  return S.button[i].sw;
  3826                           ;stkvar	_i @ sp[(0)+-1]
  3827  018424  0EFF               	movlw	-1
  3828  018426  50E3               	movf	plusw1,w,c
  3829  018428  0D05               	mullw	5
  3830  01842A  50F3               	movf	243,w,c
  3831  01842C  0F60               	addlw	low _S
  3832  01842E  6ED9               	movwf	fsr2l,c
  3833  018430  6ADA               	clrf	fsr2h,c
  3834  018432  50DF               	movf	indf2,w,c
  3835  018434                     L3:
  3836  018434  6E32               	movwf	btemp^0,c
  3837                           
  3838                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3839  018436  52E5               	movf	postdec1,f,c
  3840  018438  0012               	return		;funcret
  3841  01843A                     __end_of_get_switch:
  3842                           	opt callstack 0
  3843                           
  3844 ;; *************** function _eaDogM_WriteCommand *****************
  3845 ;; Defined at:
  3846 ;;		line 160 in file "eadog.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  cmd             1  [STACK] const unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1  [STACK] void 
  3853 ;; Registers used:
  3854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3855 ;; Tracked objects:
  3856 ;;		On entry : 3F/3D
  3857 ;;		On exit  : 3F/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   16
  3867 ;; This function calls:
  3868 ;;		_send_lcd_cmd_dma
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text14
  3875  01891E                     __ptext14:
  3876                           	opt callstack 0
  3877  01891E                     _eaDogM_WriteCommand:
  3878                           	opt callstack 14
  3879                           
  3880                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3881                           ;stkvar	_cmd @ sp[(0)+-1]
  3882                           
  3883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3884                           ;incstack = 0
  3885  01891E  0EFF               	movlw	-1
  3886  018920  50E3               	movf	plusw1,w,c
  3887  018922  6EE6               	movwf	postinc1,c
  3888  018924  ECB2  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  3889                           
  3890                           ; BSR set to: 0
  3891                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3892  018928  52E5               	movf	postdec1,f,c
  3893  01892A  0012               	return		;funcret
  3894  01892C                     __end_of_eaDogM_WriteCommand:
  3895                           	opt callstack 0
  3896                           
  3897 ;; *************** function _convert_adc_data *****************
  3898 ;; Defined at:
  3899 ;;		line 38 in file "mbmc.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  i               1  [STACK] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1  [STACK] void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/39
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    9
  3920 ;; This function calls:
  3921 ;;		_conv_raw_result
  3922 ;;		_lp_filter
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text15
  3929  01784C                     __ptext15:
  3930                           	opt callstack 0
  3931  01784C                     _convert_adc_data:
  3932                           	opt callstack 0
  3933                           
  3934                           ; BSR set to: 0
  3935                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3936  01784C  52E6               	movf	postinc1,f,c
  3937                           
  3938                           ;mbmc.c: 40:  uint8_t i = 0;
  3939                           ;stkvar	_i @ sp[(-1)+0]
  3940                           
  3941                           ;incstack = 0
  3942  01784E  0EFF               	movlw	-1
  3943  017850  6AE3               	clrf	plusw1,c
  3944  017852                     l9034:
  3945                           
  3946                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3947  017852  0E00               	movlw	0
  3948  017854  6EE6               	movwf	postinc1,c
  3949                           
  3950                           ;stkvar	_i @ sp[(-2)+0]
  3951  017856  0EFE               	movlw	-2
  3952  017858  50E3               	movf	plusw1,w,c
  3953  01785A  6EE6               	movwf	postinc1,c
  3954  01785C  0E00               	movlw	0
  3955  01785E  6EE6               	movwf	postinc1,c
  3956                           
  3957                           ;stkvar	_i @ sp[(-4)+0]
  3958  017860  0EFC               	movlw	-4
  3959  017862  50E3               	movf	plusw1,w,c
  3960  017864  6EE6               	movwf	postinc1,c
  3961  017866  ECDE  F09B         	call	_conv_raw_result	;wreg free
  3962  01786A  0060  F0CB  FFE6   	movff	btemp,postinc1
  3963  017870  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3964  017876  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3965  01787C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3966  017882  EC9A  F0AE         	call	_lp_filter	;wreg free
  3967                           
  3968                           ;stkvar	_i @ sp[(-1)+0]
  3969  017886  0EFF               	movlw	-1
  3970  017888  50E3               	movf	plusw1,w,c
  3971  01788A  0D04               	mullw	4
  3972  01788C  0E00               	movlw	low _C
  3973  01788E  24F3               	addwf	243,w,c
  3974  017890  6ED9               	movwf	fsr2l,c
  3975  017892  0E01               	movlw	high _C
  3976  017894  20F4               	addwfc	prodh,w,c
  3977  017896  6EDA               	movwf	fsr2h,c
  3978  017898  0060  F0CB  FFDE   	movff	btemp,postinc2
  3979  01789E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3980  0178A4  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3981  0178AA  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3982                           
  3983                           ;mbmc.c: 48:  } while (++i < 16);
  3984                           ;stkvar	_i @ sp[(-1)+0]
  3985  0178B0  0EFF               	movlw	-1
  3986  0178B2  2AE3               	incf	plusw1,f,c
  3987  0178B4  0EFF               	movlw	-1
  3988  0178B6  006F FF8C  F032    	movff	plusw1,btemp
  3989  0178BC  0E0F               	movlw	15
  3990  0178BE  6432               	cpfsgt	btemp^0,c
  3991  0178C0  D7C8               	goto	l9034
  3992                           
  3993                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3994  0178C2  52E5               	movf	postdec1,f,c
  3995  0178C4  0012               	return		;funcret
  3996  0178C6                     __end_of_convert_adc_data:
  3997                           	opt callstack 0
  3998                           
  3999 ;; *************** function _conv_raw_result *****************
  4000 ;; Defined at:
  4001 ;;		line 80 in file "daq.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  chan            1  [STACK] const enum E16136
  4004 ;;  to_what         1  [STACK] const enum E16198
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  4  [STACK] float 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/39
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    8
  4023 ;; This function calls:
  4024 ;;		___fldiv
  4025 ;;		___flmul
  4026 ;;		___flsub
  4027 ;;		___xxtofl
  4028 ;;		_get_raw_result
  4029 ;;		_nanf
  4030 ;; This function is called by:
  4031 ;;		_convert_adc_data
  4032 ;; This function uses a reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text16
  4036  0137BC                     __ptext16:
  4037                           	opt callstack 0
  4038  0137BC                     _conv_raw_result:
  4039                           	opt callstack 21
  4040                           
  4041                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4042                           
  4043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4044                           ;incstack = 0
  4045  0137BC  D242               	goto	l8738
  4046  0137BE                     l8684:
  4047                           
  4048                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4049                           ;stkvar	_chan @ sp[(0)+-1]
  4050  0137BE  0EFF               	movlw	-1
  4051  0137C0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4052  0137C6  0E77               	movlw	119
  4053  0137C8  6E3A               	movwf	(btemp+8)^0,c
  4054  0137CA  0E3C               	movlw	60
  4055  0137CC  6E3B               	movwf	(btemp+9)^0,c
  4056  0137CE  2A3D               	incf	(btemp+11)^0,f,c
  4057  0137D0  D003               	goto	u8134
  4058  0137D2                     u8135:
  4059  0137D2  343B               	rlcf	(btemp+9)^0,w,c
  4060  0137D4  323B               	rrcf	(btemp+9)^0,f,c
  4061  0137D6  323A               	rrcf	(btemp+8)^0,f,c
  4062  0137D8                     u8134:
  4063  0137D8  2E3D               	decfsz	(btemp+11)^0,f,c
  4064  0137DA  D7FB               	goto	u8135
  4065  0137DC  B03A               	btfsc	(btemp+8)^0,0,c
  4066  0137DE  D007               	goto	l8690
  4067                           
  4068                           ;daq.c: 86:    return nanf("");
  4069  0137E0  0EC5               	movlw	low (STR_30+18)
  4070  0137E2  6EE6               	movwf	postinc1,c
  4071  0137E4  0EFE               	movlw	high (STR_30+18)
  4072  0137E6  6EE6               	movwf	postinc1,c
  4073  0137E8  EC99  F0BD         	call	_nanf	;wreg free
  4074  0137EC  D23A               	goto	l1662
  4075  0137EE                     l8690:
  4076                           
  4077                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4078                           ;stkvar	_chan @ sp[(0)+-1]
  4079  0137EE  0EFF               	movlw	-1
  4080  0137F0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4081  0137F6  0E03               	movlw	3
  4082  0137F8  6E3A               	movwf	(btemp+8)^0,c
  4083  0137FA  0E00               	movlw	0
  4084  0137FC  6E3B               	movwf	(btemp+9)^0,c
  4085  0137FE  2A3D               	incf	(btemp+11)^0,f,c
  4086  013800  D003               	goto	u8154
  4087  013802                     u8155:
  4088  013802  343B               	rlcf	(btemp+9)^0,w,c
  4089  013804  323B               	rrcf	(btemp+9)^0,f,c
  4090  013806  323A               	rrcf	(btemp+8)^0,f,c
  4091  013808                     u8154:
  4092  013808  2E3D               	decfsz	(btemp+11)^0,f,c
  4093  01380A  D7FB               	goto	u8155
  4094  01380C  A03A               	btfss	(btemp+8)^0,0,c
  4095  01380E  D0EB               	goto	l8704
  4096                           
  4097                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4098                           ;stkvar	_chan @ sp[(0)+-1]
  4099  013810  0EFF               	movlw	-1
  4100  013812  006F FF8C  F03D    	movff	plusw1,btemp+11
  4101  013818  0E01               	movlw	1
  4102  01381A  6E3A               	movwf	(btemp+8)^0,c
  4103  01381C  0E00               	movlw	0
  4104  01381E  6E3B               	movwf	(btemp+9)^0,c
  4105  013820  2A3D               	incf	(btemp+11)^0,f,c
  4106  013822  D003               	goto	u8174
  4107  013824                     u8175:
  4108  013824  343B               	rlcf	(btemp+9)^0,w,c
  4109  013826  323B               	rrcf	(btemp+9)^0,f,c
  4110  013828  323A               	rrcf	(btemp+8)^0,f,c
  4111  01382A                     u8174:
  4112  01382A  2E3D               	decfsz	(btemp+11)^0,f,c
  4113  01382C  D7FB               	goto	u8175
  4114  01382E  A03A               	btfss	(btemp+8)^0,0,c
  4115  013830  D06D               	goto	l8700
  4116                           
  4117                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4118  013832  0E7B               	movlw	123
  4119  013834  6EE6               	movwf	postinc1,c
  4120  013836  0E14               	movlw	20
  4121  013838  6EE6               	movwf	postinc1,c
  4122  01383A  0EAE               	movlw	174
  4123  01383C  6EE6               	movwf	postinc1,c
  4124  01383E  0E3D               	movlw	61
  4125  013840  6EE6               	movwf	postinc1,c
  4126  013842  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4127  013848  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4128  01384E  0E00               	movlw	0
  4129  013850  BE3B               	btfsc	(btemp+9)^0,7,c
  4130  013852  0EFF               	movlw	255
  4131  013854  6E3C               	movwf	(btemp+10)^0,c
  4132  013856  6E3D               	movwf	(btemp+11)^0,c
  4133  013858  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4134  01385E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4135  013864  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4136  01386A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4137  013870  0E01               	movlw	1
  4138  013872  6EE6               	movwf	postinc1,c
  4139  013874  ECB4  F0AC         	call	___xxtofl	;wreg free
  4140  013878  0060  F0CB  FFE6   	movff	btemp,postinc1
  4141  01387E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4142  013884  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4143  01388A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4144                           
  4145                           ;stkvar	_chan @ sp[(-8)+-1]
  4146  013890  0EF7               	movlw	-9
  4147  013892  50E3               	movf	plusw1,w,c
  4148  013894  6EE6               	movwf	postinc1,c
  4149  013896  ECC0  F0C3         	call	_get_raw_result	;wreg free
  4150  01389A  0060  F0C8  F03C   	movff	btemp,btemp+10
  4151  0138A0  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4152  0138A6  503C               	movf	(btemp+10)^0,w,c
  4153  0138A8  6E36               	movwf	(btemp+4)^0,c
  4154  0138AA  503D               	movf	(btemp+11)^0,w,c
  4155  0138AC  6E37               	movwf	(btemp+5)^0,c
  4156  0138AE  6A38               	clrf	(btemp+6)^0,c
  4157  0138B0  6A39               	clrf	(btemp+7)^0,c
  4158  0138B2  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4159  0138B8  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4160  0138BE  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4161  0138C4  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4162  0138CA  0E00               	movlw	0
  4163  0138CC  6EE6               	movwf	postinc1,c
  4164  0138CE  ECB4  F0AC         	call	___xxtofl	;wreg free
  4165  0138D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4166  0138D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4167  0138DE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4168  0138E4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4169  0138EA  EC4B  F0BF         	call	___flsub	;wreg free
  4170  0138EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4171  0138F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4172  0138FA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4173  013900  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4174  013906  ECC1  F08E         	call	___flmul	;wreg free
  4175  01390A  D1AB               	goto	l1662
  4176  01390C                     l8700:
  4177                           
  4178                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4179  01390C  0E29               	movlw	41
  4180  01390E  6EE6               	movwf	postinc1,c
  4181  013910  0E5C               	movlw	92
  4182  013912  6EE6               	movwf	postinc1,c
  4183  013914  0E0F               	movlw	15
  4184  013916  6EE6               	movwf	postinc1,c
  4185  013918  0E3D               	movlw	61
  4186  01391A  6EE6               	movwf	postinc1,c
  4187  01391C  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4188  013922  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4189  013928  0E00               	movlw	0
  4190  01392A  BE3B               	btfsc	(btemp+9)^0,7,c
  4191  01392C  0EFF               	movlw	255
  4192  01392E  6E3C               	movwf	(btemp+10)^0,c
  4193  013930  6E3D               	movwf	(btemp+11)^0,c
  4194  013932  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4195  013938  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4196  01393E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4197  013944  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4198  01394A  0E01               	movlw	1
  4199  01394C  6EE6               	movwf	postinc1,c
  4200  01394E  ECB4  F0AC         	call	___xxtofl	;wreg free
  4201  013952  0060  F0CB  FFE6   	movff	btemp,postinc1
  4202  013958  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4203  01395E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4204  013964  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4205                           
  4206                           ;stkvar	_chan @ sp[(-8)+-1]
  4207  01396A  0EF7               	movlw	-9
  4208  01396C  50E3               	movf	plusw1,w,c
  4209  01396E  6EE6               	movwf	postinc1,c
  4210  013970  ECC0  F0C3         	call	_get_raw_result	;wreg free
  4211  013974  0060  F0C8  F03C   	movff	btemp,btemp+10
  4212  01397A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4213  013980  503C               	movf	(btemp+10)^0,w,c
  4214  013982  6E36               	movwf	(btemp+4)^0,c
  4215  013984  503D               	movf	(btemp+11)^0,w,c
  4216  013986  6E37               	movwf	(btemp+5)^0,c
  4217  013988  6A38               	clrf	(btemp+6)^0,c
  4218  01398A  6A39               	clrf	(btemp+7)^0,c
  4219  01398C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4220  013992  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4221  013998  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4222  01399E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4223  0139A4  0E00               	movlw	0
  4224  0139A6  6EE6               	movwf	postinc1,c
  4225  0139A8  ECB4  F0AC         	call	___xxtofl	;wreg free
  4226  0139AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4227  0139B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4228  0139B8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4229  0139BE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4230  0139C4  EC4B  F0BF         	call	___flsub	;wreg free
  4231  0139C8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4232  0139CE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4233  0139D4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4234  0139DA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4235  0139E0  ECC1  F08E         	call	___flmul	;wreg free
  4236  0139E4  D13E               	goto	l1662
  4237  0139E6                     l8704:
  4238                           
  4239                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4240                           ;stkvar	_chan @ sp[(0)+-1]
  4241  0139E6  0EFF               	movlw	-1
  4242  0139E8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4243  0139EE  0E00               	movlw	0
  4244  0139F0  6E3A               	movwf	(btemp+8)^0,c
  4245  0139F2  0E08               	movlw	8
  4246  0139F4  6E3B               	movwf	(btemp+9)^0,c
  4247  0139F6  2A3D               	incf	(btemp+11)^0,f,c
  4248  0139F8  D003               	goto	u8194
  4249  0139FA                     u8195:
  4250  0139FA  343B               	rlcf	(btemp+9)^0,w,c
  4251  0139FC  323B               	rrcf	(btemp+9)^0,f,c
  4252  0139FE  323A               	rrcf	(btemp+8)^0,f,c
  4253  013A00                     u8194:
  4254  013A00  2E3D               	decfsz	(btemp+11)^0,f,c
  4255  013A02  D7FB               	goto	u8195
  4256  013A04  A03A               	btfss	(btemp+8)^0,0,c
  4257  013A06  D008               	goto	l8712
  4258                           
  4259                           ;daq.c: 96:     return 25.0;
  4260  013A08  0E00               	movlw	0
  4261  013A0A  6E32               	movwf	btemp^0,c
  4262  013A0C  0E00               	movlw	0
  4263  013A0E  6E33               	movwf	(btemp+1)^0,c
  4264  013A10  0EC8               	movlw	200
  4265  013A12  6E34               	movwf	(btemp+2)^0,c
  4266  013A14  0E41               	movlw	65
  4267  013A16  D113               	goto	L4
  4268  013A18                     l8712:
  4269                           
  4270                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4271  013A18  0E00               	movlw	0
  4272  013A1A  6EE6               	movwf	postinc1,c
  4273  013A1C  0E00               	movlw	0
  4274  013A1E  6EE6               	movwf	postinc1,c
  4275  013A20  0E7A               	movlw	122
  4276  013A22  6EE6               	movwf	postinc1,c
  4277  013A24  0E44               	movlw	68
  4278  013A26  6EE6               	movwf	postinc1,c
  4279  013A28  0E61               	movlw	97
  4280  013A2A  6EE6               	movwf	postinc1,c
  4281  013A2C  0E03               	movlw	3
  4282  013A2E  6EE6               	movwf	postinc1,c
  4283  013A30  0E84               	movlw	132
  4284  013A32  6EE6               	movwf	postinc1,c
  4285  013A34  0E40               	movlw	64
  4286  013A36  6EE6               	movwf	postinc1,c
  4287                           
  4288                           ;stkvar	_chan @ sp[(-8)+-1]
  4289  013A38  0EF7               	movlw	-9
  4290  013A3A  50E3               	movf	plusw1,w,c
  4291  013A3C  6EE6               	movwf	postinc1,c
  4292  013A3E  ECC0  F0C3         	call	_get_raw_result	;wreg free
  4293  013A42  0060  F0C8  F03C   	movff	btemp,btemp+10
  4294  013A48  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4295  013A4E  503C               	movf	(btemp+10)^0,w,c
  4296  013A50  6E36               	movwf	(btemp+4)^0,c
  4297  013A52  503D               	movf	(btemp+11)^0,w,c
  4298  013A54  6E37               	movwf	(btemp+5)^0,c
  4299  013A56  6A38               	clrf	(btemp+6)^0,c
  4300  013A58  6A39               	clrf	(btemp+7)^0,c
  4301  013A5A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4302  013A60  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4303  013A66  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4304  013A6C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4305  013A72  0E00               	movlw	0
  4306  013A74  6EE6               	movwf	postinc1,c
  4307  013A76  ECB4  F0AC         	call	___xxtofl	;wreg free
  4308  013A7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4309  013A80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4310  013A86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4311  013A8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4312  013A92  ECC1  F08E         	call	___flmul	;wreg free
  4313  013A96  0060  F0CB  FFE6   	movff	btemp,postinc1
  4314  013A9C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4315  013AA2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4316  013AA8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4317  013AAE  ECB4  F096         	call	___fldiv	;wreg free
  4318  013AB2  D0D7               	goto	l1662
  4319  013AB4                     l8716:
  4320                           
  4321                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4322                           ;stkvar	_chan @ sp[(0)+-1]
  4323  013AB4  0EFF               	movlw	-1
  4324  013AB6  006F FF8C  F03D    	movff	plusw1,btemp+11
  4325  013ABC  0E03               	movlw	3
  4326  013ABE  6E3A               	movwf	(btemp+8)^0,c
  4327  013AC0  0E00               	movlw	0
  4328  013AC2  6E3B               	movwf	(btemp+9)^0,c
  4329  013AC4  2A3D               	incf	(btemp+11)^0,f,c
  4330  013AC6  D003               	goto	u8214
  4331  013AC8                     u8215:
  4332  013AC8  343B               	rlcf	(btemp+9)^0,w,c
  4333  013ACA  323B               	rrcf	(btemp+9)^0,f,c
  4334  013ACC  323A               	rrcf	(btemp+8)^0,f,c
  4335  013ACE                     u8214:
  4336  013ACE  2E3D               	decfsz	(btemp+11)^0,f,c
  4337  013AD0  D7FB               	goto	u8215
  4338  013AD2  B03A               	btfsc	(btemp+8)^0,0,c
  4339  013AD4  D011               	goto	u8240
  4340                           
  4341                           ;stkvar	_chan @ sp[(0)+-1]
  4342  013AD6  0EFF               	movlw	-1
  4343  013AD8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4344  013ADE  0E00               	movlw	0
  4345  013AE0  6E3A               	movwf	(btemp+8)^0,c
  4346  013AE2  0E08               	movlw	8
  4347  013AE4  6E3B               	movwf	(btemp+9)^0,c
  4348  013AE6  2A3D               	incf	(btemp+11)^0,f,c
  4349  013AE8  D003               	goto	u8234
  4350  013AEA                     u8235:
  4351  013AEA  343B               	rlcf	(btemp+9)^0,w,c
  4352  013AEC  323B               	rrcf	(btemp+9)^0,f,c
  4353  013AEE  323A               	rrcf	(btemp+8)^0,f,c
  4354  013AF0                     u8234:
  4355  013AF0  2E3D               	decfsz	(btemp+11)^0,f,c
  4356  013AF2  D7FB               	goto	u8235
  4357  013AF4  A03A               	btfss	(btemp+8)^0,0,c
  4358  013AF6  D04E               	goto	l8724
  4359  013AF8                     u8240:
  4360                           
  4361                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4362  013AF8  0E00               	movlw	0
  4363  013AFA  6EE6               	movwf	postinc1,c
  4364  013AFC  0E00               	movlw	0
  4365  013AFE  6EE6               	movwf	postinc1,c
  4366  013B00  0E7A               	movlw	122
  4367  013B02  6EE6               	movwf	postinc1,c
  4368  013B04  0E44               	movlw	68
  4369  013B06  6EE6               	movwf	postinc1,c
  4370  013B08  0E00               	movlw	0
  4371  013B0A  6EE6               	movwf	postinc1,c
  4372  013B0C  0E00               	movlw	0
  4373  013B0E  6EE6               	movwf	postinc1,c
  4374  013B10  0E20               	movlw	32
  4375  013B12  6EE6               	movwf	postinc1,c
  4376  013B14  0E3F               	movlw	63
  4377  013B16  6EE6               	movwf	postinc1,c
  4378                           
  4379                           ;stkvar	_chan @ sp[(-8)+-1]
  4380  013B18  0EF7               	movlw	-9
  4381  013B1A  50E3               	movf	plusw1,w,c
  4382  013B1C  6EE6               	movwf	postinc1,c
  4383  013B1E  ECC0  F0C3         	call	_get_raw_result	;wreg free
  4384  013B22  0060  F0C8  F03C   	movff	btemp,btemp+10
  4385  013B28  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4386  013B2E  503C               	movf	(btemp+10)^0,w,c
  4387  013B30  6E36               	movwf	(btemp+4)^0,c
  4388  013B32  503D               	movf	(btemp+11)^0,w,c
  4389  013B34  6E37               	movwf	(btemp+5)^0,c
  4390  013B36  6A38               	clrf	(btemp+6)^0,c
  4391  013B38  6A39               	clrf	(btemp+7)^0,c
  4392  013B3A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4393  013B40  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4394  013B46  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4395  013B4C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4396  013B52  0E00               	movlw	0
  4397  013B54  6EE6               	movwf	postinc1,c
  4398  013B56  ECB4  F0AC         	call	___xxtofl	;wreg free
  4399  013B5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4400  013B60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4401  013B66  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4402  013B6C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4403  013B72  ECC1  F08E         	call	___flmul	;wreg free
  4404  013B76  0060  F0CB  FFE6   	movff	btemp,postinc1
  4405  013B7C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4406  013B82  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4407  013B88  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4408  013B8E  ECB4  F096         	call	___fldiv	;wreg free
  4409  013B92  D067               	goto	l1662
  4410  013B94                     l8724:
  4411                           
  4412                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4413  013B94  0E00               	movlw	0
  4414  013B96  6EE6               	movwf	postinc1,c
  4415  013B98  0E00               	movlw	0
  4416  013B9A  6EE6               	movwf	postinc1,c
  4417  013B9C  0E7A               	movlw	122
  4418  013B9E  6EE6               	movwf	postinc1,c
  4419  013BA0  0E44               	movlw	68
  4420  013BA2  6EE6               	movwf	postinc1,c
  4421  013BA4  0E61               	movlw	97
  4422  013BA6  6EE6               	movwf	postinc1,c
  4423  013BA8  0E03               	movlw	3
  4424  013BAA  6EE6               	movwf	postinc1,c
  4425  013BAC  0E84               	movlw	132
  4426  013BAE  6EE6               	movwf	postinc1,c
  4427  013BB0  0E40               	movlw	64
  4428  013BB2  6EE6               	movwf	postinc1,c
  4429                           
  4430                           ;stkvar	_chan @ sp[(-8)+-1]
  4431  013BB4  0EF7               	movlw	-9
  4432  013BB6  50E3               	movf	plusw1,w,c
  4433  013BB8  6EE6               	movwf	postinc1,c
  4434  013BBA  ECC0  F0C3         	call	_get_raw_result	;wreg free
  4435  013BBE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4436  013BC4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4437  013BCA  503C               	movf	(btemp+10)^0,w,c
  4438  013BCC  6E36               	movwf	(btemp+4)^0,c
  4439  013BCE  503D               	movf	(btemp+11)^0,w,c
  4440  013BD0  6E37               	movwf	(btemp+5)^0,c
  4441  013BD2  6A38               	clrf	(btemp+6)^0,c
  4442  013BD4  6A39               	clrf	(btemp+7)^0,c
  4443  013BD6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4444  013BDC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4445  013BE2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4446  013BE8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4447  013BEE  0E00               	movlw	0
  4448  013BF0  6EE6               	movwf	postinc1,c
  4449  013BF2  ECB4  F0AC         	call	___xxtofl	;wreg free
  4450  013BF6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4451  013BFC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4452  013C02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4453  013C08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4454  013C0E  ECC1  F08E         	call	___flmul	;wreg free
  4455  013C12  0060  F0CB  FFE6   	movff	btemp,postinc1
  4456  013C18  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4457  013C1E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4458  013C24  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4459  013C2A  ECB4  F096         	call	___fldiv	;wreg free
  4460  013C2E  D019               	goto	l1662
  4461  013C30                     l8730:
  4462                           
  4463                           ;daq.c: 109:   return 0.0;
  4464  013C30  0E00               	movlw	0
  4465  013C32  6E32               	movwf	btemp^0,c
  4466  013C34  0E00               	movlw	0
  4467  013C36  6E33               	movwf	(btemp+1)^0,c
  4468  013C38  0E00               	movlw	0
  4469  013C3A  6E34               	movwf	(btemp+2)^0,c
  4470  013C3C  0E00               	movlw	0
  4471  013C3E                     L4:
  4472  013C3E  6E35               	movwf	(btemp+3)^0,c
  4473  013C40  D010               	goto	l1662
  4474  013C42                     l8738:
  4475                           
  4476                           ;stkvar	_to_what @ sp[(0)+-2]
  4477  013C42  0EFE               	movlw	-2
  4478  013C44  50E3               	movf	plusw1,w,c
  4479  013C46  6E3C               	movwf	(btemp+10)^0,c
  4480  013C48  6A3D               	clrf	(btemp+11)^0,c
  4481                           
  4482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 1, Range of values is 0 to 0
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            4     3 (average)
  4488                           ;	Chosen strategy is simple_byte
  4489  013C4A  503D               	movf	(btemp+11)^0,w,c
  4490  013C4C  0A00               	xorlw	0	; case 0
  4491  013C4E  A4D8               	btfss	status,2,c
  4492  013C50  D7EF               	goto	l8730
  4493                           
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 2, Range of values is 0 to 1
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte            7     4 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500  013C52  503C               	movf	(btemp+10)^0,w,c
  4501  013C54  0A00               	xorlw	0	; case 0
  4502  013C56  B4D8               	btfsc	status,2,c
  4503  013C58  D5B2               	goto	l8684
  4504  013C5A  0A01               	xorlw	1	; case 1
  4505  013C5C  B4D8               	btfsc	status,2,c
  4506  013C5E  D72A               	goto	l8716
  4507  013C60  D7E7               	goto	l8730
  4508  013C62                     l1662:
  4509                           
  4510                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4511  013C62  52E5               	movf	postdec1,f,c
  4512  013C64  52E5               	movf	postdec1,f,c
  4513  013C66  0012               	return		;funcret
  4514  013C68                     __end_of_conv_raw_result:
  4515                           	opt callstack 0
  4516                           
  4517 ;; *************** function _nanf *****************
  4518 ;; Defined at:
  4519 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  s               2  [STACK] PTR const unsigned char 
  4522 ;;		 -> STR_36(1), 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  u               4  [STACK] struct .
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  4  [STACK] float 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/39
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    6
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_conv_raw_result
  4545 ;; This function uses a reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text17
  4549  017B32                     __ptext17:
  4550                           	opt callstack 0
  4551  017B32                     _nanf:
  4552                           	opt callstack 0
  4553                           
  4554                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4555  017B32  52E6               	movf	postinc1,f,c
  4556  017B34  52E6               	movf	postinc1,f,c
  4557  017B36  52E6               	movf	postinc1,f,c
  4558  017B38  52E6               	movf	postinc1,f,c
  4559                           
  4560                           ;incstack = 0
  4561  017B3A  0EFF               	movlw	255
  4562  017B3C  6E3A               	movwf	(btemp+8)^0,c
  4563  017B3E  0EFF               	movlw	255
  4564  017B40  6E3B               	movwf	(btemp+9)^0,c
  4565  017B42  0EFF               	movlw	255
  4566  017B44  6E3C               	movwf	(btemp+10)^0,c
  4567  017B46  0E7F               	movlw	127
  4568  017B48  6E3D               	movwf	(btemp+11)^0,c
  4569                           
  4570                           ;stkvar	_u @ sp[(-4)+0]
  4571  017B4A  0EFC               	movlw	-4
  4572  017B4C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4573  017B52  0EFD               	movlw	-3
  4574  017B54  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4575  017B5A  0EFE               	movlw	-2
  4576  017B5C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4577  017B62  0EFF               	movlw	-1
  4578  017B64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4579                           
  4580                           ;stkvar	_u @ sp[(-4)+0]
  4581  017B6A  0EFC               	movlw	-4
  4582  017B6C  006F FF8C  F032    	movff	plusw1,btemp
  4583  017B72  0EFD               	movlw	-3
  4584  017B74  006F FF8C  F033    	movff	plusw1,btemp+1
  4585  017B7A  0EFE               	movlw	-2
  4586  017B7C  006F FF8C  F034    	movff	plusw1,btemp+2
  4587  017B82  0EFF               	movlw	-1
  4588  017B84  006F FF8C  F035    	movff	plusw1,btemp+3
  4589                           
  4590                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4591  017B8A  0EFA               	movlw	250
  4592  017B8C  26E1               	addwf	fsr1l,f,c
  4593  017B8E  0EFF               	movlw	255
  4594  017B90  22E2               	addwfc	fsr1h,f,c
  4595  017B92  0012               	return		;funcret
  4596  017B94                     __end_of_nanf:
  4597                           	opt callstack 0
  4598                           
  4599 ;; *************** function _get_raw_result *****************
  4600 ;; Defined at:
  4601 ;;		line 72 in file "daq.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  index           1  [STACK] const enum E16136
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  2  [STACK] unsigned short 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/39
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    6
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_conv_raw_result
  4626 ;; This function uses a reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text18
  4630  018780                     __ptext18:
  4631                           	opt callstack 0
  4632  018780                     _get_raw_result:
  4633                           	opt callstack 22
  4634                           
  4635                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4636                           ;stkvar	_index @ sp[(0)+-1]
  4637                           
  4638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4639                           ;incstack = 0
  4640  018780  0EFF               	movlw	-1
  4641  018782  50E3               	movf	plusw1,w,c
  4642  018784  0D02               	mullw	2
  4643  018786  50F3               	movf	243,w,c
  4644  018788  0FC7               	addlw	low _R
  4645  01878A  6ED9               	movwf	fsr2l,c
  4646  01878C  6ADA               	clrf	fsr2h,c
  4647  01878E  006F FF78  F032    	movff	postinc2,btemp
  4648  018794  006F FF74  F033    	movff	postdec2,btemp+1
  4649                           
  4650                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4651  01879A  52E5               	movf	postdec1,f,c
  4652  01879C  0012               	return		;funcret
  4653  01879E                     __end_of_get_raw_result:
  4654                           	opt callstack 0
  4655                           
  4656 ;; *************** function ___xxtofl *****************
  4657 ;; Defined at:
  4658 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  sign            1  [STACK] unsigned char 
  4661 ;;  val             4  [STACK] long 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  arg             4  [STACK] unsigned long 
  4664 ;;  exp             1  [STACK] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  4  [STACK] unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/39
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    6
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_conv_raw_result
  4685 ;; This function uses a reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text19
  4689  015968                     __ptext19:
  4690                           	opt callstack 0
  4691  015968                     ___xxtofl:
  4692                           	opt callstack 0
  4693                           
  4694                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4695  015968  0E05               	movlw	5
  4696  01596A  26E1               	addwf	fsr1l,f,c
  4697  01596C  0E00               	movlw	0
  4698  01596E  22E2               	addwfc	fsr1h,f,c
  4699                           
  4700                           ;stkvar	_sign @ sp[(-5)+-1]
  4701                           
  4702                           ;incstack = 0
  4703  015970  0EFA               	movlw	-6
  4704  015972  50E3               	movf	plusw1,w,c
  4705  015974  B4D8               	btfsc	status,2,c
  4706  015976  D01D               	goto	l8162
  4707                           
  4708                           ;stkvar	_val @ sp[(-5)+-5]
  4709  015978  0EF9               	movlw	-7
  4710  01597A  AEE3               	btfss	plusw1,7,c
  4711  01597C  D01A               	goto	l8162
  4712                           
  4713                           ;stkvar	_val @ sp[(-5)+-5]
  4714  01597E  0EF6               	movlw	-10
  4715  015980  006F FF8C  F03A    	movff	plusw1,btemp+8
  4716  015986  0EF7               	movlw	-9
  4717  015988  006F FF8C  F03B    	movff	plusw1,btemp+9
  4718  01598E  0EF8               	movlw	-8
  4719  015990  006F FF8C  F03C    	movff	plusw1,btemp+10
  4720  015996  0EF9               	movlw	-7
  4721  015998  006F FF8C  F03D    	movff	plusw1,btemp+11
  4722  01599E  1E3A               	comf	(btemp+8)^0,f,c
  4723  0159A0  1E3B               	comf	(btemp+9)^0,f,c
  4724  0159A2  1E3C               	comf	(btemp+10)^0,f,c
  4725  0159A4  1E3D               	comf	(btemp+11)^0,f,c
  4726  0159A6  2A3A               	incf	(btemp+8)^0,f,c
  4727  0159A8  0E00               	movlw	0
  4728  0159AA  223B               	addwfc	(btemp+9)^0,f,c
  4729  0159AC  223C               	addwfc	(btemp+10)^0,f,c
  4730  0159AE  223D               	addwfc	(btemp+11)^0,f,c
  4731  0159B0  D010               	goto	L5
  4732  0159B2                     l8162:
  4733                           
  4734                           ;stkvar	_val @ sp[(-5)+-5]
  4735  0159B2  0EF6               	movlw	-10
  4736  0159B4  006F FF8C  F03A    	movff	plusw1,btemp+8
  4737  0159BA  0EF7               	movlw	-9
  4738  0159BC  006F FF8C  F03B    	movff	plusw1,btemp+9
  4739  0159C2  0EF8               	movlw	-8
  4740  0159C4  006F FF8C  F03C    	movff	plusw1,btemp+10
  4741  0159CA  0EF9               	movlw	-7
  4742  0159CC  006F FF8C  F03D    	movff	plusw1,btemp+11
  4743  0159D2                     L5:
  4744                           
  4745                           ;stkvar	_arg @ sp[(-5)+0]
  4746  0159D2  0EFB               	movlw	-5
  4747  0159D4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4748  0159DA  0EFC               	movlw	-4
  4749  0159DC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4750  0159E2  0EFD               	movlw	-3
  4751  0159E4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4752  0159EA  0EFE               	movlw	-2
  4753  0159EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4754                           
  4755                           ;stkvar	_val @ sp[(-5)+-5]
  4756  0159F2  0EF6               	movlw	-10
  4757  0159F4  50E3               	movf	plusw1,w,c
  4758  0159F6  E113               	bnz	l8170
  4759  0159F8  0EF7               	movlw	-9
  4760  0159FA  50E3               	movf	plusw1,w,c
  4761  0159FC  E110               	bnz	l8170
  4762  0159FE  0EF8               	movlw	-8
  4763  015A00  50E3               	movf	plusw1,w,c
  4764  015A02  E10D               	bnz	l8170
  4765  015A04  0EF9               	movlw	-7
  4766  015A06  50E3               	movf	plusw1,w,c
  4767  015A08  A4D8               	btfss	status,2,c
  4768  015A0A  D009               	goto	l8170
  4769  015A0C  0E00               	movlw	0
  4770  015A0E  6E32               	movwf	btemp^0,c
  4771  015A10  0E00               	movlw	0
  4772  015A12  6E33               	movwf	(btemp+1)^0,c
  4773  015A14  0E00               	movlw	0
  4774  015A16  6E34               	movwf	(btemp+2)^0,c
  4775  015A18  0E00               	movlw	0
  4776  015A1A  6E35               	movwf	(btemp+3)^0,c
  4777  015A1C  D0A2               	goto	l2727
  4778  015A1E                     l8170:
  4779  015A1E  0E96               	movlw	150
  4780  015A20  6E3D               	movwf	(btemp+11)^0,c
  4781                           
  4782                           ;stkvar	_exp @ sp[(-5)+4]
  4783  015A22  0EFF               	movlw	-1
  4784  015A24  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4785  015A2A  D00B               	goto	l8174
  4786  015A2C                     l8172:
  4787                           
  4788                           ;stkvar	_exp @ sp[(-5)+4]
  4789  015A2C  0EFF               	movlw	-1
  4790  015A2E  2AE3               	incf	plusw1,f,c
  4791                           
  4792                           ;stkvar	_arg @ sp[(-5)+0]
  4793  015A30  90D8               	bcf	status,0,c
  4794  015A32  0EFE               	movlw	-2
  4795  015A34  32E3               	rrcf	plusw1,f,c
  4796  015A36  0EFD               	movlw	-3
  4797  015A38  32E3               	rrcf	plusw1,f,c
  4798  015A3A  0EFC               	movlw	-4
  4799  015A3C  32E3               	rrcf	plusw1,f,c
  4800  015A3E  0EFB               	movlw	-5
  4801  015A40  32E3               	rrcf	plusw1,f,c
  4802  015A42                     l8174:
  4803                           
  4804                           ;stkvar	_arg @ sp[(-5)+0]
  4805  015A42  50E1               	movf	fsr1l,w,c
  4806  015A44  0FFB               	addlw	-5
  4807  015A46  6ED9               	movwf	fsr2l,c
  4808  015A48  50E2               	movf	fsr1h,w,c
  4809  015A4A  6EDA               	movwf	fsr2h,c
  4810  015A4C  0EFF               	movlw	255
  4811  015A4E  22DA               	addwfc	fsr2h,f,c
  4812  015A50  52DE               	movf	postinc2,f,c
  4813  015A52  52DE               	movf	postinc2,f,c
  4814  015A54  52DE               	movf	postinc2,f,c
  4815  015A56  0EFE               	movlw	254
  4816  015A58  14DD               	andwf	postdec2,w,c
  4817  015A5A  B4D8               	btfsc	status,2,c
  4818  015A5C  D018               	goto	l8182
  4819  015A5E  D7E6               	goto	l8172
  4820  015A60                     l8176:
  4821                           
  4822                           ;stkvar	_exp @ sp[(-5)+4]
  4823  015A60  0EFF               	movlw	-1
  4824  015A62  2AE3               	incf	plusw1,f,c
  4825                           
  4826                           ;stkvar	_arg @ sp[(-5)+0]
  4827  015A64  50E1               	movf	fsr1l,w,c
  4828  015A66  0FFB               	addlw	-5
  4829  015A68  6ED9               	movwf	fsr2l,c
  4830  015A6A  50E2               	movf	fsr1h,w,c
  4831  015A6C  6EDA               	movwf	fsr2h,c
  4832  015A6E  0EFF               	movlw	255
  4833  015A70  22DA               	addwfc	fsr2h,f,c
  4834  015A72  2ADE               	incf	postinc2,f,c
  4835  015A74  0E00               	movlw	0
  4836  015A76  22DE               	addwfc	postinc2,f,c
  4837  015A78  22DE               	addwfc	postinc2,f,c
  4838  015A7A  22DE               	addwfc	postinc2,f,c
  4839                           
  4840                           ;stkvar	_arg @ sp[(-5)+0]
  4841  015A7C  90D8               	bcf	status,0,c
  4842  015A7E  0EFE               	movlw	-2
  4843  015A80  32E3               	rrcf	plusw1,f,c
  4844  015A82  0EFD               	movlw	-3
  4845  015A84  32E3               	rrcf	plusw1,f,c
  4846  015A86  0EFC               	movlw	-4
  4847  015A88  32E3               	rrcf	plusw1,f,c
  4848  015A8A  0EFB               	movlw	-5
  4849  015A8C  32E3               	rrcf	plusw1,f,c
  4850  015A8E                     l8182:
  4851                           
  4852                           ;stkvar	_arg @ sp[(-5)+0]
  4853  015A8E  50E1               	movf	fsr1l,w,c
  4854  015A90  0FFB               	addlw	-5
  4855  015A92  6ED9               	movwf	fsr2l,c
  4856  015A94  50E2               	movf	fsr1h,w,c
  4857  015A96  6EDA               	movwf	fsr2h,c
  4858  015A98  0EFF               	movlw	255
  4859  015A9A  22DA               	addwfc	fsr2h,f,c
  4860  015A9C  52DE               	movf	postinc2,f,c
  4861  015A9E  52DE               	movf	postinc2,f,c
  4862  015AA0  52DE               	movf	postinc2,f,c
  4863  015AA2  0EFF               	movlw	255
  4864  015AA4  14DD               	andwf	postdec2,w,c
  4865  015AA6  B4D8               	btfsc	status,2,c
  4866  015AA8  D00C               	goto	l8186
  4867  015AAA  D7DA               	goto	l8176
  4868  015AAC                     l8184:
  4869                           
  4870                           ;stkvar	_exp @ sp[(-5)+4]
  4871  015AAC  0EFF               	movlw	-1
  4872  015AAE  06E3               	decf	plusw1,f,c
  4873                           
  4874                           ;stkvar	_arg @ sp[(-5)+0]
  4875  015AB0  90D8               	bcf	status,0,c
  4876  015AB2  0EFB               	movlw	-5
  4877  015AB4  36E3               	rlcf	plusw1,f,c
  4878  015AB6  0EFC               	movlw	-4
  4879  015AB8  36E3               	rlcf	plusw1,f,c
  4880  015ABA  0EFD               	movlw	-3
  4881  015ABC  36E3               	rlcf	plusw1,f,c
  4882  015ABE  0EFE               	movlw	-2
  4883  015AC0  36E3               	rlcf	plusw1,f,c
  4884  015AC2                     l8186:
  4885                           
  4886                           ;stkvar	_arg @ sp[(-5)+0]
  4887  015AC2  0EFD               	movlw	-3
  4888  015AC4  BEE3               	btfsc	plusw1,7,c
  4889  015AC6  D007               	goto	u7960
  4890                           
  4891                           ;stkvar	_exp @ sp[(-5)+4]
  4892  015AC8  0EFF               	movlw	-1
  4893  015ACA  006F FF8C  F032    	movff	plusw1,btemp
  4894  015AD0  0E02               	movlw	2
  4895  015AD2  6032               	cpfslt	btemp^0,c
  4896  015AD4  D7EB               	goto	l8184
  4897  015AD6                     u7960:
  4898                           
  4899                           ;stkvar	_exp @ sp[(-5)+4]
  4900  015AD6  0EFF               	movlw	-1
  4901  015AD8  B0E3               	btfsc	plusw1,0,c
  4902  015ADA  D002               	goto	l8194
  4903                           
  4904                           ;stkvar	_arg @ sp[(-5)+0]
  4905  015ADC  0EFD               	movlw	-3
  4906  015ADE  9EE3               	bcf	plusw1,7,c
  4907  015AE0                     l8194:
  4908                           
  4909                           ;stkvar	_exp @ sp[(-5)+4]
  4910  015AE0  50E1               	movf	fsr1l,w,c
  4911  015AE2  0FFF               	addlw	-1
  4912  015AE4  6ED9               	movwf	fsr2l,c
  4913  015AE6  50E2               	movf	fsr1h,w,c
  4914  015AE8  6EDA               	movwf	fsr2h,c
  4915  015AEA  0EFF               	movlw	255
  4916  015AEC  22DA               	addwfc	fsr2h,f,c
  4917  015AEE  90D8               	bcf	status,0,c
  4918  015AF0  32DF               	rrcf	indf2,f,c
  4919                           
  4920                           ;stkvar	_exp @ sp[(-5)+4]
  4921  015AF2  0EFF               	movlw	-1
  4922  015AF4  006F FF8C  F03D    	movff	plusw1,btemp+11
  4923  015AFA  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4924  015B00  6A37               	clrf	(btemp+5)^0,c
  4925  015B02  6A38               	clrf	(btemp+6)^0,c
  4926  015B04  6A39               	clrf	(btemp+7)^0,c
  4927  015B06  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4928  015B0C  6A38               	clrf	(btemp+6)^0,c
  4929  015B0E  6A37               	clrf	(btemp+5)^0,c
  4930  015B10  6A36               	clrf	(btemp+4)^0,c
  4931                           
  4932                           ;stkvar	_arg @ sp[(-5)+0]
  4933  015B12  50E1               	movf	fsr1l,w,c
  4934  015B14  0FFB               	addlw	-5
  4935  015B16  6ED9               	movwf	fsr2l,c
  4936  015B18  50E2               	movf	fsr1h,w,c
  4937  015B1A  6EDA               	movwf	fsr2h,c
  4938  015B1C  0EFF               	movlw	255
  4939  015B1E  22DA               	addwfc	fsr2h,f,c
  4940  015B20  5036               	movf	(btemp+4)^0,w,c
  4941  015B22  12DE               	iorwf	postinc2,f,c
  4942  015B24  5037               	movf	(btemp+5)^0,w,c
  4943  015B26  12DE               	iorwf	postinc2,f,c
  4944  015B28  5038               	movf	(btemp+6)^0,w,c
  4945  015B2A  12DE               	iorwf	postinc2,f,c
  4946  015B2C  5039               	movf	(btemp+7)^0,w,c
  4947  015B2E  12DE               	iorwf	postinc2,f,c
  4948                           
  4949                           ;stkvar	_sign @ sp[(-5)+-1]
  4950  015B30  0EFA               	movlw	-6
  4951  015B32  50E3               	movf	plusw1,w,c
  4952  015B34  B4D8               	btfsc	status,2,c
  4953  015B36  D005               	goto	l8204
  4954                           
  4955                           ;stkvar	_val @ sp[(-5)+-5]
  4956  015B38  0EF9               	movlw	-7
  4957  015B3A  AEE3               	btfss	plusw1,7,c
  4958  015B3C  D002               	goto	l8204
  4959                           
  4960                           ;stkvar	_arg @ sp[(-5)+0]
  4961  015B3E  0EFE               	movlw	-2
  4962  015B40  8EE3               	bsf	plusw1,7,c
  4963  015B42                     l8204:
  4964                           
  4965                           ;stkvar	_arg @ sp[(-5)+0]
  4966  015B42  0EFB               	movlw	-5
  4967  015B44  006F FF8C  F032    	movff	plusw1,btemp
  4968  015B4A  0EFC               	movlw	-4
  4969  015B4C  006F FF8C  F033    	movff	plusw1,btemp+1
  4970  015B52  0EFD               	movlw	-3
  4971  015B54  006F FF8C  F034    	movff	plusw1,btemp+2
  4972  015B5A  0EFE               	movlw	-2
  4973  015B5C  006F FF8C  F035    	movff	plusw1,btemp+3
  4974  015B62                     l2727:
  4975                           
  4976                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4977  015B62  0EF6               	movlw	246
  4978  015B64  26E1               	addwf	fsr1l,f,c
  4979  015B66  0EFF               	movlw	255
  4980  015B68  22E2               	addwfc	fsr1h,f,c
  4981  015B6A  0012               	return		;funcret
  4982  015B6C                     __end_of___xxtofl:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _clear_adc_scan *****************
  4986 ;; Defined at:
  4987 ;;		line 64 in file "daq.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1  [STACK] void 
  4994 ;; Registers used:
  4995 ;;		None
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/39
  4998 ;;		On exit  : 3F/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    6
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text20
  5016  0189AE                     __ptext20:
  5017                           	opt callstack 0
  5018  0189AE                     _clear_adc_scan:
  5019                           	opt callstack 24
  5020                           
  5021                           ;daq.c: 66:  R.done = 0;
  5022                           
  5023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5024                           ;incstack = 0
  5025  0189AE  0100               	movlb	0	; () banked
  5026  0189B0  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5030  0189B2  0012               	return		;funcret
  5031  0189B4                     __end_of_clear_adc_scan:
  5032                           	opt callstack 0
  5033                           
  5034 ;; *************** function _check_help *****************
  5035 ;; Defined at:
  5036 ;;		line 40 in file "mconfig.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  flipper         1  [STACK] const _Bool 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  estatus         1  [STACK] _Bool 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1  [STACK] _Bool 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5045 ;; Tracked objects:
  5046 ;;		On entry : 3F/2
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:   18
  5057 ;; This function calls:
  5058 ;;		_StartTimer
  5059 ;;		_TimerDone
  5060 ;;		_display_help
  5061 ;;		_display_info
  5062 ;;		_get_vterm_ptr
  5063 ;;		_help_button
  5064 ;;		_mode_lamp_bright
  5065 ;;		_mode_lamp_dim
  5066 ;;		_set_display_info
  5067 ;;		_set_temp_display_help
  5068 ;;		_set_vterm
  5069 ;;		_sprintf
  5070 ;;		_update_lcd
  5071 ;;		_vterm_dump
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text21
  5078  015740                     __ptext21:
  5079                           	opt callstack 0
  5080  015740                     _check_help:
  5081                           	opt callstack 0
  5082                           
  5083                           ; BSR set to: 0
  5084                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5085  015740  52E6               	movf	postinc1,f,c
  5086                           
  5087                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5088                           ;stkvar	_estatus @ sp[(-1)+0]
  5089                           
  5090                           ;incstack = 0
  5091  015742  0EFF               	movlw	-1
  5092  015744  6AE3               	clrf	plusw1,c
  5093                           
  5094                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5095  015746  EC77  F0C0         	call	_help_button	;wreg free
  5096  01574A  5032               	movf	btemp^0,w,c
  5097  01574C  B4D8               	btfsc	status,2,c
  5098  01574E  D0D3               	goto	l10422
  5099  015750  ECC7  F0C4         	call	_display_info	;wreg free
  5100  015754  0432               	decf	btemp^0,w,c
  5101  015756  B4D8               	btfsc	status,2,c
  5102  015758  D0CE               	goto	l10422
  5103                           
  5104                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5105  01575A  0EDC               	movlw	220
  5106  01575C  6EE6               	movwf	postinc1,c
  5107  01575E  0E05               	movlw	5
  5108  015760  6EE6               	movwf	postinc1,c
  5109  015762  0E0B               	movlw	11
  5110  015764  6EE6               	movwf	postinc1,c
  5111  015766  EC59  F0C0         	call	_StartTimer	;wreg free
  5112                           
  5113                           ;mconfig.c: 48:   if (V.debug)
  5114  01576A  0102               	movlb	2	; () banked
  5115  01576C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5116                           
  5117                           ; BSR set to: 2
  5118                           ;mconfig.c: 49:    vterm_dump();
  5119  01576E  ECFA  F0B2         	call	_vterm_dump	;wreg free
  5120                           
  5121                           ;mconfig.c: 51:   set_vterm(1);
  5122  015772  0E01               	movlw	1
  5123  015774  6EE6               	movwf	postinc1,c
  5124  015776  EC0A  F0C4         	call	_set_vterm	;wreg free
  5125                           
  5126                           ; BSR set to: 5
  5127                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5128  01577A  ECC7  F0C4         	call	_display_info	;wreg free
  5129  01577E  5032               	movf	btemp^0,w,c
  5130  015780  6EE6               	movwf	postinc1,c
  5131  015782  EC87  F0C4         	call	_set_temp_display_help	;wreg free
  5132                           
  5133                           ; BSR set to: 2
  5134                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5135  015786  0E01               	movlw	1
  5136  015788  6EE6               	movwf	postinc1,c
  5137  01578A  ECCF  F0C3         	call	_set_display_info	;wreg free
  5138                           
  5139                           ;mconfig.c: 54:   if (flipper) {
  5140                           ;stkvar	_flipper @ sp[(-1)+-1]
  5141  01578E  0EFE               	movlw	-2
  5142  015790  50E3               	movf	plusw1,w,c
  5143  015792  B4D8               	btfsc	status,2,c
  5144  015794  D019               	goto	l10408
  5145                           
  5146                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5147  015796  0EC0               	movlw	low STR_18
  5148  015798  6EE6               	movwf	postinc1,c
  5149  01579A  0EFF               	movlw	high STR_18
  5150  01579C  6EE6               	movwf	postinc1,c
  5151  01579E  0EC6               	movlw	low STR_20
  5152  0157A0  6EE6               	movwf	postinc1,c
  5153  0157A2  0EFE               	movlw	high STR_20
  5154  0157A4  6EE6               	movwf	postinc1,c
  5155  0157A6  0E01               	movlw	1
  5156  0157A8  6EE6               	movwf	postinc1,c
  5157  0157AA  0E00               	movlw	0
  5158  0157AC  6EE6               	movwf	postinc1,c
  5159  0157AE  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5160  0157B2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5161  0157B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5162  0157BE  0E06               	movlw	6
  5163  0157C0  6EE6               	movwf	postinc1,c
  5164  0157C2  ECC0  F0B5         	call	_sprintf	;wreg free
  5165                           
  5166                           ;mconfig.c: 56:   } else {
  5167  0157C6  D018               	goto	l1566
  5168  0157C8                     l10408:
  5169                           
  5170                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5171  0157C8  0ED6               	movlw	low STR_19
  5172  0157CA  6EE6               	movwf	postinc1,c
  5173  0157CC  0EFF               	movlw	high STR_19
  5174  0157CE  6EE6               	movwf	postinc1,c
  5175  0157D0  0EC6               	movlw	low STR_20
  5176  0157D2  6EE6               	movwf	postinc1,c
  5177  0157D4  0EFE               	movlw	high STR_20
  5178  0157D6  6EE6               	movwf	postinc1,c
  5179  0157D8  0E01               	movlw	1
  5180  0157DA  6EE6               	movwf	postinc1,c
  5181  0157DC  0E00               	movlw	0
  5182  0157DE  6EE6               	movwf	postinc1,c
  5183  0157E0  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5184  0157E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5185  0157EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5186  0157F0  0E06               	movlw	6
  5187  0157F2  6EE6               	movwf	postinc1,c
  5188  0157F4  ECC0  F0B5         	call	_sprintf	;wreg free
  5189  0157F8                     l1566:
  5190                           
  5191                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5192  0157F8  0102               	movlb	2	; () banked
  5193  0157FA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5194  0157FC  32E8               	rrcf	wreg,f,c
  5195  0157FE  32E8               	rrcf	wreg,f,c
  5196  015800  0B03               	andlw	3
  5197  015802  0D24               	mullw	36
  5198  015804  0E12               	movlw	18
  5199  015806  26F3               	addwf	243,f,c
  5200  015808  0E00               	movlw	0
  5201  01580A  22F4               	addwfc	244,f,c
  5202  01580C  0E0B               	movlw	low _T
  5203  01580E  6E3C               	movwf	(btemp+10)^0,c
  5204  015810  0EFE               	movlw	high _T
  5205  015812  6E3D               	movwf	(btemp+11)^0,c
  5206  015814  50F3               	movf	243,w,c
  5207  015816  263C               	addwf	(btemp+10)^0,f,c
  5208  015818  50F4               	movf	244,w,c
  5209  01581A  223D               	addwfc	(btemp+11)^0,f,c
  5210  01581C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5211  015822  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5212  015828  0ECC               	movlw	low STR_22
  5213  01582A  6EE6               	movwf	postinc1,c
  5214  01582C  0EFF               	movlw	high STR_22
  5215  01582E  6EE6               	movwf	postinc1,c
  5216  015830  0E01               	movlw	1
  5217  015832  6EE6               	movwf	postinc1,c
  5218  015834  0E01               	movlw	1
  5219  015836  6EE6               	movwf	postinc1,c
  5220  015838  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5221  01583C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5222  015842  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5223  015848  0E06               	movlw	6
  5224  01584A  6EE6               	movwf	postinc1,c
  5225  01584C  ECC0  F0B5         	call	_sprintf	;wreg free
  5226                           
  5227                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5228  015850  0102               	movlb	2	; () banked
  5229  015852  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5230  015854  32E8               	rrcf	wreg,f,c
  5231  015856  32E8               	rrcf	wreg,f,c
  5232  015858  0B03               	andlw	3
  5233  01585A  0D24               	mullw	36
  5234  01585C  0E0B               	movlw	low _T
  5235  01585E  6E3C               	movwf	(btemp+10)^0,c
  5236  015860  0EFE               	movlw	high _T
  5237  015862  6E3D               	movwf	(btemp+11)^0,c
  5238  015864  50F3               	movf	243,w,c
  5239  015866  263C               	addwf	(btemp+10)^0,f,c
  5240  015868  50F4               	movf	244,w,c
  5241  01586A  223D               	addwfc	(btemp+11)^0,f,c
  5242  01586C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5243  015872  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5244  015878  0ECC               	movlw	low STR_22
  5245  01587A  6EE6               	movwf	postinc1,c
  5246  01587C  0EFF               	movlw	high STR_22
  5247  01587E  6EE6               	movwf	postinc1,c
  5248  015880  0E01               	movlw	1
  5249  015882  6EE6               	movwf	postinc1,c
  5250  015884  0E02               	movlw	2
  5251  015886  6EE6               	movwf	postinc1,c
  5252  015888  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5253  01588C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5254  015892  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5255  015898  0E06               	movlw	6
  5256  01589A  6EE6               	movwf	postinc1,c
  5257  01589C  ECC0  F0B5         	call	_sprintf	;wreg free
  5258                           
  5259                           ;mconfig.c: 61:   V.help_id++;
  5260  0158A0  EE20  F29B         	lfsr	2,_V+155	;volatile
  5261  0158A4  38DF               	swapf	223,w,c
  5262  0158A6  6E3D               	movwf	(btemp+11)^0,c
  5263  0158A8  323D               	rrcf	(btemp+11)^0,f,c
  5264  0158AA  303D               	rrcf	(btemp+11)^0,w,c
  5265  0158AC  0B03               	andlw	3
  5266  0158AE  6E3D               	movwf	(btemp+11)^0,c
  5267  0158B0  2A3D               	incf	(btemp+11)^0,f,c
  5268  0158B2  3A3D               	swapf	(btemp+11)^0,f,c
  5269  0158B4  363D               	rlcf	(btemp+11)^0,f,c
  5270  0158B6  363D               	rlcf	(btemp+11)^0,f,c
  5271  0158B8  50DF               	movf	223,w,c
  5272  0158BA  183D               	xorwf	(btemp+11)^0,w,c
  5273  0158BC  0B3F               	andlw	-193
  5274  0158BE  183D               	xorwf	(btemp+11)^0,w,c
  5275  0158C0  6EDF               	movwf	223,c
  5276                           
  5277                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5278  0158C2  0EB8               	movlw	184
  5279  0158C4  6EE6               	movwf	postinc1,c
  5280  0158C6  0E0B               	movlw	11
  5281  0158C8  6EE6               	movwf	postinc1,c
  5282  0158CA  0E09               	movlw	9
  5283  0158CC  6EE6               	movwf	postinc1,c
  5284  0158CE  EC59  F0C0         	call	_StartTimer	;wreg free
  5285                           
  5286                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5287  0158D2  0EB8               	movlw	184
  5288  0158D4  6EE6               	movwf	postinc1,c
  5289  0158D6  0E0B               	movlw	11
  5290  0158D8  6EE6               	movwf	postinc1,c
  5291  0158DA  0E07               	movlw	7
  5292  0158DC  6EE6               	movwf	postinc1,c
  5293  0158DE  EC59  F0C0         	call	_StartTimer	;wreg free
  5294                           
  5295                           ;mconfig.c: 64:   mode_lamp_bright();
  5296  0158E2  EC96  F0C4         	call	_mode_lamp_bright	;wreg free
  5297                           
  5298                           ;mconfig.c: 65:   update_lcd(1);
  5299  0158E6  0E01               	movlw	1
  5300  0158E8  6EE6               	movwf	postinc1,c
  5301  0158EA  EC39  F0B5         	call	_update_lcd	;wreg free
  5302                           
  5303                           ;mconfig.c: 66:   estatus=1;
  5304                           ;stkvar	_estatus @ sp[(-1)+0]
  5305  0158EE  0EFF               	movlw	-1
  5306  0158F0  6AE3               	clrf	plusw1,c
  5307  0158F2  2AE3               	incf	plusw1,f,c
  5308                           
  5309                           ;mconfig.c: 67:  } else {
  5310  0158F4  D032               	goto	l10438
  5311  0158F6                     l10422:
  5312                           
  5313                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5314  0158F6  0E09               	movlw	9
  5315  0158F8  6EE6               	movwf	postinc1,c
  5316  0158FA  EC49  F0C3         	call	_TimerDone	;wreg free
  5317  0158FE  5032               	movf	btemp^0,w,c
  5318  015900  B4D8               	btfsc	status,2,c
  5319  015902  D02B               	goto	l10438
  5320                           
  5321                           ;mconfig.c: 69:    set_vterm(0);
  5322  015904  0E00               	movlw	0
  5323  015906  6EE6               	movwf	postinc1,c
  5324  015908  EC0A  F0C4         	call	_set_vterm	;wreg free
  5325                           
  5326                           ; BSR set to: 5
  5327                           ;mconfig.c: 70:    V.help = 0;
  5328  01590C  0102               	movlb	2	; () banked
  5329  01590E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5330                           
  5331                           ; BSR set to: 2
  5332                           ;mconfig.c: 71:    set_display_info(display_help());
  5333  015910  ECCB  F0C4         	call	_display_help	;wreg free
  5334  015914  5032               	movf	btemp^0,w,c
  5335  015916  6EE6               	movwf	postinc1,c
  5336  015918  ECCF  F0C3         	call	_set_display_info	;wreg free
  5337                           
  5338                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5339  01591C  0060  FA57  FFE6   	movff	_V+149,postinc1
  5340  015922  0060  FA5B  FFE6   	movff	_V+150,postinc1
  5341  015928  EC33  F0C4         	call	_mode_lamp_dim	;wreg free
  5342                           
  5343                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5344  01592C  0E0B               	movlw	11
  5345  01592E  6EE6               	movwf	postinc1,c
  5346  015930  EC49  F0C3         	call	_TimerDone	;wreg free
  5347  015934  5032               	movf	btemp^0,w,c
  5348  015936  B4D8               	btfsc	status,2,c
  5349  015938  D010               	goto	l10438
  5350                           
  5351                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5352  01593A  0102               	movlb	2	; () banked
  5353  01593C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5354  01593E  A4D8               	btfss	status,2,c
  5355  015940  D002               	goto	u10420
  5356  015942  0E01               	movlw	1
  5357  015944  D001               	goto	u10430
  5358  015946                     u10420:
  5359  015946  0E00               	movlw	0
  5360  015948                     u10430:
  5361  015948  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5362                           
  5363                           ; BSR set to: 2
  5364                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5365  01594A  0EDC               	movlw	220
  5366  01594C  6EE6               	movwf	postinc1,c
  5367  01594E  0E05               	movlw	5
  5368  015950  6EE6               	movwf	postinc1,c
  5369  015952  0E0B               	movlw	11
  5370  015954  6EE6               	movwf	postinc1,c
  5371  015956  EC59  F0C0         	call	_StartTimer	;wreg free
  5372  01595A                     l10438:
  5373                           
  5374                           ;mconfig.c: 79:  return estatus;
  5375                           ;stkvar	_estatus @ sp[(-1)+0]
  5376  01595A  0EFF               	movlw	-1
  5377  01595C  006F FF8C  F032    	movff	plusw1,btemp
  5378                           
  5379                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5380  015962  52E5               	movf	postdec1,f,c
  5381  015964  52E5               	movf	postdec1,f,c
  5382  015966  0012               	return		;funcret
  5383  015968                     __end_of_check_help:
  5384                           	opt callstack 0
  5385                           
  5386 ;; *************** function _vterm_dump *****************
  5387 ;; Defined at:
  5388 ;;		line 121 in file "mconfig.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1  [STACK] void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5397 ;; Tracked objects:
  5398 ;;		On entry : 3F/2
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:   17
  5409 ;; This function calls:
  5410 ;;		_WaitMs
  5411 ;;		_eaDogM_WriteStringAtPos
  5412 ;;		_get_vterm_ptr
  5413 ;;		_sprintf
  5414 ;;		_wait_lcd_done
  5415 ;; This function is called by:
  5416 ;;		_check_help
  5417 ;; This function uses a reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text22
  5421  0165F4                     __ptext22:
  5422                           	opt callstack 0
  5423  0165F4                     _vterm_dump:
  5424                           	opt callstack 12
  5425                           
  5426                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5427                           
  5428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5429                           ;incstack = 0
  5430  0165F4  0E01               	movlw	1
  5431  0165F6  6EE6               	movwf	postinc1,c
  5432  0165F8  0E00               	movlw	0
  5433  0165FA  6EE6               	movwf	postinc1,c
  5434  0165FC  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5435  016600  0060  F0CB  FFE6   	movff	btemp,postinc1
  5436  016606  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5437  01660C  0E00               	movlw	0
  5438  01660E  6EE6               	movwf	postinc1,c
  5439  016610  0E00               	movlw	0
  5440  016612  6EE6               	movwf	postinc1,c
  5441  016614  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5442  016618  0060  F0CB  FFE6   	movff	btemp,postinc1
  5443  01661E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5444  016624  0EA2               	movlw	low STR_24
  5445  016626  6EE6               	movwf	postinc1,c
  5446  016628  0EFF               	movlw	high STR_24
  5447  01662A  6EE6               	movwf	postinc1,c
  5448  01662C  0E01               	movlw	low (_V+1)
  5449  01662E  6EE6               	movwf	postinc1,c
  5450  016630  0E02               	movlw	high (_V+1)
  5451  016632  6EE6               	movwf	postinc1,c
  5452  016634  0E08               	movlw	8
  5453  016636  6EE6               	movwf	postinc1,c
  5454  016638  ECC0  F0B5         	call	_sprintf	;wreg free
  5455                           
  5456                           ;mconfig.c: 124:  wait_lcd_done();
  5457  01663C  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5461  016640  0E01               	movlw	low (_V+1)
  5462  016642  6EE6               	movwf	postinc1,c
  5463  016644  0E02               	movlw	high (_V+1)
  5464  016646  6EE6               	movwf	postinc1,c
  5465  016648  0E00               	movlw	0
  5466  01664A  6EE6               	movwf	postinc1,c
  5467  01664C  0E00               	movlw	0
  5468  01664E  6EE6               	movwf	postinc1,c
  5469  016650  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5470                           
  5471                           ; BSR set to: 59
  5472                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5473  016654  0E01               	movlw	1
  5474  016656  6EE6               	movwf	postinc1,c
  5475  016658  0E01               	movlw	1
  5476  01665A  6EE6               	movwf	postinc1,c
  5477  01665C  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5478  016660  0060  F0CB  FFE6   	movff	btemp,postinc1
  5479  016666  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5480  01666C  0E00               	movlw	0
  5481  01666E  6EE6               	movwf	postinc1,c
  5482  016670  0E01               	movlw	1
  5483  016672  6EE6               	movwf	postinc1,c
  5484  016674  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5485  016678  0060  F0CB  FFE6   	movff	btemp,postinc1
  5486  01667E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5487  016684  0EA2               	movlw	low STR_24
  5488  016686  6EE6               	movwf	postinc1,c
  5489  016688  0EFF               	movlw	high STR_24
  5490  01668A  6EE6               	movwf	postinc1,c
  5491  01668C  0E01               	movlw	low (_V+1)
  5492  01668E  6EE6               	movwf	postinc1,c
  5493  016690  0E02               	movlw	high (_V+1)
  5494  016692  6EE6               	movwf	postinc1,c
  5495  016694  0E08               	movlw	8
  5496  016696  6EE6               	movwf	postinc1,c
  5497  016698  ECC0  F0B5         	call	_sprintf	;wreg free
  5498                           
  5499                           ;mconfig.c: 127:  wait_lcd_done();
  5500  01669C  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  5501                           
  5502                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5503  0166A0  0E01               	movlw	low (_V+1)
  5504  0166A2  6EE6               	movwf	postinc1,c
  5505  0166A4  0E02               	movlw	high (_V+1)
  5506  0166A6  6EE6               	movwf	postinc1,c
  5507  0166A8  0E00               	movlw	0
  5508  0166AA  6EE6               	movwf	postinc1,c
  5509  0166AC  0E01               	movlw	1
  5510  0166AE  6EE6               	movwf	postinc1,c
  5511  0166B0  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5512                           
  5513                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5514  0166B4  0E01               	movlw	1
  5515  0166B6  6EE6               	movwf	postinc1,c
  5516  0166B8  0E02               	movlw	2
  5517  0166BA  6EE6               	movwf	postinc1,c
  5518  0166BC  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5519  0166C0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5520  0166C6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5521  0166CC  0E00               	movlw	0
  5522  0166CE  6EE6               	movwf	postinc1,c
  5523  0166D0  0E02               	movlw	2
  5524  0166D2  6EE6               	movwf	postinc1,c
  5525  0166D4  EC60  F0C1         	call	_get_vterm_ptr	;wreg free
  5526  0166D8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5527  0166DE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5528  0166E4  0EA2               	movlw	low STR_24
  5529  0166E6  6EE6               	movwf	postinc1,c
  5530  0166E8  0EFF               	movlw	high STR_24
  5531  0166EA  6EE6               	movwf	postinc1,c
  5532  0166EC  0E01               	movlw	low (_V+1)
  5533  0166EE  6EE6               	movwf	postinc1,c
  5534  0166F0  0E02               	movlw	high (_V+1)
  5535  0166F2  6EE6               	movwf	postinc1,c
  5536  0166F4  0E08               	movlw	8
  5537  0166F6  6EE6               	movwf	postinc1,c
  5538  0166F8  ECC0  F0B5         	call	_sprintf	;wreg free
  5539                           
  5540                           ;mconfig.c: 130:  wait_lcd_done();
  5541  0166FC  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5545  016700  0E01               	movlw	low (_V+1)
  5546  016702  6EE6               	movwf	postinc1,c
  5547  016704  0E02               	movlw	high (_V+1)
  5548  016706  6EE6               	movwf	postinc1,c
  5549  016708  0E00               	movlw	0
  5550  01670A  6EE6               	movwf	postinc1,c
  5551  01670C  0E02               	movlw	2
  5552  01670E  6EE6               	movwf	postinc1,c
  5553  016710  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5554                           
  5555                           ; BSR set to: 59
  5556                           ;mconfig.c: 132:  WaitMs(3000);
  5557  016714  0EB8               	movlw	184
  5558  016716  6EE6               	movwf	postinc1,c
  5559  016718  0E0B               	movlw	11
  5560  01671A  6EE6               	movwf	postinc1,c
  5561  01671C  EC93  F0C0         	call	_WaitMs	;wreg free
  5562                           
  5563                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5564  016720  0012               	return		;funcret
  5565  016722                     __end_of_vterm_dump:
  5566                           	opt callstack 0
  5567                           
  5568 ;; *************** function _sprintf *****************
  5569 ;; Defined at:
  5570 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  s               2  [STACK] PTR unsigned char 
  5573 ;;		 -> D.lcd(216), D(218), V(187), 
  5574 ;;  fmt             2  [STACK] PTR const unsigned char 
  5575 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  5576 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  5577 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  5578 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  5579 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(19), 
  5580 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  5581 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  f               6  [STACK] struct _IO_FILE
  5584 ;;  ap              2  [STACK] PTR void [1]
  5585 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5586 ;;  ret             2    0        int 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2  [STACK] int 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/5
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:   14
  5603 ;; This function calls:
  5604 ;;		_vfprintf
  5605 ;; This function is called by:
  5606 ;;		_main
  5607 ;;		_check_help
  5608 ;;		_vterm_dump
  5609 ;; This function uses a reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text23
  5613  016B80                     __ptext23:
  5614                           	opt callstack 0
  5615  016B80                     _sprintf:
  5616                           	opt callstack 0
  5617                           
  5618                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5619  016B80  0E08               	movlw	8
  5620  016B82  26E1               	addwf	fsr1l,f,c
  5621  016B84  0E00               	movlw	0
  5622  016B86  22E2               	addwfc	fsr1h,f,c
  5623                           
  5624                           ;incstack = 0
  5625  016B88  0EFE               	movlw	254
  5626  016B8A  6E3C               	movwf	(btemp+10)^0,c
  5627  016B8C  0EFF               	movlw	255
  5628  016B8E  6E3D               	movwf	(btemp+11)^0,c
  5629                           
  5630                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5631  016B90  0EF5               	movlw	245
  5632  016B92  24E1               	addwf	fsr1l,w,c
  5633  016B94  6E3A               	movwf	(btemp+8)^0,c
  5634  016B96  0EFF               	movlw	255
  5635  016B98  20E2               	addwfc	fsr1h,w,c
  5636  016B9A  6E3B               	movwf	(btemp+9)^0,c
  5637  016B9C  503C               	movf	(btemp+10)^0,w,c
  5638  016B9E  263A               	addwf	(btemp+8)^0,f,c
  5639  016BA0  503D               	movf	(btemp+11)^0,w,c
  5640  016BA2  223B               	addwfc	(btemp+9)^0,f,c
  5641                           
  5642                           ;stkvar	_ap @ sp[(-8)+6]
  5643  016BA4  0EFF               	movlw	-1
  5644  016BA6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5645  016BAC  0EFE               	movlw	-2
  5646  016BAE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5647                           
  5648                           ;stkvar	_s @ sp[(-8)+-3]
  5649  016BB4  0EF5               	movlw	-11
  5650  016BB6  006F FF8C  F03C    	movff	plusw1,btemp+10
  5651  016BBC  0EF6               	movlw	-10
  5652  016BBE  006F FF8C  F03D    	movff	plusw1,btemp+11
  5653                           
  5654                           ;stkvar	_f @ sp[(-8)+0]
  5655  016BC4  0EF9               	movlw	-7
  5656  016BC6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5657  016BCC  0EF8               	movlw	-8
  5658  016BCE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5659                           
  5660                           ;stkvar	_f @ sp[(-8)+0]
  5661  016BD4  0EFA               	movlw	250
  5662  016BD6  24E1               	addwf	fsr1l,w,c
  5663  016BD8  6ED9               	movwf	fsr2l,c
  5664  016BDA  0EFF               	movlw	255
  5665  016BDC  20E2               	addwfc	fsr1h,w,c
  5666  016BDE  6EDA               	movwf	fsr2h,c
  5667  016BE0  0E00               	movlw	0
  5668  016BE2  6EDE               	movwf	postinc2,c
  5669  016BE4  0E00               	movlw	0
  5670  016BE6  6EDD               	movwf	postdec2,c
  5671                           
  5672                           ;stkvar	_f @ sp[(-8)+0]
  5673  016BE8  0EFC               	movlw	252
  5674  016BEA  24E1               	addwf	fsr1l,w,c
  5675  016BEC  6ED9               	movwf	fsr2l,c
  5676  016BEE  0EFF               	movlw	255
  5677  016BF0  20E2               	addwfc	fsr1h,w,c
  5678  016BF2  6EDA               	movwf	fsr2h,c
  5679  016BF4  0E00               	movlw	0
  5680  016BF6  6EDE               	movwf	postinc2,c
  5681  016BF8  0E00               	movlw	0
  5682  016BFA  6EDD               	movwf	postdec2,c
  5683                           
  5684                           ;stkvar	_ap @ sp[(-8)+6]
  5685  016BFC  0EFE               	movlw	254
  5686  016BFE  24E1               	addwf	fsr1l,w,c
  5687  016C00  6E32               	movwf	btemp^0,c
  5688  016C02  0EFF               	movlw	255
  5689  016C04  20E2               	addwfc	fsr1h,w,c
  5690  016C06  6E33               	movwf	(btemp+1)^0,c
  5691  016C08  0060  F0CB  FFE6   	movff	btemp,postinc1
  5692  016C0E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5693                           
  5694                           ;stkvar	_fmt @ sp[(-10)+-5]
  5695  016C14  0EF1               	movlw	-15
  5696  016C16  006F FF8F FFE6     	movff	plusw1,postinc1
  5697  016C1C  006F FF8F FFE6     	movff	plusw1,postinc1
  5698                           
  5699                           ;stkvar	_f @ sp[(-12)+0]
  5700  016C22  0EF4               	movlw	244
  5701  016C24  24E1               	addwf	fsr1l,w,c
  5702  016C26  6E32               	movwf	btemp^0,c
  5703  016C28  0EFF               	movlw	255
  5704  016C2A  20E2               	addwfc	fsr1h,w,c
  5705  016C2C  6E33               	movwf	(btemp+1)^0,c
  5706  016C2E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5707  016C34  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5708  016C3A  ECB3  F0B8         	call	_vfprintf	;wreg free
  5709                           
  5710                           ;stkvar	_f @ sp[(-8)+0]
  5711  016C3E  0EFA               	movlw	250
  5712  016C40  24E1               	addwf	fsr1l,w,c
  5713  016C42  6ED9               	movwf	fsr2l,c
  5714  016C44  0EFF               	movlw	255
  5715  016C46  20E2               	addwfc	fsr1h,w,c
  5716  016C48  6EDA               	movwf	fsr2h,c
  5717  016C4A  006F FF78  F03C    	movff	postinc2,btemp+10
  5718  016C50  006F FF74  F03D    	movff	postdec2,btemp+11
  5719                           
  5720                           ;stkvar	_s @ sp[(-8)+-3]
  5721  016C56  0EF5               	movlw	-11
  5722  016C58  006F FF8C  F03A    	movff	plusw1,btemp+8
  5723  016C5E  0EF6               	movlw	-10
  5724  016C60  006F FF8C  F03B    	movff	plusw1,btemp+9
  5725  016C66  503C               	movf	(btemp+10)^0,w,c
  5726  016C68  243A               	addwf	(btemp+8)^0,w,c
  5727  016C6A  6ED9               	movwf	fsr2l,c
  5728  016C6C  503D               	movf	(btemp+11)^0,w,c
  5729  016C6E  203B               	addwfc	(btemp+9)^0,w,c
  5730  016C70  6EDA               	movwf	fsr2h,c
  5731  016C72  0E00               	movlw	0
  5732  016C74  6EDF               	movwf	indf2,c
  5733                           
  5734                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5735  016C76  0EF8               	movlw	248
  5736  016C78  26E1               	addwf	fsr1l,f,c
  5737  016C7A  0EFF               	movlw	255
  5738  016C7C  22E2               	addwfc	fsr1h,f,c
  5739  016C7E  52E5               	movf	postdec1,f,c
  5740  016C80  50E7               	movf	indf1,w,c
  5741  016C82  5EE1               	subwf	fsr1l,f,c
  5742  016C84  0E00               	movlw	0
  5743  016C86  5AE2               	subwfb	fsr1h,f,c
  5744  016C88  0012               	return		;funcret
  5745  016C8A                     __end_of_sprintf:
  5746                           	opt callstack 0
  5747                           
  5748 ;; *************** function _get_vterm_ptr *****************
  5749 ;; Defined at:
  5750 ;;		line 116 in file "mconfig.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  line            1  [STACK] const unsigned char 
  5753 ;;  vterm           1  [STACK] const unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  2  [STACK] PTR unsigned char 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/5
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    6
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_main
  5776 ;;		_check_help
  5777 ;;		_vterm_dump
  5778 ;; This function uses a reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text24
  5782  0182C0                     __ptext24:
  5783                           	opt callstack 0
  5784  0182C0                     _get_vterm_ptr:
  5785                           	opt callstack 24
  5786                           
  5787                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5788                           ;stkvar	_vterm @ sp[(0)+-2]
  5789                           
  5790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5791                           ;incstack = 0
  5792  0182C0  0EFE               	movlw	-2
  5793  0182C2  50E3               	movf	plusw1,w,c
  5794  0182C4  0B03               	andlw	3
  5795  0182C6  0D36               	mullw	54
  5796  0182C8  0E00               	movlw	low _D
  5797  0182CA  6E32               	movwf	btemp^0,c
  5798  0182CC  0E05               	movlw	high _D
  5799  0182CE  6E33               	movwf	(btemp+1)^0,c
  5800  0182D0  50F3               	movf	243,w,c
  5801  0182D2  2632               	addwf	btemp^0,f,c
  5802  0182D4  50F4               	movf	244,w,c
  5803  0182D6  2233               	addwfc	(btemp+1)^0,f,c
  5804                           
  5805                           ;stkvar	_line @ sp[(0)+-1]
  5806  0182D8  0EFF               	movlw	-1
  5807  0182DA  50E3               	movf	plusw1,w,c
  5808  0182DC  0B03               	andlw	3
  5809  0182DE  0D12               	mullw	18
  5810  0182E0  50F3               	movf	243,w,c
  5811  0182E2  2632               	addwf	btemp^0,f,c
  5812  0182E4  50F4               	movf	244,w,c
  5813  0182E6  2233               	addwfc	(btemp+1)^0,f,c
  5814                           
  5815                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5816  0182E8  52E5               	movf	postdec1,f,c
  5817  0182EA  52E5               	movf	postdec1,f,c
  5818  0182EC  0012               	return		;funcret
  5819  0182EE                     __end_of_get_vterm_ptr:
  5820                           	opt callstack 0
  5821                           
  5822 ;; *************** function _WaitMs *****************
  5823 ;; Defined at:
  5824 ;;		line 32 in file "timers.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  numMilliseco    2  [STACK] const unsigned short 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1  [STACK] void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/2
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    7
  5845 ;; This function calls:
  5846 ;;		_StartTimer
  5847 ;;		_TimerDone
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;;		_vterm_dump
  5851 ;; This function uses a reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text25
  5855  018126                     __ptext25:
  5856                           	opt callstack 0
  5857  018126                     _WaitMs:
  5858                           	opt callstack 21
  5859                           
  5860                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5861                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5862                           
  5863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5864                           ;incstack = 0
  5865  018126  0EFE               	movlw	-2
  5866  018128  006F FF8F FFE6     	movff	plusw1,postinc1
  5867  01812E  006F FF8F FFE6     	movff	plusw1,postinc1
  5868  018134  0E00               	movlw	0
  5869  018136  6EE6               	movwf	postinc1,c
  5870  018138  EC59  F0C0         	call	_StartTimer	;wreg free
  5871                           
  5872                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5873  01813C  D005               	goto	l8114
  5874  01813E                     l1496:
  5875                           
  5876                           ;timers.c: 36:   __nop();
  5877  01813E  F000               	nop	
  5878                           
  5879                           ;timers.c: 37:   __nop();
  5880  018140  F000               	nop	
  5881                           
  5882                           ;timers.c: 38:   __nop();
  5883  018142  F000               	nop	
  5884                           
  5885                           ;timers.c: 39:   __nop();
  5886  018144  F000               	nop	
  5887  018146  0004               	clrwdt		;# 
  5888  018148                     l8114:
  5889                           
  5890                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5891  018148  0E00               	movlw	0
  5892  01814A  6EE6               	movwf	postinc1,c
  5893  01814C  EC49  F0C3         	call	_TimerDone	;wreg free
  5894  018150  5032               	movf	btemp^0,w,c
  5895  018152  B4D8               	btfsc	status,2,c
  5896  018154  D7F4               	goto	l1496
  5897                           
  5898                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5899  018156  52E5               	movf	postdec1,f,c
  5900  018158  52E5               	movf	postdec1,f,c
  5901  01815A  0012               	return		;funcret
  5902  01815C                     __end_of_WaitMs:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function _update_lcd *****************
  5906 ;; Defined at:
  5907 ;;		line 85 in file "mconfig.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  vterm           1  [STACK] unsigned char 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1  [STACK] unsigned char 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/5
  5918 ;;		On exit  : 1/1
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;Total ram usage:        0 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   17
  5928 ;; This function calls:
  5929 ;;		_eaDogM_WriteStringAtPos
  5930 ;;		_wait_lcd_done
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;;		_check_help
  5934 ;; This function uses a reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text26
  5938  016A72                     __ptext26:
  5939                           	opt callstack 0
  5940  016A72                     _update_lcd:
  5941                           	opt callstack 13
  5942                           
  5943                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5944                           ;stkvar	_vterm @ sp[(0)+-1]
  5945                           
  5946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5947                           ;incstack = 0
  5948  016A72  0EFF               	movlw	-1
  5949  016A74  006F FF8C  F032    	movff	plusw1,btemp
  5950  016A7A  0E03               	movlw	3
  5951  016A7C  1632               	andwf	btemp^0,f,c
  5952  016A7E  0EFF               	movlw	-1
  5953  016A80  0060  F0CB  FFE3   	movff	btemp,plusw1
  5954                           
  5955                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5956  016A86  0105               	movlb	5	; () banked
  5957  016A88  A1D8               	btfss	(_D+216)& (0+255),0,b
  5958  016A8A  D004               	goto	l10290
  5959                           
  5960                           ; BSR set to: 5
  5961                           ;stkvar	_vterm @ sp[(0)+-1]
  5962  016A8C  0EFF               	movlw	-1
  5963  016A8E  50E3               	movf	plusw1,w,c
  5964  016A90  B4D8               	btfsc	status,2,c
  5965  016A92  D074               	goto	l1574
  5966  016A94                     l10290:
  5967                           
  5968                           ; BSR set to: 5
  5969                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5970                           ;stkvar	_vterm @ sp[(0)+-1]
  5971  016A94  0EFF               	movlw	-1
  5972  016A96  50E3               	movf	plusw1,w,c
  5973  016A98  0D36               	mullw	54
  5974  016A9A  0E10               	movlw	low (_D+16)
  5975  016A9C  24F3               	addwf	243,w,c
  5976  016A9E  6ED9               	movwf	fsr2l,c
  5977  016AA0  0E05               	movlw	high (_D+16)
  5978  016AA2  20F4               	addwfc	prodh,w,c
  5979  016AA4  6EDA               	movwf	fsr2h,c
  5980  016AA6  0E00               	movlw	0
  5981  016AA8  6EDF               	movwf	indf2,c
  5982                           
  5983                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5984                           ;stkvar	_vterm @ sp[(0)+-1]
  5985  016AAA  0EFF               	movlw	-1
  5986  016AAC  50E3               	movf	plusw1,w,c
  5987  016AAE  0D36               	mullw	54
  5988  016AB0  0E22               	movlw	low (_D+34)
  5989  016AB2  24F3               	addwf	243,w,c
  5990  016AB4  6ED9               	movwf	fsr2l,c
  5991  016AB6  0E05               	movlw	high (_D+34)
  5992  016AB8  20F4               	addwfc	prodh,w,c
  5993  016ABA  6EDA               	movwf	fsr2h,c
  5994  016ABC  0E00               	movlw	0
  5995  016ABE  6EDF               	movwf	indf2,c
  5996                           
  5997                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5998                           ;stkvar	_vterm @ sp[(0)+-1]
  5999  016AC0  0EFF               	movlw	-1
  6000  016AC2  50E3               	movf	plusw1,w,c
  6001  016AC4  0D36               	mullw	54
  6002  016AC6  0E34               	movlw	low (_D+52)
  6003  016AC8  24F3               	addwf	243,w,c
  6004  016ACA  6ED9               	movwf	fsr2l,c
  6005  016ACC  0E05               	movlw	high (_D+52)
  6006  016ACE  20F4               	addwfc	prodh,w,c
  6007  016AD0  6EDA               	movwf	fsr2h,c
  6008  016AD2  0E00               	movlw	0
  6009  016AD4  6EDF               	movwf	indf2,c
  6010                           
  6011                           ; BSR set to: 5
  6012                           ;mconfig.c: 95:  wait_lcd_done();
  6013  016AD6  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6017                           ;stkvar	_vterm @ sp[(0)+-1]
  6018  016ADA  0EFF               	movlw	-1
  6019  016ADC  50E3               	movf	plusw1,w,c
  6020  016ADE  0D36               	mullw	54
  6021  016AE0  0E00               	movlw	low _D
  6022  016AE2  6E3C               	movwf	(btemp+10)^0,c
  6023  016AE4  0E05               	movlw	high _D
  6024  016AE6  6E3D               	movwf	(btemp+11)^0,c
  6025  016AE8  50F3               	movf	243,w,c
  6026  016AEA  263C               	addwf	(btemp+10)^0,f,c
  6027  016AEC  50F4               	movf	244,w,c
  6028  016AEE  223D               	addwfc	(btemp+11)^0,f,c
  6029  016AF0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6030  016AF6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6031  016AFC  0E00               	movlw	0
  6032  016AFE  6EE6               	movwf	postinc1,c
  6033  016B00  0E00               	movlw	0
  6034  016B02  6EE6               	movwf	postinc1,c
  6035  016B04  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6036                           
  6037                           ; BSR set to: 59
  6038                           ;mconfig.c: 97:  wait_lcd_done();
  6039  016B08  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6043                           ;stkvar	_vterm @ sp[(0)+-1]
  6044  016B0C  0EFF               	movlw	-1
  6045  016B0E  50E3               	movf	plusw1,w,c
  6046  016B10  0D36               	mullw	54
  6047  016B12  0E00               	movlw	low _D
  6048  016B14  6E3C               	movwf	(btemp+10)^0,c
  6049  016B16  0E05               	movlw	high _D
  6050  016B18  6E3D               	movwf	(btemp+11)^0,c
  6051  016B1A  0E12               	movlw	18
  6052  016B1C  263C               	addwf	(btemp+10)^0,f,c
  6053  016B1E  0E00               	movlw	0
  6054  016B20  223D               	addwfc	(btemp+11)^0,f,c
  6055  016B22  50F3               	movf	243,w,c
  6056  016B24  263C               	addwf	(btemp+10)^0,f,c
  6057  016B26  50F4               	movf	244,w,c
  6058  016B28  223D               	addwfc	(btemp+11)^0,f,c
  6059  016B2A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6060  016B30  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6061  016B36  0E00               	movlw	0
  6062  016B38  6EE6               	movwf	postinc1,c
  6063  016B3A  0E01               	movlw	1
  6064  016B3C  6EE6               	movwf	postinc1,c
  6065  016B3E  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6066                           
  6067                           ; BSR set to: 59
  6068                           ;mconfig.c: 99:  wait_lcd_done();
  6069  016B42  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6073                           ;stkvar	_vterm @ sp[(0)+-1]
  6074  016B46  0EFF               	movlw	-1
  6075  016B48  50E3               	movf	plusw1,w,c
  6076  016B4A  0D36               	mullw	54
  6077  016B4C  0E00               	movlw	low _D
  6078  016B4E  6E3C               	movwf	(btemp+10)^0,c
  6079  016B50  0E05               	movlw	high _D
  6080  016B52  6E3D               	movwf	(btemp+11)^0,c
  6081  016B54  0E24               	movlw	36
  6082  016B56  263C               	addwf	(btemp+10)^0,f,c
  6083  016B58  0E00               	movlw	0
  6084  016B5A  223D               	addwfc	(btemp+11)^0,f,c
  6085  016B5C  50F3               	movf	243,w,c
  6086  016B5E  263C               	addwf	(btemp+10)^0,f,c
  6087  016B60  50F4               	movf	244,w,c
  6088  016B62  223D               	addwfc	(btemp+11)^0,f,c
  6089  016B64  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6090  016B6A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6091  016B70  0E00               	movlw	0
  6092  016B72  6EE6               	movwf	postinc1,c
  6093  016B74  0E02               	movlw	2
  6094  016B76  6EE6               	movwf	postinc1,c
  6095  016B78  ECAE  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6096  016B7C                     l1574:
  6097                           
  6098                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6099  016B7C  52E5               	movf	postdec1,f,c
  6100  016B7E  0012               	return		;funcret
  6101  016B80                     __end_of_update_lcd:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6105 ;; Defined at:
  6106 ;;		line 252 in file "eadog.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  r               1  [STACK] const unsigned char 
  6109 ;;  c               1  [STACK] const unsigned char 
  6110 ;;  strPtr          2  [STACK] PTR unsigned char 
  6111 ;;		 -> D.lcd(216), D(218), V(187), 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1  [STACK] void 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6118 ;; Tracked objects:
  6119 ;;		On entry : 3F/0
  6120 ;;		On exit  : 3F/3B
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:   16
  6130 ;; This function calls:
  6131 ;;		_eaDogM_WriteString
  6132 ;;		_send_lcd_cmd_dma
  6133 ;; This function is called by:
  6134 ;;		_update_lcd
  6135 ;;		_vterm_dump
  6136 ;; This function uses a reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text27
  6140  01815C                     __ptext27:
  6141                           	opt callstack 0
  6142  01815C                     _eaDogM_WriteStringAtPos:
  6143                           	opt callstack 13
  6144                           
  6145                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6146                           ;stkvar	_c @ sp[(0)+-2]
  6147                           
  6148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6149                           ;incstack = 0
  6150  01815C  0EFE               	movlw	-2
  6151  01815E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6152                           
  6153                           ;stkvar	_r @ sp[(0)+-1]
  6154  018164  0EFF               	movlw	-1
  6155  018166  50E3               	movf	plusw1,w,c
  6156  018168  0D10               	mullw	16
  6157  01816A  50F3               	movf	243,w,c
  6158  01816C  243D               	addwf	(btemp+11)^0,w,c
  6159  01816E  0F80               	addlw	128
  6160  018170  6EE6               	movwf	postinc1,c
  6161  018172  ECB2  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  6162                           
  6163                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6164                           ;stkvar	_strPtr @ sp[(0)+-4]
  6165  018176  0EFC               	movlw	-4
  6166  018178  006F FF8F FFE6     	movff	plusw1,postinc1
  6167  01817E  006F FF8F FFE6     	movff	plusw1,postinc1
  6168  018184  EC07  F0B9         	call	_eaDogM_WriteString	;wreg free
  6169                           
  6170                           ; BSR set to: 59
  6171                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6172  018188  52E5               	movf	postdec1,f,c
  6173  01818A  52E5               	movf	postdec1,f,c
  6174  01818C  52E5               	movf	postdec1,f,c
  6175  01818E  52E5               	movf	postdec1,f,c
  6176  018190  0012               	return		;funcret
  6177  018192                     __end_of_eaDogM_WriteStringAtPos:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _send_lcd_cmd_dma *****************
  6181 ;; Defined at:
  6182 ;;		line 205 in file "eadog.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  strPtr          1  [STACK] unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1  [STACK] void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/3D
  6193 ;;		On exit  : 3F/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   15
  6203 ;; This function calls:
  6204 ;;		_printf
  6205 ;;		_ringBufS_flush
  6206 ;;		_start_lcd
  6207 ;;		_wait_lcd_done
  6208 ;;		_wait_lcd_set
  6209 ;; This function is called by:
  6210 ;;		_eaDogM_WriteCommand
  6211 ;;		_eaDogM_WriteStringAtPos
  6212 ;; This function uses a reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text28
  6216  017D64                     __ptext28:
  6217                           	opt callstack 0
  6218  017D64                     _send_lcd_cmd_dma:
  6219                           	opt callstack 13
  6220                           
  6221                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6222                           
  6223                           ; BSR set to: 59
  6224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6225                           ;incstack = 0
  6226  017D64  ECDA  F0C4         	call	_wait_lcd_set	;wreg free
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6230  017D68  0E00               	movlw	0
  6231  017D6A  6EE6               	movwf	postinc1,c
  6232  017D6C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6233  017D72  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6234  017D78  EC45  F0BA         	call	_ringBufS_flush	;wreg free
  6235  017D7C  92BC               	bcf	188,1,c	;volatile
  6236  017D7E  94BC               	bcf	188,2,c	;volatile
  6237                           
  6238                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6239  017D80  013B               	movlb	59	; () banked
  6240  017D82  9FFC               	bcf	252,7,b	;volatile
  6241                           
  6242                           ; BSR set to: 59
  6243                           ;eadog.c: 214:  DMA1SSZ = 1;
  6244  017D84  0E00               	movlw	0
  6245  017D86  6FF8               	movwf	248,b	;volatile
  6246  017D88  0E01               	movlw	1
  6247  017D8A  6FF7               	movwf	247,b	;volatile
  6248                           
  6249                           ; BSR set to: 59
  6250                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6251  017D8C  8FFC               	bsf	252,7,b	;volatile
  6252                           
  6253                           ; BSR set to: 59
  6254                           ;eadog.c: 216:  printf("%c", strPtr);
  6255                           ;stkvar	_strPtr @ sp[(0)+-1]
  6256  017D8E  0EFF               	movlw	-1
  6257  017D90  50E3               	movf	plusw1,w,c
  6258  017D92  6EE6               	movwf	postinc1,c
  6259  017D94  0E00               	movlw	0
  6260  017D96  6EE6               	movwf	postinc1,c
  6261  017D98  0EF8               	movlw	low STR_16
  6262  017D9A  6EE6               	movwf	postinc1,c
  6263  017D9C  0EFF               	movlw	high STR_16
  6264  017D9E  6EE6               	movwf	postinc1,c
  6265  017DA0  0E04               	movlw	4
  6266  017DA2  6EE6               	movwf	postinc1,c
  6267  017DA4  ECCA  F0BD         	call	_printf	;wreg free
  6268                           
  6269                           ;eadog.c: 217:  start_lcd();
  6270  017DA8  ECDD  F0C4         	call	_start_lcd	;wreg free
  6271                           
  6272                           ; BSR set to: 59
  6273                           ;eadog.c: 218:  wait_lcd_done();
  6274  017DAC  ECFC  F0C3         	call	_wait_lcd_done	;wreg free
  6275                           
  6276                           ; BSR set to: 0
  6277  017DB0  82BC               	bsf	188,1,c	;volatile
  6278                           
  6279                           ; BSR set to: 0
  6280                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6281  017DB2  52E5               	movf	postdec1,f,c
  6282  017DB4  0012               	return		;funcret
  6283  017DB6                     __end_of_send_lcd_cmd_dma:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _wait_lcd_done *****************
  6287 ;; Defined at:
  6288 ;;		line 141 in file "eadog.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1  [STACK] void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/2
  6299 ;;		On exit  : 3F/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    7
  6309 ;; This function calls:
  6310 ;;		_wdtdelay
  6311 ;; This function is called by:
  6312 ;;		_send_lcd_cmd_dma
  6313 ;;		_update_lcd
  6314 ;;		_vterm_dump
  6315 ;; This function uses a reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text29
  6319  0187F8                     __ptext29:
  6320                           	opt callstack 0
  6321  0187F8                     _wait_lcd_done:
  6322                           	opt callstack 22
  6323                           
  6324                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6325                           
  6326                           ; BSR set to: 0
  6327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6328                           ;incstack = 0
  6329  0187F8  0100               	movlb	0	; () banked
  6330  0187FA  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6331  0187FC  D7FD               	goto	_wait_lcd_done
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;eadog.c: 144:  wdtdelay(50);
  6335  0187FE  0E32               	movlw	50
  6336  018800  6EE6               	movwf	postinc1,c
  6337  018802  0E00               	movlw	0
  6338  018804  6EE6               	movwf	postinc1,c
  6339  018806  0E00               	movlw	0
  6340  018808  6EE6               	movwf	postinc1,c
  6341  01880A  0E00               	movlw	0
  6342  01880C  6EE6               	movwf	postinc1,c
  6343  01880E  EC58  F0BE         	call	_wdtdelay	;wreg free
  6344                           
  6345                           ; BSR set to: 0
  6346                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6347  018812  0012               	return		;funcret
  6348  018814                     __end_of_wait_lcd_done:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function _wdtdelay *****************
  6352 ;; Defined at:
  6353 ;;		line 22 in file "eadog.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  delay           4  [STACK] const unsigned long 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1  [STACK] void 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 3F/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6371 ;;Total ram usage:        0 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    6
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_init_display
  6378 ;;		_send_lcd_cmd
  6379 ;;		_send_lcd_cmd_long
  6380 ;;		_wait_lcd_done
  6381 ;; This function uses a reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text30
  6385  017CB0                     __ptext30:
  6386                           	opt callstack 0
  6387  017CB0                     _wdtdelay:
  6388                           	opt callstack 22
  6389                           
  6390                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6391                           
  6392                           ; BSR set to: 0
  6393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6394                           ;incstack = 0
  6395  017CB0  0100               	movlb	0	; () banked
  6396  017CB2  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6397  017CB4  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6398  017CB6  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6399  017CB8  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6400  017CBA                     l1341:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;eadog.c: 27:   __nop();
  6404  017CBA  F000               	nop	
  6405  017CBC  0004               	clrwdt		;# 
  6406                           
  6407                           ;eadog.c: 29:  };
  6408  017CBE  0E01               	movlw	1
  6409  017CC0  0100               	movlb	0	; () banked
  6410  017CC2  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6411  017CC4  0E00               	movlw	0
  6412  017CC6  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6413  017CC8  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6414  017CCA  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;stkvar	_delay @ sp[(0)+-4]
  6418  017CCC  0EFC               	movlw	-4
  6419  017CCE  006F FF8C  F032    	movff	plusw1,btemp
  6420  017CD4  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6421  017CD6  5C32               	subwf	btemp^0,w,c
  6422  017CD8  0EFD               	movlw	-3
  6423  017CDA  006F FF8C  F032    	movff	plusw1,btemp
  6424  017CE0  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6425  017CE2  5832               	subwfb	btemp^0,w,c
  6426  017CE4  0EFE               	movlw	-2
  6427  017CE6  006F FF8C  F032    	movff	plusw1,btemp
  6428  017CEC  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6429  017CEE  5832               	subwfb	btemp^0,w,c
  6430  017CF0  0EFF               	movlw	-1
  6431  017CF2  006F FF8C  F032    	movff	plusw1,btemp
  6432  017CF8  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6433  017CFA  5832               	subwfb	btemp^0,w,c
  6434  017CFC  B0D8               	btfsc	status,0,c
  6435  017CFE  D7DD               	goto	l1341
  6436                           
  6437                           ; BSR set to: 0
  6438                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6439  017D00  52E5               	movf	postdec1,f,c
  6440  017D02  52E5               	movf	postdec1,f,c
  6441  017D04  52E5               	movf	postdec1,f,c
  6442  017D06  52E5               	movf	postdec1,f,c
  6443  017D08  0012               	return		;funcret
  6444  017D0A                     __end_of_wdtdelay:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function _eaDogM_WriteString *****************
  6448 ;; Defined at:
  6449 ;;		line 184 in file "eadog.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  strPtr          2  [STACK] PTR unsigned char 
  6452 ;;		 -> D.lcd(216), D(218), V(187), 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1  [STACK] void 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6459 ;; Tracked objects:
  6460 ;;		On entry : 3F/0
  6461 ;;		On exit  : 3F/3B
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;Total ram usage:        0 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:   15
  6471 ;; This function calls:
  6472 ;;		_printf
  6473 ;;		_ringBufS_flush
  6474 ;;		_start_lcd
  6475 ;;		_strlen
  6476 ;;		_wait_lcd_set
  6477 ;; This function is called by:
  6478 ;;		_eaDogM_WriteStringAtPos
  6479 ;; This function uses a reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text31
  6483  01720E                     __ptext31:
  6484                           	opt callstack 0
  6485  01720E                     _eaDogM_WriteString:
  6486                           	opt callstack 13
  6487                           
  6488                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6489                           
  6490                           ; BSR set to: 0
  6491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6492                           ;incstack = 0
  6493  01720E  ECDA  F0C4         	call	_wait_lcd_set	;wreg free
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6497  017212  0E00               	movlw	0
  6498  017214  6EE6               	movwf	postinc1,c
  6499  017216  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6500  01721C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6501  017222  EC45  F0BA         	call	_ringBufS_flush	;wreg free
  6502  017226  94BC               	bcf	188,2,c	;volatile
  6503                           
  6504                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6505                           ;stkvar	_strPtr @ sp[(0)+-2]
  6506  017228  0EFE               	movlw	-2
  6507  01722A  006F FF8F FFE6     	movff	plusw1,postinc1
  6508  017230  006F FF8F FFE6     	movff	plusw1,postinc1
  6509  017236  EC5A  F0B9         	call	_strlen	;wreg free
  6510  01723A  5033               	movf	(btemp+1)^0,w,c
  6511  01723C  E104               	bnz	u10330
  6512  01723E  0E41               	movlw	65
  6513  017240  5C32               	subwf	btemp^0,w,c
  6514  017242  A0D8               	btfss	status,0,c
  6515  017244  D010               	goto	l10256
  6516  017246                     u10330:
  6517                           
  6518                           ;stkvar	_strPtr @ sp[(0)+-2]
  6519  017246  0EFE               	movlw	-2
  6520  017248  006F FF8C  F03C    	movff	plusw1,btemp+10
  6521  01724E  0EFF               	movlw	-1
  6522  017250  006F FF8C  F03D    	movff	plusw1,btemp+11
  6523  017256  0E40               	movlw	64
  6524  017258  243C               	addwf	(btemp+10)^0,w,c
  6525  01725A  6ED9               	movwf	fsr2l,c
  6526  01725C  0E00               	movlw	0
  6527  01725E  203D               	addwfc	(btemp+11)^0,w,c
  6528  017260  6EDA               	movwf	fsr2h,c
  6529  017262  0E00               	movlw	0
  6530  017264  6EDF               	movwf	indf2,c
  6531  017266                     l10256:
  6532                           
  6533                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6534  017266  013B               	movlb	59	; () banked
  6535  017268  9FFC               	bcf	252,7,b	;volatile
  6536                           
  6537                           ; BSR set to: 59
  6538                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6539                           ;stkvar	_strPtr @ sp[(0)+-2]
  6540  01726A  0EFE               	movlw	-2
  6541  01726C  006F FF8F FFE6     	movff	plusw1,postinc1
  6542  017272  006F FF8F FFE6     	movff	plusw1,postinc1
  6543  017278  EC5A  F0B9         	call	_strlen	;wreg free
  6544  01727C  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6545  017282  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6546                           
  6547                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6548  017288  013B               	movlb	59	; () banked
  6549  01728A  8FFC               	bsf	252,7,b	;volatile
  6550                           
  6551                           ; BSR set to: 59
  6552                           ;eadog.c: 195:  printf("%s", strPtr);
  6553                           ;stkvar	_strPtr @ sp[(0)+-2]
  6554  01728C  0EFE               	movlw	-2
  6555  01728E  006F FF8F FFE6     	movff	plusw1,postinc1
  6556  017294  006F FF8F FFE6     	movff	plusw1,postinc1
  6557  01729A  0EFB               	movlw	low STR_15
  6558  01729C  6EE6               	movwf	postinc1,c
  6559  01729E  0EFF               	movlw	high STR_15
  6560  0172A0  6EE6               	movwf	postinc1,c
  6561  0172A2  0E04               	movlw	4
  6562  0172A4  6EE6               	movwf	postinc1,c
  6563  0172A6  ECCA  F0BD         	call	_printf	;wreg free
  6564                           
  6565                           ;eadog.c: 196:  start_lcd();
  6566  0172AA  ECDD  F0C4         	call	_start_lcd	;wreg free
  6567                           
  6568                           ; BSR set to: 59
  6569                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6570  0172AE  52E5               	movf	postdec1,f,c
  6571  0172B0  52E5               	movf	postdec1,f,c
  6572  0172B2  0012               	return		;funcret
  6573  0172B4                     __end_of_eaDogM_WriteString:
  6574                           	opt callstack 0
  6575                           
  6576 ;; *************** function _wait_lcd_set *****************
  6577 ;; Defined at:
  6578 ;;		line 131 in file "eadog.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1  [STACK] void 
  6585 ;; Registers used:
  6586 ;;		None
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/3D
  6589 ;;		On exit  : 3F/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    6
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_eaDogM_WriteString
  6603 ;;		_send_lcd_cmd_dma
  6604 ;; This function uses a reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text32
  6608  0189B4                     __ptext32:
  6609                           	opt callstack 0
  6610  0189B4                     _wait_lcd_set:
  6611                           	opt callstack 21
  6612                           
  6613                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6614                           
  6615                           ; BSR set to: 59
  6616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6617                           ;incstack = 0
  6618  0189B4  0100               	movlb	0	; () banked
  6619  0189B6  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6620                           
  6621                           ; BSR set to: 0
  6622                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6623  0189B8  0012               	return		;funcret
  6624  0189BA                     __end_of_wait_lcd_set:
  6625                           	opt callstack 0
  6626                           
  6627 ;; *************** function _start_lcd *****************
  6628 ;; Defined at:
  6629 ;;		line 126 in file "eadog.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1  [STACK] void 
  6636 ;; Registers used:
  6637 ;;		None
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/3B
  6640 ;;		On exit  : 3F/3B
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;Total ram usage:        0 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    6
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_eaDogM_WriteString
  6654 ;;		_send_lcd_cmd_dma
  6655 ;; This function uses a reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text33
  6659  0189BA                     __ptext33:
  6660                           	opt callstack 0
  6661  0189BA                     _start_lcd:
  6662                           	opt callstack 21
  6663                           
  6664                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6665                           
  6666                           ; BSR set to: 0
  6667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6668                           ;incstack = 0
  6669  0189BA  013B               	movlb	59	; () banked
  6670  0189BC  8DFC               	bsf	252,6,b	;volatile
  6671                           
  6672                           ; BSR set to: 59
  6673                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6674  0189BE  0012               	return		;funcret
  6675  0189C0                     __end_of_start_lcd:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function _ringBufS_flush *****************
  6679 ;; Defined at:
  6680 ;;		line 76 in file "ringbufs.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6683 ;;		 -> ring_buf1(67), 
  6684 ;;  clearBuffer     1  [STACK] const char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1  [STACK] void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6691 ;; Tracked objects:
  6692 ;;		On entry : 3F/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    7
  6703 ;; This function calls:
  6704 ;;		_memset
  6705 ;; This function is called by:
  6706 ;;		_eaDogM_WriteString
  6707 ;;		_send_lcd_cmd_dma
  6708 ;; This function uses a reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text34
  6712  01748A                     __ptext34:
  6713                           	opt callstack 0
  6714  01748A                     _ringBufS_flush:
  6715                           	opt callstack 20
  6716                           
  6717                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6718                           ;stkvar	__this @ sp[(0)+-2]
  6719                           
  6720                           ; BSR set to: 59
  6721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6722                           ;incstack = 0
  6723  01748A  0EFE               	movlw	-2
  6724  01748C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6725  017492  0EFF               	movlw	-1
  6726  017494  006F FF8C  F03D    	movff	plusw1,btemp+11
  6727  01749A  0E42               	movlw	66
  6728  01749C  243C               	addwf	(btemp+10)^0,w,c
  6729  01749E  6ED9               	movwf	fsr2l,c
  6730  0174A0  0E00               	movlw	0
  6731  0174A2  203D               	addwfc	(btemp+11)^0,w,c
  6732  0174A4  6EDA               	movwf	fsr2h,c
  6733  0174A6  0E00               	movlw	0
  6734  0174A8  6EDF               	movwf	indf2,c
  6735                           
  6736                           ;ringbufs.c: 79:  _this->head = 0;
  6737                           ;stkvar	__this @ sp[(0)+-2]
  6738  0174AA  0EFE               	movlw	-2
  6739  0174AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6740  0174B2  0EFF               	movlw	-1
  6741  0174B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6742  0174BA  0E40               	movlw	64
  6743  0174BC  243C               	addwf	(btemp+10)^0,w,c
  6744  0174BE  6ED9               	movwf	fsr2l,c
  6745  0174C0  0E00               	movlw	0
  6746  0174C2  203D               	addwfc	(btemp+11)^0,w,c
  6747  0174C4  6EDA               	movwf	fsr2h,c
  6748  0174C6  0E00               	movlw	0
  6749  0174C8  6EDF               	movwf	indf2,c
  6750                           
  6751                           ;ringbufs.c: 80:  _this->tail = 0;
  6752                           ;stkvar	__this @ sp[(0)+-2]
  6753  0174CA  0EFE               	movlw	-2
  6754  0174CC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6755  0174D2  0EFF               	movlw	-1
  6756  0174D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6757  0174DA  0E41               	movlw	65
  6758  0174DC  243C               	addwf	(btemp+10)^0,w,c
  6759  0174DE  6ED9               	movwf	fsr2l,c
  6760  0174E0  0E00               	movlw	0
  6761  0174E2  203D               	addwfc	(btemp+11)^0,w,c
  6762  0174E4  6EDA               	movwf	fsr2h,c
  6763  0174E6  0E00               	movlw	0
  6764  0174E8  6EDF               	movwf	indf2,c
  6765                           
  6766                           ;ringbufs.c: 81:  if (clearBuffer) {
  6767                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6768  0174EA  0EFD               	movlw	-3
  6769  0174EC  50E3               	movf	plusw1,w,c
  6770  0174EE  B4D8               	btfsc	status,2,c
  6771  0174F0  D011               	goto	l1481
  6772                           
  6773                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6774  0174F2  0E40               	movlw	64
  6775  0174F4  6EE6               	movwf	postinc1,c
  6776  0174F6  0E00               	movlw	0
  6777  0174F8  6EE6               	movwf	postinc1,c
  6778  0174FA  0E00               	movlw	0
  6779  0174FC  6EE6               	movwf	postinc1,c
  6780  0174FE  0E00               	movlw	0
  6781  017500  6EE6               	movwf	postinc1,c
  6782                           
  6783                           ;stkvar	__this @ sp[(-4)+-2]
  6784  017502  0EFA               	movlw	-6
  6785  017504  006F FF8F FFE6     	movff	plusw1,postinc1
  6786  01750A  006F FF8F FFE6     	movff	plusw1,postinc1
  6787  017510  EC07  F0A4         	call	_memset	;wreg free
  6788  017514                     l1481:
  6789                           
  6790                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6791  017514  52E5               	movf	postdec1,f,c
  6792  017516  52E5               	movf	postdec1,f,c
  6793  017518  52E5               	movf	postdec1,f,c
  6794  01751A  0012               	return		;funcret
  6795  01751C                     __end_of_ringBufS_flush:
  6796                           	opt callstack 0
  6797                           
  6798 ;; *************** function _memset *****************
  6799 ;; Defined at:
  6800 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  dest            2  [STACK] PTR void 
  6803 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6804 ;;  c               2  [STACK] int 
  6805 ;;  n               2  [STACK] unsigned int 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  s               2  [STACK] PTR unsigned char 
  6808 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6809 ;;  k               2  [STACK] unsigned int 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  2  [STACK] PTR void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    6
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_ringBufS_init
  6830 ;;		_ringBufS_flush
  6831 ;; This function uses a reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text35
  6835  01480E                     __ptext35:
  6836                           	opt callstack 0
  6837  01480E                     _memset:
  6838                           	opt callstack 0
  6839                           
  6840                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6841  01480E  52E6               	movf	postinc1,f,c
  6842  014810  52E6               	movf	postinc1,f,c
  6843  014812  52E6               	movf	postinc1,f,c
  6844  014814  52E6               	movf	postinc1,f,c
  6845                           
  6846                           ;stkvar	_dest @ sp[(-4)+-2]
  6847                           
  6848                           ;incstack = 0
  6849  014816  0EFA               	movlw	-6
  6850  014818  006F FF8C  F03C    	movff	plusw1,btemp+10
  6851  01481E  0EFB               	movlw	-5
  6852  014820  006F FF8C  F03D    	movff	plusw1,btemp+11
  6853                           
  6854                           ;stkvar	_s @ sp[(-4)+0]
  6855  014826  0EFD               	movlw	-3
  6856  014828  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6857  01482E  0EFC               	movlw	-4
  6858  014830  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6859                           
  6860                           ;stkvar	_n @ sp[(-4)+-6]
  6861  014836  0EF6               	movlw	-10
  6862  014838  006F FF8C  F032    	movff	plusw1,btemp
  6863  01483E  0EF7               	movlw	-9
  6864  014840  50E3               	movf	plusw1,w,c
  6865  014842  1032               	iorwf	btemp^0,w,c
  6866  014844  B4D8               	btfsc	status,2,c
  6867  014846  D154               	goto	u10300
  6868                           
  6869                           ;stkvar	_c @ sp[(-4)+-4]
  6870                           ;stkvar	_s @ sp[(-4)+0]
  6871  014848  0EFC               	movlw	-4
  6872  01484A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6873  014850  0EFD               	movlw	-3
  6874  014852  006F FF8F FFDA     	movff	plusw1,fsr2h
  6875  014858  0EF8               	movlw	-8
  6876  01485A  006F FF8F FFDF     	movff	plusw1,indf2
  6877                           
  6878                           ;stkvar	_c @ sp[(-4)+-4]
  6879                           ;stkvar	_n @ sp[(-4)+-6]
  6880                           ;stkvar	_s @ sp[(-4)+0]
  6881  014860  0EFC               	movlw	-4
  6882  014862  006F FF8C  F03C    	movff	plusw1,btemp+10
  6883  014868  0EFD               	movlw	-3
  6884  01486A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6885  014870  0EF6               	movlw	-10
  6886  014872  50E3               	movf	plusw1,w,c
  6887  014874  263C               	addwf	(btemp+10)^0,f,c
  6888  014876  0EF7               	movlw	-9
  6889  014878  50E3               	movf	plusw1,w,c
  6890  01487A  223D               	addwfc	(btemp+11)^0,f,c
  6891  01487C  0EFF               	movlw	255
  6892  01487E  243C               	addwf	(btemp+10)^0,w,c
  6893  014880  6ED9               	movwf	fsr2l,c
  6894  014882  0EFF               	movlw	255
  6895  014884  203D               	addwfc	(btemp+11)^0,w,c
  6896  014886  6EDA               	movwf	fsr2h,c
  6897  014888  0EF8               	movlw	-8
  6898  01488A  006F FF8F FFDF     	movff	plusw1,indf2
  6899                           
  6900                           ;stkvar	_n @ sp[(-4)+-6]
  6901  014890  0EF7               	movlw	-9
  6902  014892  50E3               	movf	plusw1,w,c
  6903  014894  E108               	bnz	l10172
  6904  014896  0EF6               	movlw	-10
  6905  014898  006F FF8C  F032    	movff	plusw1,btemp
  6906  01489E  0E03               	movlw	3
  6907  0148A0  5E32               	subwf	btemp^0,f,c
  6908  0148A2  A0D8               	btfss	status,0,c
  6909  0148A4  D125               	goto	u10300
  6910  0148A6                     l10172:
  6911                           
  6912                           ;stkvar	_c @ sp[(-4)+-4]
  6913                           ;stkvar	_s @ sp[(-4)+0]
  6914  0148A6  0EFC               	movlw	-4
  6915  0148A8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6916  0148AE  0EFD               	movlw	-3
  6917  0148B0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6918  0148B6  0E01               	movlw	1
  6919  0148B8  243C               	addwf	(btemp+10)^0,w,c
  6920  0148BA  6ED9               	movwf	fsr2l,c
  6921  0148BC  0E00               	movlw	0
  6922  0148BE  203D               	addwfc	(btemp+11)^0,w,c
  6923  0148C0  6EDA               	movwf	fsr2h,c
  6924  0148C2  0EF8               	movlw	-8
  6925  0148C4  006F FF8F FFDF     	movff	plusw1,indf2
  6926                           
  6927                           ;stkvar	_c @ sp[(-4)+-4]
  6928                           ;stkvar	_s @ sp[(-4)+0]
  6929  0148CA  0EFC               	movlw	-4
  6930  0148CC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6931  0148D2  0EFD               	movlw	-3
  6932  0148D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6933  0148DA  0E02               	movlw	2
  6934  0148DC  243C               	addwf	(btemp+10)^0,w,c
  6935  0148DE  6ED9               	movwf	fsr2l,c
  6936  0148E0  0E00               	movlw	0
  6937  0148E2  203D               	addwfc	(btemp+11)^0,w,c
  6938  0148E4  6EDA               	movwf	fsr2h,c
  6939  0148E6  0EF8               	movlw	-8
  6940  0148E8  006F FF8F FFDF     	movff	plusw1,indf2
  6941                           
  6942                           ;stkvar	_c @ sp[(-4)+-4]
  6943                           ;stkvar	_n @ sp[(-4)+-6]
  6944                           ;stkvar	_s @ sp[(-4)+0]
  6945  0148EE  0EFC               	movlw	-4
  6946  0148F0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6947  0148F6  0EFD               	movlw	-3
  6948  0148F8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6949  0148FE  0EF6               	movlw	-10
  6950  014900  50E3               	movf	plusw1,w,c
  6951  014902  263C               	addwf	(btemp+10)^0,f,c
  6952  014904  0EF7               	movlw	-9
  6953  014906  50E3               	movf	plusw1,w,c
  6954  014908  223D               	addwfc	(btemp+11)^0,f,c
  6955  01490A  0EFE               	movlw	254
  6956  01490C  243C               	addwf	(btemp+10)^0,w,c
  6957  01490E  6ED9               	movwf	fsr2l,c
  6958  014910  0EFF               	movlw	255
  6959  014912  203D               	addwfc	(btemp+11)^0,w,c
  6960  014914  6EDA               	movwf	fsr2h,c
  6961  014916  0EF8               	movlw	-8
  6962  014918  006F FF8F FFDF     	movff	plusw1,indf2
  6963                           
  6964                           ;stkvar	_c @ sp[(-4)+-4]
  6965                           ;stkvar	_n @ sp[(-4)+-6]
  6966                           ;stkvar	_s @ sp[(-4)+0]
  6967  01491E  0EFC               	movlw	-4
  6968  014920  006F FF8C  F03C    	movff	plusw1,btemp+10
  6969  014926  0EFD               	movlw	-3
  6970  014928  006F FF8C  F03D    	movff	plusw1,btemp+11
  6971  01492E  0EF6               	movlw	-10
  6972  014930  50E3               	movf	plusw1,w,c
  6973  014932  263C               	addwf	(btemp+10)^0,f,c
  6974  014934  0EF7               	movlw	-9
  6975  014936  50E3               	movf	plusw1,w,c
  6976  014938  223D               	addwfc	(btemp+11)^0,f,c
  6977  01493A  0EFD               	movlw	253
  6978  01493C  243C               	addwf	(btemp+10)^0,w,c
  6979  01493E  6ED9               	movwf	fsr2l,c
  6980  014940  0EFF               	movlw	255
  6981  014942  203D               	addwfc	(btemp+11)^0,w,c
  6982  014944  6EDA               	movwf	fsr2h,c
  6983  014946  0EF8               	movlw	-8
  6984  014948  006F FF8F FFDF     	movff	plusw1,indf2
  6985                           
  6986                           ;stkvar	_n @ sp[(-4)+-6]
  6987  01494E  0EF7               	movlw	-9
  6988  014950  50E3               	movf	plusw1,w,c
  6989  014952  E108               	bnz	l10178
  6990  014954  0EF6               	movlw	-10
  6991  014956  006F FF8C  F032    	movff	plusw1,btemp
  6992  01495C  0E07               	movlw	7
  6993  01495E  5E32               	subwf	btemp^0,f,c
  6994  014960  A0D8               	btfss	status,0,c
  6995  014962  D0C6               	goto	u10300
  6996  014964                     l10178:
  6997                           
  6998                           ;stkvar	_c @ sp[(-4)+-4]
  6999                           ;stkvar	_s @ sp[(-4)+0]
  7000  014964  0EFC               	movlw	-4
  7001  014966  006F FF8C  F03C    	movff	plusw1,btemp+10
  7002  01496C  0EFD               	movlw	-3
  7003  01496E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7004  014974  0E03               	movlw	3
  7005  014976  243C               	addwf	(btemp+10)^0,w,c
  7006  014978  6ED9               	movwf	fsr2l,c
  7007  01497A  0E00               	movlw	0
  7008  01497C  203D               	addwfc	(btemp+11)^0,w,c
  7009  01497E  6EDA               	movwf	fsr2h,c
  7010  014980  0EF8               	movlw	-8
  7011  014982  006F FF8F FFDF     	movff	plusw1,indf2
  7012                           
  7013                           ;stkvar	_c @ sp[(-4)+-4]
  7014                           ;stkvar	_n @ sp[(-4)+-6]
  7015                           ;stkvar	_s @ sp[(-4)+0]
  7016  014988  0EFC               	movlw	-4
  7017  01498A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7018  014990  0EFD               	movlw	-3
  7019  014992  006F FF8C  F03D    	movff	plusw1,btemp+11
  7020  014998  0EF6               	movlw	-10
  7021  01499A  50E3               	movf	plusw1,w,c
  7022  01499C  263C               	addwf	(btemp+10)^0,f,c
  7023  01499E  0EF7               	movlw	-9
  7024  0149A0  50E3               	movf	plusw1,w,c
  7025  0149A2  223D               	addwfc	(btemp+11)^0,f,c
  7026  0149A4  0EFC               	movlw	252
  7027  0149A6  243C               	addwf	(btemp+10)^0,w,c
  7028  0149A8  6ED9               	movwf	fsr2l,c
  7029  0149AA  0EFF               	movlw	255
  7030  0149AC  203D               	addwfc	(btemp+11)^0,w,c
  7031  0149AE  6EDA               	movwf	fsr2h,c
  7032  0149B0  0EF8               	movlw	-8
  7033  0149B2  006F FF8F FFDF     	movff	plusw1,indf2
  7034                           
  7035                           ;stkvar	_n @ sp[(-4)+-6]
  7036  0149B8  0EF7               	movlw	-9
  7037  0149BA  50E3               	movf	plusw1,w,c
  7038  0149BC  E108               	bnz	l10184
  7039  0149BE  0EF6               	movlw	-10
  7040  0149C0  006F FF8C  F032    	movff	plusw1,btemp
  7041  0149C6  0E09               	movlw	9
  7042  0149C8  5E32               	subwf	btemp^0,f,c
  7043  0149CA  A0D8               	btfss	status,0,c
  7044  0149CC  D091               	goto	u10300
  7045  0149CE                     l10184:
  7046                           
  7047                           ;stkvar	_s @ sp[(-4)+0]
  7048  0149CE  0EFC               	movlw	-4
  7049  0149D0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7050  0149D6  1E3C               	comf	(btemp+10)^0,f,c
  7051  0149D8  0EFD               	movlw	-3
  7052  0149DA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7053  0149E0  1E3D               	comf	(btemp+11)^0,f,c
  7054  0149E2  2A3C               	incf	(btemp+10)^0,f,c
  7055  0149E4  B4D8               	btfsc	status,2,c
  7056  0149E6  2A3D               	incf	(btemp+11)^0,f,c
  7057  0149E8  0E03               	movlw	3
  7058  0149EA  163C               	andwf	(btemp+10)^0,f,c
  7059  0149EC  0E00               	movlw	0
  7060  0149EE  163D               	andwf	(btemp+11)^0,f,c
  7061                           
  7062                           ;stkvar	_k @ sp[(-4)+2]
  7063  0149F0  0EFE               	movlw	-2
  7064  0149F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7065  0149F8  0EFF               	movlw	-1
  7066  0149FA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7067                           
  7068                           ;stkvar	_k @ sp[(-4)+2]
  7069                           ;stkvar	_s @ sp[(-4)+0]
  7070  014A00  0EFC               	movlw	-4
  7071  014A02  50E3               	movf	plusw1,w,c
  7072  014A04  6E32               	movwf	btemp^0,c
  7073  014A06  0EFE               	movlw	-2
  7074  014A08  50E3               	movf	plusw1,w,c
  7075  014A0A  2632               	addwf	btemp^0,f,c
  7076  014A0C  0EFC               	movlw	-4
  7077  014A0E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7078  014A14  0EFD               	movlw	-3
  7079  014A16  50E3               	movf	plusw1,w,c
  7080  014A18  6E32               	movwf	btemp^0,c
  7081  014A1A  0EFF               	movlw	-1
  7082  014A1C  50E3               	movf	plusw1,w,c
  7083  014A1E  2232               	addwfc	btemp^0,f,c
  7084  014A20  0EFD               	movlw	-3
  7085  014A22  0060  F0CB  FFE3   	movff	btemp,plusw1
  7086                           
  7087                           ;stkvar	_k @ sp[(-4)+2]
  7088                           ;stkvar	_n @ sp[(-4)+-6]
  7089  014A28  0EF6               	movlw	-10
  7090  014A2A  50E3               	movf	plusw1,w,c
  7091  014A2C  6E32               	movwf	btemp^0,c
  7092  014A2E  0EFE               	movlw	-2
  7093  014A30  50E3               	movf	plusw1,w,c
  7094  014A32  5E32               	subwf	btemp^0,f,c
  7095  014A34  0EF6               	movlw	-10
  7096  014A36  0060  F0CB  FFE3   	movff	btemp,plusw1
  7097  014A3C  0EF7               	movlw	-9
  7098  014A3E  50E3               	movf	plusw1,w,c
  7099  014A40  6E32               	movwf	btemp^0,c
  7100  014A42  0EFF               	movlw	-1
  7101  014A44  50E3               	movf	plusw1,w,c
  7102  014A46  5A32               	subwfb	btemp^0,f,c
  7103  014A48  0EF7               	movlw	-9
  7104  014A4A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7105  014A50  0EFC               	movlw	252
  7106  014A52  6E3C               	movwf	(btemp+10)^0,c
  7107  014A54  0EFF               	movlw	255
  7108  014A56  6E3D               	movwf	(btemp+11)^0,c
  7109                           
  7110                           ;stkvar	_n @ sp[(-4)+-6]
  7111  014A58  0EF6               	movlw	-10
  7112  014A5A  006F FF8C  F032    	movff	plusw1,btemp
  7113  014A60  503C               	movf	(btemp+10)^0,w,c
  7114  014A62  1632               	andwf	btemp^0,f,c
  7115  014A64  0EF6               	movlw	-10
  7116  014A66  0060  F0CB  FFE3   	movff	btemp,plusw1
  7117  014A6C  0EF7               	movlw	-9
  7118  014A6E  006F FF8C  F032    	movff	plusw1,btemp
  7119  014A74  503D               	movf	(btemp+11)^0,w,c
  7120  014A76  1632               	andwf	btemp^0,f,c
  7121  014A78  0EF7               	movlw	-9
  7122  014A7A  D02E               	goto	L6
  7123  014A7C                     l10192:
  7124                           
  7125                           ;stkvar	_c @ sp[(-4)+-4]
  7126                           ;stkvar	_s @ sp[(-4)+0]
  7127  014A7C  0EFC               	movlw	-4
  7128  014A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7129  014A84  0EFD               	movlw	-3
  7130  014A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7131  014A8C  0EF8               	movlw	-8
  7132  014A8E  006F FF8F FFDF     	movff	plusw1,indf2
  7133                           
  7134                           ;stkvar	_n @ sp[(-4)+-6]
  7135  014A94  0EF6               	movlw	-10
  7136  014A96  006F FF8C  F032    	movff	plusw1,btemp
  7137  014A9C  0E01               	movlw	1
  7138  014A9E  5E32               	subwf	btemp^0,f,c
  7139  014AA0  0EF6               	movlw	-10
  7140  014AA2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7141  014AA8  0EF7               	movlw	-9
  7142  014AAA  006F FF8C  F032    	movff	plusw1,btemp
  7143  014AB0  0E00               	movlw	0
  7144  014AB2  5A32               	subwfb	btemp^0,f,c
  7145  014AB4  0EF7               	movlw	-9
  7146  014AB6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7147                           
  7148                           ;stkvar	_s @ sp[(-4)+0]
  7149  014ABC  0EFC               	movlw	-4
  7150  014ABE  50E3               	movf	plusw1,w,c
  7151  014AC0  0F01               	addlw	1
  7152  014AC2  6E32               	movwf	btemp^0,c
  7153  014AC4  0EFC               	movlw	-4
  7154  014AC6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7155  014ACC  6A32               	clrf	btemp^0,c
  7156  014ACE  0EFD               	movlw	-3
  7157  014AD0  50E3               	movf	plusw1,w,c
  7158  014AD2  2032               	addwfc	btemp^0,w,c
  7159  014AD4  6E32               	movwf	btemp^0,c
  7160  014AD6  0EFD               	movlw	-3
  7161  014AD8                     L6:
  7162  014AD8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7163                           
  7164                           ;stkvar	_n @ sp[(-4)+-6]
  7165  014ADE  0EF6               	movlw	-10
  7166  014AE0  006F FF8C  F032    	movff	plusw1,btemp
  7167  014AE6  0EF7               	movlw	-9
  7168  014AE8  50E3               	movf	plusw1,w,c
  7169  014AEA  1032               	iorwf	btemp^0,w,c
  7170  014AEC  A4D8               	btfss	status,2,c
  7171  014AEE  D7C6               	goto	l10192
  7172  014AF0                     u10300:
  7173                           
  7174                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7175  014AF0  0EF6               	movlw	246
  7176  014AF2  26E1               	addwf	fsr1l,f,c
  7177  014AF4  0EFF               	movlw	255
  7178  014AF6  22E2               	addwfc	fsr1h,f,c
  7179  014AF8  0012               	return		;funcret
  7180  014AFA                     __end_of_memset:
  7181                           	opt callstack 0
  7182                           
  7183 ;; *************** function _printf *****************
  7184 ;; Defined at:
  7185 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  fmt             2  [STACK] PTR const unsigned char 
  7188 ;;		 -> STR_17(3), STR_16(3), STR_15(3), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  ap              2  [STACK] PTR void [1]
  7191 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7192 ;;  ret             2    0        int 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  2  [STACK] int 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7197 ;; Tracked objects:
  7198 ;;		On entry : 3F/3B
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7206 ;;Total ram usage:        0 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:   14
  7209 ;; This function calls:
  7210 ;;		_vfprintf
  7211 ;; This function is called by:
  7212 ;;		_eaDogM_WriteString
  7213 ;;		_send_lcd_cmd_dma
  7214 ;; This function uses a reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text36
  7218  017B94                     __ptext36:
  7219                           	opt callstack 0
  7220  017B94                     _printf:
  7221                           	opt callstack 0
  7222                           
  7223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7224  017B94  52E6               	movf	postinc1,f,c
  7225  017B96  52E6               	movf	postinc1,f,c
  7226                           
  7227                           ;stkvar	?_printf @ sp[(-2)+-3]
  7228                           
  7229                           ;incstack = 0
  7230  017B98  0EFB               	movlw	251
  7231  017B9A  24E1               	addwf	fsr1l,w,c
  7232  017B9C  6E3C               	movwf	(btemp+10)^0,c
  7233  017B9E  0EFF               	movlw	255
  7234  017BA0  20E2               	addwfc	fsr1h,w,c
  7235  017BA2  6E3D               	movwf	(btemp+11)^0,c
  7236                           
  7237                           ;stkvar	_ap @ sp[(-2)+0]
  7238  017BA4  0EFF               	movlw	-1
  7239  017BA6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7240  017BAC  0EFE               	movlw	-2
  7241  017BAE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7242                           
  7243                           ;stkvar	_ap @ sp[(-2)+0]
  7244  017BB4  0EFE               	movlw	254
  7245  017BB6  24E1               	addwf	fsr1l,w,c
  7246  017BB8  6E32               	movwf	btemp^0,c
  7247  017BBA  0EFF               	movlw	255
  7248  017BBC  20E2               	addwfc	fsr1h,w,c
  7249  017BBE  6E33               	movwf	(btemp+1)^0,c
  7250  017BC0  0060  F0CB  FFE6   	movff	btemp,postinc1
  7251  017BC6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7252                           
  7253                           ;stkvar	_fmt @ sp[(-4)+-3]
  7254  017BCC  0EF9               	movlw	-7
  7255  017BCE  006F FF8F FFE6     	movff	plusw1,postinc1
  7256  017BD4  006F FF8F FFE6     	movff	plusw1,postinc1
  7257  017BDA  0E00               	movlw	0
  7258  017BDC  6EE6               	movwf	postinc1,c
  7259  017BDE  0E00               	movlw	0
  7260  017BE0  6EE6               	movwf	postinc1,c
  7261  017BE2  ECB3  F0B8         	call	_vfprintf	;wreg free
  7262                           
  7263                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7264  017BE6  52E5               	movf	postdec1,f,c
  7265  017BE8  52E5               	movf	postdec1,f,c
  7266  017BEA  52E5               	movf	postdec1,f,c
  7267  017BEC  50E7               	movf	indf1,w,c
  7268  017BEE  5EE1               	subwf	fsr1l,f,c
  7269  017BF0  0E00               	movlw	0
  7270  017BF2  5AE2               	subwfb	fsr1h,f,c
  7271  017BF4  0012               	return		;funcret
  7272  017BF6                     __end_of_printf:
  7273                           	opt callstack 0
  7274                           
  7275 ;; *************** function _vfprintf *****************
  7276 ;; Defined at:
  7277 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7280 ;;		 -> f(6), NULL(0), 
  7281 ;;  fmt             2  [STACK] PTR const unsigned char 
  7282 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  7283 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  7284 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  7285 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  7286 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  7287 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  7288 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  7289 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  7290 ;;  ap              2  [STACK] PTR PTR void 
  7291 ;;		 -> ap(2), ap(2), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  cfmt            2  [STACK] PTR unsigned char 
  7294 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  7295 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  7296 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  7297 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  7298 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  7299 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  7300 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  7301 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  2  [STACK] int 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/5
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:   13
  7318 ;; This function calls:
  7319 ;;		_vfpfcnvrt
  7320 ;; This function is called by:
  7321 ;;		_sprintf
  7322 ;;		_printf
  7323 ;; This function uses a reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text37
  7327  017166                     __ptext37:
  7328                           	opt callstack 0
  7329  017166                     _vfprintf:
  7330                           	opt callstack 0
  7331                           
  7332                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7333  017166  52E6               	movf	postinc1,f,c
  7334  017168  52E6               	movf	postinc1,f,c
  7335                           
  7336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7337                           ;stkvar	_fmt @ sp[(-2)+-4]
  7338                           
  7339                           ;incstack = 0
  7340  01716A  0EFA               	movlw	-6
  7341  01716C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7342  017172  0EFB               	movlw	-5
  7343  017174  006F FF8C  F03D    	movff	plusw1,btemp+11
  7344                           
  7345                           ;stkvar	_cfmt @ sp[(-2)+0]
  7346  01717A  0EFF               	movlw	-1
  7347  01717C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7348  017182  0EFE               	movlw	-2
  7349  017184  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7350                           
  7351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7352  01718A  6A19               	clrf	_nout^0,c
  7353  01718C  6A1A               	clrf	(_nout+1)^0,c
  7354                           
  7355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7356  01718E  D020               	goto	l10206
  7357  017190                     l10204:
  7358                           
  7359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7360                           ;stkvar	_ap @ sp[(-2)+-6]
  7361  017190  0EF8               	movlw	-8
  7362  017192  006F FF8F FFE6     	movff	plusw1,postinc1
  7363  017198  006F FF8F FFE6     	movff	plusw1,postinc1
  7364                           
  7365                           ;stkvar	_cfmt @ sp[(-4)+0]
  7366  01719E  0EFC               	movlw	252
  7367  0171A0  24E1               	addwf	fsr1l,w,c
  7368  0171A2  6E32               	movwf	btemp^0,c
  7369  0171A4  0EFF               	movlw	255
  7370  0171A6  20E2               	addwfc	fsr1h,w,c
  7371  0171A8  6E33               	movwf	(btemp+1)^0,c
  7372  0171AA  0060  F0CB  FFE6   	movff	btemp,postinc1
  7373  0171B0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7374                           
  7375                           ;stkvar	_fp @ sp[(-6)+-2]
  7376  0171B6  0EF8               	movlw	-8
  7377  0171B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7378  0171BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7379  0171C4  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7380  0171C8  5032               	movf	btemp^0,w,c
  7381  0171CA  2619               	addwf	_nout^0,f,c
  7382  0171CC  5033               	movf	(btemp+1)^0,w,c
  7383  0171CE  221A               	addwfc	(_nout+1)^0,f,c
  7384  0171D0                     l10206:
  7385                           
  7386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7387                           ;stkvar	_cfmt @ sp[(-2)+0]
  7388  0171D0  50E1               	movf	fsr1l,w,c
  7389  0171D2  0FFE               	addlw	-2
  7390  0171D4  6ED9               	movwf	fsr2l,c
  7391  0171D6  50E2               	movf	fsr1h,w,c
  7392  0171D8  6EDA               	movwf	fsr2h,c
  7393  0171DA  0EFF               	movlw	255
  7394  0171DC  22DA               	addwfc	fsr2h,f,c
  7395  0171DE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7396  0171E4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7397  0171EA                     	if	0	;tblptru may be non-zero
  7398  0171EA                     	endif
  7399  0171EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7400  0171EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7401  0171EC  6EF8               	movwf	tblptru,c
  7402  0171EE                     	endif
  7403  0171EE  0008               	tblrd		*
  7404  0171F0  50F5               	movf	tablat,w,c
  7405  0171F2  0900               	iorlw	0
  7406  0171F4  A4D8               	btfss	status,2,c
  7407  0171F6  D7CC               	goto	l10204
  7408                           
  7409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7410  0171F8  0060  F064  F032   	movff	_nout,btemp
  7411  0171FE  0060  F068  F033   	movff	_nout+1,btemp+1
  7412                           
  7413                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7414  017204  0EF8               	movlw	248
  7415  017206  26E1               	addwf	fsr1l,f,c
  7416  017208  0EFF               	movlw	255
  7417  01720A  22E2               	addwfc	fsr1h,f,c
  7418  01720C  0012               	return		;funcret
  7419  01720E                     __end_of_vfprintf:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function _vfpfcnvrt *****************
  7423 ;; Defined at:
  7424 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7427 ;;		 -> f(6), NULL(0), 
  7428 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7429 ;;		 -> cfmt(2), 
  7430 ;;  ap              2  [STACK] PTR PTR void 
  7431 ;;		 -> ap(2), ap(2), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  llu             8  [STACK] unsigned long long 
  7434 ;;  ll              8  [STACK] long long 
  7435 ;;  f               4  [STACK] long long 
  7436 ;;  ct              3  [STACK] unsigned char [3]
  7437 ;;  vp              3    0        PTR void 
  7438 ;;  cp              2  [STACK] PTR unsigned char 
  7439 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  7440 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  7441 ;;		 -> STR_3(6), V(187), 
  7442 ;;  i               2    0        int 
  7443 ;;  done            2    0        int 
  7444 ;;  c               1  [STACK] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2  [STACK] int 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/5
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   12
  7461 ;; This function calls:
  7462 ;;		_atoi
  7463 ;;		_ctoa
  7464 ;;		_dtoa
  7465 ;;		_efgtoa
  7466 ;;		_fputc
  7467 ;;		_isdigit
  7468 ;;		_isupper
  7469 ;;		_stoa
  7470 ;;		_strncmp
  7471 ;;		_tolower
  7472 ;;		_xtoa
  7473 ;; This function is called by:
  7474 ;;		_vfprintf
  7475 ;; This function uses a reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text38
  7479  011244                     __ptext38:
  7480                           	opt callstack 0
  7481  011244                     _vfpfcnvrt:
  7482                           	opt callstack 0
  7483                           
  7484                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7485  011244  0E20               	movlw	32
  7486  011246  26E1               	addwf	fsr1l,f,c
  7487  011248  0E00               	movlw	0
  7488  01124A  22E2               	addwfc	fsr1h,f,c
  7489                           
  7490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7491                           ;stkvar	_fmt @ sp[(-32)+-4]
  7492                           
  7493                           ;incstack = 0
  7494  01124C  0EDC               	movlw	-36
  7495  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7496  011254  0EDD               	movlw	-35
  7497  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7498  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7499  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7500  011268                     	if	0	;tblptru may be non-zero
  7501  011268                     	endif
  7502  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7503  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7504  01126A  6EF8               	movwf	tblptru,c
  7505  01126C                     	endif
  7506  01126C  0008               	tblrd		*
  7507  01126E  50F5               	movf	tablat,w,c
  7508  011270  0A25               	xorlw	37
  7509  011272  A4D8               	btfss	status,2,c
  7510  011274  EF92  F08E         	goto	l10150
  7511                           
  7512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7513                           ;stkvar	_fmt @ sp[(-32)+-4]
  7514  011278  0EDC               	movlw	-36
  7515  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7516  011280  0EDD               	movlw	-35
  7517  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7518  011288  2ADE               	incf	postinc2,f,c
  7519  01128A  0E00               	movlw	0
  7520  01128C  22DD               	addwfc	postdec2,f,c
  7521                           
  7522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7523  01128E  6A1B               	clrf	_width^0,c
  7524  011290  6A1C               	clrf	(_width+1)^0,c
  7525  011292  6A1F               	clrf	_flags^0,c
  7526  011294  6A20               	clrf	(_flags+1)^0,c
  7527                           
  7528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7529  011296  681D               	setf	_prec^0,c
  7530  011298  681E               	setf	(_prec+1)^0,c
  7531                           
  7532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7533                           ;stkvar	_fmt @ sp[(-32)+-4]
  7534  01129A  0EDC               	movlw	-36
  7535  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7536  0112A2  0EDD               	movlw	-35
  7537  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7538  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7539  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7540  0112B6                     	if	0	;tblptru may be non-zero
  7541  0112B6                     	endif
  7542  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7543  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7544  0112B8  6EF8               	movwf	tblptru,c
  7545  0112BA                     	endif
  7546  0112BA  0008               	tblrd		*
  7547  0112BC  50F5               	movf	tablat,w,c
  7548  0112BE  0A2A               	xorlw	42
  7549  0112C0  A4D8               	btfss	status,2,c
  7550  0112C2  D031               	goto	l10014
  7551                           
  7552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7553                           ;stkvar	_fmt @ sp[(-32)+-4]
  7554  0112C4  0EDC               	movlw	-36
  7555  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7556  0112CC  0EDD               	movlw	-35
  7557  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7558  0112D4  2ADE               	incf	postinc2,f,c
  7559  0112D6  0E00               	movlw	0
  7560  0112D8  22DD               	addwfc	postdec2,f,c
  7561                           
  7562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7563                           ;stkvar	_ap @ sp[(-32)+-6]
  7564  0112DA  0EDA               	movlw	-38
  7565  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7566  0112E2  0EDB               	movlw	-37
  7567  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7568  0112EA  0E02               	movlw	2
  7569  0112EC  5EDE               	subwf	postinc2,f,c
  7570  0112EE  0E00               	movlw	0
  7571  0112F0  5ADD               	subwfb	postdec2,f,c
  7572  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7573  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7574  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7575  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7576  01130A  006F FF78  F01B    	movff	postinc2,_width
  7577  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7578                           
  7579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7580  011316  AE1C               	btfss	(_width+1)^0,7,c
  7581  011318  D066               	goto	u10060
  7582                           
  7583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7584  01131A  801F               	bsf	_flags^0,0,c
  7585                           
  7586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7587  01131C  6C1B               	negf	_width^0,c
  7588  01131E  1E1C               	comf	(_width+1)^0,f,c
  7589  011320  B0D8               	btfsc	status,0,c
  7590  011322  2A1C               	incf	(_width+1)^0,f,c
  7591  011324  D060               	goto	u10060
  7592  011326                     l10014:
  7593                           
  7594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7595                           ;stkvar	_fmt @ sp[(-32)+-4]
  7596  011326  0EDC               	movlw	-36
  7597  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7598  01132E  0EDD               	movlw	-35
  7599  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7600  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7601  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7602  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7603  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7604  01134E  EC1C  F0A8         	call	_atoi	;wreg free
  7605  011352  0060  F0C8  F01B   	movff	btemp,_width
  7606  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7607                           
  7608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7609  01135E  D00B               	goto	l10018
  7610  011360                     l10016:
  7611                           
  7612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7613                           ;stkvar	_fmt @ sp[(-32)+-4]
  7614  011360  0EDC               	movlw	-36
  7615  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7616  011368  0EDD               	movlw	-35
  7617  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7618  011370  2ADE               	incf	postinc2,f,c
  7619  011372  0E00               	movlw	0
  7620  011374  22DD               	addwfc	postdec2,f,c
  7621  011376                     l10018:
  7622  011376  0ED0               	movlw	208
  7623  011378  6E3C               	movwf	(btemp+10)^0,c
  7624  01137A  0EFF               	movlw	255
  7625  01137C  6E3D               	movwf	(btemp+11)^0,c
  7626                           
  7627                           ;stkvar	_fmt @ sp[(-32)+-4]
  7628  01137E  0EDC               	movlw	-36
  7629  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7630  011386  0EDD               	movlw	-35
  7631  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7632  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7633  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7634  01139A                     	if	0	;tblptru may be non-zero
  7635  01139A                     	endif
  7636  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7637  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7638  01139C  6EF8               	movwf	tblptru,c
  7639  01139E                     	endif
  7640  01139E  0008               	tblrd		*
  7641  0113A0  50F5               	movf	tablat,w,c
  7642  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7643  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7644  0113A6  503C               	movf	(btemp+10)^0,w,c
  7645  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7646  0113AA  503D               	movf	(btemp+11)^0,w,c
  7647  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7648  0113AE  503B               	movf	(btemp+9)^0,w,c
  7649  0113B0  E106               	bnz	u10040
  7650  0113B2  0E0A               	movlw	10
  7651  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7652  0113B6  B0D8               	btfsc	status,0,c
  7653  0113B8  D002               	goto	u10040
  7654  0113BA  0E01               	movlw	1
  7655  0113BC  D001               	goto	u10050
  7656  0113BE                     u10040:
  7657  0113BE  0E00               	movlw	0
  7658  0113C0                     u10050:
  7659  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7660  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7661                           
  7662                           ;stkvar	_vfpfcnvrt$4514 @ sp[(-32)+4]
  7663  0113C4  0EE4               	movlw	-28
  7664  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7665  0113CC  0EE5               	movlw	-27
  7666  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7667                           
  7668                           ;stkvar	_vfpfcnvrt$4514 @ sp[(-32)+4]
  7669  0113D4  0EE4               	movlw	-28
  7670  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7671  0113DC  0EE5               	movlw	-27
  7672  0113DE  50E3               	movf	plusw1,w,c
  7673  0113E0  1032               	iorwf	btemp^0,w,c
  7674  0113E2  A4D8               	btfss	status,2,c
  7675  0113E4  D7BD               	goto	l10016
  7676  0113E6                     u10060:
  7677                           
  7678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7679                           ;stkvar	_fmt @ sp[(-32)+-4]
  7680  0113E6  0EDC               	movlw	-36
  7681  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7682  0113EE  0EDD               	movlw	-35
  7683  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7684  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7685  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7686  011402                     	if	0	;tblptru may be non-zero
  7687  011402                     	endif
  7688  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7689  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7690  011404  6EF8               	movwf	tblptru,c
  7691  011406                     	endif
  7692  011406  0008               	tblrd		*
  7693  011408  50F5               	movf	tablat,w,c
  7694  01140A  0A2E               	xorlw	46
  7695  01140C  A4D8               	btfss	status,2,c
  7696  01140E  D0AC               	goto	u10110
  7697                           
  7698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7699  011410  6A1D               	clrf	_prec^0,c
  7700  011412  6A1E               	clrf	(_prec+1)^0,c
  7701                           
  7702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7703                           ;stkvar	_fmt @ sp[(-32)+-4]
  7704  011414  0EDC               	movlw	-36
  7705  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7706  01141C  0EDD               	movlw	-35
  7707  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7708  011424  2ADE               	incf	postinc2,f,c
  7709  011426  0E00               	movlw	0
  7710  011428  22DD               	addwfc	postdec2,f,c
  7711                           
  7712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7713                           ;stkvar	_fmt @ sp[(-32)+-4]
  7714  01142A  0EDC               	movlw	-36
  7715  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7716  011432  0EDD               	movlw	-35
  7717  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7718  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7719  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7720  011446                     	if	0	;tblptru may be non-zero
  7721  011446                     	endif
  7722  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7723  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7724  011448  6EF8               	movwf	tblptru,c
  7725  01144A                     	endif
  7726  01144A  0008               	tblrd		*
  7727  01144C  50F5               	movf	tablat,w,c
  7728  01144E  0A2A               	xorlw	42
  7729  011450  A4D8               	btfss	status,2,c
  7730  011452  D02A               	goto	l10036
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7733                           ;stkvar	_fmt @ sp[(-32)+-4]
  7734  011454  0EDC               	movlw	-36
  7735  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7736  01145C  0EDD               	movlw	-35
  7737  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7738  011464  2ADE               	incf	postinc2,f,c
  7739  011466  0E00               	movlw	0
  7740  011468  22DD               	addwfc	postdec2,f,c
  7741                           
  7742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7743                           ;stkvar	_ap @ sp[(-32)+-6]
  7744  01146A  0EDA               	movlw	-38
  7745  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7746  011472  0EDB               	movlw	-37
  7747  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7748  01147A  0E02               	movlw	2
  7749  01147C  5EDE               	subwf	postinc2,f,c
  7750  01147E  0E00               	movlw	0
  7751  011480  5ADD               	subwfb	postdec2,f,c
  7752  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7753  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7754  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7755  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7756  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7757  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7758                           
  7759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7760  0114A6  D060               	goto	u10110
  7761  0114A8                     l10036:
  7762                           
  7763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7764                           ;stkvar	_fmt @ sp[(-32)+-4]
  7765  0114A8  0EDC               	movlw	-36
  7766  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7767  0114B0  0EDD               	movlw	-35
  7768  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7769  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7770  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7771  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7772  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7773  0114D0  EC1C  F0A8         	call	_atoi	;wreg free
  7774  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7775  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7776                           
  7777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7778  0114E0  D00B               	goto	l10040
  7779  0114E2                     l10038:
  7780                           
  7781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7782                           ;stkvar	_fmt @ sp[(-32)+-4]
  7783  0114E2  0EDC               	movlw	-36
  7784  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7785  0114EA  0EDD               	movlw	-35
  7786  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7787  0114F2  2ADE               	incf	postinc2,f,c
  7788  0114F4  0E00               	movlw	0
  7789  0114F6  22DD               	addwfc	postdec2,f,c
  7790  0114F8                     l10040:
  7791  0114F8  0ED0               	movlw	208
  7792  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7793  0114FC  0EFF               	movlw	255
  7794  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7795                           
  7796                           ;stkvar	_fmt @ sp[(-32)+-4]
  7797  011500  0EDC               	movlw	-36
  7798  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7799  011508  0EDD               	movlw	-35
  7800  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7801  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7802  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7803  01151C                     	if	0	;tblptru may be non-zero
  7804  01151C                     	endif
  7805  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7806  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7807  01151E  6EF8               	movwf	tblptru,c
  7808  011520                     	endif
  7809  011520  0008               	tblrd		*
  7810  011522  50F5               	movf	tablat,w,c
  7811  011524  6E3A               	movwf	(btemp+8)^0,c
  7812  011526  6A3B               	clrf	(btemp+9)^0,c
  7813  011528  503C               	movf	(btemp+10)^0,w,c
  7814  01152A  263A               	addwf	(btemp+8)^0,f,c
  7815  01152C  503D               	movf	(btemp+11)^0,w,c
  7816  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7817  011530  503B               	movf	(btemp+9)^0,w,c
  7818  011532  E106               	bnz	u10090
  7819  011534  0E0A               	movlw	10
  7820  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7821  011538  B0D8               	btfsc	status,0,c
  7822  01153A  D002               	goto	u10090
  7823  01153C  0E01               	movlw	1
  7824  01153E  D001               	goto	u10100
  7825  011540                     u10090:
  7826  011540  0E00               	movlw	0
  7827  011542                     u10100:
  7828  011542  6E3C               	movwf	(btemp+10)^0,c
  7829  011544  6A3D               	clrf	(btemp+11)^0,c
  7830                           
  7831                           ;stkvar	_vfpfcnvrt$4515 @ sp[(-32)+0]
  7832  011546  0EE0               	movlw	-32
  7833  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7834  01154E  0EE1               	movlw	-31
  7835  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7836                           
  7837                           ;stkvar	_vfpfcnvrt$4515 @ sp[(-32)+0]
  7838  011556  0EE0               	movlw	-32
  7839  011558  006F FF8C  F032    	movff	plusw1,btemp
  7840  01155E  0EE1               	movlw	-31
  7841  011560  50E3               	movf	plusw1,w,c
  7842  011562  1032               	iorwf	btemp^0,w,c
  7843  011564  A4D8               	btfss	status,2,c
  7844  011566  D7BD               	goto	l10038
  7845  011568                     u10110:
  7846                           
  7847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7848                           ;stkvar	_fmt @ sp[(-32)+-4]
  7849  011568  0EDC               	movlw	-36
  7850  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7851  011570  0EDD               	movlw	-35
  7852  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7853  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7854  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7855  011584                     	if	0	;tblptru may be non-zero
  7856  011584                     	endif
  7857  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7858  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7859  011586  6EF8               	movwf	tblptru,c
  7860  011588                     	endif
  7861  011588  0008               	tblrd		*
  7862  01158A  50F5               	movf	tablat,w,c
  7863  01158C  6EE6               	movwf	postinc1,c
  7864  01158E  0E00               	movlw	0
  7865  011590  6EE6               	movwf	postinc1,c
  7866  011592  ECA5  F0BB         	call	_tolower	;wreg free
  7867                           
  7868                           ;stkvar	_ct @ sp[(-32)+26]
  7869  011596  0EFA               	movlw	-6
  7870  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7871                           
  7872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7873                           ;stkvar	_ct @ sp[(-32)+26]
  7874  01159E  0EFA               	movlw	-6
  7875  0115A0  50E3               	movf	plusw1,w,c
  7876  0115A2  B4D8               	btfsc	status,2,c
  7877  0115A4  D05B               	goto	l10056
  7878                           
  7879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7880                           ;stkvar	_ct @ sp[(-32)+26]
  7881  0115A6  0EFB               	movlw	251
  7882  0115A8  24E1               	addwf	fsr1l,w,c
  7883  0115AA  6ED9               	movwf	fsr2l,c
  7884  0115AC  0EFF               	movlw	255
  7885  0115AE  20E2               	addwfc	fsr1h,w,c
  7886  0115B0  6EDA               	movwf	fsr2h,c
  7887                           
  7888                           ;stkvar	_fmt @ sp[(-32)+-4]
  7889  0115B2  0EDC               	movlw	-36
  7890  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7891  0115BA  0EDD               	movlw	-35
  7892  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7893  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7894  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7895  0115CE  0E01               	movlw	1
  7896  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7897  0115D2  0E00               	movlw	0
  7898  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7899  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7900  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7901  0115E2                     	if	0	;tblptru may be non-zero
  7902  0115E2                     	endif
  7903  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7904  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7905  0115E4  6EF8               	movwf	tblptru,c
  7906  0115E6                     	endif
  7907  0115E6  0008               	tblrd		*
  7908  0115E8  50F5               	movf	tablat,w,c
  7909  0115EA  6EE6               	movwf	postinc1,c
  7910  0115EC  0E00               	movlw	0
  7911  0115EE  6EE6               	movwf	postinc1,c
  7912  0115F0  ECA5  F0BB         	call	_tolower	;wreg free
  7913  0115F4  5032               	movf	btemp^0,w,c
  7914  0115F6  6EDF               	movwf	indf2,c
  7915                           
  7916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7917                           ;stkvar	_ct @ sp[(-32)+26]
  7918  0115F8  0EFB               	movlw	251
  7919  0115FA  24E1               	addwf	fsr1l,w,c
  7920  0115FC  6ED9               	movwf	fsr2l,c
  7921  0115FE  0EFF               	movlw	255
  7922  011600  20E2               	addwfc	fsr1h,w,c
  7923  011602  6EDA               	movwf	fsr2h,c
  7924  011604  50DF               	movf	indf2,w,c
  7925  011606  B4D8               	btfsc	status,2,c
  7926  011608  D029               	goto	l10056
  7927                           
  7928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7929                           ;stkvar	_ct @ sp[(-32)+26]
  7930  01160A  0EFC               	movlw	252
  7931  01160C  24E1               	addwf	fsr1l,w,c
  7932  01160E  6ED9               	movwf	fsr2l,c
  7933  011610  0EFF               	movlw	255
  7934  011612  20E2               	addwfc	fsr1h,w,c
  7935  011614  6EDA               	movwf	fsr2h,c
  7936                           
  7937                           ;stkvar	_fmt @ sp[(-32)+-4]
  7938  011616  0EDC               	movlw	-36
  7939  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7940  01161E  0EDD               	movlw	-35
  7941  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7942  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7943  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7944  011632  0E02               	movlw	2
  7945  011634  263C               	addwf	(btemp+10)^0,f,c
  7946  011636  0E00               	movlw	0
  7947  011638  223D               	addwfc	(btemp+11)^0,f,c
  7948  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7949  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7950  011646                     	if	0	;tblptru may be non-zero
  7951  011646                     	endif
  7952  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7953  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7954  011648  6EF8               	movwf	tblptru,c
  7955  01164A                     	endif
  7956  01164A  0008               	tblrd		*
  7957  01164C  50F5               	movf	tablat,w,c
  7958  01164E  6EE6               	movwf	postinc1,c
  7959  011650  0E00               	movlw	0
  7960  011652  6EE6               	movwf	postinc1,c
  7961  011654  ECA5  F0BB         	call	_tolower	;wreg free
  7962  011658  5032               	movf	btemp^0,w,c
  7963  01165A  6EDF               	movwf	indf2,c
  7964  01165C                     l10056:
  7965                           
  7966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7967                           ;stkvar	_fmt @ sp[(-32)+-4]
  7968  01165C  0EDC               	movlw	-36
  7969  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7970  011664  0EDD               	movlw	-35
  7971  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7972  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7973  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7974  011678                     	if	0	;tblptru may be non-zero
  7975  011678                     	endif
  7976  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7977  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7978  01167A  6EF8               	movwf	tblptru,c
  7979  01167C                     	endif
  7980  01167C  0008               	tblrd		*
  7981  01167E  50F5               	movf	tablat,w,c
  7982  011680  0A63               	xorlw	99
  7983  011682  A4D8               	btfss	status,2,c
  7984  011684  D036               	goto	l10066
  7985                           
  7986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7987                           ;stkvar	_fmt @ sp[(-32)+-4]
  7988  011686  0EDC               	movlw	-36
  7989  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7990  01168E  0EDD               	movlw	-35
  7991  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7992  011696  2ADE               	incf	postinc2,f,c
  7993  011698  0E00               	movlw	0
  7994  01169A  22DD               	addwfc	postdec2,f,c
  7995                           
  7996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7997                           ;stkvar	_ap @ sp[(-32)+-6]
  7998  01169C  0EDA               	movlw	-38
  7999  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8000  0116A4  0EDB               	movlw	-37
  8001  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8002  0116AC  0E02               	movlw	2
  8003  0116AE  5EDE               	subwf	postinc2,f,c
  8004  0116B0  0E00               	movlw	0
  8005  0116B2  5ADD               	subwfb	postdec2,f,c
  8006  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8007  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8008  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8009  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8010  0116CC  50DF               	movf	indf2,w,c
  8011  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8012                           
  8013                           ;stkvar	_c @ sp[(-32)+31]
  8014  0116D0  0EFF               	movlw	-1
  8015  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8016                           
  8017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8018                           ;stkvar	_c @ sp[(-32)+31]
  8019  0116D8  0EFF               	movlw	-1
  8020  0116DA  50E3               	movf	plusw1,w,c
  8021  0116DC  6EE6               	movwf	postinc1,c
  8022                           
  8023                           ;stkvar	_fp @ sp[(-33)+-2]
  8024  0116DE  0EDD               	movlw	-35
  8025  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8026  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8027  0116EC  EC1F  F0BB         	call	_ctoa	;wreg free
  8028  0116F0  D343               	goto	l2044
  8029  0116F2                     l10066:
  8030                           
  8031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8032                           ;stkvar	_fmt @ sp[(-32)+-4]
  8033  0116F2  0EDC               	movlw	-36
  8034  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8035  0116FA  0EDD               	movlw	-35
  8036  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8037  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8038  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8039  01170E                     	if	0	;tblptru may be non-zero
  8040  01170E                     	endif
  8041  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8042  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8043  011710  6EF8               	movwf	tblptru,c
  8044  011712                     	endif
  8045  011712  0008               	tblrd		*
  8046  011714  50F5               	movf	tablat,w,c
  8047  011716  0A64               	xorlw	100
  8048  011718  B4D8               	btfsc	status,2,c
  8049  01171A  D015               	goto	u10160
  8050                           
  8051                           ;stkvar	_fmt @ sp[(-32)+-4]
  8052  01171C  0EDC               	movlw	-36
  8053  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8054  011724  0EDD               	movlw	-35
  8055  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8056  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8057  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8058  011738                     	if	0	;tblptru may be non-zero
  8059  011738                     	endif
  8060  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8061  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8062  01173A  6EF8               	movwf	tblptru,c
  8063  01173C                     	endif
  8064  01173C  0008               	tblrd		*
  8065  01173E  50F5               	movf	tablat,w,c
  8066  011740  0A69               	xorlw	105
  8067  011742  A4D8               	btfss	status,2,c
  8068  011744  D075               	goto	l10078
  8069  011746                     u10160:
  8070                           
  8071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8072                           ;stkvar	_fmt @ sp[(-32)+-4]
  8073  011746  0EDC               	movlw	-36
  8074  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8075  01174E  0EDD               	movlw	-35
  8076  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8077  011756  2ADE               	incf	postinc2,f,c
  8078  011758  0E00               	movlw	0
  8079  01175A  22DD               	addwfc	postdec2,f,c
  8080                           
  8081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8082                           ;stkvar	_ap @ sp[(-32)+-6]
  8083  01175C  0EDA               	movlw	-38
  8084  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8085  011764  0EDB               	movlw	-37
  8086  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8087  01176C  0E02               	movlw	2
  8088  01176E  5EDE               	subwf	postinc2,f,c
  8089  011770  0E00               	movlw	0
  8090  011772  5ADD               	subwfb	postdec2,f,c
  8091  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8092  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8093  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8094  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8095  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8096  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8097                           
  8098                           ;stkvar	_ll @ sp[(-32)+14]
  8099  011798  0EEE               	movlw	-18
  8100  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8101  0117A0  0EEF               	movlw	-17
  8102  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8103  0117A8  6A32               	clrf	btemp^0,c
  8104  0117AA  BEE3               	btfsc	plusw1,7,c
  8105  0117AC  6832               	setf	btemp^0,c
  8106  0117AE  0EF0               	movlw	-16
  8107  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8108  0117B6  0EF1               	movlw	-15
  8109  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8110  0117BE  0EF2               	movlw	-14
  8111  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8112  0117C6  0EF3               	movlw	-13
  8113  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8114  0117CE  0EF4               	movlw	-12
  8115  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8116  0117D6  0EF5               	movlw	-11
  8117  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8118                           
  8119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8120                           ;stkvar	_ll @ sp[(-32)+14]
  8121  0117DE  50E1               	movf	fsr1l,w,c
  8122  0117E0  0FEE               	addlw	-18
  8123  0117E2  6ED9               	movwf	fsr2l,c
  8124  0117E4  50E2               	movf	fsr1h,w,c
  8125  0117E6  6EDA               	movwf	fsr2h,c
  8126  0117E8  0EFF               	movlw	255
  8127  0117EA  22DA               	addwfc	fsr2h,f,c
  8128  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8129  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8130  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8131  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8132  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8133  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8134  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8135  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8136                           
  8137                           ;stkvar	_fp @ sp[(-40)+-2]
  8138  01181C  0ED6               	movlw	-42
  8139  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8140  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8141  01182A  EC34  F09E         	call	_dtoa	;wreg free
  8142  01182E  D2A4               	goto	l2044
  8143  011830                     l10078:
  8144                           
  8145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8146                           ;stkvar	_ct @ sp[(-32)+26]
  8147  011830  0EFA               	movlw	-6
  8148  011832  006F FF8C  F032    	movff	plusw1,btemp
  8149  011838  0E66               	movlw	102
  8150  01183A  1832               	xorwf	btemp^0,w,c
  8151  01183C  A4D8               	btfss	status,2,c
  8152  01183E  D06E               	goto	l10090
  8153                           
  8154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8155                           ;stkvar	_fmt @ sp[(-32)+-4]
  8156  011840  0EDC               	movlw	-36
  8157  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8158  011848  0EDD               	movlw	-35
  8159  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8160  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8161  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8162  01185C                     	if	0	;tblptru may be non-zero
  8163  01185C                     	endif
  8164  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8165  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8166  01185E  6EF8               	movwf	tblptru,c
  8167  011860                     	endif
  8168                           
  8169                           ;stkvar	_c @ sp[(-32)+31]
  8170  011860  0008               	tblrd		*
  8171  011862  0EFF               	movlw	-1
  8172  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8173                           
  8174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8175                           ;stkvar	_fmt @ sp[(-32)+-4]
  8176  01186A  0EDC               	movlw	-36
  8177  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8178  011872  0EDD               	movlw	-35
  8179  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8180  01187A  2ADE               	incf	postinc2,f,c
  8181  01187C  0E00               	movlw	0
  8182  01187E  22DD               	addwfc	postdec2,f,c
  8183                           
  8184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8185                           ;stkvar	_ap @ sp[(-32)+-6]
  8186  011880  0EDA               	movlw	-38
  8187  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8188  011888  0EDB               	movlw	-37
  8189  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8190  011890  0E04               	movlw	4
  8191  011892  5EDE               	subwf	postinc2,f,c
  8192  011894  0E00               	movlw	0
  8193  011896  5ADD               	subwfb	postdec2,f,c
  8194  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8195  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8196  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8197  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8198  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8199  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8200  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8201  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8202                           
  8203                           ;stkvar	_f @ sp[(-32)+22]
  8204  0118C8  0EF6               	movlw	-10
  8205  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8206  0118D0  0EF7               	movlw	-9
  8207  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8208  0118D8  0EF8               	movlw	-8
  8209  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8210  0118E0  0EF9               	movlw	-7
  8211  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8212  0118E8                     l10086:
  8213                           
  8214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8215                           ;stkvar	_c @ sp[(-32)+31]
  8216  0118E8  0EFF               	movlw	-1
  8217  0118EA  50E3               	movf	plusw1,w,c
  8218  0118EC  6EE6               	movwf	postinc1,c
  8219                           
  8220                           ;stkvar	_f @ sp[(-33)+22]
  8221  0118EE  0EF5               	movlw	-11
  8222  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8223  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8224  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8225  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8226                           
  8227                           ;stkvar	_fp @ sp[(-37)+-2]
  8228  011908  0ED9               	movlw	-39
  8229  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8230  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8231  011916  EC00  F080         	call	_efgtoa	;wreg free
  8232  01191A  D22E               	goto	l2044
  8233  01191C                     l10090:
  8234                           
  8235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8236  01191C  0E02               	movlw	2
  8237  01191E  6EE6               	movwf	postinc1,c
  8238  011920  0E00               	movlw	0
  8239  011922  6EE6               	movwf	postinc1,c
  8240  011924  0EF5               	movlw	low STR_45
  8241  011926  6EE6               	movwf	postinc1,c
  8242  011928  0EFF               	movlw	high STR_45
  8243  01192A  6EE6               	movwf	postinc1,c
  8244                           
  8245                           ;stkvar	_ct @ sp[(-36)+26]
  8246  01192C  0EF6               	movlw	246
  8247  01192E  24E1               	addwf	fsr1l,w,c
  8248  011930  6E32               	movwf	btemp^0,c
  8249  011932  0EFF               	movlw	255
  8250  011934  20E2               	addwfc	fsr1h,w,c
  8251  011936  6E33               	movwf	(btemp+1)^0,c
  8252  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8253  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8254  011944  ECB6  F0AD         	call	_strncmp	;wreg free
  8255  011948  5032               	movf	btemp^0,w,c
  8256  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8257  01194C  A4D8               	btfss	status,2,c
  8258  01194E  D096               	goto	l10110
  8259                           
  8260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8261                           ;stkvar	_fmt @ sp[(-32)+-4]
  8262  011950  0EDC               	movlw	-36
  8263  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8264  011958  0EDD               	movlw	-35
  8265  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8266  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8267  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8268  01196C  0E01               	movlw	1
  8269  01196E  263C               	addwf	(btemp+10)^0,f,c
  8270  011970  0E00               	movlw	0
  8271  011972  223D               	addwfc	(btemp+11)^0,f,c
  8272  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8273  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8274  011980                     	if	0	;tblptru may be non-zero
  8275  011980                     	endif
  8276  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8277  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8278  011982  6EF8               	movwf	tblptru,c
  8279  011984                     	endif
  8280                           
  8281                           ;stkvar	_c @ sp[(-32)+31]
  8282  011984  0008               	tblrd		*
  8283  011986  0EFF               	movlw	-1
  8284  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8285  01198E  0EBF               	movlw	191
  8286  011990  6E3C               	movwf	(btemp+10)^0,c
  8287  011992  0EFF               	movlw	255
  8288  011994  6E3D               	movwf	(btemp+11)^0,c
  8289                           
  8290                           ;stkvar	_fmt @ sp[(-32)+-4]
  8291  011996  0EDC               	movlw	-36
  8292  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8293  01199E  0EDD               	movlw	-35
  8294  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8295  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8296  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8297  0119B2                     	if	0	;tblptru may be non-zero
  8298  0119B2                     	endif
  8299  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8300  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8301  0119B4  6EF8               	movwf	tblptru,c
  8302  0119B6                     	endif
  8303  0119B6  0008               	tblrd		*
  8304  0119B8  50F5               	movf	tablat,w,c
  8305  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8306  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8307  0119BE  503C               	movf	(btemp+10)^0,w,c
  8308  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8309  0119C2  503D               	movf	(btemp+11)^0,w,c
  8310  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8311  0119C6  503B               	movf	(btemp+9)^0,w,c
  8312  0119C8  E106               	bnz	u10190
  8313  0119CA  0E1A               	movlw	26
  8314  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8315  0119CE  B0D8               	btfsc	status,0,c
  8316  0119D0  D002               	goto	u10190
  8317  0119D2  0E01               	movlw	1
  8318  0119D4  D001               	goto	u10200
  8319  0119D6                     u10190:
  8320  0119D6  0E00               	movlw	0
  8321  0119D8                     u10200:
  8322  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8323  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8324                           
  8325                           ;stkvar	_vfpfcnvrt$4521 @ sp[(-32)+2]
  8326  0119DC  0EE2               	movlw	-30
  8327  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8328  0119E4  0EE3               	movlw	-29
  8329  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8330                           
  8331                           ;stkvar	_vfpfcnvrt$4521 @ sp[(-32)+2]
  8332  0119EC  0EE2               	movlw	-30
  8333  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8334  0119F4  0EE3               	movlw	-29
  8335  0119F6  50E3               	movf	plusw1,w,c
  8336  0119F8  1032               	iorwf	btemp^0,w,c
  8337                           
  8338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8339                           ;stkvar	_ap @ sp[(-32)+-6]
  8340                           
  8341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8342                           
  8343                           ;stkvar	_f @ sp[(-32)+22]
  8344                           
  8345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8346                           ;stkvar	_ap @ sp[(-32)+-6]
  8347  0119FA  0EDA               	movlw	-38
  8348  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8349  011A02  0EDB               	movlw	-37
  8350  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8351  011A0A  0E04               	movlw	4
  8352  011A0C  5EDE               	subwf	postinc2,f,c
  8353  011A0E  0E00               	movlw	0
  8354  011A10  5ADD               	subwfb	postdec2,f,c
  8355  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8356  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8357  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8358  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8359  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8360  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8361  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8362  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8363                           
  8364                           ;stkvar	_f @ sp[(-32)+22]
  8365  011A42  0EF6               	movlw	-10
  8366  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8367  011A4A  0EF7               	movlw	-9
  8368  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8369  011A52  0EF8               	movlw	-8
  8370  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8371  011A5A  0EF9               	movlw	-7
  8372  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8373                           
  8374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8375                           ;stkvar	_fmt @ sp[(-32)+-4]
  8376  011A62  0EDC               	movlw	-36
  8377  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8378  011A6A  0EDD               	movlw	-35
  8379  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8380  011A72  0E02               	movlw	2
  8381  011A74  26DE               	addwf	postinc2,f,c
  8382  011A76  0E00               	movlw	0
  8383  011A78  22DD               	addwfc	postdec2,f,c
  8384  011A7A  D736               	goto	l10086
  8385  011A7C                     l10110:
  8386                           
  8387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8388                           ;stkvar	_fmt @ sp[(-32)+-4]
  8389  011A7C  0EDC               	movlw	-36
  8390  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8391  011A84  0EDD               	movlw	-35
  8392  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8393  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8394  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8395  011A98                     	if	0	;tblptru may be non-zero
  8396  011A98                     	endif
  8397  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8398  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8399  011A9A  6EF8               	movwf	tblptru,c
  8400  011A9C                     	endif
  8401  011A9C  0008               	tblrd		*
  8402  011A9E  50F5               	movf	tablat,w,c
  8403  011AA0  0A73               	xorlw	115
  8404  011AA2  A4D8               	btfss	status,2,c
  8405  011AA4  D042               	goto	l10120
  8406                           
  8407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8408                           ;stkvar	_fmt @ sp[(-32)+-4]
  8409  011AA6  0EDC               	movlw	-36
  8410  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8411  011AAE  0EDD               	movlw	-35
  8412  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8413  011AB6  2ADE               	incf	postinc2,f,c
  8414  011AB8  0E00               	movlw	0
  8415  011ABA  22DD               	addwfc	postdec2,f,c
  8416                           
  8417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8418                           ;stkvar	_ap @ sp[(-32)+-6]
  8419  011ABC  0EDA               	movlw	-38
  8420  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8421  011AC4  0EDB               	movlw	-37
  8422  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8423  011ACC  0E02               	movlw	2
  8424  011ACE  5EDE               	subwf	postinc2,f,c
  8425  011AD0  0E00               	movlw	0
  8426  011AD2  5ADD               	subwfb	postdec2,f,c
  8427  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8428  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8429  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8430  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8431  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8432  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8433                           
  8434                           ;stkvar	_cp @ sp[(-32)+29]
  8435  011AF8  0EFE               	movlw	-2
  8436  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8437  011B00  0EFD               	movlw	-3
  8438  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8439                           
  8440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8441                           ;stkvar	_cp @ sp[(-32)+29]
  8442  011B08  0EFD               	movlw	-3
  8443  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8444  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8445                           
  8446                           ;stkvar	_fp @ sp[(-34)+-2]
  8447  011B16  0EDC               	movlw	-36
  8448  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8449  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8450  011B24  EC7D  F0A5         	call	_stoa	;wreg free
  8451  011B28  D127               	goto	l2044
  8452  011B2A                     l10120:
  8453                           
  8454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8455                           ;stkvar	_fmt @ sp[(-32)+-4]
  8456  011B2A  0EDC               	movlw	-36
  8457  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8458  011B32  0EDD               	movlw	-35
  8459  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8460  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8461  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8462  011B46                     	if	0	;tblptru may be non-zero
  8463  011B46                     	endif
  8464  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8465  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8466  011B48  6EF8               	movwf	tblptru,c
  8467  011B4A                     	endif
  8468  011B4A  0008               	tblrd		*
  8469  011B4C  50F5               	movf	tablat,w,c
  8470  011B4E  0A78               	xorlw	120
  8471  011B50  B4D8               	btfsc	status,2,c
  8472  011B52  D015               	goto	u10240
  8473                           
  8474                           ;stkvar	_fmt @ sp[(-32)+-4]
  8475  011B54  0EDC               	movlw	-36
  8476  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8477  011B5C  0EDD               	movlw	-35
  8478  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8479  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8480  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8481  011B70                     	if	0	;tblptru may be non-zero
  8482  011B70                     	endif
  8483  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8484  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8485  011B72  6EF8               	movwf	tblptru,c
  8486  011B74                     	endif
  8487  011B74  0008               	tblrd		*
  8488  011B76  50F5               	movf	tablat,w,c
  8489  011B78  0A58               	xorlw	88
  8490  011B7A  A4D8               	btfss	status,2,c
  8491  011B7C  D094               	goto	l10134
  8492  011B7E                     u10240:
  8493                           
  8494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8495                           ;stkvar	_fmt @ sp[(-32)+-4]
  8496  011B7E  0EDC               	movlw	-36
  8497  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8498  011B86  0EDD               	movlw	-35
  8499  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8500  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8501  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8502  011B9A                     	if	0	;tblptru may be non-zero
  8503  011B9A                     	endif
  8504  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8505  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8506  011B9C  6EF8               	movwf	tblptru,c
  8507  011B9E                     	endif
  8508                           
  8509                           ;stkvar	_c @ sp[(-32)+31]
  8510  011B9E  0008               	tblrd		*
  8511  011BA0  0EFF               	movlw	-1
  8512  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8513                           
  8514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8515                           ;stkvar	_fmt @ sp[(-32)+-4]
  8516  011BA8  0EDC               	movlw	-36
  8517  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8518  011BB0  0EDD               	movlw	-35
  8519  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8520  011BB8  2ADE               	incf	postinc2,f,c
  8521  011BBA  0E00               	movlw	0
  8522  011BBC  22DD               	addwfc	postdec2,f,c
  8523                           
  8524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8525                           ;stkvar	_ap @ sp[(-32)+-6]
  8526  011BBE  0EDA               	movlw	-38
  8527  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8528  011BC6  0EDB               	movlw	-37
  8529  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8530  011BCE  0E02               	movlw	2
  8531  011BD0  5EDE               	subwf	postinc2,f,c
  8532  011BD2  0E00               	movlw	0
  8533  011BD4  5ADD               	subwfb	postdec2,f,c
  8534  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8535  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8536  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8537  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8538  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8539  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8540  011BFA  503C               	movf	(btemp+10)^0,w,c
  8541  011BFC  6E42               	movwf	(btemp+16)^0,c
  8542  011BFE  503D               	movf	(btemp+11)^0,w,c
  8543  011C00  6E43               	movwf	(btemp+17)^0,c
  8544  011C02  6A44               	clrf	(btemp+18)^0,c
  8545  011C04  6A45               	clrf	(btemp+19)^0,c
  8546  011C06  6A46               	clrf	(btemp+20)^0,c
  8547  011C08  6A47               	clrf	(btemp+21)^0,c
  8548  011C0A  6A48               	clrf	(btemp+22)^0,c
  8549  011C0C  6A49               	clrf	(btemp+23)^0,c
  8550                           
  8551                           ;stkvar	_llu @ sp[(-32)+6]
  8552  011C0E  0EE6               	movlw	-26
  8553  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8554  011C16  0EE7               	movlw	-25
  8555  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8556  011C1E  0EE8               	movlw	-24
  8557  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8558  011C26  0EE9               	movlw	-23
  8559  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8560  011C2E  0EEA               	movlw	-22
  8561  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8562  011C36  0EEB               	movlw	-21
  8563  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8564  011C3E  0EEC               	movlw	-20
  8565  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8566  011C46  0EED               	movlw	-19
  8567  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8568                           
  8569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8570                           ;stkvar	_c @ sp[(-32)+31]
  8571  011C4E  0EFF               	movlw	-1
  8572  011C50  50E3               	movf	plusw1,w,c
  8573  011C52  6EE6               	movwf	postinc1,c
  8574                           
  8575                           ;stkvar	_llu @ sp[(-33)+6]
  8576  011C54  50E1               	movf	fsr1l,w,c
  8577  011C56  0FE5               	addlw	-27
  8578  011C58  6ED9               	movwf	fsr2l,c
  8579  011C5A  50E2               	movf	fsr1h,w,c
  8580  011C5C  6EDA               	movwf	fsr2h,c
  8581  011C5E  0EFF               	movlw	255
  8582  011C60  22DA               	addwfc	fsr2h,f,c
  8583  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8584  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8585  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8586  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8587  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8588  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8589  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8590  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8591                           
  8592                           ;stkvar	_fp @ sp[(-41)+-2]
  8593  011C92  0ED5               	movlw	-43
  8594  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8595  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8596  011CA0  EC74  F0A0         	call	_xtoa	;wreg free
  8597  011CA4  D069               	goto	l2044
  8598  011CA6                     l10134:
  8599                           
  8600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8601                           ;stkvar	_fmt @ sp[(-32)+-4]
  8602  011CA6  0EDC               	movlw	-36
  8603  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8604  011CAE  0EDD               	movlw	-35
  8605  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8606  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8607  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8608  011CC2                     	if	0	;tblptru may be non-zero
  8609  011CC2                     	endif
  8610  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8611  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8612  011CC4  6EF8               	movwf	tblptru,c
  8613  011CC6                     	endif
  8614  011CC6  0008               	tblrd		*
  8615  011CC8  50F5               	movf	tablat,w,c
  8616  011CCA  0A25               	xorlw	37
  8617  011CCC  A4D8               	btfss	status,2,c
  8618  011CCE  D01A               	goto	l10144
  8619                           
  8620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8621                           ;stkvar	_fmt @ sp[(-32)+-4]
  8622  011CD0  0EDC               	movlw	-36
  8623  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8624  011CD8  0EDD               	movlw	-35
  8625  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8626  011CE0  2ADE               	incf	postinc2,f,c
  8627  011CE2  0E00               	movlw	0
  8628  011CE4  22DD               	addwfc	postdec2,f,c
  8629                           
  8630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8631                           ;stkvar	_fp @ sp[(-32)+-2]
  8632  011CE6  0EDE               	movlw	-34
  8633  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8634  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8635  011CF4  0E25               	movlw	37
  8636  011CF6  6EE6               	movwf	postinc1,c
  8637  011CF8  0E00               	movlw	0
  8638  011CFA  6EE6               	movwf	postinc1,c
  8639  011CFC  EC91  F0B3         	call	_fputc	;wreg free
  8640  011D00                     l10140:
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8643  011D00  0E01               	movlw	1
  8644  011D02  D00C               	goto	L7
  8645  011D04                     l10144:
  8646                           
  8647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8648                           ;stkvar	_fmt @ sp[(-32)+-4]
  8649  011D04  0EDC               	movlw	-36
  8650  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8651  011D0C  0EDD               	movlw	-35
  8652  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8653  011D14  2ADE               	incf	postinc2,f,c
  8654  011D16  0E00               	movlw	0
  8655  011D18  22DD               	addwfc	postdec2,f,c
  8656                           
  8657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8658  011D1A  0E00               	movlw	0
  8659  011D1C                     L7:
  8660  011D1C  6E32               	movwf	btemp^0,c
  8661  011D1E  0E00               	movlw	0
  8662  011D20  6E33               	movwf	(btemp+1)^0,c
  8663  011D22  D02A               	goto	l2044
  8664  011D24                     l10150:
  8665                           
  8666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8667                           ;stkvar	_fp @ sp[(-32)+-2]
  8668  011D24  0EDE               	movlw	-34
  8669  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8670  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8671                           
  8672                           ;stkvar	_fmt @ sp[(-34)+-4]
  8673  011D32  0EDA               	movlw	-38
  8674  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8675  011D3A  0EDB               	movlw	-37
  8676  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8677  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8678  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8679  011D4E                     	if	0	;tblptru may be non-zero
  8680  011D4E                     	endif
  8681  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8682  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8683  011D50  6EF8               	movwf	tblptru,c
  8684  011D52                     	endif
  8685  011D52  0008               	tblrd		*
  8686  011D54  50F5               	movf	tablat,w,c
  8687  011D56  6EE6               	movwf	postinc1,c
  8688  011D58  0E00               	movlw	0
  8689  011D5A  6EE6               	movwf	postinc1,c
  8690  011D5C  EC91  F0B3         	call	_fputc	;wreg free
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8693                           ;stkvar	_fmt @ sp[(-32)+-4]
  8694  011D60  0EDC               	movlw	-36
  8695  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8696  011D68  0EDD               	movlw	-35
  8697  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8698  011D70  2ADE               	incf	postinc2,f,c
  8699  011D72  0E00               	movlw	0
  8700  011D74  22DD               	addwfc	postdec2,f,c
  8701  011D76  D7C4               	goto	l10140
  8702  011D78                     l2044:
  8703                           
  8704                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8705  011D78  0EDA               	movlw	218
  8706  011D7A  26E1               	addwf	fsr1l,f,c
  8707  011D7C  0EFF               	movlw	255
  8708  011D7E  22E2               	addwfc	fsr1h,f,c
  8709  011D80  0012               	return		;funcret
  8710  011D82                     __end_of_vfpfcnvrt:
  8711                           	opt callstack 0
  8712                           
  8713 ;; *************** function _xtoa *****************
  8714 ;; Defined at:
  8715 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8718 ;;		 -> f(6), NULL(0), 
  8719 ;;  d               8  [STACK] unsigned long long 
  8720 ;;  x               1  [STACK] unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  n               8  [STACK] unsigned long long 
  8723 ;;  c               2  [STACK] int 
  8724 ;;  i               2  [STACK] int 
  8725 ;;  w               2  [STACK] int 
  8726 ;;  p               2  [STACK] int 
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  2  [STACK] int 
  8729 ;; Registers used:
  8730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/5
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8740 ;;Total ram usage:        0 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:   11
  8743 ;; This function calls:
  8744 ;;		_isalpha
  8745 ;;		_isupper
  8746 ;;		_pad
  8747 ;;		_toupper
  8748 ;; This function is called by:
  8749 ;;		_vfpfcnvrt
  8750 ;; This function uses a reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text39
  8754  0140E8                     __ptext39:
  8755                           	opt callstack 0
  8756  0140E8                     _xtoa:
  8757                           	opt callstack 0
  8758                           
  8759                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8760  0140E8  0E14               	movlw	20
  8761  0140EA  26E1               	addwf	fsr1l,f,c
  8762  0140EC  0E00               	movlw	0
  8763  0140EE  22E2               	addwfc	fsr1h,f,c
  8764                           
  8765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8766                           
  8767                           ;incstack = 0
  8768  0140F0  AE1E               	btfss	(_prec+1)^0,7,c
  8769                           
  8770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8771  0140F2  921F               	bcf	_flags^0,1,c
  8772                           
  8773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8774  0140F4  BE1E               	btfsc	(_prec+1)^0,7,c
  8775  0140F6  D005               	goto	u9840
  8776  0140F8  501E               	movf	(_prec+1)^0,w,c
  8777  0140FA  E110               	bnz	l9932
  8778  0140FC  041D               	decf	_prec^0,w,c
  8779  0140FE  B0D8               	btfsc	status,0,c
  8780  014100  D00D               	goto	l9932
  8781  014102                     u9840:
  8782  014102  0E01               	movlw	1
  8783  014104  6E3C               	movwf	(btemp+10)^0,c
  8784  014106  0E00               	movlw	0
  8785  014108  6E3D               	movwf	(btemp+11)^0,c
  8786                           
  8787                           ;stkvar	_p @ sp[(-20)+18]
  8788  01410A  0EFE               	movlw	-2
  8789  01410C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8790  014112  0EFF               	movlw	-1
  8791  014114  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8792  01411A  D008               	goto	l1994
  8793  01411C                     l9932:
  8794                           
  8795                           ;stkvar	_p @ sp[(-20)+18]
  8796  01411C  0EFE               	movlw	-2
  8797  01411E  0060  F077  FFE3   	movff	_prec,plusw1
  8798  014124  0EFF               	movlw	-1
  8799  014126  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8800  01412C                     l1994:
  8801                           
  8802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8803                           ;stkvar	_w @ sp[(-20)+16]
  8804  01412C  0EFC               	movlw	-4
  8805  01412E  0060  F06F  FFE3   	movff	_width,plusw1
  8806  014134  0EFD               	movlw	-3
  8807  014136  0060  F073  FFE3   	movff	_width+1,plusw1
  8808                           
  8809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8810  01413C  A81F               	btfss	_flags^0,4,c
  8811  01413E  D00B               	goto	l9938
  8812                           
  8813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8814                           ;stkvar	_w @ sp[(-20)+16]
  8815  014140  50E1               	movf	fsr1l,w,c
  8816  014142  0FFC               	addlw	-4
  8817  014144  6ED9               	movwf	fsr2l,c
  8818  014146  50E2               	movf	fsr1h,w,c
  8819  014148  6EDA               	movwf	fsr2h,c
  8820  01414A  0EFF               	movlw	255
  8821  01414C  22DA               	addwfc	fsr2h,f,c
  8822  01414E  0EFE               	movlw	254
  8823  014150  26DE               	addwf	postinc2,f,c
  8824  014152  0EFF               	movlw	255
  8825  014154  22DD               	addwfc	postdec2,f,c
  8826  014156                     l9938:
  8827                           
  8828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8829                           ;stkvar	_d @ sp[(-20)+-10]
  8830  014156  0EE2               	movlw	226
  8831  014158  24E1               	addwf	fsr1l,w,c
  8832  01415A  6ED9               	movwf	fsr2l,c
  8833  01415C  0EFF               	movlw	255
  8834  01415E  20E2               	addwfc	fsr1h,w,c
  8835  014160  6EDA               	movwf	fsr2h,c
  8836                           
  8837                           ;stkvar	_n @ sp[(-20)+4]
  8838  014162  0E08               	movlw	8
  8839  014164  6E32               	movwf	btemp^0,c
  8840  014166  0EF0               	movlw	-16
  8841  014168                     us986999:
  8842  014168  006F FF7B FFE3     	movff	postinc2,plusw1
  8843  01416E  28E8               	incf	wreg,w,c
  8844  014170  2E32               	decfsz	btemp^0,f,c
  8845  014172  D7FA               	bra	us986999
  8846                           
  8847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8848  014174  0E4F               	movlw	79
  8849  014176  6E3C               	movwf	(btemp+10)^0,c
  8850  014178  0E00               	movlw	0
  8851  01417A  6E3D               	movwf	(btemp+11)^0,c
  8852                           
  8853                           ;stkvar	_i @ sp[(-20)+14]
  8854  01417C  0EFA               	movlw	-6
  8855  01417E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8856  014184  0EFB               	movlw	-5
  8857  014186  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8858                           
  8859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8860  01418C  0101               	movlb	1	; () banked
  8861  01418E  6BC7               	clrf	(_dbuf+79)& (0+255),b
  8862                           
  8863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8864  014190  D0EE               	goto	l9976
  8865  014192                     l9944:
  8866                           
  8867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8868                           ;stkvar	_i @ sp[(-20)+14]
  8869  014192  50E1               	movf	fsr1l,w,c
  8870  014194  0FFA               	addlw	-6
  8871  014196  6ED9               	movwf	fsr2l,c
  8872  014198  50E2               	movf	fsr1h,w,c
  8873  01419A  6EDA               	movwf	fsr2h,c
  8874  01419C  0EFF               	movlw	255
  8875  01419E  22DA               	addwfc	fsr2h,f,c
  8876  0141A0  06DE               	decf	postinc2,f,c
  8877  0141A2  0E00               	movlw	0
  8878  0141A4  5ADD               	subwfb	postdec2,f,c
  8879                           
  8880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8881                           ;stkvar	_n @ sp[(-20)+4]
  8882  0141A6  0EF0               	movlw	-16
  8883  0141A8  006F FF8C  F03C    	movff	plusw1,btemp+10
  8884  0141AE  0EF1               	movlw	-15
  8885  0141B0  006F FF8C  F03D    	movff	plusw1,btemp+11
  8886  0141B6  0E0F               	movlw	15
  8887  0141B8  163C               	andwf	(btemp+10)^0,f,c
  8888  0141BA  0E00               	movlw	0
  8889  0141BC  163D               	andwf	(btemp+11)^0,f,c
  8890                           
  8891                           ;stkvar	_c @ sp[(-20)+12]
  8892  0141BE  0EF8               	movlw	-8
  8893  0141C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8894  0141C6  0EF9               	movlw	-7
  8895  0141C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8896                           
  8897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8898                           ;stkvar	_c @ sp[(-20)+12]
  8899  0141CE  0EF9               	movlw	-7
  8900  0141D0  BEE3               	btfsc	plusw1,7,c
  8901  0141D2  D00F               	goto	l9952
  8902  0141D4  0EF9               	movlw	-7
  8903  0141D6  50E3               	movf	plusw1,w,c
  8904  0141D8  E108               	bnz	u9870
  8905  0141DA  0EF8               	movlw	-8
  8906  0141DC  006F FF8C  F032    	movff	plusw1,btemp
  8907  0141E2  0E0A               	movlw	10
  8908  0141E4  5E32               	subwf	btemp^0,f,c
  8909  0141E6  A0D8               	btfss	status,0,c
  8910  0141E8  D004               	goto	l9952
  8911  0141EA                     u9870:
  8912                           
  8913                           ;stkvar	_c @ sp[(-20)+12]
  8914  0141EA  0EF8               	movlw	-8
  8915  0141EC  50E3               	movf	plusw1,w,c
  8916  0141EE  0F57               	addlw	87
  8917  0141F0  D003               	goto	L8
  8918  0141F2                     l9952:
  8919                           
  8920                           ;stkvar	_c @ sp[(-20)+12]
  8921  0141F2  0EF8               	movlw	-8
  8922  0141F4  50E3               	movf	plusw1,w,c
  8923  0141F6  0F30               	addlw	48
  8924  0141F8                     L8:
  8925  0141F8  6E3C               	movwf	(btemp+10)^0,c
  8926  0141FA  0EF9               	movlw	-7
  8927  0141FC  006F FF8C  F03D    	movff	plusw1,btemp+11
  8928  014202  0E00               	movlw	0
  8929  014204  223D               	addwfc	(btemp+11)^0,f,c
  8930                           
  8931                           ;stkvar	_c @ sp[(-20)+12]
  8932  014206  0EF8               	movlw	-8
  8933  014208  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8934  01420E  0EF9               	movlw	-7
  8935  014210  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8936  014216  0EBF               	movlw	191
  8937  014218  6E3C               	movwf	(btemp+10)^0,c
  8938  01421A  0EFF               	movlw	255
  8939  01421C  6E3D               	movwf	(btemp+11)^0,c
  8940                           
  8941                           ;stkvar	_x @ sp[(-20)+-11]
  8942  01421E  0EE1               	movlw	-31
  8943  014220  50E3               	movf	plusw1,w,c
  8944  014222  6E3A               	movwf	(btemp+8)^0,c
  8945  014224  6A3B               	clrf	(btemp+9)^0,c
  8946  014226  503C               	movf	(btemp+10)^0,w,c
  8947  014228  263A               	addwf	(btemp+8)^0,f,c
  8948  01422A  503D               	movf	(btemp+11)^0,w,c
  8949  01422C  223B               	addwfc	(btemp+9)^0,f,c
  8950  01422E  503B               	movf	(btemp+9)^0,w,c
  8951  014230  E106               	bnz	u9880
  8952  014232  0E1A               	movlw	26
  8953  014234  5C3A               	subwf	(btemp+8)^0,w,c
  8954  014236  B0D8               	btfsc	status,0,c
  8955  014238  D002               	goto	u9880
  8956  01423A  0E01               	movlw	1
  8957  01423C  D001               	goto	u9890
  8958  01423E                     u9880:
  8959  01423E  0E00               	movlw	0
  8960  014240                     u9890:
  8961  014240  6E3C               	movwf	(btemp+10)^0,c
  8962  014242  6A3D               	clrf	(btemp+11)^0,c
  8963                           
  8964                           ;stkvar	_xtoa$4499 @ sp[(-20)+2]
  8965  014244  0EEE               	movlw	-18
  8966  014246  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8967  01424C  0EEF               	movlw	-17
  8968  01424E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8969                           
  8970                           ;stkvar	_xtoa$4499 @ sp[(-20)+2]
  8971  014254  0EEE               	movlw	-18
  8972  014256  006F FF8C  F032    	movff	plusw1,btemp
  8973  01425C  0EEF               	movlw	-17
  8974  01425E  50E3               	movf	plusw1,w,c
  8975  014260  1032               	iorwf	btemp^0,w,c
  8976  014262  B4D8               	btfsc	status,2,c
  8977  014264  D041               	goto	l9968
  8978  014266  0E9F               	movlw	159
  8979  014268  6E3C               	movwf	(btemp+10)^0,c
  8980  01426A  0EFF               	movlw	255
  8981  01426C  6E3D               	movwf	(btemp+11)^0,c
  8982                           
  8983                           ;stkvar	_c @ sp[(-20)+12]
  8984  01426E  0EF8               	movlw	-8
  8985  014270  006F FF8C  F03A    	movff	plusw1,btemp+8
  8986  014276  0EF9               	movlw	-7
  8987  014278  006F FF8C  F03B    	movff	plusw1,btemp+9
  8988  01427E  0E20               	movlw	32
  8989  014280  123A               	iorwf	(btemp+8)^0,f,c
  8990  014282  0E00               	movlw	0
  8991  014284  123B               	iorwf	(btemp+9)^0,f,c
  8992  014286  503C               	movf	(btemp+10)^0,w,c
  8993  014288  263A               	addwf	(btemp+8)^0,f,c
  8994  01428A  503D               	movf	(btemp+11)^0,w,c
  8995  01428C  223B               	addwfc	(btemp+9)^0,f,c
  8996  01428E  503B               	movf	(btemp+9)^0,w,c
  8997  014290  E106               	bnz	u9910
  8998  014292  0E1A               	movlw	26
  8999  014294  5C3A               	subwf	(btemp+8)^0,w,c
  9000  014296  B0D8               	btfsc	status,0,c
  9001  014298  D002               	goto	u9910
  9002  01429A  0E01               	movlw	1
  9003  01429C  D001               	goto	u9920
  9004  01429E                     u9910:
  9005  01429E  0E00               	movlw	0
  9006  0142A0                     u9920:
  9007  0142A0  6E3C               	movwf	(btemp+10)^0,c
  9008  0142A2  6A3D               	clrf	(btemp+11)^0,c
  9009                           
  9010                           ;stkvar	_xtoa$4500 @ sp[(-20)+0]
  9011  0142A4  0EEC               	movlw	-20
  9012  0142A6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9013  0142AC  0EED               	movlw	-19
  9014  0142AE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9015                           
  9016                           ;stkvar	_xtoa$4500 @ sp[(-20)+0]
  9017  0142B4  0EEC               	movlw	-20
  9018  0142B6  006F FF8C  F032    	movff	plusw1,btemp
  9019  0142BC  0EED               	movlw	-19
  9020  0142BE  50E3               	movf	plusw1,w,c
  9021  0142C0  1032               	iorwf	btemp^0,w,c
  9022  0142C2  B4D8               	btfsc	status,2,c
  9023  0142C4  D011               	goto	l9968
  9024                           
  9025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9026                           ;stkvar	_c @ sp[(-20)+12]
  9027  0142C6  0EF8               	movlw	-8
  9028  0142C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9029  0142CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9030  0142D4  EC63  F0BB         	call	_toupper	;wreg free
  9031                           
  9032                           ;stkvar	_c @ sp[(-20)+12]
  9033  0142D8  0EF8               	movlw	-8
  9034  0142DA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9035  0142E0  0EF9               	movlw	-7
  9036  0142E2  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9037  0142E8                     l9968:
  9038                           
  9039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9040                           ;stkvar	_c @ sp[(-20)+12]
  9041                           ;stkvar	_i @ sp[(-20)+14]
  9042  0142E8  0EFA               	movlw	-6
  9043  0142EA  006F FF8C  F03C    	movff	plusw1,btemp+10
  9044  0142F0  0EFB               	movlw	-5
  9045  0142F2  006F FF8C  F03D    	movff	plusw1,btemp+11
  9046  0142F8  0E78               	movlw	low _dbuf
  9047  0142FA  243C               	addwf	(btemp+10)^0,w,c
  9048  0142FC  6ED9               	movwf	fsr2l,c
  9049  0142FE  0E01               	movlw	high _dbuf
  9050  014300  203D               	addwfc	(btemp+11)^0,w,c
  9051  014302  6EDA               	movwf	fsr2h,c
  9052  014304  0EF8               	movlw	-8
  9053  014306  006F FF8F FFDF     	movff	plusw1,indf2
  9054                           
  9055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9056                           ;stkvar	_p @ sp[(-20)+18]
  9057  01430C  50E1               	movf	fsr1l,w,c
  9058  01430E  0FFE               	addlw	-2
  9059  014310  6ED9               	movwf	fsr2l,c
  9060  014312  50E2               	movf	fsr1h,w,c
  9061  014314  6EDA               	movwf	fsr2h,c
  9062  014316  0EFF               	movlw	255
  9063  014318  22DA               	addwfc	fsr2h,f,c
  9064  01431A  06DE               	decf	postinc2,f,c
  9065  01431C  0E00               	movlw	0
  9066  01431E  5ADD               	subwfb	postdec2,f,c
  9067                           
  9068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9069                           ;stkvar	_w @ sp[(-20)+16]
  9070  014320  50E1               	movf	fsr1l,w,c
  9071  014322  0FFC               	addlw	-4
  9072  014324  6ED9               	movwf	fsr2l,c
  9073  014326  50E2               	movf	fsr1h,w,c
  9074  014328  6EDA               	movwf	fsr2h,c
  9075  01432A  0EFF               	movlw	255
  9076  01432C  22DA               	addwfc	fsr2h,f,c
  9077  01432E  06DE               	decf	postinc2,f,c
  9078  014330  0E00               	movlw	0
  9079  014332  5ADD               	subwfb	postdec2,f,c
  9080                           
  9081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9082  014334  0E04               	movlw	4
  9083  014336  6E3D               	movwf	(btemp+11)^0,c
  9084                           
  9085                           ;stkvar	_n @ sp[(-20)+4]
  9086  014338  50E1               	movf	fsr1l,w,c
  9087  01433A  0FF0               	addlw	-16
  9088  01433C  6ED9               	movwf	fsr2l,c
  9089  01433E  50E2               	movf	fsr1h,w,c
  9090  014340  6EDA               	movwf	fsr2h,c
  9091  014342  0EFF               	movlw	255
  9092  014344  22DA               	addwfc	fsr2h,f,c
  9093  014346  283D               	incf	(btemp+11)^0,w,c
  9094  014348  52DE               	movf	postinc2,f,c
  9095  01434A  D00F               	goto	u9940
  9096  01434C                     u9945:
  9097  01434C  52DE               	movf	postinc2,f,c
  9098  01434E  52DE               	movf	postinc2,f,c
  9099  014350  52DE               	movf	postinc2,f,c
  9100  014352  52DE               	movf	postinc2,f,c
  9101  014354  52DE               	movf	postinc2,f,c
  9102  014356  52DE               	movf	postinc2,f,c
  9103  014358  90D8               	bcf	status,0,c
  9104  01435A  32DD               	rrcf	postdec2,f,c
  9105  01435C  32DD               	rrcf	postdec2,f,c
  9106  01435E  32DD               	rrcf	postdec2,f,c
  9107  014360  32DD               	rrcf	postdec2,f,c
  9108  014362  32DD               	rrcf	postdec2,f,c
  9109  014364  32DD               	rrcf	postdec2,f,c
  9110  014366  32DD               	rrcf	postdec2,f,c
  9111  014368  32DE               	rrcf	postinc2,f,c
  9112  01436A                     u9940:
  9113  01436A  2EE8               	decfsz	wreg,f,c
  9114  01436C  D7EF               	goto	u9945
  9115  01436E                     l9976:
  9116                           
  9117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9118                           ;stkvar	_i @ sp[(-20)+14]
  9119  01436E  0EFB               	movlw	-5
  9120  014370  BEE3               	btfsc	plusw1,7,c
  9121  014372  D03A               	goto	u9990
  9122  014374  0EFB               	movlw	-5
  9123  014376  50E3               	movf	plusw1,w,c
  9124  014378  E108               	bnz	u9950
  9125  01437A  0EFA               	movlw	-6
  9126  01437C  006F FF8C  F032    	movff	plusw1,btemp
  9127  014382  0E02               	movlw	2
  9128  014384  5E32               	subwf	btemp^0,f,c
  9129  014386  A0D8               	btfss	status,0,c
  9130  014388  D02F               	goto	u9990
  9131  01438A                     u9950:
  9132                           
  9133                           ;stkvar	_n @ sp[(-20)+4]
  9134  01438A  0EF0               	movlw	-16
  9135  01438C  50E3               	movf	plusw1,w,c
  9136  01438E  E115               	bnz	u9961
  9137  014390  0EF1               	movlw	-15
  9138  014392  50E3               	movf	plusw1,w,c
  9139  014394  E112               	bnz	u9961
  9140  014396  0EF2               	movlw	-14
  9141  014398  50E3               	movf	plusw1,w,c
  9142  01439A  E10F               	bnz	u9961
  9143  01439C  0EF3               	movlw	-13
  9144  01439E  50E3               	movf	plusw1,w,c
  9145  0143A0  E10C               	bnz	u9961
  9146  0143A2  0EF4               	movlw	-12
  9147  0143A4  50E3               	movf	plusw1,w,c
  9148  0143A6  E109               	bnz	u9961
  9149  0143A8  0EF5               	movlw	-11
  9150  0143AA  50E3               	movf	plusw1,w,c
  9151  0143AC  E106               	bnz	u9961
  9152  0143AE  0EF6               	movlw	-10
  9153  0143B0  50E3               	movf	plusw1,w,c
  9154  0143B2  E103               	bnz	u9961
  9155  0143B4  0EF7               	movlw	-9
  9156  0143B6  50E3               	movf	plusw1,w,c
  9157  0143B8  A4D8               	btfss	status,2,c
  9158  0143BA                     u9961:
  9159  0143BA  D6EB               	goto	l9944
  9160                           
  9161                           ;stkvar	_p @ sp[(-20)+18]
  9162  0143BC  0EFF               	movlw	-1
  9163  0143BE  BEE3               	btfsc	plusw1,7,c
  9164  0143C0  D007               	goto	u9970
  9165  0143C2  0EFF               	movlw	-1
  9166  0143C4  50E3               	movf	plusw1,w,c
  9167  0143C6  E103               	bnz	u9971
  9168  0143C8  0EFE               	movlw	-2
  9169  0143CA  04E3               	decf	plusw1,w,c
  9170  0143CC  B0D8               	btfsc	status,0,c
  9171  0143CE                     u9971:
  9172  0143CE  D6E1               	goto	l9944
  9173  0143D0                     u9970:
  9174                           
  9175                           ;stkvar	_w @ sp[(-20)+16]
  9176  0143D0  0EFD               	movlw	-3
  9177  0143D2  BEE3               	btfsc	plusw1,7,c
  9178  0143D4  D009               	goto	u9990
  9179  0143D6  0EFD               	movlw	-3
  9180  0143D8  50E3               	movf	plusw1,w,c
  9181  0143DA  E104               	bnz	u9980
  9182  0143DC  0EFC               	movlw	-4
  9183  0143DE  04E3               	decf	plusw1,w,c
  9184  0143E0  A0D8               	btfss	status,0,c
  9185  0143E2  D002               	goto	u9990
  9186  0143E4                     u9980:
  9187  0143E4  B21F               	btfsc	_flags^0,1,c
  9188  0143E6  D6D5               	goto	l9944
  9189  0143E8                     u9990:
  9190                           
  9191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9192  0143E8  A81F               	btfss	_flags^0,4,c
  9193  0143EA  D036               	goto	l9992
  9194                           
  9195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9196                           ;stkvar	_i @ sp[(-20)+14]
  9197  0143EC  50E1               	movf	fsr1l,w,c
  9198  0143EE  0FFA               	addlw	-6
  9199  0143F0  6ED9               	movwf	fsr2l,c
  9200  0143F2  50E2               	movf	fsr1h,w,c
  9201  0143F4  6EDA               	movwf	fsr2h,c
  9202  0143F6  0EFF               	movlw	255
  9203  0143F8  22DA               	addwfc	fsr2h,f,c
  9204  0143FA  06DE               	decf	postinc2,f,c
  9205  0143FC  0E00               	movlw	0
  9206  0143FE  5ADD               	subwfb	postdec2,f,c
  9207                           
  9208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9209                           ;stkvar	_x @ sp[(-20)+-11]
  9210                           ;stkvar	_i @ sp[(-20)+14]
  9211  014400  0EFA               	movlw	-6
  9212  014402  006F FF8C  F03C    	movff	plusw1,btemp+10
  9213  014408  0EFB               	movlw	-5
  9214  01440A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9215  014410  0E78               	movlw	low _dbuf
  9216  014412  243C               	addwf	(btemp+10)^0,w,c
  9217  014414  6ED9               	movwf	fsr2l,c
  9218  014416  0E01               	movlw	high _dbuf
  9219  014418  203D               	addwfc	(btemp+11)^0,w,c
  9220  01441A  6EDA               	movwf	fsr2h,c
  9221  01441C  0EE1               	movlw	-31
  9222  01441E  006F FF8F FFDF     	movff	plusw1,indf2
  9223                           
  9224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9225                           ;stkvar	_i @ sp[(-20)+14]
  9226  014424  50E1               	movf	fsr1l,w,c
  9227  014426  0FFA               	addlw	-6
  9228  014428  6ED9               	movwf	fsr2l,c
  9229  01442A  50E2               	movf	fsr1h,w,c
  9230  01442C  6EDA               	movwf	fsr2h,c
  9231  01442E  0EFF               	movlw	255
  9232  014430  22DA               	addwfc	fsr2h,f,c
  9233  014432  06DE               	decf	postinc2,f,c
  9234  014434  0E00               	movlw	0
  9235  014436  5ADD               	subwfb	postdec2,f,c
  9236                           
  9237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9238                           ;stkvar	_i @ sp[(-20)+14]
  9239  014438  0EFA               	movlw	-6
  9240  01443A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9241  014440  0EFB               	movlw	-5
  9242  014442  006F FF8C  F03D    	movff	plusw1,btemp+11
  9243  014448  0E78               	movlw	low _dbuf
  9244  01444A  243C               	addwf	(btemp+10)^0,w,c
  9245  01444C  6ED9               	movwf	fsr2l,c
  9246  01444E  0E01               	movlw	high _dbuf
  9247  014450  203D               	addwfc	(btemp+11)^0,w,c
  9248  014452  6EDA               	movwf	fsr2h,c
  9249  014454  0E30               	movlw	48
  9250  014456  6EDF               	movwf	indf2,c
  9251  014458                     l9992:
  9252                           
  9253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9254                           ;stkvar	_w @ sp[(-20)+16]
  9255  014458  0EFC               	movlw	-4
  9256  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
  9257  014460  006F FF8F FFE6     	movff	plusw1,postinc1
  9258                           
  9259                           ;stkvar	_i @ sp[(-22)+14]
  9260  014466  0E78               	movlw	low _dbuf
  9261  014468  6E3C               	movwf	(btemp+10)^0,c
  9262  01446A  0E01               	movlw	high _dbuf
  9263  01446C  6E3D               	movwf	(btemp+11)^0,c
  9264  01446E  0EF8               	movlw	-8
  9265  014470  50E3               	movf	plusw1,w,c
  9266  014472  263C               	addwf	(btemp+10)^0,f,c
  9267  014474  0EF9               	movlw	-7
  9268  014476  50E3               	movf	plusw1,w,c
  9269  014478  223D               	addwfc	(btemp+11)^0,f,c
  9270  01447A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9271  014480  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9272                           
  9273                           ;stkvar	_fp @ sp[(-24)+-2]
  9274  014486  0EE6               	movlw	-26
  9275  014488  006F FF8F FFE6     	movff	plusw1,postinc1
  9276  01448E  006F FF8F FFE6     	movff	plusw1,postinc1
  9277  014494  ECAF  F0B4         	call	_pad	;wreg free
  9278                           
  9279                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9280  014498  0EE1               	movlw	225
  9281  01449A  26E1               	addwf	fsr1l,f,c
  9282  01449C  0EFF               	movlw	255
  9283  01449E  22E2               	addwfc	fsr1h,f,c
  9284  0144A0  0012               	return		;funcret
  9285  0144A2                     __end_of_xtoa:
  9286                           	opt callstack 0
  9287                           
  9288 ;; *************** function _toupper *****************
  9289 ;; Defined at:
  9290 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  c               2  [STACK] int 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  2  [STACK] int 
  9297 ;; Registers used:
  9298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/1
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;Total ram usage:        0 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    7
  9311 ;; This function calls:
  9312 ;;		_islower
  9313 ;; This function is called by:
  9314 ;;		_xtoa
  9315 ;; This function uses a reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text40
  9319  0176C6                     __ptext40:
  9320                           	opt callstack 0
  9321  0176C6                     _toupper:
  9322                           	opt callstack 0
  9323                           
  9324                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9325  0176C6  52E6               	movf	postinc1,f,c
  9326  0176C8  52E6               	movf	postinc1,f,c
  9327                           
  9328                           ;stkvar	_c @ sp[(-2)+-2]
  9329                           
  9330                           ;incstack = 0
  9331  0176CA  0EFC               	movlw	-4
  9332  0176CC  50E3               	movf	plusw1,w,c
  9333  0176CE  0F9F               	addlw	159
  9334  0176D0  6E3C               	movwf	(btemp+10)^0,c
  9335  0176D2  0EFD               	movlw	-3
  9336  0176D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  9337  0176DA  0EFF               	movlw	255
  9338  0176DC  223D               	addwfc	(btemp+11)^0,f,c
  9339  0176DE  503D               	movf	(btemp+11)^0,w,c
  9340  0176E0  E106               	bnz	u5310
  9341  0176E2  0E1A               	movlw	26
  9342  0176E4  5C3C               	subwf	(btemp+10)^0,w,c
  9343  0176E6  B0D8               	btfsc	status,0,c
  9344  0176E8  D002               	goto	u5310
  9345  0176EA  0E01               	movlw	1
  9346  0176EC  D001               	goto	u5320
  9347  0176EE                     u5310:
  9348  0176EE  0E00               	movlw	0
  9349  0176F0                     u5320:
  9350  0176F0  6E3C               	movwf	(btemp+10)^0,c
  9351  0176F2  6A3D               	clrf	(btemp+11)^0,c
  9352                           
  9353                           ;stkvar	_toupper$5160 @ sp[(-2)+0]
  9354  0176F4  0EFE               	movlw	-2
  9355  0176F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9356  0176FC  0EFF               	movlw	-1
  9357  0176FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9358                           
  9359                           ;stkvar	_toupper$5160 @ sp[(-2)+0]
  9360  017704  0EFE               	movlw	-2
  9361  017706  006F FF8C  F032    	movff	plusw1,btemp
  9362  01770C  0EFF               	movlw	-1
  9363  01770E  50E3               	movf	plusw1,w,c
  9364  017710  1032               	iorwf	btemp^0,w,c
  9365  017712  B4D8               	btfsc	status,2,c
  9366  017714  D00D               	goto	l6608
  9367                           
  9368                           ;stkvar	_c @ sp[(-2)+-2]
  9369  017716  0EFC               	movlw	-4
  9370  017718  006F FF8C  F032    	movff	plusw1,btemp
  9371  01771E  0EFD               	movlw	-3
  9372  017720  006F FF8C  F033    	movff	plusw1,btemp+1
  9373  017726  0E5F               	movlw	95
  9374  017728  1632               	andwf	btemp^0,f,c
  9375  01772A  0E00               	movlw	0
  9376  01772C  1633               	andwf	(btemp+1)^0,f,c
  9377  01772E  D008               	goto	l2927
  9378  017730                     l6608:
  9379                           
  9380                           ;stkvar	_c @ sp[(-2)+-2]
  9381  017730  0EFC               	movlw	-4
  9382  017732  006F FF8C  F032    	movff	plusw1,btemp
  9383  017738  0EFD               	movlw	-3
  9384  01773A  006F FF8C  F033    	movff	plusw1,btemp+1
  9385  017740                     l2927:
  9386                           
  9387                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9388  017740  52E5               	movf	postdec1,f,c
  9389  017742  52E5               	movf	postdec1,f,c
  9390  017744  52E5               	movf	postdec1,f,c
  9391  017746  52E5               	movf	postdec1,f,c
  9392  017748  0012               	return		;funcret
  9393  01774A                     __end_of_toupper:
  9394                           	opt callstack 0
  9395                           
  9396 ;; *************** function _islower *****************
  9397 ;; Defined at:
  9398 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  c               2  [STACK] int 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  2  [STACK] int 
  9405 ;; Registers used:
  9406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    6
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_toupper
  9423 ;; This function uses a reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text41
  9427  018230                     __ptext41:
  9428                           	opt callstack 0
  9429  018230                     _islower:
  9430                           	opt callstack 16
  9431                           
  9432                           ;stkvar	_c @ sp[(0)+-2]
  9433                           
  9434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9435                           ;incstack = 0
  9436  018230  0EFE               	movlw	-2
  9437  018232  50E3               	movf	plusw1,w,c
  9438  018234  0F9F               	addlw	159
  9439  018236  6E3C               	movwf	(btemp+10)^0,c
  9440  018238  0EFF               	movlw	-1
  9441  01823A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9442  018240  0EFF               	movlw	255
  9443  018242  223D               	addwfc	(btemp+11)^0,f,c
  9444  018244  503D               	movf	(btemp+11)^0,w,c
  9445  018246  E106               	bnz	u5000
  9446  018248  0E1A               	movlw	26
  9447  01824A  5C3C               	subwf	(btemp+10)^0,w,c
  9448  01824C  B0D8               	btfsc	status,0,c
  9449  01824E  D002               	goto	u5000
  9450  018250  0E01               	movlw	1
  9451  018252  D001               	goto	u5010
  9452  018254                     u5000:
  9453  018254  0E00               	movlw	0
  9454  018256                     u5010:
  9455  018256  6E32               	movwf	btemp^0,c
  9456  018258  6A33               	clrf	(btemp+1)^0,c
  9457                           
  9458                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9459  01825A  52E5               	movf	postdec1,f,c
  9460  01825C  52E5               	movf	postdec1,f,c
  9461  01825E  0012               	return		;funcret
  9462  018260                     __end_of_islower:
  9463                           	opt callstack 0
  9464                           
  9465 ;; *************** function _isalpha *****************
  9466 ;; Defined at:
  9467 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  c               2  [STACK] int 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  2  [STACK] int 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    6
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_xtoa
  9492 ;; This function uses a reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text42
  9496  017FAE                     __ptext42:
  9497                           	opt callstack 0
  9498  017FAE                     _isalpha:
  9499                           	opt callstack 17
  9500                           
  9501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9502                           ;incstack = 0
  9503  017FAE  0E9F               	movlw	159
  9504  017FB0  6E3C               	movwf	(btemp+10)^0,c
  9505  017FB2  0EFF               	movlw	255
  9506  017FB4  6E3D               	movwf	(btemp+11)^0,c
  9507                           
  9508                           ;stkvar	_c @ sp[(0)+-2]
  9509  017FB6  0EFE               	movlw	-2
  9510  017FB8  006F FF8C  F03A    	movff	plusw1,btemp+8
  9511  017FBE  0EFF               	movlw	-1
  9512  017FC0  006F FF8C  F03B    	movff	plusw1,btemp+9
  9513  017FC6  0E20               	movlw	32
  9514  017FC8  123A               	iorwf	(btemp+8)^0,f,c
  9515  017FCA  0E00               	movlw	0
  9516  017FCC  123B               	iorwf	(btemp+9)^0,f,c
  9517  017FCE  503C               	movf	(btemp+10)^0,w,c
  9518  017FD0  263A               	addwf	(btemp+8)^0,f,c
  9519  017FD2  503D               	movf	(btemp+11)^0,w,c
  9520  017FD4  223B               	addwfc	(btemp+9)^0,f,c
  9521  017FD6  503B               	movf	(btemp+9)^0,w,c
  9522  017FD8  E106               	bnz	u5290
  9523  017FDA  0E1A               	movlw	26
  9524  017FDC  5C3A               	subwf	(btemp+8)^0,w,c
  9525  017FDE  B0D8               	btfsc	status,0,c
  9526  017FE0  D002               	goto	u5290
  9527  017FE2  0E01               	movlw	1
  9528  017FE4  D001               	goto	u5300
  9529  017FE6                     u5290:
  9530  017FE6  0E00               	movlw	0
  9531  017FE8                     u5300:
  9532  017FE8  6E32               	movwf	btemp^0,c
  9533  017FEA  6A33               	clrf	(btemp+1)^0,c
  9534                           
  9535                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9536  017FEC  52E5               	movf	postdec1,f,c
  9537  017FEE  52E5               	movf	postdec1,f,c
  9538  017FF0  0012               	return		;funcret
  9539  017FF2                     __end_of_isalpha:
  9540                           	opt callstack 0
  9541                           
  9542 ;; *************** function _strncmp *****************
  9543 ;; Defined at:
  9544 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  _l              2  [STACK] PTR const unsigned char 
  9547 ;;		 -> ct(3), 
  9548 ;;  _r              2  [STACK] PTR const unsigned char 
  9549 ;;		 -> STR_47(3), 
  9550 ;;  n               2  [STACK] unsigned int 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  r               2  [STACK] PTR const unsigned char 
  9553 ;;		 -> STR_47(3), 
  9554 ;;  l               2  [STACK] PTR const unsigned char 
  9555 ;;		 -> ct(3), 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  2  [STACK] int 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/5
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    6
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_vfpfcnvrt
  9576 ;; This function uses a reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text43
  9580  015B6C                     __ptext43:
  9581                           	opt callstack 0
  9582  015B6C                     _strncmp:
  9583                           	opt callstack 0
  9584                           
  9585                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9586  015B6C  52E6               	movf	postinc1,f,c
  9587  015B6E  52E6               	movf	postinc1,f,c
  9588  015B70  52E6               	movf	postinc1,f,c
  9589  015B72  52E6               	movf	postinc1,f,c
  9590                           
  9591                           ;stkvar	__l @ sp[(-4)+-2]
  9592                           
  9593                           ;incstack = 0
  9594  015B74  0EFA               	movlw	-6
  9595  015B76  006F FF8C  F03C    	movff	plusw1,btemp+10
  9596  015B7C  0EFB               	movlw	-5
  9597  015B7E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9598                           
  9599                           ;stkvar	_l @ sp[(-4)+2]
  9600  015B84  0EFF               	movlw	-1
  9601  015B86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9602  015B8C  0EFE               	movlw	-2
  9603  015B8E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9604                           
  9605                           ;stkvar	__r @ sp[(-4)+-4]
  9606  015B94  0EF8               	movlw	-8
  9607  015B96  006F FF8C  F03C    	movff	plusw1,btemp+10
  9608  015B9C  0EF9               	movlw	-7
  9609  015B9E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9610                           
  9611                           ;stkvar	_r @ sp[(-4)+0]
  9612  015BA4  0EFD               	movlw	-3
  9613  015BA6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9614  015BAC  0EFC               	movlw	-4
  9615  015BAE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9616                           
  9617                           ;stkvar	_n @ sp[(-4)+-6]
  9618  015BB4  0EF6               	movlw	-10
  9619  015BB6  006F FF8C  F032    	movff	plusw1,btemp
  9620  015BBC  0E01               	movlw	1
  9621  015BBE  5E32               	subwf	btemp^0,f,c
  9622  015BC0  0EF6               	movlw	-10
  9623  015BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9624  015BC8  0EF7               	movlw	-9
  9625  015BCA  006F FF8C  F032    	movff	plusw1,btemp
  9626  015BD0  0E00               	movlw	0
  9627  015BD2  5A32               	subwfb	btemp^0,f,c
  9628  015BD4  0EF7               	movlw	-9
  9629  015BD6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9630  015BDC  0EF6               	movlw	-10
  9631  015BDE  28E3               	incf	plusw1,w,c
  9632  015BE0  E13F               	bnz	l7766
  9633  015BE2  0EF7               	movlw	-9
  9634  015BE4  28E3               	incf	plusw1,w,c
  9635  015BE6  A4D8               	btfss	status,2,c
  9636  015BE8  D03B               	goto	l7766
  9637  015BEA  0E00               	movlw	0
  9638  015BEC  6E32               	movwf	btemp^0,c
  9639  015BEE  0E00               	movlw	0
  9640  015BF0  6E33               	movwf	(btemp+1)^0,c
  9641  015BF2  D09B               	goto	l2899
  9642  015BF4                     l7764:
  9643                           
  9644                           ;stkvar	_l @ sp[(-4)+2]
  9645  015BF4  0EFE               	movlw	-2
  9646  015BF6  50E3               	movf	plusw1,w,c
  9647  015BF8  0F01               	addlw	1
  9648  015BFA  6E32               	movwf	btemp^0,c
  9649  015BFC  0EFE               	movlw	-2
  9650  015BFE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9651  015C04  6A32               	clrf	btemp^0,c
  9652  015C06  0EFF               	movlw	-1
  9653  015C08  50E3               	movf	plusw1,w,c
  9654  015C0A  2032               	addwfc	btemp^0,w,c
  9655  015C0C  6E32               	movwf	btemp^0,c
  9656  015C0E  0EFF               	movlw	-1
  9657  015C10  0060  F0CB  FFE3   	movff	btemp,plusw1
  9658                           
  9659                           ;stkvar	_r @ sp[(-4)+0]
  9660  015C16  0EFC               	movlw	-4
  9661  015C18  50E3               	movf	plusw1,w,c
  9662  015C1A  0F01               	addlw	1
  9663  015C1C  6E32               	movwf	btemp^0,c
  9664  015C1E  0EFC               	movlw	-4
  9665  015C20  0060  F0CB  FFE3   	movff	btemp,plusw1
  9666  015C26  6A32               	clrf	btemp^0,c
  9667  015C28  0EFD               	movlw	-3
  9668  015C2A  50E3               	movf	plusw1,w,c
  9669  015C2C  2032               	addwfc	btemp^0,w,c
  9670  015C2E  6E32               	movwf	btemp^0,c
  9671  015C30  0EFD               	movlw	-3
  9672  015C32  0060  F0CB  FFE3   	movff	btemp,plusw1
  9673                           
  9674                           ;stkvar	_n @ sp[(-4)+-6]
  9675  015C38  0EF6               	movlw	-10
  9676  015C3A  006F FF8C  F032    	movff	plusw1,btemp
  9677  015C40  0E01               	movlw	1
  9678  015C42  5E32               	subwf	btemp^0,f,c
  9679  015C44  0EF6               	movlw	-10
  9680  015C46  0060  F0CB  FFE3   	movff	btemp,plusw1
  9681  015C4C  0EF7               	movlw	-9
  9682  015C4E  006F FF8C  F032    	movff	plusw1,btemp
  9683  015C54  0E00               	movlw	0
  9684  015C56  5A32               	subwfb	btemp^0,f,c
  9685  015C58  0EF7               	movlw	-9
  9686  015C5A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9687  015C60                     l7766:
  9688                           
  9689                           ;stkvar	_l @ sp[(-4)+2]
  9690  015C60  0EFE               	movlw	-2
  9691  015C62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9692  015C68  0EFF               	movlw	-1
  9693  015C6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9694  015C70  50DF               	movf	indf2,w,c
  9695  015C72  B4D8               	btfsc	status,2,c
  9696  015C74  D03B               	goto	u7490
  9697                           
  9698                           ;stkvar	_r @ sp[(-4)+0]
  9699  015C76  50E1               	movf	fsr1l,w,c
  9700  015C78  0FFC               	addlw	-4
  9701  015C7A  6ED9               	movwf	fsr2l,c
  9702  015C7C  50E2               	movf	fsr1h,w,c
  9703  015C7E  6EDA               	movwf	fsr2h,c
  9704  015C80  0EFF               	movlw	255
  9705  015C82  22DA               	addwfc	fsr2h,f,c
  9706  015C84  006F FF7B FFF6     	movff	postinc2,tblptrl
  9707  015C8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9708  015C90                     	if	0	;tblptru may be non-zero
  9709  015C90                     	endif
  9710  015C90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9711  015C90  0E00               	movlw	low (__mediumconst shr (0+16))
  9712  015C92  6EF8               	movwf	tblptru,c
  9713  015C94                     	endif
  9714  015C94  0008               	tblrd		*
  9715  015C96  50F5               	movf	tablat,w,c
  9716  015C98  0900               	iorlw	0
  9717  015C9A  B4D8               	btfsc	status,2,c
  9718  015C9C  D027               	goto	u7490
  9719                           
  9720                           ;stkvar	_n @ sp[(-4)+-6]
  9721  015C9E  0EF6               	movlw	-10
  9722  015CA0  006F FF8C  F032    	movff	plusw1,btemp
  9723  015CA6  0EF7               	movlw	-9
  9724  015CA8  50E3               	movf	plusw1,w,c
  9725  015CAA  1032               	iorwf	btemp^0,w,c
  9726  015CAC  B4D8               	btfsc	status,2,c
  9727  015CAE  D01E               	goto	u7490
  9728                           
  9729                           ;stkvar	_l @ sp[(-4)+2]
  9730  015CB0  0EFE               	movlw	-2
  9731  015CB2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9732  015CB8  0EFF               	movlw	-1
  9733  015CBA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9734  015CC0  50DF               	movf	indf2,w,c
  9735  015CC2  6E3D               	movwf	(btemp+11)^0,c
  9736                           
  9737                           ;stkvar	_r @ sp[(-4)+0]
  9738  015CC4  50E1               	movf	fsr1l,w,c
  9739  015CC6  0FFC               	addlw	-4
  9740  015CC8  6ED9               	movwf	fsr2l,c
  9741  015CCA  50E2               	movf	fsr1h,w,c
  9742  015CCC  6EDA               	movwf	fsr2h,c
  9743  015CCE  0EFF               	movlw	255
  9744  015CD0  22DA               	addwfc	fsr2h,f,c
  9745  015CD2  006F FF7B FFF6     	movff	postinc2,tblptrl
  9746  015CD8  006F FF77 FFF7     	movff	postdec2,tblptrh
  9747  015CDE                     	if	0	;tblptru may be non-zero
  9748  015CDE                     	endif
  9749  015CDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9750  015CDE  0E00               	movlw	low (__mediumconst shr (0+16))
  9751  015CE0  6EF8               	movwf	tblptru,c
  9752  015CE2                     	endif
  9753  015CE2  0008               	tblrd		*
  9754  015CE4  50F5               	movf	tablat,w,c
  9755  015CE6  183D               	xorwf	(btemp+11)^0,w,c
  9756  015CE8  B4D8               	btfsc	status,2,c
  9757  015CEA  D784               	goto	l7764
  9758  015CEC                     u7490:
  9759                           
  9760                           ;stkvar	_l @ sp[(-4)+2]
  9761  015CEC  0EFE               	movlw	-2
  9762  015CEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9763  015CF4  0EFF               	movlw	-1
  9764  015CF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9765  015CFC  50DF               	movf	indf2,w,c
  9766  015CFE  6E32               	movwf	btemp^0,c
  9767  015D00  6A33               	clrf	(btemp+1)^0,c
  9768                           
  9769                           ;stkvar	_r @ sp[(-4)+0]
  9770  015D02  50E1               	movf	fsr1l,w,c
  9771  015D04  0FFC               	addlw	-4
  9772  015D06  6ED9               	movwf	fsr2l,c
  9773  015D08  50E2               	movf	fsr1h,w,c
  9774  015D0A  6EDA               	movwf	fsr2h,c
  9775  015D0C  0EFF               	movlw	255
  9776  015D0E  22DA               	addwfc	fsr2h,f,c
  9777  015D10  006F FF7B FFF6     	movff	postinc2,tblptrl
  9778  015D16  006F FF77 FFF7     	movff	postdec2,tblptrh
  9779  015D1C                     	if	0	;tblptru may be non-zero
  9780  015D1C                     	endif
  9781  015D1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9782  015D1C  0E00               	movlw	low (__mediumconst shr (0+16))
  9783  015D1E  6EF8               	movwf	tblptru,c
  9784  015D20                     	endif
  9785  015D20  0008               	tblrd		*
  9786  015D22  50F5               	movf	tablat,w,c
  9787  015D24  5E32               	subwf	btemp^0,f,c
  9788  015D26  0E00               	movlw	0
  9789  015D28  5A33               	subwfb	(btemp+1)^0,f,c
  9790  015D2A                     l2899:
  9791                           
  9792                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9793  015D2A  0EF6               	movlw	246
  9794  015D2C  26E1               	addwf	fsr1l,f,c
  9795  015D2E  0EFF               	movlw	255
  9796  015D30  22E2               	addwfc	fsr1h,f,c
  9797  015D32  0012               	return		;funcret
  9798  015D34                     __end_of_strncmp:
  9799                           	opt callstack 0
  9800                           
  9801 ;; *************** function _stoa *****************
  9802 ;; Defined at:
  9803 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9806 ;;		 -> f(6), NULL(0), 
  9807 ;;  s               2  [STACK] PTR unsigned char 
  9808 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  9809 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  9810 ;;		 -> STR_3(6), V(187), 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  nuls            7  [STACK] unsigned char [7]
  9813 ;;  l               2  [STACK] int 
  9814 ;;  p               2  [STACK] int 
  9815 ;;  cp              2  [STACK] PTR unsigned char 
  9816 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_19(9), 
  9817 ;;		 -> STR_18(12), D.lcd(216), D(218), T(144), 
  9818 ;;		 -> STR_7(6), STR_3(6), V(187), 
  9819 ;;  w               2  [STACK] int 
  9820 ;;  i               2  [STACK] int 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  2  [STACK] int 
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/5
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9834 ;;Total ram usage:        0 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; Hardware stack levels required when called:    9
  9837 ;; This function calls:
  9838 ;;		_fputc
  9839 ;;		_strlen
  9840 ;; This function is called by:
  9841 ;;		_vfpfcnvrt
  9842 ;; This function uses a reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text44
  9846  014AFA                     __ptext44:
  9847                           	opt callstack 0
  9848  014AFA                     _stoa:
  9849                           	opt callstack 0
  9850                           
  9851                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9852  014AFA  0E11               	movlw	17
  9853  014AFC  26E1               	addwf	fsr1l,f,c
  9854  014AFE  0E00               	movlw	0
  9855  014B00  22E2               	addwfc	fsr1h,f,c
  9856                           
  9857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9858                           
  9859                           ;incstack = 0
  9860  014B02  EE20  F0EF         	lfsr	2,stoa@F1166
  9861                           
  9862                           ;stkvar	_nuls @ sp[(-17)+0]
  9863  014B06  0E07               	movlw	7
  9864  014B08  6E32               	movwf	btemp^0,c
  9865  014B0A  0EEF               	movlw	-17
  9866  014B0C                     us973999:
  9867  014B0C  006F FF7B FFE3     	movff	postinc2,plusw1
  9868  014B12  28E8               	incf	wreg,w,c
  9869  014B14  2E32               	decfsz	btemp^0,f,c
  9870  014B16  D7FA               	bra	us973999
  9871                           
  9872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9873                           ;stkvar	_s @ sp[(-17)+-4]
  9874  014B18  0EEB               	movlw	-21
  9875  014B1A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9876  014B20  0EEC               	movlw	-20
  9877  014B22  006F FF8C  F03D    	movff	plusw1,btemp+11
  9878                           
  9879                           ;stkvar	_cp @ sp[(-17)+11]
  9880  014B28  0EFB               	movlw	-5
  9881  014B2A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9882  014B30  0EFA               	movlw	-6
  9883  014B32  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9884                           
  9885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9886                           ;stkvar	_cp @ sp[(-17)+11]
  9887  014B38  0EFA               	movlw	-6
  9888  014B3A  006F FF8C  F032    	movff	plusw1,btemp
  9889  014B40  0EFB               	movlw	-5
  9890  014B42  50E3               	movf	plusw1,w,c
  9891  014B44  1032               	iorwf	btemp^0,w,c
  9892  014B46  A4D8               	btfss	status,2,c
  9893  014B48  D00E               	goto	l9880
  9894                           
  9895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9896                           ;stkvar	_nuls @ sp[(-17)+0]
  9897  014B4A  0EEF               	movlw	239
  9898  014B4C  24E1               	addwf	fsr1l,w,c
  9899  014B4E  6E3C               	movwf	(btemp+10)^0,c
  9900  014B50  0EFF               	movlw	255
  9901  014B52  20E2               	addwfc	fsr1h,w,c
  9902  014B54  6E3D               	movwf	(btemp+11)^0,c
  9903                           
  9904                           ;stkvar	_cp @ sp[(-17)+11]
  9905  014B56  0EFB               	movlw	-5
  9906  014B58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9907  014B5E  0EFA               	movlw	-6
  9908  014B60  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9909  014B66                     l9880:
  9910                           
  9911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9912                           ;stkvar	_cp @ sp[(-17)+11]
  9913  014B66  0EFA               	movlw	-6
  9914  014B68  006F FF8F FFE6     	movff	plusw1,postinc1
  9915  014B6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9916  014B74  EC5A  F0B9         	call	_strlen	;wreg free
  9917                           
  9918                           ;stkvar	_l @ sp[(-17)+7]
  9919  014B78  0EF6               	movlw	-10
  9920  014B7A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9921  014B80  0EF7               	movlw	-9
  9922  014B82  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9923                           
  9924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9925                           ;stkvar	_p @ sp[(-17)+9]
  9926  014B88  0EF8               	movlw	-8
  9927  014B8A  0060  F077  FFE3   	movff	_prec,plusw1
  9928  014B90  0EF9               	movlw	-7
  9929  014B92  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9930                           
  9931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9932                           ;stkvar	_p @ sp[(-17)+9]
  9933  014B98  0EF9               	movlw	-7
  9934  014B9A  BEE3               	btfsc	plusw1,7,c
  9935  014B9C  D023               	goto	l1973
  9936                           
  9937                           ;stkvar	_l @ sp[(-17)+7]
  9938                           ;stkvar	_p @ sp[(-17)+9]
  9939  014B9E  50E1               	movf	fsr1l,w,c
  9940  014BA0  0FF8               	addlw	-8
  9941  014BA2  6ED9               	movwf	fsr2l,c
  9942  014BA4  50E2               	movf	fsr1h,w,c
  9943  014BA6  6EDA               	movwf	fsr2h,c
  9944  014BA8  0EFF               	movlw	255
  9945  014BAA  22DA               	addwfc	fsr2h,f,c
  9946  014BAC  0EF6               	movlw	-10
  9947  014BAE  50E3               	movf	plusw1,w,c
  9948  014BB0  5CDE               	subwf	postinc2,w,c
  9949  014BB2  50DE               	movf	postinc2,w,c
  9950  014BB4  0A80               	xorlw	128
  9951  014BB6  6E32               	movwf	btemp^0,c
  9952  014BB8  0EF7               	movlw	-9
  9953  014BBA  50E3               	movf	plusw1,w,c
  9954  014BBC  0A80               	xorlw	128
  9955  014BBE  5832               	subwfb	btemp^0,w,c
  9956  014BC0  B0D8               	btfsc	status,0,c
  9957  014BC2  D010               	goto	l1973
  9958                           
  9959                           ;stkvar	_p @ sp[(-17)+9]
  9960                           ;stkvar	_l @ sp[(-17)+7]
  9961  014BC4  0EF8               	movlw	-8
  9962  014BC6  006F FF8C  F032    	movff	plusw1,btemp
  9963  014BCC  0EF6               	movlw	-10
  9964  014BCE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9965  014BD4  0EF9               	movlw	-7
  9966  014BD6  006F FF8C  F032    	movff	plusw1,btemp
  9967  014BDC  0EF7               	movlw	-9
  9968  014BDE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9969  014BE4                     l1973:
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9972                           ;stkvar	_l @ sp[(-17)+7]
  9973                           ;stkvar	_p @ sp[(-17)+9]
  9974  014BE4  0EF6               	movlw	-10
  9975  014BE6  006F FF8C  F032    	movff	plusw1,btemp
  9976  014BEC  0EF8               	movlw	-8
  9977  014BEE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9978  014BF4  0EF7               	movlw	-9
  9979  014BF6  006F FF8C  F032    	movff	plusw1,btemp
  9980  014BFC  0EF9               	movlw	-7
  9981  014BFE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9982                           
  9983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9984                           ;stkvar	_w @ sp[(-17)+13]
  9985  014C04  0EFC               	movlw	-4
  9986  014C06  0060  F06F  FFE3   	movff	_width,plusw1
  9987  014C0C  0EFD               	movlw	-3
  9988  014C0E  0060  F073  FFE3   	movff	_width+1,plusw1
  9989                           
  9990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9991  014C14  A01F               	btfss	_flags^0,0,c
  9992  014C16  D01F               	goto	l9900
  9993  014C18  D031               	goto	u9780
  9994  014C1A                     l9896:
  9995                           
  9996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9997                           ;stkvar	_fp @ sp[(-17)+-2]
  9998  014C1A  0EED               	movlw	-19
  9999  014C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 10000  014C22  006F FF8F FFE6     	movff	plusw1,postinc1
 10001  014C28  0E20               	movlw	32
 10002  014C2A  6EE6               	movwf	postinc1,c
 10003  014C2C  0E00               	movlw	0
 10004  014C2E  6EE6               	movwf	postinc1,c
 10005  014C30  EC91  F0B3         	call	_fputc	;wreg free
 10006                           
 10007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10008                           ;stkvar	_l @ sp[(-17)+7]
 10009  014C34  0EF6               	movlw	-10
 10010  014C36  50E3               	movf	plusw1,w,c
 10011  014C38  0F01               	addlw	1
 10012  014C3A  6E32               	movwf	btemp^0,c
 10013  014C3C  0EF6               	movlw	-10
 10014  014C3E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10015  014C44  6A32               	clrf	btemp^0,c
 10016  014C46  0EF7               	movlw	-9
 10017  014C48  50E3               	movf	plusw1,w,c
 10018  014C4A  2032               	addwfc	btemp^0,w,c
 10019  014C4C  6E32               	movwf	btemp^0,c
 10020  014C4E  0EF7               	movlw	-9
 10021  014C50  0060  F0CB  FFE3   	movff	btemp,plusw1
 10022  014C56                     l9900:
 10023                           
 10024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10025                           ;stkvar	_w @ sp[(-17)+13]
 10026                           ;stkvar	_l @ sp[(-17)+7]
 10027  014C56  50E1               	movf	fsr1l,w,c
 10028  014C58  0FF6               	addlw	-10
 10029  014C5A  6ED9               	movwf	fsr2l,c
 10030  014C5C  50E2               	movf	fsr1h,w,c
 10031  014C5E  6EDA               	movwf	fsr2h,c
 10032  014C60  0EFF               	movlw	255
 10033  014C62  22DA               	addwfc	fsr2h,f,c
 10034  014C64  0EFC               	movlw	-4
 10035  014C66  50E3               	movf	plusw1,w,c
 10036  014C68  5CDE               	subwf	postinc2,w,c
 10037  014C6A  50DE               	movf	postinc2,w,c
 10038  014C6C  0A80               	xorlw	128
 10039  014C6E  6E32               	movwf	btemp^0,c
 10040  014C70  0EFD               	movlw	-3
 10041  014C72  50E3               	movf	plusw1,w,c
 10042  014C74  0A80               	xorlw	128
 10043  014C76  5832               	subwfb	btemp^0,w,c
 10044  014C78  A0D8               	btfss	status,0,c
 10045  014C7A  D7CF               	goto	l9896
 10046  014C7C                     u9780:
 10047                           
 10048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10049                           ;stkvar	_i @ sp[(-17)+15]
 10050  014C7C  0EFE               	movlw	-2
 10051  014C7E  6AE3               	clrf	plusw1,c
 10052  014C80  0EFF               	movlw	-1
 10053  014C82  6AE3               	clrf	plusw1,c
 10054                           
 10055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10056  014C84  D045               	goto	l9910
 10057  014C86                     l9904:
 10058                           
 10059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10060                           ;stkvar	_fp @ sp[(-17)+-2]
 10061  014C86  0EED               	movlw	-19
 10062  014C88  006F FF8F FFE6     	movff	plusw1,postinc1
 10063  014C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 10064                           
 10065                           ;stkvar	_cp @ sp[(-19)+11]
 10066  014C94  0EF8               	movlw	-8
 10067  014C96  006F FF8F FFF6     	movff	plusw1,tblptrl
 10068  014C9C  0EF9               	movlw	-7
 10069  014C9E  006F FF8F FFF7     	movff	plusw1,tblptrh
 10070  014CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 10071  014CA6  6EF8               	movwf	tblptru,c
 10072  014CA8  0E1F               	movlw	(high __ramtop+-1)
 10073  014CAA  64F7               	cpfsgt	tblptrh,c
 10074  014CAC  D003               	bra	u9797
 10075  014CAE  0008               	tblrd		*
 10076  014CB0  50F5               	movf	tablat,w,c
 10077  014CB2  D007               	bra	u9790
 10078  014CB4                     u9797:
 10079  014CB4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10080  014CBA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10081  014CC0  50EF               	movf	indf0,w,c
 10082  014CC2                     u9790:
 10083  014CC2  6EE6               	movwf	postinc1,c
 10084  014CC4  0E00               	movlw	0
 10085  014CC6  6EE6               	movwf	postinc1,c
 10086  014CC8  EC91  F0B3         	call	_fputc	;wreg free
 10087                           
 10088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10089                           ;stkvar	_cp @ sp[(-17)+11]
 10090  014CCC  0EFA               	movlw	-6
 10091  014CCE  50E3               	movf	plusw1,w,c
 10092  014CD0  0F01               	addlw	1
 10093  014CD2  6E32               	movwf	btemp^0,c
 10094  014CD4  0EFA               	movlw	-6
 10095  014CD6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10096  014CDC  6A32               	clrf	btemp^0,c
 10097  014CDE  0EFB               	movlw	-5
 10098  014CE0  50E3               	movf	plusw1,w,c
 10099  014CE2  2032               	addwfc	btemp^0,w,c
 10100  014CE4  6E32               	movwf	btemp^0,c
 10101  014CE6  0EFB               	movlw	-5
 10102  014CE8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10103                           
 10104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10105                           ;stkvar	_i @ sp[(-17)+15]
 10106  014CEE  0EFE               	movlw	-2
 10107  014CF0  50E3               	movf	plusw1,w,c
 10108  014CF2  0F01               	addlw	1
 10109  014CF4  6E32               	movwf	btemp^0,c
 10110  014CF6  0EFE               	movlw	-2
 10111  014CF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10112  014CFE  6A32               	clrf	btemp^0,c
 10113  014D00  0EFF               	movlw	-1
 10114  014D02  50E3               	movf	plusw1,w,c
 10115  014D04  2032               	addwfc	btemp^0,w,c
 10116  014D06  6E32               	movwf	btemp^0,c
 10117  014D08  0EFF               	movlw	-1
 10118  014D0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10119  014D10                     l9910:
 10120                           
 10121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10122                           ;stkvar	_p @ sp[(-17)+9]
 10123                           ;stkvar	_i @ sp[(-17)+15]
 10124  014D10  50E1               	movf	fsr1l,w,c
 10125  014D12  0FFE               	addlw	-2
 10126  014D14  6ED9               	movwf	fsr2l,c
 10127  014D16  50E2               	movf	fsr1h,w,c
 10128  014D18  6EDA               	movwf	fsr2h,c
 10129  014D1A  0EFF               	movlw	255
 10130  014D1C  22DA               	addwfc	fsr2h,f,c
 10131  014D1E  0EF8               	movlw	-8
 10132  014D20  50E3               	movf	plusw1,w,c
 10133  014D22  5CDE               	subwf	postinc2,w,c
 10134  014D24  50DE               	movf	postinc2,w,c
 10135  014D26  0A80               	xorlw	128
 10136  014D28  6E32               	movwf	btemp^0,c
 10137  014D2A  0EF9               	movlw	-7
 10138  014D2C  50E3               	movf	plusw1,w,c
 10139  014D2E  0A80               	xorlw	128
 10140  014D30  5832               	subwfb	btemp^0,w,c
 10141  014D32  A0D8               	btfss	status,0,c
 10142  014D34  D7A8               	goto	l9904
 10143                           
 10144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10145  014D36  B01F               	btfsc	_flags^0,0,c
 10146  014D38  D01F               	goto	l9918
 10147  014D3A  D031               	goto	u9820
 10148  014D3C                     l9914:
 10149                           
 10150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10151                           ;stkvar	_fp @ sp[(-17)+-2]
 10152  014D3C  0EED               	movlw	-19
 10153  014D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 10154  014D44  006F FF8F FFE6     	movff	plusw1,postinc1
 10155  014D4A  0E20               	movlw	32
 10156  014D4C  6EE6               	movwf	postinc1,c
 10157  014D4E  0E00               	movlw	0
 10158  014D50  6EE6               	movwf	postinc1,c
 10159  014D52  EC91  F0B3         	call	_fputc	;wreg free
 10160                           
 10161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10162                           ;stkvar	_l @ sp[(-17)+7]
 10163  014D56  0EF6               	movlw	-10
 10164  014D58  50E3               	movf	plusw1,w,c
 10165  014D5A  0F01               	addlw	1
 10166  014D5C  6E32               	movwf	btemp^0,c
 10167  014D5E  0EF6               	movlw	-10
 10168  014D60  0060  F0CB  FFE3   	movff	btemp,plusw1
 10169  014D66  6A32               	clrf	btemp^0,c
 10170  014D68  0EF7               	movlw	-9
 10171  014D6A  50E3               	movf	plusw1,w,c
 10172  014D6C  2032               	addwfc	btemp^0,w,c
 10173  014D6E  6E32               	movwf	btemp^0,c
 10174  014D70  0EF7               	movlw	-9
 10175  014D72  0060  F0CB  FFE3   	movff	btemp,plusw1
 10176  014D78                     l9918:
 10177                           
 10178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10179                           ;stkvar	_w @ sp[(-17)+13]
 10180                           ;stkvar	_l @ sp[(-17)+7]
 10181  014D78  50E1               	movf	fsr1l,w,c
 10182  014D7A  0FF6               	addlw	-10
 10183  014D7C  6ED9               	movwf	fsr2l,c
 10184  014D7E  50E2               	movf	fsr1h,w,c
 10185  014D80  6EDA               	movwf	fsr2h,c
 10186  014D82  0EFF               	movlw	255
 10187  014D84  22DA               	addwfc	fsr2h,f,c
 10188  014D86  0EFC               	movlw	-4
 10189  014D88  50E3               	movf	plusw1,w,c
 10190  014D8A  5CDE               	subwf	postinc2,w,c
 10191  014D8C  50DE               	movf	postinc2,w,c
 10192  014D8E  0A80               	xorlw	128
 10193  014D90  6E32               	movwf	btemp^0,c
 10194  014D92  0EFD               	movlw	-3
 10195  014D94  50E3               	movf	plusw1,w,c
 10196  014D96  0A80               	xorlw	128
 10197  014D98  5832               	subwfb	btemp^0,w,c
 10198  014D9A  A0D8               	btfss	status,0,c
 10199  014D9C  D7CF               	goto	l9914
 10200  014D9E                     u9820:
 10201                           
 10202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10203                           ;stkvar	_l @ sp[(-17)+7]
 10204  014D9E  0EF6               	movlw	-10
 10205  014DA0  006F FF8C  F032    	movff	plusw1,btemp
 10206  014DA6  0EF7               	movlw	-9
 10207  014DA8  006F FF8C  F033    	movff	plusw1,btemp+1
 10208                           
 10209                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10210  014DAE  0EEB               	movlw	235
 10211  014DB0  26E1               	addwf	fsr1l,f,c
 10212  014DB2  0EFF               	movlw	255
 10213  014DB4  22E2               	addwfc	fsr1h,f,c
 10214  014DB6  0012               	return		;funcret
 10215  014DB8                     __end_of_stoa:
 10216                           	opt callstack 0
 10217                           
 10218 ;; *************** function _efgtoa *****************
 10219 ;; Defined at:
 10220 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10223 ;;		 -> f(6), NULL(0), 
 10224 ;;  f               4  [STACK] PTR struct _IO_FILE
 10225 ;;  c               1  [STACK] unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  u               4  [STACK] unsigned char 
 10228 ;;  g               4  [STACK] unsigned char 
 10229 ;;  l               4  [STACK] unsigned char 
 10230 ;;  h               4  [STACK] unsigned char 
 10231 ;;  ou              4  [STACK] unsigned char 
 10232 ;;  n               2  [STACK] int 
 10233 ;;  e               2  [STACK] int 
 10234 ;;  i               2  [STACK] int 
 10235 ;;  w               2  [STACK] int 
 10236 ;;  p               2  [STACK] int 
 10237 ;;  sign            2  [STACK] int 
 10238 ;;  d               2  [STACK] int 
 10239 ;;  ne              2  [STACK] int 
 10240 ;;  m               2  [STACK] int 
 10241 ;;  pp              2  [STACK] int 
 10242 ;;  t               2  [STACK] int 
 10243 ;;  mode            1  [STACK] unsigned char 
 10244 ;;  nmode           1  [STACK] unsigned char 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  2  [STACK] int 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/5
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:   11
 10261 ;; This function calls:
 10262 ;;		___awdiv
 10263 ;;		___awmod
 10264 ;;		___fladd
 10265 ;;		___fldiv
 10266 ;;		___fleq
 10267 ;;		___flge
 10268 ;;		___flmul
 10269 ;;		___flneg
 10270 ;;		___flsub
 10271 ;;		___fltol
 10272 ;;		___fpclassifyf
 10273 ;;		_floorf
 10274 ;;		_isupper
 10275 ;;		_pad
 10276 ;;		_strcpy
 10277 ;;		_tolower
 10278 ;; This function is called by:
 10279 ;;		_vfpfcnvrt
 10280 ;; This function uses a reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text45
 10284  010000                     __ptext45:
 10285                           	opt callstack 0
 10286  010000                     _efgtoa:
 10287                           	opt callstack 0
 10288                           
 10289                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10290  010000  0E38               	movlw	56
 10291  010002  26E1               	addwf	fsr1l,f,c
 10292  010004  0E00               	movlw	0
 10293  010006  22E2               	addwfc	fsr1h,f,c
 10294                           
 10295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10296                           ;stkvar	_sign @ sp[(-56)+42]
 10297                           
 10298                           ;incstack = 0
 10299  010008  0EF2               	movlw	-14
 10300  01000A  6AE3               	clrf	plusw1,c
 10301  01000C  0EF3               	movlw	-13
 10302  01000E  6AE3               	clrf	plusw1,c
 10303                           
 10304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10305                           ;stkvar	_f @ sp[(-56)+-6]
 10306  010010  0EC2               	movlw	-62
 10307  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10308  010018  0EC3               	movlw	-61
 10309  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10310  010020  0EC4               	movlw	-60
 10311  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10312  010028  0EC5               	movlw	-59
 10313  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10314                           
 10315                           ;stkvar	_g @ sp[(-56)+16]
 10316  010030  0ED8               	movlw	-40
 10317  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10318  010038  0ED9               	movlw	-39
 10319  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10320  010040  0EDA               	movlw	-38
 10321  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10322  010048  0EDB               	movlw	-37
 10323  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10324                           
 10325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10326                           ;stkvar	_g @ sp[(-56)+16]
 10327  010050  0EDB               	movlw	-37
 10328  010052  AEE3               	btfss	plusw1,7,c
 10329  010054  D02B               	goto	l9578
 10330                           
 10331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10332  010056  0E01               	movlw	1
 10333  010058  6E3C               	movwf	(btemp+10)^0,c
 10334  01005A  0E00               	movlw	0
 10335  01005C  6E3D               	movwf	(btemp+11)^0,c
 10336                           
 10337                           ;stkvar	_sign @ sp[(-56)+42]
 10338  01005E  0EF2               	movlw	-14
 10339  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10340  010066  0EF3               	movlw	-13
 10341  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10342                           
 10343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10344                           ;stkvar	_g @ sp[(-56)+16]
 10345  01006E  0ED8               	movlw	-40
 10346  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10347  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10348  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10349  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10350  010088  EC04  F0BF         	call	___flneg	;wreg free
 10351                           
 10352                           ;stkvar	_g @ sp[(-56)+16]
 10353  01008C  0ED8               	movlw	-40
 10354  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10355  010094  0ED9               	movlw	-39
 10356  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10357  01009C  0EDA               	movlw	-38
 10358  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10359  0100A4  0EDB               	movlw	-37
 10360  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10361  0100AC                     l9578:
 10362                           
 10363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10364                           ;stkvar	_n @ sp[(-56)+32]
 10365  0100AC  0EE8               	movlw	-24
 10366  0100AE  6AE3               	clrf	plusw1,c
 10367  0100B0  0EE9               	movlw	-23
 10368  0100B2  6AE3               	clrf	plusw1,c
 10369                           
 10370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10371                           ;stkvar	_w @ sp[(-56)+38]
 10372  0100B4  0EEE               	movlw	-18
 10373  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10374  0100BC  0EEF               	movlw	-17
 10375  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10376                           
 10377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10378                           ;stkvar	_sign @ sp[(-56)+42]
 10379  0100C4  0EF2               	movlw	-14
 10380  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10381  0100CC  0EF3               	movlw	-13
 10382  0100CE  50E3               	movf	plusw1,w,c
 10383  0100D0  1032               	iorwf	btemp^0,w,c
 10384  0100D2  A4D8               	btfss	status,2,c
 10385  0100D4  D002               	goto	u9230
 10386  0100D6  A41F               	btfss	_flags^0,2,c
 10387  0100D8  D036               	goto	l9598
 10388  0100DA                     u9230:
 10389                           
 10390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10391                           ;stkvar	_sign @ sp[(-56)+42]
 10392  0100DA  0EF2               	movlw	-14
 10393  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10394  0100E2  0EF3               	movlw	-13
 10395  0100E4  50E3               	movf	plusw1,w,c
 10396  0100E6  1032               	iorwf	btemp^0,w,c
 10397  0100E8  A4D8               	btfss	status,2,c
 10398  0100EA  D002               	goto	l9590
 10399  0100EC  0E2B               	movlw	43
 10400  0100EE  D001               	goto	L9
 10401  0100F0                     l9590:
 10402  0100F0  0E2D               	movlw	45
 10403  0100F2                     L9:
 10404  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10405  0100F4  0E00               	movlw	0
 10406  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10407                           
 10408                           ;stkvar	_efgtoa$4468 @ sp[(-56)+10]
 10409  0100F8  0ED2               	movlw	-46
 10410  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10411  010100  0ED3               	movlw	-45
 10412  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10413                           
 10414                           ;stkvar	_efgtoa$4468 @ sp[(-56)+10]
 10415  010108  0ED2               	movlw	-46
 10416  01010A  006F FF8C  F178    	movff	plusw1,_dbuf
 10417                           
 10418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10419                           ;stkvar	_n @ sp[(-56)+32]
 10420  010110  0EE8               	movlw	-24
 10421  010112  50E3               	movf	plusw1,w,c
 10422  010114  0F01               	addlw	1
 10423  010116  6E32               	movwf	btemp^0,c
 10424  010118  0EE8               	movlw	-24
 10425  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10426  010120  6A32               	clrf	btemp^0,c
 10427  010122  0EE9               	movlw	-23
 10428  010124  50E3               	movf	plusw1,w,c
 10429  010126  2032               	addwfc	btemp^0,w,c
 10430  010128  6E32               	movwf	btemp^0,c
 10431  01012A  0EE9               	movlw	-23
 10432  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10433                           
 10434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10435                           ;stkvar	_w @ sp[(-56)+38]
 10436  010132  50E1               	movf	fsr1l,w,c
 10437  010134  0FEE               	addlw	-18
 10438  010136  6ED9               	movwf	fsr2l,c
 10439  010138  50E2               	movf	fsr1h,w,c
 10440  01013A  6EDA               	movwf	fsr2h,c
 10441  01013C  0EFF               	movlw	255
 10442  01013E  22DA               	addwfc	fsr2h,f,c
 10443  010140  06DE               	decf	postinc2,f,c
 10444  010142  0E00               	movlw	0
 10445  010144  5ADD               	subwfb	postdec2,f,c
 10446  010146                     l9598:
 10447                           
 10448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10449                           ;stkvar	_g @ sp[(-56)+16]
 10450  010146  0ED8               	movlw	-40
 10451  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10452  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10453  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10454  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10455  010160  EC7A  F0AF         	call	___fpclassifyf	;wreg free
 10456  010164  0432               	decf	btemp^0,w,c
 10457  010166  1033               	iorwf	(btemp+1)^0,w,c
 10458  010168  A4D8               	btfss	status,2,c
 10459  01016A  D076               	goto	l9616
 10460  01016C  0EBF               	movlw	191
 10461  01016E  6E3C               	movwf	(btemp+10)^0,c
 10462  010170  0EFF               	movlw	255
 10463  010172  6E3D               	movwf	(btemp+11)^0,c
 10464                           
 10465                           ;stkvar	_c @ sp[(-56)+-7]
 10466  010174  0EC1               	movlw	-63
 10467  010176  50E3               	movf	plusw1,w,c
 10468  010178  6E3A               	movwf	(btemp+8)^0,c
 10469  01017A  6A3B               	clrf	(btemp+9)^0,c
 10470  01017C  503C               	movf	(btemp+10)^0,w,c
 10471  01017E  263A               	addwf	(btemp+8)^0,f,c
 10472  010180  503D               	movf	(btemp+11)^0,w,c
 10473  010182  223B               	addwfc	(btemp+9)^0,f,c
 10474  010184  503B               	movf	(btemp+9)^0,w,c
 10475  010186  E106               	bnz	u9260
 10476  010188  0E1A               	movlw	26
 10477  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10478  01018C  B0D8               	btfsc	status,0,c
 10479  01018E  D002               	goto	u9260
 10480  010190  0E01               	movlw	1
 10481  010192  D001               	goto	u9270
 10482  010194                     u9260:
 10483  010194  0E00               	movlw	0
 10484  010196                     u9270:
 10485  010196  6E3C               	movwf	(btemp+10)^0,c
 10486  010198  6A3D               	clrf	(btemp+11)^0,c
 10487                           
 10488                           ;stkvar	_efgtoa$4469 @ sp[(-56)+8]
 10489  01019A  0ED0               	movlw	-48
 10490  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10491  0101A2  0ED1               	movlw	-47
 10492  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10493                           
 10494                           ;stkvar	_efgtoa$4469 @ sp[(-56)+8]
 10495  0101AA  0ED0               	movlw	-48
 10496  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10497  0101B2  0ED1               	movlw	-47
 10498  0101B4  50E3               	movf	plusw1,w,c
 10499  0101B6  1032               	iorwf	btemp^0,w,c
 10500  0101B8  B4D8               	btfsc	status,2,c
 10501  0101BA  D017               	goto	l9608
 10502                           
 10503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10504  0101BC  0EE5               	movlw	low STR_37
 10505  0101BE  6EE6               	movwf	postinc1,c
 10506  0101C0  0EFF               	movlw	high STR_37
 10507  0101C2  6EE6               	movwf	postinc1,c
 10508                           
 10509                           ;stkvar	_n @ sp[(-58)+32]
 10510  0101C4  0E78               	movlw	low _dbuf
 10511  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10512  0101C8  0E01               	movlw	high _dbuf
 10513  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10514  0101CC  0EE6               	movlw	-26
 10515  0101CE  50E3               	movf	plusw1,w,c
 10516  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10517  0101D2  0EE7               	movlw	-25
 10518  0101D4  50E3               	movf	plusw1,w,c
 10519  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10520  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10521  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10522  0101E4  EC34  F0B7         	call	_strcpy	;wreg free
 10523                           
 10524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10525  0101E8  D016               	goto	l9610
 10526  0101EA                     l9608:
 10527                           
 10528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10529  0101EA  0EED               	movlw	low STR_38
 10530  0101EC  6EE6               	movwf	postinc1,c
 10531  0101EE  0EFF               	movlw	high STR_38
 10532  0101F0  6EE6               	movwf	postinc1,c
 10533                           
 10534                           ;stkvar	_n @ sp[(-58)+32]
 10535  0101F2  0E78               	movlw	low _dbuf
 10536  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10537  0101F6  0E01               	movlw	high _dbuf
 10538  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10539  0101FA  0EE6               	movlw	-26
 10540  0101FC  50E3               	movf	plusw1,w,c
 10541  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10542  010200  0EE7               	movlw	-25
 10543  010202  50E3               	movf	plusw1,w,c
 10544  010204  223D               	addwfc	(btemp+11)^0,f,c
 10545  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10546  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10547  010212  EC34  F0B7         	call	_strcpy	;wreg free
 10548  010216                     l9610:
 10549                           
 10550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10551                           ;stkvar	_w @ sp[(-56)+38]
 10552  010216  50E1               	movf	fsr1l,w,c
 10553  010218  0FEE               	addlw	-18
 10554  01021A  6ED9               	movwf	fsr2l,c
 10555  01021C  50E2               	movf	fsr1h,w,c
 10556  01021E  6EDA               	movwf	fsr2h,c
 10557  010220  0EFF               	movlw	255
 10558  010222  22DA               	addwfc	fsr2h,f,c
 10559  010224  0EFD               	movlw	253
 10560  010226  26DE               	addwf	postinc2,f,c
 10561  010228  0EFF               	movlw	255
 10562  01022A  22DD               	addwfc	postdec2,f,c
 10563  01022C                     l9612:
 10564                           
 10565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10566                           ;stkvar	_w @ sp[(-56)+38]
 10567  01022C  0EEE               	movlw	-18
 10568  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10569  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10570  01023A  0E78               	movlw	low _dbuf
 10571  01023C  6EE6               	movwf	postinc1,c
 10572  01023E  0E01               	movlw	high _dbuf
 10573  010240  6EE6               	movwf	postinc1,c
 10574                           
 10575                           ;stkvar	_fp @ sp[(-60)+-2]
 10576  010242  0EC2               	movlw	-62
 10577  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10578  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10579  010250  ECAF  F0B4         	call	_pad	;wreg free
 10580  010254  EF1D  F089         	goto	l1891
 10581  010258                     l9616:
 10582                           
 10583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10584                           ;stkvar	_g @ sp[(-56)+16]
 10585  010258  0ED8               	movlw	-40
 10586  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10587  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10588  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10589  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10590  010272  EC7A  F0AF         	call	___fpclassifyf	;wreg free
 10591  010276  5032               	movf	btemp^0,w,c
 10592  010278  1033               	iorwf	(btemp+1)^0,w,c
 10593  01027A  A4D8               	btfss	status,2,c
 10594  01027C  D056               	goto	l9634
 10595  01027E  0EBF               	movlw	191
 10596  010280  6E3C               	movwf	(btemp+10)^0,c
 10597  010282  0EFF               	movlw	255
 10598  010284  6E3D               	movwf	(btemp+11)^0,c
 10599                           
 10600                           ;stkvar	_c @ sp[(-56)+-7]
 10601  010286  0EC1               	movlw	-63
 10602  010288  50E3               	movf	plusw1,w,c
 10603  01028A  6E3A               	movwf	(btemp+8)^0,c
 10604  01028C  6A3B               	clrf	(btemp+9)^0,c
 10605  01028E  503C               	movf	(btemp+10)^0,w,c
 10606  010290  263A               	addwf	(btemp+8)^0,f,c
 10607  010292  503D               	movf	(btemp+11)^0,w,c
 10608  010294  223B               	addwfc	(btemp+9)^0,f,c
 10609  010296  503B               	movf	(btemp+9)^0,w,c
 10610  010298  E106               	bnz	u9300
 10611  01029A  0E1A               	movlw	26
 10612  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10613  01029E  B0D8               	btfsc	status,0,c
 10614  0102A0  D002               	goto	u9300
 10615  0102A2  0E01               	movlw	1
 10616  0102A4  D001               	goto	u9310
 10617  0102A6                     u9300:
 10618  0102A6  0E00               	movlw	0
 10619  0102A8                     u9310:
 10620  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10621  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10622                           
 10623                           ;stkvar	_efgtoa$4473 @ sp[(-56)+6]
 10624  0102AC  0ECE               	movlw	-50
 10625  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10626  0102B4  0ECF               	movlw	-49
 10627  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10628                           
 10629                           ;stkvar	_efgtoa$4473 @ sp[(-56)+6]
 10630  0102BC  0ECE               	movlw	-50
 10631  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10632  0102C4  0ECF               	movlw	-49
 10633  0102C6  50E3               	movf	plusw1,w,c
 10634  0102C8  1032               	iorwf	btemp^0,w,c
 10635  0102CA  B4D8               	btfsc	status,2,c
 10636  0102CC  D017               	goto	l9626
 10637                           
 10638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10639  0102CE  0EE9               	movlw	low STR_41
 10640  0102D0  6EE6               	movwf	postinc1,c
 10641  0102D2  0EFF               	movlw	high STR_41
 10642  0102D4  6EE6               	movwf	postinc1,c
 10643                           
 10644                           ;stkvar	_n @ sp[(-58)+32]
 10645  0102D6  0E78               	movlw	low _dbuf
 10646  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10647  0102DA  0E01               	movlw	high _dbuf
 10648  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10649  0102DE  0EE6               	movlw	-26
 10650  0102E0  50E3               	movf	plusw1,w,c
 10651  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10652  0102E4  0EE7               	movlw	-25
 10653  0102E6  50E3               	movf	plusw1,w,c
 10654  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10655  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10656  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10657  0102F6  EC34  F0B7         	call	_strcpy	;wreg free
 10658                           
 10659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10660  0102FA  D78D               	goto	l9610
 10661  0102FC                     l9626:
 10662                           
 10663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10664  0102FC  0EF1               	movlw	low STR_42
 10665  0102FE  6EE6               	movwf	postinc1,c
 10666  010300  0EFF               	movlw	high STR_42
 10667  010302  6EE6               	movwf	postinc1,c
 10668                           
 10669                           ;stkvar	_n @ sp[(-58)+32]
 10670  010304  0E78               	movlw	low _dbuf
 10671  010306  6E3C               	movwf	(btemp+10)^0,c
 10672  010308  0E01               	movlw	high _dbuf
 10673  01030A  6E3D               	movwf	(btemp+11)^0,c
 10674  01030C  0EE6               	movlw	-26
 10675  01030E  50E3               	movf	plusw1,w,c
 10676  010310  263C               	addwf	(btemp+10)^0,f,c
 10677  010312  0EE7               	movlw	-25
 10678  010314  50E3               	movf	plusw1,w,c
 10679  010316  223D               	addwfc	(btemp+11)^0,f,c
 10680  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10681  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10682  010324  EC34  F0B7         	call	_strcpy	;wreg free
 10683  010328  D776               	goto	l9610
 10684  01032A                     l9634:
 10685                           
 10686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10687  01032A  0E00               	movlw	0
 10688  01032C  6E3A               	movwf	(btemp+8)^0,c
 10689  01032E  0E00               	movlw	0
 10690  010330  6E3B               	movwf	(btemp+9)^0,c
 10691  010332  0E80               	movlw	128
 10692  010334  6E3C               	movwf	(btemp+10)^0,c
 10693  010336  0E3F               	movlw	63
 10694  010338  6E3D               	movwf	(btemp+11)^0,c
 10695                           
 10696                           ;stkvar	_u @ sp[(-56)+12]
 10697  01033A  0ED4               	movlw	-44
 10698  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10699  010342  0ED5               	movlw	-43
 10700  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10701  01034A  0ED6               	movlw	-42
 10702  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10703  010352  0ED7               	movlw	-41
 10704  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10705                           
 10706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10707                           ;stkvar	_e @ sp[(-56)+34]
 10708  01035A  0EEA               	movlw	-22
 10709  01035C  6AE3               	clrf	plusw1,c
 10710  01035E  0EEB               	movlw	-21
 10711  010360  6AE3               	clrf	plusw1,c
 10712                           
 10713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10714  010362  0E00               	movlw	0
 10715  010364  6EE6               	movwf	postinc1,c
 10716  010366  0E00               	movlw	0
 10717  010368  6EE6               	movwf	postinc1,c
 10718  01036A  0E00               	movlw	0
 10719  01036C  6EE6               	movwf	postinc1,c
 10720  01036E  0E00               	movlw	0
 10721  010370  6EE6               	movwf	postinc1,c
 10722                           
 10723                           ;stkvar	_g @ sp[(-60)+16]
 10724  010372  0ED4               	movlw	-44
 10725  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10726  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10727  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10728  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10729  01038C  EC9E  F0B7         	call	___fleq	;wreg free
 10730  010390  A032               	btfss	btemp& (0+255),0,c
 10731  010392  D039               	goto	l9646
 10732  010394  D0BC               	goto	u9350
 10733  010396                     l9642:
 10734                           
 10735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10736  010396  0E00               	movlw	0
 10737  010398  6EE6               	movwf	postinc1,c
 10738  01039A  0E00               	movlw	0
 10739  01039C  6EE6               	movwf	postinc1,c
 10740  01039E  0E20               	movlw	32
 10741  0103A0  6EE6               	movwf	postinc1,c
 10742  0103A2  0E41               	movlw	65
 10743  0103A4  6EE6               	movwf	postinc1,c
 10744                           
 10745                           ;stkvar	_u @ sp[(-60)+12]
 10746  0103A6  0ED0               	movlw	-48
 10747  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10748  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10749  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10750  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10751  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10752                           
 10753                           ;stkvar	_u @ sp[(-56)+12]
 10754  0103C4  0ED4               	movlw	-44
 10755  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10756  0103CC  0ED5               	movlw	-43
 10757  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10758  0103D4  0ED6               	movlw	-42
 10759  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10760  0103DC  0ED7               	movlw	-41
 10761  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10762                           
 10763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10764                           ;stkvar	_e @ sp[(-56)+34]
 10765  0103E4  0EEA               	movlw	-22
 10766  0103E6  50E3               	movf	plusw1,w,c
 10767  0103E8  0F01               	addlw	1
 10768  0103EA  6E32               	movwf	btemp^0,c
 10769  0103EC  0EEA               	movlw	-22
 10770  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10771  0103F4  6A32               	clrf	btemp^0,c
 10772  0103F6  0EEB               	movlw	-21
 10773  0103F8  50E3               	movf	plusw1,w,c
 10774  0103FA  2032               	addwfc	btemp^0,w,c
 10775  0103FC  6E32               	movwf	btemp^0,c
 10776  0103FE  0EEB               	movlw	-21
 10777  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10778  010406                     l9646:
 10779                           
 10780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10781  010406  0E00               	movlw	0
 10782  010408  6EE6               	movwf	postinc1,c
 10783  01040A  0E00               	movlw	0
 10784  01040C  6EE6               	movwf	postinc1,c
 10785  01040E  0E20               	movlw	32
 10786  010410  6EE6               	movwf	postinc1,c
 10787  010412  0E41               	movlw	65
 10788  010414  6EE6               	movwf	postinc1,c
 10789                           
 10790                           ;stkvar	_u @ sp[(-60)+12]
 10791  010416  0ED0               	movlw	-48
 10792  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10793  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10794  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10795  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10796  010430  ECC1  F08E         	call	___flmul	;wreg free
 10797  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10798  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10799  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10800  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10801                           
 10802                           ;stkvar	_g @ sp[(-60)+16]
 10803  01044C  0ED4               	movlw	-44
 10804  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10805  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10806  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10807  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10808  010466  ECFE  F0B0         	call	___flge	;wreg free
 10809  01046A  A032               	btfss	btemp& (0+255),0,c
 10810  01046C  D032               	goto	l9652
 10811  01046E  D793               	goto	l9642
 10812  010470                     l9648:
 10813                           
 10814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10815  010470  0E00               	movlw	0
 10816  010472  6EE6               	movwf	postinc1,c
 10817  010474  0E00               	movlw	0
 10818  010476  6EE6               	movwf	postinc1,c
 10819  010478  0E20               	movlw	32
 10820  01047A  6EE6               	movwf	postinc1,c
 10821  01047C  0E41               	movlw	65
 10822  01047E  6EE6               	movwf	postinc1,c
 10823                           
 10824                           ;stkvar	_u @ sp[(-60)+12]
 10825  010480  0ED0               	movlw	-48
 10826  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10827  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10828  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10829  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10830  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10831                           
 10832                           ;stkvar	_u @ sp[(-56)+12]
 10833  01049E  0ED4               	movlw	-44
 10834  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10835  0104A6  0ED5               	movlw	-43
 10836  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10837  0104AE  0ED6               	movlw	-42
 10838  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10839  0104B6  0ED7               	movlw	-41
 10840  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10841                           
 10842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10843                           ;stkvar	_e @ sp[(-56)+34]
 10844  0104BE  50E1               	movf	fsr1l,w,c
 10845  0104C0  0FEA               	addlw	-22
 10846  0104C2  6ED9               	movwf	fsr2l,c
 10847  0104C4  50E2               	movf	fsr1h,w,c
 10848  0104C6  6EDA               	movwf	fsr2h,c
 10849  0104C8  0EFF               	movlw	255
 10850  0104CA  22DA               	addwfc	fsr2h,f,c
 10851  0104CC  06DE               	decf	postinc2,f,c
 10852  0104CE  0E00               	movlw	0
 10853  0104D0  5ADD               	subwfb	postdec2,f,c
 10854  0104D2                     l9652:
 10855                           
 10856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10857                           ;stkvar	_u @ sp[(-56)+12]
 10858  0104D2  0ED4               	movlw	-44
 10859  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10860  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10861  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10862  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10863                           
 10864                           ;stkvar	_g @ sp[(-60)+16]
 10865  0104EC  0ED4               	movlw	-44
 10866  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10867  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10868  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10869  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10870  010506  ECFE  F0B0         	call	___flge	;wreg free
 10871  01050A  A032               	btfss	btemp& (0+255),0,c
 10872  01050C  D7B1               	goto	l9648
 10873  01050E                     u9350:
 10874                           
 10875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10876                           ;stkvar	_c @ sp[(-56)+-7]
 10877  01050E  0EC1               	movlw	-63
 10878  010510  50E3               	movf	plusw1,w,c
 10879  010512  6EE6               	movwf	postinc1,c
 10880  010514  0E00               	movlw	0
 10881  010516  6EE6               	movwf	postinc1,c
 10882  010518  ECA5  F0BB         	call	_tolower	;wreg free
 10883                           
 10884                           ;stkvar	_mode @ sp[(-56)+54]
 10885  01051C  0EFE               	movlw	-2
 10886  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10887                           
 10888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10889                           ;stkvar	_mode @ sp[(-56)+54]
 10890                           ;stkvar	_nmode @ sp[(-56)+55]
 10891  010524  0EFE               	movlw	-2
 10892  010526  006F FF8C  F032    	movff	plusw1,btemp
 10893  01052C  0EFF               	movlw	-1
 10894  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10895                           
 10896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10897                           ;stkvar	_mode @ sp[(-56)+54]
 10898  010534  0EFE               	movlw	-2
 10899  010536  006F FF8C  F032    	movff	plusw1,btemp
 10900  01053C  0E67               	movlw	103
 10901  01053E  1832               	xorwf	btemp^0,w,c
 10902  010540  A4D8               	btfss	status,2,c
 10903  010542  D025               	goto	l9670
 10904                           
 10905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10906  010544  501D               	movf	_prec^0,w,c
 10907  010546  101E               	iorwf	(_prec+1)^0,w,c
 10908  010548  A4D8               	btfss	status,2,c
 10909  01054A  D004               	goto	l9664
 10910                           
 10911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10912  01054C  0E00               	movlw	0
 10913  01054E  6E1E               	movwf	(_prec+1)^0,c
 10914  010550  0E01               	movlw	1
 10915  010552  6E1D               	movwf	_prec^0,c
 10916  010554                     l9664:
 10917                           
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10919  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10920  010556  D005               	goto	u9380
 10921  010558  501E               	movf	(_prec+1)^0,w,c
 10922  01055A  E110               	bnz	l9668
 10923  01055C  041D               	decf	_prec^0,w,c
 10924  01055E  B0D8               	btfsc	status,0,c
 10925  010560  D00D               	goto	l9668
 10926  010562                     u9380:
 10927  010562  0E06               	movlw	6
 10928  010564  6E3C               	movwf	(btemp+10)^0,c
 10929  010566  0E00               	movlw	0
 10930  010568  6E3D               	movwf	(btemp+11)^0,c
 10931                           
 10932                           ;stkvar	_p @ sp[(-56)+40]
 10933  01056A  0EF0               	movlw	-16
 10934  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10935  010572  0EF1               	movlw	-15
 10936  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10937  01057A  D00C               	goto	l9676
 10938  01057C                     l9668:
 10939                           
 10940                           ;stkvar	_p @ sp[(-56)+40]
 10941  01057C  0EF0               	movlw	-16
 10942  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10943  010584  0EF1               	movlw	-15
 10944  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10945  01058C  D003               	goto	l9676
 10946  01058E                     l9670:
 10947                           
 10948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10949  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10950  010590  D7F5               	goto	l9668
 10951  010592  D7E7               	goto	u9380
 10952  010594                     l9676:
 10953                           
 10954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10955                           ;stkvar	_mode @ sp[(-56)+54]
 10956  010594  0EFE               	movlw	-2
 10957  010596  006F FF8C  F032    	movff	plusw1,btemp
 10958  01059C  0E67               	movlw	103
 10959  01059E  1832               	xorwf	btemp^0,w,c
 10960  0105A0  A4D8               	btfss	status,2,c
 10961  0105A2  D02F               	goto	l9686
 10962                           
 10963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10964                           ;stkvar	_e @ sp[(-56)+34]
 10965  0105A4  0EEB               	movlw	-21
 10966  0105A6  AEE3               	btfss	plusw1,7,c
 10967  0105A8  D00E               	goto	u9410
 10968  0105AA  0EEA               	movlw	-22
 10969  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10970  0105B2  0EFC               	movlw	252
 10971  0105B4  5E32               	subwf	btemp^0,f,c
 10972  0105B6  0EEB               	movlw	-21
 10973  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10974  0105BE  0EFF               	movlw	255
 10975  0105C0  5A32               	subwfb	btemp^0,f,c
 10976  0105C2  A0D8               	btfss	status,0,c
 10977  0105C4  D018               	goto	l9684
 10978  0105C6                     u9410:
 10979                           
 10980                           ;stkvar	_e @ sp[(-56)+34]
 10981                           ;stkvar	_p @ sp[(-56)+40]
 10982  0105C6  0EF0               	movlw	-16
 10983  0105C8  50E3               	movf	plusw1,w,c
 10984  0105CA  0FFF               	addlw	255
 10985  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10986  0105CE  0EF1               	movlw	-15
 10987  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10988  0105D6  0EFF               	movlw	255
 10989  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10990  0105DA  0EEA               	movlw	-22
 10991  0105DC  50E3               	movf	plusw1,w,c
 10992  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10993  0105E0  503D               	movf	(btemp+11)^0,w,c
 10994  0105E2  0A80               	xorlw	128
 10995  0105E4  6E32               	movwf	btemp^0,c
 10996  0105E6  0EEB               	movlw	-21
 10997  0105E8  50E3               	movf	plusw1,w,c
 10998  0105EA  0A80               	xorlw	128
 10999  0105EC  5832               	subwfb	btemp^0,w,c
 11000  0105EE  A0D8               	btfss	status,0,c
 11001  0105F0  D002               	goto	l9684
 11002                           
 11003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11004  0105F2  0E66               	movlw	102
 11005  0105F4  D001               	goto	L10
 11006  0105F6                     l9684:
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11009  0105F6  0E65               	movlw	101
 11010  0105F8                     L10:
 11011  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11012                           
 11013                           ;stkvar	_nmode @ sp[(-56)+55]
 11014  0105FA  0EFF               	movlw	-1
 11015  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11016  010602                     l9686:
 11017                           
 11018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11019                           ;stkvar	_p @ sp[(-56)+40]
 11020                           ;stkvar	_m @ sp[(-56)+48]
 11021  010602  0EF0               	movlw	-16
 11022  010604  006F FF8C  F032    	movff	plusw1,btemp
 11023  01060A  0EF8               	movlw	-8
 11024  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11025  010612  0EF1               	movlw	-15
 11026  010614  006F FF8C  F032    	movff	plusw1,btemp
 11027  01061A  0EF9               	movlw	-7
 11028  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11029                           
 11030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11031                           ;stkvar	_mode @ sp[(-56)+54]
 11032  010622  0EFE               	movlw	-2
 11033  010624  006F FF8C  F032    	movff	plusw1,btemp
 11034  01062A  0E67               	movlw	103
 11035  01062C  1832               	xorwf	btemp^0,w,c
 11036  01062E  A4D8               	btfss	status,2,c
 11037  010630  D00B               	goto	u9450
 11038                           
 11039                           ;stkvar	_nmode @ sp[(-56)+55]
 11040  010632  0EFF               	movlw	-1
 11041  010634  006F FF8C  F032    	movff	plusw1,btemp
 11042  01063A  0E66               	movlw	102
 11043  01063C  1832               	xorwf	btemp^0,w,c
 11044  01063E  A4D8               	btfss	status,2,c
 11045  010640  D014               	goto	l1920
 11046                           
 11047                           ;stkvar	_e @ sp[(-56)+34]
 11048  010642  0EEB               	movlw	-21
 11049  010644  AEE3               	btfss	plusw1,7,c
 11050  010646  D011               	goto	l1920
 11051  010648                     u9450:
 11052                           
 11053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11054                           ;stkvar	_m @ sp[(-56)+48]
 11055  010648  0EF8               	movlw	-8
 11056  01064A  50E3               	movf	plusw1,w,c
 11057  01064C  0F01               	addlw	1
 11058  01064E  6E32               	movwf	btemp^0,c
 11059  010650  0EF8               	movlw	-8
 11060  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11061  010658  6A32               	clrf	btemp^0,c
 11062  01065A  0EF9               	movlw	-7
 11063  01065C  50E3               	movf	plusw1,w,c
 11064  01065E  2032               	addwfc	btemp^0,w,c
 11065  010660  6E32               	movwf	btemp^0,c
 11066  010662  0EF9               	movlw	-7
 11067  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11068  01066A                     l1920:
 11069                           
 11070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11071                           ;stkvar	_nmode @ sp[(-56)+55]
 11072  01066A  0EFF               	movlw	-1
 11073  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11074  010672  0E66               	movlw	102
 11075  010674  1832               	xorwf	btemp^0,w,c
 11076  010676  A4D8               	btfss	status,2,c
 11077  010678  D03B               	goto	l9706
 11078                           
 11079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11080                           ;stkvar	_e @ sp[(-56)+34]
 11081  01067A  0EEB               	movlw	-21
 11082  01067C  AEE3               	btfss	plusw1,7,c
 11083  01067E  D01C               	goto	l9702
 11084                           
 11085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11086  010680  0E00               	movlw	0
 11087  010682  6E3A               	movwf	(btemp+8)^0,c
 11088  010684  0E00               	movlw	0
 11089  010686  6E3B               	movwf	(btemp+9)^0,c
 11090  010688  0E80               	movlw	128
 11091  01068A  6E3C               	movwf	(btemp+10)^0,c
 11092  01068C  0E3F               	movlw	63
 11093  01068E  6E3D               	movwf	(btemp+11)^0,c
 11094                           
 11095                           ;stkvar	_u @ sp[(-56)+12]
 11096  010690  0ED4               	movlw	-44
 11097  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11098  010698  0ED5               	movlw	-43
 11099  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11100  0106A0  0ED6               	movlw	-42
 11101  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11102  0106A8  0ED7               	movlw	-41
 11103  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11104                           
 11105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11106                           ;stkvar	_e @ sp[(-56)+34]
 11107  0106B0  0EEA               	movlw	-22
 11108  0106B2  6AE3               	clrf	plusw1,c
 11109  0106B4  0EEB               	movlw	-21
 11110  0106B6  6AE3               	clrf	plusw1,c
 11111  0106B8                     l9702:
 11112                           
 11113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11114                           ;stkvar	_mode @ sp[(-56)+54]
 11115  0106B8  0EFE               	movlw	-2
 11116  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11117  0106C0  0E67               	movlw	103
 11118  0106C2  1832               	xorwf	btemp^0,w,c
 11119  0106C4  B4D8               	btfsc	status,2,c
 11120  0106C6  D014               	goto	l9706
 11121                           
 11122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11123                           ;stkvar	_e @ sp[(-56)+34]
 11124                           ;stkvar	_m @ sp[(-56)+48]
 11125  0106C8  0EF8               	movlw	-8
 11126  0106CA  50E3               	movf	plusw1,w,c
 11127  0106CC  6E32               	movwf	btemp^0,c
 11128  0106CE  0EEA               	movlw	-22
 11129  0106D0  50E3               	movf	plusw1,w,c
 11130  0106D2  2632               	addwf	btemp^0,f,c
 11131  0106D4  0EF8               	movlw	-8
 11132  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11133  0106DC  0EF9               	movlw	-7
 11134  0106DE  50E3               	movf	plusw1,w,c
 11135  0106E0  6E32               	movwf	btemp^0,c
 11136  0106E2  0EEB               	movlw	-21
 11137  0106E4  50E3               	movf	plusw1,w,c
 11138  0106E6  2232               	addwfc	btemp^0,f,c
 11139  0106E8  0EF9               	movlw	-7
 11140  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11141  0106F0                     l9706:
 11142                           
 11143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11144                           ;stkvar	_i @ sp[(-56)+36]
 11145  0106F0  0EEC               	movlw	-20
 11146  0106F2  6AE3               	clrf	plusw1,c
 11147  0106F4  0EED               	movlw	-19
 11148  0106F6  6AE3               	clrf	plusw1,c
 11149                           
 11150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11151                           ;stkvar	_g @ sp[(-56)+16]
 11152  0106F8  0ED8               	movlw	-40
 11153  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11154  010700  0ED9               	movlw	-39
 11155  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11156  010708  0EDA               	movlw	-38
 11157  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11158  010710  0EDB               	movlw	-37
 11159  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11160                           
 11161                           ;stkvar	_h @ sp[(-56)+24]
 11162  010718  0EE0               	movlw	-32
 11163  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11164  010720  0EE1               	movlw	-31
 11165  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11166  010728  0EE2               	movlw	-30
 11167  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11168  010730  0EE3               	movlw	-29
 11169  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11170                           
 11171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11172                           ;stkvar	_u @ sp[(-56)+12]
 11173  010738  0ED4               	movlw	-44
 11174  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11175  010740  0ED5               	movlw	-43
 11176  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11177  010748  0ED6               	movlw	-42
 11178  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11179  010750  0ED7               	movlw	-41
 11180  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11181                           
 11182                           ;stkvar	_ou @ sp[(-56)+28]
 11183  010758  0EE4               	movlw	-28
 11184  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11185  010760  0EE5               	movlw	-27
 11186  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11187  010768  0EE6               	movlw	-26
 11188  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11189  010770  0EE7               	movlw	-25
 11190  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11191                           
 11192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11193  010778  D0D6               	goto	l9722
 11194  01077A                     l9712:
 11195                           
 11196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11197                           ;stkvar	_u @ sp[(-56)+12]
 11198  01077A  0ED4               	movlw	-44
 11199  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11201  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11202  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11203                           
 11204                           ;stkvar	_h @ sp[(-60)+24]
 11205  010794  0EDC               	movlw	-36
 11206  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11207  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11210  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 11211  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11212  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11213  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11214  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11215  0107CA  EC51  F0A2         	call	_floorf	;wreg free
 11216                           
 11217                           ;stkvar	_l @ sp[(-56)+20]
 11218  0107CE  0EDC               	movlw	-36
 11219  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11220  0107D6  0EDD               	movlw	-35
 11221  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11222  0107DE  0EDE               	movlw	-34
 11223  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11224  0107E6  0EDF               	movlw	-33
 11225  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11226                           
 11227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11228                           ;stkvar	_l @ sp[(-56)+20]
 11229  0107EE  0EDC               	movlw	-36
 11230  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11231  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11232  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11233  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11234  010808  EC45  F0B0         	call	___fltol	;wreg free
 11235  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11236  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11237                           
 11238                           ;stkvar	_d @ sp[(-56)+44]
 11239  010818  0EF4               	movlw	-12
 11240  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11241  010820  0EF5               	movlw	-11
 11242  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11243                           
 11244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11245                           ;stkvar	_u @ sp[(-56)+12]
 11246  010828  0ED4               	movlw	-44
 11247  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11248  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11249  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11250  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11251                           
 11252                           ;stkvar	_l @ sp[(-60)+20]
 11253  010842  0ED8               	movlw	-40
 11254  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11255  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11256  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11257  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11258  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11259  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11260  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11261  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11262  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11263                           
 11264                           ;stkvar	_h @ sp[(-60)+24]
 11265  010878  0EDC               	movlw	-36
 11266  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11267  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11268  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11269  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11270  010892  EC4B  F0BF         	call	___flsub	;wreg free
 11271                           
 11272                           ;stkvar	_h @ sp[(-56)+24]
 11273  010896  0EE0               	movlw	-32
 11274  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11275  01089E  0EE1               	movlw	-31
 11276  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11277  0108A6  0EE2               	movlw	-30
 11278  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11279  0108AE  0EE3               	movlw	-29
 11280  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11281                           
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11283  0108B6  0E00               	movlw	0
 11284  0108B8  6EE6               	movwf	postinc1,c
 11285  0108BA  0E00               	movlw	0
 11286  0108BC  6EE6               	movwf	postinc1,c
 11287  0108BE  0E20               	movlw	32
 11288  0108C0  6EE6               	movwf	postinc1,c
 11289  0108C2  0E41               	movlw	65
 11290  0108C4  6EE6               	movwf	postinc1,c
 11291                           
 11292                           ;stkvar	_u @ sp[(-60)+12]
 11293  0108C6  0ED0               	movlw	-48
 11294  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11295  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11296  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11297  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11298  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11299                           
 11300                           ;stkvar	_u @ sp[(-56)+12]
 11301  0108E4  0ED4               	movlw	-44
 11302  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11303  0108EC  0ED5               	movlw	-43
 11304  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11305  0108F4  0ED6               	movlw	-42
 11306  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11307  0108FC  0ED7               	movlw	-41
 11308  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11309                           
 11310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11311                           ;stkvar	_i @ sp[(-56)+36]
 11312  010904  0EEC               	movlw	-20
 11313  010906  50E3               	movf	plusw1,w,c
 11314  010908  0F01               	addlw	1
 11315  01090A  6E32               	movwf	btemp^0,c
 11316  01090C  0EEC               	movlw	-20
 11317  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11318  010914  6A32               	clrf	btemp^0,c
 11319  010916  0EED               	movlw	-19
 11320  010918  50E3               	movf	plusw1,w,c
 11321  01091A  2032               	addwfc	btemp^0,w,c
 11322  01091C  6E32               	movwf	btemp^0,c
 11323  01091E  0EED               	movlw	-19
 11324  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11325  010926                     l9722:
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11328                           ;stkvar	_m @ sp[(-56)+48]
 11329                           ;stkvar	_i @ sp[(-56)+36]
 11330  010926  50E1               	movf	fsr1l,w,c
 11331  010928  0FEC               	addlw	-20
 11332  01092A  6ED9               	movwf	fsr2l,c
 11333  01092C  50E2               	movf	fsr1h,w,c
 11334  01092E  6EDA               	movwf	fsr2h,c
 11335  010930  0EFF               	movlw	255
 11336  010932  22DA               	addwfc	fsr2h,f,c
 11337  010934  0EF8               	movlw	-8
 11338  010936  50E3               	movf	plusw1,w,c
 11339  010938  5CDE               	subwf	postinc2,w,c
 11340  01093A  50DE               	movf	postinc2,w,c
 11341  01093C  0A80               	xorlw	128
 11342  01093E  6E32               	movwf	btemp^0,c
 11343  010940  0EF9               	movlw	-7
 11344  010942  50E3               	movf	plusw1,w,c
 11345  010944  0A80               	xorlw	128
 11346  010946  5832               	subwfb	btemp^0,w,c
 11347  010948  A0D8               	btfss	status,0,c
 11348  01094A  D717               	goto	l9712
 11349                           
 11350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11351  01094C  0E00               	movlw	0
 11352  01094E  6EE6               	movwf	postinc1,c
 11353  010950  0E00               	movlw	0
 11354  010952  6EE6               	movwf	postinc1,c
 11355  010954  0EA0               	movlw	160
 11356  010956  6EE6               	movwf	postinc1,c
 11357  010958  0E40               	movlw	64
 11358  01095A  6EE6               	movwf	postinc1,c
 11359                           
 11360                           ;stkvar	_u @ sp[(-60)+12]
 11361  01095C  0ED0               	movlw	-48
 11362  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11363  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11364  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11365  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11366  010976  ECC1  F08E         	call	___flmul	;wreg free
 11367                           
 11368                           ;stkvar	_l @ sp[(-56)+20]
 11369  01097A  0EDC               	movlw	-36
 11370  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11371  010982  0EDD               	movlw	-35
 11372  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11373  01098A  0EDE               	movlw	-34
 11374  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11375  010992  0EDF               	movlw	-33
 11376  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11377                           
 11378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11379                           ;stkvar	_l @ sp[(-56)+20]
 11380  01099A  0EDC               	movlw	-36
 11381  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11382  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11383  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11384  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11385                           
 11386                           ;stkvar	_h @ sp[(-60)+24]
 11387  0109B4  0EDC               	movlw	-36
 11388  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11389  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11390  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11391  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11392  0109CE  ECFE  F0B0         	call	___flge	;wreg free
 11393  0109D2  A032               	btfss	btemp& (0+255),0,c
 11394  0109D4  D021               	goto	u9520
 11395                           
 11396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11397                           ;stkvar	_l @ sp[(-56)+20]
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11400                           
 11401                           ;stkvar	_l @ sp[(-56)+20]
 11402                           
 11403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11404  0109D6  0EDC               	movlw	-36
 11405  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11406  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11407  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11408  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11409                           
 11410                           ;stkvar	_h @ sp[(-60)+24]
 11411  0109F0  0EDC               	movlw	-36
 11412  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11413  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11414  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11415  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11416  010A0A  EC9E  F0B7         	call	___fleq	;wreg free
 11417  010A0E  A032               	btfss	btemp& (0+255),0,c
 11418  010A10  D01B               	goto	l9736
 11419                           
 11420                           ;stkvar	_d @ sp[(-56)+44]
 11421  010A12  0EF4               	movlw	-12
 11422  010A14  B0E3               	btfsc	plusw1,0,c
 11423  010A16  D018               	goto	l9736
 11424  010A18                     u9520:
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11427  010A18  0E00               	movlw	0
 11428  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11429  010A1C  0E00               	movlw	0
 11430  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11431  010A20  0E00               	movlw	0
 11432  010A22  6E3C               	movwf	(btemp+10)^0,c
 11433  010A24  0E00               	movlw	0
 11434  010A26  6E3D               	movwf	(btemp+11)^0,c
 11435                           
 11436                           ;stkvar	_l @ sp[(-56)+20]
 11437  010A28  0EDC               	movlw	-36
 11438  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11439  010A30  0EDD               	movlw	-35
 11440  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11441  010A38  0EDE               	movlw	-34
 11442  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11443  010A40  0EDF               	movlw	-33
 11444  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11445  010A48                     l9736:
 11446                           
 11447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11448                           ;stkvar	_l @ sp[(-56)+20]
 11449  010A48  0EDC               	movlw	-36
 11450  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11451  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11452  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11453  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11454                           
 11455                           ;stkvar	_g @ sp[(-60)+16]
 11456  010A62  0ED4               	movlw	-44
 11457  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11458  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11461  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11462                           
 11463                           ;stkvar	_h @ sp[(-56)+24]
 11464  010A80  0EE0               	movlw	-32
 11465  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11466  010A88  0EE1               	movlw	-31
 11467  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11468  010A90  0EE2               	movlw	-30
 11469  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11470  010A98  0EE3               	movlw	-29
 11471  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11472                           
 11473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11474                           ;stkvar	_ou @ sp[(-56)+28]
 11475  010AA0  0EE4               	movlw	-28
 11476  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11477  010AA8  0EE5               	movlw	-27
 11478  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11479  010AB0  0EE6               	movlw	-26
 11480  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11481  010AB8  0EE7               	movlw	-25
 11482  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11483                           
 11484                           ;stkvar	_u @ sp[(-56)+12]
 11485  010AC0  0ED4               	movlw	-44
 11486  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11487  010AC8  0ED5               	movlw	-43
 11488  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11489  010AD0  0ED6               	movlw	-42
 11490  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11491  010AD8  0ED7               	movlw	-41
 11492  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11493                           
 11494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11495                           ;stkvar	_nmode @ sp[(-56)+55]
 11496  010AE0  0EFF               	movlw	-1
 11497  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11498  010AE8  0E65               	movlw	101
 11499  010AEA  1832               	xorwf	btemp^0,w,c
 11500  010AEC  B4D8               	btfsc	status,2,c
 11501  010AEE  D011               	goto	l9744
 11502                           
 11503                           ;stkvar	_e @ sp[(-56)+34]
 11504                           ;stkvar	_ne @ sp[(-56)+46]
 11505  010AF0  0EEA               	movlw	-22
 11506  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11507  010AF8  0EF6               	movlw	-10
 11508  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11509  010B00  0EEB               	movlw	-21
 11510  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11511  010B08  0EF7               	movlw	-9
 11512  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11513  010B10  D004               	goto	l1935
 11514  010B12                     l9744:
 11515                           
 11516                           ;stkvar	_ne @ sp[(-56)+46]
 11517  010B12  0EF6               	movlw	-10
 11518  010B14  6AE3               	clrf	plusw1,c
 11519  010B16  0EF7               	movlw	-9
 11520  010B18  6AE3               	clrf	plusw1,c
 11521  010B1A                     l1935:
 11522                           
 11523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11524                           ;stkvar	_pp @ sp[(-56)+50]
 11525  010B1A  0EFA               	movlw	-6
 11526  010B1C  6AE3               	clrf	plusw1,c
 11527  010B1E  0EFB               	movlw	-5
 11528  010B20  6AE3               	clrf	plusw1,c
 11529                           
 11530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11531                           ;stkvar	_t @ sp[(-56)+52]
 11532  010B22  0EFC               	movlw	-4
 11533  010B24  6AE3               	clrf	plusw1,c
 11534  010B26  0EFD               	movlw	-3
 11535  010B28  6AE3               	clrf	plusw1,c
 11536                           
 11537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11538                           ;stkvar	_i @ sp[(-56)+36]
 11539  010B2A  0EEC               	movlw	-20
 11540  010B2C  6AE3               	clrf	plusw1,c
 11541  010B2E  0EED               	movlw	-19
 11542  010B30  6AE3               	clrf	plusw1,c
 11543                           
 11544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11545  010B32  D1B7               	goto	l9796
 11546  010B34                     l9746:
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11549                           ;stkvar	_u @ sp[(-56)+12]
 11550  010B34  0ED4               	movlw	-44
 11551  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11552  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11553  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11554  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11555                           
 11556                           ;stkvar	_h @ sp[(-60)+24]
 11557  010B4E  0EDC               	movlw	-36
 11558  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11559  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11560  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11561  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11562  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11563  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11564  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11565  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11566  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11567  010B84  EC51  F0A2         	call	_floorf	;wreg free
 11568                           
 11569                           ;stkvar	_l @ sp[(-56)+20]
 11570  010B88  0EDC               	movlw	-36
 11571  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11572  010B90  0EDD               	movlw	-35
 11573  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11574  010B98  0EDE               	movlw	-34
 11575  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11576  010BA0  0EDF               	movlw	-33
 11577  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11580                           ;stkvar	_l @ sp[(-56)+20]
 11581  010BA8  0EDC               	movlw	-36
 11582  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11583  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11584  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11585  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11586  010BC2  EC45  F0B0         	call	___fltol	;wreg free
 11587  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11588  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11589                           
 11590                           ;stkvar	_d @ sp[(-56)+44]
 11591  010BD2  0EF4               	movlw	-12
 11592  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11593  010BDA  0EF5               	movlw	-11
 11594  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11597  010BE2  B81F               	btfsc	_flags^0,4,c
 11598  010BE4  D026               	goto	l9760
 11599                           
 11600                           ;stkvar	_d @ sp[(-56)+44]
 11601  010BE6  0EF4               	movlw	-12
 11602  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11603  010BEE  0EF5               	movlw	-11
 11604  010BF0  50E3               	movf	plusw1,w,c
 11605  010BF2  1032               	iorwf	btemp^0,w,c
 11606  010BF4  A4D8               	btfss	status,2,c
 11607  010BF6  D01D               	goto	l9760
 11608                           
 11609                           ;stkvar	_mode @ sp[(-56)+54]
 11610  010BF8  0EFE               	movlw	-2
 11611  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11612  010C00  0E67               	movlw	103
 11613  010C02  1832               	xorwf	btemp^0,w,c
 11614  010C04  A4D8               	btfss	status,2,c
 11615  010C06  D015               	goto	l9760
 11616                           
 11617                           ;stkvar	_ne @ sp[(-56)+46]
 11618  010C08  0EF7               	movlw	-9
 11619  010C0A  AEE3               	btfss	plusw1,7,c
 11620  010C0C  D012               	goto	l9760
 11621                           
 11622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11623                           ;stkvar	_t @ sp[(-56)+52]
 11624  010C0E  0EFC               	movlw	-4
 11625  010C10  50E3               	movf	plusw1,w,c
 11626  010C12  0F01               	addlw	1
 11627  010C14  6E32               	movwf	btemp^0,c
 11628  010C16  0EFC               	movlw	-4
 11629  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11630  010C1E  6A32               	clrf	btemp^0,c
 11631  010C20  0EFD               	movlw	-3
 11632  010C22  50E3               	movf	plusw1,w,c
 11633  010C24  2032               	addwfc	btemp^0,w,c
 11634  010C26  6E32               	movwf	btemp^0,c
 11635  010C28  0EFD               	movlw	-3
 11636  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11637                           
 11638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11639  010C30  D0AF               	goto	l9788
 11640  010C32                     l9760:
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11643                           ;stkvar	_pp @ sp[(-56)+50]
 11644  010C32  0EFA               	movlw	-6
 11645  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11646  010C3A  0EFB               	movlw	-5
 11647  010C3C  50E3               	movf	plusw1,w,c
 11648  010C3E  1032               	iorwf	btemp^0,w,c
 11649  010C40  A4D8               	btfss	status,2,c
 11650  010C42  D070               	goto	l9780
 11651                           
 11652                           ;stkvar	_ne @ sp[(-56)+46]
 11653  010C44  0EF7               	movlw	-9
 11654  010C46  AEE3               	btfss	plusw1,7,c
 11655  010C48  D06D               	goto	l9780
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11658                           ;stkvar	_n @ sp[(-56)+32]
 11659  010C4A  0EE8               	movlw	-24
 11660  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11661  010C52  0EE9               	movlw	-23
 11662  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11663  010C5A  0E78               	movlw	low _dbuf
 11664  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11665  010C5E  6ED9               	movwf	fsr2l,c
 11666  010C60  0E01               	movlw	high _dbuf
 11667  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11668  010C64  6EDA               	movwf	fsr2h,c
 11669  010C66  0E2E               	movlw	46
 11670  010C68  6EDF               	movwf	indf2,c
 11671                           
 11672                           ;stkvar	_n @ sp[(-56)+32]
 11673  010C6A  0EE8               	movlw	-24
 11674  010C6C  50E3               	movf	plusw1,w,c
 11675  010C6E  0F01               	addlw	1
 11676  010C70  6E32               	movwf	btemp^0,c
 11677  010C72  0EE8               	movlw	-24
 11678  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11679  010C7A  6A32               	clrf	btemp^0,c
 11680  010C7C  0EE9               	movlw	-23
 11681  010C7E  50E3               	movf	plusw1,w,c
 11682  010C80  2032               	addwfc	btemp^0,w,c
 11683  010C82  6E32               	movwf	btemp^0,c
 11684  010C84  0EE9               	movlw	-23
 11685  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11686                           
 11687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11688                           ;stkvar	_w @ sp[(-56)+38]
 11689  010C8C  50E1               	movf	fsr1l,w,c
 11690  010C8E  0FEE               	addlw	-18
 11691  010C90  6ED9               	movwf	fsr2l,c
 11692  010C92  50E2               	movf	fsr1h,w,c
 11693  010C94  6EDA               	movwf	fsr2h,c
 11694  010C96  0EFF               	movlw	255
 11695  010C98  22DA               	addwfc	fsr2h,f,c
 11696  010C9A  06DE               	decf	postinc2,f,c
 11697  010C9C  0E00               	movlw	0
 11698  010C9E  5ADD               	subwfb	postdec2,f,c
 11699                           
 11700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11701  010CA0  0E01               	movlw	1
 11702  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11703  010CA4  0E00               	movlw	0
 11704  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11705                           
 11706                           ;stkvar	_pp @ sp[(-56)+50]
 11707  010CA8  0EFA               	movlw	-6
 11708  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11709  010CB0  0EFB               	movlw	-5
 11710  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11711  010CB8  D035               	goto	l9780
 11712  010CBA                     l9772:
 11713                           
 11714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11715                           ;stkvar	_n @ sp[(-56)+32]
 11716  010CBA  0EE8               	movlw	-24
 11717  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11718  010CC2  0EE9               	movlw	-23
 11719  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11720  010CCA  0E78               	movlw	low _dbuf
 11721  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11722  010CCE  6ED9               	movwf	fsr2l,c
 11723  010CD0  0E01               	movlw	high _dbuf
 11724  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11725  010CD4  6EDA               	movwf	fsr2h,c
 11726  010CD6  0E30               	movlw	48
 11727  010CD8  6EDF               	movwf	indf2,c
 11728                           
 11729                           ;stkvar	_n @ sp[(-56)+32]
 11730  010CDA  0EE8               	movlw	-24
 11731  010CDC  50E3               	movf	plusw1,w,c
 11732  010CDE  0F01               	addlw	1
 11733  010CE0  6E32               	movwf	btemp^0,c
 11734  010CE2  0EE8               	movlw	-24
 11735  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11736  010CEA  6A32               	clrf	btemp^0,c
 11737  010CEC  0EE9               	movlw	-23
 11738  010CEE  50E3               	movf	plusw1,w,c
 11739  010CF0  2032               	addwfc	btemp^0,w,c
 11740  010CF2  6E32               	movwf	btemp^0,c
 11741  010CF4  0EE9               	movlw	-23
 11742  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11743                           
 11744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11745                           ;stkvar	_w @ sp[(-56)+38]
 11746  010CFC  50E1               	movf	fsr1l,w,c
 11747  010CFE  0FEE               	addlw	-18
 11748  010D00  6ED9               	movwf	fsr2l,c
 11749  010D02  50E2               	movf	fsr1h,w,c
 11750  010D04  6EDA               	movwf	fsr2h,c
 11751  010D06  0EFF               	movlw	255
 11752  010D08  22DA               	addwfc	fsr2h,f,c
 11753  010D0A  06DE               	decf	postinc2,f,c
 11754  010D0C  0E00               	movlw	0
 11755  010D0E  5ADD               	subwfb	postdec2,f,c
 11756                           
 11757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11758                           ;stkvar	_t @ sp[(-56)+52]
 11759  010D10  50E1               	movf	fsr1l,w,c
 11760  010D12  0FFC               	addlw	-4
 11761  010D14  6ED9               	movwf	fsr2l,c
 11762  010D16  50E2               	movf	fsr1h,w,c
 11763  010D18  6EDA               	movwf	fsr2h,c
 11764  010D1A  0EFF               	movlw	255
 11765  010D1C  22DA               	addwfc	fsr2h,f,c
 11766  010D1E  06DE               	decf	postinc2,f,c
 11767  010D20  0E00               	movlw	0
 11768  010D22  5ADD               	subwfb	postdec2,f,c
 11769  010D24                     l9780:
 11770                           
 11771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11772                           ;stkvar	_t @ sp[(-56)+52]
 11773  010D24  0EFC               	movlw	-4
 11774  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11775  010D2C  0EFD               	movlw	-3
 11776  010D2E  50E3               	movf	plusw1,w,c
 11777  010D30  1032               	iorwf	btemp^0,w,c
 11778  010D32  A4D8               	btfss	status,2,c
 11779  010D34  D7C2               	goto	l9772
 11780                           
 11781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11782                           ;stkvar	_n @ sp[(-56)+32]
 11783  010D36  0EE8               	movlw	-24
 11784  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11785  010D3E  0EE9               	movlw	-23
 11786  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11787  010D46  0E78               	movlw	low _dbuf
 11788  010D48  243C               	addwf	(btemp+10)^0,w,c
 11789  010D4A  6ED9               	movwf	fsr2l,c
 11790  010D4C  0E01               	movlw	high _dbuf
 11791  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11792  010D50  6EDA               	movwf	fsr2h,c
 11793                           
 11794                           ;stkvar	_d @ sp[(-56)+44]
 11795  010D52  0EF4               	movlw	-12
 11796  010D54  50E3               	movf	plusw1,w,c
 11797  010D56  0F30               	addlw	48
 11798  010D58  6EDF               	movwf	indf2,c
 11799                           
 11800                           ;stkvar	_n @ sp[(-56)+32]
 11801  010D5A  0EE8               	movlw	-24
 11802  010D5C  50E3               	movf	plusw1,w,c
 11803  010D5E  0F01               	addlw	1
 11804  010D60  6E32               	movwf	btemp^0,c
 11805  010D62  0EE8               	movlw	-24
 11806  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11807  010D6A  6A32               	clrf	btemp^0,c
 11808  010D6C  0EE9               	movlw	-23
 11809  010D6E  50E3               	movf	plusw1,w,c
 11810  010D70  2032               	addwfc	btemp^0,w,c
 11811  010D72  6E32               	movwf	btemp^0,c
 11812  010D74  0EE9               	movlw	-23
 11813  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11814                           
 11815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11816                           ;stkvar	_w @ sp[(-56)+38]
 11817  010D7C  50E1               	movf	fsr1l,w,c
 11818  010D7E  0FEE               	addlw	-18
 11819  010D80  6ED9               	movwf	fsr2l,c
 11820  010D82  50E2               	movf	fsr1h,w,c
 11821  010D84  6EDA               	movwf	fsr2h,c
 11822  010D86  0EFF               	movlw	255
 11823  010D88  22DA               	addwfc	fsr2h,f,c
 11824  010D8A  06DE               	decf	postinc2,f,c
 11825  010D8C  0E00               	movlw	0
 11826  010D8E  5ADD               	subwfb	postdec2,f,c
 11827  010D90                     l9788:
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11830                           ;stkvar	_u @ sp[(-56)+12]
 11831  010D90  0ED4               	movlw	-44
 11832  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11833  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11834  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11836                           
 11837                           ;stkvar	_l @ sp[(-60)+20]
 11838  010DAA  0ED8               	movlw	-40
 11839  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11843  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11844  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11845  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11846  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11847  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11848                           
 11849                           ;stkvar	_h @ sp[(-60)+24]
 11850  010DE0  0EDC               	movlw	-36
 11851  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11852  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11853  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11854  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11855  010DFA  EC4B  F0BF         	call	___flsub	;wreg free
 11856                           
 11857                           ;stkvar	_h @ sp[(-56)+24]
 11858  010DFE  0EE0               	movlw	-32
 11859  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11860  010E06  0EE1               	movlw	-31
 11861  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11862  010E0E  0EE2               	movlw	-30
 11863  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11864  010E16  0EE3               	movlw	-29
 11865  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11866                           
 11867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11868  010E1E  0E00               	movlw	0
 11869  010E20  6EE6               	movwf	postinc1,c
 11870  010E22  0E00               	movlw	0
 11871  010E24  6EE6               	movwf	postinc1,c
 11872  010E26  0E20               	movlw	32
 11873  010E28  6EE6               	movwf	postinc1,c
 11874  010E2A  0E41               	movlw	65
 11875  010E2C  6EE6               	movwf	postinc1,c
 11876                           
 11877                           ;stkvar	_u @ sp[(-60)+12]
 11878  010E2E  0ED0               	movlw	-48
 11879  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11880  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11881  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11882  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11883  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11884                           
 11885                           ;stkvar	_u @ sp[(-56)+12]
 11886  010E4C  0ED4               	movlw	-44
 11887  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11888  010E54  0ED5               	movlw	-43
 11889  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11890  010E5C  0ED6               	movlw	-42
 11891  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11892  010E64  0ED7               	movlw	-41
 11893  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11894                           
 11895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11896                           ;stkvar	_ne @ sp[(-56)+46]
 11897  010E6C  50E1               	movf	fsr1l,w,c
 11898  010E6E  0FF6               	addlw	-10
 11899  010E70  6ED9               	movwf	fsr2l,c
 11900  010E72  50E2               	movf	fsr1h,w,c
 11901  010E74  6EDA               	movwf	fsr2h,c
 11902  010E76  0EFF               	movlw	255
 11903  010E78  22DA               	addwfc	fsr2h,f,c
 11904  010E7A  06DE               	decf	postinc2,f,c
 11905  010E7C  0E00               	movlw	0
 11906  010E7E  5ADD               	subwfb	postdec2,f,c
 11907                           
 11908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11909                           ;stkvar	_i @ sp[(-56)+36]
 11910  010E80  0EEC               	movlw	-20
 11911  010E82  50E3               	movf	plusw1,w,c
 11912  010E84  0F01               	addlw	1
 11913  010E86  6E32               	movwf	btemp^0,c
 11914  010E88  0EEC               	movlw	-20
 11915  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11916  010E90  6A32               	clrf	btemp^0,c
 11917  010E92  0EED               	movlw	-19
 11918  010E94  50E3               	movf	plusw1,w,c
 11919  010E96  2032               	addwfc	btemp^0,w,c
 11920  010E98  6E32               	movwf	btemp^0,c
 11921  010E9A  0EED               	movlw	-19
 11922  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11923  010EA2                     l9796:
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11926                           ;stkvar	_m @ sp[(-56)+48]
 11927                           ;stkvar	_i @ sp[(-56)+36]
 11928  010EA2  50E1               	movf	fsr1l,w,c
 11929  010EA4  0FEC               	addlw	-20
 11930  010EA6  6ED9               	movwf	fsr2l,c
 11931  010EA8  50E2               	movf	fsr1h,w,c
 11932  010EAA  6EDA               	movwf	fsr2h,c
 11933  010EAC  0EFF               	movlw	255
 11934  010EAE  22DA               	addwfc	fsr2h,f,c
 11935  010EB0  0EF8               	movlw	-8
 11936  010EB2  50E3               	movf	plusw1,w,c
 11937  010EB4  5CDE               	subwf	postinc2,w,c
 11938  010EB6  50DE               	movf	postinc2,w,c
 11939  010EB8  0A80               	xorlw	128
 11940  010EBA  6E32               	movwf	btemp^0,c
 11941  010EBC  0EF9               	movlw	-7
 11942  010EBE  50E3               	movf	plusw1,w,c
 11943  010EC0  0A80               	xorlw	128
 11944  010EC2  5832               	subwfb	btemp^0,w,c
 11945  010EC4  B0D8               	btfsc	status,0,c
 11946  010EC6  D00E               	goto	u9620
 11947                           
 11948                           ;stkvar	_n @ sp[(-56)+32]
 11949  010EC8  0EE9               	movlw	-23
 11950  010ECA  BEE3               	btfsc	plusw1,7,c
 11951  010ECC  D633               	goto	l9746
 11952  010ECE  0EE9               	movlw	-23
 11953  010ED0  50E3               	movf	plusw1,w,c
 11954  010ED2  E108               	bnz	u9620
 11955  010ED4  0EE8               	movlw	-24
 11956  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11957  010EDC  0E4B               	movlw	75
 11958  010EDE  5E32               	subwf	btemp^0,f,c
 11959  010EE0  A0D8               	btfss	status,0,c
 11960  010EE2  D628               	goto	l9746
 11961  010EE4                     u9620:
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11964                           ;stkvar	_pp @ sp[(-56)+50]
 11965  010EE4  0EFA               	movlw	-6
 11966  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11967  010EEC  0EFB               	movlw	-5
 11968  010EEE  50E3               	movf	plusw1,w,c
 11969  010EF0  1032               	iorwf	btemp^0,w,c
 11970  010EF2  B4D8               	btfsc	status,2,c
 11971  010EF4  A81F               	btfss	_flags^0,4,c
 11972  010EF6  D021               	goto	l9808
 11973                           
 11974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11975                           ;stkvar	_n @ sp[(-56)+32]
 11976  010EF8  0EE8               	movlw	-24
 11977  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11978  010F00  0EE9               	movlw	-23
 11979  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11980  010F08  0E78               	movlw	low _dbuf
 11981  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11982  010F0C  6ED9               	movwf	fsr2l,c
 11983  010F0E  0E01               	movlw	high _dbuf
 11984  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11985  010F12  6EDA               	movwf	fsr2h,c
 11986  010F14  0E2E               	movlw	46
 11987  010F16  6EDF               	movwf	indf2,c
 11988                           
 11989                           ;stkvar	_n @ sp[(-56)+32]
 11990  010F18  0EE8               	movlw	-24
 11991  010F1A  50E3               	movf	plusw1,w,c
 11992  010F1C  0F01               	addlw	1
 11993  010F1E  6E32               	movwf	btemp^0,c
 11994  010F20  0EE8               	movlw	-24
 11995  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11996  010F28  6A32               	clrf	btemp^0,c
 11997  010F2A  0EE9               	movlw	-23
 11998  010F2C  50E3               	movf	plusw1,w,c
 11999  010F2E  2032               	addwfc	btemp^0,w,c
 12000  010F30  6E32               	movwf	btemp^0,c
 12001  010F32  0EE9               	movlw	-23
 12002  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12003  010F3A                     l9808:
 12004                           
 12005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12006                           ;stkvar	_n @ sp[(-56)+32]
 12007  010F3A  0EE8               	movlw	-24
 12008  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12009  010F42  0EE9               	movlw	-23
 12010  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12011  010F4A  0E78               	movlw	low _dbuf
 12012  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12013  010F4E  6ED9               	movwf	fsr2l,c
 12014  010F50  0E01               	movlw	high _dbuf
 12015  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12016  010F54  6EDA               	movwf	fsr2h,c
 12017  010F56  0E00               	movlw	0
 12018  010F58  6EDF               	movwf	indf2,c
 12019                           
 12020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12021                           ;stkvar	_nmode @ sp[(-56)+55]
 12022  010F5A  0EFF               	movlw	-1
 12023  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12024  010F62  0E65               	movlw	101
 12025  010F64  1832               	xorwf	btemp^0,w,c
 12026  010F66  A4D8               	btfss	status,2,c
 12027  010F68  EF16  F081         	goto	l9612
 12028                           
 12029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12030  010F6C  0E4F               	movlw	79
 12031  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12032  010F70  0E00               	movlw	0
 12033  010F72  6E3D               	movwf	(btemp+11)^0,c
 12034                           
 12035                           ;stkvar	_i @ sp[(-56)+36]
 12036  010F74  0EEC               	movlw	-20
 12037  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12038  010F7C  0EED               	movlw	-19
 12039  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12040                           
 12041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12042                           ;stkvar	_i @ sp[(-56)+36]
 12043  010F84  0EEC               	movlw	-20
 12044  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12045  010F8C  0EED               	movlw	-19
 12046  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12047  010F94  0E78               	movlw	low _dbuf
 12048  010F96  243C               	addwf	(btemp+10)^0,w,c
 12049  010F98  6ED9               	movwf	fsr2l,c
 12050  010F9A  0E01               	movlw	high _dbuf
 12051  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12052  010F9E  6EDA               	movwf	fsr2h,c
 12053  010FA0  0E00               	movlw	0
 12054  010FA2  6EDF               	movwf	indf2,c
 12055                           
 12056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12057                           ;stkvar	_sign @ sp[(-56)+42]
 12058  010FA4  0EF2               	movlw	-14
 12059  010FA6  6AE3               	clrf	plusw1,c
 12060  010FA8  0EF3               	movlw	-13
 12061  010FAA  6AE3               	clrf	plusw1,c
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12064                           ;stkvar	_e @ sp[(-56)+34]
 12065  010FAC  0EEB               	movlw	-21
 12066  010FAE  AEE3               	btfss	plusw1,7,c
 12067  010FB0  D012               	goto	l9822
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12070  010FB2  0E01               	movlw	1
 12071  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12072  010FB6  0E00               	movlw	0
 12073  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12074                           
 12075                           ;stkvar	_sign @ sp[(-56)+42]
 12076  010FBA  0EF2               	movlw	-14
 12077  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12078  010FC2  0EF3               	movlw	-13
 12079  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12080                           
 12081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12082                           ;stkvar	_e @ sp[(-56)+34]
 12083                           ;stkvar	_e @ sp[(-56)+34]
 12084  010FCA  0EEA               	movlw	-22
 12085  010FCC  6CE3               	negf	plusw1,c
 12086  010FCE  0EEB               	movlw	-21
 12087  010FD0  1EE3               	comf	plusw1,f,c
 12088  010FD2  B0D8               	btfsc	status,0,c
 12089  010FD4  2AE3               	incf	plusw1,f,c
 12090  010FD6                     l9822:
 12091                           
 12092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12093  010FD6  0E02               	movlw	2
 12094  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12095  010FDA  0E00               	movlw	0
 12096  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12097                           
 12098                           ;stkvar	_p @ sp[(-56)+40]
 12099  010FDE  0EF0               	movlw	-16
 12100  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12101  010FE6  0EF1               	movlw	-15
 12102  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12103                           
 12104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12105  010FEE  D051               	goto	l9834
 12106  010FF0                     l9824:
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12109                           ;stkvar	_i @ sp[(-56)+36]
 12110  010FF0  50E1               	movf	fsr1l,w,c
 12111  010FF2  0FEC               	addlw	-20
 12112  010FF4  6ED9               	movwf	fsr2l,c
 12113  010FF6  50E2               	movf	fsr1h,w,c
 12114  010FF8  6EDA               	movwf	fsr2h,c
 12115  010FFA  0EFF               	movlw	255
 12116  010FFC  22DA               	addwfc	fsr2h,f,c
 12117  010FFE  06DE               	decf	postinc2,f,c
 12118  011000  0E00               	movlw	0
 12119  011002  5ADD               	subwfb	postdec2,f,c
 12120                           
 12121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12122                           ;stkvar	_i @ sp[(-56)+36]
 12123  011004  0EEC               	movlw	-20
 12124  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12125  01100C  0EED               	movlw	-19
 12126  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12127  011014  0E78               	movlw	low _dbuf
 12128  011016  243C               	addwf	(btemp+10)^0,w,c
 12129  011018  6ED9               	movwf	fsr2l,c
 12130  01101A  0E01               	movlw	high _dbuf
 12131  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12132  01101E  6EDA               	movwf	fsr2h,c
 12133  011020  0E0A               	movlw	10
 12134  011022  6EE6               	movwf	postinc1,c
 12135  011024  0E00               	movlw	0
 12136  011026  6EE6               	movwf	postinc1,c
 12137                           
 12138                           ;stkvar	_e @ sp[(-58)+34]
 12139  011028  0EE8               	movlw	-24
 12140  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12141  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12142  011036  EC23  F0B4         	call	___awmod	;wreg free
 12143  01103A  5032               	movf	btemp^0,w,c
 12144  01103C  0F30               	addlw	48
 12145  01103E  6EDF               	movwf	indf2,c
 12146                           
 12147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12148  011040  0E0A               	movlw	10
 12149  011042  6EE6               	movwf	postinc1,c
 12150  011044  0E00               	movlw	0
 12151  011046  6EE6               	movwf	postinc1,c
 12152                           
 12153                           ;stkvar	_e @ sp[(-58)+34]
 12154  011048  0EE8               	movlw	-24
 12155  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12156  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12157  011056  ECAF  F0B1         	call	___awdiv	;wreg free
 12158                           
 12159                           ;stkvar	_e @ sp[(-56)+34]
 12160  01105A  0EEA               	movlw	-22
 12161  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12162  011062  0EEB               	movlw	-21
 12163  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12164                           
 12165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12166                           ;stkvar	_p @ sp[(-56)+40]
 12167  01106A  50E1               	movf	fsr1l,w,c
 12168  01106C  0FF0               	addlw	-16
 12169  01106E  6ED9               	movwf	fsr2l,c
 12170  011070  50E2               	movf	fsr1h,w,c
 12171  011072  6EDA               	movwf	fsr2h,c
 12172  011074  0EFF               	movlw	255
 12173  011076  22DA               	addwfc	fsr2h,f,c
 12174  011078  06DE               	decf	postinc2,f,c
 12175  01107A  0E00               	movlw	0
 12176  01107C  5ADD               	subwfb	postdec2,f,c
 12177                           
 12178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12179                           ;stkvar	_w @ sp[(-56)+38]
 12180  01107E  50E1               	movf	fsr1l,w,c
 12181  011080  0FEE               	addlw	-18
 12182  011082  6ED9               	movwf	fsr2l,c
 12183  011084  50E2               	movf	fsr1h,w,c
 12184  011086  6EDA               	movwf	fsr2h,c
 12185  011088  0EFF               	movlw	255
 12186  01108A  22DA               	addwfc	fsr2h,f,c
 12187  01108C  06DE               	decf	postinc2,f,c
 12188  01108E  0E00               	movlw	0
 12189  011090  5ADD               	subwfb	postdec2,f,c
 12190  011092                     l9834:
 12191                           
 12192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12193                           ;stkvar	_e @ sp[(-56)+34]
 12194  011092  0EEA               	movlw	-22
 12195  011094  006F FF8C  F032    	movff	plusw1,btemp
 12196  01109A  0EEB               	movlw	-21
 12197  01109C  50E3               	movf	plusw1,w,c
 12198  01109E  1032               	iorwf	btemp^0,w,c
 12199  0110A0  A4D8               	btfss	status,2,c
 12200  0110A2  D7A6               	goto	l9824
 12201                           
 12202                           ;stkvar	_p @ sp[(-56)+40]
 12203  0110A4  0EF1               	movlw	-15
 12204  0110A6  BEE3               	btfsc	plusw1,7,c
 12205  0110A8  D007               	goto	u9680
 12206  0110AA  0EF1               	movlw	-15
 12207  0110AC  50E3               	movf	plusw1,w,c
 12208  0110AE  E1A0               	bnz	l9824
 12209  0110B0  0EF0               	movlw	-16
 12210  0110B2  04E3               	decf	plusw1,w,c
 12211  0110B4  B0D8               	btfsc	status,0,c
 12212  0110B6  D79C               	goto	l9824
 12213  0110B8                     u9680:
 12214                           
 12215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12216                           ;stkvar	_i @ sp[(-56)+36]
 12217  0110B8  50E1               	movf	fsr1l,w,c
 12218  0110BA  0FEC               	addlw	-20
 12219  0110BC  6ED9               	movwf	fsr2l,c
 12220  0110BE  50E2               	movf	fsr1h,w,c
 12221  0110C0  6EDA               	movwf	fsr2h,c
 12222  0110C2  0EFF               	movlw	255
 12223  0110C4  22DA               	addwfc	fsr2h,f,c
 12224  0110C6  06DE               	decf	postinc2,f,c
 12225  0110C8  0E00               	movlw	0
 12226  0110CA  5ADD               	subwfb	postdec2,f,c
 12227                           
 12228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12229                           ;stkvar	_sign @ sp[(-56)+42]
 12230  0110CC  0EF2               	movlw	-14
 12231  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12232  0110D4  0EF3               	movlw	-13
 12233  0110D6  50E3               	movf	plusw1,w,c
 12234  0110D8  1032               	iorwf	btemp^0,w,c
 12235  0110DA  A4D8               	btfss	status,2,c
 12236  0110DC  D002               	goto	l9844
 12237  0110DE  0E2B               	movlw	43
 12238  0110E0  D001               	goto	L11
 12239  0110E2                     l9844:
 12240  0110E2  0E2D               	movlw	45
 12241  0110E4                     L11:
 12242  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12243  0110E6  0E00               	movlw	0
 12244  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12245                           
 12246                           ;stkvar	_efgtoa$4477 @ sp[(-56)+4]
 12247  0110EA  0ECC               	movlw	-52
 12248  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12249  0110F2  0ECD               	movlw	-51
 12250  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12251                           
 12252                           ;stkvar	_efgtoa$4477 @ sp[(-56)+4]
 12253                           ;stkvar	_i @ sp[(-56)+36]
 12254  0110FA  0EEC               	movlw	-20
 12255  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12256  011102  0EED               	movlw	-19
 12257  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12258  01110A  0E78               	movlw	low _dbuf
 12259  01110C  243C               	addwf	(btemp+10)^0,w,c
 12260  01110E  6ED9               	movwf	fsr2l,c
 12261  011110  0E01               	movlw	high _dbuf
 12262  011112  203D               	addwfc	(btemp+11)^0,w,c
 12263  011114  6EDA               	movwf	fsr2h,c
 12264  011116  0ECC               	movlw	-52
 12265  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12266                           
 12267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12268                           ;stkvar	_w @ sp[(-56)+38]
 12269  01111E  50E1               	movf	fsr1l,w,c
 12270  011120  0FEE               	addlw	-18
 12271  011122  6ED9               	movwf	fsr2l,c
 12272  011124  50E2               	movf	fsr1h,w,c
 12273  011126  6EDA               	movwf	fsr2h,c
 12274  011128  0EFF               	movlw	255
 12275  01112A  22DA               	addwfc	fsr2h,f,c
 12276  01112C  06DE               	decf	postinc2,f,c
 12277  01112E  0E00               	movlw	0
 12278  011130  5ADD               	subwfb	postdec2,f,c
 12279                           
 12280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12281                           ;stkvar	_i @ sp[(-56)+36]
 12282  011132  50E1               	movf	fsr1l,w,c
 12283  011134  0FEC               	addlw	-20
 12284  011136  6ED9               	movwf	fsr2l,c
 12285  011138  50E2               	movf	fsr1h,w,c
 12286  01113A  6EDA               	movwf	fsr2h,c
 12287  01113C  0EFF               	movlw	255
 12288  01113E  22DA               	addwfc	fsr2h,f,c
 12289  011140  06DE               	decf	postinc2,f,c
 12290  011142  0E00               	movlw	0
 12291  011144  5ADD               	subwfb	postdec2,f,c
 12292  011146  0EBF               	movlw	191
 12293  011148  6E3C               	movwf	(btemp+10)^0,c
 12294  01114A  0EFF               	movlw	255
 12295  01114C  6E3D               	movwf	(btemp+11)^0,c
 12296                           
 12297                           ;stkvar	_c @ sp[(-56)+-7]
 12298  01114E  0EC1               	movlw	-63
 12299  011150  50E3               	movf	plusw1,w,c
 12300  011152  6E3A               	movwf	(btemp+8)^0,c
 12301  011154  6A3B               	clrf	(btemp+9)^0,c
 12302  011156  503C               	movf	(btemp+10)^0,w,c
 12303  011158  263A               	addwf	(btemp+8)^0,f,c
 12304  01115A  503D               	movf	(btemp+11)^0,w,c
 12305  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12306  01115E  503B               	movf	(btemp+9)^0,w,c
 12307  011160  E106               	bnz	u9700
 12308  011162  0E1A               	movlw	26
 12309  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12310  011166  B0D8               	btfsc	status,0,c
 12311  011168  D002               	goto	u9700
 12312  01116A  0E01               	movlw	1
 12313  01116C  D001               	goto	u9710
 12314  01116E                     u9700:
 12315  01116E  0E00               	movlw	0
 12316  011170                     u9710:
 12317  011170  6E3C               	movwf	(btemp+10)^0,c
 12318  011172  6A3D               	clrf	(btemp+11)^0,c
 12319                           
 12320                           ;stkvar	_efgtoa$4479 @ sp[(-56)+0]
 12321  011174  0EC8               	movlw	-56
 12322  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12323  01117C  0EC9               	movlw	-55
 12324  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12325                           
 12326                           ;stkvar	_efgtoa$4479 @ sp[(-56)+0]
 12327  011184  0EC8               	movlw	-56
 12328  011186  006F FF8C  F032    	movff	plusw1,btemp
 12329  01118C  0EC9               	movlw	-55
 12330  01118E  50E3               	movf	plusw1,w,c
 12331  011190  1032               	iorwf	btemp^0,w,c
 12332  011192  A4D8               	btfss	status,2,c
 12333  011194  D002               	goto	l9860
 12334  011196  0E65               	movlw	101
 12335  011198  D001               	goto	L12
 12336  01119A                     l9860:
 12337  01119A  0E45               	movlw	69
 12338  01119C                     L12:
 12339  01119C  6E3C               	movwf	(btemp+10)^0,c
 12340  01119E  0E00               	movlw	0
 12341  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12342                           
 12343                           ;stkvar	_efgtoa$4478 @ sp[(-56)+2]
 12344  0111A2  0ECA               	movlw	-54
 12345  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12346  0111AA  0ECB               	movlw	-53
 12347  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12348                           
 12349                           ;stkvar	_efgtoa$4478 @ sp[(-56)+2]
 12350                           ;stkvar	_i @ sp[(-56)+36]
 12351  0111B2  0EEC               	movlw	-20
 12352  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12353  0111BA  0EED               	movlw	-19
 12354  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12355  0111C2  0E78               	movlw	low _dbuf
 12356  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12357  0111C6  6ED9               	movwf	fsr2l,c
 12358  0111C8  0E01               	movlw	high _dbuf
 12359  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12360  0111CC  6EDA               	movwf	fsr2h,c
 12361  0111CE  0ECA               	movlw	-54
 12362  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12365                           ;stkvar	_w @ sp[(-56)+38]
 12366  0111D6  50E1               	movf	fsr1l,w,c
 12367  0111D8  0FEE               	addlw	-18
 12368  0111DA  6ED9               	movwf	fsr2l,c
 12369  0111DC  50E2               	movf	fsr1h,w,c
 12370  0111DE  6EDA               	movwf	fsr2h,c
 12371  0111E0  0EFF               	movlw	255
 12372  0111E2  22DA               	addwfc	fsr2h,f,c
 12373  0111E4  06DE               	decf	postinc2,f,c
 12374  0111E6  0E00               	movlw	0
 12375  0111E8  5ADD               	subwfb	postdec2,f,c
 12376                           
 12377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12378                           ;stkvar	_i @ sp[(-56)+36]
 12379  0111EA  0EEC               	movlw	-20
 12380  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12381  0111F2  0EED               	movlw	-19
 12382  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12383  0111FA  0E78               	movlw	low _dbuf
 12384  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12385  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12386  011200  0E01               	movlw	high _dbuf
 12387  011202  203D               	addwfc	(btemp+11)^0,w,c
 12388  011204  6E3B               	movwf	(btemp+9)^0,c
 12389  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12390  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12391                           
 12392                           ;stkvar	_n @ sp[(-58)+32]
 12393  011212  0E78               	movlw	low _dbuf
 12394  011214  6E3C               	movwf	(btemp+10)^0,c
 12395  011216  0E01               	movlw	high _dbuf
 12396  011218  6E3D               	movwf	(btemp+11)^0,c
 12397  01121A  0EE6               	movlw	-26
 12398  01121C  50E3               	movf	plusw1,w,c
 12399  01121E  263C               	addwf	(btemp+10)^0,f,c
 12400  011220  0EE7               	movlw	-25
 12401  011222  50E3               	movf	plusw1,w,c
 12402  011224  223D               	addwfc	(btemp+11)^0,f,c
 12403  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12404  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12405  011232  EC34  F0B7         	call	_strcpy	;wreg free
 12406  011236  EF16  F081         	goto	l9612
 12407  01123A                     l1891:
 12408                           
 12409                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12410  01123A  0EC1               	movlw	193
 12411  01123C  26E1               	addwf	fsr1l,f,c
 12412  01123E  0EFF               	movlw	255
 12413  011240  22E2               	addwfc	fsr1h,f,c
 12414  011242  0012               	return		;funcret
 12415  011244                     __end_of_efgtoa:
 12416                           	opt callstack 0
 12417                           
 12418 ;; *************** function _tolower *****************
 12419 ;; Defined at:
 12420 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;  c               2  [STACK] int 
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  2  [STACK] int 
 12427 ;; Registers used:
 12428 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/5
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12438 ;;Total ram usage:        0 bytes
 12439 ;; Hardware stack levels used:    1
 12440 ;; Hardware stack levels required when called:    7
 12441 ;; This function calls:
 12442 ;;		_isupper
 12443 ;; This function is called by:
 12444 ;;		_efgtoa
 12445 ;;		_vfpfcnvrt
 12446 ;; This function uses a reentrant model
 12447 ;;
 12448                           
 12449                           	psect	text46
 12450  01774A                     __ptext46:
 12451                           	opt callstack 0
 12452  01774A                     _tolower:
 12453                           	opt callstack 0
 12454                           
 12455                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12456  01774A  52E6               	movf	postinc1,f,c
 12457  01774C  52E6               	movf	postinc1,f,c
 12458                           
 12459                           ;stkvar	_c @ sp[(-2)+-2]
 12460                           
 12461                           ;incstack = 0
 12462  01774E  0EFC               	movlw	-4
 12463  017750  50E3               	movf	plusw1,w,c
 12464  017752  0FBF               	addlw	191
 12465  017754  6E3C               	movwf	(btemp+10)^0,c
 12466  017756  0EFD               	movlw	-3
 12467  017758  006F FF8C  F03D    	movff	plusw1,btemp+11
 12468  01775E  0EFF               	movlw	255
 12469  017760  223D               	addwfc	(btemp+11)^0,f,c
 12470  017762  503D               	movf	(btemp+11)^0,w,c
 12471  017764  E106               	bnz	u5160
 12472  017766  0E1A               	movlw	26
 12473  017768  5C3C               	subwf	(btemp+10)^0,w,c
 12474  01776A  B0D8               	btfsc	status,0,c
 12475  01776C  D002               	goto	u5160
 12476  01776E  0E01               	movlw	1
 12477  017770  D001               	goto	u5170
 12478  017772                     u5160:
 12479  017772  0E00               	movlw	0
 12480  017774                     u5170:
 12481  017774  6E3C               	movwf	(btemp+10)^0,c
 12482  017776  6A3D               	clrf	(btemp+11)^0,c
 12483                           
 12484                           ;stkvar	_tolower$5145 @ sp[(-2)+0]
 12485  017778  0EFE               	movlw	-2
 12486  01777A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12487  017780  0EFF               	movlw	-1
 12488  017782  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12489                           
 12490                           ;stkvar	_tolower$5145 @ sp[(-2)+0]
 12491  017788  0EFE               	movlw	-2
 12492  01778A  006F FF8C  F032    	movff	plusw1,btemp
 12493  017790  0EFF               	movlw	-1
 12494  017792  50E3               	movf	plusw1,w,c
 12495  017794  1032               	iorwf	btemp^0,w,c
 12496  017796  B4D8               	btfsc	status,2,c
 12497  017798  D00D               	goto	l6552
 12498                           
 12499                           ;stkvar	_c @ sp[(-2)+-2]
 12500  01779A  0EFC               	movlw	-4
 12501  01779C  006F FF8C  F032    	movff	plusw1,btemp
 12502  0177A2  0EFD               	movlw	-3
 12503  0177A4  006F FF8C  F033    	movff	plusw1,btemp+1
 12504  0177AA  0E20               	movlw	32
 12505  0177AC  1232               	iorwf	btemp^0,f,c
 12506  0177AE  0E00               	movlw	0
 12507  0177B0  1233               	iorwf	(btemp+1)^0,f,c
 12508  0177B2  D008               	goto	l2914
 12509  0177B4                     l6552:
 12510                           
 12511                           ;stkvar	_c @ sp[(-2)+-2]
 12512  0177B4  0EFC               	movlw	-4
 12513  0177B6  006F FF8C  F032    	movff	plusw1,btemp
 12514  0177BC  0EFD               	movlw	-3
 12515  0177BE  006F FF8C  F033    	movff	plusw1,btemp+1
 12516  0177C4                     l2914:
 12517                           
 12518                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12519  0177C4  52E5               	movf	postdec1,f,c
 12520  0177C6  52E5               	movf	postdec1,f,c
 12521  0177C8  52E5               	movf	postdec1,f,c
 12522  0177CA  52E5               	movf	postdec1,f,c
 12523  0177CC  0012               	return		;funcret
 12524  0177CE                     __end_of_tolower:
 12525                           	opt callstack 0
 12526                           
 12527 ;; *************** function _isupper *****************
 12528 ;; Defined at:
 12529 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  c               2  [STACK] int 
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  2  [STACK] int 
 12536 ;; Registers used:
 12537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;Total ram usage:        0 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; Hardware stack levels required when called:    6
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_efgtoa
 12554 ;;		_xtoa
 12555 ;;		_vfpfcnvrt
 12556 ;;		_tolower
 12557 ;; This function uses a reentrant model
 12558 ;;
 12559                           
 12560                           	psect	text47
 12561  018260                     __ptext47:
 12562                           	opt callstack 0
 12563  018260                     _isupper:
 12564                           	opt callstack 17
 12565                           
 12566                           ;stkvar	_c @ sp[(0)+-2]
 12567                           
 12568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12569                           ;incstack = 0
 12570  018260  0EFE               	movlw	-2
 12571  018262  50E3               	movf	plusw1,w,c
 12572  018264  0FBF               	addlw	191
 12573  018266  6E3C               	movwf	(btemp+10)^0,c
 12574  018268  0EFF               	movlw	-1
 12575  01826A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12576  018270  0EFF               	movlw	255
 12577  018272  223D               	addwfc	(btemp+11)^0,f,c
 12578  018274  503D               	movf	(btemp+11)^0,w,c
 12579  018276  E106               	bnz	u4560
 12580  018278  0E1A               	movlw	26
 12581  01827A  5C3C               	subwf	(btemp+10)^0,w,c
 12582  01827C  B0D8               	btfsc	status,0,c
 12583  01827E  D002               	goto	u4560
 12584  018280  0E01               	movlw	1
 12585  018282  D001               	goto	u4570
 12586  018284                     u4560:
 12587  018284  0E00               	movlw	0
 12588  018286                     u4570:
 12589  018286  6E32               	movwf	btemp^0,c
 12590  018288  6A33               	clrf	(btemp+1)^0,c
 12591                           
 12592                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12593  01828A  52E5               	movf	postdec1,f,c
 12594  01828C  52E5               	movf	postdec1,f,c
 12595  01828E  0012               	return		;funcret
 12596  018290                     __end_of_isupper:
 12597                           	opt callstack 0
 12598                           
 12599 ;; *************** function _strcpy *****************
 12600 ;; Defined at:
 12601 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  dest            2  [STACK] PTR unsigned char 
 12604 ;;		 -> dbuf(80), 
 12605 ;;  src             2  [STACK] PTR const unsigned char 
 12606 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12607 ;;		 -> dbuf(80), 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  d               2  [STACK] PTR unsigned char 
 12610 ;;		 -> dbuf(80), 
 12611 ;;  s               2  [STACK] PTR const unsigned char 
 12612 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12613 ;;		 -> dbuf(80), 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  2  [STACK] PTR unsigned char 
 12616 ;; Registers used:
 12617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/5
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    6
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_efgtoa
 12634 ;; This function uses a reentrant model
 12635 ;;
 12636                           
 12637                           	psect	text48
 12638  016E68                     __ptext48:
 12639                           	opt callstack 0
 12640  016E68                     _strcpy:
 12641                           	opt callstack 0
 12642                           
 12643                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12644  016E68  52E6               	movf	postinc1,f,c
 12645  016E6A  52E6               	movf	postinc1,f,c
 12646  016E6C  52E6               	movf	postinc1,f,c
 12647  016E6E  52E6               	movf	postinc1,f,c
 12648                           
 12649                           ;stkvar	_src @ sp[(-4)+-4]
 12650                           
 12651                           ;incstack = 0
 12652  016E70  0EF8               	movlw	-8
 12653  016E72  006F FF8C  F03C    	movff	plusw1,btemp+10
 12654  016E78  0EF9               	movlw	-7
 12655  016E7A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12656                           
 12657                           ;stkvar	_s @ sp[(-4)+2]
 12658  016E80  0EFF               	movlw	-1
 12659  016E82  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12660  016E88  0EFE               	movlw	-2
 12661  016E8A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12662                           
 12663                           ;stkvar	_dest @ sp[(-4)+-2]
 12664  016E90  0EFA               	movlw	-6
 12665  016E92  006F FF8C  F03C    	movff	plusw1,btemp+10
 12666  016E98  0EFB               	movlw	-5
 12667  016E9A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12668                           
 12669                           ;stkvar	_d @ sp[(-4)+0]
 12670  016EA0  0EFD               	movlw	-3
 12671  016EA2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12672  016EA8  0EFC               	movlw	-4
 12673  016EAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12674  016EB0                     l9486:
 12675                           
 12676                           ;stkvar	_s @ sp[(-4)+2]
 12677  016EB0  50E1               	movf	fsr1l,w,c
 12678  016EB2  0FFE               	addlw	-2
 12679  016EB4  6ED9               	movwf	fsr2l,c
 12680  016EB6  50E2               	movf	fsr1h,w,c
 12681  016EB8  6EDA               	movwf	fsr2h,c
 12682  016EBA  0EFF               	movlw	255
 12683  016EBC  22DA               	addwfc	fsr2h,f,c
 12684  016EBE  006F FF7C  F03C    	movff	indf2,btemp+10
 12685  016EC4  0E01               	movlw	1
 12686  016EC6  26DE               	addwf	postinc2,f,c
 12687  016EC8  006F FF7C  F03D    	movff	indf2,btemp+11
 12688  016ECE  0E00               	movlw	0
 12689  016ED0  22DD               	addwfc	postdec2,f,c
 12690  016ED2  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12691  016ED8  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12692  016EDE  0E00               	movlw	low (__mediumconst shr (0+16))
 12693  016EE0  6EF8               	movwf	tblptru,c
 12694                           
 12695                           ;stkvar	_d @ sp[(-4)+0]
 12696  016EE2  50E1               	movf	fsr1l,w,c
 12697  016EE4  0FFC               	addlw	-4
 12698  016EE6  6ED9               	movwf	fsr2l,c
 12699  016EE8  50E2               	movf	fsr1h,w,c
 12700  016EEA  6EDA               	movwf	fsr2h,c
 12701  016EEC  0EFF               	movlw	255
 12702  016EEE  22DA               	addwfc	fsr2h,f,c
 12703  016EF0  006F FF7C  F03C    	movff	indf2,btemp+10
 12704  016EF6  0E01               	movlw	1
 12705  016EF8  26DE               	addwf	postinc2,f,c
 12706  016EFA  006F FF7C  F03D    	movff	indf2,btemp+11
 12707  016F00  0E00               	movlw	0
 12708  016F02  22DD               	addwfc	postdec2,f,c
 12709  016F04  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12710  016F0A  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12711  016F10  0E1F               	movlw	(high __ramtop+-1)
 12712  016F12  64F7               	cpfsgt	tblptrh,c
 12713  016F14  D003               	bra	u9017
 12714  016F16  0008               	tblrd		*
 12715  016F18  50F5               	movf	tablat,w,c
 12716  016F1A  D007               	bra	u9010
 12717  016F1C                     u9017:
 12718  016F1C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12719  016F22  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12720  016F28  50EF               	movf	indf0,w,c
 12721  016F2A                     u9010:
 12722  016F2A  6EDF               	movwf	indf2,c
 12723  016F2C  50DF               	movf	indf2,w,c
 12724  016F2E  A4D8               	btfss	status,2,c
 12725  016F30  D7BF               	goto	l9486
 12726                           
 12727                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12728  016F32  0EF8               	movlw	248
 12729  016F34  26E1               	addwf	fsr1l,f,c
 12730  016F36  0EFF               	movlw	255
 12731  016F38  22E2               	addwfc	fsr1h,f,c
 12732  016F3A  0012               	return		;funcret
 12733  016F3C                     __end_of_strcpy:
 12734                           	opt callstack 0
 12735                           
 12736 ;; *************** function _floorf *****************
 12737 ;; Defined at:
 12738 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  x               4  [STACK] float 
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  u               4  [STACK] struct .
 12743 ;;  m               4  [STACK] unsigned long 
 12744 ;;  e               2  [STACK] int 
 12745 ;; Return value:  Size  Location     Type
 12746 ;;                  4  [STACK] float 
 12747 ;; Registers used:
 12748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12749 ;; Tracked objects:
 12750 ;;		On entry : 0/5
 12751 ;;		On exit  : 0/0
 12752 ;;		Unchanged: 0/0
 12753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;Total ram usage:        0 bytes
 12759 ;; Hardware stack levels used:    1
 12760 ;; Hardware stack levels required when called:    6
 12761 ;; This function calls:
 12762 ;;		Nothing
 12763 ;; This function is called by:
 12764 ;;		_efgtoa
 12765 ;; This function uses a reentrant model
 12766 ;;
 12767                           
 12768                           	psect	text49
 12769  0144A2                     __ptext49:
 12770                           	opt callstack 0
 12771  0144A2                     _floorf:
 12772                           	opt callstack 0
 12773                           
 12774                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12775  0144A2  0E0A               	movlw	10
 12776  0144A4  26E1               	addwf	fsr1l,f,c
 12777  0144A6  0E00               	movlw	0
 12778  0144A8  22E2               	addwfc	fsr1h,f,c
 12779                           
 12780                           ;incstack = 0
 12781  0144AA  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12782  0144B0  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12783  0144B6  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12784  0144BC  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12785                           
 12786                           ;stkvar	_u @ sp[(-10)+0]
 12787  0144C2  0EF6               	movlw	-10
 12788  0144C4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12789  0144CA  0EF7               	movlw	-9
 12790  0144CC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12791  0144D2  0EF8               	movlw	-8
 12792  0144D4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12793  0144DA  0EF9               	movlw	-7
 12794  0144DC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12795                           
 12796                           ;stkvar	_x @ sp[(-10)+-4]
 12797  0144E2  0EF2               	movlw	-14
 12798  0144E4  006F FF8C  F03A    	movff	plusw1,btemp+8
 12799  0144EA  0EF3               	movlw	-13
 12800  0144EC  006F FF8C  F03B    	movff	plusw1,btemp+9
 12801  0144F2  0EF4               	movlw	-12
 12802  0144F4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12803  0144FA  0EF5               	movlw	-11
 12804  0144FC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12805                           
 12806                           ;stkvar	_u @ sp[(-10)+0]
 12807  014502  0EF6               	movlw	-10
 12808  014504  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12809  01450A  0EF7               	movlw	-9
 12810  01450C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12811  014512  0EF8               	movlw	-8
 12812  014514  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12813  01451A  0EF9               	movlw	-7
 12814  01451C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12815  014522  0E81               	movlw	129
 12816  014524  6E3C               	movwf	(btemp+10)^0,c
 12817  014526  0EFF               	movlw	255
 12818  014528  6E3D               	movwf	(btemp+11)^0,c
 12819                           
 12820                           ;stkvar	_u @ sp[(-10)+0]
 12821  01452A  0EF6               	movlw	-10
 12822  01452C  006F FF8C  F036    	movff	plusw1,btemp+4
 12823  014532  0EF7               	movlw	-9
 12824  014534  006F FF8C  F037    	movff	plusw1,btemp+5
 12825  01453A  0EF8               	movlw	-8
 12826  01453C  006F FF8C  F038    	movff	plusw1,btemp+6
 12827  014542  0EF9               	movlw	-7
 12828  014544  006F FF8C  F039    	movff	plusw1,btemp+7
 12829  01454A  0E18               	movlw	24
 12830  01454C  D005               	goto	u5190
 12831  01454E                     u5195:
 12832  01454E  90D8               	bcf	status,0,c
 12833  014550  3239               	rrcf	(btemp+7)^0,f,c
 12834  014552  3238               	rrcf	(btemp+6)^0,f,c
 12835  014554  3237               	rrcf	(btemp+5)^0,f,c
 12836  014556  3236               	rrcf	(btemp+4)^0,f,c
 12837  014558                     u5190:
 12838  014558  2EE8               	decfsz	wreg,f,c
 12839  01455A  D7F9               	goto	u5195
 12840  01455C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12841  014562  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12842  014568  0EFF               	movlw	255
 12843  01456A  163A               	andwf	(btemp+8)^0,f,c
 12844  01456C  0E00               	movlw	0
 12845  01456E  163B               	andwf	(btemp+9)^0,f,c
 12846  014570  503C               	movf	(btemp+10)^0,w,c
 12847  014572  263A               	addwf	(btemp+8)^0,f,c
 12848  014574  503D               	movf	(btemp+11)^0,w,c
 12849  014576  223B               	addwfc	(btemp+9)^0,f,c
 12850                           
 12851                           ;stkvar	_e @ sp[(-10)+8]
 12852  014578  0EFE               	movlw	-2
 12853  01457A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12854  014580  0EFF               	movlw	-1
 12855  014582  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12856                           
 12857                           ;stkvar	_e @ sp[(-10)+8]
 12858  014588  0EFF               	movlw	-1
 12859  01458A  BEE3               	btfsc	plusw1,7,c
 12860  01458C  D019               	goto	l6566
 12861  01458E  0EFF               	movlw	-1
 12862  014590  50E3               	movf	plusw1,w,c
 12863  014592  E108               	bnz	u5200
 12864  014594  0EFE               	movlw	-2
 12865  014596  006F FF8C  F032    	movff	plusw1,btemp
 12866  01459C  0E17               	movlw	23
 12867  01459E  5E32               	subwf	btemp^0,f,c
 12868  0145A0  A0D8               	btfss	status,0,c
 12869  0145A2  D00E               	goto	l6566
 12870  0145A4                     u5200:
 12871                           
 12872                           ;stkvar	_x @ sp[(-10)+-4]
 12873  0145A4  0EF2               	movlw	-14
 12874  0145A6  006F FF8C  F032    	movff	plusw1,btemp
 12875  0145AC  0EF3               	movlw	-13
 12876  0145AE  006F FF8C  F033    	movff	plusw1,btemp+1
 12877  0145B4  0EF4               	movlw	-12
 12878  0145B6  006F FF8C  F034    	movff	plusw1,btemp+2
 12879  0145BC  0EF5               	movlw	-11
 12880  0145BE  D11F               	goto	L13
 12881  0145C0                     l6566:
 12882                           
 12883                           ;stkvar	_e @ sp[(-10)+8]
 12884  0145C0  0EFF               	movlw	-1
 12885  0145C2  BEE3               	btfsc	plusw1,7,c
 12886  0145C4  D0B4               	goto	l6582
 12887                           
 12888                           ;stkvar	_e @ sp[(-10)+8]
 12889  0145C6  0EFE               	movlw	-2
 12890  0145C8  006F FF8C  F03D    	movff	plusw1,btemp+11
 12891  0145CE  0EFF               	movlw	255
 12892  0145D0  6E36               	movwf	(btemp+4)^0,c
 12893  0145D2  0EFF               	movlw	255
 12894  0145D4  6E37               	movwf	(btemp+5)^0,c
 12895  0145D6  0E7F               	movlw	127
 12896  0145D8  6E38               	movwf	(btemp+6)^0,c
 12897  0145DA  0E00               	movlw	0
 12898  0145DC  6E39               	movwf	(btemp+7)^0,c
 12899  0145DE                     u5225:
 12900  0145DE  663D               	tstfsz	(btemp+11)^0,c
 12901  0145E0  D001               	goto	u5226
 12902  0145E2  D007               	goto	u5227
 12903  0145E4                     u5226:
 12904  0145E4  3439               	rlcf	(btemp+7)^0,w,c
 12905  0145E6  3239               	rrcf	(btemp+7)^0,f,c
 12906  0145E8  3238               	rrcf	(btemp+6)^0,f,c
 12907  0145EA  3237               	rrcf	(btemp+5)^0,f,c
 12908  0145EC  3236               	rrcf	(btemp+4)^0,f,c
 12909  0145EE  2E3D               	decfsz	(btemp+11)^0,f,c
 12910  0145F0  D7F6               	goto	u5225
 12911  0145F2                     u5227:
 12912                           
 12913                           ;stkvar	_m @ sp[(-10)+4]
 12914  0145F2  0EFA               	movlw	-6
 12915  0145F4  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12916  0145FA  0EFB               	movlw	-5
 12917  0145FC  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12918  014602  0EFC               	movlw	-4
 12919  014604  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12920  01460A  0EFD               	movlw	-3
 12921  01460C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12922                           
 12923                           ;stkvar	_m @ sp[(-10)+4]
 12924                           ;stkvar	_u @ sp[(-10)+0]
 12925  014612  0EF6               	movlw	-10
 12926  014614  006F FF8C  F03A    	movff	plusw1,btemp+8
 12927  01461A  0EF7               	movlw	-9
 12928  01461C  006F FF8C  F03B    	movff	plusw1,btemp+9
 12929  014622  0EF8               	movlw	-8
 12930  014624  006F FF8C  F03C    	movff	plusw1,btemp+10
 12931  01462A  0EF9               	movlw	-7
 12932  01462C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12933  014632  0EFA               	movlw	-6
 12934  014634  50E3               	movf	plusw1,w,c
 12935  014636  163A               	andwf	(btemp+8)^0,f,c
 12936  014638  0EFB               	movlw	-5
 12937  01463A  50E3               	movf	plusw1,w,c
 12938  01463C  163B               	andwf	(btemp+9)^0,f,c
 12939  01463E  0EFC               	movlw	-4
 12940  014640  50E3               	movf	plusw1,w,c
 12941  014642  163C               	andwf	(btemp+10)^0,f,c
 12942  014644  0EFD               	movlw	-3
 12943  014646  50E3               	movf	plusw1,w,c
 12944  014648  163D               	andwf	(btemp+11)^0,f,c
 12945  01464A  503A               	movf	(btemp+8)^0,w,c
 12946  01464C  103B               	iorwf	(btemp+9)^0,w,c
 12947  01464E  103C               	iorwf	(btemp+10)^0,w,c
 12948  014650  103D               	iorwf	(btemp+11)^0,w,c
 12949  014652  B4D8               	btfsc	status,2,c
 12950  014654  D7A7               	goto	u5200
 12951                           
 12952                           ;stkvar	_u @ sp[(-10)+0]
 12953  014656  0EF6               	movlw	-10
 12954  014658  006F FF8C  F03A    	movff	plusw1,btemp+8
 12955  01465E  0EF7               	movlw	-9
 12956  014660  006F FF8C  F03B    	movff	plusw1,btemp+9
 12957  014666  0EF8               	movlw	-8
 12958  014668  006F FF8C  F03C    	movff	plusw1,btemp+10
 12959  01466E  0EF9               	movlw	-7
 12960  014670  006F FF8C  F03D    	movff	plusw1,btemp+11
 12961  014676  0E20               	movlw	32
 12962  014678  D005               	goto	u5240
 12963  01467A                     u5245:
 12964  01467A  90D8               	bcf	status,0,c
 12965  01467C  323D               	rrcf	(btemp+11)^0,f,c
 12966  01467E  323C               	rrcf	(btemp+10)^0,f,c
 12967  014680  323B               	rrcf	(btemp+9)^0,f,c
 12968  014682  323A               	rrcf	(btemp+8)^0,f,c
 12969  014684                     u5240:
 12970  014684  2EE8               	decfsz	wreg,f,c
 12971  014686  D7F9               	goto	u5245
 12972  014688  503A               	movf	(btemp+8)^0,w,c
 12973  01468A  B4D8               	btfsc	status,2,c
 12974  01468C  D028               	goto	l6580
 12975                           
 12976                           ;stkvar	_m @ sp[(-10)+4]
 12977                           ;stkvar	_u @ sp[(-10)+0]
 12978  01468E  0EF6               	movlw	-10
 12979  014690  50E3               	movf	plusw1,w,c
 12980  014692  6E32               	movwf	btemp^0,c
 12981  014694  0EFA               	movlw	-6
 12982  014696  50E3               	movf	plusw1,w,c
 12983  014698  2632               	addwf	btemp^0,f,c
 12984  01469A  0EF6               	movlw	-10
 12985  01469C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12986  0146A2  0EF7               	movlw	-9
 12987  0146A4  50E3               	movf	plusw1,w,c
 12988  0146A6  6E32               	movwf	btemp^0,c
 12989  0146A8  0EFB               	movlw	-5
 12990  0146AA  50E3               	movf	plusw1,w,c
 12991  0146AC  2232               	addwfc	btemp^0,f,c
 12992  0146AE  0EF7               	movlw	-9
 12993  0146B0  0060  F0CB  FFE3   	movff	btemp,plusw1
 12994  0146B6  0EF8               	movlw	-8
 12995  0146B8  50E3               	movf	plusw1,w,c
 12996  0146BA  6E32               	movwf	btemp^0,c
 12997  0146BC  0EFC               	movlw	-4
 12998  0146BE  50E3               	movf	plusw1,w,c
 12999  0146C0  2232               	addwfc	btemp^0,f,c
 13000  0146C2  0EF8               	movlw	-8
 13001  0146C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13002  0146CA  0EF9               	movlw	-7
 13003  0146CC  50E3               	movf	plusw1,w,c
 13004  0146CE  6E32               	movwf	btemp^0,c
 13005  0146D0  0EFD               	movlw	-3
 13006  0146D2  50E3               	movf	plusw1,w,c
 13007  0146D4  2232               	addwfc	btemp^0,f,c
 13008  0146D6  0EF9               	movlw	-7
 13009  0146D8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13010  0146DE                     l6580:
 13011                           
 13012                           ;stkvar	_m @ sp[(-10)+4]
 13013  0146DE  0EFA               	movlw	-6
 13014  0146E0  006F FF8C  F03A    	movff	plusw1,btemp+8
 13015  0146E6  0EFB               	movlw	-5
 13016  0146E8  006F FF8C  F03B    	movff	plusw1,btemp+9
 13017  0146EE  0EFC               	movlw	-4
 13018  0146F0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13019  0146F6  0EFD               	movlw	-3
 13020  0146F8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13021  0146FE  1C3A               	comf	(btemp+8)^0,w,c
 13022  014700  6E36               	movwf	(btemp+4)^0,c
 13023  014702  1C3B               	comf	(btemp+9)^0,w,c
 13024  014704  6E37               	movwf	(btemp+5)^0,c
 13025  014706  1C3C               	comf	(btemp+10)^0,w,c
 13026  014708  6E38               	movwf	(btemp+6)^0,c
 13027  01470A  1C3D               	comf	(btemp+11)^0,w,c
 13028  01470C  6E39               	movwf	(btemp+7)^0,c
 13029                           
 13030                           ;stkvar	_u @ sp[(-10)+0]
 13031  01470E  50E1               	movf	fsr1l,w,c
 13032  014710  0FF6               	addlw	-10
 13033  014712  6ED9               	movwf	fsr2l,c
 13034  014714  50E2               	movf	fsr1h,w,c
 13035  014716  6EDA               	movwf	fsr2h,c
 13036  014718  0EFF               	movlw	255
 13037  01471A  22DA               	addwfc	fsr2h,f,c
 13038  01471C  5036               	movf	(btemp+4)^0,w,c
 13039  01471E  16DE               	andwf	postinc2,f,c
 13040  014720  5037               	movf	(btemp+5)^0,w,c
 13041  014722  16DE               	andwf	postinc2,f,c
 13042  014724  5038               	movf	(btemp+6)^0,w,c
 13043  014726  16DE               	andwf	postinc2,f,c
 13044  014728  5039               	movf	(btemp+7)^0,w,c
 13045  01472A  16DE               	andwf	postinc2,f,c
 13046  01472C  D05B               	goto	l6590
 13047  01472E                     l6582:
 13048                           
 13049                           ;stkvar	_u @ sp[(-10)+0]
 13050  01472E  0EF6               	movlw	-10
 13051  014730  006F FF8C  F03A    	movff	plusw1,btemp+8
 13052  014736  0EF7               	movlw	-9
 13053  014738  006F FF8C  F03B    	movff	plusw1,btemp+9
 13054  01473E  0EF8               	movlw	-8
 13055  014740  006F FF8C  F03C    	movff	plusw1,btemp+10
 13056  014746  0EF9               	movlw	-7
 13057  014748  006F FF8C  F03D    	movff	plusw1,btemp+11
 13058  01474E  0E20               	movlw	32
 13059  014750  D005               	goto	u5260
 13060  014752                     u5265:
 13061  014752  90D8               	bcf	status,0,c
 13062  014754  323D               	rrcf	(btemp+11)^0,f,c
 13063  014756  323C               	rrcf	(btemp+10)^0,f,c
 13064  014758  323B               	rrcf	(btemp+9)^0,f,c
 13065  01475A  323A               	rrcf	(btemp+8)^0,f,c
 13066  01475C                     u5260:
 13067  01475C  2EE8               	decfsz	wreg,f,c
 13068  01475E  D7F9               	goto	u5265
 13069  014760  663A               	tstfsz	(btemp+8)^0,c
 13070  014762  D009               	goto	l6586
 13071                           
 13072                           ;stkvar	_u @ sp[(-10)+0]
 13073  014764  0EF6               	movlw	-10
 13074  014766  6AE3               	clrf	plusw1,c
 13075  014768  0EF7               	movlw	-9
 13076  01476A  6AE3               	clrf	plusw1,c
 13077  01476C  0EF8               	movlw	-8
 13078  01476E  6AE3               	clrf	plusw1,c
 13079  014770  0EF9               	movlw	-7
 13080  014772  6AE3               	clrf	plusw1,c
 13081  014774  D037               	goto	l6590
 13082  014776                     l6586:
 13083                           
 13084                           ;stkvar	_u @ sp[(-10)+0]
 13085  014776  0EF6               	movlw	-10
 13086  014778  006F FF8C  F03A    	movff	plusw1,btemp+8
 13087  01477E  0EF7               	movlw	-9
 13088  014780  006F FF8C  F03B    	movff	plusw1,btemp+9
 13089  014786  0EF8               	movlw	-8
 13090  014788  006F FF8C  F03C    	movff	plusw1,btemp+10
 13091  01478E  0EF9               	movlw	-7
 13092  014790  006F FF8C  F03D    	movff	plusw1,btemp+11
 13093  014796  90D8               	bcf	status,0,c
 13094  014798  343A               	rlcf	(btemp+8)^0,w,c
 13095  01479A  6E36               	movwf	(btemp+4)^0,c
 13096  01479C  343B               	rlcf	(btemp+9)^0,w,c
 13097  01479E  6E37               	movwf	(btemp+5)^0,c
 13098  0147A0  343C               	rlcf	(btemp+10)^0,w,c
 13099  0147A2  6E38               	movwf	(btemp+6)^0,c
 13100  0147A4  343D               	rlcf	(btemp+11)^0,w,c
 13101  0147A6  6E39               	movwf	(btemp+7)^0,c
 13102  0147A8  5036               	movf	(btemp+4)^0,w,c
 13103  0147AA  1037               	iorwf	(btemp+5)^0,w,c
 13104  0147AC  1038               	iorwf	(btemp+6)^0,w,c
 13105  0147AE  1039               	iorwf	(btemp+7)^0,w,c
 13106  0147B0  B4D8               	btfsc	status,2,c
 13107  0147B2  D018               	goto	l6590
 13108  0147B4  0E00               	movlw	0
 13109  0147B6  6E3A               	movwf	(btemp+8)^0,c
 13110  0147B8  0E00               	movlw	0
 13111  0147BA  6E3B               	movwf	(btemp+9)^0,c
 13112  0147BC  0E80               	movlw	128
 13113  0147BE  6E3C               	movwf	(btemp+10)^0,c
 13114  0147C0  0EBF               	movlw	191
 13115  0147C2  6E3D               	movwf	(btemp+11)^0,c
 13116                           
 13117                           ;stkvar	_u @ sp[(-10)+0]
 13118  0147C4  0EF6               	movlw	-10
 13119  0147C6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13120  0147CC  0EF7               	movlw	-9
 13121  0147CE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13122  0147D4  0EF8               	movlw	-8
 13123  0147D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13124  0147DC  0EF9               	movlw	-7
 13125  0147DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13126  0147E4                     l6590:
 13127                           
 13128                           ;stkvar	_u @ sp[(-10)+0]
 13129  0147E4  0EF6               	movlw	-10
 13130  0147E6  006F FF8C  F032    	movff	plusw1,btemp
 13131  0147EC  0EF7               	movlw	-9
 13132  0147EE  006F FF8C  F033    	movff	plusw1,btemp+1
 13133  0147F4  0EF8               	movlw	-8
 13134  0147F6  006F FF8C  F034    	movff	plusw1,btemp+2
 13135  0147FC  0EF9               	movlw	-7
 13136  0147FE                     L13:
 13137  0147FE  006F FF8C  F035    	movff	plusw1,btemp+3
 13138                           
 13139                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13140  014804  0EF2               	movlw	242
 13141  014806  26E1               	addwf	fsr1l,f,c
 13142  014808  0EFF               	movlw	255
 13143  01480A  22E2               	addwfc	fsr1h,f,c
 13144  01480C  0012               	return		;funcret
 13145  01480E                     __end_of_floorf:
 13146                           	opt callstack 0
 13147                           
 13148 ;; *************** function ___fpclassifyf *****************
 13149 ;; Defined at:
 13150 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  x               4  [STACK] float 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  u               4  [STACK] struct .
 13155 ;;  e               2  [STACK] int 
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  2  [STACK] int 
 13158 ;; Registers used:
 13159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/5
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13169 ;;Total ram usage:        0 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; Hardware stack levels required when called:    6
 13172 ;; This function calls:
 13173 ;;		Nothing
 13174 ;; This function is called by:
 13175 ;;		_efgtoa
 13176 ;; This function uses a reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text50
 13180  015EF4                     __ptext50:
 13181                           	opt callstack 0
 13182  015EF4                     ___fpclassifyf:
 13183                           	opt callstack 0
 13184                           
 13185                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13186  015EF4  0E06               	movlw	6
 13187  015EF6  26E1               	addwf	fsr1l,f,c
 13188  015EF8  0E00               	movlw	0
 13189  015EFA  22E2               	addwfc	fsr1h,f,c
 13190                           
 13191                           ;incstack = 0
 13192  015EFC  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13193  015F02  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13194  015F08  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13195  015F0E  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13196                           
 13197                           ;stkvar	_u @ sp[(-6)+0]
 13198  015F14  0EFA               	movlw	-6
 13199  015F16  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13200  015F1C  0EFB               	movlw	-5
 13201  015F1E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13202  015F24  0EFC               	movlw	-4
 13203  015F26  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13204  015F2C  0EFD               	movlw	-3
 13205  015F2E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13206                           
 13207                           ;stkvar	_x @ sp[(-6)+-4]
 13208  015F34  0EF6               	movlw	-10
 13209  015F36  006F FF8C  F03A    	movff	plusw1,btemp+8
 13210  015F3C  0EF7               	movlw	-9
 13211  015F3E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13212  015F44  0EF8               	movlw	-8
 13213  015F46  006F FF8C  F03C    	movff	plusw1,btemp+10
 13214  015F4C  0EF9               	movlw	-7
 13215  015F4E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13216                           
 13217                           ;stkvar	_u @ sp[(-6)+0]
 13218  015F54  0EFA               	movlw	-6
 13219  015F56  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13220  015F5C  0EFB               	movlw	-5
 13221  015F5E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13222  015F64  0EFC               	movlw	-4
 13223  015F66  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13224  015F6C  0EFD               	movlw	-3
 13225  015F6E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13226                           
 13227                           ;stkvar	_u @ sp[(-6)+0]
 13228  015F74  0EFA               	movlw	-6
 13229  015F76  006F FF8C  F03A    	movff	plusw1,btemp+8
 13230  015F7C  0EFB               	movlw	-5
 13231  015F7E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13232  015F84  0EFC               	movlw	-4
 13233  015F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 13234  015F8C  0EFD               	movlw	-3
 13235  015F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13236  015F94  0E18               	movlw	24
 13237  015F96  D005               	goto	u5070
 13238  015F98                     u5075:
 13239  015F98  90D8               	bcf	status,0,c
 13240  015F9A  323D               	rrcf	(btemp+11)^0,f,c
 13241  015F9C  323C               	rrcf	(btemp+10)^0,f,c
 13242  015F9E  323B               	rrcf	(btemp+9)^0,f,c
 13243  015FA0  323A               	rrcf	(btemp+8)^0,f,c
 13244  015FA2                     u5070:
 13245  015FA2  2EE8               	decfsz	wreg,f,c
 13246  015FA4  D7F9               	goto	u5075
 13247  015FA6  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13248  015FAC  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13249  015FB2  0EFF               	movlw	255
 13250  015FB4  1638               	andwf	(btemp+6)^0,f,c
 13251  015FB6  0E00               	movlw	0
 13252  015FB8  1639               	andwf	(btemp+7)^0,f,c
 13253                           
 13254                           ;stkvar	_e @ sp[(-6)+4]
 13255  015FBA  0EFE               	movlw	-2
 13256  015FBC  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13257  015FC2  0EFF               	movlw	-1
 13258  015FC4  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13259                           
 13260                           ;stkvar	_e @ sp[(-6)+4]
 13261  015FCA  0EFE               	movlw	-2
 13262  015FCC  006F FF8C  F032    	movff	plusw1,btemp
 13263  015FD2  0EFF               	movlw	-1
 13264  015FD4  50E3               	movf	plusw1,w,c
 13265  015FD6  1032               	iorwf	btemp^0,w,c
 13266  015FD8  A4D8               	btfss	status,2,c
 13267  015FDA  D023               	goto	l6528
 13268                           
 13269                           ;stkvar	_u @ sp[(-6)+0]
 13270  015FDC  0EFA               	movlw	-6
 13271  015FDE  006F FF8C  F03A    	movff	plusw1,btemp+8
 13272  015FE4  0EFB               	movlw	-5
 13273  015FE6  006F FF8C  F03B    	movff	plusw1,btemp+9
 13274  015FEC  0EFC               	movlw	-4
 13275  015FEE  006F FF8C  F03C    	movff	plusw1,btemp+10
 13276  015FF4  0EFD               	movlw	-3
 13277  015FF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 13278  015FFC  90D8               	bcf	status,0,c
 13279  015FFE  343A               	rlcf	(btemp+8)^0,w,c
 13280  016000  6E36               	movwf	(btemp+4)^0,c
 13281  016002  343B               	rlcf	(btemp+9)^0,w,c
 13282  016004  6E37               	movwf	(btemp+5)^0,c
 13283  016006  343C               	rlcf	(btemp+10)^0,w,c
 13284  016008  6E38               	movwf	(btemp+6)^0,c
 13285  01600A  343D               	rlcf	(btemp+11)^0,w,c
 13286  01600C  6E39               	movwf	(btemp+7)^0,c
 13287  01600E  5036               	movf	(btemp+4)^0,w,c
 13288  016010  1037               	iorwf	(btemp+5)^0,w,c
 13289  016012  1038               	iorwf	(btemp+6)^0,w,c
 13290  016014  1039               	iorwf	(btemp+7)^0,w,c
 13291  016016  A4D8               	btfss	status,2,c
 13292  016018  D002               	goto	l6524
 13293  01601A  0E02               	movlw	2
 13294  01601C  D02E               	goto	L14
 13295  01601E                     l6524:
 13296  01601E  0E03               	movlw	3
 13297  016020  D02C               	goto	L14
 13298  016022                     l6528:
 13299                           
 13300                           ;stkvar	_e @ sp[(-6)+4]
 13301  016022  0EFE               	movlw	-2
 13302  016024  28E3               	incf	plusw1,w,c
 13303  016026  E128               	bnz	l6534
 13304  016028  0EFF               	movlw	-1
 13305  01602A  50E3               	movf	plusw1,w,c
 13306  01602C  A4D8               	btfss	status,2,c
 13307  01602E  D024               	goto	l6534
 13308                           
 13309                           ;stkvar	_u @ sp[(-6)+0]
 13310  016030  0EFA               	movlw	-6
 13311  016032  006F FF8C  F03A    	movff	plusw1,btemp+8
 13312  016038  0EFB               	movlw	-5
 13313  01603A  006F FF8C  F03B    	movff	plusw1,btemp+9
 13314  016040  0EFC               	movlw	-4
 13315  016042  006F FF8C  F03C    	movff	plusw1,btemp+10
 13316  016048  0EFD               	movlw	-3
 13317  01604A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13318  016050  0E09               	movlw	9
 13319  016052                     u5115:
 13320  016052  90D8               	bcf	status,0,c
 13321  016054  363A               	rlcf	(btemp+8)^0,f,c
 13322  016056  363B               	rlcf	(btemp+9)^0,f,c
 13323  016058  363C               	rlcf	(btemp+10)^0,f,c
 13324  01605A  363D               	rlcf	(btemp+11)^0,f,c
 13325  01605C  2EE8               	decfsz	wreg,f,c
 13326  01605E  D7F9               	goto	u5115
 13327  016060  503A               	movf	(btemp+8)^0,w,c
 13328  016062  103B               	iorwf	(btemp+9)^0,w,c
 13329  016064  103C               	iorwf	(btemp+10)^0,w,c
 13330  016066  103D               	iorwf	(btemp+11)^0,w,c
 13331  016068  A4D8               	btfss	status,2,c
 13332  01606A  D002               	goto	u5120
 13333  01606C  0E01               	movlw	1
 13334  01606E  D001               	goto	u5130
 13335  016070                     u5120:
 13336  016070  0E00               	movlw	0
 13337  016072                     u5130:
 13338  016072  6E32               	movwf	btemp^0,c
 13339  016074  6A33               	clrf	(btemp+1)^0,c
 13340  016076  D004               	goto	l2750
 13341  016078                     l6534:
 13342  016078  0E04               	movlw	4
 13343  01607A                     L14:
 13344  01607A  6E32               	movwf	btemp^0,c
 13345  01607C  0E00               	movlw	0
 13346  01607E  6E33               	movwf	(btemp+1)^0,c
 13347  016080                     l2750:
 13348                           
 13349                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13350  016080  0EF6               	movlw	246
 13351  016082  26E1               	addwf	fsr1l,f,c
 13352  016084  0EFF               	movlw	255
 13353  016086  22E2               	addwfc	fsr1h,f,c
 13354  016088  0012               	return		;funcret
 13355  01608A                     __end_of___fpclassifyf:
 13356                           	opt callstack 0
 13357                           
 13358 ;; *************** function ___fltol *****************
 13359 ;; Defined at:
 13360 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  f1              4  [STACK] int 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  exp1            1  [STACK] unsigned char 
 13365 ;;  sign1           1  [STACK] unsigned char 
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  4  [STACK] long 
 13368 ;; Registers used:
 13369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/5
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;Total ram usage:        0 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:    6
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_efgtoa
 13386 ;; This function uses a reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text51
 13390  01608A                     __ptext51:
 13391                           	opt callstack 0
 13392  01608A                     ___fltol:
 13393                           	opt callstack 0
 13394                           
 13395                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13396  01608A  52E6               	movf	postinc1,f,c
 13397  01608C  52E6               	movf	postinc1,f,c
 13398                           
 13399                           ;stkvar	_f1 @ sp[(-2)+-4]
 13400                           
 13401                           ;incstack = 0
 13402  01608E  0EFA               	movlw	-6
 13403  016090  006F FF8C  F03A    	movff	plusw1,btemp+8
 13404  016096  0EFB               	movlw	-5
 13405  016098  006F FF8C  F03B    	movff	plusw1,btemp+9
 13406  01609E  0EFC               	movlw	-4
 13407  0160A0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13408  0160A6  0EFD               	movlw	-3
 13409  0160A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13410  0160AE  0E18               	movlw	24
 13411  0160B0  D005               	goto	u6280
 13412  0160B2                     u6285:
 13413  0160B2  90D8               	bcf	status,0,c
 13414  0160B4  323D               	rrcf	(btemp+11)^0,f,c
 13415  0160B6  323C               	rrcf	(btemp+10)^0,f,c
 13416  0160B8  323B               	rrcf	(btemp+9)^0,f,c
 13417  0160BA  323A               	rrcf	(btemp+8)^0,f,c
 13418  0160BC                     u6280:
 13419  0160BC  2EE8               	decfsz	wreg,f,c
 13420  0160BE  D7F9               	goto	u6285
 13421                           
 13422                           ;stkvar	_exp1 @ sp[(-2)+0]
 13423  0160C0  0EFE               	movlw	-2
 13424  0160C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13425  0160C8  0EFE               	movlw	-2
 13426  0160CA  50E3               	movf	plusw1,w,c
 13427  0160CC  A4D8               	btfss	status,2,c
 13428  0160CE  D006               	goto	l7154
 13429  0160D0                     u6290:
 13430  0160D0  0E00               	movlw	0
 13431  0160D2  6E32               	movwf	btemp^0,c
 13432  0160D4  6A33               	clrf	(btemp+1)^0,c
 13433  0160D6  6A34               	clrf	(btemp+2)^0,c
 13434  0160D8  6A35               	clrf	(btemp+3)^0,c
 13435  0160DA  D08B               	goto	l2366
 13436  0160DC                     l7154:
 13437                           
 13438                           ;stkvar	_f1 @ sp[(-2)+-4]
 13439  0160DC  0EFA               	movlw	-6
 13440  0160DE  006F FF8C  F03A    	movff	plusw1,btemp+8
 13441  0160E4  0EFB               	movlw	-5
 13442  0160E6  006F FF8C  F03B    	movff	plusw1,btemp+9
 13443  0160EC  0EFC               	movlw	-4
 13444  0160EE  006F FF8C  F03C    	movff	plusw1,btemp+10
 13445  0160F4  0EFD               	movlw	-3
 13446  0160F6  006F FF8C  F03D    	movff	plusw1,btemp+11
 13447  0160FC  0E20               	movlw	32
 13448  0160FE  D005               	goto	u6300
 13449  016100                     u6305:
 13450  016100  90D8               	bcf	status,0,c
 13451  016102  323D               	rrcf	(btemp+11)^0,f,c
 13452  016104  323C               	rrcf	(btemp+10)^0,f,c
 13453  016106  323B               	rrcf	(btemp+9)^0,f,c
 13454  016108  323A               	rrcf	(btemp+8)^0,f,c
 13455  01610A                     u6300:
 13456  01610A  2EE8               	decfsz	wreg,f,c
 13457  01610C  D7F9               	goto	u6305
 13458                           
 13459                           ;stkvar	_sign1 @ sp[(-2)+1]
 13460  01610E  0EFF               	movlw	-1
 13461  016110  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13462                           
 13463                           ;stkvar	_f1 @ sp[(-2)+-4]
 13464  016116  0EFC               	movlw	-4
 13465  016118  8EE3               	bsf	plusw1,7,c
 13466                           
 13467                           ;stkvar	_f1 @ sp[(-2)+-4]
 13468  01611A  50E1               	movf	fsr1l,w,c
 13469  01611C  0FFA               	addlw	-6
 13470  01611E  6ED9               	movwf	fsr2l,c
 13471  016120  50E2               	movf	fsr1h,w,c
 13472  016122  6EDA               	movwf	fsr2h,c
 13473  016124  0EFF               	movlw	255
 13474  016126  22DA               	addwfc	fsr2h,f,c
 13475  016128  0EFF               	movlw	255
 13476  01612A  16DE               	andwf	postinc2,f,c
 13477  01612C  0EFF               	movlw	255
 13478  01612E  16DE               	andwf	postinc2,f,c
 13479  016130  0EFF               	movlw	255
 13480  016132  16DE               	andwf	postinc2,f,c
 13481  016134  0E00               	movlw	0
 13482  016136  16DE               	andwf	postinc2,f,c
 13483                           
 13484                           ;stkvar	_exp1 @ sp[(-2)+0]
 13485  016138  0EFE               	movlw	-2
 13486  01613A  006F FF8C  F032    	movff	plusw1,btemp
 13487  016140  0E96               	movlw	150
 13488  016142  5E32               	subwf	btemp^0,f,c
 13489  016144  0EFE               	movlw	-2
 13490  016146  0060  F0CB  FFE3   	movff	btemp,plusw1
 13491                           
 13492                           ;stkvar	_exp1 @ sp[(-2)+0]
 13493  01614C  0EFE               	movlw	-2
 13494  01614E  AEE3               	btfss	plusw1,7,c
 13495  016150  D014               	goto	l7172
 13496                           
 13497                           ;stkvar	_exp1 @ sp[(-2)+0]
 13498  016152  0EFE               	movlw	-2
 13499  016154  50E3               	movf	plusw1,w,c
 13500  016156  0A80               	xorlw	128
 13501  016158  0F97               	addlw	151
 13502  01615A  A0D8               	btfss	status,0,c
 13503  01615C  D7B9               	goto	u6290
 13504  01615E                     l7170:
 13505                           
 13506                           ;stkvar	_f1 @ sp[(-2)+-4]
 13507  01615E  90D8               	bcf	status,0,c
 13508  016160  0EFD               	movlw	-3
 13509  016162  32E3               	rrcf	plusw1,f,c
 13510  016164  0EFC               	movlw	-4
 13511  016166  32E3               	rrcf	plusw1,f,c
 13512  016168  0EFB               	movlw	-5
 13513  01616A  32E3               	rrcf	plusw1,f,c
 13514  01616C  0EFA               	movlw	-6
 13515  01616E  32E3               	rrcf	plusw1,f,c
 13516                           
 13517                           ;stkvar	_exp1 @ sp[(-2)+0]
 13518  016170  0EFE               	movlw	-2
 13519  016172  2AE3               	incf	plusw1,f,c
 13520  016174  B4D8               	btfsc	status,2,c
 13521  016176  D018               	goto	u6350
 13522  016178  D7F2               	goto	l7170
 13523  01617A                     l7172:
 13524                           
 13525                           ;stkvar	_exp1 @ sp[(-2)+0]
 13526  01617A  0EFE               	movlw	-2
 13527  01617C  006F FF8C  F032    	movff	plusw1,btemp
 13528  016182  0E1F               	movlw	31
 13529  016184  6432               	cpfsgt	btemp^0,c
 13530  016186  D00C               	goto	l7180
 13531  016188  D7A3               	goto	u6290
 13532  01618A                     l7178:
 13533                           
 13534                           ;stkvar	_f1 @ sp[(-2)+-4]
 13535  01618A  90D8               	bcf	status,0,c
 13536  01618C  0EFA               	movlw	-6
 13537  01618E  36E3               	rlcf	plusw1,f,c
 13538  016190  0EFB               	movlw	-5
 13539  016192  36E3               	rlcf	plusw1,f,c
 13540  016194  0EFC               	movlw	-4
 13541  016196  36E3               	rlcf	plusw1,f,c
 13542  016198  0EFD               	movlw	-3
 13543  01619A  36E3               	rlcf	plusw1,f,c
 13544                           
 13545                           ;stkvar	_exp1 @ sp[(-2)+0]
 13546  01619C  0EFE               	movlw	-2
 13547  01619E  06E3               	decf	plusw1,f,c
 13548  0161A0                     l7180:
 13549                           
 13550                           ;stkvar	_exp1 @ sp[(-2)+0]
 13551  0161A0  0EFE               	movlw	-2
 13552  0161A2  50E3               	movf	plusw1,w,c
 13553  0161A4  A4D8               	btfss	status,2,c
 13554  0161A6  D7F1               	goto	l7178
 13555  0161A8                     u6350:
 13556                           
 13557                           ;stkvar	_sign1 @ sp[(-2)+1]
 13558  0161A8  0EFF               	movlw	-1
 13559  0161AA  50E3               	movf	plusw1,w,c
 13560  0161AC  B4D8               	btfsc	status,2,c
 13561  0161AE  D011               	goto	u6370
 13562                           
 13563                           ;stkvar	_f1 @ sp[(-2)+-4]
 13564                           ;stkvar	_f1 @ sp[(-2)+-4]
 13565  0161B0  0EFA               	movlw	-6
 13566  0161B2  6CE3               	negf	plusw1,c
 13567  0161B4  0EFB               	movlw	-5
 13568  0161B6  1EE3               	comf	plusw1,f,c
 13569  0161B8  0EFC               	movlw	-4
 13570  0161BA  1EE3               	comf	plusw1,f,c
 13571  0161BC  0EFD               	movlw	-3
 13572  0161BE  1EE3               	comf	plusw1,f,c
 13573  0161C0  E308               	bnc	u6370
 13574  0161C2  0EFB               	movlw	-5
 13575  0161C4  2AE3               	incf	plusw1,f,c
 13576  0161C6  E305               	bnc	u6370
 13577  0161C8  0EFC               	movlw	-4
 13578  0161CA  2AE3               	incf	plusw1,f,c
 13579  0161CC  E302               	bnc	u6370
 13580  0161CE  0EFD               	movlw	-3
 13581  0161D0  2AE3               	incf	plusw1,f,c
 13582  0161D2                     u6370:
 13583                           
 13584                           ;stkvar	_f1 @ sp[(-2)+-4]
 13585  0161D2  0EFA               	movlw	-6
 13586  0161D4  006F FF8C  F032    	movff	plusw1,btemp
 13587  0161DA  0EFB               	movlw	-5
 13588  0161DC  006F FF8C  F033    	movff	plusw1,btemp+1
 13589  0161E2  0EFC               	movlw	-4
 13590  0161E4  006F FF8C  F034    	movff	plusw1,btemp+2
 13591  0161EA  0EFD               	movlw	-3
 13592  0161EC  006F FF8C  F035    	movff	plusw1,btemp+3
 13593  0161F2                     l2366:
 13594                           
 13595                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13596  0161F2  0EFA               	movlw	250
 13597  0161F4  26E1               	addwf	fsr1l,f,c
 13598  0161F6  0EFF               	movlw	255
 13599  0161F8  22E2               	addwfc	fsr1h,f,c
 13600  0161FA  0012               	return		;funcret
 13601  0161FC                     __end_of___fltol:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function ___flneg *****************
 13605 ;; Defined at:
 13606 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  f1              4  [STACK] long 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  4  [STACK] long 
 13613 ;; Registers used:
 13614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/5
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    6
 13627 ;; This function calls:
 13628 ;;		Nothing
 13629 ;; This function is called by:
 13630 ;;		_efgtoa
 13631 ;; This function uses a reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text52
 13635  017E08                     __ptext52:
 13636                           	opt callstack 0
 13637  017E08                     ___flneg:
 13638                           	opt callstack 17
 13639                           
 13640                           ;stkvar	_f1 @ sp[(0)+-4]
 13641                           
 13642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13643                           ;incstack = 0
 13644  017E08  0EFC               	movlw	-4
 13645  017E0A  50E3               	movf	plusw1,w,c
 13646  017E0C  E10A               	bnz	u6270
 13647  017E0E  0EFD               	movlw	-3
 13648  017E10  50E3               	movf	plusw1,w,c
 13649  017E12  E107               	bnz	u6270
 13650  017E14  0EFE               	movlw	-2
 13651  017E16  50E3               	movf	plusw1,w,c
 13652  017E18  E104               	bnz	u6270
 13653  017E1A  0EFF               	movlw	-1
 13654  017E1C  50E3               	movf	plusw1,w,c
 13655  017E1E  B4D8               	btfsc	status,2,c
 13656  017E20  D002               	goto	l7144
 13657  017E22                     u6270:
 13658                           
 13659                           ;stkvar	_f1 @ sp[(0)+-4]
 13660  017E22  0EFF               	movlw	-1
 13661  017E24  7EE3               	btg	plusw1,7,c
 13662  017E26                     l7144:
 13663                           
 13664                           ;stkvar	_f1 @ sp[(0)+-4]
 13665  017E26  0EFC               	movlw	-4
 13666  017E28  006F FF8C  F032    	movff	plusw1,btemp
 13667  017E2E  0EFD               	movlw	-3
 13668  017E30  006F FF8C  F033    	movff	plusw1,btemp+1
 13669  017E36  0EFE               	movlw	-2
 13670  017E38  006F FF8C  F034    	movff	plusw1,btemp+2
 13671  017E3E  0EFF               	movlw	-1
 13672  017E40  006F FF8C  F035    	movff	plusw1,btemp+3
 13673                           
 13674                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13675  017E46  52E5               	movf	postdec1,f,c
 13676  017E48  52E5               	movf	postdec1,f,c
 13677  017E4A  52E5               	movf	postdec1,f,c
 13678  017E4C  52E5               	movf	postdec1,f,c
 13679  017E4E  0012               	return		;funcret
 13680  017E50                     __end_of___flneg:
 13681                           	opt callstack 0
 13682                           
 13683 ;; *************** function ___flge *****************
 13684 ;; Defined at:
 13685 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  ff1             4  [STACK] long 
 13688 ;;  ff2             4  [STACK] long 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;		None
 13691 ;; Return value:  Size  Location     Type
 13692 ;;		None               void
 13693 ;; Registers used:
 13694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/5
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;Total ram usage:        0 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    6
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_efgtoa
 13711 ;; This function uses a reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text53
 13715  0161FC                     __ptext53:
 13716                           	opt callstack 0
 13717  0161FC                     ___flge:
 13718                           	opt callstack 17
 13719                           
 13720                           ;stkvar	_ff1 @ sp[(0)+-4]
 13721                           
 13722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13723                           ;incstack = 0
 13724  0161FC  50E1               	movf	fsr1l,w,c
 13725  0161FE  0FFC               	addlw	-4
 13726  016200  6ED9               	movwf	fsr2l,c
 13727  016202  50E2               	movf	fsr1h,w,c
 13728  016204  6EDA               	movwf	fsr2h,c
 13729  016206  0EFF               	movlw	255
 13730  016208  22DA               	addwfc	fsr2h,f,c
 13731  01620A  0E00               	movlw	0
 13732  01620C  14DE               	andwf	postinc2,w,c
 13733  01620E  6E3A               	movwf	(btemp+8)^0,c
 13734  016210  0E00               	movlw	0
 13735  016212  14DE               	andwf	postinc2,w,c
 13736  016214  6E3B               	movwf	(btemp+9)^0,c
 13737  016216  0E80               	movlw	128
 13738  016218  14DE               	andwf	postinc2,w,c
 13739  01621A  6E3C               	movwf	(btemp+10)^0,c
 13740  01621C  0E7F               	movlw	127
 13741  01621E  14DE               	andwf	postinc2,w,c
 13742  016220  6E3D               	movwf	(btemp+11)^0,c
 13743  016222  503A               	movf	(btemp+8)^0,w,c
 13744  016224  103B               	iorwf	(btemp+9)^0,w,c
 13745  016226  103C               	iorwf	(btemp+10)^0,w,c
 13746  016228  103D               	iorwf	(btemp+11)^0,w,c
 13747  01622A  A4D8               	btfss	status,2,c
 13748  01622C  D008               	goto	l7118
 13749                           
 13750                           ;stkvar	_ff1 @ sp[(0)+-4]
 13751  01622E  0EFC               	movlw	-4
 13752  016230  6AE3               	clrf	plusw1,c
 13753  016232  0EFD               	movlw	-3
 13754  016234  6AE3               	clrf	plusw1,c
 13755  016236  0EFE               	movlw	-2
 13756  016238  6AE3               	clrf	plusw1,c
 13757  01623A  0EFF               	movlw	-1
 13758  01623C  6AE3               	clrf	plusw1,c
 13759  01623E                     l7118:
 13760                           
 13761                           ;stkvar	_ff2 @ sp[(0)+-8]
 13762  01623E  50E1               	movf	fsr1l,w,c
 13763  016240  0FF8               	addlw	-8
 13764  016242  6ED9               	movwf	fsr2l,c
 13765  016244  50E2               	movf	fsr1h,w,c
 13766  016246  6EDA               	movwf	fsr2h,c
 13767  016248  0EFF               	movlw	255
 13768  01624A  22DA               	addwfc	fsr2h,f,c
 13769  01624C  0E00               	movlw	0
 13770  01624E  14DE               	andwf	postinc2,w,c
 13771  016250  6E3A               	movwf	(btemp+8)^0,c
 13772  016252  0E00               	movlw	0
 13773  016254  14DE               	andwf	postinc2,w,c
 13774  016256  6E3B               	movwf	(btemp+9)^0,c
 13775  016258  0E80               	movlw	128
 13776  01625A  14DE               	andwf	postinc2,w,c
 13777  01625C  6E3C               	movwf	(btemp+10)^0,c
 13778  01625E  0E7F               	movlw	127
 13779  016260  14DE               	andwf	postinc2,w,c
 13780  016262  6E3D               	movwf	(btemp+11)^0,c
 13781  016264  503A               	movf	(btemp+8)^0,w,c
 13782  016266  103B               	iorwf	(btemp+9)^0,w,c
 13783  016268  103C               	iorwf	(btemp+10)^0,w,c
 13784  01626A  103D               	iorwf	(btemp+11)^0,w,c
 13785  01626C  A4D8               	btfss	status,2,c
 13786  01626E  D008               	goto	l2332
 13787                           
 13788                           ;stkvar	_ff2 @ sp[(0)+-8]
 13789  016270  0EF8               	movlw	-8
 13790  016272  6AE3               	clrf	plusw1,c
 13791  016274  0EF9               	movlw	-7
 13792  016276  6AE3               	clrf	plusw1,c
 13793  016278  0EFA               	movlw	-6
 13794  01627A  6AE3               	clrf	plusw1,c
 13795  01627C  0EFB               	movlw	-5
 13796  01627E  6AE3               	clrf	plusw1,c
 13797  016280                     l2332:
 13798                           
 13799                           ;stkvar	_ff1 @ sp[(0)+-4]
 13800  016280  0EFF               	movlw	-1
 13801  016282  AEE3               	btfss	plusw1,7,c
 13802  016284  D024               	goto	l7124
 13803                           
 13804                           ;stkvar	_ff1 @ sp[(0)+-4]
 13805  016286  0E00               	movlw	0
 13806  016288  6E3A               	movwf	(btemp+8)^0,c
 13807  01628A  0E00               	movlw	0
 13808  01628C  6E3B               	movwf	(btemp+9)^0,c
 13809  01628E  0E00               	movlw	0
 13810  016290  6E3C               	movwf	(btemp+10)^0,c
 13811  016292  0E80               	movlw	128
 13812  016294  6E3D               	movwf	(btemp+11)^0,c
 13813  016296  0EFC               	movlw	-4
 13814  016298  50E3               	movf	plusw1,w,c
 13815  01629A  5E3A               	subwf	(btemp+8)^0,f,c
 13816  01629C  0EFD               	movlw	-3
 13817  01629E  50E3               	movf	plusw1,w,c
 13818  0162A0  5A3B               	subwfb	(btemp+9)^0,f,c
 13819  0162A2  0EFE               	movlw	-2
 13820  0162A4  50E3               	movf	plusw1,w,c
 13821  0162A6  5A3C               	subwfb	(btemp+10)^0,f,c
 13822  0162A8  0EFF               	movlw	-1
 13823  0162AA  50E3               	movf	plusw1,w,c
 13824  0162AC  5A3D               	subwfb	(btemp+11)^0,f,c
 13825                           
 13826                           ;stkvar	_ff1 @ sp[(0)+-4]
 13827  0162AE  0EFC               	movlw	-4
 13828  0162B0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13829  0162B6  0EFD               	movlw	-3
 13830  0162B8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13831  0162BE  0EFE               	movlw	-2
 13832  0162C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13833  0162C6  0EFF               	movlw	-1
 13834  0162C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13835  0162CE                     l7124:
 13836                           
 13837                           ;stkvar	_ff2 @ sp[(0)+-8]
 13838  0162CE  0EFB               	movlw	-5
 13839  0162D0  AEE3               	btfss	plusw1,7,c
 13840  0162D2  D024               	goto	l7128
 13841                           
 13842                           ;stkvar	_ff2 @ sp[(0)+-8]
 13843  0162D4  0E00               	movlw	0
 13844  0162D6  6E3A               	movwf	(btemp+8)^0,c
 13845  0162D8  0E00               	movlw	0
 13846  0162DA  6E3B               	movwf	(btemp+9)^0,c
 13847  0162DC  0E00               	movlw	0
 13848  0162DE  6E3C               	movwf	(btemp+10)^0,c
 13849  0162E0  0E80               	movlw	128
 13850  0162E2  6E3D               	movwf	(btemp+11)^0,c
 13851  0162E4  0EF8               	movlw	-8
 13852  0162E6  50E3               	movf	plusw1,w,c
 13853  0162E8  5E3A               	subwf	(btemp+8)^0,f,c
 13854  0162EA  0EF9               	movlw	-7
 13855  0162EC  50E3               	movf	plusw1,w,c
 13856  0162EE  5A3B               	subwfb	(btemp+9)^0,f,c
 13857  0162F0  0EFA               	movlw	-6
 13858  0162F2  50E3               	movf	plusw1,w,c
 13859  0162F4  5A3C               	subwfb	(btemp+10)^0,f,c
 13860  0162F6  0EFB               	movlw	-5
 13861  0162F8  50E3               	movf	plusw1,w,c
 13862  0162FA  5A3D               	subwfb	(btemp+11)^0,f,c
 13863                           
 13864                           ;stkvar	_ff2 @ sp[(0)+-8]
 13865  0162FC  0EF8               	movlw	-8
 13866  0162FE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13867  016304  0EF9               	movlw	-7
 13868  016306  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13869  01630C  0EFA               	movlw	-6
 13870  01630E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13871  016314  0EFB               	movlw	-5
 13872  016316  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13873  01631C                     l7128:
 13874                           
 13875                           ;stkvar	_ff1 @ sp[(0)+-4]
 13876  01631C  0EFF               	movlw	-1
 13877  01631E  7EE3               	btg	plusw1,7,c
 13878                           
 13879                           ;stkvar	_ff2 @ sp[(0)+-8]
 13880  016320  0EFB               	movlw	-5
 13881  016322  7EE3               	btg	plusw1,7,c
 13882                           
 13883                           ;stkvar	_ff2 @ sp[(0)+-8]
 13884                           ;stkvar	_ff1 @ sp[(0)+-4]
 13885  016324  50E1               	movf	fsr1l,w,c
 13886  016326  0FFC               	addlw	-4
 13887  016328  6ED9               	movwf	fsr2l,c
 13888  01632A  50E2               	movf	fsr1h,w,c
 13889  01632C  6EDA               	movwf	fsr2h,c
 13890  01632E  0EFF               	movlw	255
 13891  016330  22DA               	addwfc	fsr2h,f,c
 13892  016332  0EF8               	movlw	-8
 13893  016334  50E3               	movf	plusw1,w,c
 13894  016336  5CDE               	subwf	postinc2,w,c
 13895  016338  0EF9               	movlw	-7
 13896  01633A  50E3               	movf	plusw1,w,c
 13897  01633C  58DE               	subwfb	postinc2,w,c
 13898  01633E  0EFA               	movlw	-6
 13899  016340  50E3               	movf	plusw1,w,c
 13900  016342  58DE               	subwfb	postinc2,w,c
 13901  016344  0EFB               	movlw	-5
 13902  016346  50E3               	movf	plusw1,w,c
 13903  016348  58DE               	subwfb	postinc2,w,c
 13904  01634A  B0D8               	btfsc	status,0,c
 13905  01634C  D002               	goto	l7136
 13906  01634E  9032               	bcf	btemp& (0+255),0,c
 13907  016350  D001               	goto	l2339
 13908  016352                     l7136:
 13909  016352  8032               	bsf	btemp& (0+255),0,c
 13910  016354                     l2339:
 13911                           
 13912                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13913  016354  0EF8               	movlw	248
 13914  016356  26E1               	addwf	fsr1l,f,c
 13915  016358  0EFF               	movlw	255
 13916  01635A  22E2               	addwfc	fsr1h,f,c
 13917  01635C  0012               	return		;funcret
 13918  01635E                     __end_of___flge:
 13919                           	opt callstack 0
 13920                           
 13921 ;; *************** function ___fleq *****************
 13922 ;; Defined at:
 13923 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  ff1             4  [STACK] long 
 13926 ;;  ff2             4  [STACK] long 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;		None
 13929 ;; Return value:  Size  Location     Type
 13930 ;;		None               void
 13931 ;; Registers used:
 13932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13933 ;; Tracked objects:
 13934 ;;		On entry : 0/5
 13935 ;;		On exit  : 0/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13942 ;;Total ram usage:        0 bytes
 13943 ;; Hardware stack levels used:    1
 13944 ;; Hardware stack levels required when called:    6
 13945 ;; This function calls:
 13946 ;;		Nothing
 13947 ;; This function is called by:
 13948 ;;		_efgtoa
 13949 ;; This function uses a reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text54
 13953  016F3C                     __ptext54:
 13954                           	opt callstack 0
 13955  016F3C                     ___fleq:
 13956                           	opt callstack 17
 13957                           
 13958                           ;stkvar	_ff1 @ sp[(0)+-4]
 13959                           
 13960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13961                           ;incstack = 0
 13962  016F3C  50E1               	movf	fsr1l,w,c
 13963  016F3E  0FFC               	addlw	-4
 13964  016F40  6ED9               	movwf	fsr2l,c
 13965  016F42  50E2               	movf	fsr1h,w,c
 13966  016F44  6EDA               	movwf	fsr2h,c
 13967  016F46  0EFF               	movlw	255
 13968  016F48  22DA               	addwfc	fsr2h,f,c
 13969  016F4A  0E00               	movlw	0
 13970  016F4C  14DE               	andwf	postinc2,w,c
 13971  016F4E  6E3A               	movwf	(btemp+8)^0,c
 13972  016F50  0E00               	movlw	0
 13973  016F52  14DE               	andwf	postinc2,w,c
 13974  016F54  6E3B               	movwf	(btemp+9)^0,c
 13975  016F56  0E80               	movlw	128
 13976  016F58  14DE               	andwf	postinc2,w,c
 13977  016F5A  6E3C               	movwf	(btemp+10)^0,c
 13978  016F5C  0E7F               	movlw	127
 13979  016F5E  14DE               	andwf	postinc2,w,c
 13980  016F60  6E3D               	movwf	(btemp+11)^0,c
 13981  016F62  503A               	movf	(btemp+8)^0,w,c
 13982  016F64  103B               	iorwf	(btemp+9)^0,w,c
 13983  016F66  103C               	iorwf	(btemp+10)^0,w,c
 13984  016F68  103D               	iorwf	(btemp+11)^0,w,c
 13985  016F6A  A4D8               	btfss	status,2,c
 13986  016F6C  D008               	goto	l7102
 13987                           
 13988                           ;stkvar	_ff1 @ sp[(0)+-4]
 13989  016F6E  0EFC               	movlw	-4
 13990  016F70  6AE3               	clrf	plusw1,c
 13991  016F72  0EFD               	movlw	-3
 13992  016F74  6AE3               	clrf	plusw1,c
 13993  016F76  0EFE               	movlw	-2
 13994  016F78  6AE3               	clrf	plusw1,c
 13995  016F7A  0EFF               	movlw	-1
 13996  016F7C  6AE3               	clrf	plusw1,c
 13997  016F7E                     l7102:
 13998                           
 13999                           ;stkvar	_ff2 @ sp[(0)+-8]
 14000  016F7E  50E1               	movf	fsr1l,w,c
 14001  016F80  0FF8               	addlw	-8
 14002  016F82  6ED9               	movwf	fsr2l,c
 14003  016F84  50E2               	movf	fsr1h,w,c
 14004  016F86  6EDA               	movwf	fsr2h,c
 14005  016F88  0EFF               	movlw	255
 14006  016F8A  22DA               	addwfc	fsr2h,f,c
 14007  016F8C  0E00               	movlw	0
 14008  016F8E  14DE               	andwf	postinc2,w,c
 14009  016F90  6E3A               	movwf	(btemp+8)^0,c
 14010  016F92  0E00               	movlw	0
 14011  016F94  14DE               	andwf	postinc2,w,c
 14012  016F96  6E3B               	movwf	(btemp+9)^0,c
 14013  016F98  0E80               	movlw	128
 14014  016F9A  14DE               	andwf	postinc2,w,c
 14015  016F9C  6E3C               	movwf	(btemp+10)^0,c
 14016  016F9E  0E7F               	movlw	127
 14017  016FA0  14DE               	andwf	postinc2,w,c
 14018  016FA2  6E3D               	movwf	(btemp+11)^0,c
 14019  016FA4  503A               	movf	(btemp+8)^0,w,c
 14020  016FA6  103B               	iorwf	(btemp+9)^0,w,c
 14021  016FA8  103C               	iorwf	(btemp+10)^0,w,c
 14022  016FAA  103D               	iorwf	(btemp+11)^0,w,c
 14023  016FAC  A4D8               	btfss	status,2,c
 14024  016FAE  D008               	goto	l7106
 14025                           
 14026                           ;stkvar	_ff2 @ sp[(0)+-8]
 14027  016FB0  0EF8               	movlw	-8
 14028  016FB2  6AE3               	clrf	plusw1,c
 14029  016FB4  0EF9               	movlw	-7
 14030  016FB6  6AE3               	clrf	plusw1,c
 14031  016FB8  0EFA               	movlw	-6
 14032  016FBA  6AE3               	clrf	plusw1,c
 14033  016FBC  0EFB               	movlw	-5
 14034  016FBE  6AE3               	clrf	plusw1,c
 14035  016FC0                     l7106:
 14036                           
 14037                           ;stkvar	_ff2 @ sp[(0)+-8]
 14038                           ;stkvar	_ff1 @ sp[(0)+-4]
 14039  016FC0  50E1               	movf	fsr1l,w,c
 14040  016FC2  0FFC               	addlw	-4
 14041  016FC4  6ED9               	movwf	fsr2l,c
 14042  016FC6  50E2               	movf	fsr1h,w,c
 14043  016FC8  6EDA               	movwf	fsr2h,c
 14044  016FCA  0EFF               	movlw	255
 14045  016FCC  22DA               	addwfc	fsr2h,f,c
 14046  016FCE  0EF8               	movlw	-8
 14047  016FD0  50E3               	movf	plusw1,w,c
 14048  016FD2  18DE               	xorwf	postinc2,w,c
 14049  016FD4  E10D               	bnz	u6210
 14050  016FD6  0EF9               	movlw	-7
 14051  016FD8  50E3               	movf	plusw1,w,c
 14052  016FDA  18DE               	xorwf	postinc2,w,c
 14053  016FDC  E109               	bnz	u6210
 14054  016FDE  0EFA               	movlw	-6
 14055  016FE0  50E3               	movf	plusw1,w,c
 14056  016FE2  18DE               	xorwf	postinc2,w,c
 14057  016FE4  E105               	bnz	u6210
 14058  016FE6  0EFB               	movlw	-5
 14059  016FE8  50E3               	movf	plusw1,w,c
 14060  016FEA  18DE               	xorwf	postinc2,w,c
 14061  016FEC  B4D8               	btfsc	status,2,c
 14062  016FEE  D002               	goto	l7110
 14063  016FF0                     u6210:
 14064  016FF0  9032               	bcf	btemp& (0+255),0,c
 14065  016FF2  D001               	goto	l2328
 14066  016FF4                     l7110:
 14067  016FF4  8032               	bsf	btemp& (0+255),0,c
 14068  016FF6                     l2328:
 14069                           
 14070                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14071  016FF6  0EF8               	movlw	248
 14072  016FF8  26E1               	addwf	fsr1l,f,c
 14073  016FFA  0EFF               	movlw	255
 14074  016FFC  22E2               	addwfc	fsr1h,f,c
 14075  016FFE  0012               	return		;funcret
 14076  017000                     __end_of___fleq:
 14077                           	opt callstack 0
 14078                           
 14079 ;; *************** function ___fldiv *****************
 14080 ;; Defined at:
 14081 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14082 ;; Parameters:    Size  Location     Type
 14083 ;;  b               4  [STACK] long 
 14084 ;;  a               4  [STACK] long 
 14085 ;; Auto vars:     Size  Location     Type
 14086 ;;  grs             4  [STACK] unsigned long 
 14087 ;;  rem             4  [STACK] unsigned long 
 14088 ;;  new_exp         2  [STACK] short 
 14089 ;;  aexp            1  [STACK] unsigned char 
 14090 ;;  bexp            1  [STACK] unsigned char 
 14091 ;;  sign            1  [STACK] unsigned char 
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  4  [STACK] unsigned char 
 14094 ;; Registers used:
 14095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14096 ;; Tracked objects:
 14097 ;;		On entry : 0/39
 14098 ;;		On exit  : 0/0
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;Total ram usage:        0 bytes
 14106 ;; Hardware stack levels used:    1
 14107 ;; Hardware stack levels required when called:    6
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_conv_raw_result
 14112 ;;		_efgtoa
 14113 ;; This function uses a reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text55
 14117  012D68                     __ptext55:
 14118                           	opt callstack 0
 14119  012D68                     ___fldiv:
 14120                           	opt callstack 0
 14121                           
 14122                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14123  012D68  0E0D               	movlw	13
 14124  012D6A  26E1               	addwf	fsr1l,f,c
 14125  012D6C  0E00               	movlw	0
 14126  012D6E  22E2               	addwfc	fsr1h,f,c
 14127                           
 14128                           ;stkvar	_b @ sp[(-13)+-4]
 14129                           
 14130                           ;incstack = 0
 14131  012D70  0EF2               	movlw	242
 14132  012D72  24E1               	addwf	fsr1l,w,c
 14133  012D74  6ED9               	movwf	fsr2l,c
 14134  012D76  0EFF               	movlw	255
 14135  012D78  20E2               	addwfc	fsr1h,w,c
 14136  012D7A  6EDA               	movwf	fsr2h,c
 14137  012D7C  50DF               	movf	indf2,w,c
 14138  012D7E  6E3D               	movwf	(btemp+11)^0,c
 14139  012D80  0E80               	movlw	128
 14140  012D82  163D               	andwf	(btemp+11)^0,f,c
 14141                           
 14142                           ;stkvar	_sign @ sp[(-13)+12]
 14143  012D84  0EFF               	movlw	-1
 14144  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14145                           
 14146                           ;stkvar	_b @ sp[(-13)+-4]
 14147  012D8C  0EF2               	movlw	242
 14148  012D8E  24E1               	addwf	fsr1l,w,c
 14149  012D90  6ED9               	movwf	fsr2l,c
 14150  012D92  0EFF               	movlw	255
 14151  012D94  20E2               	addwfc	fsr1h,w,c
 14152  012D96  6EDA               	movwf	fsr2h,c
 14153  012D98  50DF               	movf	indf2,w,c
 14154  012D9A  6E3D               	movwf	(btemp+11)^0,c
 14155  012D9C  90D8               	bcf	status,0,c
 14156  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 14157  012DA0  6E3C               	movwf	(btemp+10)^0,c
 14158                           
 14159                           ;stkvar	_bexp @ sp[(-13)+11]
 14160  012DA2  0EFE               	movlw	-2
 14161  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14162                           
 14163                           ;stkvar	_b @ sp[(-13)+-4]
 14164  012DAA  0EF1               	movlw	241
 14165  012DAC  24E1               	addwf	fsr1l,w,c
 14166  012DAE  6ED9               	movwf	fsr2l,c
 14167  012DB0  0EFF               	movlw	255
 14168  012DB2  20E2               	addwfc	fsr1h,w,c
 14169  012DB4  6EDA               	movwf	fsr2h,c
 14170  012DB6  AEDF               	btfss	indf2,7,c
 14171  012DB8  D002               	goto	l6704
 14172                           
 14173                           ;stkvar	_bexp @ sp[(-13)+11]
 14174  012DBA  0EFE               	movlw	-2
 14175  012DBC  80E3               	bsf	plusw1,0,c
 14176  012DBE                     l6704:
 14177                           
 14178                           ;stkvar	_bexp @ sp[(-13)+11]
 14179  012DBE  0EFE               	movlw	-2
 14180  012DC0  50E3               	movf	plusw1,w,c
 14181  012DC2  B4D8               	btfsc	status,2,c
 14182  012DC4  D027               	goto	l6714
 14183                           
 14184                           ;stkvar	_bexp @ sp[(-13)+11]
 14185  012DC6  0EFE               	movlw	-2
 14186  012DC8  28E3               	incf	plusw1,w,c
 14187  012DCA  A4D8               	btfss	status,2,c
 14188  012DCC  D018               	goto	l6710
 14189  012DCE  0E00               	movlw	0
 14190  012DD0  6E3A               	movwf	(btemp+8)^0,c
 14191  012DD2  0E00               	movlw	0
 14192  012DD4  6E3B               	movwf	(btemp+9)^0,c
 14193  012DD6  0E00               	movlw	0
 14194  012DD8  6E3C               	movwf	(btemp+10)^0,c
 14195  012DDA  0E00               	movlw	0
 14196  012DDC  6E3D               	movwf	(btemp+11)^0,c
 14197                           
 14198                           ;stkvar	_b @ sp[(-13)+-4]
 14199  012DDE  0EEF               	movlw	-17
 14200  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14201  012DE6  0EF0               	movlw	-16
 14202  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14203  012DEE  0EF1               	movlw	-15
 14204  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14205  012DF6  0EF2               	movlw	-14
 14206  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14207  012DFE                     l6710:
 14208                           
 14209                           ;stkvar	_b @ sp[(-13)+-4]
 14210  012DFE  0EF1               	movlw	-15
 14211  012E00  8EE3               	bsf	plusw1,7,c
 14212                           
 14213                           ;stkvar	_b @ sp[(-13)+-4]
 14214  012E02  0EF2               	movlw	242
 14215  012E04  24E1               	addwf	fsr1l,w,c
 14216  012E06  6ED9               	movwf	fsr2l,c
 14217  012E08  0EFF               	movlw	255
 14218  012E0A  20E2               	addwfc	fsr1h,w,c
 14219  012E0C  6EDA               	movwf	fsr2h,c
 14220  012E0E  0E00               	movlw	0
 14221  012E10  6EDF               	movwf	indf2,c
 14222  012E12  D018               	goto	l6716
 14223  012E14                     l6714:
 14224  012E14  0E00               	movlw	0
 14225  012E16  6E3A               	movwf	(btemp+8)^0,c
 14226  012E18  0E00               	movlw	0
 14227  012E1A  6E3B               	movwf	(btemp+9)^0,c
 14228  012E1C  0E00               	movlw	0
 14229  012E1E  6E3C               	movwf	(btemp+10)^0,c
 14230  012E20  0E00               	movlw	0
 14231  012E22  6E3D               	movwf	(btemp+11)^0,c
 14232                           
 14233                           ;stkvar	_b @ sp[(-13)+-4]
 14234  012E24  0EEF               	movlw	-17
 14235  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14236  012E2C  0EF0               	movlw	-16
 14237  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14238  012E34  0EF1               	movlw	-15
 14239  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14240  012E3C  0EF2               	movlw	-14
 14241  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14242  012E44                     l6716:
 14243                           
 14244                           ;stkvar	_a @ sp[(-13)+-8]
 14245  012E44  0EEE               	movlw	238
 14246  012E46  24E1               	addwf	fsr1l,w,c
 14247  012E48  6ED9               	movwf	fsr2l,c
 14248  012E4A  0EFF               	movlw	255
 14249  012E4C  20E2               	addwfc	fsr1h,w,c
 14250  012E4E  6EDA               	movwf	fsr2h,c
 14251  012E50  50DF               	movf	indf2,w,c
 14252  012E52  6E3D               	movwf	(btemp+11)^0,c
 14253  012E54  0E80               	movlw	128
 14254  012E56  163D               	andwf	(btemp+11)^0,f,c
 14255                           
 14256                           ;stkvar	_sign @ sp[(-13)+12]
 14257  012E58  50E1               	movf	fsr1l,w,c
 14258  012E5A  0FFF               	addlw	-1
 14259  012E5C  6ED9               	movwf	fsr2l,c
 14260  012E5E  50E2               	movf	fsr1h,w,c
 14261  012E60  6EDA               	movwf	fsr2h,c
 14262  012E62  0EFF               	movlw	255
 14263  012E64  22DA               	addwfc	fsr2h,f,c
 14264  012E66  503D               	movf	(btemp+11)^0,w,c
 14265  012E68  1ADF               	xorwf	indf2,f,c
 14266                           
 14267                           ;stkvar	_a @ sp[(-13)+-8]
 14268  012E6A  0EEE               	movlw	238
 14269  012E6C  24E1               	addwf	fsr1l,w,c
 14270  012E6E  6ED9               	movwf	fsr2l,c
 14271  012E70  0EFF               	movlw	255
 14272  012E72  20E2               	addwfc	fsr1h,w,c
 14273  012E74  6EDA               	movwf	fsr2h,c
 14274  012E76  50DF               	movf	indf2,w,c
 14275  012E78  6E3D               	movwf	(btemp+11)^0,c
 14276  012E7A  90D8               	bcf	status,0,c
 14277  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 14278  012E7E  6E3C               	movwf	(btemp+10)^0,c
 14279                           
 14280                           ;stkvar	_aexp @ sp[(-13)+10]
 14281  012E80  0EFD               	movlw	-3
 14282  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14283                           
 14284                           ;stkvar	_a @ sp[(-13)+-8]
 14285  012E88  0EED               	movlw	237
 14286  012E8A  24E1               	addwf	fsr1l,w,c
 14287  012E8C  6ED9               	movwf	fsr2l,c
 14288  012E8E  0EFF               	movlw	255
 14289  012E90  20E2               	addwfc	fsr1h,w,c
 14290  012E92  6EDA               	movwf	fsr2h,c
 14291  012E94  AEDF               	btfss	indf2,7,c
 14292  012E96  D002               	goto	l6724
 14293                           
 14294                           ;stkvar	_aexp @ sp[(-13)+10]
 14295  012E98  0EFD               	movlw	-3
 14296  012E9A  80E3               	bsf	plusw1,0,c
 14297  012E9C                     l6724:
 14298                           
 14299                           ;stkvar	_aexp @ sp[(-13)+10]
 14300  012E9C  0EFD               	movlw	-3
 14301  012E9E  50E3               	movf	plusw1,w,c
 14302  012EA0  B4D8               	btfsc	status,2,c
 14303  012EA2  D027               	goto	l6734
 14304                           
 14305                           ;stkvar	_aexp @ sp[(-13)+10]
 14306  012EA4  0EFD               	movlw	-3
 14307  012EA6  28E3               	incf	plusw1,w,c
 14308  012EA8  A4D8               	btfss	status,2,c
 14309  012EAA  D018               	goto	l6730
 14310  012EAC  0E00               	movlw	0
 14311  012EAE  6E3A               	movwf	(btemp+8)^0,c
 14312  012EB0  0E00               	movlw	0
 14313  012EB2  6E3B               	movwf	(btemp+9)^0,c
 14314  012EB4  0E00               	movlw	0
 14315  012EB6  6E3C               	movwf	(btemp+10)^0,c
 14316  012EB8  0E00               	movlw	0
 14317  012EBA  6E3D               	movwf	(btemp+11)^0,c
 14318                           
 14319                           ;stkvar	_a @ sp[(-13)+-8]
 14320  012EBC  0EEB               	movlw	-21
 14321  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14322  012EC4  0EEC               	movlw	-20
 14323  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14324  012ECC  0EED               	movlw	-19
 14325  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14326  012ED4  0EEE               	movlw	-18
 14327  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14328  012EDC                     l6730:
 14329                           
 14330                           ;stkvar	_a @ sp[(-13)+-8]
 14331  012EDC  0EED               	movlw	-19
 14332  012EDE  8EE3               	bsf	plusw1,7,c
 14333                           
 14334                           ;stkvar	_a @ sp[(-13)+-8]
 14335  012EE0  0EEE               	movlw	238
 14336  012EE2  24E1               	addwf	fsr1l,w,c
 14337  012EE4  6ED9               	movwf	fsr2l,c
 14338  012EE6  0EFF               	movlw	255
 14339  012EE8  20E2               	addwfc	fsr1h,w,c
 14340  012EEA  6EDA               	movwf	fsr2h,c
 14341  012EEC  0E00               	movlw	0
 14342  012EEE  6EDF               	movwf	indf2,c
 14343  012EF0  D018               	goto	l6736
 14344  012EF2                     l6734:
 14345  012EF2  0E00               	movlw	0
 14346  012EF4  6E3A               	movwf	(btemp+8)^0,c
 14347  012EF6  0E00               	movlw	0
 14348  012EF8  6E3B               	movwf	(btemp+9)^0,c
 14349  012EFA  0E00               	movlw	0
 14350  012EFC  6E3C               	movwf	(btemp+10)^0,c
 14351  012EFE  0E00               	movlw	0
 14352  012F00  6E3D               	movwf	(btemp+11)^0,c
 14353                           
 14354                           ;stkvar	_a @ sp[(-13)+-8]
 14355  012F02  0EEB               	movlw	-21
 14356  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14357  012F0A  0EEC               	movlw	-20
 14358  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14359  012F12  0EED               	movlw	-19
 14360  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14361  012F1A  0EEE               	movlw	-18
 14362  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14363  012F22                     l6736:
 14364                           
 14365                           ;stkvar	_a @ sp[(-13)+-8]
 14366  012F22  0EEB               	movlw	-21
 14367  012F24  50E3               	movf	plusw1,w,c
 14368  012F26  E139               	bnz	l6748
 14369  012F28  0EEC               	movlw	-20
 14370  012F2A  50E3               	movf	plusw1,w,c
 14371  012F2C  E136               	bnz	l6748
 14372  012F2E  0EED               	movlw	-19
 14373  012F30  50E3               	movf	plusw1,w,c
 14374  012F32  E133               	bnz	l6748
 14375  012F34  0EEE               	movlw	-18
 14376  012F36  50E3               	movf	plusw1,w,c
 14377  012F38  A4D8               	btfss	status,2,c
 14378  012F3A  D02F               	goto	l6748
 14379                           
 14380                           ;stkvar	_b @ sp[(-13)+-4]
 14381  012F3C  0EEF               	movlw	-17
 14382  012F3E  6AE3               	clrf	plusw1,c
 14383  012F40  0EF0               	movlw	-16
 14384  012F42  6AE3               	clrf	plusw1,c
 14385  012F44  0EF1               	movlw	-15
 14386  012F46  6AE3               	clrf	plusw1,c
 14387  012F48  0EF2               	movlw	-14
 14388  012F4A  6AE3               	clrf	plusw1,c
 14389                           
 14390                           ;stkvar	_b @ sp[(-13)+-4]
 14391  012F4C  0EF1               	movlw	241
 14392  012F4E  24E1               	addwf	fsr1l,w,c
 14393  012F50  6ED9               	movwf	fsr2l,c
 14394  012F52  0EFF               	movlw	255
 14395  012F54  20E2               	addwfc	fsr1h,w,c
 14396  012F56  6EDA               	movwf	fsr2h,c
 14397  012F58  0E80               	movlw	128
 14398  012F5A  12DE               	iorwf	postinc2,f,c
 14399  012F5C  0E7F               	movlw	127
 14400  012F5E  12DD               	iorwf	postdec2,f,c
 14401  012F60                     l6742:
 14402                           
 14403                           ;stkvar	_sign @ sp[(-13)+12]
 14404  012F60  0EFF               	movlw	-1
 14405  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 14406                           
 14407                           ;stkvar	_b @ sp[(-13)+-4]
 14408  012F68  0EF2               	movlw	242
 14409  012F6A  24E1               	addwf	fsr1l,w,c
 14410  012F6C  6ED9               	movwf	fsr2l,c
 14411  012F6E  0EFF               	movlw	255
 14412  012F70  20E2               	addwfc	fsr1h,w,c
 14413  012F72  6EDA               	movwf	fsr2h,c
 14414  012F74  503D               	movf	(btemp+11)^0,w,c
 14415  012F76  12DF               	iorwf	indf2,f,c
 14416                           
 14417                           ;stkvar	_b @ sp[(-13)+-4]
 14418  012F78  0EEF               	movlw	-17
 14419  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 14420  012F80  0EF0               	movlw	-16
 14421  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 14422  012F88  0EF1               	movlw	-15
 14423  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 14424  012F90  0EF2               	movlw	-14
 14425  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 14426  012F98  D19F               	goto	l2651
 14427  012F9A                     l6748:
 14428                           
 14429                           ;stkvar	_bexp @ sp[(-13)+11]
 14430  012F9A  0EFE               	movlw	-2
 14431  012F9C  50E3               	movf	plusw1,w,c
 14432  012F9E  A4D8               	btfss	status,2,c
 14433  012FA0  D009               	goto	l6756
 14434  012FA2  0E00               	movlw	0
 14435  012FA4  6E32               	movwf	btemp^0,c
 14436  012FA6  0E00               	movlw	0
 14437  012FA8  6E33               	movwf	(btemp+1)^0,c
 14438  012FAA  0E00               	movlw	0
 14439  012FAC  6E34               	movwf	(btemp+2)^0,c
 14440  012FAE  0E00               	movlw	0
 14441  012FB0  6E35               	movwf	(btemp+3)^0,c
 14442  012FB2  D192               	goto	l2651
 14443  012FB4                     l6756:
 14444                           
 14445                           ;stkvar	_bexp @ sp[(-13)+11]
 14446  012FB4  0EFE               	movlw	-2
 14447  012FB6  50E3               	movf	plusw1,w,c
 14448  012FB8  6E3C               	movwf	(btemp+10)^0,c
 14449  012FBA  6A3D               	clrf	(btemp+11)^0,c
 14450                           
 14451                           ;stkvar	_aexp @ sp[(-13)+10]
 14452  012FBC  0EFD               	movlw	-3
 14453  012FBE  50E3               	movf	plusw1,w,c
 14454  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 14455  012FC2  0E00               	movlw	0
 14456  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 14457  012FC6  0E7F               	movlw	127
 14458  012FC8  263C               	addwf	(btemp+10)^0,f,c
 14459  012FCA  0E00               	movlw	0
 14460  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 14461                           
 14462                           ;stkvar	_new_exp @ sp[(-13)+8]
 14463  012FCE  0EFB               	movlw	-5
 14464  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14465  012FD6  0EFC               	movlw	-4
 14466  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14467                           
 14468                           ;stkvar	_b @ sp[(-13)+-4]
 14469  012FDE  0EEF               	movlw	-17
 14470  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14471  012FE6  0EF0               	movlw	-16
 14472  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14473  012FEE  0EF1               	movlw	-15
 14474  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14475  012FF6  0EF2               	movlw	-14
 14476  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14477                           
 14478                           ;stkvar	_rem @ sp[(-13)+4]
 14479  012FFE  0EF7               	movlw	-9
 14480  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14481  013006  0EF8               	movlw	-8
 14482  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14483  01300E  0EF9               	movlw	-7
 14484  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14485  013016  0EFA               	movlw	-6
 14486  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14487                           
 14488                           ;stkvar	_b @ sp[(-13)+-4]
 14489  01301E  0EEF               	movlw	-17
 14490  013020  6AE3               	clrf	plusw1,c
 14491  013022  0EF0               	movlw	-16
 14492  013024  6AE3               	clrf	plusw1,c
 14493  013026  0EF1               	movlw	-15
 14494  013028  6AE3               	clrf	plusw1,c
 14495  01302A  0EF2               	movlw	-14
 14496  01302C  6AE3               	clrf	plusw1,c
 14497                           
 14498                           ;stkvar	_grs @ sp[(-13)+0]
 14499  01302E  0EF3               	movlw	-13
 14500  013030  6AE3               	clrf	plusw1,c
 14501  013032  0EF4               	movlw	-12
 14502  013034  6AE3               	clrf	plusw1,c
 14503  013036  0EF5               	movlw	-11
 14504  013038  6AE3               	clrf	plusw1,c
 14505  01303A  0EF6               	movlw	-10
 14506  01303C  6AE3               	clrf	plusw1,c
 14507                           
 14508                           ;stkvar	_aexp @ sp[(-13)+10]
 14509  01303E  0EFD               	movlw	-3
 14510  013040  6AE3               	clrf	plusw1,c
 14511  013042  D050               	goto	l6784
 14512  013044                     l6766:
 14513                           
 14514                           ;stkvar	_aexp @ sp[(-13)+10]
 14515  013044  0EFD               	movlw	-3
 14516  013046  50E3               	movf	plusw1,w,c
 14517  013048  B4D8               	btfsc	status,2,c
 14518  01304A  D020               	goto	l6776
 14519                           
 14520                           ;stkvar	_rem @ sp[(-13)+4]
 14521  01304C  90D8               	bcf	status,0,c
 14522  01304E  0EF7               	movlw	-9
 14523  013050  36E3               	rlcf	plusw1,f,c
 14524  013052  0EF8               	movlw	-8
 14525  013054  36E3               	rlcf	plusw1,f,c
 14526  013056  0EF9               	movlw	-7
 14527  013058  36E3               	rlcf	plusw1,f,c
 14528  01305A  0EFA               	movlw	-6
 14529  01305C  36E3               	rlcf	plusw1,f,c
 14530                           
 14531                           ;stkvar	_b @ sp[(-13)+-4]
 14532  01305E  90D8               	bcf	status,0,c
 14533  013060  0EEF               	movlw	-17
 14534  013062  36E3               	rlcf	plusw1,f,c
 14535  013064  0EF0               	movlw	-16
 14536  013066  36E3               	rlcf	plusw1,f,c
 14537  013068  0EF1               	movlw	-15
 14538  01306A  36E3               	rlcf	plusw1,f,c
 14539  01306C  0EF2               	movlw	-14
 14540  01306E  36E3               	rlcf	plusw1,f,c
 14541                           
 14542                           ;stkvar	_grs @ sp[(-13)+0]
 14543  013070  0EF6               	movlw	-10
 14544  013072  AEE3               	btfss	plusw1,7,c
 14545  013074  D002               	goto	l6774
 14546                           
 14547                           ;stkvar	_b @ sp[(-13)+-4]
 14548  013076  0EEF               	movlw	-17
 14549  013078  80E3               	bsf	plusw1,0,c
 14550  01307A                     l6774:
 14551                           
 14552                           ;stkvar	_grs @ sp[(-13)+0]
 14553  01307A  90D8               	bcf	status,0,c
 14554  01307C  0EF3               	movlw	-13
 14555  01307E  36E3               	rlcf	plusw1,f,c
 14556  013080  0EF4               	movlw	-12
 14557  013082  36E3               	rlcf	plusw1,f,c
 14558  013084  0EF5               	movlw	-11
 14559  013086  36E3               	rlcf	plusw1,f,c
 14560  013088  0EF6               	movlw	-10
 14561  01308A  36E3               	rlcf	plusw1,f,c
 14562  01308C                     l6776:
 14563                           
 14564                           ;stkvar	_a @ sp[(-13)+-8]
 14565                           ;stkvar	_rem @ sp[(-13)+4]
 14566  01308C  50E1               	movf	fsr1l,w,c
 14567  01308E  0FF7               	addlw	-9
 14568  013090  6ED9               	movwf	fsr2l,c
 14569  013092  50E2               	movf	fsr1h,w,c
 14570  013094  6EDA               	movwf	fsr2h,c
 14571  013096  0EFF               	movlw	255
 14572  013098  22DA               	addwfc	fsr2h,f,c
 14573  01309A  0EEB               	movlw	-21
 14574  01309C  50E3               	movf	plusw1,w,c
 14575  01309E  5CDE               	subwf	postinc2,w,c
 14576  0130A0  0EEC               	movlw	-20
 14577  0130A2  50E3               	movf	plusw1,w,c
 14578  0130A4  58DE               	subwfb	postinc2,w,c
 14579  0130A6  0EED               	movlw	-19
 14580  0130A8  50E3               	movf	plusw1,w,c
 14581  0130AA  58DE               	subwfb	postinc2,w,c
 14582  0130AC  0EEE               	movlw	-18
 14583  0130AE  50E3               	movf	plusw1,w,c
 14584  0130B0  58DE               	subwfb	postinc2,w,c
 14585  0130B2  A0D8               	btfss	status,0,c
 14586  0130B4  D015               	goto	l6782
 14587                           
 14588                           ;stkvar	_grs @ sp[(-13)+0]
 14589  0130B6  0EF6               	movlw	-10
 14590  0130B8  8CE3               	bsf	plusw1,6,c
 14591                           
 14592                           ;stkvar	_a @ sp[(-13)+-8]
 14593                           ;stkvar	_rem @ sp[(-13)+4]
 14594  0130BA  50E1               	movf	fsr1l,w,c
 14595  0130BC  0FF7               	addlw	-9
 14596  0130BE  6ED9               	movwf	fsr2l,c
 14597  0130C0  50E2               	movf	fsr1h,w,c
 14598  0130C2  6EDA               	movwf	fsr2h,c
 14599  0130C4  0EFF               	movlw	255
 14600  0130C6  22DA               	addwfc	fsr2h,f,c
 14601  0130C8  0EEB               	movlw	-21
 14602  0130CA  50E3               	movf	plusw1,w,c
 14603  0130CC  5EDE               	subwf	postinc2,f,c
 14604  0130CE  0EEC               	movlw	-20
 14605  0130D0  50E3               	movf	plusw1,w,c
 14606  0130D2  5ADE               	subwfb	postinc2,f,c
 14607  0130D4  0EED               	movlw	-19
 14608  0130D6  50E3               	movf	plusw1,w,c
 14609  0130D8  5ADE               	subwfb	postinc2,f,c
 14610  0130DA  0EEE               	movlw	-18
 14611  0130DC  50E3               	movf	plusw1,w,c
 14612  0130DE  5ADE               	subwfb	postinc2,f,c
 14613  0130E0                     l6782:
 14614                           
 14615                           ;stkvar	_aexp @ sp[(-13)+10]
 14616  0130E0  0EFD               	movlw	-3
 14617  0130E2  2AE3               	incf	plusw1,f,c
 14618  0130E4                     l6784:
 14619                           
 14620                           ;stkvar	_aexp @ sp[(-13)+10]
 14621  0130E4  0EFD               	movlw	-3
 14622  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 14623  0130EC  0E19               	movlw	25
 14624  0130EE  6432               	cpfsgt	btemp^0,c
 14625  0130F0  D7A9               	goto	l6766
 14626                           
 14627                           ;stkvar	_rem @ sp[(-13)+4]
 14628  0130F2  0EF7               	movlw	-9
 14629  0130F4  50E3               	movf	plusw1,w,c
 14630  0130F6  E10A               	bnz	u5710
 14631  0130F8  0EF8               	movlw	-8
 14632  0130FA  50E3               	movf	plusw1,w,c
 14633  0130FC  E107               	bnz	u5710
 14634  0130FE  0EF9               	movlw	-7
 14635  013100  50E3               	movf	plusw1,w,c
 14636  013102  E104               	bnz	u5710
 14637  013104  0EFA               	movlw	-6
 14638  013106  50E3               	movf	plusw1,w,c
 14639  013108  B4D8               	btfsc	status,2,c
 14640  01310A  D024               	goto	l6800
 14641  01310C                     u5710:
 14642                           
 14643                           ;stkvar	_grs @ sp[(-13)+0]
 14644  01310C  0EF3               	movlw	-13
 14645  01310E  80E3               	bsf	plusw1,0,c
 14646  013110  D021               	goto	l6800
 14647  013112                     l6790:
 14648                           
 14649                           ;stkvar	_b @ sp[(-13)+-4]
 14650  013112  90D8               	bcf	status,0,c
 14651  013114  0EEF               	movlw	-17
 14652  013116  36E3               	rlcf	plusw1,f,c
 14653  013118  0EF0               	movlw	-16
 14654  01311A  36E3               	rlcf	plusw1,f,c
 14655  01311C  0EF1               	movlw	-15
 14656  01311E  36E3               	rlcf	plusw1,f,c
 14657  013120  0EF2               	movlw	-14
 14658  013122  36E3               	rlcf	plusw1,f,c
 14659                           
 14660                           ;stkvar	_grs @ sp[(-13)+0]
 14661  013124  0EF6               	movlw	-10
 14662  013126  AEE3               	btfss	plusw1,7,c
 14663  013128  D002               	goto	l6796
 14664                           
 14665                           ;stkvar	_b @ sp[(-13)+-4]
 14666  01312A  0EEF               	movlw	-17
 14667  01312C  80E3               	bsf	plusw1,0,c
 14668  01312E                     l6796:
 14669                           
 14670                           ;stkvar	_grs @ sp[(-13)+0]
 14671  01312E  90D8               	bcf	status,0,c
 14672  013130  0EF3               	movlw	-13
 14673  013132  36E3               	rlcf	plusw1,f,c
 14674  013134  0EF4               	movlw	-12
 14675  013136  36E3               	rlcf	plusw1,f,c
 14676  013138  0EF5               	movlw	-11
 14677  01313A  36E3               	rlcf	plusw1,f,c
 14678  01313C  0EF6               	movlw	-10
 14679  01313E  36E3               	rlcf	plusw1,f,c
 14680                           
 14681                           ;stkvar	_new_exp @ sp[(-13)+8]
 14682  013140  50E1               	movf	fsr1l,w,c
 14683  013142  0FFB               	addlw	-5
 14684  013144  6ED9               	movwf	fsr2l,c
 14685  013146  50E2               	movf	fsr1h,w,c
 14686  013148  6EDA               	movwf	fsr2h,c
 14687  01314A  0EFF               	movlw	255
 14688  01314C  22DA               	addwfc	fsr2h,f,c
 14689  01314E  06DE               	decf	postinc2,f,c
 14690  013150  0E00               	movlw	0
 14691  013152  5ADD               	subwfb	postdec2,f,c
 14692  013154                     l6800:
 14693                           
 14694                           ;stkvar	_b @ sp[(-13)+-4]
 14695  013154  0EF1               	movlw	-15
 14696  013156  AEE3               	btfss	plusw1,7,c
 14697  013158  D7DC               	goto	l6790
 14698                           
 14699                           ;stkvar	_aexp @ sp[(-13)+10]
 14700  01315A  0EFD               	movlw	-3
 14701  01315C  6AE3               	clrf	plusw1,c
 14702                           
 14703                           ;stkvar	_grs @ sp[(-13)+0]
 14704  01315E  0EF6               	movlw	-10
 14705  013160  AEE3               	btfss	plusw1,7,c
 14706  013162  D020               	goto	l6814
 14707                           
 14708                           ;stkvar	_grs @ sp[(-13)+0]
 14709  013164  50E1               	movf	fsr1l,w,c
 14710  013166  0FF3               	addlw	-13
 14711  013168  6ED9               	movwf	fsr2l,c
 14712  01316A  50E2               	movf	fsr1h,w,c
 14713  01316C  6EDA               	movwf	fsr2h,c
 14714  01316E  0EFF               	movlw	255
 14715  013170  22DA               	addwfc	fsr2h,f,c
 14716  013172  0EFF               	movlw	255
 14717  013174  14DE               	andwf	postinc2,w,c
 14718  013176  6E3A               	movwf	(btemp+8)^0,c
 14719  013178  0EFF               	movlw	255
 14720  01317A  14DE               	andwf	postinc2,w,c
 14721  01317C  6E3B               	movwf	(btemp+9)^0,c
 14722  01317E  0EFF               	movlw	255
 14723  013180  14DE               	andwf	postinc2,w,c
 14724  013182  6E3C               	movwf	(btemp+10)^0,c
 14725  013184  0E7F               	movlw	127
 14726  013186  14DE               	andwf	postinc2,w,c
 14727  013188  6E3D               	movwf	(btemp+11)^0,c
 14728  01318A  503A               	movf	(btemp+8)^0,w,c
 14729  01318C  103B               	iorwf	(btemp+9)^0,w,c
 14730  01318E  103C               	iorwf	(btemp+10)^0,w,c
 14731  013190  103D               	iorwf	(btemp+11)^0,w,c
 14732  013192  B4D8               	btfsc	status,2,c
 14733  013194  D004               	goto	l6810
 14734  013196                     u5750:
 14735                           
 14736                           ;stkvar	_aexp @ sp[(-13)+10]
 14737  013196  0EFD               	movlw	-3
 14738  013198  6AE3               	clrf	plusw1,c
 14739  01319A  2AE3               	incf	plusw1,f,c
 14740  01319C  D003               	goto	l6814
 14741  01319E                     l6810:
 14742                           
 14743                           ;stkvar	_b @ sp[(-13)+-4]
 14744  01319E  0EEF               	movlw	-17
 14745  0131A0  B0E3               	btfsc	plusw1,0,c
 14746  0131A2  D7F9               	goto	u5750
 14747  0131A4                     l6814:
 14748                           
 14749                           ;stkvar	_aexp @ sp[(-13)+10]
 14750  0131A4  0EFD               	movlw	-3
 14751  0131A6  50E3               	movf	plusw1,w,c
 14752  0131A8  B4D8               	btfsc	status,2,c
 14753  0131AA  D036               	goto	l6824
 14754                           
 14755                           ;stkvar	_b @ sp[(-13)+-4]
 14756  0131AC  50E1               	movf	fsr1l,w,c
 14757  0131AE  0FEF               	addlw	-17
 14758  0131B0  6ED9               	movwf	fsr2l,c
 14759  0131B2  50E2               	movf	fsr1h,w,c
 14760  0131B4  6EDA               	movwf	fsr2h,c
 14761  0131B6  0EFF               	movlw	255
 14762  0131B8  22DA               	addwfc	fsr2h,f,c
 14763  0131BA  2ADE               	incf	postinc2,f,c
 14764  0131BC  0E00               	movlw	0
 14765  0131BE  22DE               	addwfc	postinc2,f,c
 14766  0131C0  22DE               	addwfc	postinc2,f,c
 14767  0131C2  22DE               	addwfc	postinc2,f,c
 14768                           
 14769                           ;stkvar	_b @ sp[(-13)+-4]
 14770  0131C4  0EF2               	movlw	-14
 14771  0131C6  A0E3               	btfss	plusw1,0,c
 14772  0131C8  D027               	goto	l6824
 14773  0131CA  0E01               	movlw	1
 14774  0131CC  6E3D               	movwf	(btemp+11)^0,c
 14775                           
 14776                           ;stkvar	_b @ sp[(-13)+-4]
 14777  0131CE  50E1               	movf	fsr1l,w,c
 14778  0131D0  0FEF               	addlw	-17
 14779  0131D2  6ED9               	movwf	fsr2l,c
 14780  0131D4  50E2               	movf	fsr1h,w,c
 14781  0131D6  6EDA               	movwf	fsr2h,c
 14782  0131D8  0EFF               	movlw	255
 14783  0131DA  22DA               	addwfc	fsr2h,f,c
 14784  0131DC  283D               	incf	(btemp+11)^0,w,c
 14785  0131DE  52DE               	movf	postinc2,f,c
 14786  0131E0  D008               	goto	u5790
 14787  0131E2                     u5795:
 14788  0131E2  52DE               	movf	postinc2,f,c
 14789  0131E4  90D8               	bcf	status,0,c
 14790  0131E6  BEDC               	btfsc	preinc2,7,c
 14791  0131E8  80D8               	bsf	status,0,c
 14792  0131EA  32DD               	rrcf	postdec2,f,c
 14793  0131EC  32DD               	rrcf	postdec2,f,c
 14794  0131EE  32DD               	rrcf	postdec2,f,c
 14795  0131F0  32DE               	rrcf	postinc2,f,c
 14796  0131F2                     u5790:
 14797  0131F2  2EE8               	decfsz	wreg,f,c
 14798  0131F4  D7F6               	goto	u5795
 14799                           
 14800                           ;stkvar	_new_exp @ sp[(-13)+8]
 14801  0131F6  0EFB               	movlw	-5
 14802  0131F8  50E3               	movf	plusw1,w,c
 14803  0131FA  0F01               	addlw	1
 14804  0131FC  6E32               	movwf	btemp^0,c
 14805  0131FE  0EFB               	movlw	-5
 14806  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 14807  013206  6A32               	clrf	btemp^0,c
 14808  013208  0EFC               	movlw	-4
 14809  01320A  50E3               	movf	plusw1,w,c
 14810  01320C  2032               	addwfc	btemp^0,w,c
 14811  01320E  6E32               	movwf	btemp^0,c
 14812  013210  0EFC               	movlw	-4
 14813  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 14814  013218                     l6824:
 14815                           
 14816                           ;stkvar	_new_exp @ sp[(-13)+8]
 14817  013218  0EFC               	movlw	-4
 14818  01321A  BEE3               	btfsc	plusw1,7,c
 14819  01321C  D01B               	goto	l6830
 14820  01321E  0EFC               	movlw	-4
 14821  013220  50E3               	movf	plusw1,w,c
 14822  013222  E104               	bnz	u5800
 14823  013224  0EFB               	movlw	-5
 14824  013226  28E3               	incf	plusw1,w,c
 14825  013228  A0D8               	btfss	status,0,c
 14826  01322A  D014               	goto	l6830
 14827  01322C                     u5800:
 14828  01322C  0EFF               	movlw	255
 14829  01322E  6E3C               	movwf	(btemp+10)^0,c
 14830  013230  0E00               	movlw	0
 14831  013232  6E3D               	movwf	(btemp+11)^0,c
 14832                           
 14833                           ;stkvar	_new_exp @ sp[(-13)+8]
 14834  013234  0EFB               	movlw	-5
 14835  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14836  01323C  0EFC               	movlw	-4
 14837  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14838                           
 14839                           ;stkvar	_b @ sp[(-13)+-4]
 14840  013244  0EEF               	movlw	-17
 14841  013246  6AE3               	clrf	plusw1,c
 14842  013248  0EF0               	movlw	-16
 14843  01324A  6AE3               	clrf	plusw1,c
 14844  01324C  0EF1               	movlw	-15
 14845  01324E  6AE3               	clrf	plusw1,c
 14846  013250  0EF2               	movlw	-14
 14847  013252  6AE3               	clrf	plusw1,c
 14848  013254                     l6830:
 14849                           
 14850                           ;stkvar	_new_exp @ sp[(-13)+8]
 14851  013254  0EFC               	movlw	-4
 14852  013256  BEE3               	btfsc	plusw1,7,c
 14853  013258  D007               	goto	u5810
 14854  01325A  0EFC               	movlw	-4
 14855  01325C  50E3               	movf	plusw1,w,c
 14856  01325E  E112               	bnz	l6836
 14857  013260  0EFB               	movlw	-5
 14858  013262  04E3               	decf	plusw1,w,c
 14859  013264  B0D8               	btfsc	status,0,c
 14860  013266  D00E               	goto	l6836
 14861  013268                     u5810:
 14862                           
 14863                           ;stkvar	_new_exp @ sp[(-13)+8]
 14864  013268  0EFB               	movlw	-5
 14865  01326A  6AE3               	clrf	plusw1,c
 14866  01326C  0EFC               	movlw	-4
 14867  01326E  6AE3               	clrf	plusw1,c
 14868                           
 14869                           ;stkvar	_b @ sp[(-13)+-4]
 14870  013270  0EEF               	movlw	-17
 14871  013272  6AE3               	clrf	plusw1,c
 14872  013274  0EF0               	movlw	-16
 14873  013276  6AE3               	clrf	plusw1,c
 14874  013278  0EF1               	movlw	-15
 14875  01327A  6AE3               	clrf	plusw1,c
 14876  01327C  0EF2               	movlw	-14
 14877  01327E  6AE3               	clrf	plusw1,c
 14878                           
 14879                           ;stkvar	_sign @ sp[(-13)+12]
 14880  013280  0EFF               	movlw	-1
 14881  013282  6AE3               	clrf	plusw1,c
 14882  013284                     l6836:
 14883                           
 14884                           ;stkvar	_new_exp @ sp[(-13)+8]
 14885                           ;stkvar	_bexp @ sp[(-13)+11]
 14886  013284  0EFB               	movlw	-5
 14887  013286  006F FF8C  F032    	movff	plusw1,btemp
 14888  01328C  0EFE               	movlw	-2
 14889  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14890                           
 14891                           ;stkvar	_bexp @ sp[(-13)+11]
 14892  013294  0EFE               	movlw	-2
 14893  013296  A0E3               	btfss	plusw1,0,c
 14894  013298  D009               	goto	l6842
 14895                           
 14896                           ;stkvar	_b @ sp[(-13)+-4]
 14897  01329A  0EF1               	movlw	241
 14898  01329C  24E1               	addwf	fsr1l,w,c
 14899  01329E  6ED9               	movwf	fsr2l,c
 14900  0132A0  0EFF               	movlw	255
 14901  0132A2  20E2               	addwfc	fsr1h,w,c
 14902  0132A4  6EDA               	movwf	fsr2h,c
 14903  0132A6  0E00               	movlw	0
 14904  0132A8  8EDB               	bsf	plusw2,7,c
 14905  0132AA  D008               	goto	l6844
 14906  0132AC                     l6842:
 14907                           
 14908                           ;stkvar	_b @ sp[(-13)+-4]
 14909  0132AC  0EF1               	movlw	241
 14910  0132AE  24E1               	addwf	fsr1l,w,c
 14911  0132B0  6ED9               	movwf	fsr2l,c
 14912  0132B2  0EFF               	movlw	255
 14913  0132B4  20E2               	addwfc	fsr1h,w,c
 14914  0132B6  6EDA               	movwf	fsr2h,c
 14915  0132B8  0E7F               	movlw	127
 14916  0132BA  16DF               	andwf	indf2,f,c
 14917  0132BC                     l6844:
 14918                           
 14919                           ;stkvar	_b @ sp[(-13)+-4]
 14920  0132BC  0EF2               	movlw	242
 14921  0132BE  24E1               	addwf	fsr1l,w,c
 14922  0132C0  6ED9               	movwf	fsr2l,c
 14923  0132C2  0EFF               	movlw	255
 14924  0132C4  20E2               	addwfc	fsr1h,w,c
 14925  0132C6  6EDA               	movwf	fsr2h,c
 14926                           
 14927                           ;stkvar	_bexp @ sp[(-13)+11]
 14928  0132C8  0EFE               	movlw	-2
 14929  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14930  0132D0  90D8               	bcf	status,0,c
 14931  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 14932  0132D4  6EDF               	movwf	indf2,c
 14933  0132D6  D644               	goto	l6742
 14934  0132D8                     l2651:
 14935                           
 14936                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14937  0132D8  0EEB               	movlw	235
 14938  0132DA  26E1               	addwf	fsr1l,f,c
 14939  0132DC  0EFF               	movlw	255
 14940  0132DE  22E2               	addwfc	fsr1h,f,c
 14941  0132E0  0012               	return		;funcret
 14942  0132E2                     __end_of___fldiv:
 14943                           	opt callstack 0
 14944                           
 14945 ;; *************** function ___awmod *****************
 14946 ;; Defined at:
 14947 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;  dividend        2  [STACK] int 
 14950 ;;  divisor         2  [STACK] int 
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;  sign            1  [STACK] unsigned char 
 14953 ;;  counter         1  [STACK] unsigned char 
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  2  [STACK] int 
 14956 ;; Registers used:
 14957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/5
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14967 ;;Total ram usage:        0 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    6
 14970 ;; This function calls:
 14971 ;;		Nothing
 14972 ;; This function is called by:
 14973 ;;		_efgtoa
 14974 ;; This function uses a reentrant model
 14975 ;;
 14976                           
 14977                           	psect	text56
 14978  016846                     __ptext56:
 14979                           	opt callstack 0
 14980  016846                     ___awmod:
 14981                           	opt callstack 0
 14982                           
 14983                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14984  016846  52E6               	movf	postinc1,f,c
 14985  016848  52E6               	movf	postinc1,f,c
 14986                           
 14987                           ;stkvar	_sign @ sp[(-2)+0]
 14988                           
 14989                           ;incstack = 0
 14990  01684A  0EFE               	movlw	-2
 14991  01684C  6AE3               	clrf	plusw1,c
 14992                           
 14993                           ;stkvar	_dividend @ sp[(-2)+-2]
 14994  01684E  0EFD               	movlw	-3
 14995  016850  AEE3               	btfss	plusw1,7,c
 14996  016852  D009               	goto	l7068
 14997                           
 14998                           ;stkvar	_dividend @ sp[(-2)+-2]
 14999                           ;stkvar	_dividend @ sp[(-2)+-2]
 15000  016854  0EFC               	movlw	-4
 15001  016856  6CE3               	negf	plusw1,c
 15002  016858  0EFD               	movlw	-3
 15003  01685A  1EE3               	comf	plusw1,f,c
 15004  01685C  B0D8               	btfsc	status,0,c
 15005  01685E  2AE3               	incf	plusw1,f,c
 15006                           
 15007                           ;stkvar	_sign @ sp[(-2)+0]
 15008  016860  0EFE               	movlw	-2
 15009  016862  6AE3               	clrf	plusw1,c
 15010  016864  2AE3               	incf	plusw1,f,c
 15011  016866                     l7068:
 15012                           
 15013                           ;stkvar	_divisor @ sp[(-2)+-4]
 15014  016866  0EFB               	movlw	-5
 15015  016868  AEE3               	btfss	plusw1,7,c
 15016  01686A  D006               	goto	l7072
 15017                           
 15018                           ;stkvar	_divisor @ sp[(-2)+-4]
 15019                           ;stkvar	_divisor @ sp[(-2)+-4]
 15020  01686C  0EFA               	movlw	-6
 15021  01686E  6CE3               	negf	plusw1,c
 15022  016870  0EFB               	movlw	-5
 15023  016872  1EE3               	comf	plusw1,f,c
 15024  016874  B0D8               	btfsc	status,0,c
 15025  016876  2AE3               	incf	plusw1,f,c
 15026  016878                     l7072:
 15027                           
 15028                           ;stkvar	_divisor @ sp[(-2)+-4]
 15029  016878  0EFA               	movlw	-6
 15030  01687A  006F FF8C  F032    	movff	plusw1,btemp
 15031  016880  0EFB               	movlw	-5
 15032  016882  50E3               	movf	plusw1,w,c
 15033  016884  1032               	iorwf	btemp^0,w,c
 15034  016886  B4D8               	btfsc	status,2,c
 15035  016888  D053               	goto	u6170
 15036                           
 15037                           ;stkvar	_counter @ sp[(-2)+1]
 15038  01688A  0EFF               	movlw	-1
 15039  01688C  6AE3               	clrf	plusw1,c
 15040  01688E  D012               	goto	L15
 15041  016890                     l7076:
 15042                           
 15043                           ;stkvar	_divisor @ sp[(-2)+-4]
 15044  016890  0EFA               	movlw	-6
 15045  016892  50E3               	movf	plusw1,w,c
 15046  016894  90D8               	bcf	status,0,c
 15047  016896  34E8               	rlcf	wreg,w,c
 15048  016898  6E32               	movwf	btemp^0,c
 15049  01689A  0EFA               	movlw	-6
 15050  01689C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15051  0168A2  0EFB               	movlw	-5
 15052  0168A4  50E3               	movf	plusw1,w,c
 15053  0168A6  34E8               	rlcf	wreg,w,c
 15054  0168A8  6E32               	movwf	btemp^0,c
 15055  0168AA  0EFB               	movlw	-5
 15056  0168AC  0060  F0CB  FFE3   	movff	btemp,plusw1
 15057                           
 15058                           ;stkvar	_counter @ sp[(-2)+1]
 15059  0168B2  0EFF               	movlw	-1
 15060  0168B4                     L15:
 15061  0168B4  2AE3               	incf	plusw1,f,c
 15062                           
 15063                           ;stkvar	_divisor @ sp[(-2)+-4]
 15064  0168B6  0EFB               	movlw	-5
 15065  0168B8  AEE3               	btfss	plusw1,7,c
 15066  0168BA  D7EA               	goto	l7076
 15067  0168BC                     u6150:
 15068                           
 15069                           ;stkvar	_divisor @ sp[(-2)+-4]
 15070  0168BC  0EFA               	movlw	-6
 15071  0168BE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15072  0168C4  0EFB               	movlw	-5
 15073  0168C6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15074                           
 15075                           ;stkvar	_dividend @ sp[(-2)+-2]
 15076  0168CC  0EFC               	movlw	-4
 15077  0168CE  006F FF8C  F03A    	movff	plusw1,btemp+8
 15078  0168D4  0EFD               	movlw	-3
 15079  0168D6  006F FF8C  F03B    	movff	plusw1,btemp+9
 15080  0168DC  503C               	movf	(btemp+10)^0,w,c
 15081  0168DE  5C3A               	subwf	(btemp+8)^0,w,c
 15082  0168E0  503D               	movf	(btemp+11)^0,w,c
 15083  0168E2  583B               	subwfb	(btemp+9)^0,w,c
 15084  0168E4  A0D8               	btfss	status,0,c
 15085  0168E6  D014               	goto	l7086
 15086                           
 15087                           ;stkvar	_divisor @ sp[(-2)+-4]
 15088                           ;stkvar	_dividend @ sp[(-2)+-2]
 15089  0168E8  0EFC               	movlw	-4
 15090  0168EA  50E3               	movf	plusw1,w,c
 15091  0168EC  6E32               	movwf	btemp^0,c
 15092  0168EE  0EFA               	movlw	-6
 15093  0168F0  50E3               	movf	plusw1,w,c
 15094  0168F2  5E32               	subwf	btemp^0,f,c
 15095  0168F4  0EFC               	movlw	-4
 15096  0168F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 15097  0168FC  0EFD               	movlw	-3
 15098  0168FE  50E3               	movf	plusw1,w,c
 15099  016900  6E32               	movwf	btemp^0,c
 15100  016902  0EFB               	movlw	-5
 15101  016904  50E3               	movf	plusw1,w,c
 15102  016906  5A32               	subwfb	btemp^0,f,c
 15103  016908  0EFD               	movlw	-3
 15104  01690A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15105  016910                     l7086:
 15106                           
 15107                           ;stkvar	_divisor @ sp[(-2)+-4]
 15108  016910  90D8               	bcf	status,0,c
 15109  016912  0EFB               	movlw	-5
 15110  016914  32E3               	rrcf	plusw1,f,c
 15111  016916  0EFA               	movlw	-6
 15112  016918  32E3               	rrcf	plusw1,f,c
 15113                           
 15114                           ;stkvar	_counter @ sp[(-2)+1]
 15115  01691A  0EFF               	movlw	-1
 15116  01691C  50E3               	movf	plusw1,w,c
 15117  01691E  6E32               	movwf	btemp^0,c
 15118  016920  0E01               	movlw	1
 15119  016922  5E32               	subwf	btemp^0,f,c
 15120  016924  0EFF               	movlw	-1
 15121  016926  0060  F0CB  FFE3   	movff	btemp,plusw1
 15122  01692C  A4D8               	btfss	status,2,c
 15123  01692E  D7C6               	goto	u6150
 15124  016930                     u6170:
 15125                           
 15126                           ;stkvar	_sign @ sp[(-2)+0]
 15127  016930  0EFE               	movlw	-2
 15128  016932  50E3               	movf	plusw1,w,c
 15129  016934  B4D8               	btfsc	status,2,c
 15130  016936  D006               	goto	l7094
 15131                           
 15132                           ;stkvar	_dividend @ sp[(-2)+-2]
 15133                           ;stkvar	_dividend @ sp[(-2)+-2]
 15134  016938  0EFC               	movlw	-4
 15135  01693A  6CE3               	negf	plusw1,c
 15136  01693C  0EFD               	movlw	-3
 15137  01693E  1EE3               	comf	plusw1,f,c
 15138  016940  B0D8               	btfsc	status,0,c
 15139  016942  2AE3               	incf	plusw1,f,c
 15140  016944                     l7094:
 15141                           
 15142                           ;stkvar	_dividend @ sp[(-2)+-2]
 15143  016944  0EFC               	movlw	-4
 15144  016946  006F FF8C  F032    	movff	plusw1,btemp
 15145  01694C  0EFD               	movlw	-3
 15146  01694E  006F FF8C  F033    	movff	plusw1,btemp+1
 15147                           
 15148                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15149  016954  0EFA               	movlw	250
 15150  016956  26E1               	addwf	fsr1l,f,c
 15151  016958  0EFF               	movlw	255
 15152  01695A  22E2               	addwfc	fsr1h,f,c
 15153  01695C  0012               	return		;funcret
 15154  01695E                     __end_of___awmod:
 15155                           	opt callstack 0
 15156                           
 15157 ;; *************** function ___awdiv *****************
 15158 ;; Defined at:
 15159 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15160 ;; Parameters:    Size  Location     Type
 15161 ;;  dividend        2  [STACK] int 
 15162 ;;  divisor         2  [STACK] int 
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;  quotient        2  [STACK] int 
 15165 ;;  sign            1  [STACK] unsigned char 
 15166 ;;  counter         1  [STACK] unsigned char 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  2  [STACK] int 
 15169 ;; Registers used:
 15170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/5
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15180 ;;Total ram usage:        0 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    6
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_efgtoa
 15187 ;; This function uses a reentrant model
 15188 ;;
 15189                           
 15190                           	psect	text57
 15191  01635E                     __ptext57:
 15192                           	opt callstack 0
 15193  01635E                     ___awdiv:
 15194                           	opt callstack 0
 15195                           
 15196                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15197  01635E  52E6               	movf	postinc1,f,c
 15198  016360  52E6               	movf	postinc1,f,c
 15199  016362  52E6               	movf	postinc1,f,c
 15200  016364  52E6               	movf	postinc1,f,c
 15201                           
 15202                           ;stkvar	_sign @ sp[(-4)+2]
 15203                           
 15204                           ;incstack = 0
 15205  016366  0EFE               	movlw	-2
 15206  016368  6AE3               	clrf	plusw1,c
 15207                           
 15208                           ;stkvar	_divisor @ sp[(-4)+-4]
 15209  01636A  0EF9               	movlw	-7
 15210  01636C  AEE3               	btfss	plusw1,7,c
 15211  01636E  D009               	goto	l7022
 15212                           
 15213                           ;stkvar	_divisor @ sp[(-4)+-4]
 15214                           ;stkvar	_divisor @ sp[(-4)+-4]
 15215  016370  0EF8               	movlw	-8
 15216  016372  6CE3               	negf	plusw1,c
 15217  016374  0EF9               	movlw	-7
 15218  016376  1EE3               	comf	plusw1,f,c
 15219  016378  B0D8               	btfsc	status,0,c
 15220  01637A  2AE3               	incf	plusw1,f,c
 15221                           
 15222                           ;stkvar	_sign @ sp[(-4)+2]
 15223  01637C  0EFE               	movlw	-2
 15224  01637E  6AE3               	clrf	plusw1,c
 15225  016380  2AE3               	incf	plusw1,f,c
 15226  016382                     l7022:
 15227                           
 15228                           ;stkvar	_dividend @ sp[(-4)+-2]
 15229  016382  0EFB               	movlw	-5
 15230  016384  AEE3               	btfss	plusw1,7,c
 15231  016386  D008               	goto	l7028
 15232                           
 15233                           ;stkvar	_dividend @ sp[(-4)+-2]
 15234                           ;stkvar	_dividend @ sp[(-4)+-2]
 15235  016388  0EFA               	movlw	-6
 15236  01638A  6CE3               	negf	plusw1,c
 15237  01638C  0EFB               	movlw	-5
 15238  01638E  1EE3               	comf	plusw1,f,c
 15239  016390  B0D8               	btfsc	status,0,c
 15240  016392  2AE3               	incf	plusw1,f,c
 15241                           
 15242                           ;stkvar	_sign @ sp[(-4)+2]
 15243  016394  0EFE               	movlw	-2
 15244  016396  70E3               	btg	plusw1,0,c
 15245  016398                     l7028:
 15246                           
 15247                           ;stkvar	_quotient @ sp[(-4)+0]
 15248  016398  0EFC               	movlw	-4
 15249  01639A  6AE3               	clrf	plusw1,c
 15250  01639C  0EFD               	movlw	-3
 15251  01639E  6AE3               	clrf	plusw1,c
 15252                           
 15253                           ;stkvar	_divisor @ sp[(-4)+-4]
 15254  0163A0  0EF8               	movlw	-8
 15255  0163A2  006F FF8C  F032    	movff	plusw1,btemp
 15256  0163A8  0EF9               	movlw	-7
 15257  0163AA  50E3               	movf	plusw1,w,c
 15258  0163AC  1032               	iorwf	btemp^0,w,c
 15259  0163AE  B4D8               	btfsc	status,2,c
 15260  0163B0  D066               	goto	u6100
 15261                           
 15262                           ;stkvar	_counter @ sp[(-4)+3]
 15263  0163B2  0EFF               	movlw	-1
 15264  0163B4  6AE3               	clrf	plusw1,c
 15265  0163B6  D012               	goto	L16
 15266  0163B8                     l7034:
 15267                           
 15268                           ;stkvar	_divisor @ sp[(-4)+-4]
 15269  0163B8  0EF8               	movlw	-8
 15270  0163BA  50E3               	movf	plusw1,w,c
 15271  0163BC  90D8               	bcf	status,0,c
 15272  0163BE  34E8               	rlcf	wreg,w,c
 15273  0163C0  6E32               	movwf	btemp^0,c
 15274  0163C2  0EF8               	movlw	-8
 15275  0163C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15276  0163CA  0EF9               	movlw	-7
 15277  0163CC  50E3               	movf	plusw1,w,c
 15278  0163CE  34E8               	rlcf	wreg,w,c
 15279  0163D0  6E32               	movwf	btemp^0,c
 15280  0163D2  0EF9               	movlw	-7
 15281  0163D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15282                           
 15283                           ;stkvar	_counter @ sp[(-4)+3]
 15284  0163DA  0EFF               	movlw	-1
 15285  0163DC                     L16:
 15286  0163DC  2AE3               	incf	plusw1,f,c
 15287                           
 15288                           ;stkvar	_divisor @ sp[(-4)+-4]
 15289  0163DE  0EF9               	movlw	-7
 15290  0163E0  AEE3               	btfss	plusw1,7,c
 15291  0163E2  D7EA               	goto	l7034
 15292  0163E4                     u6080:
 15293                           
 15294                           ;stkvar	_quotient @ sp[(-4)+0]
 15295  0163E4  0EFC               	movlw	-4
 15296  0163E6  50E3               	movf	plusw1,w,c
 15297  0163E8  90D8               	bcf	status,0,c
 15298  0163EA  34E8               	rlcf	wreg,w,c
 15299  0163EC  6E32               	movwf	btemp^0,c
 15300  0163EE  0EFC               	movlw	-4
 15301  0163F0  0060  F0CB  FFE3   	movff	btemp,plusw1
 15302  0163F6  0EFD               	movlw	-3
 15303  0163F8  50E3               	movf	plusw1,w,c
 15304  0163FA  34E8               	rlcf	wreg,w,c
 15305  0163FC  6E32               	movwf	btemp^0,c
 15306  0163FE  0EFD               	movlw	-3
 15307  016400  0060  F0CB  FFE3   	movff	btemp,plusw1
 15308                           
 15309                           ;stkvar	_divisor @ sp[(-4)+-4]
 15310  016406  0EF8               	movlw	-8
 15311  016408  006F FF8C  F03C    	movff	plusw1,btemp+10
 15312  01640E  0EF9               	movlw	-7
 15313  016410  006F FF8C  F03D    	movff	plusw1,btemp+11
 15314                           
 15315                           ;stkvar	_dividend @ sp[(-4)+-2]
 15316  016416  0EFA               	movlw	-6
 15317  016418  006F FF8C  F03A    	movff	plusw1,btemp+8
 15318  01641E  0EFB               	movlw	-5
 15319  016420  006F FF8C  F03B    	movff	plusw1,btemp+9
 15320  016426  503C               	movf	(btemp+10)^0,w,c
 15321  016428  5C3A               	subwf	(btemp+8)^0,w,c
 15322  01642A  503D               	movf	(btemp+11)^0,w,c
 15323  01642C  583B               	subwfb	(btemp+9)^0,w,c
 15324  01642E  A0D8               	btfss	status,0,c
 15325  016430  D016               	goto	l7048
 15326                           
 15327                           ;stkvar	_divisor @ sp[(-4)+-4]
 15328                           ;stkvar	_dividend @ sp[(-4)+-2]
 15329  016432  0EFA               	movlw	-6
 15330  016434  50E3               	movf	plusw1,w,c
 15331  016436  6E32               	movwf	btemp^0,c
 15332  016438  0EF8               	movlw	-8
 15333  01643A  50E3               	movf	plusw1,w,c
 15334  01643C  5E32               	subwf	btemp^0,f,c
 15335  01643E  0EFA               	movlw	-6
 15336  016440  0060  F0CB  FFE3   	movff	btemp,plusw1
 15337  016446  0EFB               	movlw	-5
 15338  016448  50E3               	movf	plusw1,w,c
 15339  01644A  6E32               	movwf	btemp^0,c
 15340  01644C  0EF9               	movlw	-7
 15341  01644E  50E3               	movf	plusw1,w,c
 15342  016450  5A32               	subwfb	btemp^0,f,c
 15343  016452  0EFB               	movlw	-5
 15344  016454  0060  F0CB  FFE3   	movff	btemp,plusw1
 15345                           
 15346                           ;stkvar	_quotient @ sp[(-4)+0]
 15347  01645A  0EFC               	movlw	-4
 15348  01645C  80E3               	bsf	plusw1,0,c
 15349  01645E                     l7048:
 15350                           
 15351                           ;stkvar	_divisor @ sp[(-4)+-4]
 15352  01645E  90D8               	bcf	status,0,c
 15353  016460  0EF9               	movlw	-7
 15354  016462  32E3               	rrcf	plusw1,f,c
 15355  016464  0EF8               	movlw	-8
 15356  016466  32E3               	rrcf	plusw1,f,c
 15357                           
 15358                           ;stkvar	_counter @ sp[(-4)+3]
 15359  016468  0EFF               	movlw	-1
 15360  01646A  50E3               	movf	plusw1,w,c
 15361  01646C  6E32               	movwf	btemp^0,c
 15362  01646E  0E01               	movlw	1
 15363  016470  5E32               	subwf	btemp^0,f,c
 15364  016472  0EFF               	movlw	-1
 15365  016474  0060  F0CB  FFE3   	movff	btemp,plusw1
 15366  01647A  A4D8               	btfss	status,2,c
 15367  01647C  D7B3               	goto	u6080
 15368  01647E                     u6100:
 15369                           
 15370                           ;stkvar	_sign @ sp[(-4)+2]
 15371  01647E  0EFE               	movlw	-2
 15372  016480  50E3               	movf	plusw1,w,c
 15373  016482  B4D8               	btfsc	status,2,c
 15374  016484  D006               	goto	l7056
 15375                           
 15376                           ;stkvar	_quotient @ sp[(-4)+0]
 15377                           ;stkvar	_quotient @ sp[(-4)+0]
 15378  016486  0EFC               	movlw	-4
 15379  016488  6CE3               	negf	plusw1,c
 15380  01648A  0EFD               	movlw	-3
 15381  01648C  1EE3               	comf	plusw1,f,c
 15382  01648E  B0D8               	btfsc	status,0,c
 15383  016490  2AE3               	incf	plusw1,f,c
 15384  016492                     l7056:
 15385                           
 15386                           ;stkvar	_quotient @ sp[(-4)+0]
 15387  016492  0EFC               	movlw	-4
 15388  016494  006F FF8C  F032    	movff	plusw1,btemp
 15389  01649A  0EFD               	movlw	-3
 15390  01649C  006F FF8C  F033    	movff	plusw1,btemp+1
 15391                           
 15392                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15393  0164A2  0EF8               	movlw	248
 15394  0164A4  26E1               	addwf	fsr1l,f,c
 15395  0164A6  0EFF               	movlw	255
 15396  0164A8  22E2               	addwfc	fsr1h,f,c
 15397  0164AA  0012               	return		;funcret
 15398  0164AC                     __end_of___awdiv:
 15399                           	opt callstack 0
 15400                           
 15401 ;; *************** function _dtoa *****************
 15402 ;; Defined at:
 15403 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15406 ;;		 -> f(6), NULL(0), 
 15407 ;;  d               8  [STACK] long long 
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;  n               8  [STACK] long long 
 15410 ;;  i               2  [STACK] int 
 15411 ;;  s               2  [STACK] int 
 15412 ;;  w               2  [STACK] int 
 15413 ;;  p               2  [STACK] int 
 15414 ;; Return value:  Size  Location     Type
 15415 ;;                  2  [STACK] int 
 15416 ;; Registers used:
 15417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15418 ;; Tracked objects:
 15419 ;;		On entry : 0/5
 15420 ;;		On exit  : 0/0
 15421 ;;		Unchanged: 0/0
 15422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;Total ram usage:        0 bytes
 15428 ;; Hardware stack levels used:    1
 15429 ;; Hardware stack levels required when called:   11
 15430 ;; This function calls:
 15431 ;;		___aodiv
 15432 ;;		___aomod
 15433 ;;		_abs
 15434 ;;		_pad
 15435 ;; This function is called by:
 15436 ;;		_vfpfcnvrt
 15437 ;; This function uses a reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text58
 15441  013C68                     __ptext58:
 15442                           	opt callstack 0
 15443  013C68                     _dtoa:
 15444                           	opt callstack 0
 15445                           
 15446                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15447  013C68  0E12               	movlw	18
 15448  013C6A  26E1               	addwf	fsr1l,f,c
 15449  013C6C  0E00               	movlw	0
 15450  013C6E  22E2               	addwfc	fsr1h,f,c
 15451                           
 15452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15453                           ;stkvar	_d @ sp[(-18)+-10]
 15454                           
 15455                           ;incstack = 0
 15456  013C70  0EE4               	movlw	228
 15457  013C72  24E1               	addwf	fsr1l,w,c
 15458  013C74  6ED9               	movwf	fsr2l,c
 15459  013C76  0EFF               	movlw	255
 15460  013C78  20E2               	addwfc	fsr1h,w,c
 15461  013C7A  6EDA               	movwf	fsr2h,c
 15462                           
 15463                           ;stkvar	_n @ sp[(-18)+2]
 15464  013C7C  0E08               	movlw	8
 15465  013C7E  6E32               	movwf	btemp^0,c
 15466  013C80  0EF0               	movlw	-16
 15467  013C82                     us904999:
 15468  013C82  006F FF7B FFE3     	movff	postinc2,plusw1
 15469  013C88  28E8               	incf	wreg,w,c
 15470  013C8A  2E32               	decfsz	btemp^0,f,c
 15471  013C8C  D7FA               	bra	us904999
 15472                           
 15473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15474                           ;stkvar	_n @ sp[(-18)+2]
 15475  013C8E  0EF7               	movlw	-9
 15476  013C90  AEE3               	btfss	plusw1,7,c
 15477  013C92  D002               	goto	u9050
 15478  013C94  0E01               	movlw	1
 15479  013C96  D001               	goto	u9060
 15480  013C98                     u9050:
 15481  013C98  0E00               	movlw	0
 15482  013C9A                     u9060:
 15483  013C9A  6E3C               	movwf	(btemp+10)^0,c
 15484  013C9C  6A3D               	clrf	(btemp+11)^0,c
 15485                           
 15486                           ;stkvar	_s @ sp[(-18)+12]
 15487  013C9E  0EFA               	movlw	-6
 15488  013CA0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15489  013CA6  0EFB               	movlw	-5
 15490  013CA8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15491                           
 15492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15493                           ;stkvar	_s @ sp[(-18)+12]
 15494  013CAE  0EFA               	movlw	-6
 15495  013CB0  006F FF8C  F032    	movff	plusw1,btemp
 15496  013CB6  0EFB               	movlw	-5
 15497  013CB8  50E3               	movf	plusw1,w,c
 15498  013CBA  1032               	iorwf	btemp^0,w,c
 15499  013CBC  B4D8               	btfsc	status,2,c
 15500  013CBE  D025               	goto	u9080
 15501                           
 15502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15503                           ;stkvar	_n @ sp[(-18)+2]
 15504                           ;stkvar	_n @ sp[(-18)+2]
 15505  013CC0  0EF0               	movlw	-16
 15506  013CC2  6CE3               	negf	plusw1,c
 15507  013CC4  0EF1               	movlw	-15
 15508  013CC6  1EE3               	comf	plusw1,f,c
 15509  013CC8  0EF2               	movlw	-14
 15510  013CCA  1EE3               	comf	plusw1,f,c
 15511  013CCC  0EF3               	movlw	-13
 15512  013CCE  1EE3               	comf	plusw1,f,c
 15513  013CD0  0EF4               	movlw	-12
 15514  013CD2  1EE3               	comf	plusw1,f,c
 15515  013CD4  0EF5               	movlw	-11
 15516  013CD6  1EE3               	comf	plusw1,f,c
 15517  013CD8  0EF6               	movlw	-10
 15518  013CDA  1EE3               	comf	plusw1,f,c
 15519  013CDC  0EF7               	movlw	-9
 15520  013CDE  1EE3               	comf	plusw1,f,c
 15521  013CE0  E314               	bnc	u9080
 15522  013CE2  0EF1               	movlw	-15
 15523  013CE4  2AE3               	incf	plusw1,f,c
 15524  013CE6  E311               	bnc	u9080
 15525  013CE8  0EF2               	movlw	-14
 15526  013CEA  2AE3               	incf	plusw1,f,c
 15527  013CEC  E30E               	bnc	u9080
 15528  013CEE  0EF3               	movlw	-13
 15529  013CF0  2AE3               	incf	plusw1,f,c
 15530  013CF2  E30B               	bnc	u9080
 15531  013CF4  0EF4               	movlw	-12
 15532  013CF6  2AE3               	incf	plusw1,f,c
 15533  013CF8  E308               	bnc	u9080
 15534  013CFA  0EF5               	movlw	-11
 15535  013CFC  2AE3               	incf	plusw1,f,c
 15536  013CFE  E305               	bnc	u9080
 15537  013D00  0EF6               	movlw	-10
 15538  013D02  2AE3               	incf	plusw1,f,c
 15539  013D04  E302               	bnc	u9080
 15540  013D06  0EF7               	movlw	-9
 15541  013D08  2AE3               	incf	plusw1,f,c
 15542  013D0A                     u9080:
 15543                           
 15544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15545  013D0A  AE1E               	btfss	(_prec+1)^0,7,c
 15546                           
 15547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15548  013D0C  921F               	bcf	_flags^0,1,c
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15551  013D0E  BE1E               	btfsc	(_prec+1)^0,7,c
 15552  013D10  D005               	goto	u9100
 15553  013D12  501E               	movf	(_prec+1)^0,w,c
 15554  013D14  E110               	bnz	l9518
 15555  013D16  041D               	decf	_prec^0,w,c
 15556  013D18  B0D8               	btfsc	status,0,c
 15557  013D1A  D00D               	goto	l9518
 15558  013D1C                     u9100:
 15559  013D1C  0E01               	movlw	1
 15560  013D1E  6E3C               	movwf	(btemp+10)^0,c
 15561  013D20  0E00               	movlw	0
 15562  013D22  6E3D               	movwf	(btemp+11)^0,c
 15563                           
 15564                           ;stkvar	_p @ sp[(-18)+16]
 15565  013D24  0EFE               	movlw	-2
 15566  013D26  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15567  013D2C  0EFF               	movlw	-1
 15568  013D2E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15569  013D34  D008               	goto	l1855
 15570  013D36                     l9518:
 15571                           
 15572                           ;stkvar	_p @ sp[(-18)+16]
 15573  013D36  0EFE               	movlw	-2
 15574  013D38  0060  F077  FFE3   	movff	_prec,plusw1
 15575  013D3E  0EFF               	movlw	-1
 15576  013D40  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15577  013D46                     l1855:
 15578                           
 15579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15580                           ;stkvar	_w @ sp[(-18)+14]
 15581  013D46  0EFC               	movlw	-4
 15582  013D48  0060  F06F  FFE3   	movff	_width,plusw1
 15583  013D4E  0EFD               	movlw	-3
 15584  013D50  0060  F073  FFE3   	movff	_width+1,plusw1
 15585                           
 15586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15587                           ;stkvar	_s @ sp[(-18)+12]
 15588  013D56  0EFA               	movlw	-6
 15589  013D58  006F FF8C  F032    	movff	plusw1,btemp
 15590  013D5E  0EFB               	movlw	-5
 15591  013D60  50E3               	movf	plusw1,w,c
 15592  013D62  1032               	iorwf	btemp^0,w,c
 15593  013D64  A4D8               	btfss	status,2,c
 15594  013D66  D002               	goto	u9120
 15595  013D68  A41F               	btfss	_flags^0,2,c
 15596  013D6A  D00A               	goto	l9526
 15597  013D6C                     u9120:
 15598                           
 15599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15600                           ;stkvar	_w @ sp[(-18)+14]
 15601  013D6C  50E1               	movf	fsr1l,w,c
 15602  013D6E  0FFC               	addlw	-4
 15603  013D70  6ED9               	movwf	fsr2l,c
 15604  013D72  50E2               	movf	fsr1h,w,c
 15605  013D74  6EDA               	movwf	fsr2h,c
 15606  013D76  0EFF               	movlw	255
 15607  013D78  22DA               	addwfc	fsr2h,f,c
 15608  013D7A  06DE               	decf	postinc2,f,c
 15609  013D7C  0E00               	movlw	0
 15610  013D7E  5ADD               	subwfb	postdec2,f,c
 15611  013D80                     l9526:
 15612                           
 15613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15614  013D80  0E4F               	movlw	79
 15615  013D82  6E3C               	movwf	(btemp+10)^0,c
 15616  013D84  0E00               	movlw	0
 15617  013D86  6E3D               	movwf	(btemp+11)^0,c
 15618                           
 15619                           ;stkvar	_i @ sp[(-18)+10]
 15620  013D88  0EF8               	movlw	-8
 15621  013D8A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15622  013D90  0EF9               	movlw	-7
 15623  013D92  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15624                           
 15625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15626  013D98  0101               	movlb	1	; () banked
 15627  013D9A  6BC7               	clrf	(_dbuf+79)& (0+255),b
 15628                           
 15629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15630  013D9C  D109               	goto	l9540
 15631  013D9E                     l9530:
 15632                           
 15633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15634                           ;stkvar	_i @ sp[(-18)+10]
 15635  013D9E  50E1               	movf	fsr1l,w,c
 15636  013DA0  0FF8               	addlw	-8
 15637  013DA2  6ED9               	movwf	fsr2l,c
 15638  013DA4  50E2               	movf	fsr1h,w,c
 15639  013DA6  6EDA               	movwf	fsr2h,c
 15640  013DA8  0EFF               	movlw	255
 15641  013DAA  22DA               	addwfc	fsr2h,f,c
 15642  013DAC  06DE               	decf	postinc2,f,c
 15643  013DAE  0E00               	movlw	0
 15644  013DB0  5ADD               	subwfb	postdec2,f,c
 15645                           
 15646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15647  013DB2  0E0A               	movlw	10
 15648  013DB4  6EE6               	movwf	postinc1,c
 15649  013DB6  0E00               	movlw	0
 15650  013DB8  6EE6               	movwf	postinc1,c
 15651  013DBA  0E00               	movlw	0
 15652  013DBC  6EE6               	movwf	postinc1,c
 15653  013DBE  0E00               	movlw	0
 15654  013DC0  6EE6               	movwf	postinc1,c
 15655  013DC2  0E00               	movlw	0
 15656  013DC4  6EE6               	movwf	postinc1,c
 15657  013DC6  0E00               	movlw	0
 15658  013DC8  6EE6               	movwf	postinc1,c
 15659  013DCA  0E00               	movlw	0
 15660  013DCC  6EE6               	movwf	postinc1,c
 15661  013DCE  0E00               	movlw	0
 15662  013DD0  6EE6               	movwf	postinc1,c
 15663                           
 15664                           ;stkvar	_n @ sp[(-26)+2]
 15665  013DD2  50E1               	movf	fsr1l,w,c
 15666  013DD4  0FE8               	addlw	-24
 15667  013DD6  6ED9               	movwf	fsr2l,c
 15668  013DD8  50E2               	movf	fsr1h,w,c
 15669  013DDA  6EDA               	movwf	fsr2h,c
 15670  013DDC  0EFF               	movlw	255
 15671  013DDE  22DA               	addwfc	fsr2h,f,c
 15672  013DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 15673  013DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 15674  013DEC  006F FF7B FFE6     	movff	postinc2,postinc1
 15675  013DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 15676  013DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 15677  013DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 15678  013E04  006F FF7B FFE6     	movff	postinc2,postinc1
 15679  013E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 15680  013E10  EC80  F0AA         	call	___aomod	;wreg free
 15681  013E14  52E5               	movf	postdec1,f,c
 15682  013E16  006F FF9C  F049    	movff	indf1,btemp+23
 15683  013E1C  52E5               	movf	postdec1,f,c
 15684  013E1E  006F FF9C  F048    	movff	indf1,btemp+22
 15685  013E24  52E5               	movf	postdec1,f,c
 15686  013E26  006F FF9C  F047    	movff	indf1,btemp+21
 15687  013E2C  52E5               	movf	postdec1,f,c
 15688  013E2E  006F FF9C  F046    	movff	indf1,btemp+20
 15689  013E34  52E5               	movf	postdec1,f,c
 15690  013E36  006F FF9C  F045    	movff	indf1,btemp+19
 15691  013E3C  52E5               	movf	postdec1,f,c
 15692  013E3E  006F FF9C  F044    	movff	indf1,btemp+18
 15693  013E44  52E5               	movf	postdec1,f,c
 15694  013E46  006F FF9C  F043    	movff	indf1,btemp+17
 15695  013E4C  52E5               	movf	postdec1,f,c
 15696  013E4E  006F FF9C  F042    	movff	indf1,btemp+16
 15697  013E54  0EF8               	movlw	248
 15698  013E56  26E1               	addwf	fsr1l,f,c
 15699  013E58  0EFF               	movlw	255
 15700  013E5A  22E2               	addwfc	fsr1h,f,c
 15701  013E5C  0060  F108  F03C   	movff	btemp+16,btemp+10
 15702  013E62  0060  F10C  F03D   	movff	btemp+17,btemp+11
 15703  013E68  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15704  013E6E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15705  013E74  EC28  F0BF         	call	_abs	;wreg free
 15706  013E78  0E30               	movlw	48
 15707  013E7A  2632               	addwf	btemp^0,f,c
 15708                           
 15709                           ;stkvar	_i @ sp[(-18)+10]
 15710  013E7C  0EF8               	movlw	-8
 15711  013E7E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15712  013E84  0EF9               	movlw	-7
 15713  013E86  006F FF8C  F03D    	movff	plusw1,btemp+11
 15714  013E8C  0E78               	movlw	low _dbuf
 15715  013E8E  243C               	addwf	(btemp+10)^0,w,c
 15716  013E90  6ED9               	movwf	fsr2l,c
 15717  013E92  0E01               	movlw	high _dbuf
 15718  013E94  203D               	addwfc	(btemp+11)^0,w,c
 15719  013E96  6EDA               	movwf	fsr2h,c
 15720  013E98  0060  F0CB  FFDF   	movff	btemp,indf2
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 15723                           ;stkvar	_p @ sp[(-18)+16]
 15724  013E9E  50E1               	movf	fsr1l,w,c
 15725  013EA0  0FFE               	addlw	-2
 15726  013EA2  6ED9               	movwf	fsr2l,c
 15727  013EA4  50E2               	movf	fsr1h,w,c
 15728  013EA6  6EDA               	movwf	fsr2h,c
 15729  013EA8  0EFF               	movlw	255
 15730  013EAA  22DA               	addwfc	fsr2h,f,c
 15731  013EAC  06DE               	decf	postinc2,f,c
 15732  013EAE  0E00               	movlw	0
 15733  013EB0  5ADD               	subwfb	postdec2,f,c
 15734                           
 15735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 15736                           ;stkvar	_w @ sp[(-18)+14]
 15737  013EB2  50E1               	movf	fsr1l,w,c
 15738  013EB4  0FFC               	addlw	-4
 15739  013EB6  6ED9               	movwf	fsr2l,c
 15740  013EB8  50E2               	movf	fsr1h,w,c
 15741  013EBA  6EDA               	movwf	fsr2h,c
 15742  013EBC  0EFF               	movlw	255
 15743  013EBE  22DA               	addwfc	fsr2h,f,c
 15744  013EC0  06DE               	decf	postinc2,f,c
 15745  013EC2  0E00               	movlw	0
 15746  013EC4  5ADD               	subwfb	postdec2,f,c
 15747                           
 15748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 15749  013EC6  0E0A               	movlw	10
 15750  013EC8  6EE6               	movwf	postinc1,c
 15751  013ECA  0E00               	movlw	0
 15752  013ECC  6EE6               	movwf	postinc1,c
 15753  013ECE  0E00               	movlw	0
 15754  013ED0  6EE6               	movwf	postinc1,c
 15755  013ED2  0E00               	movlw	0
 15756  013ED4  6EE6               	movwf	postinc1,c
 15757  013ED6  0E00               	movlw	0
 15758  013ED8  6EE6               	movwf	postinc1,c
 15759  013EDA  0E00               	movlw	0
 15760  013EDC  6EE6               	movwf	postinc1,c
 15761  013EDE  0E00               	movlw	0
 15762  013EE0  6EE6               	movwf	postinc1,c
 15763  013EE2  0E00               	movlw	0
 15764  013EE4  6EE6               	movwf	postinc1,c
 15765                           
 15766                           ;stkvar	_n @ sp[(-26)+2]
 15767  013EE6  50E1               	movf	fsr1l,w,c
 15768  013EE8  0FE8               	addlw	-24
 15769  013EEA  6ED9               	movwf	fsr2l,c
 15770  013EEC  50E2               	movf	fsr1h,w,c
 15771  013EEE  6EDA               	movwf	fsr2h,c
 15772  013EF0  0EFF               	movlw	255
 15773  013EF2  22DA               	addwfc	fsr2h,f,c
 15774  013EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 15775  013EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 15776  013F00  006F FF7B FFE6     	movff	postinc2,postinc1
 15777  013F06  006F FF7B FFE6     	movff	postinc2,postinc1
 15778  013F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15779  013F12  006F FF7B FFE6     	movff	postinc2,postinc1
 15780  013F18  006F FF7B FFE6     	movff	postinc2,postinc1
 15781  013F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15782  013F24  ECDC  F0A6         	call	___aodiv	;wreg free
 15783  013F28  52E5               	movf	postdec1,f,c
 15784  013F2A  006F FF9C  F049    	movff	indf1,btemp+23
 15785  013F30  52E5               	movf	postdec1,f,c
 15786  013F32  006F FF9C  F048    	movff	indf1,btemp+22
 15787  013F38  52E5               	movf	postdec1,f,c
 15788  013F3A  006F FF9C  F047    	movff	indf1,btemp+21
 15789  013F40  52E5               	movf	postdec1,f,c
 15790  013F42  006F FF9C  F046    	movff	indf1,btemp+20
 15791  013F48  52E5               	movf	postdec1,f,c
 15792  013F4A  006F FF9C  F045    	movff	indf1,btemp+19
 15793  013F50  52E5               	movf	postdec1,f,c
 15794  013F52  006F FF9C  F044    	movff	indf1,btemp+18
 15795  013F58  52E5               	movf	postdec1,f,c
 15796  013F5A  006F FF9C  F043    	movff	indf1,btemp+17
 15797  013F60  52E5               	movf	postdec1,f,c
 15798  013F62  006F FF9C  F042    	movff	indf1,btemp+16
 15799  013F68  0EF8               	movlw	248
 15800  013F6A  26E1               	addwf	fsr1l,f,c
 15801  013F6C  0EFF               	movlw	255
 15802  013F6E  22E2               	addwfc	fsr1h,f,c
 15803                           
 15804                           ;stkvar	_n @ sp[(-18)+2]
 15805  013F70  0EF0               	movlw	-16
 15806  013F72  0060  F10B  FFE3   	movff	btemp+16,plusw1
 15807  013F78  0EF1               	movlw	-15
 15808  013F7A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 15809  013F80  0EF2               	movlw	-14
 15810  013F82  0060  F113  FFE3   	movff	btemp+18,plusw1
 15811  013F88  0EF3               	movlw	-13
 15812  013F8A  0060  F117  FFE3   	movff	btemp+19,plusw1
 15813  013F90  0EF4               	movlw	-12
 15814  013F92  0060  F11B  FFE3   	movff	btemp+20,plusw1
 15815  013F98  0EF5               	movlw	-11
 15816  013F9A  0060  F11F  FFE3   	movff	btemp+21,plusw1
 15817  013FA0  0EF6               	movlw	-10
 15818  013FA2  0060  F123  FFE3   	movff	btemp+22,plusw1
 15819  013FA8  0EF7               	movlw	-9
 15820  013FAA  0060  F127  FFE3   	movff	btemp+23,plusw1
 15821  013FB0                     l9540:
 15822                           
 15823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15824                           ;stkvar	_i @ sp[(-18)+10]
 15825  013FB0  0EF9               	movlw	-7
 15826  013FB2  BEE3               	btfsc	plusw1,7,c
 15827  013FB4  D036               	goto	u9170
 15828  013FB6  0EF9               	movlw	-7
 15829  013FB8  50E3               	movf	plusw1,w,c
 15830  013FBA  E104               	bnz	u9130
 15831  013FBC  0EF8               	movlw	-8
 15832  013FBE  04E3               	decf	plusw1,w,c
 15833  013FC0  A0D8               	btfss	status,0,c
 15834  013FC2  D02F               	goto	u9170
 15835  013FC4                     u9130:
 15836                           
 15837                           ;stkvar	_n @ sp[(-18)+2]
 15838  013FC4  0EF0               	movlw	-16
 15839  013FC6  50E3               	movf	plusw1,w,c
 15840  013FC8  E115               	bnz	u9141
 15841  013FCA  0EF1               	movlw	-15
 15842  013FCC  50E3               	movf	plusw1,w,c
 15843  013FCE  E112               	bnz	u9141
 15844  013FD0  0EF2               	movlw	-14
 15845  013FD2  50E3               	movf	plusw1,w,c
 15846  013FD4  E10F               	bnz	u9141
 15847  013FD6  0EF3               	movlw	-13
 15848  013FD8  50E3               	movf	plusw1,w,c
 15849  013FDA  E10C               	bnz	u9141
 15850  013FDC  0EF4               	movlw	-12
 15851  013FDE  50E3               	movf	plusw1,w,c
 15852  013FE0  E109               	bnz	u9141
 15853  013FE2  0EF5               	movlw	-11
 15854  013FE4  50E3               	movf	plusw1,w,c
 15855  013FE6  E106               	bnz	u9141
 15856  013FE8  0EF6               	movlw	-10
 15857  013FEA  50E3               	movf	plusw1,w,c
 15858  013FEC  E103               	bnz	u9141
 15859  013FEE  0EF7               	movlw	-9
 15860  013FF0  50E3               	movf	plusw1,w,c
 15861  013FF2  A4D8               	btfss	status,2,c
 15862  013FF4                     u9141:
 15863  013FF4  D6D4               	goto	l9530
 15864                           
 15865                           ;stkvar	_p @ sp[(-18)+16]
 15866  013FF6  0EFF               	movlw	-1
 15867  013FF8  BEE3               	btfsc	plusw1,7,c
 15868  013FFA  D007               	goto	u9150
 15869  013FFC  0EFF               	movlw	-1
 15870  013FFE  50E3               	movf	plusw1,w,c
 15871  014000  E103               	bnz	u9151
 15872  014002  0EFE               	movlw	-2
 15873  014004  04E3               	decf	plusw1,w,c
 15874  014006  B0D8               	btfsc	status,0,c
 15875  014008                     u9151:
 15876  014008  D6CA               	goto	l9530
 15877  01400A                     u9150:
 15878                           
 15879                           ;stkvar	_w @ sp[(-18)+14]
 15880  01400A  0EFD               	movlw	-3
 15881  01400C  BEE3               	btfsc	plusw1,7,c
 15882  01400E  D009               	goto	u9170
 15883  014010  0EFD               	movlw	-3
 15884  014012  50E3               	movf	plusw1,w,c
 15885  014014  E104               	bnz	u9160
 15886  014016  0EFC               	movlw	-4
 15887  014018  04E3               	decf	plusw1,w,c
 15888  01401A  A0D8               	btfss	status,0,c
 15889  01401C  D002               	goto	u9170
 15890  01401E                     u9160:
 15891  01401E  B21F               	btfsc	_flags^0,1,c
 15892  014020  D6BE               	goto	l9530
 15893  014022                     u9170:
 15894                           
 15895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 15896                           ;stkvar	_s @ sp[(-18)+12]
 15897  014022  0EFA               	movlw	-6
 15898  014024  006F FF8C  F032    	movff	plusw1,btemp
 15899  01402A  0EFB               	movlw	-5
 15900  01402C  50E3               	movf	plusw1,w,c
 15901  01402E  1032               	iorwf	btemp^0,w,c
 15902  014030  A4D8               	btfss	status,2,c
 15903  014032  D002               	goto	u9190
 15904  014034  A41F               	btfss	_flags^0,2,c
 15905  014036  D033               	goto	l9564
 15906  014038                     u9190:
 15907                           
 15908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 15909                           ;stkvar	_i @ sp[(-18)+10]
 15910  014038  50E1               	movf	fsr1l,w,c
 15911  01403A  0FF8               	addlw	-8
 15912  01403C  6ED9               	movwf	fsr2l,c
 15913  01403E  50E2               	movf	fsr1h,w,c
 15914  014040  6EDA               	movwf	fsr2h,c
 15915  014042  0EFF               	movlw	255
 15916  014044  22DA               	addwfc	fsr2h,f,c
 15917  014046  06DE               	decf	postinc2,f,c
 15918  014048  0E00               	movlw	0
 15919  01404A  5ADD               	subwfb	postdec2,f,c
 15920                           
 15921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 15922                           ;stkvar	_s @ sp[(-18)+12]
 15923  01404C  0EFA               	movlw	-6
 15924  01404E  006F FF8C  F032    	movff	plusw1,btemp
 15925  014054  0EFB               	movlw	-5
 15926  014056  50E3               	movf	plusw1,w,c
 15927  014058  1032               	iorwf	btemp^0,w,c
 15928  01405A  A4D8               	btfss	status,2,c
 15929  01405C  D002               	goto	l9560
 15930  01405E  0E2B               	movlw	43
 15931  014060  D001               	goto	L17
 15932  014062                     l9560:
 15933  014062  0E2D               	movlw	45
 15934  014064                     L17:
 15935  014064  6E3C               	movwf	(btemp+10)^0,c
 15936  014066  0E00               	movlw	0
 15937  014068  6E3D               	movwf	(btemp+11)^0,c
 15938                           
 15939                           ;stkvar	_dtoa$4445 @ sp[(-18)+0]
 15940  01406A  0EEE               	movlw	-18
 15941  01406C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15942  014072  0EEF               	movlw	-17
 15943  014074  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15944                           
 15945                           ;stkvar	_dtoa$4445 @ sp[(-18)+0]
 15946                           ;stkvar	_i @ sp[(-18)+10]
 15947  01407A  0EF8               	movlw	-8
 15948  01407C  006F FF8C  F03C    	movff	plusw1,btemp+10
 15949  014082  0EF9               	movlw	-7
 15950  014084  006F FF8C  F03D    	movff	plusw1,btemp+11
 15951  01408A  0E78               	movlw	low _dbuf
 15952  01408C  243C               	addwf	(btemp+10)^0,w,c
 15953  01408E  6ED9               	movwf	fsr2l,c
 15954  014090  0E01               	movlw	high _dbuf
 15955  014092  203D               	addwfc	(btemp+11)^0,w,c
 15956  014094  6EDA               	movwf	fsr2h,c
 15957  014096  0EEE               	movlw	-18
 15958  014098  006F FF8F FFDF     	movff	plusw1,indf2
 15959  01409E                     l9564:
 15960                           
 15961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 15962                           ;stkvar	_w @ sp[(-18)+14]
 15963  01409E  0EFC               	movlw	-4
 15964  0140A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15965  0140A6  006F FF8F FFE6     	movff	plusw1,postinc1
 15966                           
 15967                           ;stkvar	_i @ sp[(-20)+10]
 15968  0140AC  0E78               	movlw	low _dbuf
 15969  0140AE  6E3C               	movwf	(btemp+10)^0,c
 15970  0140B0  0E01               	movlw	high _dbuf
 15971  0140B2  6E3D               	movwf	(btemp+11)^0,c
 15972  0140B4  0EF6               	movlw	-10
 15973  0140B6  50E3               	movf	plusw1,w,c
 15974  0140B8  263C               	addwf	(btemp+10)^0,f,c
 15975  0140BA  0EF7               	movlw	-9
 15976  0140BC  50E3               	movf	plusw1,w,c
 15977  0140BE  223D               	addwfc	(btemp+11)^0,f,c
 15978  0140C0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15979  0140C6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15980                           
 15981                           ;stkvar	_fp @ sp[(-22)+-2]
 15982  0140CC  0EE8               	movlw	-24
 15983  0140CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15984  0140D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15985  0140DA  ECAF  F0B4         	call	_pad	;wreg free
 15986                           
 15987                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15988  0140DE  0EE4               	movlw	228
 15989  0140E0  26E1               	addwf	fsr1l,f,c
 15990  0140E2  0EFF               	movlw	255
 15991  0140E4  22E2               	addwfc	fsr1h,f,c
 15992  0140E6  0012               	return		;funcret
 15993  0140E8                     __end_of_dtoa:
 15994                           	opt callstack 0
 15995                           
 15996 ;; *************** function _abs *****************
 15997 ;; Defined at:
 15998 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 15999 ;; Parameters:    Size  Location     Type
 16000 ;;  a               2  [STACK] int 
 16001 ;; Auto vars:     Size  Location     Type
 16002 ;;		None
 16003 ;; Return value:  Size  Location     Type
 16004 ;;                  2  [STACK] int 
 16005 ;; Registers used:
 16006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16007 ;; Tracked objects:
 16008 ;;		On entry : 0/1
 16009 ;;		On exit  : 0/0
 16010 ;;		Unchanged: 0/0
 16011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16016 ;;Total ram usage:        0 bytes
 16017 ;; Hardware stack levels used:    1
 16018 ;; Hardware stack levels required when called:    6
 16019 ;; This function calls:
 16020 ;;		Nothing
 16021 ;; This function is called by:
 16022 ;;		_dtoa
 16023 ;; This function uses a reentrant model
 16024 ;;
 16025                           
 16026                           	psect	text59
 16027  017E50                     __ptext59:
 16028                           	opt callstack 0
 16029  017E50                     _abs:
 16030                           	opt callstack 17
 16031                           
 16032                           ;stkvar	_a @ sp[(0)+-2]
 16033                           
 16034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16035                           ;incstack = 0
 16036  017E50  0EFF               	movlw	-1
 16037  017E52  BEE3               	btfsc	plusw1,7,c
 16038  017E54  D007               	goto	u5060
 16039  017E56  0EFF               	movlw	-1
 16040  017E58  50E3               	movf	plusw1,w,c
 16041  017E5A  E112               	bnz	l6510
 16042  017E5C  0EFE               	movlw	-2
 16043  017E5E  04E3               	decf	plusw1,w,c
 16044  017E60  B0D8               	btfsc	status,0,c
 16045  017E62  D00E               	goto	l6510
 16046  017E64                     u5060:
 16047                           
 16048                           ;stkvar	_a @ sp[(0)+-2]
 16049  017E64  0EFE               	movlw	-2
 16050  017E66  006F FF8C  F032    	movff	plusw1,btemp
 16051  017E6C  1E32               	comf	btemp^0,f,c
 16052  017E6E  0EFF               	movlw	-1
 16053  017E70  006F FF8C  F033    	movff	plusw1,btemp+1
 16054  017E76  1E33               	comf	(btemp+1)^0,f,c
 16055  017E78  2A32               	incf	btemp^0,f,c
 16056  017E7A  B4D8               	btfsc	status,2,c
 16057  017E7C  2A33               	incf	(btemp+1)^0,f,c
 16058  017E7E  D008               	goto	l2758
 16059  017E80                     l6510:
 16060                           
 16061                           ;stkvar	_a @ sp[(0)+-2]
 16062  017E80  0EFE               	movlw	-2
 16063  017E82  006F FF8C  F032    	movff	plusw1,btemp
 16064  017E88  0EFF               	movlw	-1
 16065  017E8A  006F FF8C  F033    	movff	plusw1,btemp+1
 16066  017E90                     l2758:
 16067                           
 16068                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16069  017E90  52E5               	movf	postdec1,f,c
 16070  017E92  52E5               	movf	postdec1,f,c
 16071  017E94  0012               	return		;funcret
 16072  017E96                     __end_of_abs:
 16073                           	opt callstack 0
 16074                           
 16075 ;; *************** function ___aomod *****************
 16076 ;; Defined at:
 16077 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16078 ;; Parameters:    Size  Location     Type
 16079 ;;  dividend        8  [STACK] long long 
 16080 ;;  divisor         8  [STACK] long long 
 16081 ;; Auto vars:     Size  Location     Type
 16082 ;;  sign            1  [STACK] unsigned char 
 16083 ;;  counter         1  [STACK] unsigned char 
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  8  [STACK] long long 
 16086 ;; Registers used:
 16087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/1
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16097 ;;Total ram usage:        0 bytes
 16098 ;; Hardware stack levels used:    1
 16099 ;; Hardware stack levels required when called:    6
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		_dtoa
 16104 ;; This function uses a reentrant model
 16105 ;;
 16106                           
 16107                           	psect	text60
 16108  015500                     __ptext60:
 16109                           	opt callstack 0
 16110  015500                     ___aomod:
 16111                           	opt callstack 0
 16112                           
 16113                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16114  015500  52E6               	movf	postinc1,f,c
 16115  015502  52E6               	movf	postinc1,f,c
 16116                           
 16117                           ;stkvar	_sign @ sp[(-2)+0]
 16118                           
 16119                           ;incstack = 0
 16120  015504  0EFE               	movlw	-2
 16121  015506  6AE3               	clrf	plusw1,c
 16122                           
 16123                           ;stkvar	_dividend @ sp[(-2)+-8]
 16124  015508  0EFD               	movlw	-3
 16125  01550A  AEE3               	btfss	plusw1,7,c
 16126  01550C  D028               	goto	l6668
 16127                           
 16128                           ;stkvar	_dividend @ sp[(-2)+-8]
 16129                           ;stkvar	_dividend @ sp[(-2)+-8]
 16130  01550E  0EF6               	movlw	-10
 16131  015510  6CE3               	negf	plusw1,c
 16132  015512  0EF7               	movlw	-9
 16133  015514  1EE3               	comf	plusw1,f,c
 16134  015516  0EF8               	movlw	-8
 16135  015518  1EE3               	comf	plusw1,f,c
 16136  01551A  0EF9               	movlw	-7
 16137  01551C  1EE3               	comf	plusw1,f,c
 16138  01551E  0EFA               	movlw	-6
 16139  015520  1EE3               	comf	plusw1,f,c
 16140  015522  0EFB               	movlw	-5
 16141  015524  1EE3               	comf	plusw1,f,c
 16142  015526  0EFC               	movlw	-4
 16143  015528  1EE3               	comf	plusw1,f,c
 16144  01552A  0EFD               	movlw	-3
 16145  01552C  1EE3               	comf	plusw1,f,c
 16146  01552E  E314               	bnc	u5490
 16147  015530  0EF7               	movlw	-9
 16148  015532  2AE3               	incf	plusw1,f,c
 16149  015534  E311               	bnc	u5490
 16150  015536  0EF8               	movlw	-8
 16151  015538  2AE3               	incf	plusw1,f,c
 16152  01553A  E30E               	bnc	u5490
 16153  01553C  0EF9               	movlw	-7
 16154  01553E  2AE3               	incf	plusw1,f,c
 16155  015540  E30B               	bnc	u5490
 16156  015542  0EFA               	movlw	-6
 16157  015544  2AE3               	incf	plusw1,f,c
 16158  015546  E308               	bnc	u5490
 16159  015548  0EFB               	movlw	-5
 16160  01554A  2AE3               	incf	plusw1,f,c
 16161  01554C  E305               	bnc	u5490
 16162  01554E  0EFC               	movlw	-4
 16163  015550  2AE3               	incf	plusw1,f,c
 16164  015552  E302               	bnc	u5490
 16165  015554  0EFD               	movlw	-3
 16166  015556  2AE3               	incf	plusw1,f,c
 16167  015558                     u5490:
 16168                           
 16169                           ;stkvar	_sign @ sp[(-2)+0]
 16170  015558  0EFE               	movlw	-2
 16171  01555A  6AE3               	clrf	plusw1,c
 16172  01555C  2AE3               	incf	plusw1,f,c
 16173  01555E                     l6668:
 16174                           
 16175                           ;stkvar	_divisor @ sp[(-2)+-16]
 16176  01555E  0EF5               	movlw	-11
 16177  015560  AEE3               	btfss	plusw1,7,c
 16178  015562  D025               	goto	u5510
 16179                           
 16180                           ;stkvar	_divisor @ sp[(-2)+-16]
 16181                           ;stkvar	_divisor @ sp[(-2)+-16]
 16182  015564  0EEE               	movlw	-18
 16183  015566  6CE3               	negf	plusw1,c
 16184  015568  0EEF               	movlw	-17
 16185  01556A  1EE3               	comf	plusw1,f,c
 16186  01556C  0EF0               	movlw	-16
 16187  01556E  1EE3               	comf	plusw1,f,c
 16188  015570  0EF1               	movlw	-15
 16189  015572  1EE3               	comf	plusw1,f,c
 16190  015574  0EF2               	movlw	-14
 16191  015576  1EE3               	comf	plusw1,f,c
 16192  015578  0EF3               	movlw	-13
 16193  01557A  1EE3               	comf	plusw1,f,c
 16194  01557C  0EF4               	movlw	-12
 16195  01557E  1EE3               	comf	plusw1,f,c
 16196  015580  0EF5               	movlw	-11
 16197  015582  1EE3               	comf	plusw1,f,c
 16198  015584  E314               	bnc	u5510
 16199  015586  0EEF               	movlw	-17
 16200  015588  2AE3               	incf	plusw1,f,c
 16201  01558A  E311               	bnc	u5510
 16202  01558C  0EF0               	movlw	-16
 16203  01558E  2AE3               	incf	plusw1,f,c
 16204  015590  E30E               	bnc	u5510
 16205  015592  0EF1               	movlw	-15
 16206  015594  2AE3               	incf	plusw1,f,c
 16207  015596  E30B               	bnc	u5510
 16208  015598  0EF2               	movlw	-14
 16209  01559A  2AE3               	incf	plusw1,f,c
 16210  01559C  E308               	bnc	u5510
 16211  01559E  0EF3               	movlw	-13
 16212  0155A0  2AE3               	incf	plusw1,f,c
 16213  0155A2  E305               	bnc	u5510
 16214  0155A4  0EF4               	movlw	-12
 16215  0155A6  2AE3               	incf	plusw1,f,c
 16216  0155A8  E302               	bnc	u5510
 16217  0155AA  0EF5               	movlw	-11
 16218  0155AC  2AE3               	incf	plusw1,f,c
 16219  0155AE                     u5510:
 16220                           
 16221                           ;stkvar	_divisor @ sp[(-2)+-16]
 16222  0155AE  0EEE               	movlw	-18
 16223  0155B0  50E3               	movf	plusw1,w,c
 16224  0155B2  E116               	bnz	u5520
 16225  0155B4  0EEF               	movlw	-17
 16226  0155B6  50E3               	movf	plusw1,w,c
 16227  0155B8  E113               	bnz	u5520
 16228  0155BA  0EF0               	movlw	-16
 16229  0155BC  50E3               	movf	plusw1,w,c
 16230  0155BE  E110               	bnz	u5520
 16231  0155C0  0EF1               	movlw	-15
 16232  0155C2  50E3               	movf	plusw1,w,c
 16233  0155C4  E10D               	bnz	u5520
 16234  0155C6  0EF2               	movlw	-14
 16235  0155C8  50E3               	movf	plusw1,w,c
 16236  0155CA  E10A               	bnz	u5520
 16237  0155CC  0EF3               	movlw	-13
 16238  0155CE  50E3               	movf	plusw1,w,c
 16239  0155D0  E107               	bnz	u5520
 16240  0155D2  0EF4               	movlw	-12
 16241  0155D4  50E3               	movf	plusw1,w,c
 16242  0155D6  E104               	bnz	u5520
 16243  0155D8  0EF5               	movlw	-11
 16244  0155DA  50E3               	movf	plusw1,w,c
 16245  0155DC  B4D8               	btfsc	status,2,c
 16246  0155DE  D075               	goto	u5550
 16247  0155E0                     u5520:
 16248                           
 16249                           ;stkvar	_counter @ sp[(-2)+1]
 16250  0155E0  0EFF               	movlw	-1
 16251  0155E2  6AE3               	clrf	plusw1,c
 16252  0155E4  D012               	goto	L18
 16253  0155E6                     l6676:
 16254                           
 16255                           ;stkvar	_divisor @ sp[(-2)+-16]
 16256  0155E6  90D8               	bcf	status,0,c
 16257  0155E8  0EEE               	movlw	-18
 16258  0155EA  36E3               	rlcf	plusw1,f,c
 16259  0155EC  0EEF               	movlw	-17
 16260  0155EE  36E3               	rlcf	plusw1,f,c
 16261  0155F0  0EF0               	movlw	-16
 16262  0155F2  36E3               	rlcf	plusw1,f,c
 16263  0155F4  0EF1               	movlw	-15
 16264  0155F6  36E3               	rlcf	plusw1,f,c
 16265  0155F8  0EF2               	movlw	-14
 16266  0155FA  36E3               	rlcf	plusw1,f,c
 16267  0155FC  0EF3               	movlw	-13
 16268  0155FE  36E3               	rlcf	plusw1,f,c
 16269  015600  0EF4               	movlw	-12
 16270  015602  36E3               	rlcf	plusw1,f,c
 16271  015604  0EF5               	movlw	-11
 16272  015606  36E3               	rlcf	plusw1,f,c
 16273                           
 16274                           ;stkvar	_counter @ sp[(-2)+1]
 16275  015608  0EFF               	movlw	-1
 16276  01560A                     L18:
 16277  01560A  2AE3               	incf	plusw1,f,c
 16278                           
 16279                           ;stkvar	_divisor @ sp[(-2)+-16]
 16280  01560C  0EF5               	movlw	-11
 16281  01560E  AEE3               	btfss	plusw1,7,c
 16282  015610  D7EA               	goto	l6676
 16283  015612                     u5530:
 16284                           
 16285                           ;stkvar	_divisor @ sp[(-2)+-16]
 16286                           ;stkvar	_dividend @ sp[(-2)+-8]
 16287  015612  50E1               	movf	fsr1l,w,c
 16288  015614  0FF6               	addlw	-10
 16289  015616  6ED9               	movwf	fsr2l,c
 16290  015618  50E2               	movf	fsr1h,w,c
 16291  01561A  6EDA               	movwf	fsr2h,c
 16292  01561C  0EFF               	movlw	255
 16293  01561E  22DA               	addwfc	fsr2h,f,c
 16294  015620  0EEE               	movlw	-18
 16295  015622  50E3               	movf	plusw1,w,c
 16296  015624  5CDE               	subwf	postinc2,w,c
 16297  015626  0EEF               	movlw	-17
 16298  015628  50E3               	movf	plusw1,w,c
 16299  01562A  58DE               	subwfb	postinc2,w,c
 16300  01562C  0EF0               	movlw	-16
 16301  01562E  50E3               	movf	plusw1,w,c
 16302  015630  58DE               	subwfb	postinc2,w,c
 16303  015632  0EF1               	movlw	-15
 16304  015634  50E3               	movf	plusw1,w,c
 16305  015636  58DE               	subwfb	postinc2,w,c
 16306  015638  0EF2               	movlw	-14
 16307  01563A  50E3               	movf	plusw1,w,c
 16308  01563C  58DE               	subwfb	postinc2,w,c
 16309  01563E  0EF3               	movlw	-13
 16310  015640  50E3               	movf	plusw1,w,c
 16311  015642  58DE               	subwfb	postinc2,w,c
 16312  015644  0EF4               	movlw	-12
 16313  015646  50E3               	movf	plusw1,w,c
 16314  015648  58DE               	subwfb	postinc2,w,c
 16315  01564A  0EF5               	movlw	-11
 16316  01564C  50E3               	movf	plusw1,w,c
 16317  01564E  58DE               	subwfb	postinc2,w,c
 16318  015650  A0D8               	btfss	status,0,c
 16319  015652  D01F               	goto	l6684
 16320                           
 16321                           ;stkvar	_divisor @ sp[(-2)+-16]
 16322                           ;stkvar	_dividend @ sp[(-2)+-8]
 16323  015654  50E1               	movf	fsr1l,w,c
 16324  015656  0FF6               	addlw	-10
 16325  015658  6ED9               	movwf	fsr2l,c
 16326  01565A  50E2               	movf	fsr1h,w,c
 16327  01565C  6EDA               	movwf	fsr2h,c
 16328  01565E  0EFF               	movlw	255
 16329  015660  22DA               	addwfc	fsr2h,f,c
 16330  015662  0EEE               	movlw	-18
 16331  015664  50E3               	movf	plusw1,w,c
 16332  015666  5EDE               	subwf	postinc2,f,c
 16333  015668  0EEF               	movlw	-17
 16334  01566A  50E3               	movf	plusw1,w,c
 16335  01566C  5ADE               	subwfb	postinc2,f,c
 16336  01566E  0EF0               	movlw	-16
 16337  015670  50E3               	movf	plusw1,w,c
 16338  015672  5ADE               	subwfb	postinc2,f,c
 16339  015674  0EF1               	movlw	-15
 16340  015676  50E3               	movf	plusw1,w,c
 16341  015678  5ADE               	subwfb	postinc2,f,c
 16342  01567A  0EF2               	movlw	-14
 16343  01567C  50E3               	movf	plusw1,w,c
 16344  01567E  5ADE               	subwfb	postinc2,f,c
 16345  015680  0EF3               	movlw	-13
 16346  015682  50E3               	movf	plusw1,w,c
 16347  015684  5ADE               	subwfb	postinc2,f,c
 16348  015686  0EF4               	movlw	-12
 16349  015688  50E3               	movf	plusw1,w,c
 16350  01568A  5ADE               	subwfb	postinc2,f,c
 16351  01568C  0EF5               	movlw	-11
 16352  01568E  50E3               	movf	plusw1,w,c
 16353  015690  5ADE               	subwfb	postinc2,f,c
 16354  015692                     l6684:
 16355                           
 16356                           ;stkvar	_divisor @ sp[(-2)+-16]
 16357  015692  90D8               	bcf	status,0,c
 16358  015694  0EF5               	movlw	-11
 16359  015696  32E3               	rrcf	plusw1,f,c
 16360  015698  0EF4               	movlw	-12
 16361  01569A  32E3               	rrcf	plusw1,f,c
 16362  01569C  0EF3               	movlw	-13
 16363  01569E  32E3               	rrcf	plusw1,f,c
 16364  0156A0  0EF2               	movlw	-14
 16365  0156A2  32E3               	rrcf	plusw1,f,c
 16366  0156A4  0EF1               	movlw	-15
 16367  0156A6  32E3               	rrcf	plusw1,f,c
 16368  0156A8  0EF0               	movlw	-16
 16369  0156AA  32E3               	rrcf	plusw1,f,c
 16370  0156AC  0EEF               	movlw	-17
 16371  0156AE  32E3               	rrcf	plusw1,f,c
 16372  0156B0  0EEE               	movlw	-18
 16373  0156B2  32E3               	rrcf	plusw1,f,c
 16374                           
 16375                           ;stkvar	_counter @ sp[(-2)+1]
 16376  0156B4  0EFF               	movlw	-1
 16377  0156B6  50E3               	movf	plusw1,w,c
 16378  0156B8  6E32               	movwf	btemp^0,c
 16379  0156BA  0E01               	movlw	1
 16380  0156BC  5E32               	subwf	btemp^0,f,c
 16381  0156BE  0EFF               	movlw	-1
 16382  0156C0  0060  F0CB  FFE3   	movff	btemp,plusw1
 16383  0156C6  A4D8               	btfss	status,2,c
 16384  0156C8  D7A4               	goto	u5530
 16385  0156CA                     u5550:
 16386                           
 16387                           ;stkvar	_sign @ sp[(-2)+0]
 16388  0156CA  0EFE               	movlw	-2
 16389  0156CC  50E3               	movf	plusw1,w,c
 16390  0156CE  B4D8               	btfsc	status,2,c
 16391  0156D0  D025               	goto	u5570
 16392                           
 16393                           ;stkvar	_dividend @ sp[(-2)+-8]
 16394                           ;stkvar	_dividend @ sp[(-2)+-8]
 16395  0156D2  0EF6               	movlw	-10
 16396  0156D4  6CE3               	negf	plusw1,c
 16397  0156D6  0EF7               	movlw	-9
 16398  0156D8  1EE3               	comf	plusw1,f,c
 16399  0156DA  0EF8               	movlw	-8
 16400  0156DC  1EE3               	comf	plusw1,f,c
 16401  0156DE  0EF9               	movlw	-7
 16402  0156E0  1EE3               	comf	plusw1,f,c
 16403  0156E2  0EFA               	movlw	-6
 16404  0156E4  1EE3               	comf	plusw1,f,c
 16405  0156E6  0EFB               	movlw	-5
 16406  0156E8  1EE3               	comf	plusw1,f,c
 16407  0156EA  0EFC               	movlw	-4
 16408  0156EC  1EE3               	comf	plusw1,f,c
 16409  0156EE  0EFD               	movlw	-3
 16410  0156F0  1EE3               	comf	plusw1,f,c
 16411  0156F2  E314               	bnc	u5570
 16412  0156F4  0EF7               	movlw	-9
 16413  0156F6  2AE3               	incf	plusw1,f,c
 16414  0156F8  E311               	bnc	u5570
 16415  0156FA  0EF8               	movlw	-8
 16416  0156FC  2AE3               	incf	plusw1,f,c
 16417  0156FE  E30E               	bnc	u5570
 16418  015700  0EF9               	movlw	-7
 16419  015702  2AE3               	incf	plusw1,f,c
 16420  015704  E30B               	bnc	u5570
 16421  015706  0EFA               	movlw	-6
 16422  015708  2AE3               	incf	plusw1,f,c
 16423  01570A  E308               	bnc	u5570
 16424  01570C  0EFB               	movlw	-5
 16425  01570E  2AE3               	incf	plusw1,f,c
 16426  015710  E305               	bnc	u5570
 16427  015712  0EFC               	movlw	-4
 16428  015714  2AE3               	incf	plusw1,f,c
 16429  015716  E302               	bnc	u5570
 16430  015718  0EFD               	movlw	-3
 16431  01571A  2AE3               	incf	plusw1,f,c
 16432  01571C                     u5570:
 16433                           
 16434                           ;stkvar	_dividend @ sp[(-2)+-8]
 16435  01571C  0EF6               	movlw	246
 16436  01571E  24E1               	addwf	fsr1l,w,c
 16437  015720  6ED9               	movwf	fsr2l,c
 16438  015722  0EFF               	movlw	255
 16439  015724  20E2               	addwfc	fsr1h,w,c
 16440  015726  6EDA               	movwf	fsr2h,c
 16441                           
 16442                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16443  015728  0E08               	movlw	8
 16444  01572A  6E32               	movwf	btemp^0,c
 16445  01572C  0EF6               	movlw	-10
 16446  01572E                     us558999:
 16447  01572E  006F FF7B FFE3     	movff	postinc2,plusw1
 16448  015734  28E8               	incf	wreg,w,c
 16449  015736  2E32               	decfsz	btemp^0,f,c
 16450  015738  D7FA               	bra	us558999
 16451                           
 16452                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16453  01573A  52E5               	movf	postdec1,f,c
 16454  01573C  52E5               	movf	postdec1,f,c
 16455  01573E  0012               	return		;funcret
 16456  015740                     __end_of___aomod:
 16457                           	opt callstack 0
 16458                           
 16459 ;; *************** function ___aodiv *****************
 16460 ;; Defined at:
 16461 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  dividend        8  [STACK] long long 
 16464 ;;  divisor         8  [STACK] long long 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  quotient        8  [STACK] long long 
 16467 ;;  sign            1  [STACK] unsigned char 
 16468 ;;  counter         1  [STACK] unsigned char 
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  8  [STACK] long long 
 16471 ;; Registers used:
 16472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/1
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16482 ;;Total ram usage:        0 bytes
 16483 ;; Hardware stack levels used:    1
 16484 ;; Hardware stack levels required when called:    6
 16485 ;; This function calls:
 16486 ;;		Nothing
 16487 ;; This function is called by:
 16488 ;;		_dtoa
 16489 ;; This function uses a reentrant model
 16490 ;;
 16491                           
 16492                           	psect	text61
 16493  014DB8                     __ptext61:
 16494                           	opt callstack 0
 16495  014DB8                     ___aodiv:
 16496                           	opt callstack 0
 16497                           
 16498                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16499  014DB8  0E0A               	movlw	10
 16500  014DBA  26E1               	addwf	fsr1l,f,c
 16501  014DBC  0E00               	movlw	0
 16502  014DBE  22E2               	addwfc	fsr1h,f,c
 16503                           
 16504                           ;stkvar	_sign @ sp[(-10)+8]
 16505                           
 16506                           ;incstack = 0
 16507  014DC0  0EFE               	movlw	-2
 16508  014DC2  6AE3               	clrf	plusw1,c
 16509                           
 16510                           ;stkvar	_divisor @ sp[(-10)+-16]
 16511  014DC4  0EED               	movlw	-19
 16512  014DC6  AEE3               	btfss	plusw1,7,c
 16513  014DC8  D028               	goto	l6624
 16514                           
 16515                           ;stkvar	_divisor @ sp[(-10)+-16]
 16516                           ;stkvar	_divisor @ sp[(-10)+-16]
 16517  014DCA  0EE6               	movlw	-26
 16518  014DCC  6CE3               	negf	plusw1,c
 16519  014DCE  0EE7               	movlw	-25
 16520  014DD0  1EE3               	comf	plusw1,f,c
 16521  014DD2  0EE8               	movlw	-24
 16522  014DD4  1EE3               	comf	plusw1,f,c
 16523  014DD6  0EE9               	movlw	-23
 16524  014DD8  1EE3               	comf	plusw1,f,c
 16525  014DDA  0EEA               	movlw	-22
 16526  014DDC  1EE3               	comf	plusw1,f,c
 16527  014DDE  0EEB               	movlw	-21
 16528  014DE0  1EE3               	comf	plusw1,f,c
 16529  014DE2  0EEC               	movlw	-20
 16530  014DE4  1EE3               	comf	plusw1,f,c
 16531  014DE6  0EED               	movlw	-19
 16532  014DE8  1EE3               	comf	plusw1,f,c
 16533  014DEA  E314               	bnc	u5370
 16534  014DEC  0EE7               	movlw	-25
 16535  014DEE  2AE3               	incf	plusw1,f,c
 16536  014DF0  E311               	bnc	u5370
 16537  014DF2  0EE8               	movlw	-24
 16538  014DF4  2AE3               	incf	plusw1,f,c
 16539  014DF6  E30E               	bnc	u5370
 16540  014DF8  0EE9               	movlw	-23
 16541  014DFA  2AE3               	incf	plusw1,f,c
 16542  014DFC  E30B               	bnc	u5370
 16543  014DFE  0EEA               	movlw	-22
 16544  014E00  2AE3               	incf	plusw1,f,c
 16545  014E02  E308               	bnc	u5370
 16546  014E04  0EEB               	movlw	-21
 16547  014E06  2AE3               	incf	plusw1,f,c
 16548  014E08  E305               	bnc	u5370
 16549  014E0A  0EEC               	movlw	-20
 16550  014E0C  2AE3               	incf	plusw1,f,c
 16551  014E0E  E302               	bnc	u5370
 16552  014E10  0EED               	movlw	-19
 16553  014E12  2AE3               	incf	plusw1,f,c
 16554  014E14                     u5370:
 16555                           
 16556                           ;stkvar	_sign @ sp[(-10)+8]
 16557  014E14  0EFE               	movlw	-2
 16558  014E16  6AE3               	clrf	plusw1,c
 16559  014E18  2AE3               	incf	plusw1,f,c
 16560  014E1A                     l6624:
 16561                           
 16562                           ;stkvar	_dividend @ sp[(-10)+-8]
 16563  014E1A  0EF5               	movlw	-11
 16564  014E1C  AEE3               	btfss	plusw1,7,c
 16565  014E1E  D027               	goto	l6630
 16566                           
 16567                           ;stkvar	_dividend @ sp[(-10)+-8]
 16568                           ;stkvar	_dividend @ sp[(-10)+-8]
 16569  014E20  0EEE               	movlw	-18
 16570  014E22  6CE3               	negf	plusw1,c
 16571  014E24  0EEF               	movlw	-17
 16572  014E26  1EE3               	comf	plusw1,f,c
 16573  014E28  0EF0               	movlw	-16
 16574  014E2A  1EE3               	comf	plusw1,f,c
 16575  014E2C  0EF1               	movlw	-15
 16576  014E2E  1EE3               	comf	plusw1,f,c
 16577  014E30  0EF2               	movlw	-14
 16578  014E32  1EE3               	comf	plusw1,f,c
 16579  014E34  0EF3               	movlw	-13
 16580  014E36  1EE3               	comf	plusw1,f,c
 16581  014E38  0EF4               	movlw	-12
 16582  014E3A  1EE3               	comf	plusw1,f,c
 16583  014E3C  0EF5               	movlw	-11
 16584  014E3E  1EE3               	comf	plusw1,f,c
 16585  014E40  E314               	bnc	u5390
 16586  014E42  0EEF               	movlw	-17
 16587  014E44  2AE3               	incf	plusw1,f,c
 16588  014E46  E311               	bnc	u5390
 16589  014E48  0EF0               	movlw	-16
 16590  014E4A  2AE3               	incf	plusw1,f,c
 16591  014E4C  E30E               	bnc	u5390
 16592  014E4E  0EF1               	movlw	-15
 16593  014E50  2AE3               	incf	plusw1,f,c
 16594  014E52  E30B               	bnc	u5390
 16595  014E54  0EF2               	movlw	-14
 16596  014E56  2AE3               	incf	plusw1,f,c
 16597  014E58  E308               	bnc	u5390
 16598  014E5A  0EF3               	movlw	-13
 16599  014E5C  2AE3               	incf	plusw1,f,c
 16600  014E5E  E305               	bnc	u5390
 16601  014E60  0EF4               	movlw	-12
 16602  014E62  2AE3               	incf	plusw1,f,c
 16603  014E64  E302               	bnc	u5390
 16604  014E66  0EF5               	movlw	-11
 16605  014E68  2AE3               	incf	plusw1,f,c
 16606  014E6A                     u5390:
 16607                           
 16608                           ;stkvar	_sign @ sp[(-10)+8]
 16609  014E6A  0EFE               	movlw	-2
 16610  014E6C  70E3               	btg	plusw1,0,c
 16611  014E6E                     l6630:
 16612                           
 16613                           ;stkvar	_quotient @ sp[(-10)+0]
 16614  014E6E  0E07               	movlw	7
 16615  014E70  6E32               	movwf	btemp^0,c
 16616  014E72  0EF6               	movlw	-10
 16617  014E74                     u5401:
 16618  014E74  6AE3               	clrf	plusw1,c
 16619  014E76  2AE8               	incf	wreg,f,c
 16620  014E78  0632               	decf	btemp^0,f,c
 16621  014E7A  E2FC               	bc	u5401
 16622                           
 16623                           ;stkvar	_divisor @ sp[(-10)+-16]
 16624  014E7C  0EE6               	movlw	-26
 16625  014E7E  50E3               	movf	plusw1,w,c
 16626  014E80  E116               	bnz	u5410
 16627  014E82  0EE7               	movlw	-25
 16628  014E84  50E3               	movf	plusw1,w,c
 16629  014E86  E113               	bnz	u5410
 16630  014E88  0EE8               	movlw	-24
 16631  014E8A  50E3               	movf	plusw1,w,c
 16632  014E8C  E110               	bnz	u5410
 16633  014E8E  0EE9               	movlw	-23
 16634  014E90  50E3               	movf	plusw1,w,c
 16635  014E92  E10D               	bnz	u5410
 16636  014E94  0EEA               	movlw	-22
 16637  014E96  50E3               	movf	plusw1,w,c
 16638  014E98  E10A               	bnz	u5410
 16639  014E9A  0EEB               	movlw	-21
 16640  014E9C  50E3               	movf	plusw1,w,c
 16641  014E9E  E107               	bnz	u5410
 16642  014EA0  0EEC               	movlw	-20
 16643  014EA2  50E3               	movf	plusw1,w,c
 16644  014EA4  E104               	bnz	u5410
 16645  014EA6  0EED               	movlw	-19
 16646  014EA8  50E3               	movf	plusw1,w,c
 16647  014EAA  B4D8               	btfsc	status,2,c
 16648  014EAC  D088               	goto	u5440
 16649  014EAE                     u5410:
 16650                           
 16651                           ;stkvar	_counter @ sp[(-10)+9]
 16652  014EAE  0EFF               	movlw	-1
 16653  014EB0  6AE3               	clrf	plusw1,c
 16654  014EB2  D012               	goto	L19
 16655  014EB4                     l6636:
 16656                           
 16657                           ;stkvar	_divisor @ sp[(-10)+-16]
 16658  014EB4  90D8               	bcf	status,0,c
 16659  014EB6  0EE6               	movlw	-26
 16660  014EB8  36E3               	rlcf	plusw1,f,c
 16661  014EBA  0EE7               	movlw	-25
 16662  014EBC  36E3               	rlcf	plusw1,f,c
 16663  014EBE  0EE8               	movlw	-24
 16664  014EC0  36E3               	rlcf	plusw1,f,c
 16665  014EC2  0EE9               	movlw	-23
 16666  014EC4  36E3               	rlcf	plusw1,f,c
 16667  014EC6  0EEA               	movlw	-22
 16668  014EC8  36E3               	rlcf	plusw1,f,c
 16669  014ECA  0EEB               	movlw	-21
 16670  014ECC  36E3               	rlcf	plusw1,f,c
 16671  014ECE  0EEC               	movlw	-20
 16672  014ED0  36E3               	rlcf	plusw1,f,c
 16673  014ED2  0EED               	movlw	-19
 16674  014ED4  36E3               	rlcf	plusw1,f,c
 16675                           
 16676                           ;stkvar	_counter @ sp[(-10)+9]
 16677  014ED6  0EFF               	movlw	-1
 16678  014ED8                     L19:
 16679  014ED8  2AE3               	incf	plusw1,f,c
 16680                           
 16681                           ;stkvar	_divisor @ sp[(-10)+-16]
 16682  014EDA  0EED               	movlw	-19
 16683  014EDC  AEE3               	btfss	plusw1,7,c
 16684  014EDE  D7EA               	goto	l6636
 16685  014EE0                     u5420:
 16686                           
 16687                           ;stkvar	_quotient @ sp[(-10)+0]
 16688  014EE0  90D8               	bcf	status,0,c
 16689  014EE2  0EF6               	movlw	-10
 16690  014EE4  36E3               	rlcf	plusw1,f,c
 16691  014EE6  0EF7               	movlw	-9
 16692  014EE8  36E3               	rlcf	plusw1,f,c
 16693  014EEA  0EF8               	movlw	-8
 16694  014EEC  36E3               	rlcf	plusw1,f,c
 16695  014EEE  0EF9               	movlw	-7
 16696  014EF0  36E3               	rlcf	plusw1,f,c
 16697  014EF2  0EFA               	movlw	-6
 16698  014EF4  36E3               	rlcf	plusw1,f,c
 16699  014EF6  0EFB               	movlw	-5
 16700  014EF8  36E3               	rlcf	plusw1,f,c
 16701  014EFA  0EFC               	movlw	-4
 16702  014EFC  36E3               	rlcf	plusw1,f,c
 16703  014EFE  0EFD               	movlw	-3
 16704  014F00  36E3               	rlcf	plusw1,f,c
 16705                           
 16706                           ;stkvar	_divisor @ sp[(-10)+-16]
 16707                           ;stkvar	_dividend @ sp[(-10)+-8]
 16708  014F02  50E1               	movf	fsr1l,w,c
 16709  014F04  0FEE               	addlw	-18
 16710  014F06  6ED9               	movwf	fsr2l,c
 16711  014F08  50E2               	movf	fsr1h,w,c
 16712  014F0A  6EDA               	movwf	fsr2h,c
 16713  014F0C  0EFF               	movlw	255
 16714  014F0E  22DA               	addwfc	fsr2h,f,c
 16715  014F10  0EE6               	movlw	-26
 16716  014F12  50E3               	movf	plusw1,w,c
 16717  014F14  5CDE               	subwf	postinc2,w,c
 16718  014F16  0EE7               	movlw	-25
 16719  014F18  50E3               	movf	plusw1,w,c
 16720  014F1A  58DE               	subwfb	postinc2,w,c
 16721  014F1C  0EE8               	movlw	-24
 16722  014F1E  50E3               	movf	plusw1,w,c
 16723  014F20  58DE               	subwfb	postinc2,w,c
 16724  014F22  0EE9               	movlw	-23
 16725  014F24  50E3               	movf	plusw1,w,c
 16726  014F26  58DE               	subwfb	postinc2,w,c
 16727  014F28  0EEA               	movlw	-22
 16728  014F2A  50E3               	movf	plusw1,w,c
 16729  014F2C  58DE               	subwfb	postinc2,w,c
 16730  014F2E  0EEB               	movlw	-21
 16731  014F30  50E3               	movf	plusw1,w,c
 16732  014F32  58DE               	subwfb	postinc2,w,c
 16733  014F34  0EEC               	movlw	-20
 16734  014F36  50E3               	movf	plusw1,w,c
 16735  014F38  58DE               	subwfb	postinc2,w,c
 16736  014F3A  0EED               	movlw	-19
 16737  014F3C  50E3               	movf	plusw1,w,c
 16738  014F3E  58DE               	subwfb	postinc2,w,c
 16739  014F40  A0D8               	btfss	status,0,c
 16740  014F42  D021               	goto	l6648
 16741                           
 16742                           ;stkvar	_divisor @ sp[(-10)+-16]
 16743                           ;stkvar	_dividend @ sp[(-10)+-8]
 16744  014F44  50E1               	movf	fsr1l,w,c
 16745  014F46  0FEE               	addlw	-18
 16746  014F48  6ED9               	movwf	fsr2l,c
 16747  014F4A  50E2               	movf	fsr1h,w,c
 16748  014F4C  6EDA               	movwf	fsr2h,c
 16749  014F4E  0EFF               	movlw	255
 16750  014F50  22DA               	addwfc	fsr2h,f,c
 16751  014F52  0EE6               	movlw	-26
 16752  014F54  50E3               	movf	plusw1,w,c
 16753  014F56  5EDE               	subwf	postinc2,f,c
 16754  014F58  0EE7               	movlw	-25
 16755  014F5A  50E3               	movf	plusw1,w,c
 16756  014F5C  5ADE               	subwfb	postinc2,f,c
 16757  014F5E  0EE8               	movlw	-24
 16758  014F60  50E3               	movf	plusw1,w,c
 16759  014F62  5ADE               	subwfb	postinc2,f,c
 16760  014F64  0EE9               	movlw	-23
 16761  014F66  50E3               	movf	plusw1,w,c
 16762  014F68  5ADE               	subwfb	postinc2,f,c
 16763  014F6A  0EEA               	movlw	-22
 16764  014F6C  50E3               	movf	plusw1,w,c
 16765  014F6E  5ADE               	subwfb	postinc2,f,c
 16766  014F70  0EEB               	movlw	-21
 16767  014F72  50E3               	movf	plusw1,w,c
 16768  014F74  5ADE               	subwfb	postinc2,f,c
 16769  014F76  0EEC               	movlw	-20
 16770  014F78  50E3               	movf	plusw1,w,c
 16771  014F7A  5ADE               	subwfb	postinc2,f,c
 16772  014F7C  0EED               	movlw	-19
 16773  014F7E  50E3               	movf	plusw1,w,c
 16774  014F80  5ADE               	subwfb	postinc2,f,c
 16775                           
 16776                           ;stkvar	_quotient @ sp[(-10)+0]
 16777  014F82  0EF6               	movlw	-10
 16778  014F84  80E3               	bsf	plusw1,0,c
 16779  014F86                     l6648:
 16780                           
 16781                           ;stkvar	_divisor @ sp[(-10)+-16]
 16782  014F86  90D8               	bcf	status,0,c
 16783  014F88  0EED               	movlw	-19
 16784  014F8A  32E3               	rrcf	plusw1,f,c
 16785  014F8C  0EEC               	movlw	-20
 16786  014F8E  32E3               	rrcf	plusw1,f,c
 16787  014F90  0EEB               	movlw	-21
 16788  014F92  32E3               	rrcf	plusw1,f,c
 16789  014F94  0EEA               	movlw	-22
 16790  014F96  32E3               	rrcf	plusw1,f,c
 16791  014F98  0EE9               	movlw	-23
 16792  014F9A  32E3               	rrcf	plusw1,f,c
 16793  014F9C  0EE8               	movlw	-24
 16794  014F9E  32E3               	rrcf	plusw1,f,c
 16795  014FA0  0EE7               	movlw	-25
 16796  014FA2  32E3               	rrcf	plusw1,f,c
 16797  014FA4  0EE6               	movlw	-26
 16798  014FA6  32E3               	rrcf	plusw1,f,c
 16799                           
 16800                           ;stkvar	_counter @ sp[(-10)+9]
 16801  014FA8  0EFF               	movlw	-1
 16802  014FAA  50E3               	movf	plusw1,w,c
 16803  014FAC  6E32               	movwf	btemp^0,c
 16804  014FAE  0E01               	movlw	1
 16805  014FB0  5E32               	subwf	btemp^0,f,c
 16806  014FB2  0EFF               	movlw	-1
 16807  014FB4  0060  F0CB  FFE3   	movff	btemp,plusw1
 16808  014FBA  A4D8               	btfss	status,2,c
 16809  014FBC  D791               	goto	u5420
 16810  014FBE                     u5440:
 16811                           
 16812                           ;stkvar	_sign @ sp[(-10)+8]
 16813  014FBE  0EFE               	movlw	-2
 16814  014FC0  50E3               	movf	plusw1,w,c
 16815  014FC2  B4D8               	btfsc	status,2,c
 16816  014FC4  D025               	goto	u5460
 16817                           
 16818                           ;stkvar	_quotient @ sp[(-10)+0]
 16819                           ;stkvar	_quotient @ sp[(-10)+0]
 16820  014FC6  0EF6               	movlw	-10
 16821  014FC8  6CE3               	negf	plusw1,c
 16822  014FCA  0EF7               	movlw	-9
 16823  014FCC  1EE3               	comf	plusw1,f,c
 16824  014FCE  0EF8               	movlw	-8
 16825  014FD0  1EE3               	comf	plusw1,f,c
 16826  014FD2  0EF9               	movlw	-7
 16827  014FD4  1EE3               	comf	plusw1,f,c
 16828  014FD6  0EFA               	movlw	-6
 16829  014FD8  1EE3               	comf	plusw1,f,c
 16830  014FDA  0EFB               	movlw	-5
 16831  014FDC  1EE3               	comf	plusw1,f,c
 16832  014FDE  0EFC               	movlw	-4
 16833  014FE0  1EE3               	comf	plusw1,f,c
 16834  014FE2  0EFD               	movlw	-3
 16835  014FE4  1EE3               	comf	plusw1,f,c
 16836  014FE6  E314               	bnc	u5460
 16837  014FE8  0EF7               	movlw	-9
 16838  014FEA  2AE3               	incf	plusw1,f,c
 16839  014FEC  E311               	bnc	u5460
 16840  014FEE  0EF8               	movlw	-8
 16841  014FF0  2AE3               	incf	plusw1,f,c
 16842  014FF2  E30E               	bnc	u5460
 16843  014FF4  0EF9               	movlw	-7
 16844  014FF6  2AE3               	incf	plusw1,f,c
 16845  014FF8  E30B               	bnc	u5460
 16846  014FFA  0EFA               	movlw	-6
 16847  014FFC  2AE3               	incf	plusw1,f,c
 16848  014FFE  E308               	bnc	u5460
 16849  015000  0EFB               	movlw	-5
 16850  015002  2AE3               	incf	plusw1,f,c
 16851  015004  E305               	bnc	u5460
 16852  015006  0EFC               	movlw	-4
 16853  015008  2AE3               	incf	plusw1,f,c
 16854  01500A  E302               	bnc	u5460
 16855  01500C  0EFD               	movlw	-3
 16856  01500E  2AE3               	incf	plusw1,f,c
 16857  015010                     u5460:
 16858                           
 16859                           ;stkvar	_quotient @ sp[(-10)+0]
 16860  015010  0EF6               	movlw	246
 16861  015012  24E1               	addwf	fsr1l,w,c
 16862  015014  6ED9               	movwf	fsr2l,c
 16863  015016  0EFF               	movlw	255
 16864  015018  20E2               	addwfc	fsr1h,w,c
 16865  01501A  6EDA               	movwf	fsr2h,c
 16866                           
 16867                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 16868  01501C  0E08               	movlw	8
 16869  01501E  6E32               	movwf	btemp^0,c
 16870  015020  0EEE               	movlw	-18
 16871  015022                     us547999:
 16872  015022  006F FF7B FFE3     	movff	postinc2,plusw1
 16873  015028  28E8               	incf	wreg,w,c
 16874  01502A  2E32               	decfsz	btemp^0,f,c
 16875  01502C  D7FA               	bra	us547999
 16876                           
 16877                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 16878  01502E  0EF6               	movlw	246
 16879  015030  26E1               	addwf	fsr1l,f,c
 16880  015032  0EFF               	movlw	255
 16881  015034  22E2               	addwfc	fsr1h,f,c
 16882  015036  0012               	return		;funcret
 16883  015038                     __end_of___aodiv:
 16884                           	opt callstack 0
 16885                           
 16886 ;; *************** function _ctoa *****************
 16887 ;; Defined at:
 16888 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16889 ;; Parameters:    Size  Location     Type
 16890 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16891 ;;		 -> f(6), NULL(0), 
 16892 ;;  c               1  [STACK] unsigned char 
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  w               2  [STACK] int 
 16895 ;;  l               2    0        int 
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  2  [STACK] int 
 16898 ;; Registers used:
 16899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/5
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:   11
 16912 ;; This function calls:
 16913 ;;		_pad
 16914 ;; This function is called by:
 16915 ;;		_vfpfcnvrt
 16916 ;; This function uses a reentrant model
 16917 ;;
 16918                           
 16919                           	psect	text62
 16920  01763E                     __ptext62:
 16921                           	opt callstack 0
 16922  01763E                     _ctoa:
 16923                           	opt callstack 0
 16924                           
 16925                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16926  01763E  52E6               	movf	postinc1,f,c
 16927  017640  52E6               	movf	postinc1,f,c
 16928                           
 16929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 16930                           
 16931                           ;incstack = 0
 16932  017642  501B               	movf	_width^0,w,c
 16933  017644  101C               	iorwf	(_width+1)^0,w,c
 16934  017646  A4D8               	btfss	status,2,c
 16935  017648  D009               	goto	l9492
 16936                           
 16937                           ;stkvar	_w @ sp[(-2)+0]
 16938  01764A  0EFE               	movlw	-2
 16939  01764C  0060  F06F  FFE3   	movff	_width,plusw1
 16940  017652  0EFF               	movlw	-1
 16941  017654  0060  F073  FFE3   	movff	_width+1,plusw1
 16942  01765A  D016               	goto	l9494
 16943  01765C                     l9492:
 16944  01765C  0EFF               	movlw	255
 16945  01765E  6E3C               	movwf	(btemp+10)^0,c
 16946  017660  0EFF               	movlw	255
 16947  017662  6E3D               	movwf	(btemp+11)^0,c
 16948  017664  0060  F06C  F03A   	movff	_width,btemp+8
 16949  01766A  0060  F070  F03B   	movff	_width+1,btemp+9
 16950  017670  503C               	movf	(btemp+10)^0,w,c
 16951  017672  263A               	addwf	(btemp+8)^0,f,c
 16952  017674  503D               	movf	(btemp+11)^0,w,c
 16953  017676  223B               	addwfc	(btemp+9)^0,f,c
 16954                           
 16955                           ;stkvar	_w @ sp[(-2)+0]
 16956  017678  0EFE               	movlw	-2
 16957  01767A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16958  017680  0EFF               	movlw	-1
 16959  017682  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16960  017688                     l9494:
 16961                           
 16962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 16963                           ;stkvar	_c @ sp[(-2)+-3]
 16964  017688  0EFB               	movlw	-5
 16965  01768A  006F FF8C  F178    	movff	plusw1,_dbuf
 16966                           
 16967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 16968  017690  0101               	movlb	1	; () banked
 16969  017692  6B79               	clrf	(_dbuf+1)& (0+255),b
 16970                           
 16971                           ; BSR set to: 1
 16972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 16973                           ;stkvar	_w @ sp[(-2)+0]
 16974  017694  0EFE               	movlw	-2
 16975  017696  006F FF8F FFE6     	movff	plusw1,postinc1
 16976  01769C  006F FF8F FFE6     	movff	plusw1,postinc1
 16977  0176A2  0E78               	movlw	low _dbuf
 16978  0176A4  6EE6               	movwf	postinc1,c
 16979  0176A6  0E01               	movlw	high _dbuf
 16980  0176A8  6EE6               	movwf	postinc1,c
 16981                           
 16982                           ;stkvar	_fp @ sp[(-6)+-2]
 16983  0176AA  0EF8               	movlw	-8
 16984  0176AC  006F FF8F FFE6     	movff	plusw1,postinc1
 16985  0176B2  006F FF8F FFE6     	movff	plusw1,postinc1
 16986  0176B8  ECAF  F0B4         	call	_pad	;wreg free
 16987                           
 16988                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 16989  0176BC  0EFB               	movlw	251
 16990  0176BE  26E1               	addwf	fsr1l,f,c
 16991  0176C0  0EFF               	movlw	255
 16992  0176C2  22E2               	addwfc	fsr1h,f,c
 16993  0176C4  0012               	return		;funcret
 16994  0176C6                     __end_of_ctoa:
 16995                           	opt callstack 0
 16996                           
 16997 ;; *************** function _pad *****************
 16998 ;; Defined at:
 16999 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17002 ;;		 -> f(6), NULL(0), 
 17003 ;;  buf             2  [STACK] PTR unsigned char 
 17004 ;;		 -> dbuf(80), 
 17005 ;;  p               2  [STACK] int 
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;  w               2  [STACK] int 
 17008 ;;  i               2  [STACK] int 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  2  [STACK] int 
 17011 ;; Registers used:
 17012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/1
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17022 ;;Total ram usage:        0 bytes
 17023 ;; Hardware stack levels used:    1
 17024 ;; Hardware stack levels required when called:   10
 17025 ;; This function calls:
 17026 ;;		_fputc
 17027 ;;		_fputs
 17028 ;;		_strlen
 17029 ;; This function is called by:
 17030 ;;		_ctoa
 17031 ;;		_dtoa
 17032 ;;		_efgtoa
 17033 ;;		_xtoa
 17034 ;; This function uses a reentrant model
 17035 ;;
 17036                           
 17037                           	psect	text63
 17038  01695E                     __ptext63:
 17039                           	opt callstack 0
 17040  01695E                     _pad:
 17041                           	opt callstack 0
 17042                           
 17043                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17044  01695E  52E6               	movf	postinc1,f,c
 17045  016960  52E6               	movf	postinc1,f,c
 17046  016962  52E6               	movf	postinc1,f,c
 17047  016964  52E6               	movf	postinc1,f,c
 17048                           
 17049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17050                           
 17051                           ;incstack = 0
 17052  016966  A01F               	btfss	_flags^0,0,c
 17053  016968  D010               	goto	l9466
 17054                           
 17055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17056                           ;stkvar	_fp @ sp[(-4)+-2]
 17057  01696A  0EFA               	movlw	-6
 17058  01696C  006F FF8F FFE6     	movff	plusw1,postinc1
 17059  016972  006F FF8F FFE6     	movff	plusw1,postinc1
 17060                           
 17061                           ;stkvar	_buf @ sp[(-6)+-4]
 17062  016978  0EF6               	movlw	-10
 17063  01697A  006F FF8F FFE6     	movff	plusw1,postinc1
 17064  016980  006F FF8F FFE6     	movff	plusw1,postinc1
 17065  016986  ECF9  F0B9         	call	_fputs	;wreg free
 17066  01698A                     l9466:
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17069                           ;stkvar	_p @ sp[(-4)+-6]
 17070  01698A  0EF7               	movlw	-9
 17071  01698C  BEE3               	btfsc	plusw1,7,c
 17072  01698E  D011               	goto	l9470
 17073                           
 17074                           ;stkvar	_p @ sp[(-4)+-6]
 17075                           ;stkvar	_w @ sp[(-4)+0]
 17076  016990  0EF6               	movlw	-10
 17077  016992  006F FF8C  F032    	movff	plusw1,btemp
 17078  016998  0EFC               	movlw	-4
 17079  01699A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17080  0169A0  0EF7               	movlw	-9
 17081  0169A2  006F FF8C  F032    	movff	plusw1,btemp
 17082  0169A8  0EFD               	movlw	-3
 17083  0169AA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17084  0169B0  D004               	goto	l1835
 17085  0169B2                     l9470:
 17086                           
 17087                           ;stkvar	_w @ sp[(-4)+0]
 17088  0169B2  0EFC               	movlw	-4
 17089  0169B4  6AE3               	clrf	plusw1,c
 17090  0169B6  0EFD               	movlw	-3
 17091  0169B8  6AE3               	clrf	plusw1,c
 17092  0169BA                     l1835:
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17095                           ;stkvar	_i @ sp[(-4)+2]
 17096  0169BA  0EFE               	movlw	-2
 17097  0169BC  6AE3               	clrf	plusw1,c
 17098  0169BE  0EFF               	movlw	-1
 17099  0169C0  6AE3               	clrf	plusw1,c
 17100                           
 17101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17102  0169C2  D01E               	goto	l9476
 17103  0169C4                     l9472:
 17104                           
 17105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17106                           ;stkvar	_fp @ sp[(-4)+-2]
 17107  0169C4  0EFA               	movlw	-6
 17108  0169C6  006F FF8F FFE6     	movff	plusw1,postinc1
 17109  0169CC  006F FF8F FFE6     	movff	plusw1,postinc1
 17110  0169D2  0E20               	movlw	32
 17111  0169D4  6EE6               	movwf	postinc1,c
 17112  0169D6  0E00               	movlw	0
 17113  0169D8  6EE6               	movwf	postinc1,c
 17114  0169DA  EC91  F0B3         	call	_fputc	;wreg free
 17115                           
 17116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17117                           ;stkvar	_i @ sp[(-4)+2]
 17118  0169DE  0EFE               	movlw	-2
 17119  0169E0  50E3               	movf	plusw1,w,c
 17120  0169E2  0F01               	addlw	1
 17121  0169E4  6E32               	movwf	btemp^0,c
 17122  0169E6  0EFE               	movlw	-2
 17123  0169E8  0060  F0CB  FFE3   	movff	btemp,plusw1
 17124  0169EE  6A32               	clrf	btemp^0,c
 17125  0169F0  0EFF               	movlw	-1
 17126  0169F2  50E3               	movf	plusw1,w,c
 17127  0169F4  2032               	addwfc	btemp^0,w,c
 17128  0169F6  6E32               	movwf	btemp^0,c
 17129  0169F8  0EFF               	movlw	-1
 17130  0169FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17131  016A00                     l9476:
 17132                           
 17133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17134                           ;stkvar	_w @ sp[(-4)+0]
 17135                           ;stkvar	_i @ sp[(-4)+2]
 17136  016A00  50E1               	movf	fsr1l,w,c
 17137  016A02  0FFE               	addlw	-2
 17138  016A04  6ED9               	movwf	fsr2l,c
 17139  016A06  50E2               	movf	fsr1h,w,c
 17140  016A08  6EDA               	movwf	fsr2h,c
 17141  016A0A  0EFF               	movlw	255
 17142  016A0C  22DA               	addwfc	fsr2h,f,c
 17143  016A0E  0EFC               	movlw	-4
 17144  016A10  50E3               	movf	plusw1,w,c
 17145  016A12  5CDE               	subwf	postinc2,w,c
 17146  016A14  50DE               	movf	postinc2,w,c
 17147  016A16  0A80               	xorlw	128
 17148  016A18  6E32               	movwf	btemp^0,c
 17149  016A1A  0EFD               	movlw	-3
 17150  016A1C  50E3               	movf	plusw1,w,c
 17151  016A1E  0A80               	xorlw	128
 17152  016A20  5832               	subwfb	btemp^0,w,c
 17153  016A22  A0D8               	btfss	status,0,c
 17154  016A24  D7CF               	goto	l9472
 17155                           
 17156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17157  016A26  B01F               	btfsc	_flags^0,0,c
 17158  016A28  D010               	goto	l9480
 17159                           
 17160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17161                           ;stkvar	_fp @ sp[(-4)+-2]
 17162  016A2A  0EFA               	movlw	-6
 17163  016A2C  006F FF8F FFE6     	movff	plusw1,postinc1
 17164  016A32  006F FF8F FFE6     	movff	plusw1,postinc1
 17165                           
 17166                           ;stkvar	_buf @ sp[(-6)+-4]
 17167  016A38  0EF6               	movlw	-10
 17168  016A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 17169  016A40  006F FF8F FFE6     	movff	plusw1,postinc1
 17170  016A46  ECF9  F0B9         	call	_fputs	;wreg free
 17171  016A4A                     l9480:
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17174                           ;stkvar	_w @ sp[(-4)+0]
 17175                           ;stkvar	_buf @ sp[(-4)+-4]
 17176  016A4A  0EF8               	movlw	-8
 17177  016A4C  006F FF8F FFE6     	movff	plusw1,postinc1
 17178  016A52  006F FF8F FFE6     	movff	plusw1,postinc1
 17179  016A58  EC5A  F0B9         	call	_strlen	;wreg free
 17180  016A5C  0EFC               	movlw	-4
 17181  016A5E  50E3               	movf	plusw1,w,c
 17182  016A60  2632               	addwf	btemp^0,f,c
 17183  016A62  0EFD               	movlw	-3
 17184  016A64  50E3               	movf	plusw1,w,c
 17185  016A66  2233               	addwfc	(btemp+1)^0,f,c
 17186                           
 17187                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17188  016A68  0EF6               	movlw	246
 17189  016A6A  26E1               	addwf	fsr1l,f,c
 17190  016A6C  0EFF               	movlw	255
 17191  016A6E  22E2               	addwfc	fsr1h,f,c
 17192  016A70  0012               	return		;funcret
 17193  016A72                     __end_of_pad:
 17194                           	opt callstack 0
 17195                           
 17196 ;; *************** function _strlen *****************
 17197 ;; Defined at:
 17198 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  s               2  [STACK] PTR const unsigned char 
 17201 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17202 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 17203 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;  a               2  [STACK] PTR const unsigned char 
 17206 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17207 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 17208 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17209 ;; Return value:  Size  Location     Type
 17210 ;;                  2  [STACK] unsigned int 
 17211 ;; Registers used:
 17212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17213 ;; Tracked objects:
 17214 ;;		On entry : 0/0
 17215 ;;		On exit  : 0/0
 17216 ;;		Unchanged: 0/0
 17217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17222 ;;Total ram usage:        0 bytes
 17223 ;; Hardware stack levels used:    1
 17224 ;; Hardware stack levels required when called:    6
 17225 ;; This function calls:
 17226 ;;		Nothing
 17227 ;; This function is called by:
 17228 ;;		_eaDogM_WriteString
 17229 ;;		_pad
 17230 ;;		_stoa
 17231 ;; This function uses a reentrant model
 17232 ;;
 17233                           
 17234                           	psect	text64
 17235  0172B4                     __ptext64:
 17236                           	opt callstack 0
 17237  0172B4                     _strlen:
 17238                           	opt callstack 0
 17239                           
 17240                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17241  0172B4  52E6               	movf	postinc1,f,c
 17242  0172B6  52E6               	movf	postinc1,f,c
 17243                           
 17244                           ;stkvar	_s @ sp[(-2)+-2]
 17245                           
 17246                           ;incstack = 0
 17247  0172B8  0EFC               	movlw	-4
 17248  0172BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 17249  0172C0  0EFD               	movlw	-3
 17250  0172C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 17251                           
 17252                           ;stkvar	_a @ sp[(-2)+0]
 17253  0172C8  0EFF               	movlw	-1
 17254  0172CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17255  0172D0  0EFE               	movlw	-2
 17256  0172D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17257  0172D8  D011               	goto	l6242
 17258  0172DA                     l6240:
 17259                           
 17260                           ;stkvar	_s @ sp[(-2)+-2]
 17261  0172DA  0EFC               	movlw	-4
 17262  0172DC  50E3               	movf	plusw1,w,c
 17263  0172DE  0F01               	addlw	1
 17264  0172E0  6E32               	movwf	btemp^0,c
 17265  0172E2  0EFC               	movlw	-4
 17266  0172E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17267  0172EA  6A32               	clrf	btemp^0,c
 17268  0172EC  0EFD               	movlw	-3
 17269  0172EE  50E3               	movf	plusw1,w,c
 17270  0172F0  2032               	addwfc	btemp^0,w,c
 17271  0172F2  6E32               	movwf	btemp^0,c
 17272  0172F4  0EFD               	movlw	-3
 17273  0172F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17274  0172FC                     l6242:
 17275                           
 17276                           ;stkvar	_s @ sp[(-2)+-2]
 17277  0172FC  0EFC               	movlw	-4
 17278  0172FE  006F FF8F FFF6     	movff	plusw1,tblptrl
 17279  017304  0EFD               	movlw	-3
 17280  017306  006F FF8F FFF7     	movff	plusw1,tblptrh
 17281  01730C  0E00               	movlw	low (__mediumconst shr (0+16))
 17282  01730E  6EF8               	movwf	tblptru,c
 17283  017310  0E1F               	movlw	(high __ramtop+-1)
 17284  017312  64F7               	cpfsgt	tblptrh,c
 17285  017314  D003               	bra	u4537
 17286  017316  0008               	tblrd		*
 17287  017318  50F5               	movf	tablat,w,c
 17288  01731A  D007               	bra	u4530
 17289  01731C                     u4537:
 17290  01731C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17291  017322  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17292  017328  50EF               	movf	indf0,w,c
 17293  01732A                     u4530:
 17294  01732A  0900               	iorlw	0
 17295  01732C  A4D8               	btfss	status,2,c
 17296  01732E  D7D5               	goto	l6240
 17297                           
 17298                           ;stkvar	_a @ sp[(-2)+0]
 17299                           ;stkvar	_s @ sp[(-2)+-2]
 17300  017330  0EFC               	movlw	-4
 17301  017332  006F FF8C  F032    	movff	plusw1,btemp
 17302  017338  0EFD               	movlw	-3
 17303  01733A  006F FF8C  F033    	movff	plusw1,btemp+1
 17304  017340  0EFE               	movlw	-2
 17305  017342  50E3               	movf	plusw1,w,c
 17306  017344  5E32               	subwf	btemp^0,f,c
 17307  017346  0EFF               	movlw	-1
 17308  017348  50E3               	movf	plusw1,w,c
 17309  01734A  5A33               	subwfb	(btemp+1)^0,f,c
 17310                           
 17311                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17312  01734C  52E5               	movf	postdec1,f,c
 17313  01734E  52E5               	movf	postdec1,f,c
 17314  017350  52E5               	movf	postdec1,f,c
 17315  017352  52E5               	movf	postdec1,f,c
 17316  017354  0012               	return		;funcret
 17317  017356                     __end_of_strlen:
 17318                           	opt callstack 0
 17319                           
 17320 ;; *************** function _fputs *****************
 17321 ;; Defined at:
 17322 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  s               2  [STACK] PTR const unsigned char 
 17325 ;;		 -> dbuf(80), 
 17326 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17327 ;;		 -> f(6), NULL(0), 
 17328 ;; Auto vars:     Size  Location     Type
 17329 ;;  i               2  [STACK] int 
 17330 ;;  c               1  [STACK] unsigned char 
 17331 ;; Return value:  Size  Location     Type
 17332 ;;                  2  [STACK] int 
 17333 ;; Registers used:
 17334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17335 ;; Tracked objects:
 17336 ;;		On entry : 0/1
 17337 ;;		On exit  : 0/0
 17338 ;;		Unchanged: 0/0
 17339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17344 ;;Total ram usage:        0 bytes
 17345 ;; Hardware stack levels used:    1
 17346 ;; Hardware stack levels required when called:    9
 17347 ;; This function calls:
 17348 ;;		_fputc
 17349 ;; This function is called by:
 17350 ;;		_pad
 17351 ;; This function uses a reentrant model
 17352 ;;
 17353                           
 17354                           	psect	text65
 17355  0173F2                     __ptext65:
 17356                           	opt callstack 0
 17357  0173F2                     _fputs:
 17358                           	opt callstack 0
 17359                           
 17360                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17361  0173F2  52E6               	movf	postinc1,f,c
 17362  0173F4  52E6               	movf	postinc1,f,c
 17363  0173F6  52E6               	movf	postinc1,f,c
 17364                           
 17365                           ;stkvar	_i @ sp[(-3)+0]
 17366                           
 17367                           ;incstack = 0
 17368  0173F8  0EFD               	movlw	-3
 17369  0173FA  6AE3               	clrf	plusw1,c
 17370  0173FC  0EFE               	movlw	-2
 17371  0173FE  6AE3               	clrf	plusw1,c
 17372  017400  D01F               	goto	l9460
 17373  017402                     l9456:
 17374                           
 17375                           ;stkvar	_fp @ sp[(-3)+-4]
 17376  017402  0EF9               	movlw	-7
 17377  017404  006F FF8F FFE6     	movff	plusw1,postinc1
 17378  01740A  006F FF8F FFE6     	movff	plusw1,postinc1
 17379                           
 17380                           ;stkvar	_c @ sp[(-5)+2]
 17381  017410  0EFD               	movlw	-3
 17382  017412  50E3               	movf	plusw1,w,c
 17383  017414  6EE6               	movwf	postinc1,c
 17384  017416  0E00               	movlw	0
 17385  017418  6EE6               	movwf	postinc1,c
 17386  01741A  EC91  F0B3         	call	_fputc	;wreg free
 17387                           
 17388                           ;stkvar	_i @ sp[(-3)+0]
 17389  01741E  0EFD               	movlw	-3
 17390  017420  50E3               	movf	plusw1,w,c
 17391  017422  0F01               	addlw	1
 17392  017424  6E32               	movwf	btemp^0,c
 17393  017426  0EFD               	movlw	-3
 17394  017428  0060  F0CB  FFE3   	movff	btemp,plusw1
 17395  01742E  6A32               	clrf	btemp^0,c
 17396  017430  0EFE               	movlw	-2
 17397  017432  50E3               	movf	plusw1,w,c
 17398  017434  2032               	addwfc	btemp^0,w,c
 17399  017436  6E32               	movwf	btemp^0,c
 17400  017438  0EFE               	movlw	-2
 17401  01743A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17402  017440                     l9460:
 17403                           
 17404                           ;stkvar	_i @ sp[(-3)+0]
 17405  017440  0EFD               	movlw	-3
 17406  017442  006F FF8C  F03C    	movff	plusw1,btemp+10
 17407  017448  0EFE               	movlw	-2
 17408  01744A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17409                           
 17410                           ;stkvar	_s @ sp[(-3)+-2]
 17411  017450  0EFB               	movlw	-5
 17412  017452  006F FF8C  F03A    	movff	plusw1,btemp+8
 17413  017458  0EFC               	movlw	-4
 17414  01745A  006F FF8C  F03B    	movff	plusw1,btemp+9
 17415  017460  503C               	movf	(btemp+10)^0,w,c
 17416  017462  243A               	addwf	(btemp+8)^0,w,c
 17417  017464  6ED9               	movwf	fsr2l,c
 17418  017466  503D               	movf	(btemp+11)^0,w,c
 17419  017468  203B               	addwfc	(btemp+9)^0,w,c
 17420  01746A  6EDA               	movwf	fsr2h,c
 17421  01746C  50DF               	movf	indf2,w,c
 17422  01746E  6E3D               	movwf	(btemp+11)^0,c
 17423                           
 17424                           ;stkvar	_c @ sp[(-3)+2]
 17425  017470  0EFF               	movlw	-1
 17426  017472  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17427  017478  0EFF               	movlw	-1
 17428  01747A  50E3               	movf	plusw1,w,c
 17429  01747C  A4D8               	btfss	status,2,c
 17430  01747E  D7C1               	goto	l9456
 17431                           
 17432                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17433  017480  0EF9               	movlw	249
 17434  017482  26E1               	addwf	fsr1l,f,c
 17435  017484  0EFF               	movlw	255
 17436  017486  22E2               	addwfc	fsr1h,f,c
 17437  017488  0012               	return		;funcret
 17438  01748A                     __end_of_fputs:
 17439                           	opt callstack 0
 17440                           
 17441 ;; *************** function _fputc *****************
 17442 ;; Defined at:
 17443 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  c               2  [STACK] int 
 17446 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17447 ;;		 -> f(6), NULL(0), 
 17448 ;; Auto vars:     Size  Location     Type
 17449 ;;		None
 17450 ;; Return value:  Size  Location     Type
 17451 ;;                  2  [STACK] int 
 17452 ;; Registers used:
 17453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17454 ;; Tracked objects:
 17455 ;;		On entry : 0/5
 17456 ;;		On exit  : 0/0
 17457 ;;		Unchanged: 0/0
 17458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17463 ;;Total ram usage:        0 bytes
 17464 ;; Hardware stack levels used:    1
 17465 ;; Hardware stack levels required when called:    8
 17466 ;; This function calls:
 17467 ;;		_putch
 17468 ;; This function is called by:
 17469 ;;		_pad
 17470 ;;		_stoa
 17471 ;;		_vfpfcnvrt
 17472 ;;		_fputs
 17473 ;; This function uses a reentrant model
 17474 ;;
 17475                           
 17476                           	psect	text66
 17477  016722                     __ptext66:
 17478                           	opt callstack 0
 17479  016722                     _fputc:
 17480                           	opt callstack 13
 17481                           
 17482                           ;stkvar	_fp @ sp[(0)+-4]
 17483                           
 17484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17485                           ;incstack = 0
 17486  016722  0EFC               	movlw	-4
 17487  016724  006F FF8C  F032    	movff	plusw1,btemp
 17488  01672A  0EFD               	movlw	-3
 17489  01672C  50E3               	movf	plusw1,w,c
 17490  01672E  1032               	iorwf	btemp^0,w,c
 17491  016730  B4D8               	btfsc	status,2,c
 17492  016732  D009               	goto	u8930
 17493                           
 17494                           ;stkvar	_fp @ sp[(0)+-4]
 17495  016734  0EFC               	movlw	-4
 17496  016736  006F FF8C  F032    	movff	plusw1,btemp
 17497  01673C  0EFD               	movlw	-3
 17498  01673E  50E3               	movf	plusw1,w,c
 17499  016740  1032               	iorwf	btemp^0,w,c
 17500  016742  A4D8               	btfss	status,2,c
 17501  016744  D006               	goto	l9444
 17502  016746                     u8930:
 17503                           
 17504                           ;stkvar	_c @ sp[(0)+-2]
 17505  016746  0EFE               	movlw	-2
 17506  016748  50E3               	movf	plusw1,w,c
 17507  01674A  6EE6               	movwf	postinc1,c
 17508  01674C  EC18  F0C4         	call	_putch	;wreg free
 17509  016750  D075               	goto	l2853
 17510  016752                     l9444:
 17511                           
 17512                           ;stkvar	_fp @ sp[(0)+-4]
 17513  016752  0EFC               	movlw	-4
 17514  016754  006F FF8C  F03C    	movff	plusw1,btemp+10
 17515  01675A  0EFD               	movlw	-3
 17516  01675C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17517  016762  0E04               	movlw	4
 17518  016764  243C               	addwf	(btemp+10)^0,w,c
 17519  016766  6ED9               	movwf	fsr2l,c
 17520  016768  0E00               	movlw	0
 17521  01676A  203D               	addwfc	(btemp+11)^0,w,c
 17522  01676C  6EDA               	movwf	fsr2h,c
 17523  01676E  50DE               	movf	postinc2,w,c
 17524  016770  10DE               	iorwf	postinc2,w,c
 17525  016772  B4D8               	btfsc	status,2,c
 17526  016774  D026               	goto	u8950
 17527                           
 17528                           ;stkvar	_fp @ sp[(0)+-4]
 17529  016776  0EFC               	movlw	-4
 17530  016778  006F FF8C  F03C    	movff	plusw1,btemp+10
 17531  01677E  0EFD               	movlw	-3
 17532  016780  006F FF8C  F03D    	movff	plusw1,btemp+11
 17533  016786  0E04               	movlw	4
 17534  016788  243C               	addwf	(btemp+10)^0,w,c
 17535  01678A  6ED9               	movwf	fsr2l,c
 17536  01678C  0E00               	movlw	0
 17537  01678E  203D               	addwfc	(btemp+11)^0,w,c
 17538  016790  6EDA               	movwf	fsr2h,c
 17539                           
 17540                           ;stkvar	_fp @ sp[(0)+-4]
 17541  016792  0EFC               	movlw	-4
 17542  016794  006F FF8C  F03C    	movff	plusw1,btemp+10
 17543  01679A  0EFD               	movlw	-3
 17544  01679C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17545  0167A2  0E02               	movlw	2
 17546  0167A4  243C               	addwf	(btemp+10)^0,w,c
 17547  0167A6  6EE9               	movwf	fsr0l,c
 17548  0167A8  0E00               	movlw	0
 17549  0167AA  203D               	addwfc	(btemp+11)^0,w,c
 17550  0167AC  6EEA               	movwf	fsr0h,c
 17551  0167AE  50DE               	movf	postinc2,w,c
 17552  0167B0  5CEE               	subwf	postinc0,w,c
 17553  0167B2  50EE               	movf	postinc0,w,c
 17554  0167B4  0A80               	xorlw	128
 17555  0167B6  6E32               	movwf	btemp^0,c
 17556  0167B8  50DE               	movf	postinc2,w,c
 17557  0167BA  0A80               	xorlw	128
 17558  0167BC  5832               	subwfb	btemp^0,w,c
 17559  0167BE  B0D8               	btfsc	status,0,c
 17560  0167C0  D03D               	goto	l2853
 17561  0167C2                     u8950:
 17562                           
 17563                           ;stkvar	_c @ sp[(0)+-2]
 17564                           ;stkvar	_fp @ sp[(0)+-4]
 17565  0167C2  0EFC               	movlw	-4
 17566  0167C4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17567  0167CA  0EFD               	movlw	-3
 17568  0167CC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17569  0167D2  0E02               	movlw	2
 17570  0167D4  243C               	addwf	(btemp+10)^0,w,c
 17571  0167D6  6ED9               	movwf	fsr2l,c
 17572  0167D8  0E00               	movlw	0
 17573  0167DA  203D               	addwfc	(btemp+11)^0,w,c
 17574  0167DC  6EDA               	movwf	fsr2h,c
 17575  0167DE  006F FF78  F03C    	movff	postinc2,btemp+10
 17576  0167E4  006F FF74  F03D    	movff	postdec2,btemp+11
 17577                           
 17578                           ;stkvar	_fp @ sp[(0)+-4]
 17579  0167EA  0EFC               	movlw	-4
 17580  0167EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17581  0167F2  0EFD               	movlw	-3
 17582  0167F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17583  0167FA  006F FF78  F03A    	movff	postinc2,btemp+8
 17584  016800  006F FF74  F03B    	movff	postdec2,btemp+9
 17585  016806  503C               	movf	(btemp+10)^0,w,c
 17586  016808  243A               	addwf	(btemp+8)^0,w,c
 17587  01680A  6ED9               	movwf	fsr2l,c
 17588  01680C  503D               	movf	(btemp+11)^0,w,c
 17589  01680E  203B               	addwfc	(btemp+9)^0,w,c
 17590  016810  6EDA               	movwf	fsr2h,c
 17591  016812  0EFE               	movlw	-2
 17592  016814  006F FF8F FFDF     	movff	plusw1,indf2
 17593                           
 17594                           ;stkvar	_fp @ sp[(0)+-4]
 17595  01681A  0EFC               	movlw	-4
 17596  01681C  006F FF8C  F03C    	movff	plusw1,btemp+10
 17597  016822  0EFD               	movlw	-3
 17598  016824  006F FF8C  F03D    	movff	plusw1,btemp+11
 17599  01682A  0E02               	movlw	2
 17600  01682C  243C               	addwf	(btemp+10)^0,w,c
 17601  01682E  6ED9               	movwf	fsr2l,c
 17602  016830  0E00               	movlw	0
 17603  016832  203D               	addwfc	(btemp+11)^0,w,c
 17604  016834  6EDA               	movwf	fsr2h,c
 17605  016836  2ADE               	incf	postinc2,f,c
 17606  016838  0E00               	movlw	0
 17607  01683A  22DD               	addwfc	postdec2,f,c
 17608  01683C                     l2853:
 17609                           
 17610                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17611  01683C  52E5               	movf	postdec1,f,c
 17612  01683E  52E5               	movf	postdec1,f,c
 17613  016840  52E5               	movf	postdec1,f,c
 17614  016842  52E5               	movf	postdec1,f,c
 17615  016844  0012               	return		;funcret
 17616  016846                     __end_of_fputc:
 17617                           	opt callstack 0
 17618                           
 17619 ;; *************** function _putch *****************
 17620 ;; Defined at:
 17621 ;;		line 155 in file "eadog.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;  c               1  [STACK] unsigned char 
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;		None
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  1  [STACK] void 
 17628 ;; Registers used:
 17629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/5
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17639 ;;Total ram usage:        0 bytes
 17640 ;; Hardware stack levels used:    1
 17641 ;; Hardware stack levels required when called:    7
 17642 ;; This function calls:
 17643 ;;		_ringBufS_put_dma
 17644 ;; This function is called by:
 17645 ;;		_fputc
 17646 ;; This function uses a reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text67
 17650  018830                     __ptext67:
 17651                           	opt callstack 0
 17652  018830                     _putch:
 17653                           	opt callstack 13
 17654                           
 17655                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17656                           ;stkvar	_c @ sp[(0)+-1]
 17657                           
 17658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17659                           ;incstack = 0
 17660  018830  0EFF               	movlw	-1
 17661  018832  50E3               	movf	plusw1,w,c
 17662  018834  6EE6               	movwf	postinc1,c
 17663  018836  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17664  01883C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17665  018842  EC5E  F0B8         	call	_ringBufS_put_dma	;wreg free
 17666                           
 17667                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17668  018846  52E5               	movf	postdec1,f,c
 17669  018848  0012               	return		;funcret
 17670  01884A                     __end_of_putch:
 17671                           	opt callstack 0
 17672                           
 17673 ;; *************** function _ringBufS_put_dma *****************
 17674 ;; Defined at:
 17675 ;;		line 67 in file "ringbufs.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;  _this           2  [STACK] PTR struct ringBufS_t
 17678 ;;		 -> ring_buf1(67), 
 17679 ;;  c               1  [STACK] const unsigned char 
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;		None
 17682 ;; Return value:  Size  Location     Type
 17683 ;;                  1  [STACK] void 
 17684 ;; Registers used:
 17685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17686 ;; Tracked objects:
 17687 ;;		On entry : 0/5
 17688 ;;		On exit  : 0/0
 17689 ;;		Unchanged: 0/0
 17690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17695 ;;Total ram usage:        0 bytes
 17696 ;; Hardware stack levels used:    1
 17697 ;; Hardware stack levels required when called:    6
 17698 ;; This function calls:
 17699 ;;		Nothing
 17700 ;; This function is called by:
 17701 ;;		_putch
 17702 ;; This function uses a reentrant model
 17703 ;;
 17704                           
 17705                           	psect	text68
 17706  0170BC                     __ptext68:
 17707                           	opt callstack 0
 17708  0170BC                     _ringBufS_put_dma:
 17709                           	opt callstack 13
 17710                           
 17711                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 17712                           ;stkvar	__this @ sp[(0)+-2]
 17713                           
 17714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17715                           ;incstack = 0
 17716  0170BC  0EFE               	movlw	-2
 17717  0170BE  006F FF8C  F03C    	movff	plusw1,btemp+10
 17718  0170C4  0EFF               	movlw	-1
 17719  0170C6  006F FF8C  F03D    	movff	plusw1,btemp+11
 17720  0170CC  0E42               	movlw	66
 17721  0170CE  243C               	addwf	(btemp+10)^0,w,c
 17722  0170D0  6ED9               	movwf	fsr2l,c
 17723  0170D2  0E00               	movlw	0
 17724  0170D4  203D               	addwfc	(btemp+11)^0,w,c
 17725  0170D6  6EDA               	movwf	fsr2h,c
 17726  0170D8  0E40               	movlw	64
 17727  0170DA  60DF               	cpfslt	indf2,c
 17728  0170DC  D040               	goto	l1477
 17729                           
 17730                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 17731                           ;stkvar	_c @ sp[(0)+-3]
 17732                           ;stkvar	__this @ sp[(0)+-2]
 17733  0170DE  0EFE               	movlw	-2
 17734  0170E0  006F FF8C  F03C    	movff	plusw1,btemp+10
 17735  0170E6  0EFF               	movlw	-1
 17736  0170E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 17737  0170EE  0E40               	movlw	64
 17738  0170F0  243C               	addwf	(btemp+10)^0,w,c
 17739  0170F2  6ED9               	movwf	fsr2l,c
 17740  0170F4  0E00               	movlw	0
 17741  0170F6  203D               	addwfc	(btemp+11)^0,w,c
 17742  0170F8  6EDA               	movwf	fsr2h,c
 17743  0170FA  50DF               	movf	indf2,w,c
 17744  0170FC  6E3D               	movwf	(btemp+11)^0,c
 17745                           
 17746                           ;stkvar	__this @ sp[(0)+-2]
 17747  0170FE  0EFE               	movlw	-2
 17748  017100  006F FF8C  F03A    	movff	plusw1,btemp+8
 17749  017106  0EFF               	movlw	-1
 17750  017108  006F FF8C  F03B    	movff	plusw1,btemp+9
 17751  01710E  503D               	movf	(btemp+11)^0,w,c
 17752  017110  243A               	addwf	(btemp+8)^0,w,c
 17753  017112  6ED9               	movwf	fsr2l,c
 17754  017114  0E00               	movlw	0
 17755  017116  203B               	addwfc	(btemp+9)^0,w,c
 17756  017118  6EDA               	movwf	fsr2h,c
 17757  01711A  0EFD               	movlw	-3
 17758  01711C  006F FF8F FFDF     	movff	plusw1,indf2
 17759                           
 17760                           ;ringbufs.c: 71:   ++_this->head;
 17761                           ;stkvar	__this @ sp[(0)+-2]
 17762  017122  0EFE               	movlw	-2
 17763  017124  006F FF8C  F03C    	movff	plusw1,btemp+10
 17764  01712A  0EFF               	movlw	-1
 17765  01712C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17766  017132  0E40               	movlw	64
 17767  017134  243C               	addwf	(btemp+10)^0,w,c
 17768  017136  6ED9               	movwf	fsr2l,c
 17769  017138  0E00               	movlw	0
 17770  01713A  203D               	addwfc	(btemp+11)^0,w,c
 17771  01713C  6EDA               	movwf	fsr2h,c
 17772  01713E  2ADF               	incf	indf2,f,c
 17773                           
 17774                           ;ringbufs.c: 72:   ++_this->count;
 17775                           ;stkvar	__this @ sp[(0)+-2]
 17776  017140  0EFE               	movlw	-2
 17777  017142  006F FF8C  F03C    	movff	plusw1,btemp+10
 17778  017148  0EFF               	movlw	-1
 17779  01714A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17780  017150  0E42               	movlw	66
 17781  017152  243C               	addwf	(btemp+10)^0,w,c
 17782  017154  6ED9               	movwf	fsr2l,c
 17783  017156  0E00               	movlw	0
 17784  017158  203D               	addwfc	(btemp+11)^0,w,c
 17785  01715A  6EDA               	movwf	fsr2h,c
 17786  01715C  2ADF               	incf	indf2,f,c
 17787  01715E                     l1477:
 17788                           
 17789                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 17790  01715E  52E5               	movf	postdec1,f,c
 17791  017160  52E5               	movf	postdec1,f,c
 17792  017162  52E5               	movf	postdec1,f,c
 17793  017164  0012               	return		;funcret
 17794  017166                     __end_of_ringBufS_put_dma:
 17795                           	opt callstack 0
 17796                           
 17797 ;; *************** function _atoi *****************
 17798 ;; Defined at:
 17799 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  s               2  [STACK] PTR const unsigned char 
 17802 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
 17803 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 17804 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
 17805 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
 17806 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
 17807 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
 17808 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
 17809 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;  n               2  [STACK] int 
 17812 ;;  neg             2  [STACK] int 
 17813 ;; Return value:  Size  Location     Type
 17814 ;;                  2  [STACK] int 
 17815 ;; Registers used:
 17816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 17817 ;; Tracked objects:
 17818 ;;		On entry : 0/5
 17819 ;;		On exit  : 0/0
 17820 ;;		Unchanged: 0/0
 17821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17826 ;;Total ram usage:        0 bytes
 17827 ;; Hardware stack levels used:    1
 17828 ;; Hardware stack levels required when called:    7
 17829 ;; This function calls:
 17830 ;;		_isdigit
 17831 ;;		_isspace
 17832 ;; This function is called by:
 17833 ;;		_vfpfcnvrt
 17834 ;; This function uses a reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text69
 17838  015038                     __ptext69:
 17839                           	opt callstack 0
 17840  015038                     _atoi:
 17841                           	opt callstack 0
 17842                           
 17843                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17844  015038  0E09               	movlw	9
 17845  01503A  26E1               	addwf	fsr1l,f,c
 17846  01503C  0E00               	movlw	0
 17847  01503E  22E2               	addwfc	fsr1h,f,c
 17848                           
 17849                           ;stkvar	_n @ sp[(-9)+5]
 17850                           
 17851                           ;incstack = 0
 17852  015040  0EFC               	movlw	-4
 17853  015042  6AE3               	clrf	plusw1,c
 17854  015044  0EFD               	movlw	-3
 17855  015046  6AE3               	clrf	plusw1,c
 17856                           
 17857                           ;stkvar	_neg @ sp[(-9)+7]
 17858  015048  0EFE               	movlw	-2
 17859  01504A  6AE3               	clrf	plusw1,c
 17860  01504C  0EFF               	movlw	-1
 17861  01504E  6AE3               	clrf	plusw1,c
 17862  015050  D011               	goto	l7714
 17863  015052                     l7712:
 17864                           
 17865                           ;stkvar	_s @ sp[(-9)+-2]
 17866  015052  0EF5               	movlw	-11
 17867  015054  50E3               	movf	plusw1,w,c
 17868  015056  0F01               	addlw	1
 17869  015058  6E32               	movwf	btemp^0,c
 17870  01505A  0EF5               	movlw	-11
 17871  01505C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17872  015062  6A32               	clrf	btemp^0,c
 17873  015064  0EF6               	movlw	-10
 17874  015066  50E3               	movf	plusw1,w,c
 17875  015068  2032               	addwfc	btemp^0,w,c
 17876  01506A  6E32               	movwf	btemp^0,c
 17877  01506C  0EF6               	movlw	-10
 17878  01506E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17879  015074                     l7714:
 17880                           
 17881                           ;stkvar	_atoi$4997 @ sp[(-9)+4]
 17882  015074  0EFB               	movlw	-5
 17883  015076  6AE3               	clrf	plusw1,c
 17884  015078  2AE3               	incf	plusw1,f,c
 17885                           
 17886                           ;stkvar	_s @ sp[(-9)+-2]
 17887  01507A  50E1               	movf	fsr1l,w,c
 17888  01507C  0FF5               	addlw	-11
 17889  01507E  6ED9               	movwf	fsr2l,c
 17890  015080  50E2               	movf	fsr1h,w,c
 17891  015082  6EDA               	movwf	fsr2h,c
 17892  015084  0EFF               	movlw	255
 17893  015086  22DA               	addwfc	fsr2h,f,c
 17894  015088  006F FF7B FFF6     	movff	postinc2,tblptrl
 17895  01508E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17896  015094                     	if	0	;tblptru may be non-zero
 17897  015094                     	endif
 17898  015094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17899  015094  0E00               	movlw	low (__mediumconst shr (0+16))
 17900  015096  6EF8               	movwf	tblptru,c
 17901  015098                     	endif
 17902  015098  0008               	tblrd		*
 17903  01509A  50F5               	movf	tablat,w,c
 17904  01509C  0A20               	xorlw	32
 17905  01509E  B4D8               	btfsc	status,2,c
 17906  0150A0  D023               	goto	l7722
 17907  0150A2  0EF7               	movlw	247
 17908  0150A4  6E3C               	movwf	(btemp+10)^0,c
 17909  0150A6  0EFF               	movlw	255
 17910  0150A8  6E3D               	movwf	(btemp+11)^0,c
 17911                           
 17912                           ;stkvar	_s @ sp[(-9)+-2]
 17913  0150AA  50E1               	movf	fsr1l,w,c
 17914  0150AC  0FF5               	addlw	-11
 17915  0150AE  6ED9               	movwf	fsr2l,c
 17916  0150B0  50E2               	movf	fsr1h,w,c
 17917  0150B2  6EDA               	movwf	fsr2h,c
 17918  0150B4  0EFF               	movlw	255
 17919  0150B6  22DA               	addwfc	fsr2h,f,c
 17920  0150B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 17921  0150BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 17922  0150C4                     	if	0	;tblptru may be non-zero
 17923  0150C4                     	endif
 17924  0150C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17925  0150C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17926  0150C6  6EF8               	movwf	tblptru,c
 17927  0150C8                     	endif
 17928  0150C8  0008               	tblrd		*
 17929  0150CA  50F5               	movf	tablat,w,c
 17930  0150CC  6E3A               	movwf	(btemp+8)^0,c
 17931  0150CE  6A3B               	clrf	(btemp+9)^0,c
 17932  0150D0  503C               	movf	(btemp+10)^0,w,c
 17933  0150D2  263A               	addwf	(btemp+8)^0,f,c
 17934  0150D4  503D               	movf	(btemp+11)^0,w,c
 17935  0150D6  223B               	addwfc	(btemp+9)^0,f,c
 17936  0150D8  503B               	movf	(btemp+9)^0,w,c
 17937  0150DA  E104               	bnz	u7390
 17938  0150DC  0E05               	movlw	5
 17939  0150DE  5C3A               	subwf	(btemp+8)^0,w,c
 17940  0150E0  A0D8               	btfss	status,0,c
 17941  0150E2  D002               	goto	l7722
 17942  0150E4                     u7390:
 17943                           
 17944                           ;stkvar	_atoi$4997 @ sp[(-9)+4]
 17945  0150E4  0EFB               	movlw	-5
 17946  0150E6  6AE3               	clrf	plusw1,c
 17947  0150E8                     l7722:
 17948                           
 17949                           ;stkvar	_atoi$4997 @ sp[(-9)+4]
 17950  0150E8  0EFB               	movlw	-5
 17951  0150EA  50E3               	movf	plusw1,w,c
 17952  0150EC  6E3C               	movwf	(btemp+10)^0,c
 17953  0150EE  6A3D               	clrf	(btemp+11)^0,c
 17954                           
 17955                           ;stkvar	_atoi$4996 @ sp[(-9)+2]
 17956  0150F0  0EF9               	movlw	-7
 17957  0150F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17958  0150F8  0EFA               	movlw	-6
 17959  0150FA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17960                           
 17961                           ;stkvar	_atoi$4996 @ sp[(-9)+2]
 17962  015100  0EF9               	movlw	-7
 17963  015102  006F FF8C  F032    	movff	plusw1,btemp
 17964  015108  0EFA               	movlw	-6
 17965  01510A  50E3               	movf	plusw1,w,c
 17966  01510C  1032               	iorwf	btemp^0,w,c
 17967  01510E  B4D8               	btfsc	status,2,c
 17968  015110  D01F               	goto	l7732
 17969  015112  D79F               	goto	l7712
 17970  015114                     l7728:
 17971  015114  0E01               	movlw	1
 17972  015116  6E3C               	movwf	(btemp+10)^0,c
 17973  015118  0E00               	movlw	0
 17974  01511A  6E3D               	movwf	(btemp+11)^0,c
 17975                           
 17976                           ;stkvar	_neg @ sp[(-9)+7]
 17977  01511C  0EFE               	movlw	-2
 17978  01511E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17979  015124  0EFF               	movlw	-1
 17980  015126  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17981  01512C                     l7730:
 17982                           
 17983                           ;stkvar	_s @ sp[(-9)+-2]
 17984  01512C  0EF5               	movlw	-11
 17985  01512E  50E3               	movf	plusw1,w,c
 17986  015130  0F01               	addlw	1
 17987  015132  6E32               	movwf	btemp^0,c
 17988  015134  0EF5               	movlw	-11
 17989  015136  0060  F0CB  FFE3   	movff	btemp,plusw1
 17990  01513C  6A32               	clrf	btemp^0,c
 17991  01513E  0EF6               	movlw	-10
 17992  015140  50E3               	movf	plusw1,w,c
 17993  015142  2032               	addwfc	btemp^0,w,c
 17994  015144  6E32               	movwf	btemp^0,c
 17995  015146  0EF6               	movlw	-10
 17996  015148  0060  F0CB  FFE3   	movff	btemp,plusw1
 17997  01514E  D053               	goto	l7738
 17998  015150                     l7732:
 17999                           
 18000                           ;stkvar	_s @ sp[(-9)+-2]
 18001  015150  50E1               	movf	fsr1l,w,c
 18002  015152  0FF5               	addlw	-11
 18003  015154  6ED9               	movwf	fsr2l,c
 18004  015156  50E2               	movf	fsr1h,w,c
 18005  015158  6EDA               	movwf	fsr2h,c
 18006  01515A  0EFF               	movlw	255
 18007  01515C  22DA               	addwfc	fsr2h,f,c
 18008  01515E  006F FF7B FFF6     	movff	postinc2,tblptrl
 18009  015164  006F FF77 FFF7     	movff	postdec2,tblptrh
 18010  01516A                     	if	0	;tblptru may be non-zero
 18011  01516A                     	endif
 18012  01516A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18013  01516A  0E00               	movlw	low (__mediumconst shr (0+16))
 18014  01516C  6EF8               	movwf	tblptru,c
 18015  01516E                     	endif
 18016  01516E  0008               	tblrd		*
 18017  015170  50F5               	movf	tablat,w,c
 18018  015172  6E3C               	movwf	(btemp+10)^0,c
 18019  015174  6A3D               	clrf	(btemp+11)^0,c
 18020                           
 18021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18022                           ; Switch size 1, requested type "simple"
 18023                           ; Number of cases is 1, Range of values is 0 to 0
 18024                           ; switch strategies available:
 18025                           ; Name         Instructions Cycles
 18026                           ; simple_byte            4     3 (average)
 18027                           ;	Chosen strategy is simple_byte
 18028  015176  503D               	movf	(btemp+11)^0,w,c
 18029  015178  0A00               	xorlw	0	; case 0
 18030  01517A  A4D8               	btfss	status,2,c
 18031  01517C  D03C               	goto	l7738
 18032                           
 18033                           ; Switch size 1, requested type "simple"
 18034                           ; Number of cases is 2, Range of values is 43 to 45
 18035                           ; switch strategies available:
 18036                           ; Name         Instructions Cycles
 18037                           ; simple_byte            7     4 (average)
 18038                           ;	Chosen strategy is simple_byte
 18039  01517E  503C               	movf	(btemp+10)^0,w,c
 18040  015180  0A2B               	xorlw	43	; case 43
 18041  015182  B4D8               	btfsc	status,2,c
 18042  015184  D7D3               	goto	l7730
 18043  015186  0A06               	xorlw	6	; case 45
 18044  015188  B4D8               	btfsc	status,2,c
 18045  01518A  D7C4               	goto	l7728
 18046  01518C  D034               	goto	l7738
 18047  01518E                     l7734:
 18048                           
 18049                           ;stkvar	_n @ sp[(-9)+5]
 18050  01518E  0EFC               	movlw	-4
 18051  015190  006F FF8C  F03C    	movff	plusw1,btemp+10
 18052  015196  0EFD               	movlw	-3
 18053  015198  006F FF8C  F03D    	movff	plusw1,btemp+11
 18054  01519E  0E0A               	movlw	10
 18055  0151A0  023C               	mulwf	(btemp+10)^0,c
 18056  0151A2  006F FFCC  F03A    	movff	prodl,btemp+8
 18057  0151A8  006F FFD0  F03B    	movff	prodh,btemp+9
 18058  0151AE  023D               	mulwf	(btemp+11)^0,c
 18059  0151B0  50F3               	movf	prodl,w,c
 18060  0151B2  263B               	addwf	(btemp+9)^0,f,c
 18061                           
 18062                           ;stkvar	_s @ sp[(-9)+-2]
 18063  0151B4  50E1               	movf	fsr1l,w,c
 18064  0151B6  0FF5               	addlw	-11
 18065  0151B8  6ED9               	movwf	fsr2l,c
 18066  0151BA  50E2               	movf	fsr1h,w,c
 18067  0151BC  6EDA               	movwf	fsr2h,c
 18068  0151BE  0EFF               	movlw	255
 18069  0151C0  22DA               	addwfc	fsr2h,f,c
 18070  0151C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 18071  0151C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 18072  0151CE                     	if	0	;tblptru may be non-zero
 18073  0151CE                     	endif
 18074  0151CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18075  0151CE  0E00               	movlw	low (__mediumconst shr (0+16))
 18076  0151D0  6EF8               	movwf	tblptru,c
 18077  0151D2                     	endif
 18078  0151D2  0008               	tblrd		*
 18079  0151D4  50F5               	movf	tablat,w,c
 18080  0151D6  5E3A               	subwf	(btemp+8)^0,f,c
 18081  0151D8  0E00               	movlw	0
 18082  0151DA  5A3B               	subwfb	(btemp+9)^0,f,c
 18083  0151DC  0E30               	movlw	48
 18084  0151DE  263A               	addwf	(btemp+8)^0,f,c
 18085  0151E0  0E00               	movlw	0
 18086  0151E2  223B               	addwfc	(btemp+9)^0,f,c
 18087                           
 18088                           ;stkvar	_n @ sp[(-9)+5]
 18089  0151E4  0EFC               	movlw	-4
 18090  0151E6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18091  0151EC  0EFD               	movlw	-3
 18092  0151EE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18093  0151F4  D79B               	goto	l7730
 18094  0151F6                     l7738:
 18095  0151F6  0ED0               	movlw	208
 18096  0151F8  6E3C               	movwf	(btemp+10)^0,c
 18097  0151FA  0EFF               	movlw	255
 18098  0151FC  6E3D               	movwf	(btemp+11)^0,c
 18099                           
 18100                           ;stkvar	_s @ sp[(-9)+-2]
 18101  0151FE  50E1               	movf	fsr1l,w,c
 18102  015200  0FF5               	addlw	-11
 18103  015202  6ED9               	movwf	fsr2l,c
 18104  015204  50E2               	movf	fsr1h,w,c
 18105  015206  6EDA               	movwf	fsr2h,c
 18106  015208  0EFF               	movlw	255
 18107  01520A  22DA               	addwfc	fsr2h,f,c
 18108  01520C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18109  015212  006F FF77 FFF7     	movff	postdec2,tblptrh
 18110  015218                     	if	0	;tblptru may be non-zero
 18111  015218                     	endif
 18112  015218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18113  015218  0E00               	movlw	low (__mediumconst shr (0+16))
 18114  01521A  6EF8               	movwf	tblptru,c
 18115  01521C                     	endif
 18116  01521C  0008               	tblrd		*
 18117  01521E  50F5               	movf	tablat,w,c
 18118  015220  6E3A               	movwf	(btemp+8)^0,c
 18119  015222  6A3B               	clrf	(btemp+9)^0,c
 18120  015224  503C               	movf	(btemp+10)^0,w,c
 18121  015226  263A               	addwf	(btemp+8)^0,f,c
 18122  015228  503D               	movf	(btemp+11)^0,w,c
 18123  01522A  223B               	addwfc	(btemp+9)^0,f,c
 18124  01522C  503B               	movf	(btemp+9)^0,w,c
 18125  01522E  E106               	bnz	u7410
 18126  015230  0E0A               	movlw	10
 18127  015232  5C3A               	subwf	(btemp+8)^0,w,c
 18128  015234  B0D8               	btfsc	status,0,c
 18129  015236  D002               	goto	u7410
 18130  015238  0E01               	movlw	1
 18131  01523A  D001               	goto	u7420
 18132  01523C                     u7410:
 18133  01523C  0E00               	movlw	0
 18134  01523E                     u7420:
 18135  01523E  6E3C               	movwf	(btemp+10)^0,c
 18136  015240  6A3D               	clrf	(btemp+11)^0,c
 18137                           
 18138                           ;stkvar	_atoi$4998 @ sp[(-9)+0]
 18139  015242  0EF7               	movlw	-9
 18140  015244  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18141  01524A  0EF8               	movlw	-8
 18142  01524C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18143                           
 18144                           ;stkvar	_atoi$4998 @ sp[(-9)+0]
 18145  015252  0EF7               	movlw	-9
 18146  015254  006F FF8C  F032    	movff	plusw1,btemp
 18147  01525A  0EF8               	movlw	-8
 18148  01525C  50E3               	movf	plusw1,w,c
 18149  01525E  1032               	iorwf	btemp^0,w,c
 18150  015260  A4D8               	btfss	status,2,c
 18151  015262  D795               	goto	l7734
 18152                           
 18153                           ;stkvar	_neg @ sp[(-9)+7]
 18154  015264  0EFE               	movlw	-2
 18155  015266  006F FF8C  F032    	movff	plusw1,btemp
 18156  01526C  0EFF               	movlw	-1
 18157  01526E  50E3               	movf	plusw1,w,c
 18158  015270  1032               	iorwf	btemp^0,w,c
 18159  015272  A4D8               	btfss	status,2,c
 18160  015274  D00E               	goto	l7748
 18161                           
 18162                           ;stkvar	_n @ sp[(-9)+5]
 18163  015276  0EFC               	movlw	-4
 18164  015278  006F FF8C  F032    	movff	plusw1,btemp
 18165  01527E  1E32               	comf	btemp^0,f,c
 18166  015280  0EFD               	movlw	-3
 18167  015282  006F FF8C  F033    	movff	plusw1,btemp+1
 18168  015288  1E33               	comf	(btemp+1)^0,f,c
 18169  01528A  2A32               	incf	btemp^0,f,c
 18170  01528C  B4D8               	btfsc	status,2,c
 18171  01528E  2A33               	incf	(btemp+1)^0,f,c
 18172  015290  D008               	goto	l2789
 18173  015292                     l7748:
 18174                           
 18175                           ;stkvar	_n @ sp[(-9)+5]
 18176  015292  0EFC               	movlw	-4
 18177  015294  006F FF8C  F032    	movff	plusw1,btemp
 18178  01529A  0EFD               	movlw	-3
 18179  01529C  006F FF8C  F033    	movff	plusw1,btemp+1
 18180  0152A2                     l2789:
 18181                           
 18182                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18183  0152A2  0EF5               	movlw	245
 18184  0152A4  26E1               	addwf	fsr1l,f,c
 18185  0152A6  0EFF               	movlw	255
 18186  0152A8  22E2               	addwfc	fsr1h,f,c
 18187  0152AA  0012               	return		;funcret
 18188  0152AC                     __end_of_atoi:
 18189                           	opt callstack 0
 18190                           
 18191 ;; *************** function _isspace *****************
 18192 ;; Defined at:
 18193 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18194 ;; Parameters:    Size  Location     Type
 18195 ;;  c               2  [STACK] int 
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;		None
 18198 ;; Return value:  Size  Location     Type
 18199 ;;                  2  [STACK] int 
 18200 ;; Registers used:
 18201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18202 ;; Tracked objects:
 18203 ;;		On entry : 0/0
 18204 ;;		On exit  : 0/0
 18205 ;;		Unchanged: 0/0
 18206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18211 ;;Total ram usage:        0 bytes
 18212 ;; Hardware stack levels used:    1
 18213 ;; Hardware stack levels required when called:    6
 18214 ;; This function calls:
 18215 ;;		Nothing
 18216 ;; This function is called by:
 18217 ;;		_atoi
 18218 ;; This function uses a reentrant model
 18219 ;;
 18220                           
 18221                           	psect	text70
 18222  017DB6                     __ptext70:
 18223                           	opt callstack 0
 18224  017DB6                     _isspace:
 18225                           	opt callstack 0
 18226                           
 18227                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18228  017DB6  52E6               	movf	postinc1,f,c
 18229                           
 18230                           ;stkvar	_isspace$5036 @ sp[(-1)+0]
 18231                           
 18232                           ;incstack = 0
 18233  017DB8  0EFF               	movlw	-1
 18234  017DBA  6AE3               	clrf	plusw1,c
 18235  017DBC  2AE3               	incf	plusw1,f,c
 18236                           
 18237                           ;stkvar	_c @ sp[(-1)+-2]
 18238  017DBE  0EFD               	movlw	-3
 18239  017DC0  006F FF8C  F032    	movff	plusw1,btemp
 18240  017DC6  0E20               	movlw	32
 18241  017DC8  1832               	xorwf	btemp^0,w,c
 18242  017DCA  E104               	bnz	u6380
 18243  017DCC  0EFE               	movlw	-2
 18244  017DCE  50E3               	movf	plusw1,w,c
 18245  017DD0  B4D8               	btfsc	status,2,c
 18246  017DD2  D012               	goto	l7198
 18247  017DD4                     u6380:
 18248                           
 18249                           ;stkvar	_c @ sp[(-1)+-2]
 18250  017DD4  0EFD               	movlw	-3
 18251  017DD6  50E3               	movf	plusw1,w,c
 18252  017DD8  0FF7               	addlw	247
 18253  017DDA  6E3C               	movwf	(btemp+10)^0,c
 18254  017DDC  0EFE               	movlw	-2
 18255  017DDE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18256  017DE4  0EFF               	movlw	255
 18257  017DE6  223D               	addwfc	(btemp+11)^0,f,c
 18258  017DE8  503D               	movf	(btemp+11)^0,w,c
 18259  017DEA  E104               	bnz	u6390
 18260  017DEC  0E05               	movlw	5
 18261  017DEE  5C3C               	subwf	(btemp+10)^0,w,c
 18262  017DF0  A0D8               	btfss	status,0,c
 18263  017DF2  D002               	goto	l7198
 18264  017DF4                     u6390:
 18265                           
 18266                           ;stkvar	_isspace$5036 @ sp[(-1)+0]
 18267  017DF4  0EFF               	movlw	-1
 18268  017DF6  6AE3               	clrf	plusw1,c
 18269  017DF8                     l7198:
 18270                           
 18271                           ;stkvar	_isspace$5036 @ sp[(-1)+0]
 18272  017DF8  0EFF               	movlw	-1
 18273  017DFA  50E3               	movf	plusw1,w,c
 18274  017DFC  6E32               	movwf	btemp^0,c
 18275  017DFE  6A33               	clrf	(btemp+1)^0,c
 18276                           
 18277                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18278  017E00  52E5               	movf	postdec1,f,c
 18279  017E02  52E5               	movf	postdec1,f,c
 18280  017E04  52E5               	movf	postdec1,f,c
 18281  017E06  0012               	return		;funcret
 18282  017E08                     __end_of_isspace:
 18283                           	opt callstack 0
 18284                           
 18285 ;; *************** function _isdigit *****************
 18286 ;; Defined at:
 18287 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;  c               2  [STACK] int 
 18290 ;; Auto vars:     Size  Location     Type
 18291 ;;		None
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  2  [STACK] int 
 18294 ;; Registers used:
 18295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18296 ;; Tracked objects:
 18297 ;;		On entry : 0/0
 18298 ;;		On exit  : 0/0
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18305 ;;Total ram usage:        0 bytes
 18306 ;; Hardware stack levels used:    1
 18307 ;; Hardware stack levels required when called:    6
 18308 ;; This function calls:
 18309 ;;		Nothing
 18310 ;; This function is called by:
 18311 ;;		_vfpfcnvrt
 18312 ;;		_atoi
 18313 ;; This function uses a reentrant model
 18314 ;;
 18315                           
 18316                           	psect	text71
 18317  018290                     __ptext71:
 18318                           	opt callstack 0
 18319  018290                     _isdigit:
 18320                           	opt callstack 18
 18321                           
 18322                           ;stkvar	_c @ sp[(0)+-2]
 18323                           
 18324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18325                           ;incstack = 0
 18326  018290  0EFE               	movlw	-2
 18327  018292  50E3               	movf	plusw1,w,c
 18328  018294  0FD0               	addlw	208
 18329  018296  6E3C               	movwf	(btemp+10)^0,c
 18330  018298  0EFF               	movlw	-1
 18331  01829A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18332  0182A0  0EFF               	movlw	255
 18333  0182A2  223D               	addwfc	(btemp+11)^0,f,c
 18334  0182A4  503D               	movf	(btemp+11)^0,w,c
 18335  0182A6  E106               	bnz	u5340
 18336  0182A8  0E0A               	movlw	10
 18337  0182AA  5C3C               	subwf	(btemp+10)^0,w,c
 18338  0182AC  B0D8               	btfsc	status,0,c
 18339  0182AE  D002               	goto	u5340
 18340  0182B0  0E01               	movlw	1
 18341  0182B2  D001               	goto	u5350
 18342  0182B4                     u5340:
 18343  0182B4  0E00               	movlw	0
 18344  0182B6                     u5350:
 18345  0182B6  6E32               	movwf	btemp^0,c
 18346  0182B8  6A33               	clrf	(btemp+1)^0,c
 18347                           
 18348                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18349  0182BA  52E5               	movf	postdec1,f,c
 18350  0182BC  52E5               	movf	postdec1,f,c
 18351  0182BE  0012               	return		;funcret
 18352  0182C0                     __end_of_isdigit:
 18353                           	opt callstack 0
 18354                           
 18355 ;; *************** function _set_vterm *****************
 18356 ;; Defined at:
 18357 ;;		line 107 in file "mconfig.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  vterm           1  [STACK] const unsigned char 
 18360 ;; Auto vars:     Size  Location     Type
 18361 ;;		None
 18362 ;; Return value:  Size  Location     Type
 18363 ;;                  1  [STACK] unsigned char 
 18364 ;; Registers used:
 18365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18366 ;; Tracked objects:
 18367 ;;		On entry : 0/1
 18368 ;;		On exit  : 3F/5
 18369 ;;		Unchanged: 0/0
 18370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18375 ;;Total ram usage:        0 bytes
 18376 ;; Hardware stack levels used:    1
 18377 ;; Hardware stack levels required when called:    6
 18378 ;; This function calls:
 18379 ;;		Nothing
 18380 ;; This function is called by:
 18381 ;;		_main
 18382 ;;		_check_help
 18383 ;; This function uses a reentrant model
 18384 ;;
 18385                           
 18386                           	psect	text72
 18387  018814                     __ptext72:
 18388                           	opt callstack 0
 18389  018814                     _set_vterm:
 18390                           	opt callstack 24
 18391                           
 18392                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18393                           ;stkvar	_vterm @ sp[(0)+-1]
 18394                           
 18395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18396                           ;incstack = 0
 18397  018814  0EFF               	movlw	-1
 18398  018816  006F FF8C  F03D    	movff	plusw1,btemp+11
 18399  01881C  0E03               	movlw	3
 18400  01881E  163D               	andwf	(btemp+11)^0,f,c
 18401  018820  0105               	movlb	5	; () banked
 18402  018822  51D8               	movf	(_D+216)& (0+255),w,b
 18403  018824  183D               	xorwf	(btemp+11)^0,w,c
 18404  018826  0BFE               	andlw	-2
 18405  018828  183D               	xorwf	(btemp+11)^0,w,c
 18406  01882A  6FD8               	movwf	(_D+216)& (0+255),b
 18407                           
 18408                           ; BSR set to: 5
 18409                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18410  01882C  52E5               	movf	postdec1,f,c
 18411  01882E  0012               	return		;funcret
 18412  018830                     __end_of_set_vterm:
 18413                           	opt callstack 0
 18414                           
 18415 ;; *************** function _set_temp_display_help *****************
 18416 ;; Defined at:
 18417 ;;		line 211 in file "mconfig.c"
 18418 ;; Parameters:    Size  Location     Type
 18419 ;;  new_response    1  [STACK] const enum E16501
 18420 ;; Auto vars:     Size  Location     Type
 18421 ;;		None
 18422 ;; Return value:  Size  Location     Type
 18423 ;;                  1  [STACK] enum E16501
 18424 ;; Registers used:
 18425 ;;		wreg, fsr1l, fsr1h
 18426 ;; Tracked objects:
 18427 ;;		On entry : 0/5
 18428 ;;		On exit  : 3F/2
 18429 ;;		Unchanged: 0/0
 18430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18435 ;;Total ram usage:        0 bytes
 18436 ;; Hardware stack levels used:    1
 18437 ;; Hardware stack levels required when called:    6
 18438 ;; This function calls:
 18439 ;;		Nothing
 18440 ;; This function is called by:
 18441 ;;		_check_help
 18442 ;; This function uses a reentrant model
 18443 ;;
 18444                           
 18445                           	psect	text73
 18446  01890E                     __ptext73:
 18447                           	opt callstack 0
 18448  01890E                     _set_temp_display_help:
 18449                           	opt callstack 23
 18450                           
 18451                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18452                           
 18453                           ; BSR set to: 5
 18454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18455                           ;incstack = 0
 18456  01890E  0102               	movlb	2	; () banked
 18457  018910  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18458                           
 18459                           ; BSR set to: 2
 18460                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18461                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18462  018912  0EFF               	movlw	-1
 18463  018914  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18464                           
 18465                           ; BSR set to: 2
 18466                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18467  01891A  52E5               	movf	postdec1,f,c
 18468  01891C  0012               	return		;funcret
 18469  01891E                     __end_of_set_temp_display_help:
 18470                           	opt callstack 0
 18471                           
 18472 ;; *************** function _set_display_info *****************
 18473 ;; Defined at:
 18474 ;;		line 200 in file "mconfig.c"
 18475 ;; Parameters:    Size  Location     Type
 18476 ;;  new_response    1  [STACK] const enum E16501
 18477 ;; Auto vars:     Size  Location     Type
 18478 ;;		None
 18479 ;; Return value:  Size  Location     Type
 18480 ;;                  1  [STACK] enum E16986
 18481 ;; Registers used:
 18482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18483 ;; Tracked objects:
 18484 ;;		On entry : 0/39
 18485 ;;		On exit  : 0/0
 18486 ;;		Unchanged: 0/0
 18487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18492 ;;Total ram usage:        0 bytes
 18493 ;; Hardware stack levels used:    1
 18494 ;; Hardware stack levels required when called:    7
 18495 ;; This function calls:
 18496 ;;		_TimerDone
 18497 ;; This function is called by:
 18498 ;;		_main
 18499 ;;		_check_help
 18500 ;; This function uses a reentrant model
 18501 ;;
 18502                           
 18503                           	psect	text74
 18504  01879E                     __ptext74:
 18505                           	opt callstack 0
 18506  01879E                     _set_display_info:
 18507                           	opt callstack 23
 18508                           
 18509                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18510                           
 18511                           ; BSR set to: 2
 18512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18513                           ;incstack = 0
 18514  01879E  0E07               	movlw	7
 18515  0187A0  6EE6               	movwf	postinc1,c
 18516  0187A2  EC49  F0C3         	call	_TimerDone	;wreg free
 18517  0187A6  5032               	movf	btemp^0,w,c
 18518  0187A8  B4D8               	btfsc	status,2,c
 18519  0187AA  D006               	goto	l1614
 18520                           
 18521                           ;mconfig.c: 205:   old_info = V.response.info;
 18522  0187AC  0102               	movlb	2	; () banked
 18523  0187AE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18524                           
 18525                           ; BSR set to: 2
 18526                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18527                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18528  0187B0  0EFF               	movlw	-1
 18529  0187B2  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18530  0187B8                     l1614:
 18531                           
 18532                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18533  0187B8  52E5               	movf	postdec1,f,c
 18534  0187BA  0012               	return		;funcret
 18535  0187BC                     __end_of_set_display_info:
 18536                           	opt callstack 0
 18537                           
 18538 ;; *************** function _mode_lamp_dim *****************
 18539 ;; Defined at:
 18540 ;;		line 13 in file "mconfig.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;  level           2  [STACK] const unsigned short 
 18543 ;; Auto vars:     Size  Location     Type
 18544 ;;		None
 18545 ;; Return value:  Size  Location     Type
 18546 ;;                  1  [STACK] void 
 18547 ;; Registers used:
 18548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18549 ;; Tracked objects:
 18550 ;;		On entry : 0/2
 18551 ;;		On exit  : 0/0
 18552 ;;		Unchanged: 0/0
 18553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18558 ;;Total ram usage:        0 bytes
 18559 ;; Hardware stack levels used:    1
 18560 ;; Hardware stack levels required when called:    7
 18561 ;; This function calls:
 18562 ;;		_PWM8_LoadDutyValue
 18563 ;; This function is called by:
 18564 ;;		_main
 18565 ;;		_check_help
 18566 ;; This function uses a reentrant model
 18567 ;;
 18568                           
 18569                           	psect	text75
 18570  018866                     __ptext75:
 18571                           	opt callstack 0
 18572  018866                     _mode_lamp_dim:
 18573                           	opt callstack 23
 18574                           
 18575                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18576                           ;stkvar	_level @ sp[(0)+-2]
 18577                           
 18578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18579                           ;incstack = 0
 18580  018866  0EFE               	movlw	-2
 18581  018868  006F FF8F FFE6     	movff	plusw1,postinc1
 18582  01886E  006F FF8F FFE6     	movff	plusw1,postinc1
 18583  018874  ECF9  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18584                           
 18585                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18586  018878  52E5               	movf	postdec1,f,c
 18587  01887A  52E5               	movf	postdec1,f,c
 18588  01887C  0012               	return		;funcret
 18589  01887E                     __end_of_mode_lamp_dim:
 18590                           	opt callstack 0
 18591                           
 18592 ;; *************** function _mode_lamp_bright *****************
 18593 ;; Defined at:
 18594 ;;		line 18 in file "mconfig.c"
 18595 ;; Parameters:    Size  Location     Type
 18596 ;;		None
 18597 ;; Auto vars:     Size  Location     Type
 18598 ;;		None
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  1  [STACK] void 
 18601 ;; Registers used:
 18602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18603 ;; Tracked objects:
 18604 ;;		On entry : 0/2
 18605 ;;		On exit  : 0/0
 18606 ;;		Unchanged: 0/0
 18607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;Total ram usage:        0 bytes
 18613 ;; Hardware stack levels used:    1
 18614 ;; Hardware stack levels required when called:    7
 18615 ;; This function calls:
 18616 ;;		_PWM8_LoadDutyValue
 18617 ;; This function is called by:
 18618 ;;		_check_help
 18619 ;; This function uses a reentrant model
 18620 ;;
 18621                           
 18622                           	psect	text76
 18623  01892C                     __ptext76:
 18624                           	opt callstack 0
 18625  01892C                     _mode_lamp_bright:
 18626                           	opt callstack 22
 18627                           
 18628                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18629                           
 18630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18631                           ;incstack = 0
 18632  01892C  0E2C               	movlw	44
 18633  01892E  6EE6               	movwf	postinc1,c
 18634  018930  0E01               	movlw	1
 18635  018932  6EE6               	movwf	postinc1,c
 18636  018934  ECF9  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18637                           
 18638                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18639  018938  0012               	return		;funcret
 18640  01893A                     __end_of_mode_lamp_bright:
 18641                           	opt callstack 0
 18642                           
 18643 ;; *************** function _PWM8_LoadDutyValue *****************
 18644 ;; Defined at:
 18645 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;  dutyValue       2  [STACK] unsigned short 
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;		None
 18650 ;; Return value:  Size  Location     Type
 18651 ;;                  1  [STACK] void 
 18652 ;; Registers used:
 18653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18654 ;; Tracked objects:
 18655 ;;		On entry : 0/2
 18656 ;;		On exit  : 0/0
 18657 ;;		Unchanged: 0/0
 18658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18663 ;;Total ram usage:        0 bytes
 18664 ;; Hardware stack levels used:    1
 18665 ;; Hardware stack levels required when called:    6
 18666 ;; This function calls:
 18667 ;;		Nothing
 18668 ;; This function is called by:
 18669 ;;		_mode_lamp_dim
 18670 ;;		_mode_lamp_bright
 18671 ;; This function uses a reentrant model
 18672 ;;
 18673                           
 18674                           	psect	text77
 18675  017FF2                     __ptext77:
 18676                           	opt callstack 0
 18677  017FF2                     _PWM8_LoadDutyValue:
 18678                           	opt callstack 23
 18679                           
 18680                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18681                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18682                           
 18683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18684                           ;incstack = 0
 18685  017FF2  0EFE               	movlw	-2
 18686  017FF4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18687  017FFA  0EFF               	movlw	-1
 18688  017FFC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18689  018002  90D8               	bcf	status,0,c
 18690  018004  323D               	rrcf	(btemp+11)^0,f,c
 18691  018006  323C               	rrcf	(btemp+10)^0,f,c
 18692  018008  90D8               	bcf	status,0,c
 18693  01800A  323D               	rrcf	(btemp+11)^0,f,c
 18694  01800C  323C               	rrcf	(btemp+10)^0,f,c
 18695  01800E  503C               	movf	(btemp+10)^0,w,c
 18696  018010  6E61               	movwf	97,c	;volatile
 18697                           
 18698                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 18699                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18700  018012  0EFE               	movlw	-2
 18701  018014  006F FF8C  F03D    	movff	plusw1,btemp+11
 18702  01801A  0E03               	movlw	3
 18703  01801C  163D               	andwf	(btemp+11)^0,f,c
 18704  01801E  0E06               	movlw	6
 18705  018020  6E32               	movwf	btemp^0,c
 18706  018022                     u7875:
 18707  018022  90D8               	bcf	status,0,c
 18708  018024  363D               	rlcf	(btemp+11)^0,f,c
 18709  018026  2E32               	decfsz	btemp^0,f,c
 18710  018028  D7FC               	goto	u7875
 18711  01802A  503D               	movf	(btemp+11)^0,w,c
 18712  01802C  6E60               	movwf	96,c	;volatile
 18713                           
 18714                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 18715  01802E  52E5               	movf	postdec1,f,c
 18716  018030  52E5               	movf	postdec1,f,c
 18717  018032  0012               	return		;funcret
 18718  018034                     __end_of_PWM8_LoadDutyValue:
 18719                           	opt callstack 0
 18720                           
 18721 ;; *************** function _help_button *****************
 18722 ;; Defined at:
 18723 ;;		line 26 in file "mconfig.c"
 18724 ;; Parameters:    Size  Location     Type
 18725 ;;		None
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1  [STACK] _Bool 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/2
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18741 ;;Total ram usage:        0 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; Hardware stack levels required when called:    7
 18744 ;; This function calls:
 18745 ;;		_StartTimer
 18746 ;;		_TimerDone
 18747 ;; This function is called by:
 18748 ;;		_check_help
 18749 ;; This function uses a reentrant model
 18750 ;;
 18751                           
 18752                           	psect	text78
 18753  0180EE                     __ptext78:
 18754                           	opt callstack 0
 18755  0180EE                     _help_button:
 18756                           	opt callstack 22
 18757                           
 18758                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 18759                           
 18760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18761                           ;incstack = 0
 18762  0180EE  B0CB               	btfsc	203,0,c	;volatile
 18763  0180F0  D00C               	goto	l1557
 18764                           
 18765                           ;mconfig.c: 29:   V.help = 1;
 18766  0180F2  0102               	movlb	2	; () banked
 18767  0180F4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 18768                           
 18769                           ; BSR set to: 2
 18770                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 18771  0180F6  0E08               	movlw	8
 18772  0180F8  6EE6               	movwf	postinc1,c
 18773  0180FA  EC49  F0C3         	call	_TimerDone	;wreg free
 18774  0180FE  5032               	movf	btemp^0,w,c
 18775  018100  B4D8               	btfsc	status,2,c
 18776  018102  D003               	goto	l1557
 18777                           
 18778                           ;mconfig.c: 31:    return 1;
 18779  018104  0E01               	movlw	1
 18780  018106  6E32               	movwf	btemp^0,c
 18781  018108  0012               	return	
 18782  01810A                     l1557:
 18783                           
 18784                           ;mconfig.c: 34:  if (!V.help)
 18785  01810A  0102               	movlb	2	; () banked
 18786  01810C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 18787  01810E  D008               	goto	l8648
 18788                           
 18789                           ; BSR set to: 2
 18790                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 18791  018110  0E2C               	movlw	44
 18792  018112  6EE6               	movwf	postinc1,c
 18793  018114  0E01               	movlw	1
 18794  018116  6EE6               	movwf	postinc1,c
 18795  018118  0E08               	movlw	8
 18796  01811A  6EE6               	movwf	postinc1,c
 18797  01811C  EC59  F0C0         	call	_StartTimer	;wreg free
 18798  018120                     l8648:
 18799                           
 18800                           ;mconfig.c: 37:  return 0;
 18801  018120  0E00               	movlw	0
 18802  018122  6E32               	movwf	btemp^0,c
 18803                           
 18804                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 18805  018124  0012               	return		;funcret
 18806  018126                     __end_of_help_button:
 18807                           	opt callstack 0
 18808                           
 18809 ;; *************** function _TimerDone *****************
 18810 ;; Defined at:
 18811 ;;		line 20 in file "timers.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;  timer           1  [STACK] const unsigned char 
 18814 ;; Auto vars:     Size  Location     Type
 18815 ;;		None
 18816 ;; Return value:  Size  Location     Type
 18817 ;;                  1  [STACK] _Bool 
 18818 ;; Registers used:
 18819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18820 ;; Tracked objects:
 18821 ;;		On entry : 0/39
 18822 ;;		On exit  : 0/0
 18823 ;;		Unchanged: 0/0
 18824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;Total ram usage:        0 bytes
 18830 ;; Hardware stack levels used:    1
 18831 ;; Hardware stack levels required when called:    6
 18832 ;; This function calls:
 18833 ;;		Nothing
 18834 ;; This function is called by:
 18835 ;;		_main
 18836 ;;		_WaitMs
 18837 ;;		_help_button
 18838 ;;		_check_help
 18839 ;;		_set_display_info
 18840 ;; This function uses a reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text79
 18844  018692                     __ptext79:
 18845                           	opt callstack 0
 18846  018692                     _TimerDone:
 18847                           	opt callstack 23
 18848                           
 18849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18850                           ;incstack = 0
 18851  018692  0004               	clrwdt		;# 
 18852                           
 18853                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 18854                           ;stkvar	_timer @ sp[(0)+-1]
 18855  018694  0EFF               	movlw	-1
 18856  018696  50E3               	movf	plusw1,w,c
 18857  018698  0D02               	mullw	2
 18858  01869A  50F3               	movf	243,w,c
 18859  01869C  0F89               	addlw	low _tickCount
 18860  01869E  6ED9               	movwf	fsr2l,c
 18861  0186A0  6ADA               	clrf	fsr2h,c
 18862  0186A2  50DE               	movf	postinc2,w,c
 18863  0186A4  10DE               	iorwf	postinc2,w,c
 18864  0186A6  A4D8               	btfss	status,2,c
 18865  0186A8  D002               	goto	l8034
 18866                           
 18867                           ;timers.c: 24:   return 1;
 18868  0186AA  0E01               	movlw	1
 18869  0186AC  D001               	goto	L20
 18870  0186AE                     l8034:
 18871                           
 18872                           ;timers.c: 26:  return 0;
 18873  0186AE  0E00               	movlw	0
 18874  0186B0                     L20:
 18875  0186B0  6E32               	movwf	btemp^0,c
 18876                           
 18877                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18878  0186B2  52E5               	movf	postdec1,f,c
 18879  0186B4  0012               	return		;funcret
 18880  0186B6                     __end_of_TimerDone:
 18881                           	opt callstack 0
 18882                           
 18883 ;; *************** function _StartTimer *****************
 18884 ;; Defined at:
 18885 ;;		line 12 in file "timers.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;  timer           1  [STACK] const unsigned char 
 18888 ;;  count           2  [STACK] const unsigned short 
 18889 ;; Auto vars:     Size  Location     Type
 18890 ;;		None
 18891 ;; Return value:  Size  Location     Type
 18892 ;;                  1  [STACK] void 
 18893 ;; Registers used:
 18894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18895 ;; Tracked objects:
 18896 ;;		On entry : 0/5
 18897 ;;		On exit  : 0/0
 18898 ;;		Unchanged: 0/0
 18899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18904 ;;Total ram usage:        0 bytes
 18905 ;; Hardware stack levels used:    1
 18906 ;; Hardware stack levels required when called:    6
 18907 ;; This function calls:
 18908 ;;		Nothing
 18909 ;; This function is called by:
 18910 ;;		_main
 18911 ;;		_WaitMs
 18912 ;;		_help_button
 18913 ;;		_check_help
 18914 ;; This function uses a reentrant model
 18915 ;;
 18916                           
 18917                           	psect	text80
 18918  0180B2                     __ptext80:
 18919                           	opt callstack 0
 18920  0180B2                     _StartTimer:
 18921                           	opt callstack 21
 18922                           
 18923                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 18924                           ;stkvar	_count @ sp[(0)+-3]
 18925                           
 18926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18927                           ;incstack = 0
 18928  0180B2  0EFD               	movlw	-3
 18929  0180B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18930  0180BA  0EFE               	movlw	-2
 18931  0180BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18932  0180C2  90D8               	bcf	status,0,c
 18933  0180C4  343C               	rlcf	(btemp+10)^0,w,c
 18934  0180C6  6E3A               	movwf	(btemp+8)^0,c
 18935  0180C8  343D               	rlcf	(btemp+11)^0,w,c
 18936  0180CA  6E3B               	movwf	(btemp+9)^0,c
 18937                           
 18938                           ;stkvar	_timer @ sp[(0)+-1]
 18939  0180CC  0EFF               	movlw	-1
 18940  0180CE  50E3               	movf	plusw1,w,c
 18941  0180D0  0D02               	mullw	2
 18942  0180D2  50F3               	movf	243,w,c
 18943  0180D4  0F89               	addlw	low _tickCount
 18944  0180D6  6ED9               	movwf	fsr2l,c
 18945  0180D8  6ADA               	clrf	fsr2h,c
 18946  0180DA  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 18947  0180E0  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 18948                           
 18949                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 18950  0180E6  52E5               	movf	postdec1,f,c
 18951  0180E8  52E5               	movf	postdec1,f,c
 18952  0180EA  52E5               	movf	postdec1,f,c
 18953  0180EC  0012               	return		;funcret
 18954  0180EE                     __end_of_StartTimer:
 18955                           	opt callstack 0
 18956                           
 18957 ;; *************** function _display_info *****************
 18958 ;; Defined at:
 18959 ;;		line 190 in file "mconfig.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;		None
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;		None
 18964 ;; Return value:  Size  Location     Type
 18965 ;;                  1  [STACK] enum E16501
 18966 ;; Registers used:
 18967 ;;		btemp
 18968 ;; Tracked objects:
 18969 ;;		On entry : 0/2
 18970 ;;		On exit  : 0/0
 18971 ;;		Unchanged: 0/0
 18972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;Total ram usage:        0 bytes
 18978 ;; Hardware stack levels used:    1
 18979 ;; Hardware stack levels required when called:    6
 18980 ;; This function calls:
 18981 ;;		Nothing
 18982 ;; This function is called by:
 18983 ;;		_check_help
 18984 ;; This function uses a reentrant model
 18985 ;;
 18986                           
 18987                           	psect	text81
 18988  01898E                     __ptext81:
 18989                           	opt callstack 0
 18990  01898E                     _display_info:
 18991                           	opt callstack 23
 18992                           
 18993                           ;mconfig.c: 192:  return V.response.info;
 18994                           
 18995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18996                           ;incstack = 0
 18997  01898E  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 18998                           
 18999                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19000  018994  0012               	return		;funcret
 19001  018996                     __end_of_display_info:
 19002                           	opt callstack 0
 19003                           
 19004 ;; *************** function _display_help *****************
 19005 ;; Defined at:
 19006 ;;		line 195 in file "mconfig.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;		None
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;		None
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  1  [STACK] enum E16501
 19013 ;; Registers used:
 19014 ;;		btemp
 19015 ;; Tracked objects:
 19016 ;;		On entry : 3F/2
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19024 ;;Total ram usage:        0 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:    6
 19027 ;; This function calls:
 19028 ;;		Nothing
 19029 ;; This function is called by:
 19030 ;;		_check_help
 19031 ;; This function uses a reentrant model
 19032 ;;
 19033                           
 19034                           	psect	text82
 19035  018996                     __ptext82:
 19036                           	opt callstack 0
 19037  018996                     _display_help:
 19038                           	opt callstack 23
 19039                           
 19040                           ;mconfig.c: 197:  return V.response.help_temp;
 19041                           
 19042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19043                           ;incstack = 0
 19044  018996  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19045                           
 19046                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19047  01899C  0012               	return		;funcret
 19048  01899E                     __end_of_display_help:
 19049                           	opt callstack 0
 19050                           
 19051 ;; *************** function _check_adc_scan *****************
 19052 ;; Defined at:
 19053 ;;		line 56 in file "daq.c"
 19054 ;; Parameters:    Size  Location     Type
 19055 ;;		None
 19056 ;; Auto vars:     Size  Location     Type
 19057 ;;		None
 19058 ;; Return value:  Size  Location     Type
 19059 ;;                  1  [STACK] _Bool 
 19060 ;; Registers used:
 19061 ;;		btemp
 19062 ;; Tracked objects:
 19063 ;;		On entry : 0/39
 19064 ;;		On exit  : 0/0
 19065 ;;		Unchanged: 0/0
 19066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19071 ;;Total ram usage:        0 bytes
 19072 ;; Hardware stack levels used:    1
 19073 ;; Hardware stack levels required when called:    6
 19074 ;; This function calls:
 19075 ;;		Nothing
 19076 ;; This function is called by:
 19077 ;;		_main
 19078 ;; This function uses a reentrant model
 19079 ;;
 19080                           
 19081                           	psect	text83
 19082  01899E                     __ptext83:
 19083                           	opt callstack 0
 19084  01899E                     _check_adc_scan:
 19085                           	opt callstack 24
 19086                           
 19087                           ;daq.c: 58:  return R.done;
 19088                           
 19089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19090                           ;incstack = 0
 19091  01899E  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19092                           
 19093                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19094  0189A4  0012               	return		;funcret
 19095  0189A6                     __end_of_check_adc_scan:
 19096                           	opt callstack 0
 19097                           
 19098 ;; *************** function _calc_model_data *****************
 19099 ;; Defined at:
 19100 ;;		line 54 in file "mbmc.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;		None
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;		None
 19105 ;; Return value:  Size  Location     Type
 19106 ;;                  1  [STACK] void 
 19107 ;; Registers used:
 19108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/39
 19111 ;;		On exit  : 3F/1
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19118 ;;Total ram usage:        0 bytes
 19119 ;; Hardware stack levels used:    1
 19120 ;; Hardware stack levels required when called:    9
 19121 ;; This function calls:
 19122 ;;		___fladd
 19123 ;;		___flmul
 19124 ;;		___flsub
 19125 ;;		_lp_filter
 19126 ;; This function is called by:
 19127 ;;		_main
 19128 ;; This function uses a reentrant model
 19129 ;;
 19130                           
 19131                           	psect	text84
 19132  0152AC                     __ptext84:
 19133                           	opt callstack 0
 19134  0152AC                     _calc_model_data:
 19135                           	opt callstack 21
 19136                           
 19137                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 19138                           
 19139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19140                           ;incstack = 0
 19141  0152AC  C100  F144         	movff	_C,_C+68
 19142  0152B0  C101  F145         	movff	_C+1,_C+69
 19143  0152B4  C102  F146         	movff	_C+2,_C+70
 19144  0152B8  C103  F147         	movff	_C+3,_C+71
 19145                           
 19146                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 19147  0152BC  C104  F148         	movff	_C+4,_C+72
 19148  0152C0  C105  F149         	movff	_C+5,_C+73
 19149  0152C4  C106  F14A         	movff	_C+6,_C+74
 19150  0152C8  C107  F14B         	movff	_C+7,_C+75
 19151                           
 19152                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 19153  0152CC  C110  F154         	movff	_C+16,_C+84
 19154  0152D0  C111  F155         	movff	_C+17,_C+85
 19155  0152D4  C112  F156         	movff	_C+18,_C+86
 19156  0152D8  C113  F157         	movff	_C+19,_C+87
 19157                           
 19158                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 19159  0152DC  C114  F150         	movff	_C+20,_C+80
 19160  0152E0  C115  F151         	movff	_C+21,_C+81
 19161  0152E4  C116  F152         	movff	_C+22,_C+82
 19162  0152E8  C117  F153         	movff	_C+23,_C+83
 19163                           
 19164                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 19165  0152EC  C130  F164         	movff	_C+48,_C+100
 19166  0152F0  C131  F165         	movff	_C+49,_C+101
 19167  0152F4  C132  F166         	movff	_C+50,_C+102
 19168  0152F8  C133  F167         	movff	_C+51,_C+103
 19169                           
 19170                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19171  0152FC  0E01               	movlw	1
 19172  0152FE  6EE6               	movwf	postinc1,c
 19173  015300  0E10               	movlw	16
 19174  015302  6EE6               	movwf	postinc1,c
 19175  015304  0060  F403  FFE6   	movff	_C,postinc1
 19176  01530A  0060  F407  FFE6   	movff	_C+1,postinc1
 19177  015310  0060  F40B  FFE6   	movff	_C+2,postinc1
 19178  015316  0060  F40F  FFE6   	movff	_C+3,postinc1
 19179  01531C  0060  F413  FFE6   	movff	_C+4,postinc1
 19180  015322  0060  F417  FFE6   	movff	_C+5,postinc1
 19181  015328  0060  F41B  FFE6   	movff	_C+6,postinc1
 19182  01532E  0060  F41F  FFE6   	movff	_C+7,postinc1
 19183  015334  EC4B  F0BF         	call	___flsub	;wreg free
 19184  015338  0060  F0CB  FFE6   	movff	btemp,postinc1
 19185  01533E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19186  015344  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19187  01534A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19188  015350  EC9A  F0AE         	call	_lp_filter	;wreg free
 19189  015354  0060  F0C8  F140   	movff	btemp,_C+64
 19190  01535A  0060  F0CC  F141   	movff	btemp+1,_C+65
 19191  015360  0060  F0D0  F142   	movff	btemp+2,_C+66
 19192  015366  0060  F0D4  F143   	movff	btemp+3,_C+67
 19193                           
 19194                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19195  01536C  0E01               	movlw	1
 19196  01536E  6EE6               	movwf	postinc1,c
 19197  015370  0E11               	movlw	17
 19198  015372  6EE6               	movwf	postinc1,c
 19199  015374  0060  F553  FFE6   	movff	_C+84,postinc1
 19200  01537A  0060  F557  FFE6   	movff	_C+85,postinc1
 19201  015380  0060  F55B  FFE6   	movff	_C+86,postinc1
 19202  015386  0060  F55F  FFE6   	movff	_C+87,postinc1
 19203  01538C  0060  F503  FFE6   	movff	_C+64,postinc1
 19204  015392  0060  F507  FFE6   	movff	_C+65,postinc1
 19205  015398  0060  F50B  FFE6   	movff	_C+66,postinc1
 19206  01539E  0060  F50F  FFE6   	movff	_C+67,postinc1
 19207  0153A4  ECC1  F08E         	call	___flmul	;wreg free
 19208  0153A8  0060  F0CB  FFE6   	movff	btemp,postinc1
 19209  0153AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19210  0153B4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19211  0153BA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19212  0153C0  EC9A  F0AE         	call	_lp_filter	;wreg free
 19213  0153C4  0060  F0C8  F168   	movff	btemp,_C+104
 19214  0153CA  0060  F0CC  F169   	movff	btemp+1,_C+105
 19215  0153D0  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19216  0153D6  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19217                           
 19218                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19219  0153DC  0E01               	movlw	1
 19220  0153DE  6EE6               	movwf	postinc1,c
 19221  0153E0  0E12               	movlw	18
 19222  0153E2  6EE6               	movwf	postinc1,c
 19223  0153E4  0060  F543  FFE6   	movff	_C+80,postinc1
 19224  0153EA  0060  F547  FFE6   	movff	_C+81,postinc1
 19225  0153F0  0060  F54B  FFE6   	movff	_C+82,postinc1
 19226  0153F6  0060  F54F  FFE6   	movff	_C+83,postinc1
 19227  0153FC  0060  F523  FFE6   	movff	_C+72,postinc1
 19228  015402  0060  F527  FFE6   	movff	_C+73,postinc1
 19229  015408  0060  F52B  FFE6   	movff	_C+74,postinc1
 19230  01540E  0060  F52F  FFE6   	movff	_C+75,postinc1
 19231  015414  ECC1  F08E         	call	___flmul	;wreg free
 19232  015418  0060  F0CB  FFE6   	movff	btemp,postinc1
 19233  01541E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19234  015424  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19235  01542A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19236  015430  EC9A  F0AE         	call	_lp_filter	;wreg free
 19237  015434  0060  F0C8  F170   	movff	btemp,_C+112
 19238  01543A  0060  F0CC  F171   	movff	btemp+1,_C+113
 19239  015440  0060  F0D0  F172   	movff	btemp+2,_C+114
 19240  015446  0060  F0D4  F173   	movff	btemp+3,_C+115
 19241                           
 19242                           ;mbmc.c: 64:  C.p_inverter = lp_filter((C.c_load * C.v_inverter)-14.00, 19, 1);
 19243  01544C  0E01               	movlw	1
 19244  01544E  6EE6               	movwf	postinc1,c
 19245  015450  0E13               	movlw	19
 19246  015452  6EE6               	movwf	postinc1,c
 19247  015454  0E00               	movlw	0
 19248  015456  6EE6               	movwf	postinc1,c
 19249  015458  0E00               	movlw	0
 19250  01545A  6EE6               	movwf	postinc1,c
 19251  01545C  0E60               	movlw	96
 19252  01545E  6EE6               	movwf	postinc1,c
 19253  015460  0EC1               	movlw	193
 19254  015462  6EE6               	movwf	postinc1,c
 19255  015464  0060  F593  FFE6   	movff	_C+100,postinc1
 19256  01546A  0060  F597  FFE6   	movff	_C+101,postinc1
 19257  015470  0060  F59B  FFE6   	movff	_C+102,postinc1
 19258  015476  0060  F59F  FFE6   	movff	_C+103,postinc1
 19259  01547C  0060  F503  FFE6   	movff	_C+64,postinc1
 19260  015482  0060  F507  FFE6   	movff	_C+65,postinc1
 19261  015488  0060  F50B  FFE6   	movff	_C+66,postinc1
 19262  01548E  0060  F50F  FFE6   	movff	_C+67,postinc1
 19263  015494  ECC1  F08E         	call	___flmul	;wreg free
 19264  015498  0060  F0CB  FFE6   	movff	btemp,postinc1
 19265  01549E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19266  0154A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19267  0154AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19268  0154B0  ECD6  F092         	call	___fladd	;wreg free
 19269  0154B4  0060  F0CB  FFE6   	movff	btemp,postinc1
 19270  0154BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19271  0154C0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19272  0154C6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19273  0154CC  EC9A  F0AE         	call	_lp_filter	;wreg free
 19274  0154D0  0060  F0C8  F16C   	movff	btemp,_C+108
 19275  0154D6  0060  F0CC  F16D   	movff	btemp+1,_C+109
 19276  0154DC  0060  F0D0  F16E   	movff	btemp+2,_C+110
 19277  0154E2  0060  F0D4  F16F   	movff	btemp+3,_C+111
 19278                           
 19279                           ;mbmc.c: 68:  if (C.p_inverter<0.0)
 19280  0154E8  0101               	movlb	1	; () banked
 19281  0154EA  AF6F               	btfss	(_C+111)& (0+255),7,b
 19282  0154EC  0012               	return	
 19283                           
 19284                           ; BSR set to: 1
 19285                           ;mbmc.c: 69:   C.p_inverter=0.0001;
 19286  0154EE  0E17               	movlw	23
 19287  0154F0  6F6C               	movwf	(_C+108)& (0+255),b
 19288  0154F2  0EB7               	movlw	183
 19289  0154F4  6F6D               	movwf	(_C+109)& (0+255),b
 19290  0154F6  0ED1               	movlw	209
 19291  0154F8  6F6E               	movwf	(_C+110)& (0+255),b
 19292  0154FA  0E38               	movlw	56
 19293  0154FC  6F6F               	movwf	(_C+111)& (0+255),b
 19294                           
 19295                           ; BSR set to: 1
 19296                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 19297  0154FE  0012               	return		;funcret
 19298  015500                     __end_of_calc_model_data:
 19299                           	opt callstack 0
 19300                           
 19301 ;; *************** function _lp_filter *****************
 19302 ;; Defined at:
 19303 ;;		line 16 in file "mbmc.c"
 19304 ;; Parameters:    Size  Location     Type
 19305 ;;  new             4  [STACK] const float 
 19306 ;;  bn              1  [STACK] const unsigned char 
 19307 ;;  slow            1  [STACK] const char 
 19308 ;; Auto vars:     Size  Location     Type
 19309 ;;  lp_speed        4  [STACK] float 
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  4  [STACK] float 
 19312 ;; Registers used:
 19313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/39
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19323 ;;Total ram usage:        0 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:    8
 19326 ;; This function calls:
 19327 ;;		___fladd
 19328 ;;		___flmul
 19329 ;;		___flsub
 19330 ;; This function is called by:
 19331 ;;		_convert_adc_data
 19332 ;;		_calc_model_data
 19333 ;; This function uses a reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text85
 19337  015D34                     __ptext85:
 19338                           	opt callstack 0
 19339  015D34                     _lp_filter:
 19340                           	opt callstack 0
 19341                           
 19342                           ; BSR set to: 1
 19343                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19344  015D34  52E6               	movf	postinc1,f,c
 19345  015D36  52E6               	movf	postinc1,f,c
 19346  015D38  52E6               	movf	postinc1,f,c
 19347  015D3A  52E6               	movf	postinc1,f,c
 19348                           
 19349                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +4];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +4)
 19350                           ;stkvar	_bn @ sp[(-4)+-5]
 19351                           
 19352                           ;incstack = 0
 19353  015D3C  0EF7               	movlw	-9
 19354  015D3E  006F FF8C  F032    	movff	plusw1,btemp
 19355  015D44  0E13               	movlw	19
 19356  015D46  6432               	cpfsgt	btemp^0,c
 19357  015D48  D011               	goto	l8754
 19358  015D4A                     u8250:
 19359                           
 19360                           ;mbmc.c: 22:   return new;
 19361                           ;stkvar	_new @ sp[(-4)+-4]
 19362  015D4A  0EF8               	movlw	-8
 19363  015D4C  006F FF8C  F032    	movff	plusw1,btemp
 19364  015D52  0EF9               	movlw	-7
 19365  015D54  006F FF8C  F033    	movff	plusw1,btemp+1
 19366  015D5A  0EFA               	movlw	-6
 19367  015D5C  006F FF8C  F034    	movff	plusw1,btemp+2
 19368  015D62  0EFB               	movlw	-5
 19369  015D64  006F FF8C  F035    	movff	plusw1,btemp+3
 19370  015D6A  D0BF               	goto	l1699
 19371  015D6C                     l8754:
 19372                           
 19373                           ;mbmc.c: 24:  if (slow == (-1)) {
 19374                           ;stkvar	_slow @ sp[(-4)+-6]
 19375  015D6C  0EF6               	movlw	-10
 19376  015D6E  28E3               	incf	plusw1,w,c
 19377  015D70  A4D8               	btfss	status,2,c
 19378  015D72  D012               	goto	l8762
 19379                           
 19380                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 19381                           ;stkvar	_bn @ sp[(-4)+-5]
 19382  015D74  0EF7               	movlw	-9
 19383  015D76  50E3               	movf	plusw1,w,c
 19384  015D78  0D04               	mullw	4
 19385  015D7A  0E00               	movlw	low lp_filter@smooth
 19386  015D7C  24F3               	addwf	243,w,c
 19387  015D7E  6ED9               	movwf	fsr2l,c
 19388  015D80  0E03               	movlw	high lp_filter@smooth
 19389  015D82  20F4               	addwfc	prodh,w,c
 19390  015D84  6EDA               	movwf	fsr2h,c
 19391  015D86  0E00               	movlw	0
 19392  015D88  6EDE               	movwf	postinc2,c
 19393  015D8A  0E00               	movlw	0
 19394  015D8C  6EDE               	movwf	postinc2,c
 19395  015D8E  0E00               	movlw	0
 19396  015D90  6EDE               	movwf	postinc2,c
 19397  015D92  0E00               	movlw	0
 19398  015D94  6EDD               	movwf	postdec2,c
 19399  015D96  D7D9               	goto	u8250
 19400  015D98                     l8762:
 19401                           
 19402                           ;mbmc.c: 29:  if (slow) {
 19403                           ;stkvar	_slow @ sp[(-4)+-6]
 19404  015D98  0EF6               	movlw	-10
 19405  015D9A  50E3               	movf	plusw1,w,c
 19406  015D9C  B4D8               	btfsc	status,2,c
 19407  015D9E  D008               	goto	l8766
 19408                           
 19409                           ;mbmc.c: 30:   lp_speed = 0.033;
 19410  015DA0  0E02               	movlw	2
 19411  015DA2  6E3A               	movwf	(btemp+8)^0,c
 19412  015DA4  0E2B               	movlw	43
 19413  015DA6  6E3B               	movwf	(btemp+9)^0,c
 19414  015DA8  0E07               	movlw	7
 19415  015DAA  6E3C               	movwf	(btemp+10)^0,c
 19416  015DAC  0E3D               	movlw	61
 19417  015DAE  D007               	goto	L21
 19418  015DB0                     l8766:
 19419                           
 19420                           ;mbmc.c: 32:   lp_speed = 0.125;
 19421  015DB0  0E00               	movlw	0
 19422  015DB2  6E3A               	movwf	(btemp+8)^0,c
 19423  015DB4  0E00               	movlw	0
 19424  015DB6  6E3B               	movwf	(btemp+9)^0,c
 19425  015DB8  0E00               	movlw	0
 19426  015DBA  6E3C               	movwf	(btemp+10)^0,c
 19427  015DBC  0E3E               	movlw	62
 19428  015DBE                     L21:
 19429  015DBE  6E3D               	movwf	(btemp+11)^0,c
 19430                           
 19431                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19432  015DC0  0EFC               	movlw	-4
 19433  015DC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19434  015DC8  0EFD               	movlw	-3
 19435  015DCA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19436  015DD0  0EFE               	movlw	-2
 19437  015DD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19438  015DD8  0EFF               	movlw	-1
 19439  015DDA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19440                           
 19441                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19442                           ;stkvar	_bn @ sp[(-4)+-5]
 19443  015DE0  0EF7               	movlw	-9
 19444  015DE2  50E3               	movf	plusw1,w,c
 19445  015DE4  0D04               	mullw	4
 19446  015DE6  0E00               	movlw	low lp_filter@smooth
 19447  015DE8  24F3               	addwf	243,w,c
 19448  015DEA  6ED9               	movwf	fsr2l,c
 19449  015DEC  0E03               	movlw	high lp_filter@smooth
 19450  015DEE  20F4               	addwfc	prodh,w,c
 19451  015DF0  6EDA               	movwf	fsr2h,c
 19452  015DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 19453  015DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 19454  015DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 19455  015E04  006F FF7B FFE6     	movff	postinc2,postinc1
 19456                           
 19457                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19458  015E0A  0EF8               	movlw	-8
 19459  015E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 19460  015E12  006F FF8F FFE6     	movff	plusw1,postinc1
 19461  015E18  006F FF8F FFE6     	movff	plusw1,postinc1
 19462  015E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 19463                           
 19464                           ;stkvar	_bn @ sp[(-12)+-5]
 19465  015E24  0EEF               	movlw	-17
 19466  015E26  50E3               	movf	plusw1,w,c
 19467  015E28  0D04               	mullw	4
 19468  015E2A  0E00               	movlw	low lp_filter@smooth
 19469  015E2C  24F3               	addwf	243,w,c
 19470  015E2E  6ED9               	movwf	fsr2l,c
 19471  015E30  0E03               	movlw	high lp_filter@smooth
 19472  015E32  20F4               	addwfc	prodh,w,c
 19473  015E34  6EDA               	movwf	fsr2h,c
 19474  015E36  006F FF7B FFE6     	movff	postinc2,postinc1
 19475  015E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 19476  015E42  006F FF7B FFE6     	movff	postinc2,postinc1
 19477  015E48  006F FF7B FFE6     	movff	postinc2,postinc1
 19478                           
 19479                           ;stkvar	_new @ sp[(-16)+-4]
 19480  015E4E  0EEC               	movlw	-20
 19481  015E50  006F FF8F FFE6     	movff	plusw1,postinc1
 19482  015E56  006F FF8F FFE6     	movff	plusw1,postinc1
 19483  015E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19484  015E62  006F FF8F FFE6     	movff	plusw1,postinc1
 19485  015E68  EC4B  F0BF         	call	___flsub	;wreg free
 19486  015E6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 19487  015E72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19488  015E78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19489  015E7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19490  015E84  ECC1  F08E         	call	___flmul	;wreg free
 19491  015E88  0060  F0CB  FFE6   	movff	btemp,postinc1
 19492  015E8E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19493  015E94  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19494  015E9A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19495  015EA0  ECD6  F092         	call	___fladd	;wreg free
 19496                           
 19497                           ;stkvar	_bn @ sp[(-4)+-5]
 19498  015EA4  0EF7               	movlw	-9
 19499  015EA6  50E3               	movf	plusw1,w,c
 19500  015EA8  0D04               	mullw	4
 19501  015EAA  0E00               	movlw	low lp_filter@smooth
 19502  015EAC  24F3               	addwf	243,w,c
 19503  015EAE  6ED9               	movwf	fsr2l,c
 19504  015EB0  0E03               	movlw	high lp_filter@smooth
 19505  015EB2  20F4               	addwfc	prodh,w,c
 19506  015EB4  6EDA               	movwf	fsr2h,c
 19507  015EB6  0060  F0CB  FFDE   	movff	btemp,postinc2
 19508  015EBC  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19509  015EC2  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19510  015EC8  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19511  015ECE  52DD               	movf	postdec2,f,c
 19512  015ED0  52DD               	movf	postdec2,f,c
 19513  015ED2  006F FF78  F032    	movff	postinc2,btemp
 19514  015ED8  006F FF78  F033    	movff	postinc2,btemp+1
 19515  015EDE  006F FF78  F034    	movff	postinc2,btemp+2
 19516  015EE4  006F FF78  F035    	movff	postinc2,btemp+3
 19517  015EEA                     l1699:
 19518                           
 19519                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19520  015EEA  0EF6               	movlw	246
 19521  015EEC  26E1               	addwf	fsr1l,f,c
 19522  015EEE  0EFF               	movlw	255
 19523  015EF0  22E2               	addwfc	fsr1h,f,c
 19524  015EF2  0012               	return		;funcret
 19525  015EF4                     __end_of_lp_filter:
 19526                           	opt callstack 0
 19527                           
 19528 ;; *************** function ___flsub *****************
 19529 ;; Defined at:
 19530 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;  b               4  [STACK] float 
 19533 ;;  a               4  [STACK] float 
 19534 ;; Auto vars:     Size  Location     Type
 19535 ;;		None
 19536 ;; Return value:  Size  Location     Type
 19537 ;;                  4  [STACK] float 
 19538 ;; Registers used:
 19539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19540 ;; Tracked objects:
 19541 ;;		On entry : 0/39
 19542 ;;		On exit  : 0/0
 19543 ;;		Unchanged: 0/0
 19544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;Total ram usage:        0 bytes
 19550 ;; Hardware stack levels used:    1
 19551 ;; Hardware stack levels required when called:    7
 19552 ;; This function calls:
 19553 ;;		___fladd
 19554 ;; This function is called by:
 19555 ;;		_conv_raw_result
 19556 ;;		_lp_filter
 19557 ;;		_calc_model_data
 19558 ;;		_efgtoa
 19559 ;; This function uses a reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text86
 19563  017E96                     __ptext86:
 19564                           	opt callstack 0
 19565  017E96                     ___flsub:
 19566                           	opt callstack 16
 19567                           
 19568                           ;stkvar	_a @ sp[(0)+-8]
 19569                           
 19570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19571                           ;incstack = 0
 19572  017E96  0EFB               	movlw	-5
 19573  017E98  7EE3               	btg	plusw1,7,c
 19574                           
 19575                           ;stkvar	_a @ sp[(0)+-8]
 19576  017E9A  0EF8               	movlw	-8
 19577  017E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 19578  017EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 19579  017EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 19580  017EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 19581                           
 19582                           ;stkvar	_b @ sp[(-4)+-4]
 19583  017EB4  0EF8               	movlw	-8
 19584  017EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 19585  017EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 19586  017EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 19587  017EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 19588  017ECE  ECD6  F092         	call	___fladd	;wreg free
 19589                           
 19590                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19591  017ED2  0EF8               	movlw	248
 19592  017ED4  26E1               	addwf	fsr1l,f,c
 19593  017ED6  0EFF               	movlw	255
 19594  017ED8  22E2               	addwfc	fsr1h,f,c
 19595  017EDA  0012               	return		;funcret
 19596  017EDC                     __end_of___flsub:
 19597                           	opt callstack 0
 19598                           
 19599 ;; *************** function ___fladd *****************
 19600 ;; Defined at:
 19601 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19602 ;; Parameters:    Size  Location     Type
 19603 ;;  b               4  [STACK] float 
 19604 ;;  a               4  [STACK] float 
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;  grs             1  [STACK] unsigned char 
 19607 ;;  bexp            1  [STACK] unsigned char 
 19608 ;;  aexp            1  [STACK] unsigned char 
 19609 ;;  signs           1  [STACK] unsigned char 
 19610 ;; Return value:  Size  Location     Type
 19611 ;;                  4  [STACK] unsigned char 
 19612 ;; Registers used:
 19613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19614 ;; Tracked objects:
 19615 ;;		On entry : 0/5
 19616 ;;		On exit  : 0/0
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19623 ;;Total ram usage:        0 bytes
 19624 ;; Hardware stack levels used:    1
 19625 ;; Hardware stack levels required when called:    6
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_lp_filter
 19630 ;;		_calc_model_data
 19631 ;;		_efgtoa
 19632 ;;		___flsub
 19633 ;; This function uses a reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text87
 19637  0125AC                     __ptext87:
 19638                           	opt callstack 0
 19639  0125AC                     ___fladd:
 19640                           	opt callstack 0
 19641                           
 19642                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19643  0125AC  52E6               	movf	postinc1,f,c
 19644  0125AE  52E6               	movf	postinc1,f,c
 19645  0125B0  52E6               	movf	postinc1,f,c
 19646  0125B2  52E6               	movf	postinc1,f,c
 19647                           
 19648                           ;stkvar	_b @ sp[(-4)+-4]
 19649                           
 19650                           ;incstack = 0
 19651  0125B4  0EFB               	movlw	251
 19652  0125B6  24E1               	addwf	fsr1l,w,c
 19653  0125B8  6ED9               	movwf	fsr2l,c
 19654  0125BA  0EFF               	movlw	255
 19655  0125BC  20E2               	addwfc	fsr1h,w,c
 19656  0125BE  6EDA               	movwf	fsr2h,c
 19657  0125C0  50DF               	movf	indf2,w,c
 19658  0125C2  6E3D               	movwf	(btemp+11)^0,c
 19659  0125C4  0E80               	movlw	128
 19660  0125C6  163D               	andwf	(btemp+11)^0,f,c
 19661                           
 19662                           ;stkvar	_signs @ sp[(-4)+3]
 19663  0125C8  0EFF               	movlw	-1
 19664  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19665                           
 19666                           ;stkvar	_b @ sp[(-4)+-4]
 19667  0125D0  0EFB               	movlw	251
 19668  0125D2  24E1               	addwf	fsr1l,w,c
 19669  0125D4  6ED9               	movwf	fsr2l,c
 19670  0125D6  0EFF               	movlw	255
 19671  0125D8  20E2               	addwfc	fsr1h,w,c
 19672  0125DA  6EDA               	movwf	fsr2h,c
 19673  0125DC  50DF               	movf	indf2,w,c
 19674  0125DE  6E3D               	movwf	(btemp+11)^0,c
 19675  0125E0  90D8               	bcf	status,0,c
 19676  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 19677  0125E4  6E3C               	movwf	(btemp+10)^0,c
 19678                           
 19679                           ;stkvar	_bexp @ sp[(-4)+1]
 19680  0125E6  0EFD               	movlw	-3
 19681  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19682                           
 19683                           ;stkvar	_b @ sp[(-4)+-4]
 19684  0125EE  0EFA               	movlw	250
 19685  0125F0  24E1               	addwf	fsr1l,w,c
 19686  0125F2  6ED9               	movwf	fsr2l,c
 19687  0125F4  0EFF               	movlw	255
 19688  0125F6  20E2               	addwfc	fsr1h,w,c
 19689  0125F8  6EDA               	movwf	fsr2h,c
 19690  0125FA  AEDF               	btfss	indf2,7,c
 19691  0125FC  D002               	goto	l6268
 19692                           
 19693                           ;stkvar	_bexp @ sp[(-4)+1]
 19694  0125FE  0EFD               	movlw	-3
 19695  012600  80E3               	bsf	plusw1,0,c
 19696  012602                     l6268:
 19697                           
 19698                           ;stkvar	_bexp @ sp[(-4)+1]
 19699  012602  0EFD               	movlw	-3
 19700  012604  50E3               	movf	plusw1,w,c
 19701  012606  B4D8               	btfsc	status,2,c
 19702  012608  D027               	goto	l6278
 19703                           
 19704                           ;stkvar	_bexp @ sp[(-4)+1]
 19705  01260A  0EFD               	movlw	-3
 19706  01260C  28E3               	incf	plusw1,w,c
 19707  01260E  A4D8               	btfss	status,2,c
 19708  012610  D018               	goto	l6274
 19709  012612  0E00               	movlw	0
 19710  012614  6E3A               	movwf	(btemp+8)^0,c
 19711  012616  0E00               	movlw	0
 19712  012618  6E3B               	movwf	(btemp+9)^0,c
 19713  01261A  0E00               	movlw	0
 19714  01261C  6E3C               	movwf	(btemp+10)^0,c
 19715  01261E  0E00               	movlw	0
 19716  012620  6E3D               	movwf	(btemp+11)^0,c
 19717                           
 19718                           ;stkvar	_b @ sp[(-4)+-4]
 19719  012622  0EF8               	movlw	-8
 19720  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19721  01262A  0EF9               	movlw	-7
 19722  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19723  012632  0EFA               	movlw	-6
 19724  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19725  01263A  0EFB               	movlw	-5
 19726  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19727  012642                     l6274:
 19728                           
 19729                           ;stkvar	_b @ sp[(-4)+-4]
 19730  012642  0EFA               	movlw	-6
 19731  012644  8EE3               	bsf	plusw1,7,c
 19732                           
 19733                           ;stkvar	_b @ sp[(-4)+-4]
 19734  012646  0EFB               	movlw	251
 19735  012648  24E1               	addwf	fsr1l,w,c
 19736  01264A  6ED9               	movwf	fsr2l,c
 19737  01264C  0EFF               	movlw	255
 19738  01264E  20E2               	addwfc	fsr1h,w,c
 19739  012650  6EDA               	movwf	fsr2h,c
 19740  012652  0E00               	movlw	0
 19741  012654  6EDF               	movwf	indf2,c
 19742  012656  D018               	goto	l6280
 19743  012658                     l6278:
 19744  012658  0E00               	movlw	0
 19745  01265A  6E3A               	movwf	(btemp+8)^0,c
 19746  01265C  0E00               	movlw	0
 19747  01265E  6E3B               	movwf	(btemp+9)^0,c
 19748  012660  0E00               	movlw	0
 19749  012662  6E3C               	movwf	(btemp+10)^0,c
 19750  012664  0E00               	movlw	0
 19751  012666  6E3D               	movwf	(btemp+11)^0,c
 19752                           
 19753                           ;stkvar	_b @ sp[(-4)+-4]
 19754  012668  0EF8               	movlw	-8
 19755  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19756  012670  0EF9               	movlw	-7
 19757  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19758  012678  0EFA               	movlw	-6
 19759  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19760  012680  0EFB               	movlw	-5
 19761  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19762  012688                     l6280:
 19763                           
 19764                           ;stkvar	_a @ sp[(-4)+-8]
 19765  012688  0EF7               	movlw	247
 19766  01268A  24E1               	addwf	fsr1l,w,c
 19767  01268C  6ED9               	movwf	fsr2l,c
 19768  01268E  0EFF               	movlw	255
 19769  012690  20E2               	addwfc	fsr1h,w,c
 19770  012692  6EDA               	movwf	fsr2h,c
 19771  012694  50DF               	movf	indf2,w,c
 19772  012696  6E3D               	movwf	(btemp+11)^0,c
 19773  012698  0E80               	movlw	128
 19774  01269A  163D               	andwf	(btemp+11)^0,f,c
 19775                           
 19776                           ;stkvar	_aexp @ sp[(-4)+2]
 19777  01269C  0EFE               	movlw	-2
 19778  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19779                           
 19780                           ;stkvar	_signs @ sp[(-4)+3]
 19781                           ;stkvar	_aexp @ sp[(-4)+2]
 19782  0126A4  50E1               	movf	fsr1l,w,c
 19783  0126A6  0FFE               	addlw	-2
 19784  0126A8  6ED9               	movwf	fsr2l,c
 19785  0126AA  50E2               	movf	fsr1h,w,c
 19786  0126AC  6EDA               	movwf	fsr2h,c
 19787  0126AE  0EFF               	movlw	255
 19788  0126B0  22DA               	addwfc	fsr2h,f,c
 19789  0126B2  0EFF               	movlw	-1
 19790  0126B4  50E3               	movf	plusw1,w,c
 19791  0126B6  18DE               	xorwf	postinc2,w,c
 19792  0126B8  B4D8               	btfsc	status,2,c
 19793  0126BA  D002               	goto	l6286
 19794                           
 19795                           ;stkvar	_signs @ sp[(-4)+3]
 19796  0126BC  0EFF               	movlw	-1
 19797  0126BE  8CE3               	bsf	plusw1,6,c
 19798  0126C0                     l6286:
 19799                           
 19800                           ;stkvar	_a @ sp[(-4)+-8]
 19801  0126C0  0EF7               	movlw	247
 19802  0126C2  24E1               	addwf	fsr1l,w,c
 19803  0126C4  6ED9               	movwf	fsr2l,c
 19804  0126C6  0EFF               	movlw	255
 19805  0126C8  20E2               	addwfc	fsr1h,w,c
 19806  0126CA  6EDA               	movwf	fsr2h,c
 19807  0126CC  50DF               	movf	indf2,w,c
 19808  0126CE  6E3D               	movwf	(btemp+11)^0,c
 19809  0126D0  90D8               	bcf	status,0,c
 19810  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 19811  0126D4  6E3C               	movwf	(btemp+10)^0,c
 19812                           
 19813                           ;stkvar	_aexp @ sp[(-4)+2]
 19814  0126D6  0EFE               	movlw	-2
 19815  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19816                           
 19817                           ;stkvar	_a @ sp[(-4)+-8]
 19818  0126DE  0EF6               	movlw	246
 19819  0126E0  24E1               	addwf	fsr1l,w,c
 19820  0126E2  6ED9               	movwf	fsr2l,c
 19821  0126E4  0EFF               	movlw	255
 19822  0126E6  20E2               	addwfc	fsr1h,w,c
 19823  0126E8  6EDA               	movwf	fsr2h,c
 19824  0126EA  AEDF               	btfss	indf2,7,c
 19825  0126EC  D002               	goto	l6292
 19826                           
 19827                           ;stkvar	_aexp @ sp[(-4)+2]
 19828  0126EE  0EFE               	movlw	-2
 19829  0126F0  80E3               	bsf	plusw1,0,c
 19830  0126F2                     l6292:
 19831                           
 19832                           ;stkvar	_aexp @ sp[(-4)+2]
 19833  0126F2  0EFE               	movlw	-2
 19834  0126F4  50E3               	movf	plusw1,w,c
 19835  0126F6  B4D8               	btfsc	status,2,c
 19836  0126F8  D027               	goto	l6302
 19837                           
 19838                           ;stkvar	_aexp @ sp[(-4)+2]
 19839  0126FA  0EFE               	movlw	-2
 19840  0126FC  28E3               	incf	plusw1,w,c
 19841  0126FE  A4D8               	btfss	status,2,c
 19842  012700  D018               	goto	l6298
 19843  012702  0E00               	movlw	0
 19844  012704  6E3A               	movwf	(btemp+8)^0,c
 19845  012706  0E00               	movlw	0
 19846  012708  6E3B               	movwf	(btemp+9)^0,c
 19847  01270A  0E00               	movlw	0
 19848  01270C  6E3C               	movwf	(btemp+10)^0,c
 19849  01270E  0E00               	movlw	0
 19850  012710  6E3D               	movwf	(btemp+11)^0,c
 19851                           
 19852                           ;stkvar	_a @ sp[(-4)+-8]
 19853  012712  0EF4               	movlw	-12
 19854  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19855  01271A  0EF5               	movlw	-11
 19856  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19857  012722  0EF6               	movlw	-10
 19858  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19859  01272A  0EF7               	movlw	-9
 19860  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19861  012732                     l6298:
 19862                           
 19863                           ;stkvar	_a @ sp[(-4)+-8]
 19864  012732  0EF6               	movlw	-10
 19865  012734  8EE3               	bsf	plusw1,7,c
 19866                           
 19867                           ;stkvar	_a @ sp[(-4)+-8]
 19868  012736  0EF7               	movlw	247
 19869  012738  24E1               	addwf	fsr1l,w,c
 19870  01273A  6ED9               	movwf	fsr2l,c
 19871  01273C  0EFF               	movlw	255
 19872  01273E  20E2               	addwfc	fsr1h,w,c
 19873  012740  6EDA               	movwf	fsr2h,c
 19874  012742  0E00               	movlw	0
 19875  012744  6EDF               	movwf	indf2,c
 19876  012746  D018               	goto	l6304
 19877  012748                     l6302:
 19878  012748  0E00               	movlw	0
 19879  01274A  6E3A               	movwf	(btemp+8)^0,c
 19880  01274C  0E00               	movlw	0
 19881  01274E  6E3B               	movwf	(btemp+9)^0,c
 19882  012750  0E00               	movlw	0
 19883  012752  6E3C               	movwf	(btemp+10)^0,c
 19884  012754  0E00               	movlw	0
 19885  012756  6E3D               	movwf	(btemp+11)^0,c
 19886                           
 19887                           ;stkvar	_a @ sp[(-4)+-8]
 19888  012758  0EF4               	movlw	-12
 19889  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19890  012760  0EF5               	movlw	-11
 19891  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19892  012768  0EF6               	movlw	-10
 19893  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19894  012770  0EF7               	movlw	-9
 19895  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19896  012778                     l6304:
 19897                           
 19898                           ;stkvar	_bexp @ sp[(-4)+1]
 19899                           ;stkvar	_aexp @ sp[(-4)+2]
 19900  012778  50E1               	movf	fsr1l,w,c
 19901  01277A  0FFE               	addlw	-2
 19902  01277C  6ED9               	movwf	fsr2l,c
 19903  01277E  50E2               	movf	fsr1h,w,c
 19904  012780  6EDA               	movwf	fsr2h,c
 19905  012782  0EFF               	movlw	255
 19906  012784  22DA               	addwfc	fsr2h,f,c
 19907  012786  0EFD               	movlw	-3
 19908  012788  50E3               	movf	plusw1,w,c
 19909  01278A  5CDE               	subwf	postinc2,w,c
 19910  01278C  B0D8               	btfsc	status,0,c
 19911  01278E  D0A4               	goto	l6340
 19912                           
 19913                           ;stkvar	_signs @ sp[(-4)+3]
 19914  012790  0EFF               	movlw	-1
 19915  012792  ACE3               	btfss	plusw1,6,c
 19916  012794  D002               	goto	l6310
 19917                           
 19918                           ;stkvar	_signs @ sp[(-4)+3]
 19919  012796  0EFF               	movlw	-1
 19920  012798  7EE3               	btg	plusw1,7,c
 19921  01279A                     l6310:
 19922                           
 19923                           ;stkvar	_bexp @ sp[(-4)+1]
 19924                           ;stkvar	_grs @ sp[(-4)+0]
 19925  01279A  0EFD               	movlw	-3
 19926  01279C  006F FF8C  F032    	movff	plusw1,btemp
 19927  0127A2  0EFC               	movlw	-4
 19928  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19929                           
 19930                           ;stkvar	_aexp @ sp[(-4)+2]
 19931                           ;stkvar	_bexp @ sp[(-4)+1]
 19932  0127AA  0EFE               	movlw	-2
 19933  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 19934  0127B2  0EFD               	movlw	-3
 19935  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19936                           
 19937                           ;stkvar	_grs @ sp[(-4)+0]
 19938                           ;stkvar	_aexp @ sp[(-4)+2]
 19939  0127BA  0EFC               	movlw	-4
 19940  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 19941  0127C2  0EFE               	movlw	-2
 19942  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19943                           
 19944                           ;stkvar	_b @ sp[(-4)+-4]
 19945                           ;stkvar	_grs @ sp[(-4)+0]
 19946  0127CA  0EF8               	movlw	-8
 19947  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 19948  0127D2  0EFC               	movlw	-4
 19949  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19950                           
 19951                           ;stkvar	_a @ sp[(-4)+-8]
 19952                           ;stkvar	_b @ sp[(-4)+-4]
 19953  0127DA  0EF4               	movlw	-12
 19954  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 19955  0127E2  0EF8               	movlw	-8
 19956  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19957                           
 19958                           ;stkvar	_grs @ sp[(-4)+0]
 19959                           ;stkvar	_a @ sp[(-4)+-8]
 19960  0127EA  0EFC               	movlw	-4
 19961  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 19962  0127F2  0EF4               	movlw	-12
 19963  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19964                           
 19965                           ;stkvar	_b @ sp[(-4)+-4]
 19966  0127FA  0EF9               	movlw	249
 19967  0127FC  24E1               	addwf	fsr1l,w,c
 19968  0127FE  6ED9               	movwf	fsr2l,c
 19969  012800  0EFF               	movlw	255
 19970  012802  20E2               	addwfc	fsr1h,w,c
 19971  012804  6EDA               	movwf	fsr2h,c
 19972  012806  50DF               	movf	indf2,w,c
 19973  012808  6E3D               	movwf	(btemp+11)^0,c
 19974                           
 19975                           ;stkvar	_grs @ sp[(-4)+0]
 19976  01280A  0EFC               	movlw	-4
 19977  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19978                           
 19979                           ;stkvar	_a @ sp[(-4)+-8]
 19980  012812  0EF5               	movlw	245
 19981  012814  24E1               	addwf	fsr1l,w,c
 19982  012816  6ED9               	movwf	fsr2l,c
 19983  012818  0EFF               	movlw	255
 19984  01281A  20E2               	addwfc	fsr1h,w,c
 19985  01281C  6EDA               	movwf	fsr2h,c
 19986                           
 19987                           ;stkvar	_b @ sp[(-4)+-4]
 19988  01281E  0EF9               	movlw	249
 19989  012820  24E1               	addwf	fsr1l,w,c
 19990  012822  6EE9               	movwf	fsr0l,c
 19991  012824  0EFF               	movlw	255
 19992  012826  20E2               	addwfc	fsr1h,w,c
 19993  012828  6EEA               	movwf	fsr0h,c
 19994  01282A  006F FF7F FFEF     	movff	indf2,indf0
 19995                           
 19996                           ;stkvar	_grs @ sp[(-4)+0]
 19997                           ;stkvar	_a @ sp[(-4)+-8]
 19998  012830  0EF5               	movlw	245
 19999  012832  24E1               	addwf	fsr1l,w,c
 20000  012834  6ED9               	movwf	fsr2l,c
 20001  012836  0EFF               	movlw	255
 20002  012838  20E2               	addwfc	fsr1h,w,c
 20003  01283A  6EDA               	movwf	fsr2h,c
 20004  01283C  0EFC               	movlw	-4
 20005  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 20006                           
 20007                           ;stkvar	_b @ sp[(-4)+-4]
 20008  012844  0EFA               	movlw	250
 20009  012846  24E1               	addwf	fsr1l,w,c
 20010  012848  6ED9               	movwf	fsr2l,c
 20011  01284A  0EFF               	movlw	255
 20012  01284C  20E2               	addwfc	fsr1h,w,c
 20013  01284E  6EDA               	movwf	fsr2h,c
 20014  012850  50DF               	movf	indf2,w,c
 20015  012852  6E3D               	movwf	(btemp+11)^0,c
 20016                           
 20017                           ;stkvar	_grs @ sp[(-4)+0]
 20018  012854  0EFC               	movlw	-4
 20019  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20020                           
 20021                           ;stkvar	_a @ sp[(-4)+-8]
 20022  01285C  0EF6               	movlw	246
 20023  01285E  24E1               	addwf	fsr1l,w,c
 20024  012860  6ED9               	movwf	fsr2l,c
 20025  012862  0EFF               	movlw	255
 20026  012864  20E2               	addwfc	fsr1h,w,c
 20027  012866  6EDA               	movwf	fsr2h,c
 20028                           
 20029                           ;stkvar	_b @ sp[(-4)+-4]
 20030  012868  0EFA               	movlw	250
 20031  01286A  24E1               	addwf	fsr1l,w,c
 20032  01286C  6EE9               	movwf	fsr0l,c
 20033  01286E  0EFF               	movlw	255
 20034  012870  20E2               	addwfc	fsr1h,w,c
 20035  012872  6EEA               	movwf	fsr0h,c
 20036  012874  006F FF7F FFEF     	movff	indf2,indf0
 20037                           
 20038                           ;stkvar	_grs @ sp[(-4)+0]
 20039                           ;stkvar	_a @ sp[(-4)+-8]
 20040  01287A  0EF6               	movlw	246
 20041  01287C  24E1               	addwf	fsr1l,w,c
 20042  01287E  6ED9               	movwf	fsr2l,c
 20043  012880  0EFF               	movlw	255
 20044  012882  20E2               	addwfc	fsr1h,w,c
 20045  012884  6EDA               	movwf	fsr2h,c
 20046  012886  0EFC               	movlw	-4
 20047  012888  006F FF8F FFDF     	movff	plusw1,indf2
 20048                           
 20049                           ;stkvar	_b @ sp[(-4)+-4]
 20050  01288E  0EFB               	movlw	251
 20051  012890  24E1               	addwf	fsr1l,w,c
 20052  012892  6ED9               	movwf	fsr2l,c
 20053  012894  0EFF               	movlw	255
 20054  012896  20E2               	addwfc	fsr1h,w,c
 20055  012898  6EDA               	movwf	fsr2h,c
 20056  01289A  50DF               	movf	indf2,w,c
 20057  01289C  6E3D               	movwf	(btemp+11)^0,c
 20058                           
 20059                           ;stkvar	_grs @ sp[(-4)+0]
 20060  01289E  0EFC               	movlw	-4
 20061  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20062                           
 20063                           ;stkvar	_a @ sp[(-4)+-8]
 20064  0128A6  0EF7               	movlw	247
 20065  0128A8  24E1               	addwf	fsr1l,w,c
 20066  0128AA  6ED9               	movwf	fsr2l,c
 20067  0128AC  0EFF               	movlw	255
 20068  0128AE  20E2               	addwfc	fsr1h,w,c
 20069  0128B0  6EDA               	movwf	fsr2h,c
 20070                           
 20071                           ;stkvar	_b @ sp[(-4)+-4]
 20072  0128B2  0EFB               	movlw	251
 20073  0128B4  24E1               	addwf	fsr1l,w,c
 20074  0128B6  6EE9               	movwf	fsr0l,c
 20075  0128B8  0EFF               	movlw	255
 20076  0128BA  20E2               	addwfc	fsr1h,w,c
 20077  0128BC  6EEA               	movwf	fsr0h,c
 20078  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 20079                           
 20080                           ;stkvar	_grs @ sp[(-4)+0]
 20081                           ;stkvar	_a @ sp[(-4)+-8]
 20082  0128C4  0EF7               	movlw	247
 20083  0128C6  24E1               	addwf	fsr1l,w,c
 20084  0128C8  6ED9               	movwf	fsr2l,c
 20085  0128CA  0EFF               	movlw	255
 20086  0128CC  20E2               	addwfc	fsr1h,w,c
 20087  0128CE  6EDA               	movwf	fsr2h,c
 20088  0128D0  0EFC               	movlw	-4
 20089  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 20090  0128D8                     l6340:
 20091                           
 20092                           ;stkvar	_grs @ sp[(-4)+0]
 20093  0128D8  0EFC               	movlw	-4
 20094  0128DA  6AE3               	clrf	plusw1,c
 20095                           
 20096                           ;stkvar	_aexp @ sp[(-4)+2]
 20097  0128DC  0EFE               	movlw	-2
 20098  0128DE  50E3               	movf	plusw1,w,c
 20099  0128E0  6E3C               	movwf	(btemp+10)^0,c
 20100  0128E2  6A3D               	clrf	(btemp+11)^0,c
 20101                           
 20102                           ;stkvar	_bexp @ sp[(-4)+1]
 20103  0128E4  0EFD               	movlw	-3
 20104  0128E6  50E3               	movf	plusw1,w,c
 20105  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 20106  0128EA  0E00               	movlw	0
 20107  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 20108  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 20109  0128F0  D062               	goto	l6364
 20110  0128F2  503D               	movf	(btemp+11)^0,w,c
 20111  0128F4  E104               	bnz	u4670
 20112  0128F6  0E1A               	movlw	26
 20113  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 20114  0128FA  A0D8               	btfss	status,0,c
 20115  0128FC  D05C               	goto	l6364
 20116  0128FE                     u4670:
 20117                           
 20118                           ;stkvar	_b @ sp[(-4)+-4]
 20119  0128FE  0EF8               	movlw	-8
 20120  012900  50E3               	movf	plusw1,w,c
 20121  012902  E10A               	bnz	u4681
 20122  012904  0EF9               	movlw	-7
 20123  012906  50E3               	movf	plusw1,w,c
 20124  012908  E107               	bnz	u4681
 20125  01290A  0EFA               	movlw	-6
 20126  01290C  50E3               	movf	plusw1,w,c
 20127  01290E  E104               	bnz	u4681
 20128  012910  0EFB               	movlw	-5
 20129  012912  50E3               	movf	plusw1,w,c
 20130  012914  B4D8               	btfsc	status,2,c
 20131  012916  D003               	goto	u4680
 20132  012918                     u4681:
 20133  012918  6A3D               	clrf	(btemp+11)^0,c
 20134  01291A  2A3D               	incf	(btemp+11)^0,f,c
 20135  01291C  D001               	goto	u4698
 20136  01291E                     u4680:
 20137  01291E  6A3D               	clrf	(btemp+11)^0,c
 20138  012920                     u4698:
 20139                           
 20140                           ;stkvar	_grs @ sp[(-4)+0]
 20141  012920  0EFC               	movlw	-4
 20142  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20143                           
 20144                           ;stkvar	_b @ sp[(-4)+-4]
 20145  012928  0EF8               	movlw	-8
 20146  01292A  6AE3               	clrf	plusw1,c
 20147  01292C  0EF9               	movlw	-7
 20148  01292E  6AE3               	clrf	plusw1,c
 20149  012930  0EFA               	movlw	-6
 20150  012932  6AE3               	clrf	plusw1,c
 20151  012934  0EFB               	movlw	-5
 20152  012936  6AE3               	clrf	plusw1,c
 20153                           
 20154                           ;stkvar	_aexp @ sp[(-4)+2]
 20155                           ;stkvar	_bexp @ sp[(-4)+1]
 20156  012938  0EFE               	movlw	-2
 20157  01293A  006F FF8C  F032    	movff	plusw1,btemp
 20158  012940  0EFD               	movlw	-3
 20159  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 20160  012948  D042               	goto	u4730
 20161  01294A                     l6350:
 20162                           
 20163                           ;stkvar	_grs @ sp[(-4)+0]
 20164  01294A  0EFC               	movlw	-4
 20165  01294C  A0E3               	btfss	plusw1,0,c
 20166  01294E  D00D               	goto	l6354
 20167                           
 20168                           ;stkvar	_grs @ sp[(-4)+0]
 20169  012950  0EFC               	movlw	-4
 20170  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 20171  012958  90D8               	bcf	status,0,c
 20172  01295A  323D               	rrcf	(btemp+11)^0,f,c
 20173  01295C  0E01               	movlw	1
 20174  01295E  123D               	iorwf	(btemp+11)^0,f,c
 20175                           
 20176                           ;stkvar	_grs @ sp[(-4)+0]
 20177  012960  0EFC               	movlw	-4
 20178  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20179  012968  D009               	goto	l6356
 20180  01296A                     l6354:
 20181                           
 20182                           ;stkvar	_grs @ sp[(-4)+0]
 20183  01296A  50E1               	movf	fsr1l,w,c
 20184  01296C  0FFC               	addlw	-4
 20185  01296E  6ED9               	movwf	fsr2l,c
 20186  012970  50E2               	movf	fsr1h,w,c
 20187  012972  6EDA               	movwf	fsr2h,c
 20188  012974  0EFF               	movlw	255
 20189  012976  22DA               	addwfc	fsr2h,f,c
 20190  012978  90D8               	bcf	status,0,c
 20191  01297A  32DF               	rrcf	indf2,f,c
 20192  01297C                     l6356:
 20193                           
 20194                           ;stkvar	_b @ sp[(-4)+-4]
 20195  01297C  0EF8               	movlw	-8
 20196  01297E  A0E3               	btfss	plusw1,0,c
 20197  012980  D002               	goto	l6360
 20198                           
 20199                           ;stkvar	_grs @ sp[(-4)+0]
 20200  012982  0EFC               	movlw	-4
 20201  012984  8EE3               	bsf	plusw1,7,c
 20202  012986                     l6360:
 20203  012986  0E01               	movlw	1
 20204  012988  6E3D               	movwf	(btemp+11)^0,c
 20205                           
 20206                           ;stkvar	_b @ sp[(-4)+-4]
 20207  01298A  50E1               	movf	fsr1l,w,c
 20208  01298C  0FF8               	addlw	-8
 20209  01298E  6ED9               	movwf	fsr2l,c
 20210  012990  50E2               	movf	fsr1h,w,c
 20211  012992  6EDA               	movwf	fsr2h,c
 20212  012994  0EFF               	movlw	255
 20213  012996  22DA               	addwfc	fsr2h,f,c
 20214  012998  283D               	incf	(btemp+11)^0,w,c
 20215  01299A  52DE               	movf	postinc2,f,c
 20216  01299C  D008               	goto	u4720
 20217  01299E                     u4725:
 20218  01299E  52DE               	movf	postinc2,f,c
 20219  0129A0  90D8               	bcf	status,0,c
 20220  0129A2  BEDC               	btfsc	preinc2,7,c
 20221  0129A4  80D8               	bsf	status,0,c
 20222  0129A6  32DD               	rrcf	postdec2,f,c
 20223  0129A8  32DD               	rrcf	postdec2,f,c
 20224  0129AA  32DD               	rrcf	postdec2,f,c
 20225  0129AC  32DE               	rrcf	postinc2,f,c
 20226  0129AE                     u4720:
 20227  0129AE  2EE8               	decfsz	wreg,f,c
 20228  0129B0  D7F6               	goto	u4725
 20229                           
 20230                           ;stkvar	_bexp @ sp[(-4)+1]
 20231  0129B2  0EFD               	movlw	-3
 20232  0129B4  2AE3               	incf	plusw1,f,c
 20233  0129B6                     l6364:
 20234                           
 20235                           ;stkvar	_aexp @ sp[(-4)+2]
 20236                           ;stkvar	_bexp @ sp[(-4)+1]
 20237  0129B6  50E1               	movf	fsr1l,w,c
 20238  0129B8  0FFD               	addlw	-3
 20239  0129BA  6ED9               	movwf	fsr2l,c
 20240  0129BC  50E2               	movf	fsr1h,w,c
 20241  0129BE  6EDA               	movwf	fsr2h,c
 20242  0129C0  0EFF               	movlw	255
 20243  0129C2  22DA               	addwfc	fsr2h,f,c
 20244  0129C4  0EFE               	movlw	-2
 20245  0129C6  50E3               	movf	plusw1,w,c
 20246  0129C8  5CDE               	subwf	postinc2,w,c
 20247  0129CA  A0D8               	btfss	status,0,c
 20248  0129CC  D7BE               	goto	l6350
 20249  0129CE                     u4730:
 20250                           
 20251                           ;stkvar	_signs @ sp[(-4)+3]
 20252  0129CE  0EFF               	movlw	-1
 20253  0129D0  BCE3               	btfsc	plusw1,6,c
 20254  0129D2  D066               	goto	l6392
 20255                           
 20256                           ;stkvar	_bexp @ sp[(-4)+1]
 20257  0129D4  0EFD               	movlw	-3
 20258  0129D6  50E3               	movf	plusw1,w,c
 20259  0129D8  B4D8               	btfsc	status,2,c
 20260  0129DA  D0F2               	goto	u4830
 20261                           
 20262                           ;stkvar	_a @ sp[(-4)+-8]
 20263                           ;stkvar	_b @ sp[(-4)+-4]
 20264  0129DC  0EF8               	movlw	-8
 20265  0129DE  50E3               	movf	plusw1,w,c
 20266  0129E0  6E32               	movwf	btemp^0,c
 20267  0129E2  0EF4               	movlw	-12
 20268  0129E4  50E3               	movf	plusw1,w,c
 20269  0129E6  2632               	addwf	btemp^0,f,c
 20270  0129E8  0EF8               	movlw	-8
 20271  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 20272  0129F0  0EF9               	movlw	-7
 20273  0129F2  50E3               	movf	plusw1,w,c
 20274  0129F4  6E32               	movwf	btemp^0,c
 20275  0129F6  0EF5               	movlw	-11
 20276  0129F8  50E3               	movf	plusw1,w,c
 20277  0129FA  2232               	addwfc	btemp^0,f,c
 20278  0129FC  0EF9               	movlw	-7
 20279  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 20280  012A04  0EFA               	movlw	-6
 20281  012A06  50E3               	movf	plusw1,w,c
 20282  012A08  6E32               	movwf	btemp^0,c
 20283  012A0A  0EF6               	movlw	-10
 20284  012A0C  50E3               	movf	plusw1,w,c
 20285  012A0E  2232               	addwfc	btemp^0,f,c
 20286  012A10  0EFA               	movlw	-6
 20287  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 20288  012A18  0EFB               	movlw	-5
 20289  012A1A  50E3               	movf	plusw1,w,c
 20290  012A1C  6E32               	movwf	btemp^0,c
 20291  012A1E  0EF7               	movlw	-9
 20292  012A20  50E3               	movf	plusw1,w,c
 20293  012A22  2232               	addwfc	btemp^0,f,c
 20294  012A24  0EFB               	movlw	-5
 20295  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 20296                           
 20297                           ;stkvar	_b @ sp[(-4)+-4]
 20298  012A2C  0EFB               	movlw	-5
 20299  012A2E  A0E3               	btfss	plusw1,0,c
 20300  012A30  D101               	goto	u4870
 20301                           
 20302                           ;stkvar	_grs @ sp[(-4)+0]
 20303  012A32  0EFC               	movlw	-4
 20304  012A34  A0E3               	btfss	plusw1,0,c
 20305  012A36  D00D               	goto	l6382
 20306                           
 20307                           ;stkvar	_grs @ sp[(-4)+0]
 20308  012A38  0EFC               	movlw	-4
 20309  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20310  012A40  90D8               	bcf	status,0,c
 20311  012A42  323D               	rrcf	(btemp+11)^0,f,c
 20312  012A44  0E01               	movlw	1
 20313  012A46  123D               	iorwf	(btemp+11)^0,f,c
 20314                           
 20315                           ;stkvar	_grs @ sp[(-4)+0]
 20316  012A48  0EFC               	movlw	-4
 20317  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20318  012A50  D009               	goto	l6384
 20319  012A52                     l6382:
 20320                           
 20321                           ;stkvar	_grs @ sp[(-4)+0]
 20322  012A52  50E1               	movf	fsr1l,w,c
 20323  012A54  0FFC               	addlw	-4
 20324  012A56  6ED9               	movwf	fsr2l,c
 20325  012A58  50E2               	movf	fsr1h,w,c
 20326  012A5A  6EDA               	movwf	fsr2h,c
 20327  012A5C  0EFF               	movlw	255
 20328  012A5E  22DA               	addwfc	fsr2h,f,c
 20329  012A60  90D8               	bcf	status,0,c
 20330  012A62  32DF               	rrcf	indf2,f,c
 20331  012A64                     l6384:
 20332                           
 20333                           ;stkvar	_b @ sp[(-4)+-4]
 20334  012A64  0EF8               	movlw	-8
 20335  012A66  A0E3               	btfss	plusw1,0,c
 20336  012A68  D002               	goto	l6388
 20337                           
 20338                           ;stkvar	_grs @ sp[(-4)+0]
 20339  012A6A  0EFC               	movlw	-4
 20340  012A6C  8EE3               	bsf	plusw1,7,c
 20341  012A6E                     l6388:
 20342  012A6E  0E01               	movlw	1
 20343  012A70  6E3D               	movwf	(btemp+11)^0,c
 20344                           
 20345                           ;stkvar	_b @ sp[(-4)+-4]
 20346  012A72  50E1               	movf	fsr1l,w,c
 20347  012A74  0FF8               	addlw	-8
 20348  012A76  6ED9               	movwf	fsr2l,c
 20349  012A78  50E2               	movf	fsr1h,w,c
 20350  012A7A  6EDA               	movwf	fsr2h,c
 20351  012A7C  0EFF               	movlw	255
 20352  012A7E  22DA               	addwfc	fsr2h,f,c
 20353  012A80  283D               	incf	(btemp+11)^0,w,c
 20354  012A82  52DE               	movf	postinc2,f,c
 20355  012A84  D008               	goto	u4790
 20356  012A86                     u4795:
 20357  012A86  52DE               	movf	postinc2,f,c
 20358  012A88  90D8               	bcf	status,0,c
 20359  012A8A  BEDC               	btfsc	preinc2,7,c
 20360  012A8C  80D8               	bsf	status,0,c
 20361  012A8E  32DD               	rrcf	postdec2,f,c
 20362  012A90  32DD               	rrcf	postdec2,f,c
 20363  012A92  32DD               	rrcf	postdec2,f,c
 20364  012A94  32DE               	rrcf	postinc2,f,c
 20365  012A96                     u4790:
 20366  012A96  2EE8               	decfsz	wreg,f,c
 20367  012A98  D7F6               	goto	u4795
 20368                           
 20369                           ;stkvar	_bexp @ sp[(-4)+1]
 20370  012A9A  0EFD               	movlw	-3
 20371  012A9C  2AE3               	incf	plusw1,f,c
 20372  012A9E  D0CA               	goto	u4870
 20373  012AA0                     l6392:
 20374                           
 20375                           ;stkvar	_a @ sp[(-4)+-8]
 20376                           ;stkvar	_b @ sp[(-4)+-4]
 20377  012AA0  50E1               	movf	fsr1l,w,c
 20378  012AA2  0FF8               	addlw	-8
 20379  012AA4  6ED9               	movwf	fsr2l,c
 20380  012AA6  50E2               	movf	fsr1h,w,c
 20381  012AA8  6EDA               	movwf	fsr2h,c
 20382  012AAA  0EFF               	movlw	255
 20383  012AAC  22DA               	addwfc	fsr2h,f,c
 20384  012AAE  0EF4               	movlw	-12
 20385  012AB0  50E3               	movf	plusw1,w,c
 20386  012AB2  5CDE               	subwf	postinc2,w,c
 20387  012AB4  0EF5               	movlw	-11
 20388  012AB6  50E3               	movf	plusw1,w,c
 20389  012AB8  58DE               	subwfb	postinc2,w,c
 20390  012ABA  0EF6               	movlw	-10
 20391  012ABC  50E3               	movf	plusw1,w,c
 20392  012ABE  58DE               	subwfb	postinc2,w,c
 20393  012AC0  50DE               	movf	postinc2,w,c
 20394  012AC2  0A80               	xorlw	128
 20395  012AC4  6E32               	movwf	btemp^0,c
 20396  012AC6  0EF7               	movlw	-9
 20397  012AC8  50E3               	movf	plusw1,w,c
 20398  012ACA  0A80               	xorlw	128
 20399  012ACC  5832               	subwfb	btemp^0,w,c
 20400  012ACE  B0D8               	btfsc	status,0,c
 20401  012AD0  D053               	goto	l6404
 20402                           
 20403                           ;stkvar	_b @ sp[(-4)+-4]
 20404                           ;stkvar	_a @ sp[(-4)+-8]
 20405  012AD2  0EF4               	movlw	-12
 20406  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20407  012ADA  0EF5               	movlw	-11
 20408  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20409  012AE2  0EF6               	movlw	-10
 20410  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20411  012AEA  0EF7               	movlw	-9
 20412  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20413  012AF2  0EF8               	movlw	-8
 20414  012AF4  50E3               	movf	plusw1,w,c
 20415  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20416  012AF8  0EF9               	movlw	-7
 20417  012AFA  50E3               	movf	plusw1,w,c
 20418  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20419  012AFE  0EFA               	movlw	-6
 20420  012B00  50E3               	movf	plusw1,w,c
 20421  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20422  012B04  0EFB               	movlw	-5
 20423  012B06  50E3               	movf	plusw1,w,c
 20424  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20425  012B0A  0EFF               	movlw	255
 20426  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20427  012B0E  6E36               	movwf	(btemp+4)^0,c
 20428  012B10  0EFF               	movlw	255
 20429  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20430  012B14  6E37               	movwf	(btemp+5)^0,c
 20431  012B16  0EFF               	movlw	255
 20432  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20433  012B1A  6E38               	movwf	(btemp+6)^0,c
 20434  012B1C  0EFF               	movlw	255
 20435  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20436  012B20  6E39               	movwf	(btemp+7)^0,c
 20437                           
 20438                           ;stkvar	_b @ sp[(-4)+-4]
 20439  012B22  0EF8               	movlw	-8
 20440  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20441  012B2A  0EF9               	movlw	-7
 20442  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20443  012B32  0EFA               	movlw	-6
 20444  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20445  012B3A  0EFB               	movlw	-5
 20446  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20447                           
 20448                           ;stkvar	_signs @ sp[(-4)+3]
 20449  012B42  0EFF               	movlw	-1
 20450  012B44  7EE3               	btg	plusw1,7,c
 20451                           
 20452                           ;stkvar	_grs @ sp[(-4)+0]
 20453  012B46  0EFC               	movlw	-4
 20454  012B48  50E3               	movf	plusw1,w,c
 20455  012B4A  0800               	sublw	0
 20456  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20457                           
 20458                           ;stkvar	_grs @ sp[(-4)+0]
 20459  012B4E  0EFC               	movlw	-4
 20460  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20461                           
 20462                           ;stkvar	_grs @ sp[(-4)+0]
 20463  012B56  0EFC               	movlw	-4
 20464  012B58  50E3               	movf	plusw1,w,c
 20465  012B5A  A4D8               	btfss	status,2,c
 20466  012B5C  D020               	goto	l6406
 20467                           
 20468                           ;stkvar	_b @ sp[(-4)+-4]
 20469  012B5E  50E1               	movf	fsr1l,w,c
 20470  012B60  0FF8               	addlw	-8
 20471  012B62  6ED9               	movwf	fsr2l,c
 20472  012B64  50E2               	movf	fsr1h,w,c
 20473  012B66  6EDA               	movwf	fsr2h,c
 20474  012B68  0EFF               	movlw	255
 20475  012B6A  22DA               	addwfc	fsr2h,f,c
 20476  012B6C  2ADE               	incf	postinc2,f,c
 20477  012B6E  0E00               	movlw	0
 20478  012B70  22DE               	addwfc	postinc2,f,c
 20479  012B72  22DE               	addwfc	postinc2,f,c
 20480  012B74  22DE               	addwfc	postinc2,f,c
 20481  012B76  D013               	goto	l6406
 20482  012B78                     l6404:
 20483                           
 20484                           ;stkvar	_a @ sp[(-4)+-8]
 20485                           ;stkvar	_b @ sp[(-4)+-4]
 20486  012B78  50E1               	movf	fsr1l,w,c
 20487  012B7A  0FF8               	addlw	-8
 20488  012B7C  6ED9               	movwf	fsr2l,c
 20489  012B7E  50E2               	movf	fsr1h,w,c
 20490  012B80  6EDA               	movwf	fsr2h,c
 20491  012B82  0EFF               	movlw	255
 20492  012B84  22DA               	addwfc	fsr2h,f,c
 20493  012B86  0EF4               	movlw	-12
 20494  012B88  50E3               	movf	plusw1,w,c
 20495  012B8A  5EDE               	subwf	postinc2,f,c
 20496  012B8C  0EF5               	movlw	-11
 20497  012B8E  50E3               	movf	plusw1,w,c
 20498  012B90  5ADE               	subwfb	postinc2,f,c
 20499  012B92  0EF6               	movlw	-10
 20500  012B94  50E3               	movf	plusw1,w,c
 20501  012B96  5ADE               	subwfb	postinc2,f,c
 20502  012B98  0EF7               	movlw	-9
 20503  012B9A  50E3               	movf	plusw1,w,c
 20504  012B9C  5ADE               	subwfb	postinc2,f,c
 20505  012B9E                     l6406:
 20506                           
 20507                           ;stkvar	_b @ sp[(-4)+-4]
 20508  012B9E  0EF8               	movlw	-8
 20509  012BA0  50E3               	movf	plusw1,w,c
 20510  012BA2  E145               	bnz	l6428
 20511  012BA4  0EF9               	movlw	-7
 20512  012BA6  50E3               	movf	plusw1,w,c
 20513  012BA8  E142               	bnz	l6428
 20514  012BAA  0EFA               	movlw	-6
 20515  012BAC  50E3               	movf	plusw1,w,c
 20516  012BAE  E13F               	bnz	l6428
 20517  012BB0  0EFB               	movlw	-5
 20518  012BB2  50E3               	movf	plusw1,w,c
 20519  012BB4  A4D8               	btfss	status,2,c
 20520  012BB6  D03B               	goto	l6428
 20521                           
 20522                           ;stkvar	_grs @ sp[(-4)+0]
 20523  012BB8  0EFC               	movlw	-4
 20524  012BBA  50E3               	movf	plusw1,w,c
 20525  012BBC  A4D8               	btfss	status,2,c
 20526  012BBE  D037               	goto	l6428
 20527  012BC0                     u4830:
 20528  012BC0  0E00               	movlw	0
 20529  012BC2  6E32               	movwf	btemp^0,c
 20530  012BC4  0E00               	movlw	0
 20531  012BC6  6E33               	movwf	(btemp+1)^0,c
 20532  012BC8  0E00               	movlw	0
 20533  012BCA  6E34               	movwf	(btemp+2)^0,c
 20534  012BCC  0E00               	movlw	0
 20535  012BCE  6E35               	movwf	(btemp+3)^0,c
 20536  012BD0  D0C6               	goto	l2606
 20537  012BD2                     l6414:
 20538                           
 20539                           ;stkvar	_b @ sp[(-4)+-4]
 20540  012BD2  90D8               	bcf	status,0,c
 20541  012BD4  0EF8               	movlw	-8
 20542  012BD6  36E3               	rlcf	plusw1,f,c
 20543  012BD8  0EF9               	movlw	-7
 20544  012BDA  36E3               	rlcf	plusw1,f,c
 20545  012BDC  0EFA               	movlw	-6
 20546  012BDE  36E3               	rlcf	plusw1,f,c
 20547  012BE0  0EFB               	movlw	-5
 20548  012BE2  36E3               	rlcf	plusw1,f,c
 20549                           
 20550                           ;stkvar	_grs @ sp[(-4)+0]
 20551  012BE4  0EFC               	movlw	-4
 20552  012BE6  AEE3               	btfss	plusw1,7,c
 20553  012BE8  D002               	goto	l2618
 20554                           
 20555                           ;stkvar	_b @ sp[(-4)+-4]
 20556  012BEA  0EF8               	movlw	-8
 20557  012BEC  80E3               	bsf	plusw1,0,c
 20558  012BEE                     l2618:
 20559                           
 20560                           ;stkvar	_grs @ sp[(-4)+0]
 20561  012BEE  0EFC               	movlw	-4
 20562  012BF0  A0E3               	btfss	plusw1,0,c
 20563  012BF2  D00E               	goto	l6422
 20564                           
 20565                           ;stkvar	_grs @ sp[(-4)+0]
 20566  012BF4  0EFC               	movlw	-4
 20567  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20568  012BFC  90D8               	bcf	status,0,c
 20569  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20570  012C00  6E3C               	movwf	(btemp+10)^0,c
 20571  012C02  0E01               	movlw	1
 20572  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20573                           
 20574                           ;stkvar	_grs @ sp[(-4)+0]
 20575  012C06  0EFC               	movlw	-4
 20576  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20577  012C0E  D009               	goto	l6424
 20578  012C10                     l6422:
 20579                           
 20580                           ;stkvar	_grs @ sp[(-4)+0]
 20581  012C10  50E1               	movf	fsr1l,w,c
 20582  012C12  0FFC               	addlw	-4
 20583  012C14  6ED9               	movwf	fsr2l,c
 20584  012C16  50E2               	movf	fsr1h,w,c
 20585  012C18  6EDA               	movwf	fsr2h,c
 20586  012C1A  0EFF               	movlw	255
 20587  012C1C  22DA               	addwfc	fsr2h,f,c
 20588  012C1E  90D8               	bcf	status,0,c
 20589  012C20  36DF               	rlcf	indf2,f,c
 20590  012C22                     l6424:
 20591                           
 20592                           ;stkvar	_bexp @ sp[(-4)+1]
 20593  012C22  0EFD               	movlw	-3
 20594  012C24  50E3               	movf	plusw1,w,c
 20595  012C26  B4D8               	btfsc	status,2,c
 20596  012C28  D002               	goto	l6428
 20597                           
 20598                           ;stkvar	_bexp @ sp[(-4)+1]
 20599  012C2A  0EFD               	movlw	-3
 20600  012C2C  06E3               	decf	plusw1,f,c
 20601  012C2E                     l6428:
 20602                           
 20603                           ;stkvar	_b @ sp[(-4)+-4]
 20604  012C2E  0EFA               	movlw	-6
 20605  012C30  AEE3               	btfss	plusw1,7,c
 20606  012C32  D7CF               	goto	l6414
 20607  012C34                     u4870:
 20608                           
 20609                           ;stkvar	_aexp @ sp[(-4)+2]
 20610  012C34  0EFE               	movlw	-2
 20611  012C36  6AE3               	clrf	plusw1,c
 20612                           
 20613                           ;stkvar	_grs @ sp[(-4)+0]
 20614  012C38  0EFC               	movlw	-4
 20615  012C3A  AEE3               	btfss	plusw1,7,c
 20616  012C3C  D00F               	goto	l6442
 20617                           
 20618                           ;stkvar	_grs @ sp[(-4)+0]
 20619  012C3E  0EFC               	movlw	-4
 20620  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20621  012C46  0E7F               	movlw	127
 20622  012C48  163D               	andwf	(btemp+11)^0,f,c
 20623  012C4A  B4D8               	btfsc	status,2,c
 20624  012C4C  D004               	goto	l6438
 20625  012C4E                     u4890:
 20626                           
 20627                           ;stkvar	_aexp @ sp[(-4)+2]
 20628  012C4E  0EFE               	movlw	-2
 20629  012C50  6AE3               	clrf	plusw1,c
 20630  012C52  2AE3               	incf	plusw1,f,c
 20631  012C54  D003               	goto	l6442
 20632  012C56                     l6438:
 20633                           
 20634                           ;stkvar	_b @ sp[(-4)+-4]
 20635  012C56  0EF8               	movlw	-8
 20636  012C58  B0E3               	btfsc	plusw1,0,c
 20637  012C5A  D7F9               	goto	u4890
 20638  012C5C                     l6442:
 20639                           
 20640                           ;stkvar	_aexp @ sp[(-4)+2]
 20641  012C5C  0EFE               	movlw	-2
 20642  012C5E  50E3               	movf	plusw1,w,c
 20643  012C60  B4D8               	btfsc	status,2,c
 20644  012C62  D02B               	goto	l6454
 20645                           
 20646                           ;stkvar	_b @ sp[(-4)+-4]
 20647  012C64  50E1               	movf	fsr1l,w,c
 20648  012C66  0FF8               	addlw	-8
 20649  012C68  6ED9               	movwf	fsr2l,c
 20650  012C6A  50E2               	movf	fsr1h,w,c
 20651  012C6C  6EDA               	movwf	fsr2h,c
 20652  012C6E  0EFF               	movlw	255
 20653  012C70  22DA               	addwfc	fsr2h,f,c
 20654  012C72  2ADE               	incf	postinc2,f,c
 20655  012C74  0E00               	movlw	0
 20656  012C76  22DE               	addwfc	postinc2,f,c
 20657  012C78  22DE               	addwfc	postinc2,f,c
 20658  012C7A  22DE               	addwfc	postinc2,f,c
 20659                           
 20660                           ;stkvar	_b @ sp[(-4)+-4]
 20661  012C7C  0EFB               	movlw	-5
 20662  012C7E  A0E3               	btfss	plusw1,0,c
 20663  012C80  D01C               	goto	l6454
 20664  012C82  0E01               	movlw	1
 20665  012C84  6E3D               	movwf	(btemp+11)^0,c
 20666                           
 20667                           ;stkvar	_b @ sp[(-4)+-4]
 20668  012C86  50E1               	movf	fsr1l,w,c
 20669  012C88  0FF8               	addlw	-8
 20670  012C8A  6ED9               	movwf	fsr2l,c
 20671  012C8C  50E2               	movf	fsr1h,w,c
 20672  012C8E  6EDA               	movwf	fsr2h,c
 20673  012C90  0EFF               	movlw	255
 20674  012C92  22DA               	addwfc	fsr2h,f,c
 20675  012C94  283D               	incf	(btemp+11)^0,w,c
 20676  012C96  52DE               	movf	postinc2,f,c
 20677  012C98  D008               	goto	u4930
 20678  012C9A                     u4935:
 20679  012C9A  52DE               	movf	postinc2,f,c
 20680  012C9C  90D8               	bcf	status,0,c
 20681  012C9E  BEDC               	btfsc	preinc2,7,c
 20682  012CA0  80D8               	bsf	status,0,c
 20683  012CA2  32DD               	rrcf	postdec2,f,c
 20684  012CA4  32DD               	rrcf	postdec2,f,c
 20685  012CA6  32DD               	rrcf	postdec2,f,c
 20686  012CA8  32DE               	rrcf	postinc2,f,c
 20687  012CAA                     u4930:
 20688  012CAA  2EE8               	decfsz	wreg,f,c
 20689  012CAC  D7F6               	goto	u4935
 20690                           
 20691                           ;stkvar	_bexp @ sp[(-4)+1]
 20692  012CAE  0EFD               	movlw	-3
 20693  012CB0  28E3               	incf	plusw1,w,c
 20694  012CB2  B4D8               	btfsc	status,2,c
 20695  012CB4  D002               	goto	l6454
 20696                           
 20697                           ;stkvar	_bexp @ sp[(-4)+1]
 20698  012CB6  0EFD               	movlw	-3
 20699  012CB8  2AE3               	incf	plusw1,f,c
 20700  012CBA                     l6454:
 20701                           
 20702                           ;stkvar	_bexp @ sp[(-4)+1]
 20703  012CBA  0EFD               	movlw	-3
 20704  012CBC  28E3               	incf	plusw1,w,c
 20705  012CBE  B4D8               	btfsc	status,2,c
 20706  012CC0  D004               	goto	u4960
 20707                           
 20708                           ;stkvar	_bexp @ sp[(-4)+1]
 20709  012CC2  0EFD               	movlw	-3
 20710  012CC4  50E3               	movf	plusw1,w,c
 20711  012CC6  A4D8               	btfss	status,2,c
 20712  012CC8  D00E               	goto	l6464
 20713  012CCA                     u4960:
 20714                           
 20715                           ;stkvar	_b @ sp[(-4)+-4]
 20716  012CCA  0EF8               	movlw	-8
 20717  012CCC  6AE3               	clrf	plusw1,c
 20718  012CCE  0EF9               	movlw	-7
 20719  012CD0  6AE3               	clrf	plusw1,c
 20720  012CD2  0EFA               	movlw	-6
 20721  012CD4  6AE3               	clrf	plusw1,c
 20722  012CD6  0EFB               	movlw	-5
 20723  012CD8  6AE3               	clrf	plusw1,c
 20724                           
 20725                           ;stkvar	_bexp @ sp[(-4)+1]
 20726  012CDA  0EFD               	movlw	-3
 20727  012CDC  50E3               	movf	plusw1,w,c
 20728  012CDE  A4D8               	btfss	status,2,c
 20729  012CE0  D002               	goto	l6464
 20730                           
 20731                           ;stkvar	_signs @ sp[(-4)+3]
 20732  012CE2  0EFF               	movlw	-1
 20733  012CE4  6AE3               	clrf	plusw1,c
 20734  012CE6                     l6464:
 20735                           
 20736                           ;stkvar	_bexp @ sp[(-4)+1]
 20737  012CE6  0EFD               	movlw	-3
 20738  012CE8  A0E3               	btfss	plusw1,0,c
 20739  012CEA  D009               	goto	l6468
 20740                           
 20741                           ;stkvar	_b @ sp[(-4)+-4]
 20742  012CEC  0EFA               	movlw	250
 20743  012CEE  24E1               	addwf	fsr1l,w,c
 20744  012CF0  6ED9               	movwf	fsr2l,c
 20745  012CF2  0EFF               	movlw	255
 20746  012CF4  20E2               	addwfc	fsr1h,w,c
 20747  012CF6  6EDA               	movwf	fsr2h,c
 20748  012CF8  0E00               	movlw	0
 20749  012CFA  8EDB               	bsf	plusw2,7,c
 20750  012CFC  D008               	goto	l6470
 20751  012CFE                     l6468:
 20752                           
 20753                           ;stkvar	_b @ sp[(-4)+-4]
 20754  012CFE  0EFA               	movlw	250
 20755  012D00  24E1               	addwf	fsr1l,w,c
 20756  012D02  6ED9               	movwf	fsr2l,c
 20757  012D04  0EFF               	movlw	255
 20758  012D06  20E2               	addwfc	fsr1h,w,c
 20759  012D08  6EDA               	movwf	fsr2h,c
 20760  012D0A  0E7F               	movlw	127
 20761  012D0C  16DF               	andwf	indf2,f,c
 20762  012D0E                     l6470:
 20763                           
 20764                           ;stkvar	_b @ sp[(-4)+-4]
 20765  012D0E  0EFB               	movlw	251
 20766  012D10  24E1               	addwf	fsr1l,w,c
 20767  012D12  6ED9               	movwf	fsr2l,c
 20768  012D14  0EFF               	movlw	255
 20769  012D16  20E2               	addwfc	fsr1h,w,c
 20770  012D18  6EDA               	movwf	fsr2h,c
 20771                           
 20772                           ;stkvar	_bexp @ sp[(-4)+1]
 20773  012D1A  0EFD               	movlw	-3
 20774  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20775  012D22  90D8               	bcf	status,0,c
 20776  012D24  303D               	rrcf	(btemp+11)^0,w,c
 20777  012D26  6EDF               	movwf	indf2,c
 20778                           
 20779                           ;stkvar	_signs @ sp[(-4)+3]
 20780  012D28  0EFF               	movlw	-1
 20781  012D2A  AEE3               	btfss	plusw1,7,c
 20782  012D2C  D008               	goto	l6476
 20783                           
 20784                           ;stkvar	_b @ sp[(-4)+-4]
 20785  012D2E  0EFB               	movlw	251
 20786  012D30  24E1               	addwf	fsr1l,w,c
 20787  012D32  6ED9               	movwf	fsr2l,c
 20788  012D34  0EFF               	movlw	255
 20789  012D36  20E2               	addwfc	fsr1h,w,c
 20790  012D38  6EDA               	movwf	fsr2h,c
 20791  012D3A  0E00               	movlw	0
 20792  012D3C  8EDB               	bsf	plusw2,7,c
 20793  012D3E                     l6476:
 20794                           
 20795                           ;stkvar	_b @ sp[(-4)+-4]
 20796  012D3E  0EF8               	movlw	-8
 20797  012D40  006F FF8C  F032    	movff	plusw1,btemp
 20798  012D46  0EF9               	movlw	-7
 20799  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 20800  012D4E  0EFA               	movlw	-6
 20801  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 20802  012D56  0EFB               	movlw	-5
 20803  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 20804  012D5E                     l2606:
 20805                           
 20806                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20807  012D5E  0EF4               	movlw	244
 20808  012D60  26E1               	addwf	fsr1l,f,c
 20809  012D62  0EFF               	movlw	255
 20810  012D64  22E2               	addwfc	fsr1h,f,c
 20811  012D66  0012               	return		;funcret
 20812  012D68                     __end_of___fladd:
 20813                           	opt callstack 0
 20814                           
 20815 ;; *************** function ___flmul *****************
 20816 ;; Defined at:
 20817 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  b               4  [STACK] unsigned char 
 20820 ;;  a               4  [STACK] unsigned char 
 20821 ;; Auto vars:     Size  Location     Type
 20822 ;;  prod            4  [STACK] struct .
 20823 ;;  grs             4  [STACK] unsigned long 
 20824 ;;  temp            2  [STACK] struct .
 20825 ;;  bexp            1  [STACK] unsigned char 
 20826 ;;  aexp            1  [STACK] unsigned char 
 20827 ;;  sign            1  [STACK] unsigned char 
 20828 ;; Return value:  Size  Location     Type
 20829 ;;                  4  [STACK] unsigned char 
 20830 ;; Registers used:
 20831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20832 ;; Tracked objects:
 20833 ;;		On entry : 0/39
 20834 ;;		On exit  : 0/0
 20835 ;;		Unchanged: 0/0
 20836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20841 ;;Total ram usage:        0 bytes
 20842 ;; Hardware stack levels used:    1
 20843 ;; Hardware stack levels required when called:    6
 20844 ;; This function calls:
 20845 ;;		Nothing
 20846 ;; This function is called by:
 20847 ;;		_conv_raw_result
 20848 ;;		_lp_filter
 20849 ;;		_calc_model_data
 20850 ;;		_efgtoa
 20851 ;; This function uses a reentrant model
 20852 ;;
 20853                           
 20854                           	psect	text88
 20855  011D82                     __ptext88:
 20856                           	opt callstack 0
 20857  011D82                     ___flmul:
 20858                           	opt callstack 0
 20859                           
 20860                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20861  011D82  0E0D               	movlw	13
 20862  011D84  26E1               	addwf	fsr1l,f,c
 20863  011D86  0E00               	movlw	0
 20864  011D88  22E2               	addwfc	fsr1h,f,c
 20865                           
 20866                           ;stkvar	_b @ sp[(-13)+-4]
 20867                           
 20868                           ;incstack = 0
 20869  011D8A  0EF2               	movlw	242
 20870  011D8C  24E1               	addwf	fsr1l,w,c
 20871  011D8E  6ED9               	movwf	fsr2l,c
 20872  011D90  0EFF               	movlw	255
 20873  011D92  20E2               	addwfc	fsr1h,w,c
 20874  011D94  6EDA               	movwf	fsr2h,c
 20875  011D96  50DF               	movf	indf2,w,c
 20876  011D98  6E3D               	movwf	(btemp+11)^0,c
 20877  011D9A  0E80               	movlw	128
 20878  011D9C  163D               	andwf	(btemp+11)^0,f,c
 20879                           
 20880                           ;stkvar	_sign @ sp[(-13)+12]
 20881  011D9E  0EFF               	movlw	-1
 20882  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20883                           
 20884                           ;stkvar	_b @ sp[(-13)+-4]
 20885  011DA6  0EF2               	movlw	242
 20886  011DA8  24E1               	addwf	fsr1l,w,c
 20887  011DAA  6ED9               	movwf	fsr2l,c
 20888  011DAC  0EFF               	movlw	255
 20889  011DAE  20E2               	addwfc	fsr1h,w,c
 20890  011DB0  6EDA               	movwf	fsr2h,c
 20891  011DB2  50DF               	movf	indf2,w,c
 20892  011DB4  6E3D               	movwf	(btemp+11)^0,c
 20893  011DB6  90D8               	bcf	status,0,c
 20894  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 20895  011DBA  6E3C               	movwf	(btemp+10)^0,c
 20896                           
 20897                           ;stkvar	_bexp @ sp[(-13)+10]
 20898  011DBC  0EFD               	movlw	-3
 20899  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20900                           
 20901                           ;stkvar	_b @ sp[(-13)+-4]
 20902  011DC4  0EF1               	movlw	241
 20903  011DC6  24E1               	addwf	fsr1l,w,c
 20904  011DC8  6ED9               	movwf	fsr2l,c
 20905  011DCA  0EFF               	movlw	255
 20906  011DCC  20E2               	addwfc	fsr1h,w,c
 20907  011DCE  6EDA               	movwf	fsr2h,c
 20908  011DD0  AEDF               	btfss	indf2,7,c
 20909  011DD2  D002               	goto	l6860
 20910                           
 20911                           ;stkvar	_bexp @ sp[(-13)+10]
 20912  011DD4  0EFD               	movlw	-3
 20913  011DD6  80E3               	bsf	plusw1,0,c
 20914  011DD8                     l6860:
 20915                           
 20916                           ;stkvar	_bexp @ sp[(-13)+10]
 20917  011DD8  0EFD               	movlw	-3
 20918  011DDA  50E3               	movf	plusw1,w,c
 20919  011DDC  B4D8               	btfsc	status,2,c
 20920  011DDE  D01F               	goto	l6868
 20921                           
 20922                           ;stkvar	_bexp @ sp[(-13)+10]
 20923  011DE0  0EFD               	movlw	-3
 20924  011DE2  28E3               	incf	plusw1,w,c
 20925  011DE4  A4D8               	btfss	status,2,c
 20926  011DE6  D018               	goto	l6866
 20927  011DE8  0E00               	movlw	0
 20928  011DEA  6E3A               	movwf	(btemp+8)^0,c
 20929  011DEC  0E00               	movlw	0
 20930  011DEE  6E3B               	movwf	(btemp+9)^0,c
 20931  011DF0  0E00               	movlw	0
 20932  011DF2  6E3C               	movwf	(btemp+10)^0,c
 20933  011DF4  0E00               	movlw	0
 20934  011DF6  6E3D               	movwf	(btemp+11)^0,c
 20935                           
 20936                           ;stkvar	_b @ sp[(-13)+-4]
 20937  011DF8  0EEF               	movlw	-17
 20938  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20939  011E00  0EF0               	movlw	-16
 20940  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20941  011E08  0EF1               	movlw	-15
 20942  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20943  011E10  0EF2               	movlw	-14
 20944  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20945  011E18                     l6866:
 20946                           
 20947                           ;stkvar	_b @ sp[(-13)+-4]
 20948  011E18  0EF1               	movlw	-15
 20949  011E1A  8EE3               	bsf	plusw1,7,c
 20950  011E1C  D018               	goto	l6870
 20951  011E1E                     l6868:
 20952  011E1E  0E00               	movlw	0
 20953  011E20  6E3A               	movwf	(btemp+8)^0,c
 20954  011E22  0E00               	movlw	0
 20955  011E24  6E3B               	movwf	(btemp+9)^0,c
 20956  011E26  0E00               	movlw	0
 20957  011E28  6E3C               	movwf	(btemp+10)^0,c
 20958  011E2A  0E00               	movlw	0
 20959  011E2C  6E3D               	movwf	(btemp+11)^0,c
 20960                           
 20961                           ;stkvar	_b @ sp[(-13)+-4]
 20962  011E2E  0EEF               	movlw	-17
 20963  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20964  011E36  0EF0               	movlw	-16
 20965  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20966  011E3E  0EF1               	movlw	-15
 20967  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20968  011E46  0EF2               	movlw	-14
 20969  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20970  011E4E                     l6870:
 20971                           
 20972                           ;stkvar	_a @ sp[(-13)+-8]
 20973  011E4E  0EEE               	movlw	238
 20974  011E50  24E1               	addwf	fsr1l,w,c
 20975  011E52  6ED9               	movwf	fsr2l,c
 20976  011E54  0EFF               	movlw	255
 20977  011E56  20E2               	addwfc	fsr1h,w,c
 20978  011E58  6EDA               	movwf	fsr2h,c
 20979  011E5A  50DF               	movf	indf2,w,c
 20980  011E5C  6E3D               	movwf	(btemp+11)^0,c
 20981  011E5E  0E80               	movlw	128
 20982  011E60  163D               	andwf	(btemp+11)^0,f,c
 20983                           
 20984                           ;stkvar	_sign @ sp[(-13)+12]
 20985  011E62  50E1               	movf	fsr1l,w,c
 20986  011E64  0FFF               	addlw	-1
 20987  011E66  6ED9               	movwf	fsr2l,c
 20988  011E68  50E2               	movf	fsr1h,w,c
 20989  011E6A  6EDA               	movwf	fsr2h,c
 20990  011E6C  0EFF               	movlw	255
 20991  011E6E  22DA               	addwfc	fsr2h,f,c
 20992  011E70  503D               	movf	(btemp+11)^0,w,c
 20993  011E72  1ADF               	xorwf	indf2,f,c
 20994                           
 20995                           ;stkvar	_a @ sp[(-13)+-8]
 20996  011E74  0EEE               	movlw	238
 20997  011E76  24E1               	addwf	fsr1l,w,c
 20998  011E78  6ED9               	movwf	fsr2l,c
 20999  011E7A  0EFF               	movlw	255
 21000  011E7C  20E2               	addwfc	fsr1h,w,c
 21001  011E7E  6EDA               	movwf	fsr2h,c
 21002  011E80  50DF               	movf	indf2,w,c
 21003  011E82  6E3D               	movwf	(btemp+11)^0,c
 21004  011E84  90D8               	bcf	status,0,c
 21005  011E86  343D               	rlcf	(btemp+11)^0,w,c
 21006  011E88  6E3C               	movwf	(btemp+10)^0,c
 21007                           
 21008                           ;stkvar	_aexp @ sp[(-13)+11]
 21009  011E8A  0EFE               	movlw	-2
 21010  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21011                           
 21012                           ;stkvar	_a @ sp[(-13)+-8]
 21013  011E92  0EED               	movlw	237
 21014  011E94  24E1               	addwf	fsr1l,w,c
 21015  011E96  6ED9               	movwf	fsr2l,c
 21016  011E98  0EFF               	movlw	255
 21017  011E9A  20E2               	addwfc	fsr1h,w,c
 21018  011E9C  6EDA               	movwf	fsr2h,c
 21019  011E9E  AEDF               	btfss	indf2,7,c
 21020  011EA0  D002               	goto	l6878
 21021                           
 21022                           ;stkvar	_aexp @ sp[(-13)+11]
 21023  011EA2  0EFE               	movlw	-2
 21024  011EA4  80E3               	bsf	plusw1,0,c
 21025  011EA6                     l6878:
 21026                           
 21027                           ;stkvar	_aexp @ sp[(-13)+11]
 21028  011EA6  0EFE               	movlw	-2
 21029  011EA8  50E3               	movf	plusw1,w,c
 21030  011EAA  B4D8               	btfsc	status,2,c
 21031  011EAC  D01F               	goto	l6886
 21032                           
 21033                           ;stkvar	_aexp @ sp[(-13)+11]
 21034  011EAE  0EFE               	movlw	-2
 21035  011EB0  28E3               	incf	plusw1,w,c
 21036  011EB2  A4D8               	btfss	status,2,c
 21037  011EB4  D018               	goto	l6884
 21038  011EB6  0E00               	movlw	0
 21039  011EB8  6E3A               	movwf	(btemp+8)^0,c
 21040  011EBA  0E00               	movlw	0
 21041  011EBC  6E3B               	movwf	(btemp+9)^0,c
 21042  011EBE  0E00               	movlw	0
 21043  011EC0  6E3C               	movwf	(btemp+10)^0,c
 21044  011EC2  0E00               	movlw	0
 21045  011EC4  6E3D               	movwf	(btemp+11)^0,c
 21046                           
 21047                           ;stkvar	_a @ sp[(-13)+-8]
 21048  011EC6  0EEB               	movlw	-21
 21049  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21050  011ECE  0EEC               	movlw	-20
 21051  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21052  011ED6  0EED               	movlw	-19
 21053  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21054  011EDE  0EEE               	movlw	-18
 21055  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21056  011EE6                     l6884:
 21057                           
 21058                           ;stkvar	_a @ sp[(-13)+-8]
 21059  011EE6  0EED               	movlw	-19
 21060  011EE8  8EE3               	bsf	plusw1,7,c
 21061  011EEA  D018               	goto	l6888
 21062  011EEC                     l6886:
 21063  011EEC  0E00               	movlw	0
 21064  011EEE  6E3A               	movwf	(btemp+8)^0,c
 21065  011EF0  0E00               	movlw	0
 21066  011EF2  6E3B               	movwf	(btemp+9)^0,c
 21067  011EF4  0E00               	movlw	0
 21068  011EF6  6E3C               	movwf	(btemp+10)^0,c
 21069  011EF8  0E00               	movlw	0
 21070  011EFA  6E3D               	movwf	(btemp+11)^0,c
 21071                           
 21072                           ;stkvar	_a @ sp[(-13)+-8]
 21073  011EFC  0EEB               	movlw	-21
 21074  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21075  011F04  0EEC               	movlw	-20
 21076  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21077  011F0C  0EED               	movlw	-19
 21078  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21079  011F14  0EEE               	movlw	-18
 21080  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21081  011F1C                     l6888:
 21082                           
 21083                           ;stkvar	_aexp @ sp[(-13)+11]
 21084  011F1C  0EFE               	movlw	-2
 21085  011F1E  50E3               	movf	plusw1,w,c
 21086  011F20  B4D8               	btfsc	status,2,c
 21087  011F22  D004               	goto	u5900
 21088                           
 21089                           ;stkvar	_bexp @ sp[(-13)+10]
 21090  011F24  0EFD               	movlw	-3
 21091  011F26  50E3               	movf	plusw1,w,c
 21092  011F28  A4D8               	btfss	status,2,c
 21093  011F2A  D009               	goto	l6896
 21094  011F2C                     u5900:
 21095  011F2C  0E00               	movlw	0
 21096  011F2E  6E32               	movwf	btemp^0,c
 21097  011F30  0E00               	movlw	0
 21098  011F32  6E33               	movwf	(btemp+1)^0,c
 21099  011F34  0E00               	movlw	0
 21100  011F36  6E34               	movwf	(btemp+2)^0,c
 21101  011F38  0E00               	movlw	0
 21102  011F3A  6E35               	movwf	(btemp+3)^0,c
 21103  011F3C  D332               	goto	l2687
 21104  011F3E                     l6896:
 21105                           
 21106                           ;stkvar	_b @ sp[(-13)+-4]
 21107  011F3E  0EEF               	movlw	-17
 21108  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 21109                           
 21110                           ;stkvar	_a @ sp[(-13)+-8]
 21111  011F46  0EED               	movlw	237
 21112  011F48  24E1               	addwf	fsr1l,w,c
 21113  011F4A  6ED9               	movwf	fsr2l,c
 21114  011F4C  0EFF               	movlw	255
 21115  011F4E  20E2               	addwfc	fsr1h,w,c
 21116  011F50  6EDA               	movwf	fsr2h,c
 21117  011F52  50DF               	movf	indf2,w,c
 21118  011F54  023D               	mulwf	(btemp+11)^0,c
 21119                           
 21120                           ;stkvar	_temp @ sp[(-13)+8]
 21121  011F56  0EFB               	movlw	-5
 21122  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 21123  011F5E  0EFC               	movlw	-4
 21124  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 21125                           
 21126                           ;stkvar	_temp @ sp[(-13)+8]
 21127  011F66  0EFB               	movlw	-5
 21128  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 21129  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21130  011F74  6A37               	clrf	(btemp+5)^0,c
 21131  011F76  6A38               	clrf	(btemp+6)^0,c
 21132  011F78  6A39               	clrf	(btemp+7)^0,c
 21133                           
 21134                           ;stkvar	_grs @ sp[(-13)+4]
 21135  011F7A  0EF7               	movlw	-9
 21136  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21137  011F82  0EF8               	movlw	-8
 21138  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21139  011F8A  0EF9               	movlw	-7
 21140  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21141  011F92  0EFA               	movlw	-6
 21142  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21143                           
 21144                           ;stkvar	_temp @ sp[(-13)+8]
 21145  011F9A  0EFC               	movlw	252
 21146  011F9C  24E1               	addwf	fsr1l,w,c
 21147  011F9E  6ED9               	movwf	fsr2l,c
 21148  011FA0  0EFF               	movlw	255
 21149  011FA2  20E2               	addwfc	fsr1h,w,c
 21150  011FA4  6EDA               	movwf	fsr2h,c
 21151  011FA6  50DF               	movf	indf2,w,c
 21152  011FA8  6E3D               	movwf	(btemp+11)^0,c
 21153  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21154  011FB0  6A37               	clrf	(btemp+5)^0,c
 21155  011FB2  6A38               	clrf	(btemp+6)^0,c
 21156  011FB4  6A39               	clrf	(btemp+7)^0,c
 21157                           
 21158                           ;stkvar	_prod @ sp[(-13)+0]
 21159  011FB6  0EF3               	movlw	-13
 21160  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21161  011FBE  0EF4               	movlw	-12
 21162  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21163  011FC6  0EF5               	movlw	-11
 21164  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21165  011FCE  0EF6               	movlw	-10
 21166  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21167                           
 21168                           ;stkvar	_b @ sp[(-13)+-4]
 21169  011FD6  0EF0               	movlw	240
 21170  011FD8  24E1               	addwf	fsr1l,w,c
 21171  011FDA  6ED9               	movwf	fsr2l,c
 21172  011FDC  0EFF               	movlw	255
 21173  011FDE  20E2               	addwfc	fsr1h,w,c
 21174  011FE0  6EDA               	movwf	fsr2h,c
 21175  011FE2  50DF               	movf	indf2,w,c
 21176  011FE4  6E3D               	movwf	(btemp+11)^0,c
 21177                           
 21178                           ;stkvar	_a @ sp[(-13)+-8]
 21179  011FE6  0EEC               	movlw	236
 21180  011FE8  24E1               	addwf	fsr1l,w,c
 21181  011FEA  6ED9               	movwf	fsr2l,c
 21182  011FEC  0EFF               	movlw	255
 21183  011FEE  20E2               	addwfc	fsr1h,w,c
 21184  011FF0  6EDA               	movwf	fsr2h,c
 21185  011FF2  50DF               	movf	indf2,w,c
 21186  011FF4  023D               	mulwf	(btemp+11)^0,c
 21187                           
 21188                           ;stkvar	_temp @ sp[(-13)+8]
 21189  011FF6  0EFB               	movlw	-5
 21190  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 21191  011FFE  0EFC               	movlw	-4
 21192  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 21193                           
 21194                           ;stkvar	_grs @ sp[(-13)+4]
 21195  012006  50E1               	movf	fsr1l,w,c
 21196  012008  0FF7               	addlw	-9
 21197  01200A  6ED9               	movwf	fsr2l,c
 21198  01200C  50E2               	movf	fsr1h,w,c
 21199  01200E  6EDA               	movwf	fsr2h,c
 21200  012010  0EFF               	movlw	255
 21201  012012  22DA               	addwfc	fsr2h,f,c
 21202                           
 21203                           ;stkvar	_temp @ sp[(-13)+8]
 21204  012014  0EFB               	movlw	-5
 21205  012016  50E3               	movf	plusw1,w,c
 21206  012018  26DE               	addwf	postinc2,f,c
 21207  01201A  0E00               	movlw	0
 21208  01201C  22DE               	addwfc	postinc2,f,c
 21209  01201E  22DE               	addwfc	postinc2,f,c
 21210  012020  22DE               	addwfc	postinc2,f,c
 21211                           
 21212                           ;stkvar	_prod @ sp[(-13)+0]
 21213  012022  50E1               	movf	fsr1l,w,c
 21214  012024  0FF3               	addlw	-13
 21215  012026  6ED9               	movwf	fsr2l,c
 21216  012028  50E2               	movf	fsr1h,w,c
 21217  01202A  6EDA               	movwf	fsr2h,c
 21218  01202C  0EFF               	movlw	255
 21219  01202E  22DA               	addwfc	fsr2h,f,c
 21220                           
 21221                           ;stkvar	_temp @ sp[(-13)+8]
 21222  012030  0EFC               	movlw	252
 21223  012032  24E1               	addwf	fsr1l,w,c
 21224  012034  6EE9               	movwf	fsr0l,c
 21225  012036  0EFF               	movlw	255
 21226  012038  20E2               	addwfc	fsr1h,w,c
 21227  01203A  6EEA               	movwf	fsr0h,c
 21228  01203C  50EF               	movf	indf0,w,c
 21229  01203E  26DE               	addwf	postinc2,f,c
 21230  012040  0E00               	movlw	0
 21231  012042  22DE               	addwfc	postinc2,f,c
 21232  012044  22DE               	addwfc	postinc2,f,c
 21233  012046  22DE               	addwfc	postinc2,f,c
 21234                           
 21235                           ;stkvar	_b @ sp[(-13)+-4]
 21236  012048  0EF1               	movlw	241
 21237  01204A  24E1               	addwf	fsr1l,w,c
 21238  01204C  6ED9               	movwf	fsr2l,c
 21239  01204E  0EFF               	movlw	255
 21240  012050  20E2               	addwfc	fsr1h,w,c
 21241  012052  6EDA               	movwf	fsr2h,c
 21242  012054  50DF               	movf	indf2,w,c
 21243  012056  6E3D               	movwf	(btemp+11)^0,c
 21244                           
 21245                           ;stkvar	_a @ sp[(-13)+-8]
 21246  012058  0EEB               	movlw	-21
 21247  01205A  50E3               	movf	plusw1,w,c
 21248  01205C  023D               	mulwf	(btemp+11)^0,c
 21249                           
 21250                           ;stkvar	_temp @ sp[(-13)+8]
 21251  01205E  0EFB               	movlw	-5
 21252  012060  006F FFCF FFE3     	movff	prodl,plusw1
 21253  012066  0EFC               	movlw	-4
 21254  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 21255                           
 21256                           ;stkvar	_grs @ sp[(-13)+4]
 21257  01206E  50E1               	movf	fsr1l,w,c
 21258  012070  0FF7               	addlw	-9
 21259  012072  6ED9               	movwf	fsr2l,c
 21260  012074  50E2               	movf	fsr1h,w,c
 21261  012076  6EDA               	movwf	fsr2h,c
 21262  012078  0EFF               	movlw	255
 21263  01207A  22DA               	addwfc	fsr2h,f,c
 21264                           
 21265                           ;stkvar	_temp @ sp[(-13)+8]
 21266  01207C  0EFB               	movlw	-5
 21267  01207E  50E3               	movf	plusw1,w,c
 21268  012080  26DE               	addwf	postinc2,f,c
 21269  012082  0E00               	movlw	0
 21270  012084  22DE               	addwfc	postinc2,f,c
 21271  012086  22DE               	addwfc	postinc2,f,c
 21272  012088  22DE               	addwfc	postinc2,f,c
 21273                           
 21274                           ;stkvar	_prod @ sp[(-13)+0]
 21275  01208A  50E1               	movf	fsr1l,w,c
 21276  01208C  0FF3               	addlw	-13
 21277  01208E  6ED9               	movwf	fsr2l,c
 21278  012090  50E2               	movf	fsr1h,w,c
 21279  012092  6EDA               	movwf	fsr2h,c
 21280  012094  0EFF               	movlw	255
 21281  012096  22DA               	addwfc	fsr2h,f,c
 21282                           
 21283                           ;stkvar	_temp @ sp[(-13)+8]
 21284  012098  0EFC               	movlw	252
 21285  01209A  24E1               	addwf	fsr1l,w,c
 21286  01209C  6EE9               	movwf	fsr0l,c
 21287  01209E  0EFF               	movlw	255
 21288  0120A0  20E2               	addwfc	fsr1h,w,c
 21289  0120A2  6EEA               	movwf	fsr0h,c
 21290  0120A4  50EF               	movf	indf0,w,c
 21291  0120A6  26DE               	addwf	postinc2,f,c
 21292  0120A8  0E00               	movlw	0
 21293  0120AA  22DE               	addwfc	postinc2,f,c
 21294  0120AC  22DE               	addwfc	postinc2,f,c
 21295  0120AE  22DE               	addwfc	postinc2,f,c
 21296                           
 21297                           ;stkvar	_grs @ sp[(-13)+4]
 21298  0120B0  50E1               	movf	fsr1l,w,c
 21299  0120B2  0FF7               	addlw	-9
 21300  0120B4  6ED9               	movwf	fsr2l,c
 21301  0120B6  50E2               	movf	fsr1h,w,c
 21302  0120B8  6EDA               	movwf	fsr2h,c
 21303  0120BA  0EFF               	movlw	255
 21304  0120BC  22DA               	addwfc	fsr2h,f,c
 21305  0120BE  0E08               	movlw	8
 21306  0120C0                     u5915:
 21307  0120C0  90D8               	bcf	status,0,c
 21308  0120C2  36DE               	rlcf	postinc2,f,c
 21309  0120C4  36DE               	rlcf	postinc2,f,c
 21310  0120C6  36DE               	rlcf	postinc2,f,c
 21311  0120C8  36DD               	rlcf	postdec2,f,c
 21312  0120CA  52DD               	movf	postdec2,f,c
 21313  0120CC  52DD               	movf	postdec2,f,c
 21314  0120CE  2EE8               	decfsz	wreg,f,c
 21315  0120D0  D7F7               	goto	u5915
 21316                           
 21317                           ;stkvar	_b @ sp[(-13)+-4]
 21318  0120D2  0EF0               	movlw	240
 21319  0120D4  24E1               	addwf	fsr1l,w,c
 21320  0120D6  6ED9               	movwf	fsr2l,c
 21321  0120D8  0EFF               	movlw	255
 21322  0120DA  20E2               	addwfc	fsr1h,w,c
 21323  0120DC  6EDA               	movwf	fsr2h,c
 21324  0120DE  50DF               	movf	indf2,w,c
 21325  0120E0  6E3D               	movwf	(btemp+11)^0,c
 21326                           
 21327                           ;stkvar	_a @ sp[(-13)+-8]
 21328  0120E2  0EEB               	movlw	-21
 21329  0120E4  50E3               	movf	plusw1,w,c
 21330  0120E6  023D               	mulwf	(btemp+11)^0,c
 21331                           
 21332                           ;stkvar	_temp @ sp[(-13)+8]
 21333  0120E8  0EFB               	movlw	-5
 21334  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 21335  0120F0  0EFC               	movlw	-4
 21336  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 21337                           
 21338                           ;stkvar	_temp @ sp[(-13)+8]
 21339  0120F8  0EFB               	movlw	-5
 21340  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21341  012100  0EFC               	movlw	-4
 21342  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 21343                           
 21344                           ;stkvar	_grs @ sp[(-13)+4]
 21345  012108  50E1               	movf	fsr1l,w,c
 21346  01210A  0FF7               	addlw	-9
 21347  01210C  6ED9               	movwf	fsr2l,c
 21348  01210E  50E2               	movf	fsr1h,w,c
 21349  012110  6EDA               	movwf	fsr2h,c
 21350  012112  0EFF               	movlw	255
 21351  012114  22DA               	addwfc	fsr2h,f,c
 21352  012116  503C               	movf	(btemp+10)^0,w,c
 21353  012118  26DE               	addwf	postinc2,f,c
 21354  01211A  503D               	movf	(btemp+11)^0,w,c
 21355  01211C  22DE               	addwfc	postinc2,f,c
 21356  01211E  0E00               	movlw	0
 21357  012120  22DE               	addwfc	postinc2,f,c
 21358  012122  22DE               	addwfc	postinc2,f,c
 21359                           
 21360                           ;stkvar	_b @ sp[(-13)+-4]
 21361  012124  0EEF               	movlw	-17
 21362  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 21363                           
 21364                           ;stkvar	_a @ sp[(-13)+-8]
 21365  01212C  0EEC               	movlw	236
 21366  01212E  24E1               	addwf	fsr1l,w,c
 21367  012130  6ED9               	movwf	fsr2l,c
 21368  012132  0EFF               	movlw	255
 21369  012134  20E2               	addwfc	fsr1h,w,c
 21370  012136  6EDA               	movwf	fsr2h,c
 21371  012138  50DF               	movf	indf2,w,c
 21372  01213A  023D               	mulwf	(btemp+11)^0,c
 21373                           
 21374                           ;stkvar	_temp @ sp[(-13)+8]
 21375  01213C  0EFB               	movlw	-5
 21376  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 21377  012144  0EFC               	movlw	-4
 21378  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 21379                           
 21380                           ;stkvar	_temp @ sp[(-13)+8]
 21381  01214C  0EFB               	movlw	-5
 21382  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21383  012154  0EFC               	movlw	-4
 21384  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 21385                           
 21386                           ;stkvar	_grs @ sp[(-13)+4]
 21387  01215C  50E1               	movf	fsr1l,w,c
 21388  01215E  0FF7               	addlw	-9
 21389  012160  6ED9               	movwf	fsr2l,c
 21390  012162  50E2               	movf	fsr1h,w,c
 21391  012164  6EDA               	movwf	fsr2h,c
 21392  012166  0EFF               	movlw	255
 21393  012168  22DA               	addwfc	fsr2h,f,c
 21394  01216A  503C               	movf	(btemp+10)^0,w,c
 21395  01216C  26DE               	addwf	postinc2,f,c
 21396  01216E  503D               	movf	(btemp+11)^0,w,c
 21397  012170  22DE               	addwfc	postinc2,f,c
 21398  012172  0E00               	movlw	0
 21399  012174  22DE               	addwfc	postinc2,f,c
 21400  012176  22DE               	addwfc	postinc2,f,c
 21401                           
 21402                           ;stkvar	_grs @ sp[(-13)+4]
 21403  012178  50E1               	movf	fsr1l,w,c
 21404  01217A  0FF7               	addlw	-9
 21405  01217C  6ED9               	movwf	fsr2l,c
 21406  01217E  50E2               	movf	fsr1h,w,c
 21407  012180  6EDA               	movwf	fsr2h,c
 21408  012182  0EFF               	movlw	255
 21409  012184  22DA               	addwfc	fsr2h,f,c
 21410  012186  0E08               	movlw	8
 21411  012188                     u5925:
 21412  012188  90D8               	bcf	status,0,c
 21413  01218A  36DE               	rlcf	postinc2,f,c
 21414  01218C  36DE               	rlcf	postinc2,f,c
 21415  01218E  36DE               	rlcf	postinc2,f,c
 21416  012190  36DD               	rlcf	postdec2,f,c
 21417  012192  52DD               	movf	postdec2,f,c
 21418  012194  52DD               	movf	postdec2,f,c
 21419  012196  2EE8               	decfsz	wreg,f,c
 21420  012198  D7F7               	goto	u5925
 21421                           
 21422                           ;stkvar	_b @ sp[(-13)+-4]
 21423  01219A  0EEF               	movlw	-17
 21424  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21425                           
 21426                           ;stkvar	_a @ sp[(-13)+-8]
 21427  0121A2  0EEB               	movlw	-21
 21428  0121A4  50E3               	movf	plusw1,w,c
 21429  0121A6  023D               	mulwf	(btemp+11)^0,c
 21430                           
 21431                           ;stkvar	_temp @ sp[(-13)+8]
 21432  0121A8  0EFB               	movlw	-5
 21433  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21434  0121B0  0EFC               	movlw	-4
 21435  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21436                           
 21437                           ;stkvar	_temp @ sp[(-13)+8]
 21438  0121B8  0EFB               	movlw	-5
 21439  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21440  0121C0  0EFC               	movlw	-4
 21441  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21442                           
 21443                           ;stkvar	_grs @ sp[(-13)+4]
 21444  0121C8  50E1               	movf	fsr1l,w,c
 21445  0121CA  0FF7               	addlw	-9
 21446  0121CC  6ED9               	movwf	fsr2l,c
 21447  0121CE  50E2               	movf	fsr1h,w,c
 21448  0121D0  6EDA               	movwf	fsr2h,c
 21449  0121D2  0EFF               	movlw	255
 21450  0121D4  22DA               	addwfc	fsr2h,f,c
 21451  0121D6  503C               	movf	(btemp+10)^0,w,c
 21452  0121D8  26DE               	addwf	postinc2,f,c
 21453  0121DA  503D               	movf	(btemp+11)^0,w,c
 21454  0121DC  22DE               	addwfc	postinc2,f,c
 21455  0121DE  0E00               	movlw	0
 21456  0121E0  22DE               	addwfc	postinc2,f,c
 21457  0121E2  22DE               	addwfc	postinc2,f,c
 21458                           
 21459                           ;stkvar	_b @ sp[(-13)+-4]
 21460  0121E4  0EF0               	movlw	240
 21461  0121E6  24E1               	addwf	fsr1l,w,c
 21462  0121E8  6ED9               	movwf	fsr2l,c
 21463  0121EA  0EFF               	movlw	255
 21464  0121EC  20E2               	addwfc	fsr1h,w,c
 21465  0121EE  6EDA               	movwf	fsr2h,c
 21466  0121F0  50DF               	movf	indf2,w,c
 21467  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21468                           
 21469                           ;stkvar	_a @ sp[(-13)+-8]
 21470  0121F4  0EED               	movlw	237
 21471  0121F6  24E1               	addwf	fsr1l,w,c
 21472  0121F8  6ED9               	movwf	fsr2l,c
 21473  0121FA  0EFF               	movlw	255
 21474  0121FC  20E2               	addwfc	fsr1h,w,c
 21475  0121FE  6EDA               	movwf	fsr2h,c
 21476  012200  50DF               	movf	indf2,w,c
 21477  012202  023D               	mulwf	(btemp+11)^0,c
 21478                           
 21479                           ;stkvar	_temp @ sp[(-13)+8]
 21480  012204  0EFB               	movlw	-5
 21481  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21482  01220C  0EFC               	movlw	-4
 21483  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21484                           
 21485                           ;stkvar	_temp @ sp[(-13)+8]
 21486  012214  0EFB               	movlw	-5
 21487  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21488  01221C  0EFC               	movlw	-4
 21489  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21490                           
 21491                           ;stkvar	_prod @ sp[(-13)+0]
 21492  012224  50E1               	movf	fsr1l,w,c
 21493  012226  0FF3               	addlw	-13
 21494  012228  6ED9               	movwf	fsr2l,c
 21495  01222A  50E2               	movf	fsr1h,w,c
 21496  01222C  6EDA               	movwf	fsr2h,c
 21497  01222E  0EFF               	movlw	255
 21498  012230  22DA               	addwfc	fsr2h,f,c
 21499  012232  503C               	movf	(btemp+10)^0,w,c
 21500  012234  26DE               	addwf	postinc2,f,c
 21501  012236  503D               	movf	(btemp+11)^0,w,c
 21502  012238  22DE               	addwfc	postinc2,f,c
 21503  01223A  0E00               	movlw	0
 21504  01223C  22DE               	addwfc	postinc2,f,c
 21505  01223E  22DE               	addwfc	postinc2,f,c
 21506                           
 21507                           ;stkvar	_b @ sp[(-13)+-4]
 21508  012240  0EF1               	movlw	241
 21509  012242  24E1               	addwf	fsr1l,w,c
 21510  012244  6ED9               	movwf	fsr2l,c
 21511  012246  0EFF               	movlw	255
 21512  012248  20E2               	addwfc	fsr1h,w,c
 21513  01224A  6EDA               	movwf	fsr2h,c
 21514  01224C  50DF               	movf	indf2,w,c
 21515  01224E  6E3D               	movwf	(btemp+11)^0,c
 21516                           
 21517                           ;stkvar	_a @ sp[(-13)+-8]
 21518  012250  0EEC               	movlw	236
 21519  012252  24E1               	addwf	fsr1l,w,c
 21520  012254  6ED9               	movwf	fsr2l,c
 21521  012256  0EFF               	movlw	255
 21522  012258  20E2               	addwfc	fsr1h,w,c
 21523  01225A  6EDA               	movwf	fsr2h,c
 21524  01225C  50DF               	movf	indf2,w,c
 21525  01225E  023D               	mulwf	(btemp+11)^0,c
 21526                           
 21527                           ;stkvar	_temp @ sp[(-13)+8]
 21528  012260  0EFB               	movlw	-5
 21529  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21530  012268  0EFC               	movlw	-4
 21531  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21532                           
 21533                           ;stkvar	_temp @ sp[(-13)+8]
 21534  012270  0EFB               	movlw	-5
 21535  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21536  012278  0EFC               	movlw	-4
 21537  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21538                           
 21539                           ;stkvar	_prod @ sp[(-13)+0]
 21540  012280  50E1               	movf	fsr1l,w,c
 21541  012282  0FF3               	addlw	-13
 21542  012284  6ED9               	movwf	fsr2l,c
 21543  012286  50E2               	movf	fsr1h,w,c
 21544  012288  6EDA               	movwf	fsr2h,c
 21545  01228A  0EFF               	movlw	255
 21546  01228C  22DA               	addwfc	fsr2h,f,c
 21547  01228E  503C               	movf	(btemp+10)^0,w,c
 21548  012290  26DE               	addwf	postinc2,f,c
 21549  012292  503D               	movf	(btemp+11)^0,w,c
 21550  012294  22DE               	addwfc	postinc2,f,c
 21551  012296  0E00               	movlw	0
 21552  012298  22DE               	addwfc	postinc2,f,c
 21553  01229A  22DE               	addwfc	postinc2,f,c
 21554                           
 21555                           ;stkvar	_b @ sp[(-13)+-4]
 21556  01229C  0EF1               	movlw	241
 21557  01229E  24E1               	addwf	fsr1l,w,c
 21558  0122A0  6ED9               	movwf	fsr2l,c
 21559  0122A2  0EFF               	movlw	255
 21560  0122A4  20E2               	addwfc	fsr1h,w,c
 21561  0122A6  6EDA               	movwf	fsr2h,c
 21562  0122A8  50DF               	movf	indf2,w,c
 21563  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21564                           
 21565                           ;stkvar	_a @ sp[(-13)+-8]
 21566  0122AC  0EED               	movlw	237
 21567  0122AE  24E1               	addwf	fsr1l,w,c
 21568  0122B0  6ED9               	movwf	fsr2l,c
 21569  0122B2  0EFF               	movlw	255
 21570  0122B4  20E2               	addwfc	fsr1h,w,c
 21571  0122B6  6EDA               	movwf	fsr2h,c
 21572  0122B8  50DF               	movf	indf2,w,c
 21573  0122BA  023D               	mulwf	(btemp+11)^0,c
 21574                           
 21575                           ;stkvar	_temp @ sp[(-13)+8]
 21576  0122BC  0EFB               	movlw	-5
 21577  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21578  0122C4  0EFC               	movlw	-4
 21579  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21580                           
 21581                           ;stkvar	_temp @ sp[(-13)+8]
 21582  0122CC  0EFB               	movlw	-5
 21583  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21584  0122D4  0EFC               	movlw	-4
 21585  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21586  0122DC  503C               	movf	(btemp+10)^0,w,c
 21587  0122DE  6E36               	movwf	(btemp+4)^0,c
 21588  0122E0  503D               	movf	(btemp+11)^0,w,c
 21589  0122E2  6E37               	movwf	(btemp+5)^0,c
 21590  0122E4  6A38               	clrf	(btemp+6)^0,c
 21591  0122E6  6A39               	clrf	(btemp+7)^0,c
 21592  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21593  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21594  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21595  0122FA  6A36               	clrf	(btemp+4)^0,c
 21596                           
 21597                           ;stkvar	_prod @ sp[(-13)+0]
 21598  0122FC  50E1               	movf	fsr1l,w,c
 21599  0122FE  0FF3               	addlw	-13
 21600  012300  6ED9               	movwf	fsr2l,c
 21601  012302  50E2               	movf	fsr1h,w,c
 21602  012304  6EDA               	movwf	fsr2h,c
 21603  012306  0EFF               	movlw	255
 21604  012308  22DA               	addwfc	fsr2h,f,c
 21605  01230A  5036               	movf	(btemp+4)^0,w,c
 21606  01230C  26DE               	addwf	postinc2,f,c
 21607  01230E  5037               	movf	(btemp+5)^0,w,c
 21608  012310  22DE               	addwfc	postinc2,f,c
 21609  012312  5038               	movf	(btemp+6)^0,w,c
 21610  012314  22DE               	addwfc	postinc2,f,c
 21611  012316  5039               	movf	(btemp+7)^0,w,c
 21612  012318  22DE               	addwfc	postinc2,f,c
 21613                           
 21614                           ;stkvar	_prod @ sp[(-13)+0]
 21615  01231A  50E1               	movf	fsr1l,w,c
 21616  01231C  0FF3               	addlw	-13
 21617  01231E  6ED9               	movwf	fsr2l,c
 21618  012320  50E2               	movf	fsr1h,w,c
 21619  012322  6EDA               	movwf	fsr2h,c
 21620  012324  0EFF               	movlw	255
 21621  012326  22DA               	addwfc	fsr2h,f,c
 21622                           
 21623                           ;stkvar	_grs @ sp[(-13)+4]
 21624  012328  0EFA               	movlw	250
 21625  01232A  24E1               	addwf	fsr1l,w,c
 21626  01232C  6EE9               	movwf	fsr0l,c
 21627  01232E  0EFF               	movlw	255
 21628  012330  20E2               	addwfc	fsr1h,w,c
 21629  012332  6EEA               	movwf	fsr0h,c
 21630  012334  50EF               	movf	indf0,w,c
 21631  012336  26DE               	addwf	postinc2,f,c
 21632  012338  0E00               	movlw	0
 21633  01233A  22DE               	addwfc	postinc2,f,c
 21634  01233C  22DE               	addwfc	postinc2,f,c
 21635  01233E  22DE               	addwfc	postinc2,f,c
 21636                           
 21637                           ;stkvar	_grs @ sp[(-13)+4]
 21638  012340  50E1               	movf	fsr1l,w,c
 21639  012342  0FF7               	addlw	-9
 21640  012344  6ED9               	movwf	fsr2l,c
 21641  012346  50E2               	movf	fsr1h,w,c
 21642  012348  6EDA               	movwf	fsr2h,c
 21643  01234A  0EFF               	movlw	255
 21644  01234C  22DA               	addwfc	fsr2h,f,c
 21645  01234E  0E08               	movlw	8
 21646  012350                     u5935:
 21647  012350  90D8               	bcf	status,0,c
 21648  012352  36DE               	rlcf	postinc2,f,c
 21649  012354  36DE               	rlcf	postinc2,f,c
 21650  012356  36DE               	rlcf	postinc2,f,c
 21651  012358  36DD               	rlcf	postdec2,f,c
 21652  01235A  52DD               	movf	postdec2,f,c
 21653  01235C  52DD               	movf	postdec2,f,c
 21654  01235E  2EE8               	decfsz	wreg,f,c
 21655  012360  D7F7               	goto	u5935
 21656  012362  0E82               	movlw	130
 21657  012364  6E3C               	movwf	(btemp+10)^0,c
 21658  012366  0EFF               	movlw	255
 21659  012368  6E3D               	movwf	(btemp+11)^0,c
 21660                           
 21661                           ;stkvar	_bexp @ sp[(-13)+10]
 21662  01236A  0EFD               	movlw	-3
 21663  01236C  50E3               	movf	plusw1,w,c
 21664  01236E  6E3A               	movwf	(btemp+8)^0,c
 21665  012370  6A3B               	clrf	(btemp+9)^0,c
 21666                           
 21667                           ;stkvar	_aexp @ sp[(-13)+11]
 21668  012372  0EFE               	movlw	-2
 21669  012374  50E3               	movf	plusw1,w,c
 21670  012376  263A               	addwf	(btemp+8)^0,f,c
 21671  012378  0E00               	movlw	0
 21672  01237A  223B               	addwfc	(btemp+9)^0,f,c
 21673  01237C  503C               	movf	(btemp+10)^0,w,c
 21674  01237E  263A               	addwf	(btemp+8)^0,f,c
 21675  012380  503D               	movf	(btemp+11)^0,w,c
 21676  012382  223B               	addwfc	(btemp+9)^0,f,c
 21677                           
 21678                           ;stkvar	_temp @ sp[(-13)+8]
 21679  012384  0EFB               	movlw	-5
 21680  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21681  01238C  0EFC               	movlw	-4
 21682  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21683  012394  D021               	goto	l6958
 21684  012396                     l6948:
 21685                           
 21686                           ;stkvar	_prod @ sp[(-13)+0]
 21687  012396  90D8               	bcf	status,0,c
 21688  012398  0EF3               	movlw	-13
 21689  01239A  36E3               	rlcf	plusw1,f,c
 21690  01239C  0EF4               	movlw	-12
 21691  01239E  36E3               	rlcf	plusw1,f,c
 21692  0123A0  0EF5               	movlw	-11
 21693  0123A2  36E3               	rlcf	plusw1,f,c
 21694  0123A4  0EF6               	movlw	-10
 21695  0123A6  36E3               	rlcf	plusw1,f,c
 21696                           
 21697                           ;stkvar	_grs @ sp[(-13)+4]
 21698  0123A8  0EFA               	movlw	-6
 21699  0123AA  AEE3               	btfss	plusw1,7,c
 21700  0123AC  D002               	goto	l6954
 21701                           
 21702                           ;stkvar	_prod @ sp[(-13)+0]
 21703  0123AE  0EF3               	movlw	-13
 21704  0123B0  80E3               	bsf	plusw1,0,c
 21705  0123B2                     l6954:
 21706                           
 21707                           ;stkvar	_grs @ sp[(-13)+4]
 21708  0123B2  90D8               	bcf	status,0,c
 21709  0123B4  0EF7               	movlw	-9
 21710  0123B6  36E3               	rlcf	plusw1,f,c
 21711  0123B8  0EF8               	movlw	-8
 21712  0123BA  36E3               	rlcf	plusw1,f,c
 21713  0123BC  0EF9               	movlw	-7
 21714  0123BE  36E3               	rlcf	plusw1,f,c
 21715  0123C0  0EFA               	movlw	-6
 21716  0123C2  36E3               	rlcf	plusw1,f,c
 21717                           
 21718                           ;stkvar	_temp @ sp[(-13)+8]
 21719  0123C4  50E1               	movf	fsr1l,w,c
 21720  0123C6  0FFB               	addlw	-5
 21721  0123C8  6ED9               	movwf	fsr2l,c
 21722  0123CA  50E2               	movf	fsr1h,w,c
 21723  0123CC  6EDA               	movwf	fsr2h,c
 21724  0123CE  0EFF               	movlw	255
 21725  0123D0  22DA               	addwfc	fsr2h,f,c
 21726  0123D2  06DE               	decf	postinc2,f,c
 21727  0123D4  0E00               	movlw	0
 21728  0123D6  5ADD               	subwfb	postdec2,f,c
 21729  0123D8                     l6958:
 21730                           
 21731                           ;stkvar	_prod @ sp[(-13)+0]
 21732  0123D8  0EF5               	movlw	-11
 21733  0123DA  AEE3               	btfss	plusw1,7,c
 21734  0123DC  D7DC               	goto	l6948
 21735                           
 21736                           ;stkvar	_aexp @ sp[(-13)+11]
 21737  0123DE  0EFE               	movlw	-2
 21738  0123E0  6AE3               	clrf	plusw1,c
 21739                           
 21740                           ;stkvar	_grs @ sp[(-13)+4]
 21741  0123E2  0EFA               	movlw	-6
 21742  0123E4  AEE3               	btfss	plusw1,7,c
 21743  0123E6  D020               	goto	l6972
 21744                           
 21745                           ;stkvar	_grs @ sp[(-13)+4]
 21746  0123E8  50E1               	movf	fsr1l,w,c
 21747  0123EA  0FF7               	addlw	-9
 21748  0123EC  6ED9               	movwf	fsr2l,c
 21749  0123EE  50E2               	movf	fsr1h,w,c
 21750  0123F0  6EDA               	movwf	fsr2h,c
 21751  0123F2  0EFF               	movlw	255
 21752  0123F4  22DA               	addwfc	fsr2h,f,c
 21753  0123F6  0EFF               	movlw	255
 21754  0123F8  14DE               	andwf	postinc2,w,c
 21755  0123FA  6E3A               	movwf	(btemp+8)^0,c
 21756  0123FC  0EFF               	movlw	255
 21757  0123FE  14DE               	andwf	postinc2,w,c
 21758  012400  6E3B               	movwf	(btemp+9)^0,c
 21759  012402  0EFF               	movlw	255
 21760  012404  14DE               	andwf	postinc2,w,c
 21761  012406  6E3C               	movwf	(btemp+10)^0,c
 21762  012408  0E7F               	movlw	127
 21763  01240A  14DE               	andwf	postinc2,w,c
 21764  01240C  6E3D               	movwf	(btemp+11)^0,c
 21765  01240E  503A               	movf	(btemp+8)^0,w,c
 21766  012410  103B               	iorwf	(btemp+9)^0,w,c
 21767  012412  103C               	iorwf	(btemp+10)^0,w,c
 21768  012414  103D               	iorwf	(btemp+11)^0,w,c
 21769  012416  B4D8               	btfsc	status,2,c
 21770  012418  D004               	goto	l6968
 21771  01241A                     u5970:
 21772                           
 21773                           ;stkvar	_aexp @ sp[(-13)+11]
 21774  01241A  0EFE               	movlw	-2
 21775  01241C  6AE3               	clrf	plusw1,c
 21776  01241E  2AE3               	incf	plusw1,f,c
 21777  012420  D003               	goto	l6972
 21778  012422                     l6968:
 21779                           
 21780                           ;stkvar	_prod @ sp[(-13)+0]
 21781  012422  0EF3               	movlw	-13
 21782  012424  B0E3               	btfsc	plusw1,0,c
 21783  012426  D7F9               	goto	u5970
 21784  012428                     l6972:
 21785                           
 21786                           ;stkvar	_aexp @ sp[(-13)+11]
 21787  012428  0EFE               	movlw	-2
 21788  01242A  50E3               	movf	plusw1,w,c
 21789  01242C  B4D8               	btfsc	status,2,c
 21790  01242E  D036               	goto	l6982
 21791                           
 21792                           ;stkvar	_prod @ sp[(-13)+0]
 21793  012430  50E1               	movf	fsr1l,w,c
 21794  012432  0FF3               	addlw	-13
 21795  012434  6ED9               	movwf	fsr2l,c
 21796  012436  50E2               	movf	fsr1h,w,c
 21797  012438  6EDA               	movwf	fsr2h,c
 21798  01243A  0EFF               	movlw	255
 21799  01243C  22DA               	addwfc	fsr2h,f,c
 21800  01243E  2ADE               	incf	postinc2,f,c
 21801  012440  0E00               	movlw	0
 21802  012442  22DE               	addwfc	postinc2,f,c
 21803  012444  22DE               	addwfc	postinc2,f,c
 21804  012446  22DE               	addwfc	postinc2,f,c
 21805                           
 21806                           ;stkvar	_prod @ sp[(-13)+0]
 21807  012448  0EF6               	movlw	-10
 21808  01244A  A0E3               	btfss	plusw1,0,c
 21809  01244C  D027               	goto	l6982
 21810  01244E  0E01               	movlw	1
 21811  012450  6E3D               	movwf	(btemp+11)^0,c
 21812                           
 21813                           ;stkvar	_prod @ sp[(-13)+0]
 21814  012452  50E1               	movf	fsr1l,w,c
 21815  012454  0FF3               	addlw	-13
 21816  012456  6ED9               	movwf	fsr2l,c
 21817  012458  50E2               	movf	fsr1h,w,c
 21818  01245A  6EDA               	movwf	fsr2h,c
 21819  01245C  0EFF               	movlw	255
 21820  01245E  22DA               	addwfc	fsr2h,f,c
 21821  012460  283D               	incf	(btemp+11)^0,w,c
 21822  012462  52DE               	movf	postinc2,f,c
 21823  012464  D008               	goto	u6010
 21824  012466                     u6015:
 21825  012466  52DE               	movf	postinc2,f,c
 21826  012468  90D8               	bcf	status,0,c
 21827  01246A  BEDC               	btfsc	preinc2,7,c
 21828  01246C  80D8               	bsf	status,0,c
 21829  01246E  32DD               	rrcf	postdec2,f,c
 21830  012470  32DD               	rrcf	postdec2,f,c
 21831  012472  32DD               	rrcf	postdec2,f,c
 21832  012474  32DE               	rrcf	postinc2,f,c
 21833  012476                     u6010:
 21834  012476  2EE8               	decfsz	wreg,f,c
 21835  012478  D7F6               	goto	u6015
 21836                           
 21837                           ;stkvar	_temp @ sp[(-13)+8]
 21838  01247A  0EFB               	movlw	-5
 21839  01247C  50E3               	movf	plusw1,w,c
 21840  01247E  0F01               	addlw	1
 21841  012480  6E32               	movwf	btemp^0,c
 21842  012482  0EFB               	movlw	-5
 21843  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 21844  01248A  6A32               	clrf	btemp^0,c
 21845  01248C  0EFC               	movlw	-4
 21846  01248E  50E3               	movf	plusw1,w,c
 21847  012490  2032               	addwfc	btemp^0,w,c
 21848  012492  6E32               	movwf	btemp^0,c
 21849  012494  0EFC               	movlw	-4
 21850  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 21851  01249C                     l6982:
 21852                           
 21853                           ;stkvar	_temp @ sp[(-13)+8]
 21854  01249C  0EFC               	movlw	-4
 21855  01249E  BEE3               	btfsc	plusw1,7,c
 21856  0124A0  D020               	goto	l6986
 21857  0124A2  0EFC               	movlw	-4
 21858  0124A4  50E3               	movf	plusw1,w,c
 21859  0124A6  E104               	bnz	u6020
 21860  0124A8  0EFB               	movlw	-5
 21861  0124AA  28E3               	incf	plusw1,w,c
 21862  0124AC  A0D8               	btfss	status,0,c
 21863  0124AE  D019               	goto	l6986
 21864  0124B0                     u6020:
 21865  0124B0  0E00               	movlw	0
 21866  0124B2  6E3A               	movwf	(btemp+8)^0,c
 21867  0124B4  0E00               	movlw	0
 21868  0124B6  6E3B               	movwf	(btemp+9)^0,c
 21869  0124B8  0E80               	movlw	128
 21870  0124BA  6E3C               	movwf	(btemp+10)^0,c
 21871  0124BC  0E7F               	movlw	127
 21872  0124BE  6E3D               	movwf	(btemp+11)^0,c
 21873                           
 21874                           ;stkvar	_prod @ sp[(-13)+0]
 21875  0124C0  0EF3               	movlw	-13
 21876  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21877  0124C8  0EF4               	movlw	-12
 21878  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21879  0124D0  0EF5               	movlw	-11
 21880  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21881  0124D8  0EF6               	movlw	-10
 21882  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21883  0124E0  D044               	goto	l7002
 21884  0124E2                     l6986:
 21885                           
 21886                           ;stkvar	_temp @ sp[(-13)+8]
 21887  0124E2  0EFC               	movlw	-4
 21888  0124E4  BEE3               	btfsc	plusw1,7,c
 21889  0124E6  D007               	goto	u6030
 21890  0124E8  0EFC               	movlw	-4
 21891  0124EA  50E3               	movf	plusw1,w,c
 21892  0124EC  E10F               	bnz	l6992
 21893  0124EE  0EFB               	movlw	-5
 21894  0124F0  04E3               	decf	plusw1,w,c
 21895  0124F2  B0D8               	btfsc	status,0,c
 21896  0124F4  D00B               	goto	l6992
 21897  0124F6                     u6030:
 21898                           
 21899                           ;stkvar	_prod @ sp[(-13)+0]
 21900  0124F6  0EF3               	movlw	-13
 21901  0124F8  6AE3               	clrf	plusw1,c
 21902  0124FA  0EF4               	movlw	-12
 21903  0124FC  6AE3               	clrf	plusw1,c
 21904  0124FE  0EF5               	movlw	-11
 21905  012500  6AE3               	clrf	plusw1,c
 21906  012502  0EF6               	movlw	-10
 21907  012504  6AE3               	clrf	plusw1,c
 21908                           
 21909                           ;stkvar	_sign @ sp[(-13)+12]
 21910  012506  0EFF               	movlw	-1
 21911  012508  6AE3               	clrf	plusw1,c
 21912  01250A  D02F               	goto	l7002
 21913  01250C                     l6992:
 21914                           
 21915                           ;stkvar	_temp @ sp[(-13)+8]
 21916                           ;stkvar	_bexp @ sp[(-13)+10]
 21917  01250C  0EFB               	movlw	-5
 21918  01250E  006F FF8C  F032    	movff	plusw1,btemp
 21919  012514  0EFD               	movlw	-3
 21920  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 21921                           
 21922                           ;stkvar	_prod @ sp[(-13)+0]
 21923  01251C  50E1               	movf	fsr1l,w,c
 21924  01251E  0FF3               	addlw	-13
 21925  012520  6ED9               	movwf	fsr2l,c
 21926  012522  50E2               	movf	fsr1h,w,c
 21927  012524  6EDA               	movwf	fsr2h,c
 21928  012526  0EFF               	movlw	255
 21929  012528  22DA               	addwfc	fsr2h,f,c
 21930  01252A  0EFF               	movlw	255
 21931  01252C  16DE               	andwf	postinc2,f,c
 21932  01252E  0EFF               	movlw	255
 21933  012530  16DE               	andwf	postinc2,f,c
 21934  012532  0E7F               	movlw	127
 21935  012534  16DE               	andwf	postinc2,f,c
 21936  012536  0E00               	movlw	0
 21937  012538  16DE               	andwf	postinc2,f,c
 21938                           
 21939                           ;stkvar	_bexp @ sp[(-13)+10]
 21940  01253A  0EFD               	movlw	-3
 21941  01253C  A0E3               	btfss	plusw1,0,c
 21942  01253E  D008               	goto	l7000
 21943                           
 21944                           ;stkvar	_prod @ sp[(-13)+0]
 21945  012540  0EF5               	movlw	245
 21946  012542  24E1               	addwf	fsr1l,w,c
 21947  012544  6ED9               	movwf	fsr2l,c
 21948  012546  0EFF               	movlw	255
 21949  012548  20E2               	addwfc	fsr1h,w,c
 21950  01254A  6EDA               	movwf	fsr2h,c
 21951  01254C  0E00               	movlw	0
 21952  01254E  8EDB               	bsf	plusw2,7,c
 21953  012550                     l7000:
 21954                           
 21955                           ;stkvar	_prod @ sp[(-13)+0]
 21956  012550  0EF6               	movlw	246
 21957  012552  24E1               	addwf	fsr1l,w,c
 21958  012554  6ED9               	movwf	fsr2l,c
 21959  012556  0EFF               	movlw	255
 21960  012558  20E2               	addwfc	fsr1h,w,c
 21961  01255A  6EDA               	movwf	fsr2h,c
 21962                           
 21963                           ;stkvar	_bexp @ sp[(-13)+10]
 21964  01255C  0EFD               	movlw	-3
 21965  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21966  012564  90D8               	bcf	status,0,c
 21967  012566  303D               	rrcf	(btemp+11)^0,w,c
 21968  012568  6EDF               	movwf	indf2,c
 21969  01256A                     l7002:
 21970                           
 21971                           ;stkvar	_sign @ sp[(-13)+12]
 21972  01256A  0EFF               	movlw	-1
 21973  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21974                           
 21975                           ;stkvar	_prod @ sp[(-13)+0]
 21976  012572  0EF6               	movlw	246
 21977  012574  24E1               	addwf	fsr1l,w,c
 21978  012576  6ED9               	movwf	fsr2l,c
 21979  012578  0EFF               	movlw	255
 21980  01257A  20E2               	addwfc	fsr1h,w,c
 21981  01257C  6EDA               	movwf	fsr2h,c
 21982  01257E  503D               	movf	(btemp+11)^0,w,c
 21983  012580  12DF               	iorwf	indf2,f,c
 21984                           
 21985                           ;stkvar	_prod @ sp[(-13)+0]
 21986  012582  0EF3               	movlw	-13
 21987  012584  006F FF8C  F032    	movff	plusw1,btemp
 21988  01258A  0EF4               	movlw	-12
 21989  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 21990  012592  0EF5               	movlw	-11
 21991  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 21992  01259A  0EF6               	movlw	-10
 21993  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 21994  0125A2                     l2687:
 21995                           
 21996                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 21997  0125A2  0EEB               	movlw	235
 21998  0125A4  26E1               	addwf	fsr1l,f,c
 21999  0125A6  0EFF               	movlw	255
 22000  0125A8  22E2               	addwfc	fsr1h,f,c
 22001  0125AA  0012               	return		;funcret
 22002  0125AC                     __end_of___flmul:
 22003                           	opt callstack 0
 22004                           
 22005 ;; *************** function _SYSTEM_Initialize *****************
 22006 ;; Defined at:
 22007 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22008 ;; Parameters:    Size  Location     Type
 22009 ;;		None
 22010 ;; Auto vars:     Size  Location     Type
 22011 ;;		None
 22012 ;; Return value:  Size  Location     Type
 22013 ;;                  1  [STACK] void 
 22014 ;; Registers used:
 22015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22016 ;; Tracked objects:
 22017 ;;		On entry : 0/0
 22018 ;;		On exit  : 3F/3C
 22019 ;;		Unchanged: 0/0
 22020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22025 ;;Total ram usage:        0 bytes
 22026 ;; Hardware stack levels used:    1
 22027 ;; Hardware stack levels required when called:    8
 22028 ;; This function calls:
 22029 ;;		_ADCC_Initialize
 22030 ;;		_CLKREF_Initialize
 22031 ;;		_DMA1_Initialize
 22032 ;;		_DMA2_Initialize
 22033 ;;		_EXT_INT_Initialize
 22034 ;;		_FVR_Initialize
 22035 ;;		_INTERRUPT_Initialize
 22036 ;;		_OSCILLATOR_Initialize
 22037 ;;		_PIN_MANAGER_Initialize
 22038 ;;		_PMD_Initialize
 22039 ;;		_PWM8_Initialize
 22040 ;;		_SPI1_Initialize
 22041 ;;		_TMR2_Initialize
 22042 ;;		_TMR5_Initialize
 22043 ;;		_TMR6_Initialize
 22044 ;;		_UART1_Initialize
 22045 ;;		_UART2_Initialize
 22046 ;; This function is called by:
 22047 ;;		_main
 22048 ;; This function uses a reentrant model
 22049 ;;
 22050                           
 22051                           	psect	text89
 22052  017EDC                     __ptext89:
 22053                           	opt callstack 0
 22054  017EDC                     _SYSTEM_Initialize:
 22055                           	opt callstack 22
 22056                           
 22057                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22058                           
 22059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22060                           ;incstack = 0
 22061  017EDC  EC02  F0BD         	call	_INTERRUPT_Initialize	;wreg free
 22062                           
 22063                           ; BSR set to: 57
 22064                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22065  017EE0  EC6C  F0C4         	call	_PMD_Initialize	;wreg free
 22066                           
 22067                           ; BSR set to: 57
 22068                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22069  017EE4  EC8E  F0BA         	call	_PIN_MANAGER_Initialize	;wreg free
 22070                           
 22071                           ; BSR set to: 58
 22072                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22073  017EE8  EC61  F0C4         	call	_OSCILLATOR_Initialize	;wreg free
 22074                           
 22075                           ; BSR set to: 57
 22076                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22077  017EEC  ECD3  F0C4         	call	_FVR_Initialize	;wreg free
 22078                           
 22079                           ; BSR set to: 62
 22080                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22081  017EF0  EC98  F0BC         	call	_ADCC_Initialize	;wreg free
 22082                           
 22083                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22084  017EF4  EC3F  F0C4         	call	_TMR2_Initialize	;wreg free
 22085                           
 22086                           ; BSR set to: 57
 22087                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22088  017EF8  EC56  F0C4         	call	_PWM8_Initialize	;wreg free
 22089                           
 22090                           ; BSR set to: 63
 22091                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22092  017EFC  ECFE  F0C0         	call	_EXT_INT_Initialize	;wreg free
 22093                           
 22094                           ; BSR set to: 57
 22095                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22096  017F00  ECA3  F0C1         	call	_TMR6_Initialize	;wreg free
 22097                           
 22098                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22099  017F04  EC91  F0BF         	call	_TMR5_Initialize	;wreg free
 22100                           
 22101                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22102  017F08  EC67  F0BD         	call	_UART1_Initialize	;wreg free
 22103                           
 22104                           ; BSR set to: 57
 22105                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22106  017F0C  ECFB  F0BD         	call	_UART2_Initialize	;wreg free
 22107                           
 22108                           ; BSR set to: 57
 22109                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22110  017F10  EC4B  F0C4         	call	_SPI1_Initialize	;wreg free
 22111                           
 22112                           ; BSR set to: 61
 22113                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22114  017F14  EC85  F0BE         	call	_DMA2_Initialize	;wreg free
 22115                           
 22116                           ; BSR set to: 59
 22117                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22118  017F18  EC63  F0BC         	call	_DMA1_Initialize	;wreg free
 22119                           
 22120                           ; BSR set to: 59
 22121                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22122  017F1C  ECAD  F0C4         	call	_CLKREF_Initialize	;wreg free
 22123                           
 22124                           ; BSR set to: 60
 22125                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22126  017F20  0012               	return		;funcret
 22127  017F22                     __end_of_SYSTEM_Initialize:
 22128                           	opt callstack 0
 22129                           
 22130 ;; *************** function _UART2_Initialize *****************
 22131 ;; Defined at:
 22132 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;		None
 22135 ;; Auto vars:     Size  Location     Type
 22136 ;;		None
 22137 ;; Return value:  Size  Location     Type
 22138 ;;                  1  [STACK] void 
 22139 ;; Registers used:
 22140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22141 ;; Tracked objects:
 22142 ;;		On entry : 3F/39
 22143 ;;		On exit  : 3F/39
 22144 ;;		Unchanged: 0/0
 22145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;Total ram usage:        0 bytes
 22151 ;; Hardware stack levels used:    1
 22152 ;; Hardware stack levels required when called:    7
 22153 ;; This function calls:
 22154 ;;		_UART2_SetRxInterruptHandler
 22155 ;;		_UART2_SetTxInterruptHandler
 22156 ;; This function is called by:
 22157 ;;		_SYSTEM_Initialize
 22158 ;; This function uses a reentrant model
 22159 ;;
 22160                           
 22161                           	psect	text90
 22162  017BF6                     __ptext90:
 22163                           	opt callstack 0
 22164  017BF6                     _UART2_Initialize:
 22165                           	opt callstack 22
 22166                           
 22167                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22168                           
 22169                           ; BSR set to: 60
 22170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22171                           ;incstack = 0
 22172  017BF6  0139               	movlb	57	; () banked
 22173  017BF8  9596               	bcf	150,2,b	;volatile
 22174                           
 22175                           ; BSR set to: 57
 22176                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22177  017BFA  0EDA               	movlw	low _UART2_Receive_ISR
 22178  017BFC  6EE6               	movwf	postinc1,c
 22179  017BFE  0E87               	movlw	high _UART2_Receive_ISR
 22180  017C00  6EE6               	movwf	postinc1,c
 22181  017C02  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22182  017C04  6EE6               	movwf	postinc1,c
 22183  017C06  EC31  F0C2         	call	_UART2_SetRxInterruptHandler	;wreg free
 22184                           
 22185                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22186  017C0A  0139               	movlb	57	; () banked
 22187  017C0C  9796               	bcf	150,3,b	;volatile
 22188                           
 22189                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22190  017C0E  0E1A               	movlw	low _UART2_Transmit_ISR
 22191  017C10  6EE6               	movwf	postinc1,c
 22192  017C12  0E83               	movlw	high _UART2_Transmit_ISR
 22193  017C14  6EE6               	movwf	postinc1,c
 22194  017C16  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22195  017C18  6EE6               	movwf	postinc1,c
 22196  017C1A  EC1D  F0C2         	call	_UART2_SetTxInterruptHandler	;wreg free
 22197                           
 22198                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22199  017C1E  013D               	movlb	61	; () banked
 22200  017C20  6BD4               	clrf	212,b	;volatile
 22201                           
 22202                           ; BSR set to: 61
 22203                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22204  017C22  6BD6               	clrf	214,b	;volatile
 22205                           
 22206                           ; BSR set to: 61
 22207                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22208  017C24  6BD8               	clrf	216,b	;volatile
 22209                           
 22210                           ; BSR set to: 61
 22211                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22212  017C26  0EB0               	movlw	176
 22213  017C28  6FDA               	movwf	218,b	;volatile
 22214                           
 22215                           ; BSR set to: 61
 22216                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22217  017C2A  0E80               	movlw	128
 22218  017C2C  6FDB               	movwf	219,b	;volatile
 22219                           
 22220                           ; BSR set to: 61
 22221                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22222  017C2E  6BDC               	clrf	220,b	;volatile
 22223                           
 22224                           ; BSR set to: 61
 22225                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22226  017C30  0E82               	movlw	130
 22227  017C32  6FDD               	movwf	221,b	;volatile
 22228                           
 22229                           ; BSR set to: 61
 22230                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22231  017C34  0E06               	movlw	6
 22232  017C36  6FDE               	movwf	222,b	;volatile
 22233                           
 22234                           ; BSR set to: 61
 22235                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22236  017C38  6BDF               	clrf	223,b	;volatile
 22237                           
 22238                           ; BSR set to: 61
 22239                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22240  017C3A  6BE0               	clrf	224,b	;volatile
 22241                           
 22242                           ; BSR set to: 61
 22243                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22244  017C3C  6BE1               	clrf	225,b	;volatile
 22245                           
 22246                           ; BSR set to: 61
 22247                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22248  017C3E  6BE2               	clrf	226,b	;volatile
 22249                           
 22250                           ; BSR set to: 61
 22251                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22252  017C40  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 22253                           
 22254                           ; BSR set to: 61
 22255                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22256  017C42  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 22257                           
 22258                           ; BSR set to: 61
 22259                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22260  017C44  0E40               	movlw	64
 22261  017C46  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22262                           
 22263                           ; BSR set to: 61
 22264                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22265  017C48  6A28               	clrf	_uart2RxHead^0,c	;volatile
 22266                           
 22267                           ; BSR set to: 61
 22268                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22269  017C4A  6A27               	clrf	_uart2RxTail^0,c	;volatile
 22270                           
 22271                           ; BSR set to: 61
 22272                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22273  017C4C  6A26               	clrf	_uart2RxCount^0,c	;volatile
 22274                           
 22275                           ; BSR set to: 61
 22276                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22277  017C4E  0139               	movlb	57	; () banked
 22278  017C50  8596               	bsf	150,2,b	;volatile
 22279                           
 22280                           ; BSR set to: 57
 22281                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22282  017C52  0012               	return		;funcret
 22283  017C54                     __end_of_UART2_Initialize:
 22284                           	opt callstack 0
 22285                           
 22286 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22287 ;; Defined at:
 22288 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22289 ;; Parameters:    Size  Location     Type
 22290 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22291 ;;		 -> UART2_Transmit_ISR(1), 
 22292 ;; Auto vars:     Size  Location     Type
 22293 ;;		None
 22294 ;; Return value:  Size  Location     Type
 22295 ;;                  1  [STACK] void 
 22296 ;; Registers used:
 22297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22298 ;; Tracked objects:
 22299 ;;		On entry : 3F/39
 22300 ;;		On exit  : 0/0
 22301 ;;		Unchanged: 0/0
 22302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22307 ;;Total ram usage:        0 bytes
 22308 ;; Hardware stack levels used:    1
 22309 ;; Hardware stack levels required when called:    6
 22310 ;; This function calls:
 22311 ;;		Nothing
 22312 ;; This function is called by:
 22313 ;;		_UART2_Initialize
 22314 ;; This function uses a reentrant model
 22315 ;;
 22316                           
 22317                           	psect	text91
 22318  01843A                     __ptext91:
 22319                           	opt callstack 0
 22320  01843A                     _UART2_SetTxInterruptHandler:
 22321                           	opt callstack 22
 22322                           
 22323                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22324                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22325                           
 22326                           ; BSR set to: 57
 22327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22328                           ;incstack = 0
 22329  01843A  50E1               	movf	fsr1l,w,c
 22330  01843C  0FFD               	addlw	-3
 22331  01843E  6ED9               	movwf	fsr2l,c
 22332  018440  50E2               	movf	fsr1h,w,c
 22333  018442  6EDA               	movwf	fsr2h,c
 22334  018444  0EFF               	movlw	255
 22335  018446  22DA               	addwfc	fsr2h,f,c
 22336  018448  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 22337  01844E  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 22338  018454  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 22339                           
 22340                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22341  01845A  52E5               	movf	postdec1,f,c
 22342  01845C  52E5               	movf	postdec1,f,c
 22343  01845E  52E5               	movf	postdec1,f,c
 22344  018460  0012               	return		;funcret
 22345  018462                     __end_of_UART2_SetTxInterruptHandler:
 22346                           	opt callstack 0
 22347                           
 22348 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22349 ;; Defined at:
 22350 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22351 ;; Parameters:    Size  Location     Type
 22352 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22353 ;;		 -> UART2_Receive_ISR(1), 
 22354 ;; Auto vars:     Size  Location     Type
 22355 ;;		None
 22356 ;; Return value:  Size  Location     Type
 22357 ;;                  1  [STACK] void 
 22358 ;; Registers used:
 22359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22360 ;; Tracked objects:
 22361 ;;		On entry : 3F/39
 22362 ;;		On exit  : 0/0
 22363 ;;		Unchanged: 0/0
 22364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22369 ;;Total ram usage:        0 bytes
 22370 ;; Hardware stack levels used:    1
 22371 ;; Hardware stack levels required when called:    6
 22372 ;; This function calls:
 22373 ;;		Nothing
 22374 ;; This function is called by:
 22375 ;;		_UART2_Initialize
 22376 ;; This function uses a reentrant model
 22377 ;;
 22378                           
 22379                           	psect	text92
 22380  018462                     __ptext92:
 22381                           	opt callstack 0
 22382  018462                     _UART2_SetRxInterruptHandler:
 22383                           	opt callstack 22
 22384                           
 22385                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22386                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22387                           
 22388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22389                           ;incstack = 0
 22390  018462  50E1               	movf	fsr1l,w,c
 22391  018464  0FFD               	addlw	-3
 22392  018466  6ED9               	movwf	fsr2l,c
 22393  018468  50E2               	movf	fsr1h,w,c
 22394  01846A  6EDA               	movwf	fsr2h,c
 22395  01846C  0EFF               	movlw	255
 22396  01846E  22DA               	addwfc	fsr2h,f,c
 22397  018470  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22398  018476  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22399  01847C  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22400                           
 22401                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22402  018482  52E5               	movf	postdec1,f,c
 22403  018484  52E5               	movf	postdec1,f,c
 22404  018486  52E5               	movf	postdec1,f,c
 22405  018488  0012               	return		;funcret
 22406  01848A                     __end_of_UART2_SetRxInterruptHandler:
 22407                           	opt callstack 0
 22408                           
 22409 ;; *************** function _UART1_Initialize *****************
 22410 ;; Defined at:
 22411 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;		None
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;		None
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1  [STACK] void 
 22418 ;; Registers used:
 22419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/39
 22422 ;;		On exit  : 3F/39
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22429 ;;Total ram usage:        0 bytes
 22430 ;; Hardware stack levels used:    1
 22431 ;; Hardware stack levels required when called:    7
 22432 ;; This function calls:
 22433 ;;		_UART1_SetRxInterruptHandler
 22434 ;;		_UART1_SetTxInterruptHandler
 22435 ;; This function is called by:
 22436 ;;		_SYSTEM_Initialize
 22437 ;; This function uses a reentrant model
 22438 ;;
 22439                           
 22440                           	psect	text93
 22441  017ACE                     __ptext93:
 22442                           	opt callstack 0
 22443  017ACE                     _UART1_Initialize:
 22444                           	opt callstack 22
 22445                           
 22446                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22447                           
 22448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22449                           ;incstack = 0
 22450  017ACE  0139               	movlb	57	; () banked
 22451  017AD0  9793               	bcf	147,3,b	;volatile
 22452                           
 22453                           ; BSR set to: 57
 22454                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22455  017AD2  0EBC               	movlw	low _UART1_Receive_ISR
 22456  017AD4  6EE6               	movwf	postinc1,c
 22457  017AD6  0E87               	movlw	high _UART1_Receive_ISR
 22458  017AD8  6EE6               	movwf	postinc1,c
 22459  017ADA  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22460  017ADC  6EE6               	movwf	postinc1,c
 22461  017ADE  EC59  F0C2         	call	_UART1_SetRxInterruptHandler	;wreg free
 22462                           
 22463                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22464  017AE2  0139               	movlb	57	; () banked
 22465  017AE4  9993               	bcf	147,4,b	;volatile
 22466                           
 22467                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22468  017AE6  0EEE               	movlw	low _UART1_Transmit_ISR
 22469  017AE8  6EE6               	movwf	postinc1,c
 22470  017AEA  0E82               	movlw	high _UART1_Transmit_ISR
 22471  017AEC  6EE6               	movwf	postinc1,c
 22472  017AEE  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22473  017AF0  6EE6               	movwf	postinc1,c
 22474  017AF2  EC45  F0C2         	call	_UART1_SetTxInterruptHandler	;wreg free
 22475                           
 22476                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22477  017AF6  013D               	movlb	61	; () banked
 22478  017AF8  6BEC               	clrf	236,b	;volatile
 22479                           
 22480                           ; BSR set to: 61
 22481                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22482  017AFA  6BED               	clrf	237,b	;volatile
 22483                           
 22484                           ; BSR set to: 61
 22485                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22486  017AFC  6BEE               	clrf	238,b	;volatile
 22487                           
 22488                           ; BSR set to: 61
 22489                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22490  017AFE  6BEF               	clrf	239,b	;volatile
 22491                           
 22492                           ; BSR set to: 61
 22493                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22494  017B00  6BF0               	clrf	240,b	;volatile
 22495                           
 22496                           ; BSR set to: 61
 22497                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22498  017B02  6BF1               	clrf	241,b	;volatile
 22499                           
 22500                           ; BSR set to: 61
 22501                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22502  017B04  0EB0               	movlw	176
 22503  017B06  6FF2               	movwf	242,b	;volatile
 22504                           
 22505                           ; BSR set to: 61
 22506                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22507  017B08  0E80               	movlw	128
 22508  017B0A  6FF3               	movwf	243,b	;volatile
 22509                           
 22510                           ; BSR set to: 61
 22511                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22512  017B0C  6BF4               	clrf	244,b	;volatile
 22513                           
 22514                           ; BSR set to: 61
 22515                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22516  017B0E  0E82               	movlw	130
 22517  017B10  6FF5               	movwf	245,b	;volatile
 22518                           
 22519                           ; BSR set to: 61
 22520                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22521  017B12  0E06               	movlw	6
 22522  017B14  6FF6               	movwf	246,b	;volatile
 22523                           
 22524                           ; BSR set to: 61
 22525                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22526  017B16  6BF7               	clrf	247,b	;volatile
 22527                           
 22528                           ; BSR set to: 61
 22529                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22530  017B18  6BF8               	clrf	248,b	;volatile
 22531                           
 22532                           ; BSR set to: 61
 22533                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22534  017B1A  6BF9               	clrf	249,b	;volatile
 22535                           
 22536                           ; BSR set to: 61
 22537                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22538  017B1C  6BFA               	clrf	250,b	;volatile
 22539                           
 22540                           ; BSR set to: 61
 22541                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22542  017B1E  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22543                           
 22544                           ; BSR set to: 61
 22545                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22546  017B20  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22547                           
 22548                           ; BSR set to: 61
 22549                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22550  017B22  0E40               	movlw	64
 22551  017B24  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22552                           
 22553                           ; BSR set to: 61
 22554                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22555  017B26  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22556                           
 22557                           ; BSR set to: 61
 22558                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22559  017B28  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22560                           
 22561                           ; BSR set to: 61
 22562                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22563  017B2A  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22564                           
 22565                           ; BSR set to: 61
 22566                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22567  017B2C  0139               	movlb	57	; () banked
 22568  017B2E  8793               	bsf	147,3,b	;volatile
 22569                           
 22570                           ; BSR set to: 57
 22571                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22572  017B30  0012               	return		;funcret
 22573  017B32                     __end_of_UART1_Initialize:
 22574                           	opt callstack 0
 22575                           
 22576 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22577 ;; Defined at:
 22578 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22579 ;; Parameters:    Size  Location     Type
 22580 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22581 ;;		 -> UART1_Transmit_ISR(1), 
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;		None
 22584 ;; Return value:  Size  Location     Type
 22585 ;;                  1  [STACK] void 
 22586 ;; Registers used:
 22587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22588 ;; Tracked objects:
 22589 ;;		On entry : 3F/39
 22590 ;;		On exit  : 0/0
 22591 ;;		Unchanged: 0/0
 22592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22597 ;;Total ram usage:        0 bytes
 22598 ;; Hardware stack levels used:    1
 22599 ;; Hardware stack levels required when called:    6
 22600 ;; This function calls:
 22601 ;;		Nothing
 22602 ;; This function is called by:
 22603 ;;		_UART1_Initialize
 22604 ;; This function uses a reentrant model
 22605 ;;
 22606                           
 22607                           	psect	text94
 22608  01848A                     __ptext94:
 22609                           	opt callstack 0
 22610  01848A                     _UART1_SetTxInterruptHandler:
 22611                           	opt callstack 22
 22612                           
 22613                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22614                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22615                           
 22616                           ; BSR set to: 57
 22617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22618                           ;incstack = 0
 22619  01848A  50E1               	movf	fsr1l,w,c
 22620  01848C  0FFD               	addlw	-3
 22621  01848E  6ED9               	movwf	fsr2l,c
 22622  018490  50E2               	movf	fsr1h,w,c
 22623  018492  6EDA               	movwf	fsr2h,c
 22624  018494  0EFF               	movlw	255
 22625  018496  22DA               	addwfc	fsr2h,f,c
 22626  018498  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22627  01849E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22628  0184A4  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22629                           
 22630                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22631  0184AA  52E5               	movf	postdec1,f,c
 22632  0184AC  52E5               	movf	postdec1,f,c
 22633  0184AE  52E5               	movf	postdec1,f,c
 22634  0184B0  0012               	return		;funcret
 22635  0184B2                     __end_of_UART1_SetTxInterruptHandler:
 22636                           	opt callstack 0
 22637                           
 22638 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22639 ;; Defined at:
 22640 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22641 ;; Parameters:    Size  Location     Type
 22642 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22643 ;;		 -> UART1_Receive_ISR(1), 
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;		None
 22646 ;; Return value:  Size  Location     Type
 22647 ;;                  1  [STACK] void 
 22648 ;; Registers used:
 22649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22650 ;; Tracked objects:
 22651 ;;		On entry : 3F/39
 22652 ;;		On exit  : 0/0
 22653 ;;		Unchanged: 0/0
 22654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;Total ram usage:        0 bytes
 22660 ;; Hardware stack levels used:    1
 22661 ;; Hardware stack levels required when called:    6
 22662 ;; This function calls:
 22663 ;;		Nothing
 22664 ;; This function is called by:
 22665 ;;		_UART1_Initialize
 22666 ;; This function uses a reentrant model
 22667 ;;
 22668                           
 22669                           	psect	text95
 22670  0184B2                     __ptext95:
 22671                           	opt callstack 0
 22672  0184B2                     _UART1_SetRxInterruptHandler:
 22673                           	opt callstack 22
 22674                           
 22675                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22676                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22677                           
 22678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22679                           ;incstack = 0
 22680  0184B2  50E1               	movf	fsr1l,w,c
 22681  0184B4  0FFD               	addlw	-3
 22682  0184B6  6ED9               	movwf	fsr2l,c
 22683  0184B8  50E2               	movf	fsr1h,w,c
 22684  0184BA  6EDA               	movwf	fsr2h,c
 22685  0184BC  0EFF               	movlw	255
 22686  0184BE  22DA               	addwfc	fsr2h,f,c
 22687  0184C0  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22688  0184C6  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22689  0184CC  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22690                           
 22691                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22692  0184D2  52E5               	movf	postdec1,f,c
 22693  0184D4  52E5               	movf	postdec1,f,c
 22694  0184D6  52E5               	movf	postdec1,f,c
 22695  0184D8  0012               	return		;funcret
 22696  0184DA                     __end_of_UART1_SetRxInterruptHandler:
 22697                           	opt callstack 0
 22698                           
 22699 ;; *************** function _TMR6_Initialize *****************
 22700 ;; Defined at:
 22701 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22702 ;; Parameters:    Size  Location     Type
 22703 ;;		None
 22704 ;; Auto vars:     Size  Location     Type
 22705 ;;		None
 22706 ;; Return value:  Size  Location     Type
 22707 ;;                  1  [STACK] void 
 22708 ;; Registers used:
 22709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22710 ;; Tracked objects:
 22711 ;;		On entry : 3F/39
 22712 ;;		On exit  : 0/0
 22713 ;;		Unchanged: 0/0
 22714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;Total ram usage:        0 bytes
 22720 ;; Hardware stack levels used:    1
 22721 ;; Hardware stack levels required when called:    7
 22722 ;; This function calls:
 22723 ;;		_TMR6_SetInterruptHandler
 22724 ;; This function is called by:
 22725 ;;		_SYSTEM_Initialize
 22726 ;; This function uses a reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text96
 22730  018346                     __ptext96:
 22731                           	opt callstack 0
 22732  018346                     _TMR6_Initialize:
 22733                           	opt callstack 22
 22734                           
 22735                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22736                           
 22737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22738                           ;incstack = 0
 22739  018346  0E01               	movlw	1
 22740  018348  6E96               	movwf	150,c	;volatile
 22741                           
 22742                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22743  01834A  6A95               	clrf	149,c	;volatile
 22744                           
 22745                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22746  01834C  6A97               	clrf	151,c	;volatile
 22747                           
 22748                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22749  01834E  0E7C               	movlw	124
 22750  018350  6E93               	movwf	147,c	;volatile
 22751                           
 22752                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22753  018352  6A92               	clrf	146,c	;volatile
 22754                           
 22755                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22756  018354  0139               	movlb	57	; () banked
 22757  018356  91A9               	bcf	169,0,b	;volatile
 22758                           
 22759                           ; BSR set to: 57
 22760                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22761  018358  8199               	bsf	153,0,b	;volatile
 22762                           
 22763                           ; BSR set to: 57
 22764                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22765  01835A  0E68               	movlw	low _TMR6_DefaultInterruptHandler
 22766  01835C  6EE6               	movwf	postinc1,c
 22767  01835E  0E7F               	movlw	high _TMR6_DefaultInterruptHandler
 22768  018360  6EE6               	movwf	postinc1,c
 22769  018362  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22770  018364  6EE6               	movwf	postinc1,c
 22771  018366  EC6D  F0C2         	call	_TMR6_SetInterruptHandler	;wreg free
 22772                           
 22773                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22774  01836A  0EE0               	movlw	224
 22775  01836C  6E94               	movwf	148,c	;volatile
 22776                           
 22777                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22778  01836E  0012               	return		;funcret
 22779  018370                     __end_of_TMR6_Initialize:
 22780                           	opt callstack 0
 22781                           
 22782 ;; *************** function _TMR6_SetInterruptHandler *****************
 22783 ;; Defined at:
 22784 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22785 ;; Parameters:    Size  Location     Type
 22786 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22787 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22788 ;; Auto vars:     Size  Location     Type
 22789 ;;		None
 22790 ;; Return value:  Size  Location     Type
 22791 ;;                  1  [STACK] void 
 22792 ;; Registers used:
 22793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22794 ;; Tracked objects:
 22795 ;;		On entry : 3F/39
 22796 ;;		On exit  : 0/0
 22797 ;;		Unchanged: 0/0
 22798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22803 ;;Total ram usage:        0 bytes
 22804 ;; Hardware stack levels used:    1
 22805 ;; Hardware stack levels required when called:    6
 22806 ;; This function calls:
 22807 ;;		Nothing
 22808 ;; This function is called by:
 22809 ;;		_TMR6_Initialize
 22810 ;; This function uses a reentrant model
 22811 ;;
 22812                           
 22813                           	psect	text97
 22814  0184DA                     __ptext97:
 22815                           	opt callstack 0
 22816  0184DA                     _TMR6_SetInterruptHandler:
 22817                           	opt callstack 22
 22818                           
 22819                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22820                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22821                           
 22822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22823                           ;incstack = 0
 22824  0184DA  50E1               	movf	fsr1l,w,c
 22825  0184DC  0FFD               	addlw	-3
 22826  0184DE  6ED9               	movwf	fsr2l,c
 22827  0184E0  50E2               	movf	fsr1h,w,c
 22828  0184E2  6EDA               	movwf	fsr2h,c
 22829  0184E4  0EFF               	movlw	255
 22830  0184E6  22DA               	addwfc	fsr2h,f,c
 22831  0184E8  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22832  0184EE  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22833  0184F4  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22834                           
 22835                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22836  0184FA  52E5               	movf	postdec1,f,c
 22837  0184FC  52E5               	movf	postdec1,f,c
 22838  0184FE  52E5               	movf	postdec1,f,c
 22839  018500  0012               	return		;funcret
 22840  018502                     __end_of_TMR6_SetInterruptHandler:
 22841                           	opt callstack 0
 22842                           
 22843 ;; *************** function _TMR5_Initialize *****************
 22844 ;; Defined at:
 22845 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22846 ;; Parameters:    Size  Location     Type
 22847 ;;		None
 22848 ;; Auto vars:     Size  Location     Type
 22849 ;;		None
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  1  [STACK] void 
 22852 ;; Registers used:
 22853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22854 ;; Tracked objects:
 22855 ;;		On entry : 0/39
 22856 ;;		On exit  : 0/0
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;Total ram usage:        0 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:    7
 22866 ;; This function calls:
 22867 ;;		_TMR5_SetInterruptHandler
 22868 ;; This function is called by:
 22869 ;;		_SYSTEM_Initialize
 22870 ;; This function uses a reentrant model
 22871 ;;
 22872                           
 22873                           	psect	text98
 22874  017F22                     __ptext98:
 22875                           	opt callstack 0
 22876  017F22                     _TMR5_Initialize:
 22877                           	opt callstack 22
 22878                           
 22879                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22880                           
 22881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22882                           ;incstack = 0
 22883  017F22  6A9B               	clrf	155,c	;volatile
 22884                           
 22885                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22886  017F24  6A9C               	clrf	156,c	;volatile
 22887                           
 22888                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22889  017F26  0E01               	movlw	1
 22890  017F28  6E9D               	movwf	157,c	;volatile
 22891                           
 22892                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22893  017F2A  0E63               	movlw	99
 22894  017F2C  6E99               	movwf	153,c	;volatile
 22895                           
 22896                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22897  017F2E  0EC0               	movlw	192
 22898  017F30  6E98               	movwf	152,c	;volatile
 22899                           
 22900                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22901  017F32  5098               	movf	152,w,c	;volatile
 22902  017F34  006F FE64  F032    	movff	16281,btemp	;volatile
 22903  017F3A  6A33               	clrf	(btemp+1)^0,c
 22904  017F3C  0060  F0C8  F033   	movff	btemp,btemp+1
 22905  017F42  6A32               	clrf	btemp^0,c
 22906  017F44  1032               	iorwf	btemp^0,w,c
 22907  017F46  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22908  017F48  5033               	movf	(btemp+1)^0,w,c
 22909  017F4A  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22910                           
 22911                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22912  017F4C  0139               	movlb	57	; () banked
 22913  017F4E  9DA8               	bcf	168,6,b	;volatile
 22914                           
 22915                           ; BSR set to: 57
 22916                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22917  017F50  8D98               	bsf	152,6,b	;volatile
 22918                           
 22919                           ; BSR set to: 57
 22920                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22921  017F52  0ECA               	movlw	low _TMR5_DefaultInterruptHandler
 22922  017F54  6EE6               	movwf	postinc1,c
 22923  017F56  0E85               	movlw	high _TMR5_DefaultInterruptHandler
 22924  017F58  6EE6               	movwf	postinc1,c
 22925  017F5A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22926  017F5C  6EE6               	movwf	postinc1,c
 22927  017F5E  EC81  F0C2         	call	_TMR5_SetInterruptHandler	;wreg free
 22928                           
 22929                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22930  017F62  0E31               	movlw	49
 22931  017F64  6E9A               	movwf	154,c	;volatile
 22932                           
 22933                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22934  017F66  0012               	return		;funcret
 22935  017F68                     __end_of_TMR5_Initialize:
 22936                           	opt callstack 0
 22937                           
 22938 ;; *************** function _TMR5_SetInterruptHandler *****************
 22939 ;; Defined at:
 22940 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22941 ;; Parameters:    Size  Location     Type
 22942 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22943 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22944 ;; Auto vars:     Size  Location     Type
 22945 ;;		None
 22946 ;; Return value:  Size  Location     Type
 22947 ;;                  1  [STACK] void 
 22948 ;; Registers used:
 22949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22950 ;; Tracked objects:
 22951 ;;		On entry : 3F/39
 22952 ;;		On exit  : 0/0
 22953 ;;		Unchanged: 0/0
 22954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;Total ram usage:        0 bytes
 22960 ;; Hardware stack levels used:    1
 22961 ;; Hardware stack levels required when called:    6
 22962 ;; This function calls:
 22963 ;;		Nothing
 22964 ;; This function is called by:
 22965 ;;		_TMR5_Initialize
 22966 ;; This function uses a reentrant model
 22967 ;;
 22968                           
 22969                           	psect	text99
 22970  018502                     __ptext99:
 22971                           	opt callstack 0
 22972  018502                     _TMR5_SetInterruptHandler:
 22973                           	opt callstack 22
 22974                           
 22975                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22976                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22977                           
 22978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22979                           ;incstack = 0
 22980  018502  50E1               	movf	fsr1l,w,c
 22981  018504  0FFD               	addlw	-3
 22982  018506  6ED9               	movwf	fsr2l,c
 22983  018508  50E2               	movf	fsr1h,w,c
 22984  01850A  6EDA               	movwf	fsr2h,c
 22985  01850C  0EFF               	movlw	255
 22986  01850E  22DA               	addwfc	fsr2h,f,c
 22987  018510  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22988  018516  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22989  01851C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22990                           
 22991                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22992  018522  52E5               	movf	postdec1,f,c
 22993  018524  52E5               	movf	postdec1,f,c
 22994  018526  52E5               	movf	postdec1,f,c
 22995  018528  0012               	return		;funcret
 22996  01852A                     __end_of_TMR5_SetInterruptHandler:
 22997                           	opt callstack 0
 22998                           
 22999 ;; *************** function _TMR2_Initialize *****************
 23000 ;; Defined at:
 23001 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23002 ;; Parameters:    Size  Location     Type
 23003 ;;		None
 23004 ;; Auto vars:     Size  Location     Type
 23005 ;;		None
 23006 ;; Return value:  Size  Location     Type
 23007 ;;                  1  [STACK] void 
 23008 ;; Registers used:
 23009 ;;		wreg, status,2
 23010 ;; Tracked objects:
 23011 ;;		On entry : 0/3E
 23012 ;;		On exit  : 3F/39
 23013 ;;		Unchanged: 0/0
 23014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23019 ;;Total ram usage:        0 bytes
 23020 ;; Hardware stack levels used:    1
 23021 ;; Hardware stack levels required when called:    6
 23022 ;; This function calls:
 23023 ;;		Nothing
 23024 ;; This function is called by:
 23025 ;;		_SYSTEM_Initialize
 23026 ;; This function uses a reentrant model
 23027 ;;
 23028                           
 23029                           	psect	text100
 23030  01887E                     __ptext100:
 23031                           	opt callstack 0
 23032  01887E                     _TMR2_Initialize:
 23033                           	opt callstack 23
 23034                           
 23035                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23036                           
 23037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23038                           ;incstack = 0
 23039  01887E  0E01               	movlw	1
 23040  018880  6EAE               	movwf	174,c	;volatile
 23041                           
 23042                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23043  018882  6AAD               	clrf	173,c	;volatile
 23044                           
 23045                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23046  018884  6AAF               	clrf	175,c	;volatile
 23047                           
 23048                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23049  018886  0E63               	movlw	99
 23050  018888  6EAB               	movwf	171,c	;volatile
 23051                           
 23052                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23053  01888A  6AAA               	clrf	170,c	;volatile
 23054                           
 23055                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23056  01888C  0139               	movlb	57	; () banked
 23057  01888E  95A4               	bcf	164,2,b	;volatile
 23058                           
 23059                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23060  018890  0EC0               	movlw	192
 23061  018892  6EAC               	movwf	172,c	;volatile
 23062                           
 23063                           ; BSR set to: 57
 23064                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23065  018894  0012               	return		;funcret
 23066  018896                     __end_of_TMR2_Initialize:
 23067                           	opt callstack 0
 23068                           
 23069 ;; *************** function _SPI1_Initialize *****************
 23070 ;; Defined at:
 23071 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23072 ;; Parameters:    Size  Location     Type
 23073 ;;		None
 23074 ;; Auto vars:     Size  Location     Type
 23075 ;;		None
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1  [STACK] void 
 23078 ;; Registers used:
 23079 ;;		wreg, status,2
 23080 ;; Tracked objects:
 23081 ;;		On entry : 3F/39
 23082 ;;		On exit  : 3F/3D
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;Total ram usage:        0 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:    6
 23092 ;; This function calls:
 23093 ;;		Nothing
 23094 ;; This function is called by:
 23095 ;;		_SYSTEM_Initialize
 23096 ;; This function uses a reentrant model
 23097 ;;
 23098                           
 23099                           	psect	text101
 23100  018896                     __ptext101:
 23101                           	opt callstack 0
 23102  018896                     _SPI1_Initialize:
 23103                           	opt callstack 23
 23104                           
 23105                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23106                           
 23107                           ; BSR set to: 57
 23108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23109                           ;incstack = 0
 23110  018896  0E40               	movlw	64
 23111  018898  013D               	movlb	61	; () banked
 23112  01889A  6F15               	movwf	21,b	;volatile
 23113                           
 23114                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23115  01889C  0E03               	movlw	3
 23116  01889E  6F16               	movwf	22,b	;volatile
 23117                           
 23118                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23119  0188A0  0E4F               	movlw	79
 23120  0188A2  6F19               	movwf	25,b	;volatile
 23121                           
 23122                           ; BSR set to: 61
 23123                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23124  0188A4  6B1C               	clrf	28,b	;volatile
 23125                           
 23126                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23127  0188A6  0E83               	movlw	131
 23128  0188A8  6F14               	movwf	20,b	;volatile
 23129                           
 23130                           ; BSR set to: 61
 23131                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23132  0188AA  0012               	return		;funcret
 23133  0188AC                     __end_of_SPI1_Initialize:
 23134                           	opt callstack 0
 23135                           
 23136 ;; *************** function _PWM8_Initialize *****************
 23137 ;; Defined at:
 23138 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23139 ;; Parameters:    Size  Location     Type
 23140 ;;		None
 23141 ;; Auto vars:     Size  Location     Type
 23142 ;;		None
 23143 ;; Return value:  Size  Location     Type
 23144 ;;                  1  [STACK] void 
 23145 ;; Registers used:
 23146 ;;		wreg, status,2
 23147 ;; Tracked objects:
 23148 ;;		On entry : 3F/39
 23149 ;;		On exit  : 3F/3F
 23150 ;;		Unchanged: 0/0
 23151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23156 ;;Total ram usage:        0 bytes
 23157 ;; Hardware stack levels used:    1
 23158 ;; Hardware stack levels required when called:    6
 23159 ;; This function calls:
 23160 ;;		Nothing
 23161 ;; This function is called by:
 23162 ;;		_SYSTEM_Initialize
 23163 ;; This function uses a reentrant model
 23164 ;;
 23165                           
 23166                           	psect	text102
 23167  0188AC                     __ptext102:
 23168                           	opt callstack 0
 23169  0188AC                     _PWM8_Initialize:
 23170                           	opt callstack 23
 23171                           
 23172                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23173                           
 23174                           ; BSR set to: 61
 23175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23176                           ;incstack = 0
 23177  0188AC  0E80               	movlw	128
 23178  0188AE  6E62               	movwf	98,c	;volatile
 23179                           
 23180                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23181  0188B0  6A61               	clrf	97,c	;volatile
 23182                           
 23183                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23184  0188B2  0E40               	movlw	64
 23185  0188B4  6E60               	movwf	96,c	;volatile
 23186                           
 23187                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23188  0188B6  013F               	movlb	63	; () banked
 23189  0188B8  515F               	movf	95,w,b	;volatile
 23190  0188BA  0B3F               	andlw	-193
 23191  0188BC  0940               	iorlw	64
 23192  0188BE  6F5F               	movwf	95,b	;volatile
 23193                           
 23194                           ; BSR set to: 63
 23195                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23196  0188C0  0012               	return		;funcret
 23197  0188C2                     __end_of_PWM8_Initialize:
 23198                           	opt callstack 0
 23199                           
 23200 ;; *************** function _PMD_Initialize *****************
 23201 ;; Defined at:
 23202 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23203 ;; Parameters:    Size  Location     Type
 23204 ;;		None
 23205 ;; Auto vars:     Size  Location     Type
 23206 ;;		None
 23207 ;; Return value:  Size  Location     Type
 23208 ;;                  1  [STACK] void 
 23209 ;; Registers used:
 23210 ;;		None
 23211 ;; Tracked objects:
 23212 ;;		On entry : 3F/39
 23213 ;;		On exit  : 3F/39
 23214 ;;		Unchanged: 0/0
 23215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23220 ;;Total ram usage:        0 bytes
 23221 ;; Hardware stack levels used:    1
 23222 ;; Hardware stack levels required when called:    6
 23223 ;; This function calls:
 23224 ;;		Nothing
 23225 ;; This function is called by:
 23226 ;;		_SYSTEM_Initialize
 23227 ;; This function uses a reentrant model
 23228 ;;
 23229                           
 23230                           	psect	text103
 23231  0188D8                     __ptext103:
 23232                           	opt callstack 0
 23233  0188D8                     _PMD_Initialize:
 23234                           	opt callstack 23
 23235                           
 23236                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23237                           
 23238                           ; BSR set to: 63
 23239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23240                           ;incstack = 0
 23241  0188D8  0139               	movlb	57	; () banked
 23242  0188DA  6BC0               	clrf	192,b	;volatile
 23243                           
 23244                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23245  0188DC  6BC1               	clrf	193,b	;volatile
 23246                           
 23247                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23248  0188DE  6BC2               	clrf	194,b	;volatile
 23249                           
 23250                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23251  0188E0  6BC3               	clrf	195,b	;volatile
 23252                           
 23253                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23254  0188E2  6BC4               	clrf	196,b	;volatile
 23255                           
 23256                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23257  0188E4  6BC5               	clrf	197,b	;volatile
 23258                           
 23259                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23260  0188E6  6BC6               	clrf	198,b	;volatile
 23261                           
 23262                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23263  0188E8  6BC7               	clrf	199,b	;volatile
 23264                           
 23265                           ; BSR set to: 57
 23266                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23267  0188EA  0012               	return		;funcret
 23268  0188EC                     __end_of_PMD_Initialize:
 23269                           	opt callstack 0
 23270                           
 23271 ;; *************** function _PIN_MANAGER_Initialize *****************
 23272 ;; Defined at:
 23273 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23274 ;; Parameters:    Size  Location     Type
 23275 ;;		None
 23276 ;; Auto vars:     Size  Location     Type
 23277 ;;		None
 23278 ;; Return value:  Size  Location     Type
 23279 ;;                  1  [STACK] void 
 23280 ;; Registers used:
 23281 ;;		wreg, status,2
 23282 ;; Tracked objects:
 23283 ;;		On entry : 3F/39
 23284 ;;		On exit  : 3F/3A
 23285 ;;		Unchanged: 0/0
 23286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23291 ;;Total ram usage:        0 bytes
 23292 ;; Hardware stack levels used:    1
 23293 ;; Hardware stack levels required when called:    6
 23294 ;; This function calls:
 23295 ;;		Nothing
 23296 ;; This function is called by:
 23297 ;;		_SYSTEM_Initialize
 23298 ;; This function uses a reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text104
 23302  01751C                     __ptext104:
 23303                           	opt callstack 0
 23304  01751C                     _PIN_MANAGER_Initialize:
 23305                           	opt callstack 23
 23306                           
 23307                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23308                           
 23309                           ; BSR set to: 57
 23310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23311                           ;incstack = 0
 23312  01751C  0E07               	movlw	7
 23313  01751E  6EBE               	movwf	190,c	;volatile
 23314                           
 23315                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23316  017520  0E80               	movlw	128
 23317  017522  6EBD               	movwf	189,c	;volatile
 23318                           
 23319                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23320  017524  6ABA               	clrf	186,c	;volatile
 23321                           
 23322                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23323  017526  6ABF               	clrf	191,c	;volatile
 23324                           
 23325                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23326  017528  6ABB               	clrf	187,c	;volatile
 23327                           
 23328                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23329  01752A  0E07               	movlw	7
 23330  01752C  6EBC               	movwf	188,c	;volatile
 23331                           
 23332                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23333  01752E  6AC6               	clrf	198,c	;volatile
 23334                           
 23335                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23336  017530  0E0F               	movlw	15
 23337  017532  6EC7               	movwf	199,c	;volatile
 23338                           
 23339                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23340  017534  68C2               	setf	194,c	;volatile
 23341                           
 23342                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23343  017536  0EBF               	movlw	191
 23344  017538  6EC3               	movwf	195,c	;volatile
 23345                           
 23346                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23347  01753A  0E90               	movlw	144
 23348  01753C  6EC4               	movwf	196,c	;volatile
 23349                           
 23350                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23351  01753E  0E0C               	movlw	12
 23352  017540  6EC5               	movwf	197,c	;volatile
 23353                           
 23354                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23355  017542  013A               	movlb	58	; () banked
 23356  017544  6B70               	clrf	112,b	;volatile
 23357                           
 23358                           ; BSR set to: 58
 23359                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23360  017546  6B60               	clrf	96,b	;volatile
 23361                           
 23362                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23363  017548  0E3C               	movlw	60
 23364  01754A  6F50               	movwf	80,b	;volatile
 23365                           
 23366                           ; BSR set to: 58
 23367                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23368  01754C  6B80               	clrf	128,b	;volatile
 23369                           
 23370                           ; BSR set to: 58
 23371                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23372  01754E  6B90               	clrf	144,b	;volatile
 23373                           
 23374                           ; BSR set to: 58
 23375                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23376  017550  6940               	setf	64,b	;volatile
 23377                           
 23378                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23379  017552  0E0C               	movlw	12
 23380  017554  6F71               	movwf	113,b	;volatile
 23381                           
 23382                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23383  017556  0E0F               	movlw	15
 23384  017558  6F91               	movwf	145,b	;volatile
 23385                           
 23386                           ; BSR set to: 58
 23387                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23388  01755A  6B81               	clrf	129,b	;volatile
 23389                           
 23390                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23391  01755C  0E83               	movlw	131
 23392  01755E  6F51               	movwf	81,b	;volatile
 23393                           
 23394                           ; BSR set to: 58
 23395                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23396  017560  6B41               	clrf	65,b	;volatile
 23397                           
 23398                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23399  017562  0E97               	movlw	151
 23400  017564  6F61               	movwf	97,b	;volatile
 23401                           
 23402                           ; BSR set to: 58
 23403                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23404  017566  6B82               	clrf	130,b	;volatile
 23405                           
 23406                           ; BSR set to: 58
 23407                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23408  017568  6B92               	clrf	146,b	;volatile
 23409                           
 23410                           ; BSR set to: 58
 23411                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23412  01756A  6B42               	clrf	66,b	;volatile
 23413                           
 23414                           ; BSR set to: 58
 23415                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23416  01756C  6B52               	clrf	82,b	;volatile
 23417                           
 23418                           ; BSR set to: 58
 23419                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23420  01756E  6B62               	clrf	98,b	;volatile
 23421                           
 23422                           ; BSR set to: 58
 23423                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23424  017570  6B72               	clrf	114,b	;volatile
 23425                           
 23426                           ; BSR set to: 58
 23427                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23428  017572  6943               	setf	67,b	;volatile
 23429                           
 23430                           ; BSR set to: 58
 23431                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23432  017574  6953               	setf	83,b	;volatile
 23433                           
 23434                           ; BSR set to: 58
 23435                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23436  017576  6963               	setf	99,b	;volatile
 23437                           
 23438                           ; BSR set to: 58
 23439                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23440  017578  6973               	setf	115,b	;volatile
 23441                           
 23442                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23443  01757A  0E07               	movlw	7
 23444  01757C  6F83               	movwf	131,b	;volatile
 23445                           
 23446                           ; BSR set to: 58
 23447                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23448  01757E  6993               	setf	147,b	;volatile
 23449                           
 23450                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23451  017580  0E0F               	movlw	15
 23452  017582  6FE8               	movwf	232,b	;volatile
 23453                           
 23454                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23455  017584  0E13               	movlw	19
 23456  017586  6FDE               	movwf	222,b	;volatile
 23457                           
 23458                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23459  017588  0E16               	movlw	22
 23460  01758A  6F0E               	movwf	14,b	;volatile
 23461                           
 23462                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23463  01758C  0E1E               	movlw	30
 23464  01758E  6F13               	movwf	19,b	;volatile
 23465                           
 23466                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23467  017590  0E08               	movlw	8
 23468  017592  6FC0               	movwf	192,b	;volatile
 23469                           
 23470                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23471  017594  0E10               	movlw	16
 23472  017596  6F19               	movwf	25,b	;volatile
 23473                           
 23474                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23475  017598  0E09               	movlw	9
 23476  01759A  6FC1               	movwf	193,b	;volatile
 23477                           
 23478                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23479  01759C  0E1F               	movlw	31
 23480  01759E  6F15               	movwf	21,b	;volatile
 23481                           
 23482                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23483  0175A0  0E13               	movlw	19
 23484  0175A2  6F16               	movwf	22,b	;volatile
 23485                           
 23486                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23487  0175A4  0E17               	movlw	23
 23488  0175A6  6FE5               	movwf	229,b	;volatile
 23489                           
 23490                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23491  0175A8  0E14               	movlw	20
 23492  0175AA  6FDF               	movwf	223,b	;volatile
 23493                           
 23494                           ; BSR set to: 58
 23495                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23496  0175AC  0012               	return		;funcret
 23497  0175AE                     __end_of_PIN_MANAGER_Initialize:
 23498                           	opt callstack 0
 23499                           
 23500 ;; *************** function _OSCILLATOR_Initialize *****************
 23501 ;; Defined at:
 23502 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23503 ;; Parameters:    Size  Location     Type
 23504 ;;		None
 23505 ;; Auto vars:     Size  Location     Type
 23506 ;;		None
 23507 ;; Return value:  Size  Location     Type
 23508 ;;                  1  [STACK] void 
 23509 ;; Registers used:
 23510 ;;		wreg, status,2
 23511 ;; Tracked objects:
 23512 ;;		On entry : 3F/3A
 23513 ;;		On exit  : 3F/39
 23514 ;;		Unchanged: 0/0
 23515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;Total ram usage:        0 bytes
 23521 ;; Hardware stack levels used:    1
 23522 ;; Hardware stack levels required when called:    6
 23523 ;; This function calls:
 23524 ;;		Nothing
 23525 ;; This function is called by:
 23526 ;;		_SYSTEM_Initialize
 23527 ;; This function uses a reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text105
 23531  0188C2                     __ptext105:
 23532                           	opt callstack 0
 23533  0188C2                     _OSCILLATOR_Initialize:
 23534                           	opt callstack 23
 23535                           
 23536                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23537                           
 23538                           ; BSR set to: 58
 23539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23540                           ;incstack = 0
 23541  0188C2  0E20               	movlw	32
 23542  0188C4  0139               	movlb	57	; () banked
 23543  0188C6  6FD9               	movwf	217,b	;volatile
 23544                           
 23545                           ; BSR set to: 57
 23546                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23547  0188C8  6BDB               	clrf	219,b	;volatile
 23548                           
 23549                           ; BSR set to: 57
 23550                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23551  0188CA  6BDD               	clrf	221,b	;volatile
 23552                           
 23553                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23554  0188CC  0E02               	movlw	2
 23555  0188CE  6FDF               	movwf	223,b	;volatile
 23556                           
 23557                           ; BSR set to: 57
 23558                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23559  0188D0  6BDE               	clrf	222,b	;volatile
 23560  0188D2                     l171:
 23561                           
 23562                           ; BSR set to: 57
 23563                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23564  0188D2  B1DC               	btfsc	220,0,b	;volatile
 23565  0188D4  0012               	return	
 23566  0188D6  D7FD               	goto	l171
 23567  0188D8                     __end_of_OSCILLATOR_Initialize:
 23568                           	opt callstack 0
 23569                           
 23570 ;; *************** function _INTERRUPT_Initialize *****************
 23571 ;; Defined at:
 23572 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23573 ;; Parameters:    Size  Location     Type
 23574 ;;		None
 23575 ;; Auto vars:     Size  Location     Type
 23576 ;;  state           1  [STACK] _Bool 
 23577 ;; Return value:  Size  Location     Type
 23578 ;;                  1  [STACK] void 
 23579 ;; Registers used:
 23580 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23581 ;; Tracked objects:
 23582 ;;		On entry : 0/0
 23583 ;;		On exit  : 3F/39
 23584 ;;		Unchanged: 0/0
 23585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;Total ram usage:        0 bytes
 23591 ;; Hardware stack levels used:    1
 23592 ;; Hardware stack levels required when called:    6
 23593 ;; This function calls:
 23594 ;;		Nothing
 23595 ;; This function is called by:
 23596 ;;		_SYSTEM_Initialize
 23597 ;; This function uses a reentrant model
 23598 ;;
 23599                           
 23600                           	psect	text106
 23601  017A04                     __ptext106:
 23602                           	opt callstack 0
 23603  017A04                     _INTERRUPT_Initialize:
 23604                           	opt callstack 0
 23605                           
 23606                           ; BSR set to: 57
 23607                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23608  017A04  52E6               	movf	postinc1,f,c
 23609                           
 23610                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23611                           
 23612                           ;incstack = 0
 23613  017A06  8AD2               	bsf	210,5,c	;volatile
 23614                           
 23615                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23616  017A08  AED2               	btfss	16338,7,c	;volatile
 23617  017A0A  D003               	goto	u8000
 23618  017A0C  6A3D               	clrf	(btemp+11)^0,c
 23619  017A0E  2A3D               	incf	(btemp+11)^0,f,c
 23620  017A10  D001               	goto	u8018
 23621  017A12                     u8000:
 23622  017A12  6A3D               	clrf	(btemp+11)^0,c
 23623  017A14                     u8018:
 23624                           
 23625                           ;stkvar	_state @ sp[(-1)+0]
 23626  017A14  0EFF               	movlw	-1
 23627  017A16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23628                           
 23629                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23630  017A1C  9ED2               	bcf	16338,7,c	;volatile
 23631                           
 23632                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23633  017A1E  0E55               	movlw	85
 23634  017A20  6ED4               	movwf	212,c	;volatile
 23635                           
 23636                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23637  017A22  0EAA               	movlw	170
 23638  017A24  6ED4               	movwf	212,c	;volatile
 23639                           
 23640                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23641  017A26  90D4               	bcf	212,0,c	;volatile
 23642                           
 23643                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23644  017A28  0138               	movlb	56	; () banked
 23645  017A2A  6B9F               	clrf	159,b	;volatile
 23646                           
 23647                           ; BSR set to: 56
 23648                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23649  017A2C  6B9E               	clrf	158,b	;volatile
 23650                           
 23651                           ; BSR set to: 56
 23652                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23653  017A2E  0E08               	movlw	8
 23654  017A30  6F9D               	movwf	157,b	;volatile
 23655                           
 23656                           ; BSR set to: 56
 23657                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23658  017A32  0E55               	movlw	85
 23659  017A34  6ED4               	movwf	212,c	;volatile
 23660                           
 23661                           ; BSR set to: 56
 23662                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23663  017A36  0EAA               	movlw	170
 23664  017A38  6ED4               	movwf	212,c	;volatile
 23665                           
 23666                           ; BSR set to: 56
 23667                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23668  017A3A  80D4               	bsf	212,0,c	;volatile
 23669                           
 23670                           ; BSR set to: 56
 23671                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23672                           ;stkvar	_state @ sp[(-1)+0]
 23673  017A3C  0EFF               	movlw	-1
 23674  017A3E  B0E3               	btfsc	plusw1,0,c
 23675  017A40  D002               	bra	u8025
 23676  017A42  9ED2               	bcf	16338,7,c	;volatile
 23677  017A44  D001               	bra	u8026
 23678  017A46                     u8025:
 23679  017A46  8ED2               	bsf	16338,7,c	;volatile
 23680  017A48                     u8026:
 23681                           
 23682                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23683  017A48  0139               	movlb	57	; () banked
 23684  017A4A  8782               	bsf	130,3,b	;volatile
 23685                           
 23686                           ; BSR set to: 57
 23687                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23688  017A4C  8382               	bsf	130,1,b	;volatile
 23689                           
 23690                           ; BSR set to: 57
 23691                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23692  017A4E  8182               	bsf	130,0,b	;volatile
 23693                           
 23694                           ; BSR set to: 57
 23695                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23696  017A50  8582               	bsf	130,2,b	;volatile
 23697                           
 23698                           ; BSR set to: 57
 23699                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23700  017A52  8786               	bsf	134,3,b	;volatile
 23701                           
 23702                           ; BSR set to: 57
 23703                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23704  017A54  8586               	bsf	134,2,b	;volatile
 23705                           
 23706                           ; BSR set to: 57
 23707                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23708  017A56  8983               	bsf	131,4,b	;volatile
 23709                           
 23710                           ; BSR set to: 57
 23711                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23712  017A58  8783               	bsf	131,3,b	;volatile
 23713                           
 23714                           ; BSR set to: 57
 23715                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23716  017A5A  8181               	bsf	129,0,b	;volatile
 23717                           
 23718                           ; BSR set to: 57
 23719                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23720  017A5C  9185               	bcf	133,0,b	;volatile
 23721                           
 23722                           ; BSR set to: 57
 23723                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23724  017A5E  8189               	bsf	137,0,b	;volatile
 23725                           
 23726                           ; BSR set to: 57
 23727                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23728  017A60  9D88               	bcf	136,6,b	;volatile
 23729                           
 23730                           ; BSR set to: 57
 23731                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23732  017A62  8581               	bsf	129,2,b	;volatile
 23733                           
 23734                           ; BSR set to: 57
 23735                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23736  017A64  8781               	bsf	129,3,b	;volatile
 23737                           
 23738                           ; BSR set to: 57
 23739                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23740  017A66  52E5               	movf	postdec1,f,c
 23741  017A68  0012               	return		;funcret
 23742  017A6A                     __end_of_INTERRUPT_Initialize:
 23743                           	opt callstack 0
 23744                           
 23745 ;; *************** function _FVR_Initialize *****************
 23746 ;; Defined at:
 23747 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23748 ;; Parameters:    Size  Location     Type
 23749 ;;		None
 23750 ;; Auto vars:     Size  Location     Type
 23751 ;;		None
 23752 ;; Return value:  Size  Location     Type
 23753 ;;                  1  [STACK] void 
 23754 ;; Registers used:
 23755 ;;		wreg, status,2
 23756 ;; Tracked objects:
 23757 ;;		On entry : 3F/39
 23758 ;;		On exit  : 3F/3E
 23759 ;;		Unchanged: 0/0
 23760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;Total ram usage:        0 bytes
 23766 ;; Hardware stack levels used:    1
 23767 ;; Hardware stack levels required when called:    6
 23768 ;; This function calls:
 23769 ;;		Nothing
 23770 ;; This function is called by:
 23771 ;;		_SYSTEM_Initialize
 23772 ;; This function uses a reentrant model
 23773 ;;
 23774                           
 23775                           	psect	text107
 23776  0189A6                     __ptext107:
 23777                           	opt callstack 0
 23778  0189A6                     _FVR_Initialize:
 23779                           	opt callstack 23
 23780                           
 23781                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23782                           
 23783                           ; BSR set to: 57
 23784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23785                           ;incstack = 0
 23786  0189A6  0EAF               	movlw	175
 23787  0189A8  013E               	movlb	62	; () banked
 23788  0189AA  6FC1               	movwf	193,b	;volatile
 23789                           
 23790                           ; BSR set to: 62
 23791                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23792  0189AC  0012               	return		;funcret
 23793  0189AE                     __end_of_FVR_Initialize:
 23794                           	opt callstack 0
 23795                           
 23796 ;; *************** function _EXT_INT_Initialize *****************
 23797 ;; Defined at:
 23798 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23799 ;; Parameters:    Size  Location     Type
 23800 ;;		None
 23801 ;; Auto vars:     Size  Location     Type
 23802 ;;		None
 23803 ;; Return value:  Size  Location     Type
 23804 ;;                  1  [STACK] void 
 23805 ;; Registers used:
 23806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23807 ;; Tracked objects:
 23808 ;;		On entry : 3F/3F
 23809 ;;		On exit  : 3F/39
 23810 ;;		Unchanged: 0/0
 23811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23816 ;;Total ram usage:        0 bytes
 23817 ;; Hardware stack levels used:    1
 23818 ;; Hardware stack levels required when called:    7
 23819 ;; This function calls:
 23820 ;;		_INT0_SetInterruptHandler
 23821 ;;		_INT1_SetInterruptHandler
 23822 ;; This function is called by:
 23823 ;;		_SYSTEM_Initialize
 23824 ;; This function uses a reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text108
 23828  0181FC                     __ptext108:
 23829                           	opt callstack 0
 23830  0181FC                     _EXT_INT_Initialize:
 23831                           	opt callstack 22
 23832                           
 23833                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23834                           
 23835                           ; BSR set to: 62
 23836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23837                           ;incstack = 0
 23838  0181FC  0139               	movlb	57	; () banked
 23839  0181FE  91A1               	bcf	161,0,b	;volatile
 23840                           
 23841                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23842  018200  90D2               	bcf	210,0,c	;volatile
 23843                           
 23844                           ; BSR set to: 57
 23845                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23846  018202  0EC8               	movlw	low _INT0_DefaultInterruptHandler
 23847  018204  6EE6               	movwf	postinc1,c
 23848  018206  0E89               	movlw	high _INT0_DefaultInterruptHandler
 23849  018208  6EE6               	movwf	postinc1,c
 23850  01820A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23851  01820C  6EE6               	movwf	postinc1,c
 23852  01820E  ECA9  F0C2         	call	_INT0_SetInterruptHandler	;wreg free
 23853                           
 23854                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23855  018212  0139               	movlb	57	; () banked
 23856  018214  8191               	bsf	145,0,b	;volatile
 23857                           
 23858                           ; BSR set to: 57
 23859                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23860  018216  91A5               	bcf	165,0,b	;volatile
 23861                           
 23862                           ; BSR set to: 57
 23863                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23864  018218  92D2               	bcf	210,1,c	;volatile
 23865                           
 23866                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23867  01821A  0EC6               	movlw	low _INT1_DefaultInterruptHandler
 23868  01821C  6EE6               	movwf	postinc1,c
 23869  01821E  0E89               	movlw	high _INT1_DefaultInterruptHandler
 23870  018220  6EE6               	movwf	postinc1,c
 23871  018222  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23872  018224  6EE6               	movwf	postinc1,c
 23873  018226  EC95  F0C2         	call	_INT1_SetInterruptHandler	;wreg free
 23874                           
 23875                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23876  01822A  0139               	movlb	57	; () banked
 23877  01822C  8195               	bsf	149,0,b	;volatile
 23878                           
 23879                           ; BSR set to: 57
 23880                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23881  01822E  0012               	return		;funcret
 23882  018230                     __end_of_EXT_INT_Initialize:
 23883                           	opt callstack 0
 23884                           
 23885 ;; *************** function _INT1_SetInterruptHandler *****************
 23886 ;; Defined at:
 23887 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23890 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;		None
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  1  [STACK] void 
 23895 ;; Registers used:
 23896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23897 ;; Tracked objects:
 23898 ;;		On entry : 3F/39
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23906 ;;Total ram usage:        0 bytes
 23907 ;; Hardware stack levels used:    1
 23908 ;; Hardware stack levels required when called:    6
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_EXT_INT_Initialize
 23913 ;;		_start_switch_handler
 23914 ;; This function uses a reentrant model
 23915 ;;
 23916                           
 23917                           	psect	text109
 23918  01852A                     __ptext109:
 23919                           	opt callstack 0
 23920  01852A                     _INT1_SetInterruptHandler:
 23921                           	opt callstack 23
 23922                           
 23923                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23924                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23925                           
 23926                           ; BSR set to: 57
 23927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23928                           ;incstack = 0
 23929  01852A  50E1               	movf	fsr1l,w,c
 23930  01852C  0FFD               	addlw	-3
 23931  01852E  6ED9               	movwf	fsr2l,c
 23932  018530  50E2               	movf	fsr1h,w,c
 23933  018532  6EDA               	movwf	fsr2h,c
 23934  018534  0EFF               	movlw	255
 23935  018536  22DA               	addwfc	fsr2h,f,c
 23936  018538  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23937  01853E  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23938  018544  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23939                           
 23940                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23941  01854A  52E5               	movf	postdec1,f,c
 23942  01854C  52E5               	movf	postdec1,f,c
 23943  01854E  52E5               	movf	postdec1,f,c
 23944  018550  0012               	return		;funcret
 23945  018552                     __end_of_INT1_SetInterruptHandler:
 23946                           	opt callstack 0
 23947                           
 23948 ;; *************** function _INT0_SetInterruptHandler *****************
 23949 ;; Defined at:
 23950 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23951 ;; Parameters:    Size  Location     Type
 23952 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23953 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23954 ;; Auto vars:     Size  Location     Type
 23955 ;;		None
 23956 ;; Return value:  Size  Location     Type
 23957 ;;                  1  [STACK] void 
 23958 ;; Registers used:
 23959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23960 ;; Tracked objects:
 23961 ;;		On entry : 3F/39
 23962 ;;		On exit  : 0/0
 23963 ;;		Unchanged: 0/0
 23964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23969 ;;Total ram usage:        0 bytes
 23970 ;; Hardware stack levels used:    1
 23971 ;; Hardware stack levels required when called:    6
 23972 ;; This function calls:
 23973 ;;		Nothing
 23974 ;; This function is called by:
 23975 ;;		_EXT_INT_Initialize
 23976 ;; This function uses a reentrant model
 23977 ;;
 23978                           
 23979                           	psect	text110
 23980  018552                     __ptext110:
 23981                           	opt callstack 0
 23982  018552                     _INT0_SetInterruptHandler:
 23983                           	opt callstack 22
 23984                           
 23985                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23986                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23987                           
 23988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23989                           ;incstack = 0
 23990  018552  50E1               	movf	fsr1l,w,c
 23991  018554  0FFD               	addlw	-3
 23992  018556  6ED9               	movwf	fsr2l,c
 23993  018558  50E2               	movf	fsr1h,w,c
 23994  01855A  6EDA               	movwf	fsr2h,c
 23995  01855C  0EFF               	movlw	255
 23996  01855E  22DA               	addwfc	fsr2h,f,c
 23997  018560  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23998  018566  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23999  01856C  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24000                           
 24001                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24002  018572  52E5               	movf	postdec1,f,c
 24003  018574  52E5               	movf	postdec1,f,c
 24004  018576  52E5               	movf	postdec1,f,c
 24005  018578  0012               	return		;funcret
 24006  01857A                     __end_of_INT0_SetInterruptHandler:
 24007                           	opt callstack 0
 24008                           
 24009 ;; *************** function _DMA2_Initialize *****************
 24010 ;; Defined at:
 24011 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24012 ;; Parameters:    Size  Location     Type
 24013 ;;		None
 24014 ;; Auto vars:     Size  Location     Type
 24015 ;;		None
 24016 ;; Return value:  Size  Location     Type
 24017 ;;                  1  [STACK] void 
 24018 ;; Registers used:
 24019 ;;		wreg, status,2
 24020 ;; Tracked objects:
 24021 ;;		On entry : 3F/3D
 24022 ;;		On exit  : 3F/3B
 24023 ;;		Unchanged: 0/0
 24024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24029 ;;Total ram usage:        0 bytes
 24030 ;; Hardware stack levels used:    1
 24031 ;; Hardware stack levels required when called:    6
 24032 ;; This function calls:
 24033 ;;		Nothing
 24034 ;; This function is called by:
 24035 ;;		_SYSTEM_Initialize
 24036 ;; This function uses a reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text111
 24040  017D0A                     __ptext111:
 24041                           	opt callstack 0
 24042  017D0A                     _DMA2_Initialize:
 24043                           	opt callstack 23
 24044                           
 24045                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24046                           
 24047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24048                           ;incstack = 0
 24049  017D0A  0E00               	movlw	0
 24050  017D0C  013B               	movlb	59	; () banked
 24051  017D0E  6FD9               	movwf	217,b	;volatile
 24052  017D10  0E10               	movlw	16
 24053  017D12  6FDA               	movwf	218,b	;volatile
 24054  017D14  0E00               	movlw	0
 24055  017D16  6FDB               	movwf	219,b	;volatile
 24056                           
 24057                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24058  017D18  0E3F               	movlw	63
 24059  017D1A  6FD1               	movwf	209,b	;volatile
 24060  017D1C  0EBB               	movlw	187
 24061  017D1E  6FD0               	movwf	208,b	;volatile
 24062                           
 24063                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24064  017D20  0E03               	movlw	3
 24065  017D22  6FDD               	movwf	221,b	;volatile
 24066                           
 24067                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24068  017D24  0E00               	movlw	0
 24069  017D26  6FD8               	movwf	216,b	;volatile
 24070  017D28  0E01               	movlw	1
 24071  017D2A  6FD7               	movwf	215,b	;volatile
 24072                           
 24073                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24074  017D2C  0E00               	movlw	0
 24075  017D2E  6FCF               	movwf	207,b	;volatile
 24076  017D30  0E01               	movlw	1
 24077  017D32  6FCE               	movwf	206,b	;volatile
 24078                           
 24079                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24080  017D34  0E46               	movlw	70
 24081  017D36  6FDF               	movwf	223,b	;volatile
 24082                           
 24083                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24084  017D38  0E3D               	movlw	61
 24085  017D3A  6FDE               	movwf	222,b	;volatile
 24086                           
 24087                           ; BSR set to: 59
 24088                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24089  017D3C  0139               	movlb	57	; () banked
 24090  017D3E  97A5               	bcf	165,3,b	;volatile
 24091                           
 24092                           ; BSR set to: 57
 24093                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24094  017D40  95A5               	bcf	165,2,b	;volatile
 24095                           
 24096                           ; BSR set to: 57
 24097                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24098  017D42  9BA5               	bcf	165,5,b	;volatile
 24099                           
 24100                           ; BSR set to: 57
 24101                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24102  017D44  99A5               	bcf	165,4,b	;volatile
 24103                           
 24104                           ; BSR set to: 57
 24105                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24106  017D46  9795               	bcf	149,3,b	;volatile
 24107                           
 24108                           ; BSR set to: 57
 24109                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24110  017D48  9595               	bcf	149,2,b	;volatile
 24111                           
 24112                           ; BSR set to: 57
 24113                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24114  017D4A  9B95               	bcf	149,5,b	;volatile
 24115                           
 24116                           ; BSR set to: 57
 24117                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24118  017D4C  9995               	bcf	149,4,b	;volatile
 24119  017D4E  9ED2               	bcf	16338,7,c	;# 
 24120  017D50  0139               	banksel	14831	;# 
 24121  017D52  0E55               	movlw	85	;# 
 24122  017D54  6FEF               	movwf	14831,b	;# 
 24123  017D56  0EAA               	movlw	170	;# 
 24124  017D58  6FEF               	movwf	14831,b	;# 
 24125  017D5A  81EF               	bsf	14831,0,b	;# 
 24126  017D5C  8ED2               	bsf	16338,7,c	;# 
 24127                           
 24128                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24129  017D5E  013B               	movlb	59	; () banked
 24130  017D60  6BDC               	clrf	220,b	;volatile
 24131                           
 24132                           ; BSR set to: 59
 24133                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24134  017D62  0012               	return		;funcret
 24135  017D64                     __end_of_DMA2_Initialize:
 24136                           	opt callstack 0
 24137                           
 24138 ;; *************** function _DMA1_Initialize *****************
 24139 ;; Defined at:
 24140 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24141 ;; Parameters:    Size  Location     Type
 24142 ;;		None
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;		None
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  1  [STACK] void 
 24147 ;; Registers used:
 24148 ;;		wreg, status,2
 24149 ;; Tracked objects:
 24150 ;;		On entry : 3F/3B
 24151 ;;		On exit  : 3F/3B
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24158 ;;Total ram usage:        0 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:    6
 24161 ;; This function calls:
 24162 ;;		Nothing
 24163 ;; This function is called by:
 24164 ;;		_SYSTEM_Initialize
 24165 ;; This function uses a reentrant model
 24166 ;;
 24167                           
 24168                           	psect	text112
 24169  0178C6                     __ptext112:
 24170                           	opt callstack 0
 24171  0178C6                     _DMA1_Initialize:
 24172                           	opt callstack 23
 24173                           
 24174                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24175                           
 24176                           ; BSR set to: 59
 24177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24178                           ;incstack = 0
 24179  0178C6  0E00               	movlw	0
 24180  0178C8  013B               	movlb	59	; () banked
 24181  0178CA  6FF9               	movwf	249,b	;volatile
 24182  0178CC  0E10               	movlw	16
 24183  0178CE  6FFA               	movwf	250,b	;volatile
 24184  0178D0  0E00               	movlw	0
 24185  0178D2  6FFB               	movwf	251,b	;volatile
 24186                           
 24187                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24188  0178D4  0E3D               	movlw	61
 24189  0178D6  6FF1               	movwf	241,b	;volatile
 24190  0178D8  0E11               	movlw	17
 24191  0178DA  6FF0               	movwf	240,b	;volatile
 24192                           
 24193                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24194  0178DC  0E03               	movlw	3
 24195  0178DE  6FFD               	movwf	253,b	;volatile
 24196                           
 24197                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24198  0178E0  0E00               	movlw	0
 24199  0178E2  6FF8               	movwf	248,b	;volatile
 24200  0178E4  0E01               	movlw	1
 24201  0178E6  6FF7               	movwf	247,b	;volatile
 24202                           
 24203                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24204  0178E8  0E00               	movlw	0
 24205  0178EA  6FEF               	movwf	239,b	;volatile
 24206  0178EC  0E01               	movlw	1
 24207  0178EE  6FEE               	movwf	238,b	;volatile
 24208                           
 24209                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24210  0178F0  0E15               	movlw	21
 24211  0178F2  6FFF               	movwf	255,b	;volatile
 24212                           
 24213                           ; BSR set to: 59
 24214                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24215  0178F4  6BFE               	clrf	254,b	;volatile
 24216                           
 24217                           ; BSR set to: 59
 24218                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24219  0178F6  0139               	movlb	57	; () banked
 24220  0178F8  93A2               	bcf	162,1,b	;volatile
 24221                           
 24222                           ; BSR set to: 57
 24223                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24224  0178FA  91A2               	bcf	162,0,b	;volatile
 24225                           
 24226                           ; BSR set to: 57
 24227                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24228  0178FC  97A2               	bcf	162,3,b	;volatile
 24229                           
 24230                           ; BSR set to: 57
 24231                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24232  0178FE  95A2               	bcf	162,2,b	;volatile
 24233                           
 24234                           ; BSR set to: 57
 24235                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24236  017900  8392               	bsf	146,1,b	;volatile
 24237                           
 24238                           ; BSR set to: 57
 24239                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24240  017902  8192               	bsf	146,0,b	;volatile
 24241                           
 24242                           ; BSR set to: 57
 24243                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24244  017904  8792               	bsf	146,3,b	;volatile
 24245                           
 24246                           ; BSR set to: 57
 24247                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24248  017906  8592               	bsf	146,2,b	;volatile
 24249                           
 24250                           ; BSR set to: 57
 24251                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24252  017908  6BF1               	clrf	241,b	;volatile
 24253                           
 24254                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24255  01790A  0E01               	movlw	1
 24256  01790C  6FF2               	movwf	242,b	;volatile
 24257                           
 24258                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24259  01790E  0E04               	movlw	4
 24260  017910  6FF3               	movwf	243,b	;volatile
 24261                           
 24262                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24263  017912  0E02               	movlw	2
 24264  017914  6FF4               	movwf	244,b	;volatile
 24265                           
 24266                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24267  017916  0E03               	movlw	3
 24268  017918  6FF7               	movwf	247,b	;volatile
 24269  01791A  9ED2               	bcf	16338,7,c	;# 
 24270  01791C  0139               	banksel	14831	;# 
 24271  01791E  0E55               	movlw	85	;# 
 24272  017920  6FEF               	movwf	14831,b	;# 
 24273  017922  0EAA               	movlw	170	;# 
 24274  017924  6FEF               	movwf	14831,b	;# 
 24275  017926  81EF               	bsf	14831,0,b	;# 
 24276  017928  8ED2               	bsf	16338,7,c	;# 
 24277                           
 24278                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24279  01792A  013B               	movlb	59	; () banked
 24280  01792C  6BFC               	clrf	252,b	;volatile
 24281                           
 24282                           ; BSR set to: 59
 24283                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24284  01792E  0012               	return		;funcret
 24285  017930                     __end_of_DMA1_Initialize:
 24286                           	opt callstack 0
 24287                           
 24288 ;; *************** function _CLKREF_Initialize *****************
 24289 ;; Defined at:
 24290 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24291 ;; Parameters:    Size  Location     Type
 24292 ;;		None
 24293 ;; Auto vars:     Size  Location     Type
 24294 ;;		None
 24295 ;; Return value:  Size  Location     Type
 24296 ;;                  1  [STACK] void 
 24297 ;; Registers used:
 24298 ;;		wreg, status,2
 24299 ;; Tracked objects:
 24300 ;;		On entry : 3F/3B
 24301 ;;		On exit  : 3F/3C
 24302 ;;		Unchanged: 0/0
 24303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24308 ;;Total ram usage:        0 bytes
 24309 ;; Hardware stack levels used:    1
 24310 ;; Hardware stack levels required when called:    6
 24311 ;; This function calls:
 24312 ;;		Nothing
 24313 ;; This function is called by:
 24314 ;;		_SYSTEM_Initialize
 24315 ;; This function uses a reentrant model
 24316 ;;
 24317                           
 24318                           	psect	text113
 24319  01895A                     __ptext113:
 24320                           	opt callstack 0
 24321  01895A                     _CLKREF_Initialize:
 24322                           	opt callstack 23
 24323                           
 24324                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24325                           
 24326                           ; BSR set to: 59
 24327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24328                           ;incstack = 0
 24329  01895A  013C               	movlb	60	; () banked
 24330  01895C  6BE6               	clrf	230,b	;volatile
 24331                           
 24332                           ; BSR set to: 60
 24333                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24334  01895E  0E94               	movlw	148
 24335  018960  6FE5               	movwf	229,b	;volatile
 24336                           
 24337                           ; BSR set to: 60
 24338                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24339  018962  0012               	return		;funcret
 24340  018964                     __end_of_CLKREF_Initialize:
 24341                           	opt callstack 0
 24342                           
 24343 ;; *************** function _ADCC_Initialize *****************
 24344 ;; Defined at:
 24345 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;		None
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;		None
 24350 ;; Return value:  Size  Location     Type
 24351 ;;                  1  [STACK] void 
 24352 ;; Registers used:
 24353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24354 ;; Tracked objects:
 24355 ;;		On entry : 3F/3E
 24356 ;;		On exit  : 0/0
 24357 ;;		Unchanged: 0/0
 24358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;Total ram usage:        0 bytes
 24364 ;; Hardware stack levels used:    1
 24365 ;; Hardware stack levels required when called:    7
 24366 ;; This function calls:
 24367 ;;		_ADCC_SetADIInterruptHandler
 24368 ;;		_ADCC_SetADTIInterruptHandler
 24369 ;; This function is called by:
 24370 ;;		_SYSTEM_Initialize
 24371 ;; This function uses a reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text114
 24375  017930                     __ptext114:
 24376                           	opt callstack 0
 24377  017930                     _ADCC_Initialize:
 24378                           	opt callstack 22
 24379                           
 24380                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24381                           
 24382                           ; BSR set to: 60
 24383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24384                           ;incstack = 0
 24385  017930  013E               	movlb	62	; () banked
 24386  017932  6BDE               	clrf	222,b	;volatile
 24387                           
 24388                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24389  017934  6BDF               	clrf	223,b	;volatile
 24390                           
 24391                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24392  017936  6BE0               	clrf	224,b	;volatile
 24393                           
 24394                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24395  017938  6BE1               	clrf	225,b	;volatile
 24396                           
 24397                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24398  01793A  6BE4               	clrf	228,b	;volatile
 24399                           
 24400                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24401  01793C  6BE5               	clrf	229,b	;volatile
 24402                           
 24403                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24404  01793E  6BEA               	clrf	234,b	;volatile
 24405                           
 24406                           ; BSR set to: 62
 24407                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24408  017940  0E40               	movlw	64
 24409  017942  6FEC               	movwf	236,b	;volatile
 24410                           
 24411                           ; BSR set to: 62
 24412                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24413  017944  6BF1               	clrf	241,b	;volatile
 24414                           
 24415                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24416  017946  0E20               	movlw	32
 24417  017948  6FF3               	movwf	243,b	;volatile
 24418                           
 24419                           ; BSR set to: 62
 24420                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24421  01794A  6BF4               	clrf	244,b	;volatile
 24422                           
 24423                           ; BSR set to: 62
 24424                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24425  01794C  6BF5               	clrf	245,b	;volatile
 24426                           
 24427                           ; BSR set to: 62
 24428                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24429  01794E  6BF6               	clrf	246,b	;volatile
 24430                           
 24431                           ; BSR set to: 62
 24432                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24433  017950  6BF7               	clrf	247,b	;volatile
 24434                           
 24435                           ; BSR set to: 62
 24436                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24437  017952  6BF9               	clrf	249,b	;volatile
 24438                           
 24439                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24440  017954  0E5B               	movlw	91
 24441  017956  6FFA               	movwf	250,b	;volatile
 24442                           
 24443                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24444  017958  0E27               	movlw	39
 24445  01795A  6FFB               	movwf	251,b	;volatile
 24446                           
 24447                           ; BSR set to: 62
 24448                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24449  01795C  6BFC               	clrf	252,b	;volatile
 24450                           
 24451                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24452  01795E  0E02               	movlw	2
 24453  017960  6FFD               	movwf	253,b	;volatile
 24454                           
 24455                           ; BSR set to: 62
 24456                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24457  017962  6BFE               	clrf	254,b	;volatile
 24458                           
 24459                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24460  017964  0E07               	movlw	7
 24461  017966  6FFF               	movwf	255,b	;volatile
 24462                           
 24463                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24464  017968  0E84               	movlw	132
 24465  01796A  6FF8               	movwf	248,b	;volatile
 24466                           
 24467                           ; BSR set to: 62
 24468                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24469  01796C  0139               	movlb	57	; () banked
 24470  01796E  95A1               	bcf	161,2,b	;volatile
 24471                           
 24472                           ; BSR set to: 57
 24473                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24474  017970  8591               	bsf	145,2,b	;volatile
 24475                           
 24476                           ; BSR set to: 57
 24477                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24478  017972  0ECA               	movlw	low _ADCC_DefaultInterruptHandler
 24479  017974  6EE6               	movwf	postinc1,c
 24480  017976  0E89               	movlw	high _ADCC_DefaultInterruptHandler
 24481  017978  6EE6               	movwf	postinc1,c
 24482  01797A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24483  01797C  6EE6               	movwf	postinc1,c
 24484  01797E  ECD1  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24485                           
 24486                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24487  017982  0139               	movlb	57	; () banked
 24488  017984  97A1               	bcf	161,3,b	;volatile
 24489                           
 24490                           ; BSR set to: 57
 24491                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24492  017986  8791               	bsf	145,3,b	;volatile
 24493                           
 24494                           ; BSR set to: 57
 24495                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24496  017988  0ECA               	movlw	low _ADCC_DefaultInterruptHandler
 24497  01798A  6EE6               	movwf	postinc1,c
 24498  01798C  0E89               	movlw	high _ADCC_DefaultInterruptHandler
 24499  01798E  6EE6               	movwf	postinc1,c
 24500  017990  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24501  017992  6EE6               	movwf	postinc1,c
 24502  017994  ECBD  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24503                           
 24504                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24505  017998  0012               	return		;funcret
 24506  01799A                     __end_of_ADCC_Initialize:
 24507                           	opt callstack 0
 24508                           
 24509 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24510 ;; Defined at:
 24511 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24512 ;; Parameters:    Size  Location     Type
 24513 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24514 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24515 ;; Auto vars:     Size  Location     Type
 24516 ;;		None
 24517 ;; Return value:  Size  Location     Type
 24518 ;;                  1  [STACK] void 
 24519 ;; Registers used:
 24520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24521 ;; Tracked objects:
 24522 ;;		On entry : 0/0
 24523 ;;		On exit  : 0/0
 24524 ;;		Unchanged: 0/0
 24525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24530 ;;Total ram usage:        0 bytes
 24531 ;; Hardware stack levels used:    1
 24532 ;; Hardware stack levels required when called:    6
 24533 ;; This function calls:
 24534 ;;		Nothing
 24535 ;; This function is called by:
 24536 ;;		_ADCC_Initialize
 24537 ;;		_start_adc_scan
 24538 ;; This function uses a reentrant model
 24539 ;;
 24540                           
 24541                           	psect	text115
 24542  01857A                     __ptext115:
 24543                           	opt callstack 0
 24544  01857A                     _ADCC_SetADTIInterruptHandler:
 24545                           	opt callstack 23
 24546                           
 24547                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24548                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24549                           
 24550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24551                           ;incstack = 0
 24552  01857A  50E1               	movf	fsr1l,w,c
 24553  01857C  0FFD               	addlw	-3
 24554  01857E  6ED9               	movwf	fsr2l,c
 24555  018580  50E2               	movf	fsr1h,w,c
 24556  018582  6EDA               	movwf	fsr2h,c
 24557  018584  0EFF               	movlw	255
 24558  018586  22DA               	addwfc	fsr2h,f,c
 24559  018588  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24560  01858E  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24561  018594  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24562                           
 24563                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24564  01859A  52E5               	movf	postdec1,f,c
 24565  01859C  52E5               	movf	postdec1,f,c
 24566  01859E  52E5               	movf	postdec1,f,c
 24567  0185A0  0012               	return		;funcret
 24568  0185A2                     __end_of_ADCC_SetADTIInterruptHandler:
 24569                           	opt callstack 0
 24570                           
 24571 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24572 ;; Defined at:
 24573 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24574 ;; Parameters:    Size  Location     Type
 24575 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24576 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24577 ;; Auto vars:     Size  Location     Type
 24578 ;;		None
 24579 ;; Return value:  Size  Location     Type
 24580 ;;                  1  [STACK] void 
 24581 ;; Registers used:
 24582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24583 ;; Tracked objects:
 24584 ;;		On entry : 6/0
 24585 ;;		On exit  : 0/0
 24586 ;;		Unchanged: 0/0
 24587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24592 ;;Total ram usage:        0 bytes
 24593 ;; Hardware stack levels used:    1
 24594 ;; Hardware stack levels required when called:    6
 24595 ;; This function calls:
 24596 ;;		Nothing
 24597 ;; This function is called by:
 24598 ;;		_ADCC_Initialize
 24599 ;;		_start_adc_scan
 24600 ;; This function uses a reentrant model
 24601 ;;
 24602                           
 24603                           	psect	text116
 24604  0185A2                     __ptext116:
 24605                           	opt callstack 0
 24606  0185A2                     _ADCC_SetADIInterruptHandler:
 24607                           	opt callstack 23
 24608                           
 24609                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24610                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24611                           
 24612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24613                           ;incstack = 0
 24614  0185A2  50E1               	movf	fsr1l,w,c
 24615  0185A4  0FFD               	addlw	-3
 24616  0185A6  6ED9               	movwf	fsr2l,c
 24617  0185A8  50E2               	movf	fsr1h,w,c
 24618  0185AA  6EDA               	movwf	fsr2h,c
 24619  0185AC  0EFF               	movlw	255
 24620  0185AE  22DA               	addwfc	fsr2h,f,c
 24621  0185B0  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24622  0185B6  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24623  0185BC  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24624                           
 24625                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24626  0185C2  52E5               	movf	postdec1,f,c
 24627  0185C4  52E5               	movf	postdec1,f,c
 24628  0185C6  52E5               	movf	postdec1,f,c
 24629  0185C8  0012               	return		;funcret
 24630  0185CA                     __end_of_ADCC_SetADIInterruptHandler:
 24631                           	opt callstack 0
 24632                           
 24633 ;; *************** function _INT1_ISR *****************
 24634 ;; Defined at:
 24635 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24636 ;; Parameters:    Size  Location     Type
 24637 ;;		None
 24638 ;; Auto vars:     Size  Location     Type
 24639 ;;		None
 24640 ;; Return value:  Size  Location     Type
 24641 ;;                  1    wreg      void 
 24642 ;; Registers used:
 24643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24644 ;; Tracked objects:
 24645 ;;		On entry : 0/0
 24646 ;;		On exit  : 0/0
 24647 ;;		Unchanged: 0/0
 24648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;Total ram usage:        4 bytes
 24654 ;; Hardware stack levels used:    1
 24655 ;; Hardware stack levels required when called:    5
 24656 ;; This function calls:
 24657 ;;		_INT1_CallBack
 24658 ;; This function is called by:
 24659 ;;		Interrupt level 1
 24660 ;; This function uses a non-reentrant model
 24661 ;;
 24662                           
 24663                           	psect	text117
 24664  018074                     __ptext117:
 24665                           	opt callstack 0
 24666  018074                     _INT1_ISR:
 24667                           	opt callstack 12
 24668                           
 24669                           ;incstack = 0
 24670  018074  006F FF60  F0FC    	movff	status,??_INT1_ISR
 24671  01807A  0060  F0C8  F0FD   	movff	btemp,??_INT1_ISR+1
 24672  018080  0060  F0F0  F0FE   	movff	btemp+10,??_INT1_ISR+2
 24673  018086  0060  F0F4  F0FF   	movff	btemp+11,??_INT1_ISR+3
 24674  01808C  EE16  F000         	lfsr	1,___intlo_sp
 24675                           
 24676                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24677  018090  0139               	movlb	57	; () banked
 24678  018092  91A5               	bcf	165,0,b	;volatile
 24679                           
 24680                           ; BSR set to: 57
 24681                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24682  018094  EC7F  F0C3         	call	_INT1_CallBack	;wreg free
 24683  018098  0060  F3FC  F03D   	movff	??_INT1_ISR+3,btemp+11
 24684  01809E  0060  F3F8  F03C   	movff	??_INT1_ISR+2,btemp+10
 24685  0180A4  0060  F3F4  F032   	movff	??_INT1_ISR+1,btemp
 24686  0180AA  0060  F3F3  FFD8   	movff	??_INT1_ISR,status
 24687  0180B0  0011               	retfie		f
 24688  0180B2                     __end_of_INT1_ISR:
 24689                           	opt callstack 0
 24690                           
 24691 ;; *************** function _INT1_CallBack *****************
 24692 ;; Defined at:
 24693 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24694 ;; Parameters:    Size  Location     Type
 24695 ;;		None
 24696 ;; Auto vars:     Size  Location     Type
 24697 ;;		None
 24698 ;; Return value:  Size  Location     Type
 24699 ;;                  1  [STACK] void 
 24700 ;; Registers used:
 24701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24702 ;; Tracked objects:
 24703 ;;		On entry : 3F/39
 24704 ;;		On exit  : 0/0
 24705 ;;		Unchanged: 0/0
 24706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24711 ;;Total ram usage:        0 bytes
 24712 ;; Hardware stack levels used:    1
 24713 ;; Hardware stack levels required when called:    4
 24714 ;; This function calls:
 24715 ;;		Absolute function
 24716 ;;		_INT1_DefaultInterruptHandler
 24717 ;;		_switch_handler
 24718 ;; This function is called by:
 24719 ;;		_INT1_ISR
 24720 ;; This function uses a reentrant model
 24721 ;;
 24722                           
 24723                           	psect	text118
 24724  0186FE                     __ptext118:
 24725                           	opt callstack 0
 24726  0186FE                     _INT1_CallBack:
 24727                           	opt callstack 12
 24728                           
 24729                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24730                           
 24731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24732                           ;incstack = 0
 24733  0186FE  5013               	movf	_INT1_InterruptHandler^0,w,c
 24734  018700  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24735  018702  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24736  018704  B4D8               	btfsc	status,2,c
 24737  018706  0012               	return	
 24738                           
 24739                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24740  018708  D801               	call	u845_28
 24741  01870A  0012               	return	
 24742  01870C                     u845_28:
 24743  01870C  0005               	push	
 24744  01870E  6EFA               	movwf	pclath,c
 24745  018710  5013               	movf	_INT1_InterruptHandler^0,w,c
 24746  018712  6EFD               	movwf	tosl,c
 24747  018714  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24748  018716  6EFE               	movwf	tosh,c
 24749  018718  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24750  01871A  6EFF               	movwf	tosu,c
 24751  01871C  50FA               	movf	pclath,w,c
 24752  01871E  0012               	return		;indir
 24753  018720                     __end_of_INT1_CallBack:
 24754                           	opt callstack 0
 24755                           
 24756 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24757 ;; Defined at:
 24758 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24759 ;; Parameters:    Size  Location     Type
 24760 ;;		None
 24761 ;; Auto vars:     Size  Location     Type
 24762 ;;		None
 24763 ;; Return value:  Size  Location     Type
 24764 ;;                  1  [STACK] void 
 24765 ;; Registers used:
 24766 ;;		None
 24767 ;; Tracked objects:
 24768 ;;		On entry : 0/39
 24769 ;;		On exit  : 0/0
 24770 ;;		Unchanged: 0/0
 24771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24776 ;;Total ram usage:        0 bytes
 24777 ;; Hardware stack levels used:    1
 24778 ;; Hardware stack levels required when called:    3
 24779 ;; This function calls:
 24780 ;;		Nothing
 24781 ;; This function is called by:
 24782 ;;		_EXT_INT_Initialize
 24783 ;;		_INT1_CallBack
 24784 ;; This function uses a reentrant model
 24785 ;;
 24786                           
 24787                           	psect	text119
 24788  0189C6                     __ptext119:
 24789                           	opt callstack 0
 24790  0189C6                     _INT1_DefaultInterruptHandler:
 24791                           	opt callstack 12
 24792                           
 24793                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24794                           
 24795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24796                           ;incstack = 0
 24797  0189C6  0012               	return		;funcret
 24798  0189C8                     __end_of_INT1_DefaultInterruptHandler:
 24799                           	opt callstack 0
 24800                           
 24801 ;; *************** function _switch_handler *****************
 24802 ;; Defined at:
 24803 ;;		line 58 in file "dio.c"
 24804 ;; Parameters:    Size  Location     Type
 24805 ;;		None
 24806 ;; Auto vars:     Size  Location     Type
 24807 ;;  i               1  [STACK] unsigned char 
 24808 ;;  sw_value        1  [STACK] unsigned char 
 24809 ;; Return value:  Size  Location     Type
 24810 ;;                  1  [STACK] void 
 24811 ;; Registers used:
 24812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24813 ;; Tracked objects:
 24814 ;;		On entry : 0/39
 24815 ;;		On exit  : 0/0
 24816 ;;		Unchanged: 0/0
 24817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24822 ;;Total ram usage:        0 bytes
 24823 ;; Hardware stack levels used:    1
 24824 ;; Hardware stack levels required when called:    3
 24825 ;; This function calls:
 24826 ;;		Nothing
 24827 ;; This function is called by:
 24828 ;;		_start_switch_handler
 24829 ;;		_INT1_CallBack
 24830 ;; This function uses a reentrant model
 24831 ;;
 24832                           
 24833                           	psect	text120
 24834  0164AC                     __ptext120:
 24835                           	opt callstack 0
 24836  0164AC                     _switch_handler:
 24837                           	opt callstack 0
 24838                           
 24839                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24840  0164AC  52E6               	movf	postinc1,f,c
 24841  0164AE  52E6               	movf	postinc1,f,c
 24842                           
 24843                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24844                           ;stkvar	_i @ sp[(-2)+0]
 24845                           
 24846                           ;incstack = 0
 24847  0164B0  0EFE               	movlw	-2
 24848  0164B2  6AE3               	clrf	plusw1,c
 24849  0164B4  9EBD               	bcf	189,7,c	;volatile
 24850  0164B6  82BE               	bsf	190,1,c	;volatile
 24851                           
 24852                           ;dio.c: 72:  __nop();
 24853  0164B8  F000               	nop	
 24854                           
 24855                           ;dio.c: 73:  __nop();
 24856  0164BA  F000               	nop	
 24857                           
 24858                           ;dio.c: 74:  __nop();
 24859  0164BC  F000               	nop	
 24860  0164BE  D019               	goto	l8796
 24861  0164C0                     l8784:
 24862                           
 24863                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24864  0164C0  A6CF               	btfss	207,3,c	;volatile
 24865  0164C2  D011               	goto	u831_20
 24866  0164C4  D00D               	goto	u831_21
 24867  0164C6                     u828_28:
 24868                           
 24869                           ;stkvar	_sw_value @ sp[(-2)+1]
 24870  0164C6  0EFF               	movlw	-1
 24871  0164C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24872                           
 24873                           ;dio.c: 80:    break;
 24874  0164CE  D027               	goto	l8798
 24875  0164D0                     l8786:
 24876                           
 24877                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24878  0164D0  A4CF               	btfss	207,2,c	;volatile
 24879  0164D2  D009               	goto	u831_20
 24880  0164D4  D005               	goto	u831_21
 24881  0164D6                     l8788:
 24882                           
 24883                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24884  0164D6  A2CF               	btfss	207,1,c	;volatile
 24885  0164D8  D006               	goto	u831_20
 24886  0164DA  D002               	goto	u831_21
 24887  0164DC                     l8790:
 24888                           
 24889                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24890  0164DC  A0CF               	btfss	207,0,c	;volatile
 24891  0164DE  D003               	goto	u831_20
 24892  0164E0                     u831_21:
 24893  0164E0  6A3D               	clrf	(btemp+11)^0,c
 24894  0164E2  2A3D               	incf	(btemp+11)^0,f,c
 24895  0164E4  D7F0               	goto	u828_28
 24896  0164E6                     u831_20:
 24897  0164E6  6A3D               	clrf	(btemp+11)^0,c
 24898  0164E8  D7EE               	goto	u828_28
 24899  0164EA                     l8792:
 24900                           
 24901                           ;dio.c: 91:    sw_value = 1;
 24902                           ;stkvar	_sw_value @ sp[(-2)+1]
 24903  0164EA  0EFF               	movlw	-1
 24904  0164EC  6AE3               	clrf	plusw1,c
 24905  0164EE  2AE3               	incf	plusw1,f,c
 24906                           
 24907                           ;dio.c: 92:    break;
 24908  0164F0  D016               	goto	l8798
 24909  0164F2                     l8796:
 24910                           
 24911                           ;stkvar	_i @ sp[(-2)+0]
 24912  0164F2  0EFE               	movlw	-2
 24913  0164F4  50E3               	movf	plusw1,w,c
 24914  0164F6  6E3C               	movwf	(btemp+10)^0,c
 24915  0164F8  6A3D               	clrf	(btemp+11)^0,c
 24916                           
 24917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24918                           ; Switch size 1, requested type "simple"
 24919                           ; Number of cases is 1, Range of values is 0 to 0
 24920                           ; switch strategies available:
 24921                           ; Name         Instructions Cycles
 24922                           ; simple_byte            4     3 (average)
 24923                           ;	Chosen strategy is simple_byte
 24924  0164FA  503D               	movf	(btemp+11)^0,w,c
 24925  0164FC  0A00               	xorlw	0	; case 0
 24926  0164FE  A4D8               	btfss	status,2,c
 24927  016500  D7F4               	goto	l8792
 24928                           
 24929                           ; Switch size 1, requested type "simple"
 24930                           ; Number of cases is 4, Range of values is 0 to 3
 24931                           ; switch strategies available:
 24932                           ; Name         Instructions Cycles
 24933                           ; simple_byte           13     7 (average)
 24934                           ;	Chosen strategy is simple_byte
 24935  016502  503C               	movf	(btemp+10)^0,w,c
 24936  016504  0A00               	xorlw	0	; case 0
 24937  016506  B4D8               	btfsc	status,2,c
 24938  016508  D7E9               	goto	l8790
 24939  01650A  0A01               	xorlw	1	; case 1
 24940  01650C  B4D8               	btfsc	status,2,c
 24941  01650E  D7E3               	goto	l8788
 24942  016510  0A03               	xorlw	3	; case 2
 24943  016512  B4D8               	btfsc	status,2,c
 24944  016514  D7DD               	goto	l8786
 24945  016516  0A01               	xorlw	1	; case 3
 24946  016518  B4D8               	btfsc	status,2,c
 24947  01651A  D7D2               	goto	l8784
 24948  01651C  D7E6               	goto	l8792
 24949  01651E                     l8798:
 24950                           
 24951                           ;dio.c: 96:   if (sw_value) {
 24952                           ;stkvar	_sw_value @ sp[(-2)+1]
 24953  01651E  0EFF               	movlw	-1
 24954  016520  50E3               	movf	plusw1,w,c
 24955  016522  B4D8               	btfsc	status,2,c
 24956  016524  D014               	goto	l8804
 24957                           
 24958                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24959                           ;stkvar	_i @ sp[(-2)+0]
 24960  016526  0EFE               	movlw	-2
 24961  016528  50E3               	movf	plusw1,w,c
 24962  01652A  0D05               	mullw	5
 24963  01652C  50F3               	movf	243,w,c
 24964  01652E  0F60               	addlw	low _S
 24965  016530  6ED9               	movwf	fsr2l,c
 24966  016532  6ADA               	clrf	fsr2h,c
 24967  016534  04DE               	decf	postinc2,w,c
 24968  016536  A4D8               	btfss	status,2,c
 24969  016538  D041               	goto	l8812
 24970                           
 24971                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24972                           ;stkvar	_i @ sp[(-2)+0]
 24973  01653A  0EFE               	movlw	-2
 24974  01653C  50E3               	movf	plusw1,w,c
 24975  01653E  0D05               	mullw	5
 24976  016540  50F3               	movf	243,w,c
 24977  016542  0F60               	addlw	low _S
 24978  016544  6ED9               	movwf	fsr2l,c
 24979  016546  6ADA               	clrf	fsr2h,c
 24980  016548  0E00               	movlw	0
 24981  01654A  6EDF               	movwf	indf2,c
 24982  01654C  D037               	goto	l8812
 24983  01654E                     l8804:
 24984                           
 24985                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24986                           ;stkvar	_i @ sp[(-2)+0]
 24987  01654E  0EFE               	movlw	-2
 24988  016550  50E3               	movf	plusw1,w,c
 24989  016552  0D05               	mullw	5
 24990  016554  50F3               	movf	243,w,c
 24991  016556  0F60               	addlw	low _S
 24992  016558  6ED9               	movwf	fsr2l,c
 24993  01655A  6ADA               	clrf	fsr2h,c
 24994  01655C  50DF               	movf	indf2,w,c
 24995  01655E  A4D8               	btfss	status,2,c
 24996  016560  D02D               	goto	l8812
 24997                           
 24998                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24999                           ;stkvar	_i @ sp[(-2)+0]
 25000  016562  0EFE               	movlw	-2
 25001  016564  50E3               	movf	plusw1,w,c
 25002  016566  0D05               	mullw	5
 25003  016568  50F3               	movf	243,w,c
 25004  01656A  0F60               	addlw	low _S
 25005  01656C  6ED9               	movwf	fsr2l,c
 25006  01656E  6ADA               	clrf	fsr2h,c
 25007  016570  0E01               	movlw	1
 25008  016572  6EDF               	movwf	indf2,c
 25009                           
 25010                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25011  016574  EE20  F2B7         	lfsr	2,_V+183	;volatile
 25012                           
 25013                           ;stkvar	_i @ sp[(-2)+0]
 25014  016578  0EFE               	movlw	-2
 25015  01657A  50E3               	movf	plusw1,w,c
 25016  01657C  0D05               	mullw	5
 25017  01657E  50F3               	movf	243,w,c
 25018  016580  0F61               	addlw	low (_S+1)
 25019  016582  6EE9               	movwf	fsr0l,c
 25020  016584  6AEA               	clrf	fsr0h,c
 25021  016586  006F FF7B FFEE     	movff	postinc2,postinc0
 25022  01658C  006F FF7B FFEE     	movff	postinc2,postinc0
 25023  016592  006F FF7B FFEE     	movff	postinc2,postinc0
 25024  016598  006F FF7B FFEE     	movff	postinc2,postinc0
 25025                           
 25026                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25027                           ;stkvar	_i @ sp[(-2)+0]
 25028  01659E  0EFE               	movlw	-2
 25029  0165A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 25030  0165A6  0E01               	movlw	1
 25031  0165A8  6E3C               	movwf	(btemp+10)^0,c
 25032  0165AA  2A3D               	incf	(btemp+11)^0,f,c
 25033  0165AC  D002               	goto	u835_24
 25034  0165AE                     u835_25:
 25035  0165AE  90D8               	bcf	status,0,c
 25036  0165B0  363C               	rlcf	(btemp+10)^0,f,c
 25037  0165B2                     u835_24:
 25038  0165B2  2E3D               	decfsz	(btemp+11)^0,f,c
 25039  0165B4  D7FC               	goto	u835_25
 25040  0165B6  503C               	movf	(btemp+10)^0,w,c
 25041  0165B8  0100               	movlb	0	; () banked
 25042  0165BA  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25043  0165BC                     l8812:
 25044                           
 25045                           ;dio.c: 107:  } while (++i < 4);
 25046                           ;stkvar	_i @ sp[(-2)+0]
 25047  0165BC  0EFE               	movlw	-2
 25048  0165BE  2AE3               	incf	plusw1,f,c
 25049  0165C0  0EFE               	movlw	-2
 25050  0165C2  006F FF8C  F032    	movff	plusw1,btemp
 25051  0165C8  0E03               	movlw	3
 25052  0165CA  6432               	cpfsgt	btemp^0,c
 25053  0165CC  D792               	goto	l8796
 25054                           
 25055                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25056  0165CE  92BE               	bcf	190,1,c	;volatile
 25057  0165D0  A4BE               	btfss	190,2,c	;volatile
 25058  0165D2  D002               	goto	u837_20
 25059  0165D4  0E01               	movlw	1
 25060  0165D6  D001               	goto	u837_26
 25061  0165D8                     u837_20:
 25062  0165D8  0E00               	movlw	0
 25063  0165DA                     u837_26:
 25064  0165DA  0AFF               	xorlw	255
 25065  0165DC  6E3D               	movwf	(btemp+11)^0,c
 25066  0165DE  463D               	rlncf	(btemp+11)^0,f,c
 25067  0165E0  463D               	rlncf	(btemp+11)^0,f,c
 25068  0165E2  50BE               	movf	190,w,c	;volatile
 25069  0165E4  183D               	xorwf	(btemp+11)^0,w,c
 25070  0165E6  0BFB               	andlw	-5
 25071  0165E8  183D               	xorwf	(btemp+11)^0,w,c
 25072  0165EA  6EBE               	movwf	190,c	;volatile
 25073  0165EC  8EBD               	bsf	189,7,c	;volatile
 25074                           
 25075                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25076  0165EE  52E5               	movf	postdec1,f,c
 25077  0165F0  52E5               	movf	postdec1,f,c
 25078  0165F2  0012               	return		;funcret
 25079  0165F4                     __end_of_switch_handler:
 25080                           	opt callstack 0
 25081                           
 25082 ;; *************** function _TMR5_ISR *****************
 25083 ;; Defined at:
 25084 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;		None
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;		None
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  1    wreg      void 
 25091 ;; Registers used:
 25092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25093 ;; Tracked objects:
 25094 ;;		On entry : 0/0
 25095 ;;		On exit  : 0/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;Total ram usage:        4 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:    5
 25105 ;; This function calls:
 25106 ;;		_TMR5_CallBack
 25107 ;;		_TMR5_WriteTimer
 25108 ;; This function is called by:
 25109 ;;		Interrupt level 1
 25110 ;; This function uses a non-reentrant model
 25111 ;;
 25112                           
 25113                           	psect	text121
 25114  017C54                     __ptext121:
 25115                           	opt callstack 0
 25116  017C54                     _TMR5_ISR:
 25117                           	opt callstack 12
 25118                           
 25119                           ;incstack = 0
 25120  017C54  006F FF60  F1E2    	movff	status,??_TMR5_ISR+2
 25121  017C5A  0060  F0F4  F1E3   	movff	btemp+11,??_TMR5_ISR+3
 25122  017C60  EE16  F000         	lfsr	1,___intlo_sp
 25123                           
 25124                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25125  017C64  0139               	movlb	57	; () banked
 25126  017C66  9DA8               	bcf	168,6,b	;volatile
 25127                           
 25128                           ; BSR set to: 57
 25129                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25130  017C68  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25131  017C6E  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25132  017C74  EC1A  F0C0         	call	_TMR5_WriteTimer	;wreg free
 25133                           
 25134                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25135  017C78  0102               	movlb	2	; () banked
 25136  017C7A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25137  017C7C  0101               	movlb	1	; () banked
 25138  017C7E  6FE0               	movwf	??_TMR5_ISR& (0+255),b
 25139  017C80  6BE1               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25140  017C82  0E05               	movlw	5
 25141  017C84  27E0               	addwf	??_TMR5_ISR& (0+255),f,b
 25142  017C86  0E00               	movlw	0
 25143  017C88  23E1               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25144  017C8A  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25145  017C8C  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25146  017C8E  51E0               	movf	??_TMR5_ISR& (0+255),w,b
 25147  017C90  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25148  017C92  51E1               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25149  017C94  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25150  017C96  A0D8               	btfss	status,0,c
 25151  017C98  D004               	goto	i1l1045
 25152                           
 25153                           ; BSR set to: 1
 25154                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25155  017C9A  EC5B  F0C3         	call	_TMR5_CallBack	;wreg free
 25156                           
 25157                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25158  017C9E  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25159  017CA0  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25160  017CA2                     i1l1045:
 25161  017CA2  0060  F78C  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25162  017CA8  0060  F78B  FFD8   	movff	??_TMR5_ISR+2,status
 25163  017CAE  0011               	retfie		f
 25164  017CB0                     __end_of_TMR5_ISR:
 25165                           	opt callstack 0
 25166                           
 25167 ;; *************** function _TMR5_WriteTimer *****************
 25168 ;; Defined at:
 25169 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25170 ;; Parameters:    Size  Location     Type
 25171 ;;  timerVal        2  [STACK] unsigned short 
 25172 ;; Auto vars:     Size  Location     Type
 25173 ;;		None
 25174 ;; Return value:  Size  Location     Type
 25175 ;;                  1  [STACK] void 
 25176 ;; Registers used:
 25177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25178 ;; Tracked objects:
 25179 ;;		On entry : 3F/39
 25180 ;;		On exit  : 0/0
 25181 ;;		Unchanged: 0/0
 25182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25187 ;;Total ram usage:        0 bytes
 25188 ;; Hardware stack levels used:    1
 25189 ;; Hardware stack levels required when called:    3
 25190 ;; This function calls:
 25191 ;;		Nothing
 25192 ;; This function is called by:
 25193 ;;		_TMR5_ISR
 25194 ;; This function uses a reentrant model
 25195 ;;
 25196                           
 25197                           	psect	text122
 25198  018034                     __ptext122:
 25199                           	opt callstack 0
 25200  018034                     _TMR5_WriteTimer:
 25201                           	opt callstack 13
 25202                           
 25203                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25204                           
 25205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25206                           ;incstack = 0
 25207  018034  A49A               	btfss	154,2,c	;volatile
 25208  018036  D00F               	goto	l8932
 25209                           
 25210                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25211  018038  909A               	bcf	154,0,c	;volatile
 25212                           
 25213                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25214                           ;stkvar	_timerVal @ sp[(0)+-2]
 25215  01803A  0EFF               	movlw	255
 25216  01803C  24E1               	addwf	fsr1l,w,c
 25217  01803E  6ED9               	movwf	fsr2l,c
 25218  018040  0EFF               	movlw	255
 25219  018042  20E2               	addwfc	fsr1h,w,c
 25220  018044  6EDA               	movwf	fsr2h,c
 25221  018046  50DF               	movf	indf2,w,c
 25222  018048  6E99               	movwf	153,c	;volatile
 25223                           
 25224                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25225                           ;stkvar	_timerVal @ sp[(0)+-2]
 25226  01804A  0EFE               	movlw	-2
 25227  01804C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25228                           
 25229                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25230  018052  809A               	bsf	154,0,c	;volatile
 25231                           
 25232                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25233  018054  D00C               	goto	l1028
 25234  018056                     l8932:
 25235                           
 25236                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25237                           ;stkvar	_timerVal @ sp[(0)+-2]
 25238  018056  0EFF               	movlw	255
 25239  018058  24E1               	addwf	fsr1l,w,c
 25240  01805A  6ED9               	movwf	fsr2l,c
 25241  01805C  0EFF               	movlw	255
 25242  01805E  20E2               	addwfc	fsr1h,w,c
 25243  018060  6EDA               	movwf	fsr2h,c
 25244  018062  50DF               	movf	indf2,w,c
 25245  018064  6E99               	movwf	153,c	;volatile
 25246                           
 25247                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25248                           ;stkvar	_timerVal @ sp[(0)+-2]
 25249  018066  0EFE               	movlw	-2
 25250  018068  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25251  01806E                     l1028:
 25252                           
 25253                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25254  01806E  52E5               	movf	postdec1,f,c
 25255  018070  52E5               	movf	postdec1,f,c
 25256  018072  0012               	return		;funcret
 25257  018074                     __end_of_TMR5_WriteTimer:
 25258                           	opt callstack 0
 25259                           
 25260 ;; *************** function _TMR5_CallBack *****************
 25261 ;; Defined at:
 25262 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25263 ;; Parameters:    Size  Location     Type
 25264 ;;		None
 25265 ;; Auto vars:     Size  Location     Type
 25266 ;;		None
 25267 ;; Return value:  Size  Location     Type
 25268 ;;                  1  [STACK] void 
 25269 ;; Registers used:
 25270 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25271 ;; Tracked objects:
 25272 ;;		On entry : 3F/1
 25273 ;;		On exit  : 0/0
 25274 ;;		Unchanged: 0/0
 25275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25280 ;;Total ram usage:        0 bytes
 25281 ;; Hardware stack levels used:    1
 25282 ;; Hardware stack levels required when called:    4
 25283 ;; This function calls:
 25284 ;;		Absolute function
 25285 ;;		_TMR5_DefaultInterruptHandler
 25286 ;; This function is called by:
 25287 ;;		_TMR5_ISR
 25288 ;; This function uses a reentrant model
 25289 ;;
 25290                           
 25291                           	psect	text123
 25292  0186B6                     __ptext123:
 25293                           	opt callstack 0
 25294  0186B6                     _TMR5_CallBack:
 25295                           	opt callstack 12
 25296                           
 25297                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25298                           
 25299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25300                           ;incstack = 0
 25301  0186B6  0100               	movlb	0	; () banked
 25302  0186B8  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25303  0186BA  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25304  0186BC  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25305  0186BE  B4D8               	btfsc	status,2,c
 25306  0186C0  0012               	return	
 25307                           
 25308                           ; BSR set to: 0
 25309                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25310  0186C2  D801               	call	u856_28
 25311  0186C4  0012               	return	
 25312  0186C6                     u856_28:
 25313  0186C6  0005               	push	
 25314  0186C8  6EFA               	movwf	pclath,c
 25315  0186CA  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25316  0186CC  6EFD               	movwf	tosl,c
 25317  0186CE  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25318  0186D0  6EFE               	movwf	tosh,c
 25319  0186D2  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25320  0186D4  6EFF               	movwf	tosu,c
 25321  0186D6  50FA               	movf	pclath,w,c
 25322  0186D8  0012               	return		;indir
 25323  0186DA                     __end_of_TMR5_CallBack:
 25324                           	opt callstack 0
 25325                           
 25326 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25327 ;; Defined at:
 25328 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25329 ;; Parameters:    Size  Location     Type
 25330 ;;		None
 25331 ;; Auto vars:     Size  Location     Type
 25332 ;;		None
 25333 ;; Return value:  Size  Location     Type
 25334 ;;                  1  [STACK] void 
 25335 ;; Registers used:
 25336 ;;		wreg, status,2, status,0, btemp+11
 25337 ;; Tracked objects:
 25338 ;;		On entry : 3F/0
 25339 ;;		On exit  : 3F/2
 25340 ;;		Unchanged: 0/0
 25341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25346 ;;Total ram usage:        0 bytes
 25347 ;; Hardware stack levels used:    1
 25348 ;; Hardware stack levels required when called:    3
 25349 ;; This function calls:
 25350 ;;		Nothing
 25351 ;; This function is called by:
 25352 ;;		_TMR5_Initialize
 25353 ;;		_TMR5_CallBack
 25354 ;; This function uses a reentrant model
 25355 ;;
 25356                           
 25357                           	psect	text124
 25358  0185CA                     __ptext124:
 25359                           	opt callstack 0
 25360  0185CA                     _TMR5_DefaultInterruptHandler:
 25361                           	opt callstack 12
 25362                           
 25363                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25364                           
 25365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25366                           ;incstack = 0
 25367  0185CA  A0BE               	btfss	190,0,c	;volatile
 25368  0185CC  D002               	goto	u806_20
 25369  0185CE  0E01               	movlw	1
 25370  0185D0  D001               	goto	u806_26
 25371  0185D2                     u806_20:
 25372  0185D2  0E00               	movlw	0
 25373  0185D4                     u806_26:
 25374  0185D4  0AFF               	xorlw	255
 25375  0185D6  6E3D               	movwf	(btemp+11)^0,c
 25376  0185D8  50BE               	movf	190,w,c	;volatile
 25377  0185DA  183D               	xorwf	(btemp+11)^0,w,c
 25378  0185DC  0BFE               	andlw	-2
 25379  0185DE  183D               	xorwf	(btemp+11)^0,w,c
 25380  0185E0  6EBE               	movwf	190,c	;volatile
 25381                           
 25382                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25383  0185E2  0E01               	movlw	1
 25384  0185E4  0102               	movlb	2	; () banked
 25385  0185E6  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25386  0185E8  0E00               	movlw	0
 25387  0185EA  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25388  0185EC  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25389  0185EE  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25390                           
 25391                           ; BSR set to: 2
 25392                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25393  0185F0  0012               	return		;funcret
 25394  0185F2                     __end_of_TMR5_DefaultInterruptHandler:
 25395                           	opt callstack 0
 25396                           
 25397 ;; *************** function _INT0_ISR *****************
 25398 ;; Defined at:
 25399 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25400 ;; Parameters:    Size  Location     Type
 25401 ;;		None
 25402 ;; Auto vars:     Size  Location     Type
 25403 ;;		None
 25404 ;; Return value:  Size  Location     Type
 25405 ;;                  1    wreg      void 
 25406 ;; Registers used:
 25407 ;;		wreg, status,2, status,0, pclath, tosl
 25408 ;; Tracked objects:
 25409 ;;		On entry : 0/0
 25410 ;;		On exit  : 0/0
 25411 ;;		Unchanged: 0/0
 25412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;Total ram usage:        0 bytes
 25418 ;; Hardware stack levels used:    1
 25419 ;; Hardware stack levels required when called:    2
 25420 ;; This function calls:
 25421 ;;		_INT0_CallBack
 25422 ;; This function is called by:
 25423 ;;		Interrupt level 2
 25424 ;; This function uses a non-reentrant model
 25425 ;;
 25426                           
 25427                           	psect	text125
 25428  01893C                     __ptext125:
 25429                           	opt callstack 0
 25430  01893C                     _INT0_ISR:
 25431                           	opt callstack 12
 25432                           
 25433                           ; BSR set to: 2
 25434                           ;incstack = 0
 25435  01893C  EE14  F000         	lfsr	1,___inthi_sp
 25436                           
 25437                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25438  018940  0139               	movlb	57	; () banked
 25439  018942  91A1               	bcf	161,0,b	;volatile
 25440                           
 25441                           ; BSR set to: 57
 25442                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25443  018944  EC90  F0C3         	call	_INT0_CallBack	;wreg free
 25444  018948  0011               	retfie		f
 25445  01894A                     __end_of_INT0_ISR:
 25446                           	opt callstack 0
 25447                           
 25448 ;; *************** function _INT0_CallBack *****************
 25449 ;; Defined at:
 25450 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25451 ;; Parameters:    Size  Location     Type
 25452 ;;		None
 25453 ;; Auto vars:     Size  Location     Type
 25454 ;;		None
 25455 ;; Return value:  Size  Location     Type
 25456 ;;                  1  [STACK] void 
 25457 ;; Registers used:
 25458 ;;		wreg, status,2, status,0, pclath, tosl
 25459 ;; Tracked objects:
 25460 ;;		On entry : 3F/39
 25461 ;;		On exit  : 0/0
 25462 ;;		Unchanged: 0/0
 25463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25468 ;;Total ram usage:        0 bytes
 25469 ;; Hardware stack levels used:    1
 25470 ;; Hardware stack levels required when called:    1
 25471 ;; This function calls:
 25472 ;;		Absolute function
 25473 ;;		_INT0_DefaultInterruptHandler
 25474 ;; This function is called by:
 25475 ;;		_INT0_ISR
 25476 ;; This function uses a reentrant model
 25477 ;;
 25478                           
 25479                           	psect	text126
 25480  018720                     __ptext126:
 25481                           	opt callstack 0
 25482  018720                     _INT0_CallBack:
 25483                           	opt callstack 12
 25484                           
 25485                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25486                           
 25487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25488                           ;incstack = 0
 25489  018720  5016               	movf	_INT0_InterruptHandler^0,w,c
 25490  018722  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25491  018724  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25492  018726  B4D8               	btfsc	status,2,c
 25493  018728  0012               	return	
 25494                           
 25495                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25496  01872A  D801               	call	u398_48
 25497  01872C  0012               	return	
 25498  01872E                     u398_48:
 25499  01872E  0005               	push	
 25500  018730  6EFA               	movwf	pclath,c
 25501  018732  5016               	movf	_INT0_InterruptHandler^0,w,c
 25502  018734  6EFD               	movwf	tosl,c
 25503  018736  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25504  018738  6EFE               	movwf	tosh,c
 25505  01873A  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25506  01873C  6EFF               	movwf	tosu,c
 25507  01873E  50FA               	movf	pclath,w,c
 25508  018740  0012               	return		;indir
 25509  018742                     __end_of_INT0_CallBack:
 25510                           	opt callstack 0
 25511                           
 25512 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25513 ;; Defined at:
 25514 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25515 ;; Parameters:    Size  Location     Type
 25516 ;;		None
 25517 ;; Auto vars:     Size  Location     Type
 25518 ;;		None
 25519 ;; Return value:  Size  Location     Type
 25520 ;;                  1  [STACK] void 
 25521 ;; Registers used:
 25522 ;;		None
 25523 ;; Tracked objects:
 25524 ;;		On entry : 0/39
 25525 ;;		On exit  : 0/0
 25526 ;;		Unchanged: 0/0
 25527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25532 ;;Total ram usage:        0 bytes
 25533 ;; Hardware stack levels used:    1
 25534 ;; This function calls:
 25535 ;;		Nothing
 25536 ;; This function is called by:
 25537 ;;		_EXT_INT_Initialize
 25538 ;;		_INT0_CallBack
 25539 ;; This function uses a reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text127
 25543  0189C8                     __ptext127:
 25544                           	opt callstack 0
 25545  0189C8                     _INT0_DefaultInterruptHandler:
 25546                           	opt callstack 12
 25547                           
 25548                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25549                           
 25550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25551                           ;incstack = 0
 25552  0189C8  0012               	return		;funcret
 25553  0189CA                     __end_of_INT0_DefaultInterruptHandler:
 25554                           	opt callstack 0
 25555                           
 25556 ;; *************** function _Default_ISR *****************
 25557 ;; Defined at:
 25558 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25559 ;; Parameters:    Size  Location     Type
 25560 ;;		None
 25561 ;; Auto vars:     Size  Location     Type
 25562 ;;		None
 25563 ;; Return value:  Size  Location     Type
 25564 ;;                  1    wreg      void 
 25565 ;; Registers used:
 25566 ;;		None
 25567 ;; Tracked objects:
 25568 ;;		On entry : 0/0
 25569 ;;		On exit  : 0/0
 25570 ;;		Unchanged: 0/0
 25571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25576 ;;Total ram usage:        0 bytes
 25577 ;; Hardware stack levels used:    1
 25578 ;; This function calls:
 25579 ;;		Nothing
 25580 ;; This function is called by:
 25581 ;;		Interrupt level 2
 25582 ;; This function uses a non-reentrant model
 25583 ;;
 25584                           
 25585                           	psect	text128
 25586  0189C0                     __ptext128:
 25587                           	opt callstack 0
 25588  0189C0                     _Default_ISR:
 25589                           	opt callstack 14
 25590                           
 25591                           ;incstack = 0
 25592  0189C0  EE14  F000         	lfsr	1,___inthi_sp
 25593  0189C4  0011               	retfie		f
 25594  0189C6                     __end_of_Default_ISR:
 25595                           	opt callstack 0
 25596                           
 25597 ;; *************** function _ADCC_ISR *****************
 25598 ;; Defined at:
 25599 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25600 ;; Parameters:    Size  Location     Type
 25601 ;;		None
 25602 ;; Auto vars:     Size  Location     Type
 25603 ;;		None
 25604 ;; Return value:  Size  Location     Type
 25605 ;;                  1    wreg      void 
 25606 ;; Registers used:
 25607 ;;		wreg, status,2, status,0, pclath, tosl
 25608 ;; Tracked objects:
 25609 ;;		On entry : 0/0
 25610 ;;		On exit  : 0/0
 25611 ;;		Unchanged: 0/0
 25612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25617 ;;Total ram usage:        0 bytes
 25618 ;; Hardware stack levels used:    1
 25619 ;; Hardware stack levels required when called:    1
 25620 ;; This function calls:
 25621 ;;		Absolute function
 25622 ;;		_ADCC_DefaultInterruptHandler
 25623 ;;		_adc_int_handler
 25624 ;; This function is called by:
 25625 ;;		Interrupt level 2
 25626 ;; This function uses a non-reentrant model
 25627 ;;
 25628                           
 25629                           	psect	text129
 25630  018370                     __ptext129:
 25631                           	opt callstack 0
 25632  018370                     _ADCC_ISR:
 25633                           	opt callstack 13
 25634                           
 25635                           ;incstack = 0
 25636  018370  EE14  F000         	lfsr	1,___inthi_sp
 25637                           
 25638                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25639  018374  0139               	movlb	57	; () banked
 25640  018376  95A1               	bcf	161,2,b	;volatile
 25641                           
 25642                           ; BSR set to: 57
 25643                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25644  018378  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25645  01837A  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25646  01837C  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25647  01837E  B4D8               	btfsc	status,2,c
 25648  018380  0011               	retfie		f
 25649                           
 25650                           ; BSR set to: 57
 25651                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25652  018382  D801               	call	i2u428_48
 25653  018384  0011               	retfie		f
 25654  018386                     i2u428_48:
 25655  018386  0005               	push	
 25656  018388  6EFA               	movwf	pclath,c
 25657  01838A  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25658  01838C  6EFD               	movwf	tosl,c
 25659  01838E  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25660  018390  6EFE               	movwf	tosh,c
 25661  018392  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25662  018394  6EFF               	movwf	tosu,c
 25663  018396  50FA               	movf	pclath,w,c
 25664  018398  0012               	return		;indir
 25665  01839A                     __end_of_ADCC_ISR:
 25666                           	opt callstack 0
 25667                           
 25668 ;; *************** function _adc_int_t_handler *****************
 25669 ;; Defined at:
 25670 ;;		line 128 in file "daq.c"
 25671 ;; Parameters:    Size  Location     Type
 25672 ;;		None
 25673 ;; Auto vars:     Size  Location     Type
 25674 ;;		None
 25675 ;; Return value:  Size  Location     Type
 25676 ;;                  1  [STACK] void 
 25677 ;; Registers used:
 25678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25679 ;; Tracked objects:
 25680 ;;		On entry : 3F/39
 25681 ;;		On exit  : 1/0
 25682 ;;		Unchanged: 0/0
 25683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25688 ;;Total ram usage:        0 bytes
 25689 ;; Hardware stack levels used:    1
 25690 ;; Hardware stack levels required when called:    1
 25691 ;; This function calls:
 25692 ;;		_ADCC_DischargeSampleCapacitor
 25693 ;;		_ADCC_StartConversion
 25694 ;; This function is called by:
 25695 ;;		_start_adc_scan
 25696 ;;		_ADCC_ThresholdISR
 25697 ;; This function uses a reentrant model
 25698 ;;
 25699                           
 25700                           	psect	text130
 25701  0177CE                     __ptext130:
 25702                           	opt callstack 0
 25703  0177CE                     _adc_int_t_handler:
 25704                           	opt callstack 12
 25705                           
 25706                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25707                           
 25708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25709                           ;incstack = 0
 25710  0177CE  013E               	movlb	62	; () banked
 25711  0177D0  51E6               	movf	230,w,b	;volatile
 25712  0177D2  006F FB9C  F032    	movff	16103,btemp	;volatile
 25713  0177D8  6A33               	clrf	(btemp+1)^0,c
 25714  0177DA  0060  F0C8  F033   	movff	btemp,btemp+1
 25715  0177E0  6A32               	clrf	btemp^0,c
 25716  0177E2  2632               	addwf	btemp^0,f,c
 25717  0177E4  0E00               	movlw	0
 25718  0177E6  2233               	addwfc	(btemp+1)^0,f,c
 25719  0177E8  0100               	movlb	0	; () banked
 25720  0177EA  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25721  0177EC  0D02               	mullw	2
 25722  0177EE  50F3               	movf	243,w,c
 25723  0177F0  0FC7               	addlw	low _R
 25724  0177F2  6ED9               	movwf	fsr2l,c
 25725  0177F4  6ADA               	clrf	fsr2h,c
 25726  0177F6  0060  F0CB  FFDE   	movff	btemp,postinc2
 25727  0177FC  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25728  017802                     l9130:
 25729                           
 25730                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25731  017802  0100               	movlb	0	; () banked
 25732  017804  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25733  017806  0E0D               	movlw	13
 25734  017808  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25735  01780A  D003               	goto	l9136
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;daq.c: 136:    R.done = 1;
 25739  01780C  0E01               	movlw	1
 25740  01780E  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25741  017810  0012               	return	
 25742  017812                     l9136:
 25743                           
 25744                           ; BSR set to: 0
 25745                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25746  017812  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25747  017818  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25748  01781C  006F FF78  F03A    	movff	postinc2,btemp+8
 25749  017822  006F FF74  F03B    	movff	postdec2,btemp+9
 25750  017828  2A3D               	incf	(btemp+11)^0,f,c
 25751  01782A  D003               	goto	u870_44
 25752  01782C                     u870_45:
 25753  01782C  90D8               	bcf	status,0,c
 25754  01782E  323B               	rrcf	(btemp+9)^0,f,c
 25755  017830  323A               	rrcf	(btemp+8)^0,f,c
 25756  017832                     u870_44:
 25757  017832  2E3D               	decfsz	(btemp+11)^0,f,c
 25758  017834  D7FB               	goto	u870_45
 25759  017836  A03A               	btfss	(btemp+8)^0,0,c
 25760  017838  D7E4               	goto	l9130
 25761                           
 25762                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25763  01783A  ECC3  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25764                           
 25765                           ; BSR set to: 62
 25766                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25767  01783E  0100               	movlb	0	; () banked
 25768  017840  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25769  017842  0B0F               	andlw	15
 25770  017844  6EE6               	movwf	postinc1,c
 25771  017846  EC76  F0C4         	call	_ADCC_StartConversion	;wreg free
 25772                           
 25773                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25774  01784A  0012               	return		;funcret
 25775  01784C                     __end_of_adc_int_t_handler:
 25776                           	opt callstack 0
 25777                           
 25778 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25779 ;; Defined at:
 25780 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25781 ;; Parameters:    Size  Location     Type
 25782 ;;		None
 25783 ;; Auto vars:     Size  Location     Type
 25784 ;;		None
 25785 ;; Return value:  Size  Location     Type
 25786 ;;                  1  [STACK] void 
 25787 ;; Registers used:
 25788 ;;		None
 25789 ;; Tracked objects:
 25790 ;;		On entry : 3F/39
 25791 ;;		On exit  : 0/0
 25792 ;;		Unchanged: 0/0
 25793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25798 ;;Total ram usage:        0 bytes
 25799 ;; Hardware stack levels used:    1
 25800 ;; This function calls:
 25801 ;;		Nothing
 25802 ;; This function is called by:
 25803 ;;		_ADCC_Initialize
 25804 ;;		_ADCC_ISR
 25805 ;;		_ADCC_ThresholdISR
 25806 ;; This function uses a reentrant model
 25807 ;;
 25808                           
 25809                           	psect	text131
 25810  0189CA                     __ptext131:
 25811                           	opt callstack 0
 25812  0189CA                     _ADCC_DefaultInterruptHandler:
 25813                           	opt callstack 13
 25814                           
 25815                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25816                           
 25817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25818                           ;incstack = 0
 25819  0189CA  0012               	return		;funcret
 25820  0189CC                     __end_of_ADCC_DefaultInterruptHandler:
 25821                           	opt callstack 0
 25822                           
 25823 ;; *************** function _adc_int_handler *****************
 25824 ;; Defined at:
 25825 ;;		line 118 in file "daq.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;		None
 25828 ;; Auto vars:     Size  Location     Type
 25829 ;;		None
 25830 ;; Return value:  Size  Location     Type
 25831 ;;                  1  [STACK] void 
 25832 ;; Registers used:
 25833 ;;		None
 25834 ;; Tracked objects:
 25835 ;;		On entry : 3F/39
 25836 ;;		On exit  : 0/0
 25837 ;;		Unchanged: 0/0
 25838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;Total ram usage:        0 bytes
 25844 ;; Hardware stack levels used:    1
 25845 ;; This function calls:
 25846 ;;		Nothing
 25847 ;; This function is called by:
 25848 ;;		_start_adc_scan
 25849 ;;		_ADCC_ISR
 25850 ;; This function uses a reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text132
 25854  0189CC                     __ptext132:
 25855                           	opt callstack 0
 25856  0189CC                     _adc_int_handler:
 25857                           	opt callstack 13
 25858                           
 25859                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25860                           
 25861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25862                           ;incstack = 0
 25863  0189CC  0012               	return		;funcret
 25864  0189CE                     __end_of_adc_int_handler:
 25865                           	opt callstack 0
 25866                           
 25867 ;; *************** function _ADCC_ThresholdISR *****************
 25868 ;; Defined at:
 25869 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25870 ;; Parameters:    Size  Location     Type
 25871 ;;		None
 25872 ;; Auto vars:     Size  Location     Type
 25873 ;;		None
 25874 ;; Return value:  Size  Location     Type
 25875 ;;                  1    wreg      void 
 25876 ;; Registers used:
 25877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25878 ;; Tracked objects:
 25879 ;;		On entry : 0/0
 25880 ;;		On exit  : 0/0
 25881 ;;		Unchanged: 0/0
 25882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25885 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25886 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25887 ;;Total ram usage:        5 bytes
 25888 ;; Hardware stack levels used:    1
 25889 ;; Hardware stack levels required when called:    2
 25890 ;; This function calls:
 25891 ;;		Absolute function
 25892 ;;		_ADCC_DefaultInterruptHandler
 25893 ;;		_adc_int_t_handler
 25894 ;; This function is called by:
 25895 ;;		Interrupt level 2
 25896 ;; This function uses a non-reentrant model
 25897 ;;
 25898                           
 25899                           	psect	text133
 25900  01799C                     __ptext133:
 25901                           	opt callstack 0
 25902  01799C                     _ADCC_ThresholdISR:
 25903                           	opt callstack 12
 25904                           
 25905                           ;incstack = 0
 25906  01799C  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25907  0179A2  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25908  0179A8  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25909  0179AE  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25910  0179B4  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25911  0179BA  EE14  F000         	lfsr	1,___inthi_sp
 25912                           
 25913                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25914  0179BE  0139               	movlb	57	; () banked
 25915  0179C0  97A1               	bcf	161,3,b	;volatile
 25916                           
 25917                           ; BSR set to: 57
 25918                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25919  0179C2  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25920  0179C4  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25921  0179C6  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25922  0179C8  B4D8               	btfsc	status,2,c
 25923  0179CA  D00C               	goto	i2u873_49
 25924                           
 25925                           ; BSR set to: 57
 25926                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25927  0179CC  D801               	call	i2u873_48
 25928  0179CE  D00A               	goto	i2u873_49
 25929  0179D0                     i2u873_48:
 25930  0179D0  0005               	push	
 25931  0179D2  6EFA               	movwf	pclath,c
 25932  0179D4  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25933  0179D6  6EFD               	movwf	tosl,c
 25934  0179D8  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25935  0179DA  6EFE               	movwf	tosh,c
 25936  0179DC  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25937  0179DE  6EFF               	movwf	tosu,c
 25938  0179E0  50FA               	movf	pclath,w,c
 25939  0179E2  0012               	return		;indir
 25940  0179E4                     i2u873_49:
 25941  0179E4  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25942  0179EA  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25943  0179F0  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25944  0179F6  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25945  0179FC  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25946  017A02  0011               	retfie		f
 25947  017A04                     __end_of_ADCC_ThresholdISR:
 25948                           	opt callstack 0
 25949                           
 25950 ;; *************** function _UART1_tx_vect_isr *****************
 25951 ;; Defined at:
 25952 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25953 ;; Parameters:    Size  Location     Type
 25954 ;;		None
 25955 ;; Auto vars:     Size  Location     Type
 25956 ;;		None
 25957 ;; Return value:  Size  Location     Type
 25958 ;;                  1    wreg      void 
 25959 ;; Registers used:
 25960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25961 ;; Tracked objects:
 25962 ;;		On entry : 0/0
 25963 ;;		On exit  : 0/0
 25964 ;;		Unchanged: 0/0
 25965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25970 ;;Total ram usage:        0 bytes
 25971 ;; Hardware stack levels used:    1
 25972 ;; Hardware stack levels required when called:    1
 25973 ;; This function calls:
 25974 ;;		Absolute function
 25975 ;;		_UART1_Transmit_ISR
 25976 ;; This function is called by:
 25977 ;;		Interrupt level 2
 25978 ;; This function uses a non-reentrant model
 25979 ;;
 25980                           
 25981                           	psect	text134
 25982  0185F4                     __ptext134:
 25983                           	opt callstack 0
 25984  0185F4                     _UART1_tx_vect_isr:
 25985                           	opt callstack 13
 25986                           
 25987                           ;incstack = 0
 25988  0185F4  EE14  F000         	lfsr	1,___inthi_sp
 25989                           
 25990                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25991  0185F8  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25992  0185FA  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25993  0185FC  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25994  0185FE  B4D8               	btfsc	status,2,c
 25995  018600  0011               	retfie		f
 25996                           
 25997                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25998  018602  D801               	call	i2u875_48
 25999  018604  0011               	retfie		f
 26000  018606                     i2u875_48:
 26001  018606  0005               	push	
 26002  018608  6EFA               	movwf	pclath,c
 26003  01860A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26004  01860C  6EFD               	movwf	tosl,c
 26005  01860E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26006  018610  6EFE               	movwf	tosh,c
 26007  018612  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26008  018614  6EFF               	movwf	tosu,c
 26009  018616  50FA               	movf	pclath,w,c
 26010  018618  0012               	return		;indir
 26011  01861A                     __end_of_UART1_tx_vect_isr:
 26012                           	opt callstack 0
 26013                           
 26014 ;; *************** function _UART1_Transmit_ISR *****************
 26015 ;; Defined at:
 26016 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26017 ;; Parameters:    Size  Location     Type
 26018 ;;		None
 26019 ;; Auto vars:     Size  Location     Type
 26020 ;;		None
 26021 ;; Return value:  Size  Location     Type
 26022 ;;                  1  [STACK] void 
 26023 ;; Registers used:
 26024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26025 ;; Tracked objects:
 26026 ;;		On entry : 0/0
 26027 ;;		On exit  : 3B/39
 26028 ;;		Unchanged: 0/0
 26029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26034 ;;Total ram usage:        0 bytes
 26035 ;; Hardware stack levels used:    1
 26036 ;; This function calls:
 26037 ;;		Nothing
 26038 ;; This function is called by:
 26039 ;;		_UART1_Initialize
 26040 ;;		_UART1_tx_vect_isr
 26041 ;; This function uses a reentrant model
 26042 ;;
 26043                           
 26044                           	psect	text135
 26045  0182EE                     __ptext135:
 26046                           	opt callstack 0
 26047  0182EE                     _UART1_Transmit_ISR:
 26048                           	opt callstack 13
 26049                           
 26050                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26051                           
 26052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26053                           ;incstack = 0
 26054  0182EE  0E40               	movlw	64
 26055  0182F0  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26056  0182F2  D010               	goto	l581
 26057                           
 26058                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26059  0182F4  0EBB               	movlw	low _uart1TxBuffer
 26060  0182F6  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26061  0182F8  6ED9               	movwf	fsr2l,c
 26062  0182FA  6ADA               	clrf	fsr2h,c
 26063  0182FC  0E02               	movlw	high _uart1TxBuffer
 26064  0182FE  22DA               	addwfc	fsr2h,f,c
 26065  018300  50DF               	movf	indf2,w,c
 26066  018302  013D               	movlb	61	; () banked
 26067  018304  6FEA               	movwf	234,b	;volatile
 26068                           
 26069                           ; BSR set to: 61
 26070  018306  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26071                           
 26072                           ; BSR set to: 61
 26073                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26074  018308  0E3F               	movlw	63
 26075  01830A  6430               	cpfsgt	_uart1TxTail^0,c
 26076  01830C  D001               	goto	l8884
 26077                           
 26078                           ; BSR set to: 61
 26079                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26080  01830E  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26081  018310                     l8884:
 26082                           
 26083                           ; BSR set to: 61
 26084                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26085  018310  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26086                           
 26087                           ;mcc_generated_files/uart1.c: 222:  } else {
 26088  018312  0012               	return	
 26089  018314                     l581:
 26090                           
 26091                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26092  018314  0139               	movlb	57	; () banked
 26093  018316  9993               	bcf	147,4,b	;volatile
 26094                           
 26095                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26096  018318  0012               	return		;funcret
 26097  01831A                     __end_of_UART1_Transmit_ISR:
 26098                           	opt callstack 0
 26099                           
 26100 ;; *************** function _UART1_rx_vect_isr *****************
 26101 ;; Defined at:
 26102 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26103 ;; Parameters:    Size  Location     Type
 26104 ;;		None
 26105 ;; Auto vars:     Size  Location     Type
 26106 ;;		None
 26107 ;; Return value:  Size  Location     Type
 26108 ;;                  1    wreg      void 
 26109 ;; Registers used:
 26110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26111 ;; Tracked objects:
 26112 ;;		On entry : 0/0
 26113 ;;		On exit  : 0/0
 26114 ;;		Unchanged: 0/0
 26115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26120 ;;Total ram usage:        0 bytes
 26121 ;; Hardware stack levels used:    1
 26122 ;; Hardware stack levels required when called:    1
 26123 ;; This function calls:
 26124 ;;		Absolute function
 26125 ;;		_UART1_Receive_ISR
 26126 ;; This function is called by:
 26127 ;;		Interrupt level 2
 26128 ;; This function uses a non-reentrant model
 26129 ;;
 26130                           
 26131                           	psect	text136
 26132  01861C                     __ptext136:
 26133                           	opt callstack 0
 26134  01861C                     _UART1_rx_vect_isr:
 26135                           	opt callstack 13
 26136                           
 26137                           ;incstack = 0
 26138  01861C  EE14  F000         	lfsr	1,___inthi_sp
 26139                           
 26140                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26141  018620  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26142  018622  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26143  018624  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26144  018626  B4D8               	btfsc	status,2,c
 26145  018628  0011               	retfie		f
 26146                           
 26147                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26148  01862A  D801               	call	i2u877_48
 26149  01862C  0011               	retfie		f
 26150  01862E                     i2u877_48:
 26151  01862E  0005               	push	
 26152  018630  6EFA               	movwf	pclath,c
 26153  018632  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26154  018634  6EFD               	movwf	tosl,c
 26155  018636  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26156  018638  6EFE               	movwf	tosh,c
 26157  01863A  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26158  01863C  6EFF               	movwf	tosu,c
 26159  01863E  50FA               	movf	pclath,w,c
 26160  018640  0012               	return		;indir
 26161  018642                     __end_of_UART1_rx_vect_isr:
 26162                           	opt callstack 0
 26163                           
 26164 ;; *************** function _UART1_Receive_ISR *****************
 26165 ;; Defined at:
 26166 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26167 ;; Parameters:    Size  Location     Type
 26168 ;;		None
 26169 ;; Auto vars:     Size  Location     Type
 26170 ;;		None
 26171 ;; Return value:  Size  Location     Type
 26172 ;;                  1  [STACK] void 
 26173 ;; Registers used:
 26174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26175 ;; Tracked objects:
 26176 ;;		On entry : 0/0
 26177 ;;		On exit  : 0/0
 26178 ;;		Unchanged: 0/0
 26179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26184 ;;Total ram usage:        0 bytes
 26185 ;; Hardware stack levels used:    1
 26186 ;; This function calls:
 26187 ;;		Nothing
 26188 ;; This function is called by:
 26189 ;;		_UART1_Initialize
 26190 ;;		_UART1_rx_vect_isr
 26191 ;; This function uses a reentrant model
 26192 ;;
 26193                           
 26194                           	psect	text137
 26195  0187BC                     __ptext137:
 26196                           	opt callstack 0
 26197  0187BC                     _UART1_Receive_ISR:
 26198                           	opt callstack 13
 26199                           
 26200                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26201                           
 26202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26203                           ;incstack = 0
 26204  0187BC  0E00               	movlw	low _uart1RxBuffer
 26205  0187BE  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 26206  0187C0  6ED9               	movwf	fsr2l,c
 26207  0187C2  6ADA               	clrf	fsr2h,c
 26208  0187C4  0E06               	movlw	high _uart1RxBuffer
 26209  0187C6  22DA               	addwfc	fsr2h,f,c
 26210  0187C8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26211  0187CE  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 26212                           
 26213                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26214  0187D0  282E               	incf	_uart1RxHead^0,w,c
 26215  0187D2  B4D8               	btfsc	status,2,c
 26216                           
 26217                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26218  0187D4  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 26219                           
 26220                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26221  0187D6  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 26222                           
 26223                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26224  0187D8  0012               	return		;funcret
 26225  0187DA                     __end_of_UART1_Receive_ISR:
 26226                           	opt callstack 0
 26227                           
 26228 ;; *************** function _UART2_tx_vect_isr *****************
 26229 ;; Defined at:
 26230 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26231 ;; Parameters:    Size  Location     Type
 26232 ;;		None
 26233 ;; Auto vars:     Size  Location     Type
 26234 ;;		None
 26235 ;; Return value:  Size  Location     Type
 26236 ;;                  1    wreg      void 
 26237 ;; Registers used:
 26238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26239 ;; Tracked objects:
 26240 ;;		On entry : 0/0
 26241 ;;		On exit  : 0/0
 26242 ;;		Unchanged: 0/0
 26243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;Total ram usage:        0 bytes
 26249 ;; Hardware stack levels used:    1
 26250 ;; Hardware stack levels required when called:    1
 26251 ;; This function calls:
 26252 ;;		Absolute function
 26253 ;;		_UART2_Transmit_ISR
 26254 ;; This function is called by:
 26255 ;;		Interrupt level 2
 26256 ;; This function uses a non-reentrant model
 26257 ;;
 26258                           
 26259                           	psect	text138
 26260  018644                     __ptext138:
 26261                           	opt callstack 0
 26262  018644                     _UART2_tx_vect_isr:
 26263                           	opt callstack 13
 26264                           
 26265                           ;incstack = 0
 26266  018644  EE14  F000         	lfsr	1,___inthi_sp
 26267                           
 26268                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26269  018648  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26270  01864A  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26271  01864C  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26272  01864E  B4D8               	btfsc	status,2,c
 26273  018650  0011               	retfie		f
 26274                           
 26275                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26276  018652  D801               	call	i2u879_48
 26277  018654  0011               	retfie		f
 26278  018656                     i2u879_48:
 26279  018656  0005               	push	
 26280  018658  6EFA               	movwf	pclath,c
 26281  01865A  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26282  01865C  6EFD               	movwf	tosl,c
 26283  01865E  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26284  018660  6EFE               	movwf	tosh,c
 26285  018662  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26286  018664  6EFF               	movwf	tosu,c
 26287  018666  50FA               	movf	pclath,w,c
 26288  018668  0012               	return		;indir
 26289  01866A                     __end_of_UART2_tx_vect_isr:
 26290                           	opt callstack 0
 26291                           
 26292 ;; *************** function _UART2_Transmit_ISR *****************
 26293 ;; Defined at:
 26294 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26295 ;; Parameters:    Size  Location     Type
 26296 ;;		None
 26297 ;; Auto vars:     Size  Location     Type
 26298 ;;		None
 26299 ;; Return value:  Size  Location     Type
 26300 ;;                  1  [STACK] void 
 26301 ;; Registers used:
 26302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26303 ;; Tracked objects:
 26304 ;;		On entry : 0/0
 26305 ;;		On exit  : 3B/39
 26306 ;;		Unchanged: 0/0
 26307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26312 ;;Total ram usage:        0 bytes
 26313 ;; Hardware stack levels used:    1
 26314 ;; This function calls:
 26315 ;;		Nothing
 26316 ;; This function is called by:
 26317 ;;		_UART2_Initialize
 26318 ;;		_UART2_tx_vect_isr
 26319 ;; This function uses a reentrant model
 26320 ;;
 26321                           
 26322                           	psect	text139
 26323  01831A                     __ptext139:
 26324                           	opt callstack 0
 26325  01831A                     _UART2_Transmit_ISR:
 26326                           	opt callstack 13
 26327                           
 26328                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26329                           
 26330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26331                           ;incstack = 0
 26332  01831A  0E40               	movlw	64
 26333  01831C  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 26334  01831E  D010               	goto	l701
 26335                           
 26336                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26337  018320  0E50               	movlw	low _uart2TxBuffer
 26338  018322  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 26339  018324  6ED9               	movwf	fsr2l,c
 26340  018326  6ADA               	clrf	fsr2h,c
 26341  018328  0E03               	movlw	high _uart2TxBuffer
 26342  01832A  22DA               	addwfc	fsr2h,f,c
 26343  01832C  50DF               	movf	indf2,w,c
 26344  01832E  013D               	movlb	61	; () banked
 26345  018330  6FD2               	movwf	210,b	;volatile
 26346                           
 26347                           ; BSR set to: 61
 26348  018332  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 26349                           
 26350                           ; BSR set to: 61
 26351                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26352  018334  0E3F               	movlw	63
 26353  018336  642A               	cpfsgt	_uart2TxTail^0,c
 26354  018338  D001               	goto	l8906
 26355                           
 26356                           ; BSR set to: 61
 26357                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26358  01833A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26359  01833C                     l8906:
 26360                           
 26361                           ; BSR set to: 61
 26362                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26363  01833C  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26364                           
 26365                           ;mcc_generated_files/uart2.c: 224:     }
 26366  01833E  0012               	return	
 26367  018340                     l701:
 26368                           
 26369                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26370  018340  0139               	movlb	57	; () banked
 26371  018342  9796               	bcf	150,3,b	;volatile
 26372                           
 26373                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26374  018344  0012               	return		;funcret
 26375  018346                     __end_of_UART2_Transmit_ISR:
 26376                           	opt callstack 0
 26377                           
 26378 ;; *************** function _UART2_rx_vect_isr *****************
 26379 ;; Defined at:
 26380 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26381 ;; Parameters:    Size  Location     Type
 26382 ;;		None
 26383 ;; Auto vars:     Size  Location     Type
 26384 ;;		None
 26385 ;; Return value:  Size  Location     Type
 26386 ;;                  1    wreg      void 
 26387 ;; Registers used:
 26388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26389 ;; Tracked objects:
 26390 ;;		On entry : 0/0
 26391 ;;		On exit  : 0/0
 26392 ;;		Unchanged: 0/0
 26393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26398 ;;Total ram usage:        0 bytes
 26399 ;; Hardware stack levels used:    1
 26400 ;; Hardware stack levels required when called:    1
 26401 ;; This function calls:
 26402 ;;		Absolute function
 26403 ;;		_UART2_Receive_ISR
 26404 ;; This function is called by:
 26405 ;;		Interrupt level 2
 26406 ;; This function uses a non-reentrant model
 26407 ;;
 26408                           
 26409                           	psect	text140
 26410  01866C                     __ptext140:
 26411                           	opt callstack 0
 26412  01866C                     _UART2_rx_vect_isr:
 26413                           	opt callstack 13
 26414                           
 26415                           ;incstack = 0
 26416  01866C  EE14  F000         	lfsr	1,___inthi_sp
 26417                           
 26418                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26419  018670  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26420  018672  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26421  018674  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26422  018676  B4D8               	btfsc	status,2,c
 26423  018678  0011               	retfie		f
 26424                           
 26425                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26426  01867A  D801               	call	i2u881_48
 26427  01867C  0011               	retfie		f
 26428  01867E                     i2u881_48:
 26429  01867E  0005               	push	
 26430  018680  6EFA               	movwf	pclath,c
 26431  018682  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26432  018684  6EFD               	movwf	tosl,c
 26433  018686  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26434  018688  6EFE               	movwf	tosh,c
 26435  01868A  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26436  01868C  6EFF               	movwf	tosu,c
 26437  01868E  50FA               	movf	pclath,w,c
 26438  018690  0012               	return		;indir
 26439  018692                     __end_of_UART2_rx_vect_isr:
 26440                           	opt callstack 0
 26441                           
 26442 ;; *************** function _UART2_Receive_ISR *****************
 26443 ;; Defined at:
 26444 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26445 ;; Parameters:    Size  Location     Type
 26446 ;;		None
 26447 ;; Auto vars:     Size  Location     Type
 26448 ;;		None
 26449 ;; Return value:  Size  Location     Type
 26450 ;;                  1  [STACK] void 
 26451 ;; Registers used:
 26452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26453 ;; Tracked objects:
 26454 ;;		On entry : 0/0
 26455 ;;		On exit  : 0/0
 26456 ;;		Unchanged: 0/0
 26457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26462 ;;Total ram usage:        0 bytes
 26463 ;; Hardware stack levels used:    1
 26464 ;; This function calls:
 26465 ;;		Nothing
 26466 ;; This function is called by:
 26467 ;;		_UART2_Initialize
 26468 ;;		_UART2_rx_vect_isr
 26469 ;; This function uses a reentrant model
 26470 ;;
 26471                           
 26472                           	psect	text141
 26473  0187DA                     __ptext141:
 26474                           	opt callstack 0
 26475  0187DA                     _UART2_Receive_ISR:
 26476                           	opt callstack 13
 26477                           
 26478                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26479                           
 26480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26481                           ;incstack = 0
 26482  0187DA  0E00               	movlw	low _uart2RxBuffer
 26483  0187DC  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26484  0187DE  6ED9               	movwf	fsr2l,c
 26485  0187E0  6ADA               	clrf	fsr2h,c
 26486  0187E2  0E07               	movlw	high _uart2RxBuffer
 26487  0187E4  22DA               	addwfc	fsr2h,f,c
 26488  0187E6  006F F743 FFDF     	movff	15824,indf2	;volatile
 26489  0187EC  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26490                           
 26491                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26492  0187EE  2828               	incf	_uart2RxHead^0,w,c
 26493  0187F0  B4D8               	btfsc	status,2,c
 26494                           
 26495                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26496  0187F2  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26497                           
 26498                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26499  0187F4  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26500                           
 26501                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26502  0187F6  0012               	return		;funcret
 26503  0187F8                     __end_of_UART2_Receive_ISR:
 26504                           	opt callstack 0
 26505                           
 26506 ;; *************** function _TMR6_ISR *****************
 26507 ;; Defined at:
 26508 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26509 ;; Parameters:    Size  Location     Type
 26510 ;;		None
 26511 ;; Auto vars:     Size  Location     Type
 26512 ;;		None
 26513 ;; Return value:  Size  Location     Type
 26514 ;;                  1    wreg      void 
 26515 ;; Registers used:
 26516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26517 ;; Tracked objects:
 26518 ;;		On entry : 0/0
 26519 ;;		On exit  : 0/0
 26520 ;;		Unchanged: 0/0
 26521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26526 ;;Total ram usage:        1 bytes
 26527 ;; Hardware stack levels used:    1
 26528 ;; Hardware stack levels required when called:    2
 26529 ;; This function calls:
 26530 ;;		_TMR6_CallBack
 26531 ;; This function is called by:
 26532 ;;		Interrupt level 2
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text142
 26537  01884C                     __ptext142:
 26538                           	opt callstack 0
 26539  01884C                     _TMR6_ISR:
 26540                           	opt callstack 12
 26541                           
 26542                           ;incstack = 0
 26543  01884C  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26544  018852  EE14  F000         	lfsr	1,___inthi_sp
 26545                           
 26546                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26547  018856  0139               	movlb	57	; () banked
 26548  018858  91A9               	bcf	169,0,b	;volatile
 26549                           
 26550                           ; BSR set to: 57
 26551                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26552  01885A  EC6D  F0C3         	call	_TMR6_CallBack	;wreg free
 26553  01885E  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26554  018864  0011               	retfie		f
 26555  018866                     __end_of_TMR6_ISR:
 26556                           	opt callstack 0
 26557                           
 26558 ;; *************** function _TMR6_CallBack *****************
 26559 ;; Defined at:
 26560 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26561 ;; Parameters:    Size  Location     Type
 26562 ;;		None
 26563 ;; Auto vars:     Size  Location     Type
 26564 ;;		None
 26565 ;; Return value:  Size  Location     Type
 26566 ;;                  1  [STACK] void 
 26567 ;; Registers used:
 26568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26569 ;; Tracked objects:
 26570 ;;		On entry : 3F/39
 26571 ;;		On exit  : 0/0
 26572 ;;		Unchanged: 0/0
 26573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26578 ;;Total ram usage:        0 bytes
 26579 ;; Hardware stack levels used:    1
 26580 ;; Hardware stack levels required when called:    1
 26581 ;; This function calls:
 26582 ;;		Absolute function
 26583 ;;		_TMR6_DefaultInterruptHandler
 26584 ;; This function is called by:
 26585 ;;		_TMR6_ISR
 26586 ;; This function uses a reentrant model
 26587 ;;
 26588                           
 26589                           	psect	text143
 26590  0186DA                     __ptext143:
 26591                           	opt callstack 0
 26592  0186DA                     _TMR6_CallBack:
 26593                           	opt callstack 12
 26594                           
 26595                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26596                           
 26597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26598                           ;incstack = 0
 26599  0186DA  0100               	movlb	0	; () banked
 26600  0186DC  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26601  0186DE  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26602  0186E0  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26603  0186E2  B4D8               	btfsc	status,2,c
 26604  0186E4  0012               	return	
 26605                           
 26606                           ; BSR set to: 0
 26607                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26608  0186E6  D801               	call	u853_48
 26609  0186E8  0012               	return	
 26610  0186EA                     u853_48:
 26611  0186EA  0005               	push	
 26612  0186EC  6EFA               	movwf	pclath,c
 26613  0186EE  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26614  0186F0  6EFD               	movwf	tosl,c
 26615  0186F2  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26616  0186F4  6EFE               	movwf	tosh,c
 26617  0186F6  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26618  0186F8  6EFF               	movwf	tosu,c
 26619  0186FA  50FA               	movf	pclath,w,c
 26620  0186FC  0012               	return		;indir
 26621  0186FE                     __end_of_TMR6_CallBack:
 26622                           	opt callstack 0
 26623                           
 26624 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26625 ;; Defined at:
 26626 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26627 ;; Parameters:    Size  Location     Type
 26628 ;;		None
 26629 ;; Auto vars:     Size  Location     Type
 26630 ;;  i               1  [STACK] unsigned char 
 26631 ;; Return value:  Size  Location     Type
 26632 ;;                  1  [STACK] void 
 26633 ;; Registers used:
 26634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26635 ;; Tracked objects:
 26636 ;;		On entry : 3F/0
 26637 ;;		On exit  : 0/0
 26638 ;;		Unchanged: 0/0
 26639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26644 ;;Total ram usage:        0 bytes
 26645 ;; Hardware stack levels used:    1
 26646 ;; This function calls:
 26647 ;;		Nothing
 26648 ;; This function is called by:
 26649 ;;		_TMR6_Initialize
 26650 ;;		_TMR6_CallBack
 26651 ;; This function uses a reentrant model
 26652 ;;
 26653                           
 26654                           	psect	text144
 26655  017F68                     __ptext144:
 26656                           	opt callstack 0
 26657  017F68                     _TMR6_DefaultInterruptHandler:
 26658                           	opt callstack 0
 26659                           
 26660                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26661  017F68  52E6               	movf	postinc1,f,c
 26662                           
 26663                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26664                           ;stkvar	_i @ sp[(-1)+0]
 26665                           
 26666                           ;incstack = 0
 26667  017F6A  0EFF               	movlw	-1
 26668  017F6C  6AE3               	clrf	plusw1,c
 26669  017F6E                     l8570:
 26670                           
 26671                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26672                           ;stkvar	_i @ sp[(-1)+0]
 26673  017F6E  0EFF               	movlw	-1
 26674  017F70  50E3               	movf	plusw1,w,c
 26675  017F72  0D02               	mullw	2
 26676  017F74  50F3               	movf	243,w,c
 26677  017F76  0F89               	addlw	low _tickCount
 26678  017F78  6ED9               	movwf	fsr2l,c
 26679  017F7A  6ADA               	clrf	fsr2h,c
 26680  017F7C  50DE               	movf	postinc2,w,c
 26681  017F7E  10DE               	iorwf	postinc2,w,c
 26682  017F80  B4D8               	btfsc	status,2,c
 26683  017F82  D00A               	goto	l8574
 26684                           
 26685                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26686                           ;stkvar	_i @ sp[(-1)+0]
 26687  017F84  0EFF               	movlw	-1
 26688  017F86  50E3               	movf	plusw1,w,c
 26689  017F88  0D02               	mullw	2
 26690  017F8A  50F3               	movf	243,w,c
 26691  017F8C  0F89               	addlw	low _tickCount
 26692  017F8E  6ED9               	movwf	fsr2l,c
 26693  017F90  6ADA               	clrf	fsr2h,c
 26694  017F92  06DE               	decf	postinc2,f,c
 26695  017F94  0E00               	movlw	0
 26696  017F96  5ADD               	subwfb	postdec2,f,c
 26697  017F98                     l8574:
 26698                           
 26699                           ;mcc_generated_files/tmr6.c: 207:  }
 26700                           ;stkvar	_i @ sp[(-1)+0]
 26701  017F98  0EFF               	movlw	-1
 26702  017F9A  2AE3               	incf	plusw1,f,c
 26703                           
 26704                           ;stkvar	_i @ sp[(-1)+0]
 26705  017F9C  0EFF               	movlw	-1
 26706  017F9E  006F FF8C  F032    	movff	plusw1,btemp
 26707  017FA4  0E0B               	movlw	11
 26708  017FA6  6432               	cpfsgt	btemp^0,c
 26709  017FA8  D7E2               	goto	l8570
 26710                           
 26711                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26712  017FAA  52E5               	movf	postdec1,f,c
 26713  017FAC  0012               	return		;funcret
 26714  017FAE                     __end_of_TMR6_DefaultInterruptHandler:
 26715                           	opt callstack 0
 26716                           
 26717 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26718 ;; Defined at:
 26719 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26720 ;; Parameters:    Size  Location     Type
 26721 ;;		None
 26722 ;; Auto vars:     Size  Location     Type
 26723 ;;		None
 26724 ;; Return value:  Size  Location     Type
 26725 ;;                  1    wreg      void 
 26726 ;; Registers used:
 26727 ;;		None
 26728 ;; Tracked objects:
 26729 ;;		On entry : 0/0
 26730 ;;		On exit  : 3F/0
 26731 ;;		Unchanged: 0/0
 26732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26737 ;;Total ram usage:        0 bytes
 26738 ;; Hardware stack levels used:    1
 26739 ;; This function calls:
 26740 ;;		Nothing
 26741 ;; This function is called by:
 26742 ;;		Interrupt level 2
 26743 ;; This function uses a non-reentrant model
 26744 ;;
 26745                           
 26746                           	psect	text145
 26747  01894C                     __ptext145:
 26748                           	opt callstack 0
 26749  01894C                     _DMA1_DMASCNT_ISR:
 26750                           	opt callstack 14
 26751                           
 26752                           ;incstack = 0
 26753  01894C  EE14  F000         	lfsr	1,___inthi_sp
 26754                           
 26755                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26756  018950  0139               	movlb	57	; () banked
 26757  018952  91A2               	bcf	162,0,b	;volatile
 26758                           
 26759                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26760  018954  0100               	movlb	0	; () banked
 26761  018956  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26762                           
 26763                           ; BSR set to: 0
 26764  018958  0011               	retfie		f
 26765  01895A                     __end_of_DMA1_DMASCNT_ISR:
 26766                           	opt callstack 0
 26767                           
 26768 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26769 ;; Defined at:
 26770 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26771 ;; Parameters:    Size  Location     Type
 26772 ;;		None
 26773 ;; Auto vars:     Size  Location     Type
 26774 ;;		None
 26775 ;; Return value:  Size  Location     Type
 26776 ;;                  1    wreg      void 
 26777 ;; Registers used:
 26778 ;;		None
 26779 ;; Tracked objects:
 26780 ;;		On entry : 0/0
 26781 ;;		On exit  : 3F/39
 26782 ;;		Unchanged: 0/0
 26783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26788 ;;Total ram usage:        0 bytes
 26789 ;; Hardware stack levels used:    1
 26790 ;; This function calls:
 26791 ;;		Nothing
 26792 ;; This function is called by:
 26793 ;;		Interrupt level 2
 26794 ;; This function uses a non-reentrant model
 26795 ;;
 26796                           
 26797                           	psect	text146
 26798  018964                     __ptext146:
 26799                           	opt callstack 0
 26800  018964                     _DMA1_DMADCNT_ISR:
 26801                           	opt callstack 14
 26802                           
 26803                           ; BSR set to: 0
 26804                           ;incstack = 0
 26805  018964  EE14  F000         	lfsr	1,___inthi_sp
 26806                           
 26807                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26808  018968  0139               	movlb	57	; () banked
 26809  01896A  93A2               	bcf	162,1,b	;volatile
 26810                           
 26811                           ; BSR set to: 57
 26812  01896C  0011               	retfie		f
 26813  01896E                     __end_of_DMA1_DMADCNT_ISR:
 26814                           	opt callstack 0
 26815                           
 26816 ;; *************** function _DMA1_DMAA_ISR *****************
 26817 ;; Defined at:
 26818 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26819 ;; Parameters:    Size  Location     Type
 26820 ;;		None
 26821 ;; Auto vars:     Size  Location     Type
 26822 ;;		None
 26823 ;; Return value:  Size  Location     Type
 26824 ;;                  1    wreg      void 
 26825 ;; Registers used:
 26826 ;;		None
 26827 ;; Tracked objects:
 26828 ;;		On entry : 0/0
 26829 ;;		On exit  : 3F/39
 26830 ;;		Unchanged: 0/0
 26831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26836 ;;Total ram usage:        0 bytes
 26837 ;; Hardware stack levels used:    1
 26838 ;; This function calls:
 26839 ;;		Nothing
 26840 ;; This function is called by:
 26841 ;;		Interrupt level 2
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text147
 26846  018970                     __ptext147:
 26847                           	opt callstack 0
 26848  018970                     _DMA1_DMAA_ISR:
 26849                           	opt callstack 14
 26850                           
 26851                           ; BSR set to: 57
 26852                           ;incstack = 0
 26853  018970  EE14  F000         	lfsr	1,___inthi_sp
 26854                           
 26855                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26856  018974  0139               	movlb	57	; () banked
 26857  018976  97A2               	bcf	162,3,b	;volatile
 26858                           
 26859                           ; BSR set to: 57
 26860  018978  0011               	retfie		f
 26861  01897A                     __end_of_DMA1_DMAA_ISR:
 26862                           	opt callstack 0
 26863                           
 26864 ;; *************** function _DMA1_DMAOR_ISR *****************
 26865 ;; Defined at:
 26866 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26867 ;; Parameters:    Size  Location     Type
 26868 ;;		None
 26869 ;; Auto vars:     Size  Location     Type
 26870 ;;		None
 26871 ;; Return value:  Size  Location     Type
 26872 ;;                  1    wreg      void 
 26873 ;; Registers used:
 26874 ;;		None
 26875 ;; Tracked objects:
 26876 ;;		On entry : 0/0
 26877 ;;		On exit  : 3F/39
 26878 ;;		Unchanged: 0/0
 26879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26884 ;;Total ram usage:        0 bytes
 26885 ;; Hardware stack levels used:    1
 26886 ;; This function calls:
 26887 ;;		Nothing
 26888 ;; This function is called by:
 26889 ;;		Interrupt level 2
 26890 ;; This function uses a non-reentrant model
 26891 ;;
 26892                           
 26893                           	psect	text148
 26894  01897C                     __ptext148:
 26895                           	opt callstack 0
 26896  01897C                     _DMA1_DMAOR_ISR:
 26897                           	opt callstack 14
 26898                           
 26899                           ; BSR set to: 57
 26900                           ;incstack = 0
 26901  01897C  EE14  F000         	lfsr	1,___inthi_sp
 26902                           
 26903                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26904  018980  0139               	movlb	57	; () banked
 26905  018982  95A2               	bcf	162,2,b	;volatile
 26906                           
 26907                           ; BSR set to: 57
 26908  018984  0011               	retfie		f
 26909  018986                     __end_of_DMA1_DMAOR_ISR:
 26910                           	opt callstack 0
 26911                           
 26912                           ;
 26913                           ; Interrupt Vector Table @ 0x8
 26914                           ;
 26915                           
 26916                           	psect	ivt0x8
 26917  000008                     __pivt0x8:
 26918                           	opt callstack 0
 26919  000008                     ivt0x8_base:
 26920                           	opt callstack 0
 26921                           
 26922                           ; Vector 0 : SWINT
 26923  000008  6270               	dw	_Default_ISR shr (0+2)
 26924                           
 26925                           ; Vector 1 : HLVD
 26926  00000A  6270               	dw	_Default_ISR shr (0+2)
 26927                           
 26928                           ; Vector 2 : OSF
 26929  00000C  6270               	dw	_Default_ISR shr (0+2)
 26930                           
 26931                           ; Vector 3 : CSW
 26932  00000E  6270               	dw	_Default_ISR shr (0+2)
 26933                           
 26934                           ; Vector 4 : NVM
 26935  000010  6270               	dw	_Default_ISR shr (0+2)
 26936                           
 26937                           ; Vector 5 : SCAN
 26938  000012  6270               	dw	_Default_ISR shr (0+2)
 26939                           
 26940                           ; Vector 6 : CRC
 26941  000014  6270               	dw	_Default_ISR shr (0+2)
 26942                           
 26943                           ; Vector 7 : IOC
 26944  000016  6270               	dw	_Default_ISR shr (0+2)
 26945                           
 26946                           ; Vector 8 : INT0
 26947  000018  624F               	dw	_INT0_ISR shr (0+2)
 26948                           
 26949                           ; Vector 9 : ZCD
 26950  00001A  6270               	dw	_Default_ISR shr (0+2)
 26951                           
 26952                           ; Vector 10 : AD
 26953  00001C  60DC               	dw	_ADCC_ISR shr (0+2)
 26954                           
 26955                           ; Vector 11 : ADT
 26956  00001E  5E67               	dw	_ADCC_ThresholdISR shr (0+2)
 26957                           
 26958                           ; Vector 12 : CMP1
 26959  000020  6270               	dw	_Default_ISR shr (0+2)
 26960                           
 26961                           ; Vector 13 : SMT1
 26962  000022  6270               	dw	_Default_ISR shr (0+2)
 26963                           
 26964                           ; Vector 14 : SMT1PRA
 26965  000024  6270               	dw	_Default_ISR shr (0+2)
 26966                           
 26967                           ; Vector 15 : SMT1PRW
 26968  000026  6270               	dw	_Default_ISR shr (0+2)
 26969                           
 26970                           ; Vector 16 : DMA1SCNT
 26971  000028  6253               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26972                           
 26973                           ; Vector 17 : DMA1DCNT
 26974  00002A  6259               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26975                           
 26976                           ; Vector 18 : DMA1OR
 26977  00002C  625F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26978                           
 26979                           ; Vector 19 : DMA1A
 26980  00002E  625C               	dw	_DMA1_DMAA_ISR shr (0+2)
 26981                           
 26982                           ; Vector 20 : SPI1RX
 26983  000030  6270               	dw	_Default_ISR shr (0+2)
 26984                           
 26985                           ; Vector 21 : SPI1TX
 26986  000032  6270               	dw	_Default_ISR shr (0+2)
 26987                           
 26988                           ; Vector 22 : SPI1
 26989  000034  6270               	dw	_Default_ISR shr (0+2)
 26990                           
 26991                           ; Vector 23 : I2C1RX
 26992  000036  6270               	dw	_Default_ISR shr (0+2)
 26993                           
 26994                           ; Vector 24 : I2C1TX
 26995  000038  6270               	dw	_Default_ISR shr (0+2)
 26996                           
 26997                           ; Vector 25 : I2C1
 26998  00003A  6270               	dw	_Default_ISR shr (0+2)
 26999                           
 27000                           ; Vector 26 : I2C1E
 27001  00003C  6270               	dw	_Default_ISR shr (0+2)
 27002                           
 27003                           ; Vector 27 : U1RX
 27004  00003E  6187               	dw	_UART1_rx_vect_isr shr (0+2)
 27005                           
 27006                           ; Vector 28 : U1TX
 27007  000040  617D               	dw	_UART1_tx_vect_isr shr (0+2)
 27008                           
 27009                           ; Vector 29 : U1E
 27010  000042  6270               	dw	_Default_ISR shr (0+2)
 27011                           
 27012                           ; Vector 30 : U1
 27013  000044  6270               	dw	_Default_ISR shr (0+2)
 27014                           
 27015                           ; Vector 31 : TMR0
 27016  000046  6270               	dw	_Default_ISR shr (0+2)
 27017                           
 27018                           ; Vector 32 : TMR1
 27019  000048  6270               	dw	_Default_ISR shr (0+2)
 27020                           
 27021                           ; Vector 33 : TMR1G
 27022  00004A  6270               	dw	_Default_ISR shr (0+2)
 27023                           
 27024                           ; Vector 34 : TMR2
 27025  00004C  6270               	dw	_Default_ISR shr (0+2)
 27026                           
 27027                           ; Vector 35 : CCP1
 27028  00004E  6270               	dw	_Default_ISR shr (0+2)
 27029                           
 27030                           ; Vector 36 : Undefined
 27031  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27032                           
 27033                           ; Vector 37 : NCO1
 27034  000052  6270               	dw	_Default_ISR shr (0+2)
 27035                           
 27036                           ; Vector 38 : CWG1
 27037  000054  6270               	dw	_Default_ISR shr (0+2)
 27038                           
 27039                           ; Vector 39 : CLC1
 27040  000056  6270               	dw	_Default_ISR shr (0+2)
 27041                           
 27042                           ; Vector 40 : INT1
 27043  000058  601D               	dw	_INT1_ISR shr (0+2)
 27044                           
 27045                           ; Vector 41 : CMP2
 27046  00005A  6270               	dw	_Default_ISR shr (0+2)
 27047                           
 27048                           ; Vector 42 : DMA2SCNT
 27049  00005C  6270               	dw	_Default_ISR shr (0+2)
 27050                           
 27051                           ; Vector 43 : DMA2DCNT
 27052  00005E  6270               	dw	_Default_ISR shr (0+2)
 27053                           
 27054                           ; Vector 44 : DMA2OR
 27055  000060  6270               	dw	_Default_ISR shr (0+2)
 27056                           
 27057                           ; Vector 45 : DMA2A
 27058  000062  6270               	dw	_Default_ISR shr (0+2)
 27059                           
 27060                           ; Vector 46 : I2C2RX
 27061  000064  6270               	dw	_Default_ISR shr (0+2)
 27062                           
 27063                           ; Vector 47 : I2C2TX
 27064  000066  6270               	dw	_Default_ISR shr (0+2)
 27065                           
 27066                           ; Vector 48 : I2C2
 27067  000068  6270               	dw	_Default_ISR shr (0+2)
 27068                           
 27069                           ; Vector 49 : I2C2E
 27070  00006A  6270               	dw	_Default_ISR shr (0+2)
 27071                           
 27072                           ; Vector 50 : U2RX
 27073  00006C  619B               	dw	_UART2_rx_vect_isr shr (0+2)
 27074                           
 27075                           ; Vector 51 : U2TX
 27076  00006E  6191               	dw	_UART2_tx_vect_isr shr (0+2)
 27077                           
 27078                           ; Vector 52 : U2E
 27079  000070  6270               	dw	_Default_ISR shr (0+2)
 27080                           
 27081                           ; Vector 53 : U2
 27082  000072  6270               	dw	_Default_ISR shr (0+2)
 27083                           
 27084                           ; Vector 54 : TMR3
 27085  000074  6270               	dw	_Default_ISR shr (0+2)
 27086                           
 27087                           ; Vector 55 : TMR3G
 27088  000076  6270               	dw	_Default_ISR shr (0+2)
 27089                           
 27090                           ; Vector 56 : TMR4
 27091  000078  6270               	dw	_Default_ISR shr (0+2)
 27092                           
 27093                           ; Vector 57 : CCP2
 27094  00007A  6270               	dw	_Default_ISR shr (0+2)
 27095                           
 27096                           ; Vector 58 : Undefined
 27097  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27098                           
 27099                           ; Vector 59 : CWG2
 27100  00007E  6270               	dw	_Default_ISR shr (0+2)
 27101                           
 27102                           ; Vector 60 : CLC2
 27103  000080  6270               	dw	_Default_ISR shr (0+2)
 27104                           
 27105                           ; Vector 61 : INT2
 27106  000082  6270               	dw	_Default_ISR shr (0+2)
 27107                           
 27108                           ; Vector 62 : Undefined
 27109  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27110                           
 27111                           ; Vector 63 : Undefined
 27112  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27113                           
 27114                           ; Vector 64 : Undefined
 27115  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27116                           
 27117                           ; Vector 65 : Undefined
 27118  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27119                           
 27120                           ; Vector 66 : Undefined
 27121  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27122                           
 27123                           ; Vector 67 : Undefined
 27124  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27125                           
 27126                           ; Vector 68 : Undefined
 27127  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27128                           
 27129                           ; Vector 69 : Undefined
 27130  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27131                           
 27132                           ; Vector 70 : TMR5
 27133  000094  5F15               	dw	_TMR5_ISR shr (0+2)
 27134                           
 27135                           ; Vector 71 : TMR5G
 27136  000096  6270               	dw	_Default_ISR shr (0+2)
 27137                           
 27138                           ; Vector 72 : TMR6
 27139  000098  6213               	dw	_TMR6_ISR shr (0+2)
 27140                           
 27141                           ; Vector 73 : CCP3
 27142  00009A  6270               	dw	_Default_ISR shr (0+2)
 27143                           
 27144                           ; Vector 74 : CWG3
 27145  00009C  6270               	dw	_Default_ISR shr (0+2)
 27146                           
 27147                           ; Vector 75 : CLC3
 27148  00009E  6270               	dw	_Default_ISR shr (0+2)
 27149                           
 27150                           ; Vector 76 : Undefined
 27151  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27152                           
 27153                           ; Vector 77 : Undefined
 27154  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27155                           
 27156                           ; Vector 78 : Undefined
 27157  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27158                           
 27159                           ; Vector 79 : Undefined
 27160  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27161                           
 27162                           ; Vector 80 : CCP4
 27163  0000A8  6270               	dw	_Default_ISR shr (0+2)
 27164                           
 27165                           ; Vector 81 : CLC4
 27166  0000AA  6270               	dw	_Default_ISR shr (0+2)
 27167  0000AC                     ivt0x8_undefint:
 27168                           	opt callstack 0
 27169  0000AC  00FF               	reset	
 27170                           
 27171                           	psect	text149
 27172  000000                     __ptext149:
 27173                           	opt callstack 0
 27174                           
 27175                           	psect	rparam
 27176  0000                     
 27177                           	psect	temp
 27178  000032                     btemp:
 27179                           	opt callstack 0
 27180  000032                     	ds	32
 27181  0000                     wtemp0	set	btemp
 27182  0000                     wtemp1	set	btemp+2
 27183  0000                     wtemp2	set	btemp+4
 27184  0000                     wtemp3	set	btemp+6
 27185  0000                     wtemp4	set	btemp+8
 27186  0000                     wtemp5	set	btemp+10
 27187  0000                     wtemp8	set	btemp+1
 27188  0000                     ttemp0	set	btemp
 27189  0000                     ttemp1	set	btemp+3
 27190  0000                     ttemp2	set	btemp+6
 27191  0000                     ttemp3	set	btemp+9
 27192  0000                     ttemp5	set	btemp+1
 27193  0000                     ttemp6	set	btemp+4
 27194  0000                     ttemp7	set	btemp+8
 27195  0000                     ltemp0	set	btemp
 27196  0000                     ltemp1	set	btemp+4
 27197  0000                     ltemp2	set	btemp+8
 27198  0000                     lltemp0	set	btemp
 27199  0000                     lltemp1	set	btemp+8
 27200  0000                     lltemp2	set	btemp+16
 27201  0000                     lltemp3	set	btemp+24
 27202                           tosu	equ	0x3FFF
 27203                           tosh	equ	0x3FFE
 27204                           tosl	equ	0x3FFD
 27205                           stkptr	equ	0x3FFC
 27206                           pclatu	equ	0x3FFB
 27207                           pclath	equ	0x3FFA
 27208                           pcl	equ	0x3FF9
 27209                           tblptru	equ	0x3FF8
 27210                           tblptrh	equ	0x3FF7
 27211                           tblptrl	equ	0x3FF6
 27212                           tablat	equ	0x3FF5
 27213                           prodh	equ	0x3FF4
 27214                           prodl	equ	0x3FF3
 27215                           indf0	equ	0x3FEF
 27216                           postinc0	equ	0x3FEE
 27217                           postdec0	equ	0x3FED
 27218                           preinc0	equ	0x3FEC
 27219                           plusw0	equ	0x3FEB
 27220                           fsr0h	equ	0x3FEA
 27221                           fsr0l	equ	0x3FE9
 27222                           wreg	equ	0x3FE8
 27223                           indf1	equ	0x3FE7
 27224                           postinc1	equ	0x3FE6
 27225                           postdec1	equ	0x3FE5
 27226                           preinc1	equ	0x3FE4
 27227                           plusw1	equ	0x3FE3
 27228                           fsr1h	equ	0x3FE2
 27229                           fsr1l	equ	0x3FE1
 27230                           bsr	equ	0x3FE0
 27231                           indf2	equ	0x3FDF
 27232                           postinc2	equ	0x3FDE
 27233                           postdec2	equ	0x3FDD
 27234                           preinc2	equ	0x3FDC
 27235                           plusw2	equ	0x3FDB
 27236                           fsr2h	equ	0x3FDA
 27237                           fsr2l	equ	0x3FD9
 27238                           status	equ	0x3FD8


Data Sizes:
    Strings     355
    Constant    144
    Data        256
    BSS         1430
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     160
    BANK1           256      4     228
    BANK2           256      0     251
    BANK3           256      0     211
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_36(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5064_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_19(CODE[9]), 
		 -> STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    h	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    S4007tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_19(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_18(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  302619
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     342
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166972
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D3      11       82.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6A4      58        0.0%
DATA                 0      0     6A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 04:30:18 2019

                     _SPI1_Exchange8bit 8762                __end_of_set_display_info 87BC  
                                     _C 0100                                       _D 0500  
                                     _H 00F6                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FE0B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 852A            __end_of_start_switch_handler 8762  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 89AE                             __CFG_LVP$ON 000000  
                                   l171 88D2                                     l701 8340  
                                   l581 8314                                     l835 8770  
                                   _GIE 01FE97                                     _abs 7E50  
                                   _pad 695E                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 887E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8720                      _UART1_Transmit_ISR 82EE  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 86FE  
                          __CFG_ZCD$OFF 000000                                    l1028 806E  
                                  l2044 1D78                                    l1341 7CBA  
                                  l1256 34D6                                    l1248 3326  
                                  l1258 34DC                                    l2332 6280  
                                  l1614 87B8                                    l2328 6FF6  
                                  l1481 7514                                    l2339 6354  
                                  l1557 810A                                    l1477 715E  
                                  l2606 2D5E                                    l2366 61F2  
                                  l1574 6B7C                                    l1566 57F8  
                                  l1662 3C62                                    l1920 066A  
                                  l1496 813E                                    l2618 2BEE  
                                  l1835 69BA                                    l2651 32D8  
                                  l2750 6080                    _ADCC_StartConversion 88EC  
                                  l1855 3D46                                    l1935 0B1A  
                                  l2727 5B62                                    l7000 2550  
                                  l7002 256A                                    l2914 77C4  
                                  l1778 763A                                    l1699 5EEA  
                                  l1891 123A                                    l1788 73EE  
                                  l2853 683C                                    l1973 4BE4  
                                  l6310 279A                                    l6302 2748  
                                  l2758 7E90                                    l7022 6382  
                                  l7110 6FF4                                    l7102 6F7E  
                                  l2687 25A2                                    l2927 7740  
                                  l6304 2778                                    l6240 72DA  
                                  l6242 72FC                                    l7034 63B8  
                                  l7106 6FC0                                    l1994 412C  
                                  l6404 2B78                                    l6340 28D8  
                                  l7028 6398                                    l7124 62CE  
                                  l2789 52A2                                    l6422 2C10  
                                  l6414 2BD2                                    l6406 2B9E  
                                  l6350 294A                                    l6510 7E80  
                                  l7118 623E                                    l6424 2C22  
                                  l6360 2986                                    l6280 2688  
                                  l7056 6492                                    l7048 645E  
                                  l7072 6878                                    l7136 6352  
                                  l7128 631C                                    l7144 7E26  
                                  l6442 2C5C                                    l6354 296A  
                                  l6274 2642                                    l8034 86AE  
                                  l7170 615E                                    l7154 60DC  
                                  l8114 8148                                    l2899 5D2A  
                                  l6428 2C2E                                    l6356 297C  
                                  l6364 29B6                                    l6292 26F2  
                                  l6268 2602                                    l7076 6890  
                                  l7068 6866                                    l7180 61A0  
                                  l7172 617A                                    l6524 601E  
                                  l8204 5B42                                    l6470 2D0E  
                                  l6454 2CBA                                    l6438 2C56  
                                  l6382 2A52                                    l6286 26C0  
                                  l6278 2658                                    l6630 4E6E  
                                  l7094 6944                                    l7086 6910  
                                  l6710 2DFE                                    l6534 6078  
                                  l6464 2CE6                                    l6384 2A64  
                                  l6392 2AA0                                    l6624 4E1A  
                                  l6800 3154                                    l6704 2DBE  
                                  l6528 6022                                    l6552 77B4  
                                  l6608 7730                                    l8152 8424  
                                  l9130 7802                                    l6298 2732  
                                  l6810 319E                                    l6730 2EDC  
                                  l6714 2E14                                    l7178 618A  
                                  l8170 5A1E                                    l8162 59B2  
                                  l9034 7852                                    l9050 7362  
                                  l6476 2D3E                                    l6468 2CFE  
                                  l6388 2A6E                                    l6636 4EB4  
                                  l6724 2E9C                                    l6716 2E44  
                                  l6580 46DE                                    l8172 5A2C  
                                  l7198 7DF8                                    l6830 3254  
                                  l6814 31A4                                    l6742 2F60  
                                  l6734 2EF2                                    l6590 47E4  
                                  l6582 472E                                    l6566 45C0  
                                  l8182 5A8E                                    l8174 5A42  
                                  l9062 73BA                                    l9136 7812  
                                  l7712 5052                                    l6648 4F86  
                                  l6824 3218                                    l6736 2F22  
                                  l8184 5AAC                                    l8176 5A60  
                                  l7730 512C                                    l7722 50E8  
                                  l7714 5074                                    l6842 32AC  
                                  l6586 4776                                    l8194 5AE0  
                                  l8186 5AC2                                    l9058 739C  
                                  l9066 73C8                                    l6860 1DD8  
                                  l7732 5150                                    l6684 5692  
                                  l6676 55E6                                    l6668 555E  
                                  l6844 32BC                                    l6836 3284  
                                  l6756 2FB4                                    l6748 2F9A  
                                  l8700 390C                                    l6870 1E4E  
                                  l7734 518E                                    l6790 3112  
                                  l6782 30E0                                    l6774 307A  
                                  l6766 3044                                    l7728 5114  
                                  l6776 308C                                    l6784 30E4  
                                  l8712 3A18                                    l8704 39E6  
                                  l8570 7F6E                                    l6954 23B2  
                                  l6866 1E18                                    l7738 51F6  
                                  l9530 3D9E                                    l9610 0216  
                                  l8730 3C30                                    l8812 65BC  
                                  l8804 654E                                    l6972 2428  
                                  l6948 2396                                    l6884 1EE6  
                                  l6868 1E1E                                    l7748 5292  
                                  l9444 6752                                    l9460 7440  
                                  l9540 3FB0                                    l6796 312E  
                                  l9612 022C                                    l7764 5BF4  
                                  l8724 3B94                                    l8716 3AB4  
                                  l8574 7F98                                    l6982 249C  
                                  l6958 23D8                                    l6886 1EEC  
                                  l6878 1EA6                                    l9470 69B2  
                                  l9526 3D80                                    l9518 3D36  
                                  l9702 06B8                                    l7766 5C60  
                                  l6992 250C                                    l6968 2422  
                                  l6896 1F3E                                    l6888 1F1C  
                                  l8648 8120                                    l9456 7402  
                                  l9480 6A4A                                    l9472 69C4  
                                  l9560 4062                                    l9712 077A  
                                  l9608 01EA                                    l9616 0258  
                                  l8906 833C                                    l6986 24E2  
                                  l8762 5D98                                    l8754 5D6C  
                                  l9466 698A                                    l9722 0926  
                                  l9706 06F0                                    l9642 0396  
                                  l9626 02FC                                    l9634 032A  
                                  l8690 37EE                                    l8738 3C42  
                                  l8932 8056                                    l9476 6A00  
                                  l9492 765C                                    l9564 409E  
                                  l9652 04D2                                    l9900 4C56  
                                  l8684 37BE                                    l8828 75F4  
                                  l8790 64DC                                    l8766 5DB0  
                                  l9494 7688                                    l9486 6EB0  
                                  l9822 0FD6                                    l9670 058E  
                                  l9646 0406                                    l9590 00F0  
                                  l9910 4D10                                    l8792 64EA  
                                  l8784 64C0                                    l9824 0FF0  
                                  l9808 0F3A                                    l9760 0C32  
                                  l9744 0B12                                    l9736 0A48  
                                  l9664 0554                                    l9648 0470  
                                  l9904 4C86                                    l8786 64D0  
                                  l9834 1092                                    l9746 0B34  
                                  l9578 00AC                                    l9914 4D3C  
                                  l8884 8310                                    l8788 64D6  
                                  l8796 64F2                                    l9860 119A  
                                  l9844 10E2                                    l9772 0CBA  
                                  l9780 0D24                                    l9684 05F6  
                                  l9676 0594                                    l9668 057C  
                                  l9932 411C                                    l8798 651E  
                                  l9686 0602                                    l9598 0146  
                                  l9918 4D78                                    STR_1 FF80  
                                  l9880 4B66                                    l9952 41F2  
                                  l9944 4192                                    STR_2 FFB1  
                                  STR_3 FFDF                                    l9938 4156  
                                  STR_4 FF6F                                    STR_5 FF91  
                                  l9788 0D90                                    l9796 0EA2  
                                  STR_6 FFB1                                    STR_7 FFDF  
                                  STR_8 FF5E                                    STR_9 FEEC  
                                  l9896 4C1A                                    l9992 4458  
                                  l9968 42E8                                    l9976 436E  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5000 8254                                    u5010 8256  
                                  _T2PR 003FAB                                    u5120 6070  
                                  u5200 45A4                                    u6010 2476  
                                  u5130 6072                                    u5115 6052  
                                  u6020 24B0                                    u5060 7E64  
                                  u6100 647E                                    u5300 7FE8  
                                  u6030 24F6                                    u5070 5FA2  
                                  u5310 76EE                                    u6015 2466  
                                  u5240 4684                                    u5160 7772  
                                  u5320 76F0                                    u5401 4E74  
                                  u5225 45DE                                    u4530 732A  
                                  u5410 4EAE                                    u6210 6FF0  
                                  u5226 45E4                                    u5170 7774  
                                  _T6PR 003F93                                    u5075 5F98  
                                  u5227 45F2                                    u5340 82B4  
                                  u5420 4EE0                                    u6300 610A  
                                  u5260 475C                                    _PMD0 0039C0  
                                  u5245 467A                                    _PMD1 0039C1  
                                  u5350 82B6                                    u5510 55AE  
                                  u6150 68BC                                    u5190 4558  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u8000 7A12                                    u4720 29AE  
                                  u5440 4FBE                                    u5520 55E0  
                                  u6080 63E4                                    u4560 8284  
                                  _PMD4 0039C4                                    u4537 731C  
                                  u6305 6100                                    u5265 4752  
                                  _PMD5 0039C5                                    u4730 29CE  
                                  u5370 4E14                                    u5530 5612  
                                  u6170 6930                                    u4570 8286  
                                  u5290 7FE6                                    _PMD6 0039C6  
                                  u5195 454E                                    _PMD7 0039C7  
                                  u5460 5010                                    u4725 299E  
                                  u4830 2BC0                                    u4670 28FE  
                                  u5390 4E6A                                    u5550 56CA  
                                  u5710 310C                                    u6270 7E22  
                                  u6350 61A8                                    u4680 291E  
                                  u5800 322C                                    u6280 60BC  
                                  u8025 7A46                                    u4681 2918  
                                  u8026 7A48                                    u8018 7A14  
                                  u4930 2CAA                                    u7410 523C  
                                  u5570 571C                                    u5490 5558  
                                  u5810 3268                                    u6370 61D2  
                                  u6290 60D0                                    u9010 6F2A  
                                  u5900 1F2C                                    u6380 7DD4  
                                  u7420 523E                                    u9100 3D1C  
                                  u6285 60B2                                    u4870 2C34  
                                  u4790 2A96                                    u6390 7DF4  
                                  u5750 3196                                    u8214 3ACE  
                                  u8134 37D8                                    u4935 2C9A  
                                  u8215 3AC8                                    u8135 37D2  
                                  u4960 2CCA                                    u9120 3D6C  
                                  u8240 3AF8                                    u9017 6F1C  
                                  u4890 2C4E                                    u4698 2920  
                                  u8250 5D4A                                    u9130 3FC4  
                                  u9050 3C98                                    u8234 3AF0  
                                  u8154 3808                                    u5915 20C0  
                                  u4795 2A86                                    u8235 3AEA  
                                  u8155 3802                                    u9060 3C9A  
                                  u9300 02A6                                    u8420 7626  
                                  u5925 2188                                    u9141 3FF4  
                                  u7390 50E4                                    u9150 400A  
                                  u5790 31F2                                    u9310 02A8  
                                  u9230 00DA                                    u8174 382A  
                                  u5935 2350                                    u9151 4008  
                                  u8175 3824                                    u9160 401E  
                                  u9080 3D0A                                    u8408 75E2  
                                  u5970 241A                                    u9170 4022  
                                  u9410 05C6                                    u7490 5CEC  
                                  u8194 3A00                                    u5795 31E2  
                                  u8195 39FA                                    u9260 0194  
                                  u9190 4038                                    u9350 050E  
                                  u9270 0196                                    u8438 7628  
                                  u8390 75E0                                    u9520 0A18  
                                  u9450 0648                                    u9700 116E  
                                  u9620 0EE4                                    u9380 0562  
                                  u9710 1170                                    u7960 5AD6  
                                  u8930 6746                                    _PLLR 01CEE0  
                                  u7875 8022                                    u9820 4D9E  
                                  u8950 67C2                                    u9910 429E  
                                  u9680 10B8                                    u9920 42A0  
                                  u9840 4102                                    u9780 4C7C  
                                  u9940 436A                                    u9790 4CC2  
                                  u9950 438A                                    u9870 41EA  
                                  u9880 423E                                    u9961 43BA  
                                  u9945 434C                                    u9970 43D0  
                                  u9890 4240                                    u9971 43CE  
                                  u9980 43E4                                    u9797 4CB4  
                                  u9990 43E8                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 839A  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0178  
                                  _atoi 5038                                    _ctoa 763E  
                                  _main 32E2                                    _dtoa 3C68  
                                  _nanf 7B32                                    _seed 01C8  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4AFA  
                                  btemp 0032                                    _xtoa 40E8  
                __end_of_check_adc_scan 89A6                           ___fpclassifyf 5EF4  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8780                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 861C                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 894A  
                      __end_of_INT1_ISR 80B2          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7166           __end_of_OSCILLATOR_Initialize 88D8  
                                 l10110 1A7C                                   l10014 1326  
                                 l10120 1B2A                                   l10040 14F8  
                                 l10016 1360                                   l10018 1376  
                                 l10140 1D00                                   l10036 14A8  
                                 l10204 7190                                   l10134 1CA6  
                                 l10038 14E2                                   l10150 1D24  
                                 l10206 71D0                                   l10144 1D04  
                                 l10056 165C                                   l10090 191C  
                                 l10066 16F2                                   l10172 48A6  
                                 l10086 18E8                                   l10078 1830  
                                 l10422 58F6                                   l10192 4A7C  
                                 l10184 49CE                                   l10256 7266  
                                 l10408 57C8                                   l10520 34E0  
                                 l10178 4964                                   l10290 6A94  
                                 l10522 350E                                   l10438 595A  
                                 l10542 3566                                   l10534 3542  
                                 l10470 3308                                   l10552 3740  
                                 l10472 3310                                   l10554 375E  
                                 l10546 3574                                   l10548 3636  
                                 l10476 332E                                   l10558 3776  
                                 l10478 3340                                   l10568 37AA  
                                 PRLOCK 0039EF                         __end_of___aodiv 5038  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 5740                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 64AC                         __end_of___flneg 7E50  
                                 STR_10 FF12                                   STR_11 FEFF  
                                 STR_12 FF4B                                   STR_20 FEC6  
                                 STR_21 FEC6                                   STR_13 FF25  
                                 STR_22 FFCC                                   STR_14 FF38  
                                 STR_30 FEB3                                   STR_23 FFCC  
                                 STR_15 FFFB                                   STR_16 FFF8  
                                 STR_24 FFA2                                   STR_25 FFA2  
                                 STR_41 FFE9                           __CFG_WDTE$OFF 000000  
                                 STR_26 FFA2                                   STR_42 FFF1  
                                 STR_18 FFC0                                   STR_19 FFD6  
                                 STR_27 FE9B                                   STR_36 FEC5  
                       __end_of___awmod 695E                                   STR_45 FFF5  
                                 STR_37 FFE5                                   STR_29 FED9  
                                 STR_38 FFED                                   STR_47 FFF5  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7EDC                         __end_of___fltol 61FC  
                                 u10100 1542                                   u10110 1568  
                                 u10200 19D8                                   u10040 13BE  
                                 u10050 13C0                                   u10060 13E6  
                                 u10300 4AF0                                   u10240 1B7E  
                                 u10160 1746                                   u10090 1540  
                                 u10330 7246                                   u10420 5946  
                                 u10190 19D6                                   u10430 5948  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 89C0                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 85F4  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 7CB0  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8866  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 0254                                   _fputc 6722  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7FF2  
                                 _fputs 73F2                         __end_of_isdigit 82C0  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 81C8                                   _width 001B  
                                 _putch 8830                         __end_of_islower 8260  
                       __end_of_isspace 7E08                _INT1_SetInterruptHandler 852A  
                       __end_of_isupper 8290                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 84DA  
           _UART1_SetRxInterruptHandler 84B2                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6C8A                         __end_of_tolower 77CE  
                       __end_of_strncmp 5D34                         __end_of_toupper 774A  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8642                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7F22                   __end_of_ringBufS_init 8412  
                       __initialization 6C8A                       _UART2_rx_vect_isr 866C  
                          __end_of_atoi 52AC                            __end_of_ctoa 76C6  
                          __end_of_main 37BC                            __end_of_dtoa 40E8  
                          __end_of_nanf 7B94                            __end_of_stoa 4DB8  
                          __end_of_xtoa 44A2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8896  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8502  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 861A                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8346                         _PWM8_Initialize 88AC  
                      _UART1_Initialize 7ACE                       _UART2_tx_vect_isr 8644  
                    _UART2_Transmit_ISR 831A                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7A6A                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7FF2                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7CA2                    _start_switch_handler 8742  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 892C                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u806_20 85D2  
                                u806_26 85D4                                  u831_20 64E6  
                                u831_21 64E0                                  u398_48 872E  
                                u835_24 65B2                                  u835_25 65AE  
                                u837_20 65D8                                  u828_28 64C6  
                                u837_26 65DA                                  u845_28 870C  
                                u853_48 86EA                                  u870_44 7832  
                                u870_45 782C                                  u856_28 86C6  
                  __size_of_hid_display 009C                        __end_of___xxtofl 5B6C  
 __end_of_ADCC_DischargeSampleCapacitor 898E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8986                __end_of_send_lcd_cmd_dma 7DB6  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8692  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 895A  
                      _UART2_Initialize 7BF6                                  _WaitMs 8126  
                       _conv_raw_result 37BC                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 61FC  
                                ___fleq 6F3C                       _ADCC_ThresholdISR 799C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 748A  
                                _efgtoa 0000                                  _floorf 44A2  
                    ?_ADCC_ThresholdISR 0052                                  _memset 480E  
                  __size_of_help_button 0038                                  clear_0 6CF8  
                                clear_1 6D0C                                  clear_2 6D1E  
                                clear_3 6D2A                                  clear_4 6D36  
                                clear_5 6D42                                  clear_6 6D4E  
                                clear_7 6D5A                                  clear_8 6D66  
                                _printf 7B94                      _eaDogM_WriteString 720E  
                                _strcpy 6E68                               ?_ADCC_ISR 0052  
                                _strlen 72B4                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7930                          _PMD_Initialize 88D8  
             __end_of_UART2_tx_vect_isr 866A                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7ACE                            __mediumconst FE0A  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 7D0A                        __end_of_vfprintf 720E  
                            _StartTimer 80B2           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7F68                       _SYSTEM_Initialize 7EDC  
                            __accesstop 0060                 __end_of__initialization 6D78  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 899E                    __end_of_display_info 8996  
             __end_of_CLKREF_Initialize 8964                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 8034  
                 _set_temp_display_help 890E               __end_of_ADCC_ThresholdISR 7A04  
                __end_of_ringBufS_flush 751C                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 8192                            __pidataBANK1 88FE  
                          __pidataBANK2 7000                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6846                           __end_of_fputs 748A  
                         __end_of_srand 81FC                   __end_of_TMR5_CallBack 86DA  
                         __end_of_putch 884A                 __end_of_PWM8_Initialize 88C2  
               __end_of_TMR6_Initialize 8370                       _adc_int_t_handler 77CE  
                __end_of_PMD_Initialize 88EC                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 86FE             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8970  
                        _clear_adc_scan 89AE                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7F22                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 02BB  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5740  
               __end_of_conv_raw_result 3C68                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00FC  
                     __end_of_TimerDone 86B6                        _DMA1_DMADCNT_ISR 8964  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8814  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8502  
               __end_of_ADCC_Initialize 799A                              ??_TMR5_ISR 01E0  
             __end_of_adc_int_t_handler 784C                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 85A2   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 857A                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 87BC  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 89B4                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 894C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 8412                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8074                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8866  
                               __Lparam 0000                __end_of_UART1_Initialize 7B32  
                     __end_of_hid_input 763E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4DB8                                 ___fladd 25AC  
                               ___aomod 5500                                 ___fldiv 2D68  
                               ___awdiv 635E                                 ___flneg 7E08  
                               ___awmod 6846                                 ___flmul 1D82  
                               ___flsub 7E96                                 ___fltol 608A  
             __end_of_UART1_Receive_ISR 87DA                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6E68  
                               __pcinit 6C8A                __end_of_mode_lamp_bright 893A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 891E                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 32E2  
                               __ptext1 8742                                 __ptext2 7A6A  
                               __ptext3 88EC                                 __ptext4 8986  
                               __ptext5 81C8                                 __ptext6 6D7E  
                               __ptext7 839A                                 __ptext8 83C2  
                               __ptext9 8762                       _UART2_Receive_ISR 87DA  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 88C2                            __size_of_abs 0046  
                               us547999 5022                            __size_of_pad 0114  
                               us558999 572E                                 _isalpha 7FAE  
                               _isdigit 8290                                 us904999 3C82  
                               _mode_sw 0025                                 us973999 4B0C  
                               us986999 4168                       __end_of_lp_filter 5EF4  
                               _islower 8230                                 _isspace 7DB6  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 7C54                                 _isupper 8260  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6B80  
                               _tolower 774A                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5B6C                                 _toupper 76C6  
                  end_of_initialization 6D78               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 84B2             _UART1_SetTxInterruptHandler 848A  
   __end_of_UART2_SetRxInterruptHandler 848A             _UART2_SetRxInterruptHandler 8462  
                     __end_of_set_vterm 8830                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 89C0  
             __end_of_UART2_Receive_ISR 87F8                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 84DA  
                          _display_help 8996                   _TMR5_InterruptHandler 00C1  
                          _display_info 898E    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 85CA  
           _ADCC_SetADIInterruptHandler 85A2                              _update_lcd 6A72  
                       _calc_model_data 52AC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 78C6  
                       _SPI1_Initialize 8896                   __end_of_get_vterm_ptr 82EE  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 815C            __end_of_INTERRUPT_Initialize 7A6A  
                            _vterm_dump 65F4                          __end_of___flge 635E  
                        __end_of___fleq 7000    __end_of_INT0_DefaultInterruptHandler 89CA  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 89C8  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 7D0A  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0228  
                        __end_of_floorf 480E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4AFA  
                        __end_of_printf 7BF6                __end_of_DMA1_DMADCNT_ISR 896E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8742  
                        __end_of_strcpy 6F3C                          __end_of_strlen 7356  
                   start_initialization 6C8A    __end_of_TMR5_DefaultInterruptHandler 85F2  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 85CA  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 7E96  
                 __end_of_INT1_CallBack 8720               __size_of_set_display_info 001E  
                           __end_of_pad 6A72                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 83EA                          _switch_handler 64AC  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 608A  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BB  
              __end_of_DMA1_DMASCNT_ISR 895A                           _uart2TxBuffer 0350  
                        _DMA1_DMAOR_ISR 897C                     __end_of_hid_display 73F2  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8692  
                         _ringBufS_init 83EA                             __pdataBANK0 00C7  
                           __pdataBANK1 01D0                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 8230                 __end_of_calc_model_data 5500  
                   __end_of_help_button 8126         __end_of_eaDogM_WriteStringAtPos 8192  
               __end_of_DMA1_Initialize 7930                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 857A                           __pcstackBANK0 00FC  
                         __pcstackBANK1 01E0                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 65F4                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 88AC                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE9B  
                      _convert_adc_data 784C               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6D7E                  __end_of_DMA1_DMAOR_ISR 8986  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 7D64  
                _PIN_MANAGER_Initialize 751C                    __end_of_wait_lcd_set 89BA  
                         __pmediumconst FE0A                               __ptext100 887E  
                             __ptext101 8896                               __ptext110 8552  
                             __ptext102 88AC                               __ptext111 7D0A  
                             __ptext103 88D8                               __ptext120 64AC  
                             __ptext112 78C6                               __ptext104 751C  
                             __ptext121 7C54                               __ptext113 895A  
                             __ptext105 88C2                               __ptext130 77CE  
                             __ptext122 8034                               __ptext114 7930  
                             __ptext106 7A04                               __ptext131 89CA  
                             __ptext123 86B6                               __ptext115 857A  
                             __ptext107 89A6                               __ptext140 866C  
                             __ptext132 89CC                               __ptext124 85CA  
                             __ptext116 85A2                               __ptext108 81FC  
                             __ptext141 87DA                               __ptext133 799C  
                             __ptext125 893C                               __ptext117 8074  
                             __ptext109 852A                               __ptext142 884C  
                             __ptext134 85F4                               __ptext126 8720  
                             __ptext118 86FE                               __ptext143 86DA  
                             __ptext135 82EE                               __ptext127 89C8  
                             __ptext119 89C6                               __ptext144 7F68  
                             __ptext136 861C                               __ptext128 89C0  
                             __ptext145 894C                               __ptext137 87BC  
                             __ptext129 8370                               __ptext146 8964  
                             __ptext138 8644                               __ptext147 8970  
                             __ptext139 831A                               __ptext148 897C  
                             __ptext149 0000                               _hid_input 75AE  
                    __end_of_StartTimer 80EE                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8370  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 5D34                             _hid_display 7356  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7A04                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 893C                                _INT1_ISR 8074  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0390                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                i2u428_48 8386  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u881_48 867E  
                              i2u873_48 79D0                                i2u873_49 79E4  
                              i2u875_48 8606                __size_of_TMR5_Initialize 0046  
                              i2u877_48 862E                                i2u879_48 8656  
                             _set_vterm 8814                     __size_of_update_lcd 010E  
                           _help_button 80EE              __end_of_UART1_Transmit_ISR 831A  
                              _TMR5_ISR 7C54                                _TMR6_ISR 884C  
                             _port_data 01D0                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 86B6  
                            _ADCON0bits 003EF8                      __end_of_check_help 5968  
                             _start_lcd 89BA                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 86DA  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 879E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6C9E                               copy_data1 6CC0  
                             copy_data2 6CE2                _INT0_SetInterruptHandler 8552  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8462             _UART2_SetTxInterruptHandler 843A  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 87F8  
                          _send_lcd_cmd 83C2                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 89CC                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 843A                   __end_of_DMA1_DMAA_ISR 897A  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5968  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 892C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 83EA  
                              __ptext11 7356                                __ptext20 89AE  
                              __ptext12 75AE                                __ptext21 5740  
                              __ptext13 8412                                __ptext30 7CB0  
                              __ptext22 65F4                                __ptext14 891E  
                              __ptext31 720E                                __ptext23 6B80  
                              __ptext15 784C                                __ptext40 76C6  
                              __ptext32 89B4                                __ptext24 82C0  
                              __ptext16 37BC                                __ptext41 8230  
                              __ptext33 89BA                                __ptext25 8126  
                              __ptext17 7B32                                __ptext50 5EF4  
                              __ptext42 7FAE                                __ptext34 748A  
                              __ptext26 6A72                                __ptext18 8780  
                              __ptext51 608A                                __ptext43 5B6C  
                              __ptext35 480E                                __ptext27 815C  
                              __ptext19 5968                                __ptext60 5500  
                              __ptext52 7E08                                __ptext44 4AFA  
                              __ptext36 7B94                                __ptext28 7D64  
                              __ptext61 4DB8                                __ptext53 61FC  
                              __ptext45 0000                                __ptext37 7166  
                              __ptext29 87F8                                __ptext70 7DB6  
                              __ptext62 763E                                __ptext54 6F3C  
                              __ptext46 774A                                __ptext38 1244  
                              __ptext71 8290                                __ptext63 695E  
                              __ptext55 2D68                                __ptext47 8260  
                              __ptext39 40E8                                __ptext80 80B2  
                              __ptext72 8814                                __ptext64 72B4  
                              __ptext56 6846                                __ptext48 6E68  
                              __ptext81 898E                                __ptext73 890E  
                              __ptext65 73F2                                __ptext57 635E  
                              __ptext49 44A2                                __ptext90 7BF6  
                              __ptext82 8996                                __ptext74 879E  
                              __ptext66 6722                                __ptext58 3C68  
                              __ptext91 843A                                __ptext83 899E  
                              __ptext75 8866                                __ptext67 8830  
                              __ptext59 7E50                                __ptext92 8462  
                              __ptext84 52AC                                __ptext76 892C  
                              __ptext68 70BC                                __ptext93 7ACE  
                              __ptext85 5D34                                __ptext77 7FF2  
                              __ptext69 5038                                __ptext94 848A  
                              __ptext86 7E96                                __ptext78 80EE  
                              __ptext95 84B2                                __ptext87 25AC  
                              __ptext79 8692                                __ptext96 8346  
                              __ptext88 1D82                                __ptext97 84DA  
                              __ptext89 7EDC                                __ptext98 7F22  
                              __ptext99 8502                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 70BC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 04DA  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 88FE                                _spi_link 00A1  
                              _wdtdelay 7CB0              __end_of_UART2_Transmit_ISR 8346  
                              _vfprintf 7166                __end_of_convert_adc_data 78C6  
            __end_of_PWM8_LoadDutyValue 8034    __end_of_INT1_DefaultInterruptHandler 89C8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 89C6  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8780                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 89B4  
                    _EXT_INT_Initialize 81FC    __end_of_TMR6_DefaultInterruptHandler 7FAE  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7F68  
  __end_of_ADCC_DefaultInterruptHandler 89CC   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 89CA                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 839A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 891E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 72B4  
                 __end_of_mode_lamp_dim 887E                 __end_of_adc_int_handler 89CE  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6B80                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 89A6                  __end_of_get_raw_result 879E  
                      _send_lcd_cmd_dma 7D64                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 8552  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 83C2  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 89C6  
        __end_of_PIN_MANAGER_Initialize 75AE               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6722                 _eaDogM_WriteStringAtPos 815C  
                         _get_vterm_ptr 82C0                          _check_adc_scan 899E  
             __size_of_UART2_Initialize 005E  
