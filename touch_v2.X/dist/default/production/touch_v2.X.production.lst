

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 03:34:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=4,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=4,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=4,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=4,class=CODE,delta=1
   106                           	psect	text84,global,reloc=4,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=4,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=4,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=4,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=4,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=4,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=4,class=CODE,delta=1
   120                           	psect	text98,global,reloc=4,class=CODE,delta=1
   121                           	psect	text99,global,reloc=4,class=CODE,delta=1
   122                           	psect	text100,global,reloc=4,class=CODE,delta=1
   123                           	psect	text101,global,reloc=4,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132  0000                     
   133                           ; Version 2.05
   134                           ; Generated 20/12/2018 GMT
   135                           ; 
   136                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F57K42 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167  0000                     
   168 ;;_mode	offset	0
   169 ;;_block	offset	0
   170 ;;_rxData	offset	3
   171 ;;_t_link	offset=-1 (param)
   172 ;;_k	offset	0
   173 ;;_checksum	offset	2
   174 ;;_i	offset	4
   175 ;;_byte_block	offset=-2 (param)
   176 ;;_length	offset=-3 (param)
   177 ;;_fake	offset=-4 (param)
   178 ;;_i	offset	0
   179 ;;_sum	offset	2
   180 ;;_byte_block	offset=-2 (param)
   181 ;;_byte_count	offset=-4 (param)
   182 ;;_bufData	offset=-1 (param)
   183 ;;_stream	offset=-1 (param)
   184 ;;_function	offset=-2 (param)
   185 ;;_f	offset	0
   186 ;;_ap	offset	5
   187 ;;_s	offset=-2 (param)
   188 ;;_fmt	offset=-3 (param)
   189 ;;_rxData	offset	0
   190 ;;_r_link	offset=-1 (param)
   191 ;;_byte_block	offset=-1 (param)
   192 ;;_clear	offset=-2 (param)
   193 ;;_numMilliseconds	offset=-2 (param)
   194 ;;_timer	offset=-1 (param)
   195 ;;_timer	offset=-1 (param)
   196 ;;_count	offset=-3 (param)
   197 ;;_txData	offset=-1 (param)
   198 ;;_readValue	offset	0
   199 ;;_cmd	offset=-1 (param)
   200 ;;_cmd	offset=-1 (param)
   201 ;;_data	offset=-1 (param)
   202 ;;__this	offset=-2 (param)
   203 ;;_r	offset=-1 (param)
   204 ;;_c	offset=-2 (param)
   205 ;;_strPtr	offset=-3 (param)
   206 ;;_strPtr	offset=-1 (param)
   207 ;;_cmd	offset=-1 (param)
   208 ;;_strPtr	offset=-1 (param)
   209 ;;_delay	offset=-4 (param)
   210 ;;__this	offset=-2 (param)
   211 ;;_clearBuffer	offset=-3 (param)
   212 ;;_s	offset	0
   213 ;;_k	offset	2
   214 ;;_dest	offset=-2 (param)
   215 ;;_c	offset=-4 (param)
   216 ;;_n	offset=-6 (param)
   217 ;;_ap	offset	0
   218 ;;_fmt	offset=-2 (param)
   219 ;;_cfmt	offset	0
   220 ;;_fp	offset=-2 (param)
   221 ;;_fmt	offset=-3 (param)
   222 ;;_ap	offset=-5 (param)
   223 ;;_ll	offset	0
   224 ;;_cp	offset	8
   225 ;;_c	offset	10
   226 ;;_fp	offset=-2 (param)
   227 ;;_fmt	offset=-4 (param)
   228 ;;_ap	offset=-6 (param)
   229 ;;_r	offset	0
   230 ;;_l	offset	1
   231 ;;__l	offset=-1 (param)
   232 ;;__r	offset=-2 (param)
   233 ;;_n	offset=-4 (param)
   234 ;;_nuls	offset	0
   235 ;;_l	offset	7
   236 ;;_p	offset	9
   237 ;;_cp	offset	11
   238 ;;_w	offset	13
   239 ;;_i	offset	15
   240 ;;_fp	offset=-2 (param)
   241 ;;_s	offset=-4 (param)
   242 ;;_dtoa$3821	offset	0
   243 ;;_n	offset	2
   244 ;;_i	offset	10
   245 ;;_s	offset	12
   246 ;;_w	offset	14
   247 ;;_p	offset	16
   248 ;;_fp	offset=-2 (param)
   249 ;;_d	offset=-10 (param)
   250 ;;_a	offset=-2 (param)
   251 ;;_sign	offset	0
   252 ;;_counter	offset	1
   253 ;;_dividend	offset=-8 (param)
   254 ;;_divisor	offset=-16 (param)
   255 ;;_quotient	offset	0
   256 ;;_sign	offset	8
   257 ;;_counter	offset	9
   258 ;;_dividend	offset=-8 (param)
   259 ;;_divisor	offset=-16 (param)
   260 ;;_w	offset	0
   261 ;;_fp	offset=-2 (param)
   262 ;;_c	offset=-3 (param)
   263 ;;_w	offset	0
   264 ;;_i	offset	2
   265 ;;_fp	offset=-2 (param)
   266 ;;_buf	offset=-4 (param)
   267 ;;_p	offset=-6 (param)
   268 ;;_a	offset	0
   269 ;;_s	offset=-2 (param)
   270 ;;_i	offset	0
   271 ;;_c	offset	2
   272 ;;_s	offset=-2 (param)
   273 ;;_fp	offset=-4 (param)
   274 ;;_c	offset=-2 (param)
   275 ;;_fp	offset=-4 (param)
   276 ;;_c	offset=-1 (param)
   277 ;;__this	offset=-2 (param)
   278 ;;_c	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_state	offset	0
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_i	offset	0
   291 ;;_timerVal	offset=-2 (param)
   292                           
   293                           	psect	idataCOMRAM
   294  0059BE                     __pidataCOMRAM:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for r_protocol@retry
   298  0059BE  03                 	db	3
   299                           
   300                           	psect	idataBANK0
   301  0058C4                     __pidataBANK0:
   302                           	opt callstack 0
   303                           
   304                           ;initializer for stoa@F1144
   305  0058C4  28                 	db	40
   306  0058C5  6E                 	db	110
   307  0058C6  75                 	db	117
   308  0058C7  6C                 	db	108
   309  0058C8  6C                 	db	108
   310  0058C9  29                 	db	41
   311  0058CA  00                 	db	0
   312                           
   313                           ;initializer for _H12
   314  0058CB  0000               	dw	0
   315  0058CD  00                 	db	0
   316  0058CE  01                 	db	1
   317  0058CF  0001               	dw	1
   318  0058D1  0000               	dw	0
   319  0058D3  01                 	db	1
   320  0058D4  80                 	db	128
   321  0058D5  02                 	db	2
   322  0058D6  81                 	db	129
   323  0058D7  00                 	db	0
   324  0058D8  00                 	db	0
   325  0058D9  0C                 	db	12
   326                           
   327                           	psect	idataBANK1
   328  00475A                     __pidataBANK1:
   329                           	opt callstack 0
   330                           
   331                           ;initializer for _H10
   332  00475A  0000               	dw	0
   333  00475C  9F75               	dw	40821
   334  00475E  000C               	dw	12
   335  004760  01                 	db	1
   336  004761  80                 	db	128
   337  004762  01                 	db	1
   338  004763  81                 	db	129
   339  004764  00                 	db	0
   340  004765  00                 	db	0
   341  004766  0A                 	db	10
   342  004767  0000               	dw	0
   343  004769  00                 	db	0
   344  00476A  00                 	db	0
   345  00476B  00                 	db	0
   346  00476C  00                 	db	0
   347  00476D  00                 	db	0
   348  00476E  00                 	db	0
   349  00476F  00                 	db	0
   350  004770  00                 	db	0
   351  004771  00                 	db	0
   352  004772  00                 	db	0
   353  004773  0A                 	db	10
   354  004774  0000               	dw	0
   355  004776  0001               	dw	1
   356  004778  0000               	dw	0
   357  00477A  01                 	db	1
   358  00477B  80                 	db	128
   359  00477C  00                 	db	0
   360  00477D  01                 	db	1
   361  00477E  00                 	db	0
   362  00477F  00                 	db	0
   363  004780  0A                 	db	10
   364  004781  0000               	dw	0
   365  004783  0D89               	dw	3465
   366  004785  0000               	dw	0
   367  004787  01                 	db	1
   368  004788  80                 	db	128
   369  004789  01                 	db	1
   370  00478A  81                 	db	129
   371  00478B  00                 	db	0
   372  00478C  80                 	db	128
   373  00478D  0A                 	db	10
   374  00478E  0000               	dw	0
   375  004790  0D89               	dw	3465
   376  004792  0000               	dw	0
   377  004794  01                 	db	1
   378  004795  80                 	db	128
   379  004796  11                 	db	17
   380  004797  82                 	db	130
   381  004798  00                 	db	0
   382  004799  00                 	db	0
   383  00479A  0A                 	db	10
   384                           
   385                           ;initializer for _H27
   386  00479B  0000               	dw	0
   387  00479D  00                 	db	0
   388  00479E  00                 	db	0
   389  00479F  00                 	db	0
   390  0047A0  00                 	db	0
   391  0047A1  00                 	db	0
   392  0047A2  00                 	db	0
   393  0047A3  00                 	db	0
   394  0047A4  00                 	db	0
   395  0047A5  00                 	db	0
   396  0047A6  00                 	db	0
   397  0047A7  00                 	db	0
   398  0047A8  00                 	db	0
   399  0047A9  00                 	db	0
   400  0047AA  00                 	db	0
   401  0047AB  00                 	db	0
   402  0047AC  00                 	db	0
   403  0047AD  00                 	db	0
   404  0047AE  0001               	dw	1
   405  0047B0  0000               	dw	0
   406  0047B2  01                 	db	1
   407  0047B3  80                 	db	128
   408  0047B4  0D                 	db	13
   409  0047B5  81                 	db	129
   410  0047B6  00                 	db	0
   411  0047B7  80                 	db	128
   412  0047B8  1B                 	db	27
   413                           
   414                           ;initializer for _H24
   415  0047B9  0000               	dw	0
   416  0047BB  30                 	db	48
   417  0047BC  31                 	db	49
   418  0047BD  30                 	db	48
   419  0047BE  39                 	db	57
   420  0047BF  31                 	db	49
   421  0047C0  31                 	db	49
   422  0047C1  30                 	db	48
   423  0047C2  38                 	db	56
   424  0047C3  34                 	db	52
   425  0047C4  36                 	db	54
   426  0047C5  30                 	db	48
   427  0047C6  30                 	db	48
   428  0047C7  00                 	db	0
   429  0047C8  00                 	db	0
   430  0047C9  0001               	dw	1
   431  0047CB  0000               	dw	0
   432  0047CD  01                 	db	1
   433  0047CE  80                 	db	128
   434  0047CF  12                 	db	18
   435  0047D0  82                 	db	130
   436  0047D1  00                 	db	0
   437  0047D2  00                 	db	0
   438  0047D3  18                 	db	24
   439                           
   440                           ;initializer for _H18
   441  0047D4  0000               	dw	0
   442  0047D6  00                 	db	0
   443  0047D7  00                 	db	0
   444  0047D8  00                 	db	0
   445  0047D9  00                 	db	0
   446  0047DA  00                 	db	0
   447  0047DB  00                 	db	0
   448  0047DC  00                 	db	0
   449  0047DD  00                 	db	0
   450  0047DE  0001               	dw	1
   451  0047E0  0000               	dw	0
   452  0047E2  01                 	db	1
   453  0047E3  80                 	db	128
   454  0047E4  03                 	db	3
   455  0047E5  81                 	db	129
   456  0047E6  00                 	db	0
   457  0047E7  00                 	db	0
   458  0047E8  12                 	db	18
   459                           
   460                           ;initializer for _H17
   461  0047E9  0000               	dw	0
   462  0047EB  00                 	db	0
   463  0047EC  01                 	db	1
   464  0047ED  00                 	db	0
   465  0047EE  01                 	db	1
   466  0047EF  21                 	db	33
   467  0047F0  02                 	db	2
   468  0047F1  01                 	db	1
   469  0047F2  0001               	dw	1
   470  0047F4  0000               	dw	0
   471  0047F6  01                 	db	1
   472  0047F7  80                 	db	128
   473  0047F8  0E                 	db	14
   474  0047F9  81                 	db	129
   475  0047FA  00                 	db	0
   476  0047FB  00                 	db	0
   477  0047FC  11                 	db	17
   478                           
   479                           ;initializer for _H14
   480  0047FD  0000               	dw	0
   481  0047FF  00                 	db	0
   482  004800  41                 	db	65
   483  004801  11                 	db	17
   484  004802  01                 	db	1
   485  004803  0001               	dw	1
   486  004805  0000               	dw	0
   487  004807  01                 	db	1
   488  004808  80                 	db	128
   489  004809  04                 	db	4
   490  00480A  81                 	db	129
   491  00480B  00                 	db	0
   492  00480C  00                 	db	0
   493  00480D  0E                 	db	14
   494                           
   495                           ;initializer for _H13
   496  00480E  0000               	dw	0
   497  004810  00                 	db	0
   498  004811  01                 	db	1
   499  004812  21                 	db	33
   500  004813  0001               	dw	1
   501  004815  0000               	dw	0
   502  004817  01                 	db	1
   503  004818  80                 	db	128
   504  004819  0C                 	db	12
   505  00481A  86                 	db	134
   506  00481B  00                 	db	0
   507  00481C  00                 	db	0
   508  00481D  0D                 	db	13
   509                           
   510                           	psect	idataBANK3
   511  004CEC                     __pidataBANK3:
   512                           	opt callstack 0
   513                           
   514                           ;initializer for _H53
   515  004CEC  0000               	dw	0
   516  004CEE  00                 	db	0
   517  004CEF  00                 	db	0
   518  004CF0  00                 	db	0
   519  004CF1  00                 	db	0
   520  004CF2  00                 	db	0
   521  004CF3  00                 	db	0
   522  004CF4  00                 	db	0
   523  004CF5  00                 	db	0
   524  004CF6  00                 	db	0
   525  004CF7  00                 	db	0
   526  004CF8  00                 	db	0
   527  004CF9  00                 	db	0
   528  004CFA  00                 	db	0
   529  004CFB  00                 	db	0
   530  004CFC  00                 	db	0
   531  004CFD  00                 	db	0
   532  004CFE  00                 	db	0
   533  004CFF  00                 	db	0
   534  004D00  00                 	db	0
   535  004D01  00                 	db	0
   536  004D02  00                 	db	0
   537  004D03  00                 	db	0
   538  004D04  00                 	db	0
   539  004D05  00                 	db	0
   540  004D06  00                 	db	0
   541  004D07  00                 	db	0
   542  004D08  00                 	db	0
   543  004D09  00                 	db	0
   544  004D0A  00                 	db	0
   545  004D0B  00                 	db	0
   546  004D0C  00                 	db	0
   547  004D0D  00                 	db	0
   548  004D0E  00                 	db	0
   549  004D0F  00                 	db	0
   550  004D10  00                 	db	0
   551  004D11  00                 	db	0
   552  004D12  00                 	db	0
   553  004D13  00                 	db	0
   554  004D14  00                 	db	0
   555  004D15  00                 	db	0
   556  004D16  00                 	db	0
   557  004D17  00                 	db	0
   558  004D18  00                 	db	0
   559  004D19  0001               	dw	1
   560  004D1B  0000               	dw	0
   561  004D1D  01                 	db	1
   562  004D1E  80                 	db	128
   563  004D1F  0B                 	db	11
   564  004D20  81                 	db	129
   565  004D21  00                 	db	0
   566  004D22  00                 	db	0
   567  004D23  35                 	db	53
   568  004D24  0000               	dw	0
   569  004D26  00                 	db	0
   570  004D27  16                 	db	22
   571  004D28  20                 	db	32
   572  004D29  4E                 	db	78
   573  004D2A  6F                 	db	111
   574  004D2B  77                 	db	119
   575  004D2C  20                 	db	32
   576  004D2D  57                 	db	87
   577  004D2E  65                 	db	101
   578  004D2F  20                 	db	32
   579  004D30  41                 	db	65
   580  004D31  72                 	db	114
   581  004D32  65                 	db	101
   582  004D33  20                 	db	32
   583  004D34  54                 	db	84
   584  004D35  61                 	db	97
   585  004D36  6C                 	db	108
   586  004D37  6B                 	db	107
   587  004D38  69                 	db	105
   588  004D39  6E                 	db	110
   589  004D3A  67                 	db	103
   590  004D3B  2E                 	db	46
   591  004D3C  2E                 	db	46
   592  004D3D  2E                 	db	46
   593  004D3E  00                 	db	0
   594  004D3F  00                 	db	0
   595  004D40  00                 	db	0
   596  004D41  00                 	db	0
   597  004D42  00                 	db	0
   598  004D43  00                 	db	0
   599  004D44  00                 	db	0
   600  004D45  00                 	db	0
   601  004D46  00                 	db	0
   602  004D47  00                 	db	0
   603  004D48  00                 	db	0
   604  004D49  00                 	db	0
   605  004D4A  00                 	db	0
   606  004D4B  00                 	db	0
   607  004D4C  00                 	db	0
   608  004D4D  00                 	db	0
   609  004D4E  00                 	db	0
   610  004D4F  00                 	db	0
   611  004D50  00                 	db	0
   612  004D51  0001               	dw	1
   613  004D53  0000               	dw	0
   614  004D55  01                 	db	1
   615  004D56  80                 	db	128
   616  004D57  03                 	db	3
   617  004D58  8A                 	db	138
   618  004D59  00                 	db	0
   619  004D5A  00                 	db	0
   620  004D5B  35                 	db	53
   621  0000                     _IVTADL	set	14493
   622  0000                     _IVTADH	set	14494
   623  0000                     _IVTADU	set	14495
   624  0000                     _PIE8bits	set	14744
   625  0000                     _PIR8bits	set	14760
   626  0000                     _SCANPR	set	14839
   627  0000                     _DMA2PR	set	14836
   628  0000                     _DMA1PR	set	14835
   629  0000                     _MAINPR	set	14834
   630  0000                     _ISRPR	set	14833
   631  0000                     _PIE2bits	set	14738
   632  0000                     _PIR2bits	set	14754
   633  0000                     _PIE9bits	set	14745
   634  0000                     _PIR9bits	set	14761
   635  0000                     _PIE6bits	set	14742
   636  0000                     _PIE3bits	set	14739
   637  0000                     _PMD7	set	14791
   638  0000                     _PMD6	set	14790
   639  0000                     _PMD5	set	14789
   640  0000                     _PMD4	set	14788
   641  0000                     _PMD3	set	14787
   642  0000                     _PMD2	set	14786
   643  0000                     _PMD1	set	14785
   644  0000                     _PMD0	set	14784
   645  0000                     _OSCTUNE	set	14814
   646  0000                     _OSCFRQ	set	14815
   647  0000                     _OSCEN	set	14813
   648  0000                     _OSCCON3	set	14811
   649  0000                     _OSCCON1	set	14809
   650  0000                     _IPR8bits	set	14728
   651  0000                     _IPR9bits	set	14729
   652  0000                     _IPR7bits	set	14727
   653  0000                     _IPR5bits	set	14725
   654  0000                     _IPR1bits	set	14721
   655  0000                     _IPR3bits	set	14723
   656  0000                     _IPR6bits	set	14726
   657  0000                     _IPR2bits	set	14722
   658  0000                     _PIE7bits	set	14743
   659  0000                     _PIE5bits	set	14741
   660  0000                     _PIE1bits	set	14737
   661  0000                     _PIR7bits	set	14759
   662  0000                     _PIR5bits	set	14757
   663  0000                     _PIR1bits	set	14753
   664  0000                     _PLLR	set	118496
   665  0000                     _SPI1SDIPPS	set	15071
   666  0000                     _RC6PPS	set	14870
   667  0000                     _RC5PPS	set	14869
   668  0000                     _RA6PPS	set	14854
   669  0000                     _RA5PPS	set	14853
   670  0000                     _RA4PPS	set	14852
   671  0000                     _SPI1SCKPPS	set	15070
   672  0000                     _U1RXPPS	set	15077
   673  0000                     _INT1PPS	set	15041
   674  0000                     _INT2PPS	set	15042
   675  0000                     _INT0PPS	set	15040
   676  0000                     _RC3PPS	set	14867
   677  0000                     _RB6PPS	set	14862
   678  0000                     _U2RXPPS	set	15080
   679  0000                     _SLRCONF	set	14995
   680  0000                     _SLRCONE	set	14979
   681  0000                     _SLRCOND	set	14963
   682  0000                     _SLRCONC	set	14947
   683  0000                     _SLRCONB	set	14931
   684  0000                     _SLRCONA	set	14915
   685  0000                     _ODCOND	set	14962
   686  0000                     _ODCONC	set	14946
   687  0000                     _ODCONB	set	14930
   688  0000                     _ODCONA	set	14914
   689  0000                     _ODCONF	set	14994
   690  0000                     _ODCONE	set	14978
   691  0000                     _WPUC	set	14945
   692  0000                     _WPUA	set	14913
   693  0000                     _WPUB	set	14929
   694  0000                     _WPUE	set	14977
   695  0000                     _WPUF	set	14993
   696  0000                     _WPUD	set	14961
   697  0000                     _ANSELA	set	14912
   698  0000                     _ANSELF	set	14992
   699  0000                     _ANSELE	set	14976
   700  0000                     _ANSELB	set	14928
   701  0000                     _ANSELC	set	14944
   702  0000                     _ANSELD	set	14960
   703  0000                     _DMA1SSA	set	15353
   704  0000                     _DMA1DSZ	set	15342
   705  0000                     _DMA1SSZ	set	15351
   706  0000                     _DMA1DSA	set	15344
   707  0000                     _DMA1CON0bits	set	15356
   708  0000                     _DMA1CON1bits	set	15357
   709  0000                     _DMA1CON0	set	15356
   710  0000                     _DMA1AIRQ	set	15358
   711  0000                     _DMA1SIRQ	set	15359
   712  0000                     _DMA1CON1	set	15357
   713  0000                     _CLC1CON	set	15476
   714  0000                     _CLC1GLS3	set	15485
   715  0000                     _CLC1GLS2	set	15484
   716  0000                     _CLC1GLS1	set	15483
   717  0000                     _CLC1GLS0	set	15482
   718  0000                     _CLC1SEL3	set	15481
   719  0000                     _CLC1SEL2	set	15480
   720  0000                     _CLC1SEL1	set	15479
   721  0000                     _CLC1SEL0	set	15478
   722  0000                     _CLC1POL	set	15477
   723  0000                     _CLKRCON	set	15589
   724  0000                     _CLKRCLK	set	15590
   725  0000                     _MD1CARL	set	15613
   726  0000                     _MD1CARH	set	15614
   727  0000                     _MD1SRC	set	15612
   728  0000                     _MD1CON1bits	set	15611
   729  0000                     _MD1CON0bits	set	15610
   730  0000                     _SPI1INTFbits	set	15642
   731  0000                     _SPI1RXB	set	15632
   732  0000                     _SPI1TXB	set	15633
   733  0000                     _SPI1TCNTL	set	15634
   734  0000                     _SPI1CON0	set	15636
   735  0000                     _SPI1CLK	set	15644
   736  0000                     _SPI1BAUD	set	15641
   737  0000                     _SPI1CON2	set	15638
   738  0000                     _SPI1CON1	set	15637
   739  0000                     _U2RXB	set	15824
   740  0000                     _U2TXB	set	15826
   741  0000                     _U2ERRIE	set	15842
   742  0000                     _U2ERRIR	set	15841
   743  0000                     _U2UIR	set	15840
   744  0000                     _U2FIFO	set	15839
   745  0000                     _U2BRGH	set	15838
   746  0000                     _U2BRGL	set	15837
   747  0000                     _U2CON2	set	15836
   748  0000                     _U2CON1	set	15835
   749  0000                     _U2CON0	set	15834
   750  0000                     _U2P3L	set	15832
   751  0000                     _U2P2L	set	15830
   752  0000                     _U2P1L	set	15828
   753  0000                     _U1RXB	set	15848
   754  0000                     _U1TXB	set	15850
   755  0000                     _U1ERRIE	set	15866
   756  0000                     _U1ERRIR	set	15865
   757  0000                     _U1UIR	set	15864
   758  0000                     _U1FIFO	set	15863
   759  0000                     _U1BRGH	set	15862
   760  0000                     _U1BRGL	set	15861
   761  0000                     _U1CON2	set	15860
   762  0000                     _U1CON1	set	15859
   763  0000                     _U1CON0	set	15858
   764  0000                     _U1P3H	set	15857
   765  0000                     _U1P3L	set	15856
   766  0000                     _U1P2H	set	15855
   767  0000                     _U1P2L	set	15854
   768  0000                     _U1P1H	set	15853
   769  0000                     _U1P1L	set	15852
   770  0000                     _ADCON0	set	16120
   771  0000                     _ADCLK	set	16127
   772  0000                     _ADACT	set	16126
   773  0000                     _ADREF	set	16125
   774  0000                     _ADSTAT	set	16124
   775  0000                     _ADCON3	set	16123
   776  0000                     _ADCON2	set	16122
   777  0000                     _ADCON1	set	16121
   778  0000                     _ADPREH	set	16119
   779  0000                     _ADPREL	set	16118
   780  0000                     _ADCAP	set	16117
   781  0000                     _ADACQH	set	16116
   782  0000                     _ADACQL	set	16115
   783  0000                     _ADPCH	set	16113
   784  0000                     _ADRPT	set	16108
   785  0000                     _ADACCU	set	16106
   786  0000                     _ADSTPTH	set	16101
   787  0000                     _ADSTPTL	set	16100
   788  0000                     _ADUTHH	set	16097
   789  0000                     _ADUTHL	set	16096
   790  0000                     _ADLTHH	set	16095
   791  0000                     _ADLTHL	set	16094
   792  0000                     _NCO1CONbits	set	16190
   793  0000                     _NCO1INCL	set	16187
   794  0000                     _NCO1INCH	set	16188
   795  0000                     _NCO1INCU	set	16189
   796  0000                     _NCO1ACCL	set	16184
   797  0000                     _NCO1ACCH	set	16185
   798  0000                     _NCO1ACCU	set	16186
   799  0000                     _NCO1CLK	set	16191
   800  0000                     _NCO1CON	set	16190
   801  0000                     _LATCbits	set	16316
   802  0000                     _PORTDbits	set	16333
   803  0000                     _LATDbits	set	16317
   804  0000                     _LATEbits	set	16318
   805  0000                     _T5CONbits	set	16282
   806  0000                     _T5CON	set	16282
   807  0000                     _TMR5L	set	16280
   808  0000                     _TMR5H	set	16281
   809  0000                     _T5CLK	set	16285
   810  0000                     _T5GATE	set	16284
   811  0000                     _T5GCON	set	16283
   812  0000                     _T6CON	set	16276
   813  0000                     _T6TMR	set	16274
   814  0000                     _T6PR	set	16275
   815  0000                     _T6RST	set	16279
   816  0000                     _T6HLT	set	16277
   817  0000                     _T6CLKCON	set	16278
   818  0000                     _TRISD	set	16325
   819  0000                     _TRISC	set	16324
   820  0000                     _TRISB	set	16323
   821  0000                     _TRISA	set	16322
   822  0000                     _TRISF	set	16327
   823  0000                     _TRISE	set	16326
   824  0000                     _LATC	set	16316
   825  0000                     _LATB	set	16315
   826  0000                     _LATF	set	16319
   827  0000                     _LATA	set	16314
   828  0000                     _LATD	set	16317
   829  0000                     _LATE	set	16318
   830  0000                     _IVTLOCKbits	set	16340
   831  0000                     _IVTLOCK	set	16340
   832  0000                     _INTCON0bits	set	16338
   833  0000                     _GIE	set	130711
   834                           
   835                           	psect	smallconst
   836  002000                     __psmallconst:
   837                           	opt callstack 0
   838  002000  00                 	db	0
   839  002001                     STR_7:
   840  002001  20                 	db	32
   841  002002  45                 	db	69	;'E'
   842  002003  52                 	db	82	;'R'
   843  002004  52                 	db	82	;'R'
   844  002005  20                 	db	32
   845  002006  52                 	db	82	;'R'
   846  002007  25                 	db	37
   847  002008  64                 	db	100	;'d'
   848  002009  20                 	db	32
   849  00200A  54                 	db	84	;'T'
   850  00200B  25                 	db	37
   851  00200C  64                 	db	100	;'d'
   852  00200D  20                 	db	32
   853  00200E  45                 	db	69	;'E'
   854  00200F  25                 	db	37
   855  002010  64                 	db	100	;'d'
   856  002011  20                 	db	32
   857  002012  41                 	db	65	;'A'
   858  002013  25                 	db	37
   859  002014  64                 	db	100	;'d'
   860  002015  20                 	db	32
   861  002016  23                 	db	35
   862  002017  00                 	db	0
   863  002018                     STR_11:
   864  002018  20                 	db	32
   865  002019  52                 	db	82	;'R'
   866  00201A  25                 	db	37
   867  00201B  64                 	db	100	;'d'
   868  00201C  20                 	db	32
   869  00201D  54                 	db	84	;'T'
   870  00201E  25                 	db	37
   871  00201F  64                 	db	100	;'d'
   872  002020  20                 	db	32
   873  002021  46                 	db	70	;'F'
   874  002022  52                 	db	82	;'R'
   875  002023  25                 	db	37
   876  002024  64                 	db	100	;'d'
   877  002025  20                 	db	32
   878  002026  46                 	db	70	;'F'
   879  002027  53                 	db	83	;'S'
   880  002028  25                 	db	37
   881  002029  64                 	db	100	;'d'
   882  00202A  20                 	db	32
   883  00202B  23                 	db	35
   884  00202C  00                 	db	0
   885  00202D                     STR_8:
   886  00202D  20                 	db	32
   887  00202E  48                 	db	72	;'H'
   888  00202F  4F                 	db	79	;'O'
   889  002030  53                 	db	83	;'S'
   890  002031  54                 	db	84	;'T'
   891  002032  20                 	db	32
   892  002033  4D                 	db	77	;'M'
   893  002034  4F                 	db	79	;'O'
   894  002035  44                 	db	68	;'D'
   895  002036  45                 	db	69	;'E'
   896  002037  20                 	db	32
   897  002038  25                 	db	37
   898  002039  6C                 	db	108	;'l'
   899  00203A  64                 	db	100	;'d'
   900  00203B  20                 	db	32
   901  00203C  20                 	db	32
   902  00203D  20                 	db	32
   903  00203E  23                 	db	35
   904  00203F  00                 	db	0
   905  002040                     STR_10:
   906  002040  20                 	db	32
   907  002041  4C                 	db	76	;'L'
   908  002042  4F                 	db	79	;'O'
   909  002043  47                 	db	71	;'G'
   910  002044  20                 	db	32
   911  002045  4D                 	db	77	;'M'
   912  002046  4F                 	db	79	;'O'
   913  002047  44                 	db	68	;'D'
   914  002048  45                 	db	69	;'E'
   915  002049  20                 	db	32
   916  00204A  20                 	db	32
   917  00204B  20                 	db	32
   918  00204C  20                 	db	32
   919  00204D  20                 	db	32
   920  00204E  20                 	db	32
   921  00204F  23                 	db	35
   922  002050  00                 	db	0
   923  002051                     STR_9:
   924  002051  20                 	db	32
   925  002052  45                 	db	69	;'E'
   926  002053  51                 	db	81	;'Q'
   927  002054  55                 	db	85	;'U'
   928  002055  49                 	db	73	;'I'
   929  002056  50                 	db	80	;'P'
   930  002057  20                 	db	32
   931  002058  4D                 	db	77	;'M'
   932  002059  4F                 	db	79	;'O'
   933  00205A  44                 	db	68	;'D'
   934  00205B  45                 	db	69	;'E'
   935  00205C  20                 	db	32
   936  00205D  20                 	db	32
   937  00205E  20                 	db	32
   938  00205F  20                 	db	32
   939  002060  23                 	db	35
   940  002061  00                 	db	0
   941  002062                     STR_1:
   942  002062  20                 	db	32
   943  002063  52                 	db	82	;'R'
   944  002064  56                 	db	86	;'V'
   945  002065  49                 	db	73	;'I'
   946  002066  20                 	db	32
   947  002067  48                 	db	72	;'H'
   948  002068  4F                 	db	79	;'O'
   949  002069  53                 	db	83	;'S'
   950  00206A  54                 	db	84	;'T'
   951  00206B  20                 	db	32
   952  00206C  54                 	db	84	;'T'
   953  00206D  45                 	db	69	;'E'
   954  00206E  53                 	db	83	;'S'
   955  00206F  54                 	db	84	;'T'
   956  002070  45                 	db	69	;'E'
   957  002071  52                 	db	82	;'R'
   958  002072  00                 	db	0
   959  002073                     STR_4:
   960  002073  20                 	db	32
   961  002074  46                 	db	70	;'F'
   962  002075  47                 	db	71	;'G'
   963  002076  42                 	db	66	;'B'
   964  002077  40                 	db	64	;'@'
   965  002078  4D                 	db	77	;'M'
   966  002079  43                 	db	67	;'C'
   967  00207A  48                 	db	72	;'H'
   968  00207B  50                 	db	80	;'P'
   969  00207C  20                 	db	32
   970  00207D  46                 	db	70	;'F'
   971  00207E  41                 	db	65	;'A'
   972  00207F  42                 	db	66	;'B'
   973  002080  34                 	db	52	;'4'
   974  002081  00                 	db	0
   975  002082                     STR_5:
   976  002082  20                 	db	32
   977  002083  53                 	db	83	;'S'
   978  002084  25                 	db	37
   979  002085  64                 	db	100	;'d'
   980  002086  46                 	db	70	;'F'
   981  002087  25                 	db	37
   982  002088  64                 	db	100	;'d'
   983  002089  20                 	db	32
   984  00208A  23                 	db	35
   985  00208B  20                 	db	32
   986  00208C  20                 	db	32
   987  00208D  20                 	db	32
   988  00208E  20                 	db	32
   989  00208F  00                 	db	0
   990  002090                     STR_2:
   991  002090  20                 	db	32
   992  002091  56                 	db	86	;'V'
   993  002092  65                 	db	101	;'e'
   994  002093  72                 	db	114	;'r'
   995  002094  73                 	db	115	;'s'
   996  002095  69                 	db	105	;'i'
   997  002096  6F                 	db	111	;'o'
   998  002097  6E                 	db	110	;'n'
   999  002098  20                 	db	32
  1000  002099  25                 	db	37
  1001  00209A  73                 	db	115	;'s'
  1002  00209B  00                 	db	0
  1003  00209C                     STR_6:
  1004  00209C  20                 	db	32
  1005  00209D  4F                 	db	79	;'O'
  1006  00209E  4B                 	db	75	;'K'
  1007  00209F  20                 	db	32
  1008  0020A0  23                 	db	35
  1009  0020A1  00                 	db	0
  1010  0020A2                     STR_3:
  1011  0020A2  30                 	db	48	;'0'
  1012  0020A3  2E                 	db	46
  1013  0020A4  35                 	db	53	;'5'
  1014  0020A5  41                 	db	65	;'A'
  1015  0020A6  00                 	db	0
  1016  0020A7                     STR_15:
  1017  0020A7  6C                 	db	108	;'l'
  1018  0020A8  64                 	db	100	;'d'
  1019  0020A9  00                 	db	0
  1020  0020AA                     STR_19:
  1021  0020AA  6C                 	db	108	;'l'
  1022  0020AB  69                 	db	105	;'i'
  1023  0020AC  00                 	db	0
  1024  0020AD                     STR_13:
  1025  0020AD  25                 	db	37
  1026  0020AE  63                 	db	99	;'c'
  1027  0020AF  00                 	db	0
  1028  0000                     
  1029                           ; #config settings
  1030  0020B0  00                 	db	0	; dummy byte at the end
  1031  0000                     
  1032                           	psect	cinit
  1033  0045C2                     __pcinit:
  1034                           	opt callstack 0
  1035  0045C2                     start_initialization:
  1036                           	opt callstack 0
  1037  0045C2                     __initialization:
  1038                           	opt callstack 0
  1039                           
  1040                           ; Initialize objects allocated to BANK3 (112 bytes)
  1041                           ; load TBLPTR registers with __pidataBANK3
  1042  0045C2  0EEC               	movlw	low __pidataBANK3
  1043  0045C4  6EF6               	movwf	tblptrl,c
  1044  0045C6  0E4C               	movlw	high __pidataBANK3
  1045  0045C8  6EF7               	movwf	tblptrh,c
  1046  0045CA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1047  0045CC  6EF8               	movwf	tblptru,c
  1048  0045CE  EE00  F386         	lfsr	0,__pdataBANK3
  1049  0045D2  EE20 F070          	lfsr	2,112
  1050  0045D6                     copy_data0:
  1051  0045D6  0009               	tblrd		*+
  1052  0045D8  006F FFD7 FFEE     	movff	tablat,postinc0
  1053  0045DE  50DD               	movf	postdec2,w,c
  1054  0045E0  50D9               	movf	fsr2l,w,c
  1055  0045E2  E1F9               	bnz	copy_data0
  1056                           
  1057                           ; Initialize objects allocated to BANK1 (196 bytes)
  1058                           ; load TBLPTR registers with __pidataBANK1
  1059  0045E4  0E5A               	movlw	low __pidataBANK1
  1060  0045E6  6EF6               	movwf	tblptrl,c
  1061  0045E8  0E47               	movlw	high __pidataBANK1
  1062  0045EA  6EF7               	movwf	tblptrh,c
  1063  0045EC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1064  0045EE  6EF8               	movwf	tblptru,c
  1065  0045F0  EE00  F100         	lfsr	0,__pdataBANK1
  1066  0045F4  EE20 F0C4          	lfsr	2,196
  1067  0045F8                     copy_data1:
  1068  0045F8  0009               	tblrd		*+
  1069  0045FA  006F FFD7 FFEE     	movff	tablat,postinc0
  1070  004600  50DD               	movf	postdec2,w,c
  1071  004602  50D9               	movf	fsr2l,w,c
  1072  004604  E1F9               	bnz	copy_data1
  1073                           
  1074                           ; Initialize objects allocated to BANK0 (22 bytes)
  1075                           ; load TBLPTR registers with __pidataBANK0
  1076  004606  0EC4               	movlw	low __pidataBANK0
  1077  004608  6EF6               	movwf	tblptrl,c
  1078  00460A  0E58               	movlw	high __pidataBANK0
  1079  00460C  6EF7               	movwf	tblptrh,c
  1080  00460E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1081  004610  6EF8               	movwf	tblptru,c
  1082  004612  EE00  F0DF         	lfsr	0,__pdataBANK0
  1083  004616  EE20 F016          	lfsr	2,22
  1084  00461A                     copy_data2:
  1085  00461A  0009               	tblrd		*+
  1086  00461C  006F FFD7 FFEE     	movff	tablat,postinc0
  1087  004622  50DD               	movf	postdec2,w,c
  1088  004624  50D9               	movf	fsr2l,w,c
  1089  004626  E1F9               	bnz	copy_data2
  1090                           
  1091                           ; Initialize objects allocated to COMRAM (1 bytes)
  1092                           ; load TBLPTR registers with __pidataCOMRAM
  1093  004628  0EBE               	movlw	low __pidataCOMRAM
  1094  00462A  6EF6               	movwf	tblptrl,c
  1095  00462C  0E59               	movlw	high __pidataCOMRAM
  1096  00462E  6EF7               	movwf	tblptrh,c
  1097  004630  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1098  004632  6EF8               	movwf	tblptru,c
  1099  004634  0009               	tblrd		*+	;fetch initializer
  1100  004636  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM
  1101                           
  1102                           ; Clear objects allocated to BANK3 (134 bytes)
  1103  00463C  EE00  F300         	lfsr	0,__pbssBANK3
  1104  004640  0E86               	movlw	134
  1105  004642                     clear_0:
  1106  004642  6AEE               	clrf	postinc0,c
  1107  004644  06E8               	decf	wreg,f,c
  1108  004646  E1FD               	bnz	clear_0
  1109                           
  1110                           ; Clear objects allocated to BANK2 (256 bytes)
  1111  004648  EE00  F200         	lfsr	0,__pbssBANK2
  1112  00464C  EE20 F100          	lfsr	2,256
  1113  004650                     clear_1:
  1114  004650  6AEE               	clrf	postinc0,c
  1115  004652  50DD               	movf	postdec2,w,c
  1116  004654  50D9               	movf	fsr2l,w,c
  1117  004656  E1FC               	bnz	clear_1
  1118  004658  50DA               	movf	fsr2h,w,c
  1119  00465A  E1FA               	bnz	clear_1
  1120                           
  1121                           ; Clear objects allocated to BANK1 (32 bytes)
  1122  00465C  EE00  F1C4         	lfsr	0,__pbssBANK1
  1123  004660  0E20               	movlw	32
  1124  004662                     clear_2:
  1125  004662  6AEE               	clrf	postinc0,c
  1126  004664  06E8               	decf	wreg,f,c
  1127  004666  E1FD               	bnz	clear_2
  1128                           
  1129                           ; Clear objects allocated to BANK0 (127 bytes)
  1130  004668  EE00  F060         	lfsr	0,__pbssBANK0
  1131  00466C  0E7F               	movlw	127
  1132  00466E                     clear_3:
  1133  00466E  6AEE               	clrf	postinc0,c
  1134  004670  06E8               	decf	wreg,f,c
  1135  004672  E1FD               	bnz	clear_3
  1136                           
  1137                           ; Clear objects allocated to COMRAM (61 bytes)
  1138  004674  EE00  F001         	lfsr	0,__pbssCOMRAM
  1139  004678  0E3D               	movlw	61
  1140  00467A                     clear_4:
  1141  00467A  6AEE               	clrf	postinc0,c
  1142  00467C  06E8               	decf	wreg,f,c
  1143  00467E  E1FD               	bnz	clear_4
  1144                           
  1145                           ;
  1146                           ; Setup IVTBASE
  1147                           ;
  1148  004680  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1149  004682  6ED5               	movwf	213,c
  1150  004684  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1151  004686  6ED6               	movwf	214,c
  1152  004688  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1153  00468A  6ED7               	movwf	215,c
  1154  00468C                     end_of_initialization:
  1155                           	opt callstack 0
  1156  00468C                     __end_of__initialization:
  1157                           	opt callstack 0
  1158  00468C  0100               	movlb	0
  1159  00468E  EFF0  F014         	goto	_main	;jump to C main() function
  1160                           
  1161                           	psect	bssCOMRAM
  1162  000001                     __pbssCOMRAM:
  1163                           	opt callstack 0
  1164  000001                     secs_II_message@block:
  1165                           	opt callstack 0
  1166  000001                     	ds	3
  1167  000004                     _TMR5_InterruptHandler:
  1168                           	opt callstack 0
  1169  000004                     	ds	3
  1170  000007                     _TMR6_InterruptHandler:
  1171                           	opt callstack 0
  1172  000007                     	ds	3
  1173  00000A                     _ADCC_ADI_InterruptHandler:
  1174                           	opt callstack 0
  1175  00000A                     	ds	3
  1176  00000D                     _UART1_TxInterruptHandler:
  1177                           	opt callstack 0
  1178  00000D                     	ds	3
  1179  000010                     _UART1_RxInterruptHandler:
  1180                           	opt callstack 0
  1181  000010                     	ds	3
  1182  000013                     _UART2_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  000013                     	ds	3
  1185  000016                     _UART2_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  000016                     	ds	3
  1188  000019                     _INT2_InterruptHandler:
  1189                           	opt callstack 0
  1190  000019                     	ds	3
  1191  00001C                     _INT1_InterruptHandler:
  1192                           	opt callstack 0
  1193  00001C                     	ds	3
  1194  00001F                     _INT0_InterruptHandler:
  1195                           	opt callstack 0
  1196  00001F                     	ds	3
  1197  000022                     _nout:
  1198                           	opt callstack 0
  1199  000022                     	ds	2
  1200  000024                     _width:
  1201                           	opt callstack 0
  1202  000024                     	ds	2
  1203  000026                     _prec:
  1204                           	opt callstack 0
  1205  000026                     	ds	2
  1206  000028                     _flags:
  1207                           	opt callstack 0
  1208  000028                     	ds	2
  1209  00002A                     run_checksum@sum:
  1210                           	opt callstack 0
  1211  00002A                     	ds	2
  1212  00002C                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  00002C                     	ds	2
  1215  00002E                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  00002E                     	ds	2
  1218  000030                     t_protocol@retry:
  1219                           	opt callstack 0
  1220  000030                     	ds	1
  1221  000031                     r_protocol@rxData_l:
  1222                           	opt callstack 0
  1223  000031                     	ds	1
  1224  000032                     _uart2RxCount:
  1225                           	opt callstack 0
  1226  000032                     	ds	1
  1227  000033                     _uart2RxTail:
  1228                           	opt callstack 0
  1229  000033                     	ds	1
  1230  000034                     _uart2RxHead:
  1231                           	opt callstack 0
  1232  000034                     	ds	1
  1233  000035                     _uart2TxBufferRemaining:
  1234                           	opt callstack 0
  1235  000035                     	ds	1
  1236  000036                     _uart2TxTail:
  1237                           	opt callstack 0
  1238  000036                     	ds	1
  1239  000037                     _uart2TxHead:
  1240                           	opt callstack 0
  1241  000037                     	ds	1
  1242  000038                     _uart1RxCount:
  1243                           	opt callstack 0
  1244  000038                     	ds	1
  1245  000039                     _uart1RxTail:
  1246                           	opt callstack 0
  1247  000039                     	ds	1
  1248  00003A                     _uart1RxHead:
  1249                           	opt callstack 0
  1250  00003A                     	ds	1
  1251  00003B                     _uart1TxBufferRemaining:
  1252                           	opt callstack 0
  1253  00003B                     	ds	1
  1254  00003C                     _uart1TxTail:
  1255                           	opt callstack 0
  1256  00003C                     	ds	1
  1257  00003D                     _uart1TxHead:
  1258                           	opt callstack 0
  1259  00003D                     	ds	1
  1260                           
  1261                           	psect	dataCOMRAM
  1262  00005E                     __pdataCOMRAM:
  1263                           	opt callstack 0
  1264  00005E                     r_protocol@retry:
  1265                           	opt callstack 0
  1266  00005E                     	ds	1
  1267                           
  1268                           	psect	bssBANK0
  1269  000060                     __pbssBANK0:
  1270                           	opt callstack 0
  1271  000060                     _r_block:
  1272                           	opt callstack 0
  1273  000060                     	ds	13
  1274  00006D                     _spi_link:
  1275                           	opt callstack 0
  1276  00006D                     	ds	12
  1277  000079                     _tickCount:
  1278                           	opt callstack 0
  1279  000079                     	ds	12
  1280  000085                     wdtdelay@dcount:
  1281                           	opt callstack 0
  1282  000085                     	ds	4
  1283  000089                     _V:
  1284                           	opt callstack 0
  1285  000089                     	ds	86
  1286                           
  1287                           	psect	dataBANK0
  1288  0000DF                     __pdataBANK0:
  1289                           	opt callstack 0
  1290  0000DF                     stoa@F1144:
  1291                           	opt callstack 0
  1292  0000DF                     	ds	7
  1293  0000E6                     _H12:
  1294                           	opt callstack 0
  1295  0000E6                     	ds	15
  1296                           
  1297                           	psect	bssBANK1
  1298  0001C4                     __pbssBANK1:
  1299                           	opt callstack 0
  1300  0001C4                     _dbuf:
  1301                           	opt callstack 0
  1302  0001C4                     	ds	32
  1303                           
  1304                           	psect	dataBANK1
  1305  000100                     __pdataBANK1:
  1306                           	opt callstack 0
  1307  000100                     _H10:
  1308                           	opt callstack 0
  1309  000100                     	ds	65
  1310  000141                     _H27:
  1311                           	opt callstack 0
  1312  000141                     	ds	30
  1313  00015F                     _H24:
  1314                           	opt callstack 0
  1315  00015F                     	ds	27
  1316  00017A                     _H18:
  1317                           	opt callstack 0
  1318  00017A                     	ds	21
  1319  00018F                     _H17:
  1320                           	opt callstack 0
  1321  00018F                     	ds	20
  1322  0001A3                     _H14:
  1323                           	opt callstack 0
  1324  0001A3                     	ds	17
  1325  0001B4                     _H13:
  1326                           	opt callstack 0
  1327  0001B4                     	ds	16
  1328                           
  1329                           	psect	bssBANK2
  1330  000200                     __pbssBANK2:
  1331                           	opt callstack 0
  1332  000200                     _uart2RxBuffer:
  1333                           	opt callstack 0
  1334  000200                     	ds	64
  1335  000240                     _uart2TxBuffer:
  1336                           	opt callstack 0
  1337  000240                     	ds	64
  1338  000280                     _uart1RxBuffer:
  1339                           	opt callstack 0
  1340  000280                     	ds	64
  1341  0002C0                     _uart1TxBuffer:
  1342                           	opt callstack 0
  1343  0002C0                     	ds	64
  1344                           
  1345                           	psect	bssBANK3
  1346  000300                     __pbssBANK3:
  1347                           	opt callstack 0
  1348  000300                     _ring_buf2:
  1349                           	opt callstack 0
  1350  000300                     	ds	67
  1351  000343                     _ring_buf1:
  1352                           	opt callstack 0
  1353  000343                     	ds	67
  1354                           
  1355                           	psect	dataBANK3
  1356  000386                     __pdataBANK3:
  1357                           	opt callstack 0
  1358  000386                     _H53:
  1359                           	opt callstack 0
  1360  000386                     	ds	112
  1361                           
  1362                           	psect	cstackBANK0
  1363  0000F5                     __pcstackBANK0:
  1364                           	opt callstack 0
  1365  0000F5                     ??_TMR5_ISR:
  1366                           
  1367                           ; 1 bytes @ 0x0
  1368  0000F5                     	ds	1
  1369                           
  1370                           	psect	cstackCOMRAM
  1371  00005F                     __pcstackCOMRAM:
  1372                           	opt callstack 0
  1373  00005F                     ??_TMR6_ISR:
  1374  00005F                     
  1375                           ; 1 bytes @ 0x0
  1376  00005F                     	ds	1
  1377                           
  1378 ;;
  1379 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1380 ;;
  1381 ;; *************** function _main *****************
  1382 ;; Defined at:
  1383 ;;		line 285 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  mode            1  [STACK] enum E16894
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1  [STACK] void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 3F/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels required when called:   14
  1403 ;; This function calls:
  1404 ;;		_SYSTEM_Initialize
  1405 ;;		_WaitMs
  1406 ;;		_eaDogM_WriteCommand
  1407 ;;		_eaDogM_WriteStringAtPos
  1408 ;;		_init_display
  1409 ;;		_r_protocol
  1410 ;;		_sprintf
  1411 ;;		_t_protocol
  1412 ;;		_wait_lcd_done
  1413 ;; This function is called by:
  1414 ;;		Startup code after reset
  1415 ;; This function uses a reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text0
  1419  0029E0                     __ptext0:
  1420                           	opt callstack 0
  1421  0029E0                     _main:
  1422                           	opt callstack 0
  1423                           
  1424                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1425  0029E0  52E6               	movf	postinc1,f,c
  1426                           
  1427                           ;main.c: 287:  UI_STATES mode;;main.c: 290:  SYSTEM_Initialize();
  1428                           
  1429                           ;incstack = 0
  1430  0029E2  ECB1  F028         	call	_SYSTEM_Initialize	;wreg free
  1431                           
  1432                           ; BSR set to: 60
  1433                           ;main.c: 293:  (INTCON0bits.GIEH = 1);
  1434  0029E6  8ED2               	bsf	16338,7,c	;volatile
  1435                           
  1436                           ; BSR set to: 60
  1437                           ;main.c: 296:  (INTCON0bits.GIEL = 1);
  1438  0029E8  8CD2               	bsf	16338,6,c	;volatile
  1439                           
  1440                           ; BSR set to: 60
  1441                           ;main.c: 298:  V.ui_state = UI_STATE_INIT;
  1442  0029EA  0100               	movlb	0	; () banked
  1443  0029EC  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1444  0029EE  D14D               	goto	l7028
  1445  0029F0                     l6914:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 303:    init_display();
  1449  0029F0  EC03  F022         	call	_init_display	;wreg free
  1450                           
  1451                           ; BSR set to: 61
  1452                           ;main.c: 304:    eaDogM_WriteCommand(0b00001100);
  1453  0029F4  0E0C               	movlw	12
  1454  0029F6  6EE6               	movwf	postinc1,c
  1455  0029F8  EC8D  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1456                           
  1457                           ; BSR set to: 0
  1458  0029FC  90BD               	bcf	16317,0,c	;volatile
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 306:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1462  0029FE  A4CD               	btfss	16333,2,c	;volatile
  1463  002A00  D003               	goto	u4010
  1464  002A02  6A49               	clrf	btemp+11,c
  1465  002A04  2A49               	incf	btemp+11,f,c
  1466  002A06  D001               	goto	u4018
  1467  002A08                     u4010:
  1468  002A08  6A49               	clrf	btemp+11,c
  1469  002A0A                     u4018:
  1470  002A0A  0E01               	movlw	1
  1471  002A0C  2649               	addwf	btemp+11,f,c
  1472                           
  1473                           ;stkvar	_mode @ sp[(-1)+0]
  1474  002A0E  0EFF               	movlw	-1
  1475  002A10  0060  F127  FFE3   	movff	btemp+11,plusw1
  1476                           
  1477                           ;main.c: 307:    if (!PORTDbits.RD3) {
  1478  002A16  B6CD               	btfsc	16333,3,c	;volatile
  1479  002A18  D004               	goto	l6926
  1480                           
  1481                           ;main.c: 308:     do { LATDbits.LATD0 = 1; } while(0);
  1482  002A1A  80BD               	bsf	16317,0,c	;volatile
  1483                           
  1484                           ;main.c: 309:     mode = UI_STATE_LOG;
  1485                           ;stkvar	_mode @ sp[(-1)+0]
  1486  002A1C  0EFF               	movlw	-1
  1487  002A1E  6AE3               	clrf	plusw1,c
  1488  002A20  84E3               	bsf	plusw1,2,c
  1489  002A22                     l6926:
  1490                           
  1491                           ;main.c: 311:    V.ui_state = mode;
  1492                           ;stkvar	_mode @ sp[(-1)+0]
  1493  002A22  0EFF               	movlw	-1
  1494  002A24  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1495                           
  1496                           ;main.c: 312:    V.s_state = SEQ_STATE_INIT;
  1497  002A2A  0100               	movlb	0	; () banked
  1498  002A2C  6B89               	clrf	_V& (0+255),b	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 341:    sprintf(V.buf, " RVI HOST TESTER");
  1502  002A2E  0E62               	movlw	STR_1& (0+255)
  1503  002A30  6EE6               	movwf	postinc1,c
  1504  002A32  0E89               	movlw	_V& (0+255)
  1505  002A34  0F04               	addlw	4
  1506  002A36  6EE6               	movwf	postinc1,c
  1507  002A38  0E02               	movlw	2
  1508  002A3A  6EE6               	movwf	postinc1,c
  1509  002A3C  EC49  F023         	call	_sprintf	;wreg free
  1510                           
  1511                           ;main.c: 342:    wait_lcd_done();
  1512  002A40  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 343:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1516  002A44  0E89               	movlw	_V& (0+255)
  1517  002A46  0F04               	addlw	4
  1518  002A48  6EE6               	movwf	postinc1,c
  1519  002A4A  0E00               	movlw	0
  1520  002A4C  6EE6               	movwf	postinc1,c
  1521  002A4E  0E00               	movlw	0
  1522  002A50  6EE6               	movwf	postinc1,c
  1523  002A52  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1524                           
  1525                           ; BSR set to: 59
  1526                           ;main.c: 344:    sprintf(V.buf, " Version %s", "0.5A");
  1527  002A56  0EA2               	movlw	STR_3& (0+255)
  1528  002A58  6E49               	movwf	btemp+11,c
  1529  002A5A  0060  F127  FFE6   	movff	btemp+11,postinc1
  1530  002A60  0E20               	movlw	high __smallconst
  1531  002A62  6EE6               	movwf	postinc1,c
  1532  002A64  0E90               	movlw	STR_2& (0+255)
  1533  002A66  6EE6               	movwf	postinc1,c
  1534  002A68  0E89               	movlw	_V& (0+255)
  1535  002A6A  0F04               	addlw	4
  1536  002A6C  6EE6               	movwf	postinc1,c
  1537  002A6E  0E04               	movlw	4
  1538  002A70  6EE6               	movwf	postinc1,c
  1539  002A72  EC49  F023         	call	_sprintf	;wreg free
  1540                           
  1541                           ;main.c: 345:    wait_lcd_done();
  1542  002A76  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 346:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1546  002A7A  0E89               	movlw	_V& (0+255)
  1547  002A7C  0F04               	addlw	4
  1548  002A7E  6EE6               	movwf	postinc1,c
  1549  002A80  0E00               	movlw	0
  1550  002A82  6EE6               	movwf	postinc1,c
  1551  002A84  0E01               	movlw	1
  1552  002A86  6EE6               	movwf	postinc1,c
  1553  002A88  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1554                           
  1555                           ; BSR set to: 59
  1556                           ;main.c: 347:    sprintf(V.buf, " FGB@MCHP FAB4");
  1557  002A8C  0E73               	movlw	STR_4& (0+255)
  1558  002A8E  6EE6               	movwf	postinc1,c
  1559  002A90  0E89               	movlw	_V& (0+255)
  1560  002A92  0F04               	addlw	4
  1561  002A94  6EE6               	movwf	postinc1,c
  1562  002A96  0E02               	movlw	2
  1563  002A98  6EE6               	movwf	postinc1,c
  1564  002A9A  EC49  F023         	call	_sprintf	;wreg free
  1565                           
  1566                           ;main.c: 348:    wait_lcd_done();
  1567  002A9E  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 349:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1571  002AA2  0E89               	movlw	_V& (0+255)
  1572  002AA4  0F04               	addlw	4
  1573  002AA6  6EE6               	movwf	postinc1,c
  1574  002AA8  0E00               	movlw	0
  1575  002AAA  6EE6               	movwf	postinc1,c
  1576  002AAC  0E02               	movlw	2
  1577  002AAE  6EE6               	movwf	postinc1,c
  1578  002AB0  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1579                           
  1580                           ; BSR set to: 59
  1581                           ;main.c: 351:    WaitMs(3000);
  1582  002AB4  0EB8               	movlw	184
  1583  002AB6  6EE6               	movwf	postinc1,c
  1584  002AB8  0E0B               	movlw	11
  1585  002ABA  6EE6               	movwf	postinc1,c
  1586  002ABC  ECC4  F029         	call	_WaitMs	;wreg free
  1587                           
  1588                           ;main.c: 352:    break;
  1589  002AC0  D0FA               	goto	l1246
  1590  002AC2                     l1219:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 356:     V.r_l_state = LINK_STATE_IDLE;
  1594  002AC2  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1595                           
  1596                           ;main.c: 357:     V.t_l_state = LINK_STATE_IDLE;
  1597  002AC4  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 358:     V.s_state = SEQ_STATE_RX;
  1601  002AC6  0E01               	movlw	1
  1602  002AC8  6F89               	movwf	_V& (0+255),b	;volatile
  1603  002ACA  D05E               	goto	l1237
  1604  002ACC                     l6954:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 369:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1608  002ACC  0E89               	movlw	_V& (0+255)
  1609  002ACE  0F02               	addlw	2
  1610  002AD0  6EE6               	movwf	postinc1,c
  1611  002AD2  EC07  F018         	call	_r_protocol	;wreg free
  1612  002AD6  0E04               	movlw	4
  1613  002AD8  183E               	xorwf	btemp,w,c
  1614  002ADA  A4D8               	btfss	status,2,c
  1615  002ADC  D023               	goto	l6966
  1616                           
  1617                           ;main.c: 370:      do { LATEbits.LATE2 = 0; } while(0);
  1618  002ADE  94BE               	bcf	16318,2,c	;volatile
  1619                           
  1620                           ;main.c: 371:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1621  002AE0  0100               	movlb	0	; () banked
  1622  002AE2  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  1623  002AE4  6EE6               	movwf	postinc1,c
  1624  002AE6  0E00               	movlw	0
  1625  002AE8  6EE6               	movwf	postinc1,c
  1626  002AEA  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  1627  002AEC  6EE6               	movwf	postinc1,c
  1628  002AEE  0E00               	movlw	0
  1629  002AF0  6EE6               	movwf	postinc1,c
  1630  002AF2  0E82               	movlw	STR_5& (0+255)
  1631  002AF4  6EE6               	movwf	postinc1,c
  1632  002AF6  0E89               	movlw	_V& (0+255)
  1633  002AF8  0F04               	addlw	4
  1634  002AFA  6EE6               	movwf	postinc1,c
  1635  002AFC  0E06               	movlw	6
  1636  002AFE  6EE6               	movwf	postinc1,c
  1637  002B00  EC49  F023         	call	_sprintf	;wreg free
  1638                           
  1639                           ;main.c: 372:      V.buf[11] = 0;
  1640  002B04  0100               	movlb	0	; () banked
  1641  002B06  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 373:      wait_lcd_done();
  1645  002B08  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 374:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1649  002B0C  0E89               	movlw	_V& (0+255)
  1650  002B0E  0F04               	addlw	4
  1651  002B10  6EE6               	movwf	postinc1,c
  1652  002B12  0E00               	movlw	0
  1653  002B14  6EE6               	movwf	postinc1,c
  1654  002B16  0E00               	movlw	0
  1655  002B18  6EE6               	movwf	postinc1,c
  1656  002B1A  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1657                           
  1658                           ; BSR set to: 59
  1659                           ;main.c: 378:      V.s_state = SEQ_STATE_TX;
  1660  002B1E  0E02               	movlw	2
  1661  002B20  0100               	movlb	0	; () banked
  1662  002B22  6F89               	movwf	_V& (0+255),b	;volatile
  1663  002B24                     l6966:
  1664                           
  1665                           ;main.c: 380:     if (V.r_l_state == LINK_STATE_ERROR)
  1666  002B24  0E06               	movlw	6
  1667  002B26  0100               	movlb	0	; () banked
  1668  002B28  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1669  002B2A  D010               	goto	L20
  1670  002B2C                     l6970:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 387:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1674  002B2C  0E89               	movlw	_V& (0+255)
  1675  002B2E  0F03               	addlw	3
  1676  002B30  6EE6               	movwf	postinc1,c
  1677  002B32  EC0F  F01C         	call	_t_protocol	;wreg free
  1678  002B36  0E04               	movlw	4
  1679  002B38  183E               	xorwf	btemp,w,c
  1680  002B3A  A4D8               	btfss	status,2,c
  1681  002B3C  D004               	goto	l6974
  1682                           
  1683                           ;main.c: 388:      do { LATEbits.LATE2 = 0; } while(0);
  1684  002B3E  94BE               	bcf	16318,2,c	;volatile
  1685                           
  1686                           ;main.c: 389:      V.s_state = SEQ_STATE_TRIGGER;
  1687  002B40  0E03               	movlw	3
  1688  002B42  0100               	movlb	0	; () banked
  1689  002B44  6F89               	movwf	_V& (0+255),b	;volatile
  1690  002B46                     l6974:
  1691                           
  1692                           ;main.c: 391:     if (V.t_l_state == LINK_STATE_ERROR)
  1693  002B46  0E06               	movlw	6
  1694  002B48  0100               	movlb	0	; () banked
  1695  002B4A  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1696  002B4C                     L20:
  1697  002B4C  A4D8               	btfss	status,2,c
  1698  002B4E  D05D               	goto	l6998
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 392:      V.s_state = SEQ_STATE_ERROR;
  1702  002B50  0E05               	movlw	5
  1703  002B52  6F89               	movwf	_V& (0+255),b	;volatile
  1704  002B54  D05A               	goto	l6998
  1705  002B56                     l6978:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 395:     V.s_state = SEQ_STATE_DONE;
  1709  002B56  0E04               	movlw	4
  1710  002B58  6F89               	movwf	_V& (0+255),b	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;main.c: 396:     sprintf(V.buf, " OK #");
  1714  002B5A  0E9C               	movlw	STR_6& (0+255)
  1715  002B5C  6EE6               	movwf	postinc1,c
  1716  002B5E  0E89               	movlw	_V& (0+255)
  1717  002B60  0F04               	addlw	4
  1718  002B62  6EE6               	movwf	postinc1,c
  1719  002B64  0E02               	movlw	2
  1720  002B66  6EE6               	movwf	postinc1,c
  1721  002B68  EC49  F023         	call	_sprintf	;wreg free
  1722  002B6C  94BE               	bcf	16318,2,c	;volatile
  1723                           
  1724                           ;main.c: 398:     wait_lcd_done();
  1725  002B6E  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 399:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1729  002B72  0E89               	movlw	_V& (0+255)
  1730  002B74  0F04               	addlw	4
  1731  002B76  6EE6               	movwf	postinc1,c
  1732  002B78  0E0B               	movlw	11
  1733  002B7A  6EE6               	movwf	postinc1,c
  1734  002B7C  0E00               	movlw	0
  1735  002B7E  6EE6               	movwf	postinc1,c
  1736  002B80  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1737                           
  1738                           ;main.c: 401:     break;
  1739  002B84  D042               	goto	l6998
  1740  002B86                     l1236:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 403:     V.s_state = SEQ_STATE_INIT;
  1744  002B86  6B89               	clrf	_V& (0+255),b	;volatile
  1745  002B88                     l1237:
  1746                           
  1747                           ; BSR set to: 0
  1748  002B88  94BE               	bcf	16318,2,c	;volatile
  1749  002B8A  D03F               	goto	l6998
  1750  002B8C                     l1240:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 408:     V.s_state = SEQ_STATE_INIT;
  1754  002B8C  6B89               	clrf	_V& (0+255),b	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 409:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1758  002B8E  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1759  002B90  6EE6               	movwf	postinc1,c
  1760  002B92  0E00               	movlw	0
  1761  002B94  6EE6               	movwf	postinc1,c
  1762  002B96  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1763  002B98  6EE6               	movwf	postinc1,c
  1764  002B9A  0E00               	movlw	0
  1765  002B9C  6EE6               	movwf	postinc1,c
  1766  002B9E  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1767  002BA0  6EE6               	movwf	postinc1,c
  1768  002BA2  0E00               	movlw	0
  1769  002BA4  6EE6               	movwf	postinc1,c
  1770  002BA6  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1771  002BA8  6EE6               	movwf	postinc1,c
  1772  002BAA  0E00               	movlw	0
  1773  002BAC  6EE6               	movwf	postinc1,c
  1774  002BAE  0E01               	movlw	STR_7& (0+255)
  1775  002BB0  6EE6               	movwf	postinc1,c
  1776  002BB2  0E89               	movlw	_V& (0+255)
  1777  002BB4  0F04               	addlw	4
  1778  002BB6  6EE6               	movwf	postinc1,c
  1779  002BB8  0E0A               	movlw	10
  1780  002BBA  6EE6               	movwf	postinc1,c
  1781  002BBC  EC49  F023         	call	_sprintf	;wreg free
  1782                           
  1783                           ;main.c: 410:     wait_lcd_done();
  1784  002BC0  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 411:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1788  002BC4  0E89               	movlw	_V& (0+255)
  1789  002BC6  0F04               	addlw	4
  1790  002BC8  6EE6               	movwf	postinc1,c
  1791  002BCA  0E00               	movlw	0
  1792  002BCC  6EE6               	movwf	postinc1,c
  1793  002BCE  0E02               	movlw	2
  1794  002BD0  6EE6               	movwf	postinc1,c
  1795  002BD2  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1796                           
  1797                           ;main.c: 412:     break;
  1798  002BD6  D019               	goto	l6998
  1799  002BD8                     l6996:
  1800                           
  1801                           ; BSR set to: 0
  1802  002BD8  5189               	movf	_V& (0+255),w,b	;volatile
  1803  002BDA  6E48               	movwf	btemp+10,c
  1804  002BDC  6A49               	clrf	btemp+11,c
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ;	Chosen strategy is simple_byte
  1813  002BDE  5049               	movf	btemp+11,w,c
  1814  002BE0  0A00               	xorlw	0	; case 0
  1815  002BE2  A4D8               	btfss	status,2,c
  1816  002BE4  D7D3               	goto	l1240
  1817                           
  1818                           ; BSR set to: 0
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 6, Range of values is 0 to 5
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           19    10 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  002BE6  5048               	movf	btemp+10,w,c
  1826  002BE8  0A00               	xorlw	0	; case 0
  1827  002BEA  B4D8               	btfsc	status,2,c
  1828  002BEC  D76A               	goto	l1219
  1829  002BEE  0A01               	xorlw	1	; case 1
  1830  002BF0  B4D8               	btfsc	status,2,c
  1831  002BF2  D76C               	goto	l6954
  1832  002BF4  0A03               	xorlw	3	; case 2
  1833  002BF6  B4D8               	btfsc	status,2,c
  1834  002BF8  D799               	goto	l6970
  1835  002BFA  0A01               	xorlw	1	; case 3
  1836  002BFC  B4D8               	btfsc	status,2,c
  1837  002BFE  D7AB               	goto	l6978
  1838  002C00  0A07               	xorlw	7	; case 4
  1839  002C02  B4D8               	btfsc	status,2,c
  1840  002C04  D7C0               	goto	l1236
  1841  002C06  0A01               	xorlw	1	; case 5
  1842  002C08  D7C1               	goto	l1240
  1843  002C0A                     l6998:
  1844                           
  1845                           ;main.c: 414:    if (!V.error && !V.abort) {
  1846  002C0A  0100               	movlb	0	; () banked
  1847  002C0C  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1848  002C0E  A4D8               	btfss	status,2,c
  1849  002C10  D052               	goto	l1246
  1850                           
  1851                           ; BSR set to: 0
  1852  002C12  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1853  002C14  A4D8               	btfss	status,2,c
  1854  002C16  D04F               	goto	l1246
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main.c: 415:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1858  002C18  0060  F337  FFE6   	movff	_V+68,postinc1
  1859  002C1E  0060  F33B  FFE6   	movff	_V+69,postinc1
  1860  002C24  0060  F33F  FFE6   	movff	_V+70,postinc1
  1861  002C2A  0060  F343  FFE6   	movff	_V+71,postinc1
  1862  002C30  0E2D               	movlw	STR_8& (0+255)
  1863  002C32  6EE6               	movwf	postinc1,c
  1864  002C34  0E89               	movlw	_V& (0+255)
  1865  002C36  0F04               	addlw	4
  1866  002C38  6EE6               	movwf	postinc1,c
  1867  002C3A  0E06               	movlw	6
  1868  002C3C  6EE6               	movwf	postinc1,c
  1869  002C3E  EC49  F023         	call	_sprintf	;wreg free
  1870  002C42                     l7004:
  1871                           
  1872                           ;main.c: 416:     V.buf[16] = 0;
  1873  002C42  0100               	movlb	0	; () banked
  1874  002C44  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 417:     wait_lcd_done();
  1878  002C46  EC11  F02C         	call	_wait_lcd_done	;wreg free
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 418:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1882  002C4A  0E89               	movlw	_V& (0+255)
  1883  002C4C  0F04               	addlw	4
  1884  002C4E  6EE6               	movwf	postinc1,c
  1885  002C50  0E00               	movlw	0
  1886  002C52  6EE6               	movwf	postinc1,c
  1887  002C54  0E02               	movlw	2
  1888  002C56  6EE6               	movwf	postinc1,c
  1889  002C58  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1890  002C5C  D02C               	goto	l1246
  1891  002C5E                     l7010:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 422:    sprintf(V.buf, " EQUIP MODE    #");
  1895  002C5E  0E51               	movlw	STR_9& (0+255)
  1896  002C60  6EE6               	movwf	postinc1,c
  1897  002C62  0E89               	movlw	_V& (0+255)
  1898  002C64  0F04               	addlw	4
  1899  002C66  6EE6               	movwf	postinc1,c
  1900  002C68  0E02               	movlw	2
  1901  002C6A  6EE6               	movwf	postinc1,c
  1902  002C6C  EC49  F023         	call	_sprintf	;wreg free
  1903  002C70  D7E8               	goto	l7004
  1904  002C72                     l7018:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 428:    sprintf(V.buf, " LOG MODE      #");
  1908  002C72  0E40               	movlw	STR_10& (0+255)
  1909  002C74  6EE6               	movwf	postinc1,c
  1910  002C76  0E89               	movlw	_V& (0+255)
  1911  002C78  0F04               	addlw	4
  1912  002C7A  6EE6               	movwf	postinc1,c
  1913  002C7C  0E02               	movlw	2
  1914  002C7E  6EE6               	movwf	postinc1,c
  1915  002C80  EC49  F023         	call	_sprintf	;wreg free
  1916  002C84  D7DE               	goto	l7004
  1917  002C86                     l1245:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;main.c: 435:    V.ui_state = UI_STATE_INIT;
  1921  002C86  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1922                           
  1923                           ;main.c: 436:    break;
  1924  002C88  D016               	goto	l1246
  1925  002C8A                     l7028:
  1926                           
  1927                           ; BSR set to: 0
  1928  002C8A  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1929  002C8C  6E48               	movwf	btemp+10,c
  1930  002C8E  6A49               	clrf	btemp+11,c
  1931                           
  1932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1933                           ; Switch size 1, requested type "simple"
  1934                           ; Number of cases is 1, Range of values is 0 to 0
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte            4     3 (average)
  1938                           ;	Chosen strategy is simple_byte
  1939  002C90  5049               	movf	btemp+11,w,c
  1940  002C92  0A00               	xorlw	0	; case 0
  1941  002C94  A4D8               	btfss	status,2,c
  1942  002C96  D7F7               	goto	l1245
  1943                           
  1944                           ; BSR set to: 0
  1945                           ; Switch size 1, requested type "simple"
  1946                           ; Number of cases is 5, Range of values is 0 to 5
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte           16     9 (average)
  1950                           ;	Chosen strategy is simple_byte
  1951  002C98  5048               	movf	btemp+10,w,c
  1952  002C9A  0A00               	xorlw	0	; case 0
  1953  002C9C  B4D8               	btfsc	status,2,c
  1954  002C9E  D6A8               	goto	l6914
  1955  002CA0  0A01               	xorlw	1	; case 1
  1956  002CA2  B4D8               	btfsc	status,2,c
  1957  002CA4  D7DC               	goto	l7010
  1958  002CA6  0A03               	xorlw	3	; case 2
  1959  002CA8  B4D8               	btfsc	status,2,c
  1960  002CAA  D796               	goto	l6996
  1961  002CAC  0A06               	xorlw	6	; case 4
  1962  002CAE  B4D8               	btfsc	status,2,c
  1963  002CB0  D7E0               	goto	l7018
  1964  002CB2  0A01               	xorlw	1	; case 5
  1965  002CB4  D7E8               	goto	l1245
  1966  002CB6                     l1246:
  1967  002CB6  82BE               	bsf	16318,1,c	;volatile
  1968                           
  1969                           ;main.c: 439:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  1970  002CB8  0100               	movlb	0	; () banked
  1971  002CBA  31DD               	rrcf	(_V+84)& (0+255),w,b	;volatile
  1972  002CBC  32E8               	rrcf	wreg,f,c
  1973  002CBE  32E8               	rrcf	wreg,f,c
  1974  002CC0  0B0F               	andlw	15
  1975  002CC2  6EE6               	movwf	postinc1,c
  1976  002CC4  0E00               	movlw	0
  1977  002CC6  6EE6               	movwf	postinc1,c
  1978  002CC8  51DE               	movf	(_V+85)& (0+255),w,b	;volatile
  1979  002CCA  0B0F               	andlw	15
  1980  002CCC  6EE6               	movwf	postinc1,c
  1981  002CCE  0E00               	movlw	0
  1982  002CD0  6EE6               	movwf	postinc1,c
  1983  002CD2  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1984  002CD4  6EE6               	movwf	postinc1,c
  1985  002CD6  0E00               	movlw	0
  1986  002CD8  6EE6               	movwf	postinc1,c
  1987  002CDA  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1988  002CDC  6EE6               	movwf	postinc1,c
  1989  002CDE  0E00               	movlw	0
  1990  002CE0  6EE6               	movwf	postinc1,c
  1991  002CE2  0E18               	movlw	STR_11& (0+255)
  1992  002CE4  6EE6               	movwf	postinc1,c
  1993  002CE6  0E89               	movlw	_V& (0+255)
  1994  002CE8  0F04               	addlw	4
  1995  002CEA  6EE6               	movwf	postinc1,c
  1996  002CEC  0E0A               	movlw	10
  1997  002CEE  6EE6               	movwf	postinc1,c
  1998  002CF0  EC49  F023         	call	_sprintf	;wreg free
  1999                           
  2000                           ;main.c: 440:   V.buf[16] = 0;
  2001  002CF4  0100               	movlb	0	; () banked
  2002  002CF6  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 441:   wait_lcd_done();
  2006  002CF8  EC11  F02C         	call	_wait_lcd_done	;wreg free
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 442:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  2010  002CFC  0E89               	movlw	_V& (0+255)
  2011  002CFE  0F04               	addlw	4
  2012  002D00  6EE6               	movwf	postinc1,c
  2013  002D02  0E00               	movlw	0
  2014  002D04  6EE6               	movwf	postinc1,c
  2015  002D06  0E01               	movlw	1
  2016  002D08  6EE6               	movwf	postinc1,c
  2017  002D0A  EC6D  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  2018                           
  2019                           ; BSR set to: 59
  2020  002D0E  92BE               	bcf	16318,1,c	;volatile
  2021                           
  2022                           ; BSR set to: 59
  2023  002D10  84BE               	bsf	16318,2,c	;volatile
  2024                           
  2025                           ; BSR set to: 59
  2026                           ;main.c: 445:   ++V.ticks;
  2027  002D12  0E01               	movlw	1
  2028  002D14  0100               	movlb	0	; () banked
  2029  002D16  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  2030  002D18  0E00               	movlw	0
  2031  002D1A  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  2032  002D1C  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  2033  002D1E  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  2034  002D20  D7B4               	goto	l7028
  2035  002D22                     __end_of_main:
  2036                           	opt callstack 0
  2037                           
  2038 ;; *************** function _t_protocol *****************
  2039 ;; Defined at:
  2040 ;;		line 146 in file "gemsecs.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  t_link          1  [STACK] PTR enum E16164
  2043 ;;		 -> V(86), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  block           3  [STACK] struct response_type
  2046 ;;  rxData          1  [STACK] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1  [STACK] enum E16902
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    5
  2063 ;; This function calls:
  2064 ;;		_StartTimer
  2065 ;;		_TimerDone
  2066 ;;		_UART1_Read
  2067 ;;		_UART1_Write
  2068 ;;		_UART1_is_rx_ready
  2069 ;;		_UART1_put_buffer
  2070 ;;		_secs_II_message
  2071 ;;		_secs_send
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text1
  2078  00381E                     __ptext1:
  2079                           	opt callstack 0
  2080  00381E                     _t_protocol:
  2081                           	opt callstack 0
  2082                           
  2083                           ; BSR set to: 0
  2084                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2085  00381E  52E6               	movf	postinc1,f,c
  2086  003820  52E6               	movf	postinc1,f,c
  2087  003822  52E6               	movf	postinc1,f,c
  2088  003824  52E6               	movf	postinc1,f,c
  2089                           
  2090                           ;gemsecs.c: 146: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 147: {;gemsecs.
      +                          c: 148:  uint8_t rxData;;gemsecs.c: 149:  static uint8_t retry;;gemsecs.c: 150:  respons
      +                          e_type block;;gemsecs.c: 152:  switch (*t_link) {
  2091                           
  2092                           ;incstack = 0
  2093  003826  D0FD               	goto	l6884
  2094  003828                     l1553:
  2095                           
  2096                           ;gemsecs.c: 154:   V.error = LINK_ERROR_NONE;
  2097  003828  0100               	movlb	0	; () banked
  2098  00382A  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;gemsecs.c: 155:   retry = 3;
  2102  00382C  0E03               	movlw	3
  2103  00382E  6E30               	movwf	t_protocol@retry,c
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;gemsecs.c: 156:   UART1_Write(0x05);
  2107  003830  0E05               	movlw	5
  2108  003832  6EE6               	movwf	postinc1,c
  2109  003834  ECF2  F028         	call	_UART1_Write	;wreg free
  2110                           
  2111                           ; BSR set to: 57
  2112                           ;gemsecs.c: 157:   StartTimer(TMR_T2, 2000);
  2113  003838  0ED0               	movlw	208
  2114  00383A  6EE6               	movwf	postinc1,c
  2115  00383C  0E07               	movlw	7
  2116  00383E  6EE6               	movwf	postinc1,c
  2117  003840  0E02               	movlw	2
  2118  003842  6EE6               	movwf	postinc1,c
  2119  003844  EC4F  F029         	call	_StartTimer	;wreg free
  2120                           
  2121                           ;gemsecs.c: 158:   *t_link = LINK_STATE_ENQ;
  2122                           ;stkvar	_t_link @ sp[(-4)+-1]
  2123  003848  0EFB               	movlw	-5
  2124  00384A  50E3               	movf	plusw1,w,c
  2125  00384C  6ED9               	movwf	fsr2l,c
  2126  00384E  6ADA               	clrf	fsr2h,c
  2127  003850  0E01               	movlw	1
  2128  003852  D0E5               	goto	L5
  2129  003854                     l6810:
  2130                           
  2131                           ;gemsecs.c: 165:   if (TimerDone(TMR_T2)) {
  2132  003854  0E02               	movlw	2
  2133  003856  6EE6               	movwf	postinc1,c
  2134  003858  EC6B  F02B         	call	_TimerDone	;wreg free
  2135  00385C  503E               	movf	btemp,w,c
  2136  00385E  B4D8               	btfsc	status,2,c
  2137  003860  D01A               	goto	l6820
  2138                           
  2139                           ;gemsecs.c: 166:    if (!retry--) {
  2140  003862  0630               	decf	t_protocol@retry,f,c
  2141  003864  2830               	incf	t_protocol@retry,w,c
  2142  003866  A4D8               	btfss	status,2,c
  2143  003868  D00D               	goto	l6818
  2144                           
  2145                           ;gemsecs.c: 167:     V.error = LINK_ERROR_T2;
  2146  00386A  0E02               	movlw	2
  2147  00386C  0100               	movlb	0	; () banked
  2148  00386E  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2149                           
  2150                           ;gemsecs.c: 168:     V.failed_send = 1;
  2151  003870  51DD               	movf	(_V+84)& (0+255),w,b	;volatile
  2152  003872  0B87               	andlw	-121
  2153  003874  0908               	iorlw	8
  2154  003876  6FDD               	movwf	(_V+84)& (0+255),b	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;gemsecs.c: 169:     *t_link = LINK_STATE_NAK;
  2158                           ;stkvar	_t_link @ sp[(-4)+-1]
  2159  003878  0EFB               	movlw	-5
  2160  00387A  50E3               	movf	plusw1,w,c
  2161  00387C  6ED9               	movwf	fsr2l,c
  2162  00387E  6ADA               	clrf	fsr2h,c
  2163  003880  0E05               	movlw	5
  2164  003882  D0CD               	goto	L5
  2165  003884                     l6818:
  2166                           
  2167                           ;gemsecs.c: 171:     StartTimer(TMR_T2, 2000);
  2168  003884  0ED0               	movlw	208
  2169  003886  6EE6               	movwf	postinc1,c
  2170  003888  0E07               	movlw	7
  2171  00388A  6EE6               	movwf	postinc1,c
  2172  00388C  0E02               	movlw	2
  2173  00388E  6EE6               	movwf	postinc1,c
  2174  003890  EC4F  F029         	call	_StartTimer	;wreg free
  2175  003894  D0E7               	goto	l6886
  2176  003896                     l6820:
  2177                           
  2178                           ;gemsecs.c: 174:    if (UART1_is_rx_ready()) {
  2179  003896  ECCD  F02C         	call	_UART1_is_rx_ready	;wreg free
  2180  00389A  503E               	movf	btemp,w,c
  2181  00389C  B4D8               	btfsc	status,2,c
  2182  00389E  D0E2               	goto	l6886
  2183                           
  2184                           ;gemsecs.c: 175:     rxData = UART1_Read();
  2185  0038A0  EC11  F029         	call	_UART1_Read	;wreg free
  2186                           
  2187                           ;stkvar	_rxData @ sp[(-4)+3]
  2188  0038A4  0EFF               	movlw	-1
  2189  0038A6  0060  F0FB  FFE3   	movff	btemp,plusw1
  2190                           
  2191                           ; BSR set to: 57
  2192                           ;gemsecs.c: 176:     if (rxData == 0x04) {
  2193                           ;stkvar	_rxData @ sp[(-4)+3]
  2194  0038AC  0EFF               	movlw	-1
  2195  0038AE  006F FF8C  F03E    	movff	plusw1,btemp
  2196  0038B4  0E04               	movlw	4
  2197  0038B6  183E               	xorwf	btemp,w,c
  2198  0038B8  A4D8               	btfss	status,2,c
  2199  0038BA  D00E               	goto	l6830
  2200                           
  2201                           ; BSR set to: 57
  2202                           ;gemsecs.c: 177:      StartTimer(TMR_T3, 5000);
  2203  0038BC  0E88               	movlw	136
  2204  0038BE  6EE6               	movwf	postinc1,c
  2205  0038C0  0E13               	movlw	19
  2206  0038C2  6EE6               	movwf	postinc1,c
  2207  0038C4  0E03               	movlw	3
  2208  0038C6  6EE6               	movwf	postinc1,c
  2209  0038C8  EC4F  F029         	call	_StartTimer	;wreg free
  2210                           
  2211                           ;gemsecs.c: 178:      *t_link = LINK_STATE_EOT;
  2212                           ;stkvar	_t_link @ sp[(-4)+-1]
  2213  0038CC  0EFB               	movlw	-5
  2214  0038CE  50E3               	movf	plusw1,w,c
  2215  0038D0  6ED9               	movwf	fsr2l,c
  2216  0038D2  6ADA               	clrf	fsr2h,c
  2217  0038D4  0E02               	movlw	2
  2218  0038D6  6EDF               	movwf	indf2,c
  2219  0038D8                     l6830:
  2220                           
  2221                           ;gemsecs.c: 180:     if (rxData == 0x05) {
  2222                           ;stkvar	_rxData @ sp[(-4)+3]
  2223  0038D8  0EFF               	movlw	-1
  2224  0038DA  006F FF8C  F03E    	movff	plusw1,btemp
  2225  0038E0  0E05               	movlw	5
  2226  0038E2  183E               	xorwf	btemp,w,c
  2227  0038E4  A4D8               	btfss	status,2,c
  2228  0038E6  D0BE               	goto	l6886
  2229                           
  2230                           ;gemsecs.c: 181:      UART1_put_buffer(0x04);
  2231  0038E8  0E04               	movlw	4
  2232  0038EA  6EE6               	movwf	postinc1,c
  2233  0038EC  ECAF  F029         	call	_UART1_put_buffer	;wreg free
  2234  0038F0                     l6834:
  2235                           
  2236                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2237                           ;stkvar	_t_link @ sp[(-4)+-1]
  2238  0038F0  0EFB               	movlw	-5
  2239  0038F2  50E3               	movf	plusw1,w,c
  2240  0038F4  6ED9               	movwf	fsr2l,c
  2241  0038F6  6ADA               	clrf	fsr2h,c
  2242  0038F8  0E04               	movlw	4
  2243  0038FA  D091               	goto	L5
  2244  0038FC                     l6836:
  2245                           
  2246                           ;gemsecs.c: 188:   block = secs_II_message(V.stream, V.function);
  2247  0038FC  0100               	movlb	0	; () banked
  2248  0038FE  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  2249  003900  6EE6               	movwf	postinc1,c
  2250  003902  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  2251  003904  6EE6               	movwf	postinc1,c
  2252  003906  EC5D  F01E         	call	_secs_II_message	;wreg free
  2253                           
  2254                           ;stkvar	_block @ sp[(-4)+0]
  2255  00390A  0EFC               	movlw	-4
  2256  00390C  0060  F0FB  FFE3   	movff	btemp,plusw1
  2257  003912  0EFD               	movlw	-3
  2258  003914  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  2259  00391A  0EFE               	movlw	-2
  2260  00391C  0060  F103  FFE3   	movff	btemp+2,plusw1
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;gemsecs.c: 189:   if (V.abort == LINK_ERROR_ABORT) {
  2264  003922  0E07               	movlw	7
  2265  003924  19D8               	xorwf	(_V+79)& (0+255),w,b	;volatile
  2266  003926  A4D8               	btfss	status,2,c
  2267  003928  D01E               	goto	l6846
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;gemsecs.c: 190:    secs_send((uint8_t*) block.header, block.length, 0);
  2271  00392A  0E00               	movlw	0
  2272  00392C  6EE6               	movwf	postinc1,c
  2273                           
  2274                           ;stkvar	_block @ sp[(-5)+0]
  2275  00392E  0EFD               	movlw	253
  2276  003930  24E1               	addwf	fsr1l,w,c
  2277  003932  6ED9               	movwf	fsr2l,c
  2278  003934  0EFF               	movlw	255
  2279  003936  20E2               	addwfc	fsr1h,w,c
  2280  003938  6EDA               	movwf	fsr2h,c
  2281  00393A  50DF               	movf	indf2,w,c
  2282  00393C  6EE6               	movwf	postinc1,c
  2283                           
  2284                           ;stkvar	_block @ sp[(-6)+0]
  2285  00393E  0EFA               	movlw	-6
  2286  003940  006F FF8F FFE6     	movff	plusw1,postinc1
  2287  003946  006F FF8F FFE6     	movff	plusw1,postinc1
  2288  00394C  EC4F  F01F         	call	_secs_send	;wreg free
  2289                           
  2290                           ;gemsecs.c: 191:    V.failed_send = 2;
  2291  003950  0100               	movlb	0	; () banked
  2292  003952  51DD               	movf	(_V+84)& (0+255),w,b	;volatile
  2293  003954  0B87               	andlw	-121
  2294  003956  0910               	iorlw	16
  2295  003958  6FDD               	movwf	(_V+84)& (0+255),b	;volatile
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;gemsecs.c: 192:    *t_link = LINK_STATE_ERROR;
  2299                           ;stkvar	_t_link @ sp[(-4)+-1]
  2300  00395A  0EFB               	movlw	-5
  2301  00395C  50E3               	movf	plusw1,w,c
  2302  00395E  6ED9               	movwf	fsr2l,c
  2303  003960  6ADA               	clrf	fsr2h,c
  2304  003962  0E06               	movlw	6
  2305  003964  D05C               	goto	L5
  2306  003966                     l6846:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;gemsecs.c: 194:    secs_send((uint8_t*) block.header, block.length, 0);
  2310  003966  0E00               	movlw	0
  2311  003968  6EE6               	movwf	postinc1,c
  2312                           
  2313                           ;stkvar	_block @ sp[(-5)+0]
  2314  00396A  0EFD               	movlw	253
  2315  00396C  24E1               	addwf	fsr1l,w,c
  2316  00396E  6ED9               	movwf	fsr2l,c
  2317  003970  0EFF               	movlw	255
  2318  003972  20E2               	addwfc	fsr1h,w,c
  2319  003974  6EDA               	movwf	fsr2h,c
  2320  003976  50DF               	movf	indf2,w,c
  2321  003978  6EE6               	movwf	postinc1,c
  2322                           
  2323                           ;stkvar	_block @ sp[(-6)+0]
  2324  00397A  0EFA               	movlw	-6
  2325  00397C  006F FF8F FFE6     	movff	plusw1,postinc1
  2326  003982  006F FF8F FFE6     	movff	plusw1,postinc1
  2327  003988  EC4F  F01F         	call	_secs_send	;wreg free
  2328                           
  2329                           ;gemsecs.c: 195:    if (V.error == LINK_ERROR_NONE) {
  2330  00398C  0100               	movlb	0	; () banked
  2331  00398E  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  2332  003990  A4D8               	btfss	status,2,c
  2333  003992  D006               	goto	l6852
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;gemsecs.c: 196:     *t_link = LINK_STATE_ACK;
  2337                           ;stkvar	_t_link @ sp[(-4)+-1]
  2338  003994  0EFB               	movlw	-5
  2339  003996  50E3               	movf	plusw1,w,c
  2340  003998  6ED9               	movwf	fsr2l,c
  2341  00399A  6ADA               	clrf	fsr2h,c
  2342  00399C  0E03               	movlw	3
  2343  00399E  D03F               	goto	L5
  2344  0039A0                     l6852:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;gemsecs.c: 198:     V.failed_send = 3;
  2348  0039A0  51DD               	movf	(_V+84)& (0+255),w,b	;volatile
  2349  0039A2  0B87               	andlw	-121
  2350  0039A4  0918               	iorlw	24
  2351  0039A6  D7D8               	goto	L6
  2352  0039A8                     l6856:
  2353                           
  2354                           ;gemsecs.c: 208:   if (TimerDone(TMR_T3)) {
  2355  0039A8  0E03               	movlw	3
  2356  0039AA  6EE6               	movwf	postinc1,c
  2357  0039AC  EC6B  F02B         	call	_TimerDone	;wreg free
  2358  0039B0  503E               	movf	btemp,w,c
  2359  0039B2  B4D8               	btfsc	status,2,c
  2360  0039B4  D007               	goto	l6862
  2361                           
  2362                           ;gemsecs.c: 209:    V.error = LINK_ERROR_T3;
  2363  0039B6  0E03               	movlw	3
  2364  0039B8  0100               	movlb	0	; () banked
  2365  0039BA  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2366                           
  2367                           ;gemsecs.c: 210:    V.failed_send = 4;
  2368  0039BC  51DD               	movf	(_V+84)& (0+255),w,b	;volatile
  2369  0039BE  0B87               	andlw	-121
  2370  0039C0  0920               	iorlw	32
  2371  0039C2  D759               	goto	L7
  2372  0039C4                     l6862:
  2373                           
  2374                           ;gemsecs.c: 213:    if (UART1_is_rx_ready()) {
  2375  0039C4  ECCD  F02C         	call	_UART1_is_rx_ready	;wreg free
  2376  0039C8  503E               	movf	btemp,w,c
  2377  0039CA  B4D8               	btfsc	status,2,c
  2378  0039CC  D04B               	goto	l6886
  2379                           
  2380                           ;gemsecs.c: 214:     rxData = UART1_Read();
  2381  0039CE  EC11  F029         	call	_UART1_Read	;wreg free
  2382                           
  2383                           ;stkvar	_rxData @ sp[(-4)+3]
  2384  0039D2  0EFF               	movlw	-1
  2385  0039D4  0060  F0FB  FFE3   	movff	btemp,plusw1
  2386                           
  2387                           ; BSR set to: 57
  2388                           ;gemsecs.c: 215:     if (rxData == 0x06) {
  2389                           ;stkvar	_rxData @ sp[(-4)+3]
  2390  0039DA  0EFF               	movlw	-1
  2391  0039DC  006F FF8C  F03E    	movff	plusw1,btemp
  2392  0039E2  0E06               	movlw	6
  2393  0039E4  183E               	xorwf	btemp,w,c
  2394  0039E6  A4D8               	btfss	status,2,c
  2395  0039E8  D03D               	goto	l6886
  2396                           
  2397                           ; BSR set to: 57
  2398                           ;gemsecs.c: 216:      V.failed_send = 0;
  2399  0039EA  0E87               	movlw	-121
  2400  0039EC  0100               	movlb	0	; () banked
  2401  0039EE  17DD               	andwf	(_V+84)& (0+255),f,b	;volatile
  2402  0039F0  D77F               	goto	l6834
  2403  0039F2                     l6872:
  2404                           
  2405                           ;gemsecs.c: 223:   *t_link = LINK_STATE_ERROR;
  2406                           ;stkvar	_t_link @ sp[(-4)+-1]
  2407  0039F2  0EFB               	movlw	-5
  2408  0039F4  50E3               	movf	plusw1,w,c
  2409  0039F6  6ED9               	movwf	fsr2l,c
  2410  0039F8  6ADA               	clrf	fsr2h,c
  2411  0039FA  0E06               	movlw	6
  2412  0039FC  6EDF               	movwf	indf2,c
  2413                           
  2414                           ;gemsecs.c: 224:   while ((uart1RxCount)) {
  2415  0039FE  D002               	goto	l6876
  2416  003A00                     l6874:
  2417                           
  2418                           ;gemsecs.c: 225:    UART1_Read();
  2419  003A00  EC11  F029         	call	_UART1_Read	;wreg free
  2420  003A04                     l6876:
  2421                           
  2422                           ;gemsecs.c: 224:   while ((uart1RxCount)) {
  2423  003A04  5038               	movf	_uart1RxCount,w,c	;volatile
  2424  003A06  B4D8               	btfsc	status,2,c
  2425  003A08  D02D               	goto	l6886
  2426  003A0A  D7FA               	goto	l6874
  2427  003A0C                     l6878:
  2428                           
  2429                           ;gemsecs.c: 231:   V.failed_send = 0;
  2430  003A0C  0E87               	movlw	-121
  2431  003A0E  0100               	movlb	0	; () banked
  2432  003A10  17DD               	andwf	(_V+84)& (0+255),f,b	;volatile
  2433                           
  2434                           ;gemsecs.c: 232:   break;
  2435  003A12  D028               	goto	l6886
  2436  003A14                     l6880:
  2437                           
  2438                           ;gemsecs.c: 234:   *t_link = LINK_STATE_IDLE;
  2439                           ;stkvar	_t_link @ sp[(-4)+-1]
  2440  003A14  0EFB               	movlw	-5
  2441  003A16  50E3               	movf	plusw1,w,c
  2442  003A18  6ED9               	movwf	fsr2l,c
  2443  003A1A  6ADA               	clrf	fsr2h,c
  2444  003A1C  0E00               	movlw	0
  2445  003A1E                     L5:
  2446  003A1E  6EDF               	movwf	indf2,c
  2447                           
  2448                           ;gemsecs.c: 235:   break;
  2449  003A20  D021               	goto	l6886
  2450  003A22                     l6884:
  2451                           
  2452                           ;stkvar	_t_link @ sp[(-4)+-1]
  2453  003A22  0EFB               	movlw	-5
  2454  003A24  50E3               	movf	plusw1,w,c
  2455  003A26  6ED9               	movwf	fsr2l,c
  2456  003A28  6ADA               	clrf	fsr2h,c
  2457  003A2A  50DF               	movf	indf2,w,c
  2458  003A2C  6E48               	movwf	btemp+10,c
  2459  003A2E  6A49               	clrf	btemp+11,c
  2460                           
  2461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2462                           ; Switch size 1, requested type "simple"
  2463                           ; Number of cases is 1, Range of values is 0 to 0
  2464                           ; switch strategies available:
  2465                           ; Name         Instructions Cycles
  2466                           ; simple_byte            4     3 (average)
  2467                           ;	Chosen strategy is simple_byte
  2468  003A30  5049               	movf	btemp+11,w,c
  2469  003A32  0A00               	xorlw	0	; case 0
  2470  003A34  A4D8               	btfss	status,2,c
  2471  003A36  D7EE               	goto	l6880
  2472                           
  2473                           ; Switch size 1, requested type "simple"
  2474                           ; Number of cases is 7, Range of values is 0 to 6
  2475                           ; switch strategies available:
  2476                           ; Name         Instructions Cycles
  2477                           ; simple_byte           22    12 (average)
  2478                           ;	Chosen strategy is simple_byte
  2479  003A38  5048               	movf	btemp+10,w,c
  2480  003A3A  0A00               	xorlw	0	; case 0
  2481  003A3C  B4D8               	btfsc	status,2,c
  2482  003A3E  D6F4               	goto	l1553
  2483  003A40  0A01               	xorlw	1	; case 1
  2484  003A42  B4D8               	btfsc	status,2,c
  2485  003A44  D707               	goto	l6810
  2486  003A46  0A03               	xorlw	3	; case 2
  2487  003A48  B4D8               	btfsc	status,2,c
  2488  003A4A  D758               	goto	l6836
  2489  003A4C  0A01               	xorlw	1	; case 3
  2490  003A4E  B4D8               	btfsc	status,2,c
  2491  003A50  D7AB               	goto	l6856
  2492  003A52  0A07               	xorlw	7	; case 4
  2493  003A54  B4D8               	btfsc	status,2,c
  2494  003A56  D7DA               	goto	l6878
  2495  003A58  0A01               	xorlw	1	; case 5
  2496  003A5A  B4D8               	btfsc	status,2,c
  2497  003A5C  D7CA               	goto	l6872
  2498  003A5E  0A03               	xorlw	3	; case 6
  2499  003A60  A4D8               	btfss	status,2,c
  2500  003A62  D7D8               	goto	l6880
  2501  003A64                     l6886:
  2502                           
  2503                           ;gemsecs.c: 238:  return *t_link;
  2504                           ;stkvar	_t_link @ sp[(-4)+-1]
  2505  003A64  0EFB               	movlw	-5
  2506  003A66  50E3               	movf	plusw1,w,c
  2507  003A68  6ED9               	movwf	fsr2l,c
  2508  003A6A  6ADA               	clrf	fsr2h,c
  2509  003A6C  50DF               	movf	indf2,w,c
  2510  003A6E  6E3E               	movwf	btemp,c
  2511                           
  2512                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2513  003A70  0EFB               	movlw	251
  2514  003A72  26E1               	addwf	fsr1l,f,c
  2515  003A74  0EFF               	movlw	255
  2516  003A76  22E2               	addwfc	fsr1h,f,c
  2517  003A78  0012               	return		;funcret
  2518  003A7A                     __end_of_t_protocol:
  2519                           	opt callstack 0
  2520                           
  2521 ;; *************** function _secs_send *****************
  2522 ;; Defined at:
  2523 ;;		line 242 in file "gemsecs.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  byte_block      2  [STACK] PTR unsigned char 
  2526 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2527 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2528 ;;		 -> H10(65), 
  2529 ;;  length          1  [STACK] unsigned char 
  2530 ;;  fake            1  [STACK] _Bool 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  k               2  [STACK] PTR unsigned char 
  2533 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2534 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2535 ;;		 -> H10(65), 
  2536 ;;  checksum        2  [STACK] unsigned short 
  2537 ;;  i               1  [STACK] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1  [STACK] _Bool 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2542 ;; Tracked objects:
  2543 ;;		On entry : 3F/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    4
  2554 ;; This function calls:
  2555 ;;		_UART1_Write
  2556 ;;		_UART1_is_tx_ready
  2557 ;;		_UART1_put_buffer
  2558 ;;		_block_checksum
  2559 ;; This function is called by:
  2560 ;;		_t_protocol
  2561 ;; This function uses a reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text2
  2565  003E9E                     __ptext2:
  2566                           	opt callstack 0
  2567  003E9E                     _secs_send:
  2568                           	opt callstack 0
  2569                           
  2570                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2571  003E9E  0E05               	movlw	5
  2572  003EA0  26E1               	addwf	fsr1l,f,c
  2573  003EA2  0E00               	movlw	0
  2574  003EA4  22E2               	addwfc	fsr1h,f,c
  2575                           
  2576                           ;gemsecs.c: 242: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 243: {;gemsecs.c: 244:  uint8_t i, *k;;gemsecs.c: 245:  uint16_t checksum;;gemsecs.
      +                          c: 247:  k = (uint8_t *) byte_block;
  2577                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2578                           
  2579                           ;incstack = 0
  2580  003EA6  0EF9               	movlw	-7
  2581  003EA8  006F FF8C  F048    	movff	plusw1,btemp+10
  2582  003EAE  0EFA               	movlw	-6
  2583  003EB0  006F FF8C  F049    	movff	plusw1,btemp+11
  2584                           
  2585                           ;stkvar	_k @ sp[(-5)+0]
  2586  003EB6  0EFC               	movlw	-4
  2587  003EB8  0060  F127  FFE3   	movff	btemp+11,plusw1
  2588  003EBE  0EFB               	movlw	-5
  2589  003EC0  0060  F123  FFE3   	movff	btemp+10,plusw1
  2590                           
  2591                           ;gemsecs.c: 249:  V.error = LINK_ERROR_NONE;
  2592  003EC6  0100               	movlb	0	; () banked
  2593  003EC8  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;gemsecs.c: 250:  if ((length - 3) != k[length - 1]) {
  2597                           ;stkvar	_length @ sp[(-5)+-3]
  2598  003ECA  0EF8               	movlw	-8
  2599  003ECC  50E3               	movf	plusw1,w,c
  2600  003ECE  6E48               	movwf	btemp+10,c
  2601  003ED0  6A49               	clrf	btemp+11,c
  2602                           
  2603                           ;stkvar	_k @ sp[(-5)+0]
  2604  003ED2  0EFB               	movlw	-5
  2605  003ED4  50E3               	movf	plusw1,w,c
  2606  003ED6  2648               	addwf	btemp+10,f,c
  2607  003ED8  0EFC               	movlw	-4
  2608  003EDA  50E3               	movf	plusw1,w,c
  2609  003EDC  2249               	addwfc	btemp+11,f,c
  2610  003EDE  0EFF               	movlw	255
  2611  003EE0  2448               	addwf	btemp+10,w,c
  2612  003EE2  6ED9               	movwf	fsr2l,c
  2613  003EE4  0EFF               	movlw	255
  2614  003EE6  2049               	addwfc	btemp+11,w,c
  2615  003EE8  6EDA               	movwf	fsr2h,c
  2616  003EEA  50DF               	movf	indf2,w,c
  2617  003EEC  6E48               	movwf	btemp+10,c
  2618  003EEE  6A49               	clrf	btemp+11,c
  2619  003EF0  0EFD               	movlw	253
  2620  003EF2  6E46               	movwf	btemp+8,c
  2621  003EF4  0EFF               	movlw	255
  2622  003EF6  6E47               	movwf	btemp+9,c
  2623                           
  2624                           ;stkvar	_length @ sp[(-5)+-3]
  2625  003EF8  0EF8               	movlw	-8
  2626  003EFA  50E3               	movf	plusw1,w,c
  2627  003EFC  6E44               	movwf	btemp+6,c
  2628  003EFE  6A45               	clrf	btemp+7,c
  2629  003F00  5046               	movf	btemp+8,w,c
  2630  003F02  2644               	addwf	btemp+6,f,c
  2631  003F04  5047               	movf	btemp+9,w,c
  2632  003F06  2245               	addwfc	btemp+7,f,c
  2633  003F08  5048               	movf	btemp+10,w,c
  2634  003F0A  1844               	xorwf	btemp+6,w,c
  2635  003F0C  E104               	bnz	u3850
  2636  003F0E  5049               	movf	btemp+11,w,c
  2637  003F10  1845               	xorwf	btemp+7,w,c
  2638  003F12  B4D8               	btfsc	status,2,c
  2639  003F14  D003               	goto	l6694
  2640  003F16                     u3850:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;gemsecs.c: 251:   V.error = LINK_ERROR_SEND;
  2644  003F16  0E08               	movlw	8
  2645  003F18  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2646  003F1A  D098               	goto	l1584
  2647  003F1C                     l6694:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;gemsecs.c: 260:  checksum = block_checksum(&k[2], length - 3);
  2651  003F1C  0EFD               	movlw	253
  2652  003F1E  6E48               	movwf	btemp+10,c
  2653  003F20  0EFF               	movlw	255
  2654  003F22  6E49               	movwf	btemp+11,c
  2655                           
  2656                           ;stkvar	_length @ sp[(-5)+-3]
  2657  003F24  0EF8               	movlw	-8
  2658  003F26  50E3               	movf	plusw1,w,c
  2659  003F28  6E46               	movwf	btemp+8,c
  2660  003F2A  6A47               	clrf	btemp+9,c
  2661  003F2C  5048               	movf	btemp+10,w,c
  2662  003F2E  2646               	addwf	btemp+8,f,c
  2663  003F30  5049               	movf	btemp+11,w,c
  2664  003F32  2247               	addwfc	btemp+9,f,c
  2665  003F34  0060  F11B  FFE6   	movff	btemp+8,postinc1
  2666  003F3A  0060  F11F  FFE6   	movff	btemp+9,postinc1
  2667                           
  2668                           ;stkvar	_k @ sp[(-7)+0]
  2669  003F40  0EF9               	movlw	-7
  2670  003F42  50E3               	movf	plusw1,w,c
  2671  003F44  0F02               	addlw	2
  2672  003F46  6E48               	movwf	btemp+10,c
  2673  003F48  0EFA               	movlw	-6
  2674  003F4A  006F FF8C  F049    	movff	plusw1,btemp+11
  2675  003F50  0E00               	movlw	0
  2676  003F52  2249               	addwfc	btemp+11,f,c
  2677  003F54  0060  F123  FFE6   	movff	btemp+10,postinc1
  2678  003F5A  0060  F127  FFE6   	movff	btemp+11,postinc1
  2679  003F60  EC78  F022         	call	_block_checksum	;wreg free
  2680                           
  2681                           ;stkvar	_checksum @ sp[(-5)+2]
  2682  003F64  0EFD               	movlw	-3
  2683  003F66  0060  F0FB  FFE3   	movff	btemp,plusw1
  2684  003F6C  0EFE               	movlw	-2
  2685  003F6E  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  2686                           
  2687                           ;gemsecs.c: 261:  k[0] = checksum & 0xff;
  2688                           ;stkvar	_checksum @ sp[(-5)+2]
  2689                           ;stkvar	_k @ sp[(-5)+0]
  2690  003F74  0EFB               	movlw	-5
  2691  003F76  006F FF8F FFD9     	movff	plusw1,fsr2l
  2692  003F7C  0EFC               	movlw	-4
  2693  003F7E  006F FF8F FFDA     	movff	plusw1,fsr2h
  2694  003F84  0EFD               	movlw	-3
  2695  003F86  006F FF8F FFDF     	movff	plusw1,indf2
  2696                           
  2697                           ;gemsecs.c: 262:  k[1] = (checksum >> 8)&0xff;
  2698                           ;stkvar	_checksum @ sp[(-5)+2]
  2699  003F8C  0EFE               	movlw	254
  2700  003F8E  24E1               	addwf	fsr1l,w,c
  2701  003F90  6ED9               	movwf	fsr2l,c
  2702  003F92  0EFF               	movlw	255
  2703  003F94  20E2               	addwfc	fsr1h,w,c
  2704  003F96  6EDA               	movwf	fsr2h,c
  2705                           
  2706                           ;stkvar	_k @ sp[(-5)+0]
  2707  003F98  0EFB               	movlw	-5
  2708  003F9A  006F FF8C  F048    	movff	plusw1,btemp+10
  2709  003FA0  0EFC               	movlw	-4
  2710  003FA2  006F FF8C  F049    	movff	plusw1,btemp+11
  2711  003FA8  0E01               	movlw	1
  2712  003FAA  2448               	addwf	btemp+10,w,c
  2713  003FAC  6EE9               	movwf	fsr0l,c
  2714  003FAE  0E00               	movlw	0
  2715  003FB0  2049               	addwfc	btemp+11,w,c
  2716  003FB2  6EEA               	movwf	fsr0h,c
  2717  003FB4  006F FF7F FFEF     	movff	indf2,indf0
  2718                           
  2719                           ;gemsecs.c: 263:  V.t_checksum = checksum;
  2720                           ;stkvar	_checksum @ sp[(-5)+2]
  2721  003FBA  0EFD               	movlw	-3
  2722  003FBC  006F FF8C  F0DB    	movff	plusw1,_V+82	;volatile
  2723  003FC2  0EFE               	movlw	-2
  2724  003FC4  006F FF8C  F0DC    	movff	plusw1,_V+83	;volatile
  2725  003FCA                     l6702:
  2726  003FCA  ECC9  F02C         	call	_UART1_is_tx_ready	;wreg free
  2727  003FCE  0E3F               	movlw	63
  2728  003FD0  643E               	cpfsgt	btemp,c
  2729  003FD2  D7FB               	goto	l6702
  2730                           
  2731                           ;gemsecs.c: 266:  for (i = length; i > 0; i--) {
  2732                           ;stkvar	_length @ sp[(-5)+-3]
  2733                           ;stkvar	_i @ sp[(-5)+4]
  2734  003FD4  0EF8               	movlw	-8
  2735  003FD6  006F FF8C  F03E    	movff	plusw1,btemp
  2736  003FDC  0EFF               	movlw	-1
  2737  003FDE  0060  F0FB  FFE3   	movff	btemp,plusw1
  2738  003FE4                     l6706:
  2739                           
  2740                           ;stkvar	_i @ sp[(-5)+4]
  2741  003FE4  0EFF               	movlw	-1
  2742  003FE6  50E3               	movf	plusw1,w,c
  2743  003FE8  B4D8               	btfsc	status,2,c
  2744  003FEA  D030               	goto	l1584
  2745                           
  2746                           ;gemsecs.c: 267:   if (fake) {
  2747                           ;stkvar	_fake @ sp[(-5)+-4]
  2748  003FEC  0EF7               	movlw	-9
  2749  003FEE  50E3               	movf	plusw1,w,c
  2750  003FF0  B4D8               	btfsc	status,2,c
  2751  003FF2  D015               	goto	l6714
  2752                           
  2753                           ;gemsecs.c: 268:    UART1_put_buffer(k[i - 1]);
  2754                           ;stkvar	_i @ sp[(-5)+4]
  2755  003FF4  0EFF               	movlw	-1
  2756  003FF6  50E3               	movf	plusw1,w,c
  2757  003FF8  6E48               	movwf	btemp+10,c
  2758  003FFA  6A49               	clrf	btemp+11,c
  2759                           
  2760                           ;stkvar	_k @ sp[(-5)+0]
  2761  003FFC  0EFB               	movlw	-5
  2762  003FFE  50E3               	movf	plusw1,w,c
  2763  004000  2648               	addwf	btemp+10,f,c
  2764  004002  0EFC               	movlw	-4
  2765  004004  50E3               	movf	plusw1,w,c
  2766  004006  2249               	addwfc	btemp+11,f,c
  2767  004008  0EFF               	movlw	255
  2768  00400A  2448               	addwf	btemp+10,w,c
  2769  00400C  6ED9               	movwf	fsr2l,c
  2770  00400E  0EFF               	movlw	255
  2771  004010  2049               	addwfc	btemp+11,w,c
  2772  004012  6EDA               	movwf	fsr2h,c
  2773  004014  50DF               	movf	indf2,w,c
  2774  004016  6EE6               	movwf	postinc1,c
  2775  004018  ECAF  F029         	call	_UART1_put_buffer	;wreg free
  2776                           
  2777                           ;gemsecs.c: 269:   } else {
  2778  00401C  D014               	goto	l6716
  2779  00401E                     l6714:
  2780                           
  2781                           ;gemsecs.c: 270:    UART1_Write(k[i - 1]);
  2782                           ;stkvar	_i @ sp[(-5)+4]
  2783  00401E  0EFF               	movlw	-1
  2784  004020  50E3               	movf	plusw1,w,c
  2785  004022  6E48               	movwf	btemp+10,c
  2786  004024  6A49               	clrf	btemp+11,c
  2787                           
  2788                           ;stkvar	_k @ sp[(-5)+0]
  2789  004026  0EFB               	movlw	-5
  2790  004028  50E3               	movf	plusw1,w,c
  2791  00402A  2648               	addwf	btemp+10,f,c
  2792  00402C  0EFC               	movlw	-4
  2793  00402E  50E3               	movf	plusw1,w,c
  2794  004030  2249               	addwfc	btemp+11,f,c
  2795  004032  0EFF               	movlw	255
  2796  004034  2448               	addwf	btemp+10,w,c
  2797  004036  6ED9               	movwf	fsr2l,c
  2798  004038  0EFF               	movlw	255
  2799  00403A  2049               	addwfc	btemp+11,w,c
  2800  00403C  6EDA               	movwf	fsr2h,c
  2801  00403E  50DF               	movf	indf2,w,c
  2802  004040  6EE6               	movwf	postinc1,c
  2803  004042  ECF2  F028         	call	_UART1_Write	;wreg free
  2804  004046                     l6716:
  2805                           
  2806                           ; BSR set to: 57
  2807                           ;gemsecs.c: 272:  }
  2808                           ;stkvar	_i @ sp[(-5)+4]
  2809  004046  0EFF               	movlw	-1
  2810  004048  06E3               	decf	plusw1,f,c
  2811  00404A  D7CC               	goto	l6706
  2812  00404C                     l1584:
  2813                           
  2814                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  2815  00404C  0EF7               	movlw	247
  2816  00404E  26E1               	addwf	fsr1l,f,c
  2817  004050  0EFF               	movlw	255
  2818  004052  22E2               	addwfc	fsr1h,f,c
  2819  004054  0012               	return		;funcret
  2820  004056                     __end_of_secs_send:
  2821                           	opt callstack 0
  2822                           
  2823 ;; *************** function _block_checksum *****************
  2824 ;; Defined at:
  2825 ;;		line 18 in file "gemsecs.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  byte_block      2  [STACK] PTR unsigned char 
  2828 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2829 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2830 ;;		 -> H10(65), 
  2831 ;;  byte_count      2  [STACK] unsigned short 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  i               2  [STACK] unsigned short 
  2834 ;;  sum             2  [STACK] unsigned short 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2  [STACK] unsigned short 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  2839 ;; Tracked objects:
  2840 ;;		On entry : 3F/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    3
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_secs_send
  2855 ;; This function uses a reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text3
  2859  0044F0                     __ptext3:
  2860                           	opt callstack 0
  2861  0044F0                     _block_checksum:
  2862                           	opt callstack 0
  2863                           
  2864                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2865  0044F0  52E6               	movf	postinc1,f,c
  2866  0044F2  52E6               	movf	postinc1,f,c
  2867  0044F4  52E6               	movf	postinc1,f,c
  2868  0044F6  52E6               	movf	postinc1,f,c
  2869                           
  2870                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  2871                           ;stkvar	_sum @ sp[(-4)+2]
  2872                           
  2873                           ;incstack = 0
  2874  0044F8  0EFE               	movlw	-2
  2875  0044FA  6AE3               	clrf	plusw1,c
  2876  0044FC  0EFF               	movlw	-1
  2877  0044FE  6AE3               	clrf	plusw1,c
  2878                           
  2879                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  2880                           ;stkvar	_i @ sp[(-4)+0]
  2881  004500  0EFC               	movlw	-4
  2882  004502  6AE3               	clrf	plusw1,c
  2883  004504  0EFD               	movlw	-3
  2884  004506  6AE3               	clrf	plusw1,c
  2885  004508  D039               	goto	l6634
  2886  00450A                     l6630:
  2887                           
  2888                           ;gemsecs.c: 23:   sum += byte_block[i];
  2889                           ;stkvar	_i @ sp[(-4)+0]
  2890  00450A  0EFC               	movlw	-4
  2891  00450C  006F FF8C  F048    	movff	plusw1,btemp+10
  2892  004512  0EFD               	movlw	-3
  2893  004514  006F FF8C  F049    	movff	plusw1,btemp+11
  2894                           
  2895                           ;stkvar	_byte_block @ sp[(-4)+-2]
  2896  00451A  0EFA               	movlw	-6
  2897  00451C  006F FF8C  F046    	movff	plusw1,btemp+8
  2898  004522  0EFB               	movlw	-5
  2899  004524  006F FF8C  F047    	movff	plusw1,btemp+9
  2900  00452A  5048               	movf	btemp+10,w,c
  2901  00452C  2446               	addwf	btemp+8,w,c
  2902  00452E  6ED9               	movwf	fsr2l,c
  2903  004530  5049               	movf	btemp+11,w,c
  2904  004532  2047               	addwfc	btemp+9,w,c
  2905  004534  6EDA               	movwf	fsr2h,c
  2906  004536  50DF               	movf	indf2,w,c
  2907  004538  6E49               	movwf	btemp+11,c
  2908                           
  2909                           ;stkvar	_sum @ sp[(-4)+2]
  2910  00453A  0EFE               	movlw	-2
  2911  00453C  50E3               	movf	plusw1,w,c
  2912  00453E  2449               	addwf	btemp+11,w,c
  2913  004540  6E3E               	movwf	btemp,c
  2914  004542  0EFE               	movlw	-2
  2915  004544  0060  F0FB  FFE3   	movff	btemp,plusw1
  2916  00454A  6A3E               	clrf	btemp,c
  2917  00454C  0EFF               	movlw	-1
  2918  00454E  50E3               	movf	plusw1,w,c
  2919  004550  223E               	addwfc	btemp,f,c
  2920  004552  0EFF               	movlw	-1
  2921  004554  0060  F0FB  FFE3   	movff	btemp,plusw1
  2922                           
  2923                           ;gemsecs.c: 24:  }
  2924                           ;stkvar	_i @ sp[(-4)+0]
  2925  00455A  0EFC               	movlw	-4
  2926  00455C  50E3               	movf	plusw1,w,c
  2927  00455E  0F01               	addlw	1
  2928  004560  6E3E               	movwf	btemp,c
  2929  004562  0EFC               	movlw	-4
  2930  004564  0060  F0FB  FFE3   	movff	btemp,plusw1
  2931  00456A  6A3E               	clrf	btemp,c
  2932  00456C  0EFD               	movlw	-3
  2933  00456E  50E3               	movf	plusw1,w,c
  2934  004570  203E               	addwfc	btemp,w,c
  2935  004572  6E3E               	movwf	btemp,c
  2936  004574  0EFD               	movlw	-3
  2937  004576  0060  F0FB  FFE3   	movff	btemp,plusw1
  2938  00457C                     l6634:
  2939                           
  2940                           ;stkvar	_byte_count @ sp[(-4)+-4]
  2941  00457C  0EF8               	movlw	-8
  2942  00457E  006F FF8C  F048    	movff	plusw1,btemp+10
  2943  004584  0EF9               	movlw	-7
  2944  004586  006F FF8C  F049    	movff	plusw1,btemp+11
  2945                           
  2946                           ;stkvar	_i @ sp[(-4)+0]
  2947  00458C  0EFC               	movlw	-4
  2948  00458E  006F FF8C  F046    	movff	plusw1,btemp+8
  2949  004594  0EFD               	movlw	-3
  2950  004596  006F FF8C  F047    	movff	plusw1,btemp+9
  2951  00459C  5048               	movf	btemp+10,w,c
  2952  00459E  5C46               	subwf	btemp+8,w,c
  2953  0045A0  5049               	movf	btemp+11,w,c
  2954  0045A2  5847               	subwfb	btemp+9,w,c
  2955  0045A4  A0D8               	btfss	status,0,c
  2956  0045A6  D7B1               	goto	l6630
  2957                           
  2958                           ;gemsecs.c: 25:  return sum;
  2959                           ;stkvar	_sum @ sp[(-4)+2]
  2960  0045A8  0EFE               	movlw	-2
  2961  0045AA  006F FF8C  F03E    	movff	plusw1,btemp
  2962  0045B0  0EFF               	movlw	-1
  2963  0045B2  006F FF8C  F03F    	movff	plusw1,btemp+1
  2964                           
  2965                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  2966  0045B8  0EF8               	movlw	248
  2967  0045BA  26E1               	addwf	fsr1l,f,c
  2968  0045BC  0EFF               	movlw	255
  2969  0045BE  22E2               	addwfc	fsr1h,f,c
  2970  0045C0  0012               	return		;funcret
  2971  0045C2                     __end_of_block_checksum:
  2972                           	opt callstack 0
  2973                           
  2974 ;; *************** function _UART1_put_buffer *****************
  2975 ;; Defined at:
  2976 ;;		line 250 in file "mcc_generated_files/uart1.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  bufData         1  [STACK] unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1  [STACK] void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/39
  2987 ;;		On exit  : 3F/39
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    3
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_t_protocol
  3001 ;;		_secs_send
  3002 ;; This function uses a reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text4
  3006  00535E                     __ptext4:
  3007                           	opt callstack 0
  3008  00535E                     _UART1_put_buffer:
  3009                           	opt callstack 25
  3010                           
  3011                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3012                           
  3013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3014                           ;incstack = 0
  3015  00535E  0139               	movlb	57	; () banked
  3016  005360  9793               	bcf	147,3,b	;volatile
  3017                           
  3018                           ; BSR set to: 57
  3019                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3020                           ;stkvar	_bufData @ sp[(0)+-1]
  3021  005362  0E80               	movlw	low _uart1RxBuffer
  3022  005364  243A               	addwf	_uart1RxHead,w,c	;volatile
  3023  005366  6ED9               	movwf	fsr2l,c
  3024  005368  6ADA               	clrf	fsr2h,c
  3025  00536A  0E02               	movlw	high _uart1RxBuffer
  3026  00536C  22DA               	addwfc	fsr2h,f,c
  3027  00536E  0EFF               	movlw	-1
  3028  005370  006F FF8F FFDF     	movff	plusw1,indf2
  3029                           
  3030                           ; BSR set to: 57
  3031  005376  2A3A               	incf	_uart1RxHead,f,c	;volatile
  3032                           
  3033                           ; BSR set to: 57
  3034                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3035  005378  0E3F               	movlw	63
  3036  00537A  643A               	cpfsgt	_uart1RxHead,c
  3037  00537C  D001               	goto	l5046
  3038                           
  3039                           ; BSR set to: 57
  3040                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3041  00537E  6A3A               	clrf	_uart1RxHead,c	;volatile
  3042  005380                     l5046:
  3043                           
  3044                           ; BSR set to: 57
  3045                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3046  005380  2A38               	incf	_uart1RxCount,f,c	;volatile
  3047                           
  3048                           ; BSR set to: 57
  3049                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3050  005382  8793               	bsf	147,3,b	;volatile
  3051                           
  3052                           ; BSR set to: 57
  3053                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3054  005384  52E5               	movf	postdec1,f,c
  3055  005386  0012               	return		;funcret
  3056  005388                     __end_of_UART1_put_buffer:
  3057                           	opt callstack 0
  3058                           
  3059 ;; *************** function _UART1_is_tx_ready *****************
  3060 ;; Defined at:
  3061 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1  [STACK] unsigned char 
  3068 ;; Registers used:
  3069 ;;		btemp
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    3
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_secs_send
  3086 ;; This function uses a reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text5
  3090  005992                     __ptext5:
  3091                           	opt callstack 0
  3092  005992                     _UART1_is_tx_ready:
  3093                           	opt callstack 25
  3094                           
  3095                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3096                           
  3097                           ; BSR set to: 57
  3098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3099                           ;incstack = 0
  3100  005992  0060  F0EC  F03E   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3101                           
  3102                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3103  005998  0012               	return		;funcret
  3104  00599A                     __end_of_UART1_is_tx_ready:
  3105                           	opt callstack 0
  3106                           
  3107 ;; *************** function _secs_II_message *****************
  3108 ;; Defined at:
  3109 ;;		line 280 in file "gemsecs.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  stream          1  [STACK] unsigned char 
  3112 ;;  function        1  [STACK] unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  3  [STACK] struct response_type
  3117 ;; Registers used:
  3118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  3119 ;; Tracked objects:
  3120 ;;		On entry : 3F/0
  3121 ;;		On exit  : 3F/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    3
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_t_protocol
  3135 ;; This function uses a reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text6
  3139  003CBA                     __ptext6:
  3140                           	opt callstack 0
  3141  003CBA                     _secs_II_message:
  3142                           	opt callstack 26
  3143                           
  3144                           ;gemsecs.c: 280: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 281: {;gemsecs.c: 282:  static response_type block;;gemsecs.c: 284:  V.abort = LINK_
      +                          ERROR_NONE;
  3145                           
  3146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3147                           ;incstack = 0
  3148  003CBA  0100               	movlb	0	; () banked
  3149  003CBC  6BD8               	clrf	(_V+79)& (0+255),b	;volatile
  3150                           
  3151                           ;gemsecs.c: 286:  switch (stream) {
  3152  003CBE  D0D0               	goto	l5422
  3153  003CC0                     l5322:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;gemsecs.c: 290:    block.header = (uint8_t*) & H12[0];
  3157  003CC0  0EE6               	movlw	low _H12
  3158  003CC2  6E01               	movwf	secs_II_message@block,c
  3159  003CC4  6A02               	clrf	secs_II_message@block+1,c
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;gemsecs.c: 291:    block.length = sizeof(header12);
  3163  003CC6  0E0F               	movlw	15
  3164  003CC8  6E03               	movwf	secs_II_message@block+2,c
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;gemsecs.c: 292:    H12[0].block.block.systemb = V.systemb;
  3168  003CCA  C0D1  F0EA         	movff	_V+72,_H12+4	;volatile
  3169  003CCE  C0D2  F0EB         	movff	_V+73,_H12+5	;volatile
  3170  003CD2  C0D3  F0EC         	movff	_V+74,_H12+6	;volatile
  3171  003CD6  C0D4  F0ED         	movff	_V+75,_H12+7	;volatile
  3172                           
  3173                           ;gemsecs.c: 293:    break;
  3174  003CDA  D0D5               	goto	l5424
  3175  003CDC                     l5328:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;gemsecs.c: 295:    block.header = (uint8_t*) & H10[0];
  3179  003CDC  0E00               	movlw	low _H10
  3180  003CDE  6E01               	movwf	secs_II_message@block,c
  3181  003CE0  0E01               	movlw	high _H10
  3182  003CE2  6E02               	movwf	secs_II_message@block+1,c
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;gemsecs.c: 296:    block.length = sizeof(header10);
  3186  003CE4  0E0D               	movlw	13
  3187  003CE6  6E03               	movwf	secs_II_message@block+2,c
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;gemsecs.c: 297:    H10[0].block.block.systemb = V.systemb;
  3191  003CE8  C0D1  F102         	movff	_V+72,_H10+2	;volatile
  3192  003CEC  C0D2  F103         	movff	_V+73,_H10+3	;volatile
  3193  003CF0  C0D3  F104         	movff	_V+74,_H10+4	;volatile
  3194  003CF4  C0D4  F105         	movff	_V+75,_H10+5	;volatile
  3195                           
  3196                           ;gemsecs.c: 298:    break;
  3197  003CF8  D0C6               	goto	l5424
  3198  003CFA                     l5334:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;gemsecs.c: 300:    block.header = (uint8_t*) & H14[0];
  3202  003CFA  0EA3               	movlw	low _H14
  3203  003CFC  6E01               	movwf	secs_II_message@block,c
  3204  003CFE  0E01               	movlw	high _H14
  3205  003D00  6E02               	movwf	secs_II_message@block+1,c
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;gemsecs.c: 301:    block.length = sizeof(header14);
  3209  003D02  0E11               	movlw	17
  3210  003D04  6E03               	movwf	secs_II_message@block+2,c
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;gemsecs.c: 302:    H14[0].block.block.systemb = V.systemb;
  3214  003D06  C0D1  F1A9         	movff	_V+72,_H14+6	;volatile
  3215  003D0A  C0D2  F1AA         	movff	_V+73,_H14+7	;volatile
  3216  003D0E  C0D3  F1AB         	movff	_V+74,_H14+8	;volatile
  3217  003D12  C0D4  F1AC         	movff	_V+75,_H14+9	;volatile
  3218                           
  3219                           ;gemsecs.c: 303:    break;
  3220  003D16  D0B7               	goto	l5424
  3221  003D18                     l5340:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;gemsecs.c: 305:    block.header = (uint8_t*) & H18[0];
  3225  003D18  0E7A               	movlw	low _H18
  3226  003D1A  6E01               	movwf	secs_II_message@block,c
  3227  003D1C  0E01               	movlw	high _H18
  3228  003D1E  6E02               	movwf	secs_II_message@block+1,c
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;gemsecs.c: 306:    block.length = sizeof(header18);
  3232  003D20  0E15               	movlw	21
  3233  003D22  6E03               	movwf	secs_II_message@block+2,c
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;gemsecs.c: 307:    H18[0].block.block.systemb = V.systemb;
  3237  003D24  C0D1  F184         	movff	_V+72,_H18+10	;volatile
  3238  003D28  C0D2  F185         	movff	_V+73,_H18+11	;volatile
  3239  003D2C  C0D3  F186         	movff	_V+74,_H18+12	;volatile
  3240  003D30  C0D4  F187         	movff	_V+75,_H18+13	;volatile
  3241                           
  3242                           ;gemsecs.c: 308:    break;
  3243  003D34  D0A8               	goto	l5424
  3244  003D36                     l5346:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;gemsecs.c: 310:    block.header = (uint8_t*) & H17[0];
  3248  003D36  0E8F               	movlw	low _H17
  3249  003D38  6E01               	movwf	secs_II_message@block,c
  3250  003D3A  0E01               	movlw	high _H17
  3251  003D3C  6E02               	movwf	secs_II_message@block+1,c
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;gemsecs.c: 311:    block.length = sizeof(header17);
  3255  003D3E  0E14               	movlw	20
  3256  003D40  6E03               	movwf	secs_II_message@block+2,c
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;gemsecs.c: 312:    H17[0].block.block.systemb = V.systemb;
  3260  003D42  C0D1  F198         	movff	_V+72,_H17+9	;volatile
  3261  003D46  C0D2  F199         	movff	_V+73,_H17+10	;volatile
  3262  003D4A  C0D3  F19A         	movff	_V+74,_H17+11	;volatile
  3263  003D4E  C0D4  F19B         	movff	_V+75,_H17+12	;volatile
  3264                           
  3265                           ;gemsecs.c: 313:    break;
  3266  003D52  D099               	goto	l5424
  3267  003D54                     l5352:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;gemsecs.c: 315:    block.header = (uint8_t*) & H27[0];
  3271  003D54  0E41               	movlw	low _H27
  3272  003D56  6E01               	movwf	secs_II_message@block,c
  3273  003D58  0E01               	movlw	high _H27
  3274  003D5A  6E02               	movwf	secs_II_message@block+1,c
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;gemsecs.c: 316:    block.length = sizeof(header27);
  3278  003D5C  0E1E               	movlw	30
  3279  003D5E  6E03               	movwf	secs_II_message@block+2,c
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;gemsecs.c: 317:    H27[0].block.block.systemb = V.systemb;
  3283  003D60  C0D1  F154         	movff	_V+72,_H27+19	;volatile
  3284  003D64  C0D2  F155         	movff	_V+73,_H27+20	;volatile
  3285  003D68  C0D3  F156         	movff	_V+74,_H27+21	;volatile
  3286  003D6C  C0D4  F157         	movff	_V+75,_H27+22	;volatile
  3287                           
  3288                           ;gemsecs.c: 318:    break;
  3289  003D70  D08A               	goto	l5424
  3290  003D72                     l5358:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;gemsecs.c: 320:    block.header = (uint8_t*) & H10[2];
  3294  003D72  0E1A               	movlw	low (_H10+26)
  3295  003D74  6E01               	movwf	secs_II_message@block,c
  3296  003D76  0E01               	movlw	high (_H10+26)
  3297  003D78  6E02               	movwf	secs_II_message@block+1,c
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;gemsecs.c: 321:    block.length = sizeof(header10);
  3301  003D7A  0E0D               	movlw	13
  3302  003D7C  6E03               	movwf	secs_II_message@block+2,c
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;gemsecs.c: 322:    H10[2].block.block.systemb = V.systemb;
  3306  003D7E  C0D1  F11C         	movff	_V+72,_H10+28	;volatile
  3307  003D82  C0D2  F11D         	movff	_V+73,_H10+29	;volatile
  3308  003D86  C0D3  F11E         	movff	_V+74,_H10+30	;volatile
  3309  003D8A  C0D4  F11F         	movff	_V+75,_H10+31	;volatile
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;gemsecs.c: 323:    V.abort = LINK_ERROR_ABORT;
  3313  003D8E  0E07               	movlw	7
  3314  003D90  6FD8               	movwf	(_V+79)& (0+255),b	;volatile
  3315                           
  3316                           ;gemsecs.c: 324:    break;
  3317  003D92  D079               	goto	l5424
  3318  003D94                     l5368:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;stkvar	_function @ sp[(0)+-2]
  3322  003D94  0EFE               	movlw	-2
  3323  003D96  50E3               	movf	plusw1,w,c
  3324  003D98  6E48               	movwf	btemp+10,c
  3325  003D9A  6A49               	clrf	btemp+11,c
  3326                           
  3327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3328                           ; Switch size 1, requested type "simple"
  3329                           ; Number of cases is 1, Range of values is 0 to 0
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte            4     3 (average)
  3333                           ;	Chosen strategy is simple_byte
  3334  003D9C  5049               	movf	btemp+11,w,c
  3335  003D9E  0A00               	xorlw	0	; case 0
  3336  003DA0  A4D8               	btfss	status,2,c
  3337  003DA2  D7E7               	goto	l5358
  3338                           
  3339                           ; BSR set to: 0
  3340                           ; Switch size 1, requested type "simple"
  3341                           ; Number of cases is 6, Range of values is 1 to 14
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte           19    10 (average)
  3345                           ;	Chosen strategy is simple_byte
  3346  003DA4  5048               	movf	btemp+10,w,c
  3347  003DA6  0A01               	xorlw	1	; case 1
  3348  003DA8  B4D8               	btfsc	status,2,c
  3349  003DAA  D78A               	goto	l5322
  3350  003DAC  0A03               	xorlw	3	; case 2
  3351  003DAE  B4D8               	btfsc	status,2,c
  3352  003DB0  D795               	goto	l5328
  3353  003DB2  0A01               	xorlw	1	; case 3
  3354  003DB4  B4D8               	btfsc	status,2,c
  3355  003DB6  D7A1               	goto	l5334
  3356  003DB8  0A07               	xorlw	7	; case 4
  3357  003DBA  B4D8               	btfsc	status,2,c
  3358  003DBC  D7AD               	goto	l5340
  3359  003DBE  0A09               	xorlw	9	; case 13
  3360  003DC0  B4D8               	btfsc	status,2,c
  3361  003DC2  D7B9               	goto	l5346
  3362  003DC4  0A03               	xorlw	3	; case 14
  3363  003DC6  B4D8               	btfsc	status,2,c
  3364  003DC8  D7C5               	goto	l5352
  3365  003DCA  D7D3               	goto	l5358
  3366  003DCC                     l5370:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;gemsecs.c: 330:    block.header = (uint8_t*) & H24[0];
  3370  003DCC  0E5F               	movlw	low _H24
  3371  003DCE  6E01               	movwf	secs_II_message@block,c
  3372  003DD0  0E01               	movlw	high _H24
  3373  003DD2  6E02               	movwf	secs_II_message@block+1,c
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;gemsecs.c: 331:    block.length = sizeof(header24);
  3377  003DD4  0E1B               	movlw	27
  3378  003DD6  6E03               	movwf	secs_II_message@block+2,c
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;gemsecs.c: 332:    H24[0].block.block.systemb = V.systemb;
  3382  003DD8  C0D1  F16F         	movff	_V+72,_H24+16	;volatile
  3383  003DDC  C0D2  F170         	movff	_V+73,_H24+17	;volatile
  3384  003DE0  C0D3  F171         	movff	_V+74,_H24+18	;volatile
  3385  003DE4  C0D4  F172         	movff	_V+75,_H24+19	;volatile
  3386                           
  3387                           ;gemsecs.c: 333:    break;
  3388  003DE8  D04E               	goto	l5424
  3389  003DEA                     l5386:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;stkvar	_function @ sp[(0)+-2]
  3393  003DEA  0EFE               	movlw	-2
  3394  003DEC  50E3               	movf	plusw1,w,c
  3395  003DEE  6E48               	movwf	btemp+10,c
  3396  003DF0  6A49               	clrf	btemp+11,c
  3397                           
  3398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 0 to 0
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405  003DF2  5049               	movf	btemp+11,w,c
  3406  003DF4  0A00               	xorlw	0	; case 0
  3407  003DF6  A4D8               	btfss	status,2,c
  3408  003DF8  D7BC               	goto	l5358
  3409                           
  3410                           ; BSR set to: 0
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 17 to 17
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  003DFA  5048               	movf	btemp+10,w,c
  3418  003DFC  0A11               	xorlw	17	; case 17
  3419  003DFE  B4D8               	btfsc	status,2,c
  3420  003E00  D7E5               	goto	l5370
  3421  003E02  D7B7               	goto	l5358
  3422  003E04                     l5388:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;gemsecs.c: 345:    block.header = (uint8_t*) & H13[0];
  3426  003E04  0EB4               	movlw	low _H13
  3427  003E06  6E01               	movwf	secs_II_message@block,c
  3428  003E08  0E01               	movlw	high _H13
  3429  003E0A  6E02               	movwf	secs_II_message@block+1,c
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;gemsecs.c: 346:    block.length = sizeof(header13);
  3433  003E0C  0E10               	movlw	16
  3434  003E0E  6E03               	movwf	secs_II_message@block+2,c
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;gemsecs.c: 347:    H13[0].block.block.systemb = V.systemb;
  3438  003E10  C0D1  F1B9         	movff	_V+72,_H13+5	;volatile
  3439  003E14  C0D2  F1BA         	movff	_V+73,_H13+6	;volatile
  3440  003E18  C0D3  F1BB         	movff	_V+74,_H13+7	;volatile
  3441  003E1C  C0D4  F1BC         	movff	_V+75,_H13+8	;volatile
  3442                           
  3443                           ;gemsecs.c: 348:    break;
  3444  003E20  D032               	goto	l5424
  3445  003E22                     l5394:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;gemsecs.c: 350:    block.header = (uint8_t*) & H53[0];
  3449  003E22  0E86               	movlw	low _H53
  3450  003E24  6E01               	movwf	secs_II_message@block,c
  3451  003E26  0E03               	movlw	high _H53
  3452  003E28  6E02               	movwf	secs_II_message@block+1,c
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;gemsecs.c: 351:    block.length = sizeof(header53);
  3456  003E2A  0E38               	movlw	56
  3457  003E2C  6E03               	movwf	secs_II_message@block+2,c
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;gemsecs.c: 352:    H53[0].block.block.systemb = V.systemb;
  3461  003E2E  C0D1  F3B3         	movff	_V+72,_H53+45	;volatile
  3462  003E32  C0D2  F3B4         	movff	_V+73,_H53+46	;volatile
  3463  003E36  C0D3  F3B5         	movff	_V+74,_H53+47	;volatile
  3464  003E3A  C0D4  F3B6         	movff	_V+75,_H53+48	;volatile
  3465                           
  3466                           ;gemsecs.c: 353:    break;
  3467  003E3E  D023               	goto	l5424
  3468  003E40                     l5410:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;stkvar	_function @ sp[(0)+-2]
  3472  003E40  0EFE               	movlw	-2
  3473  003E42  50E3               	movf	plusw1,w,c
  3474  003E44  6E48               	movwf	btemp+10,c
  3475  003E46  6A49               	clrf	btemp+11,c
  3476                           
  3477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 1, Range of values is 0 to 0
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte            4     3 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484  003E48  5049               	movf	btemp+11,w,c
  3485  003E4A  0A00               	xorlw	0	; case 0
  3486  003E4C  A4D8               	btfss	status,2,c
  3487  003E4E  D791               	goto	l5358
  3488                           
  3489                           ; BSR set to: 0
  3490                           ; Switch size 1, requested type "simple"
  3491                           ; Number of cases is 2, Range of values is 11 to 12
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte            7     4 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496  003E50  5048               	movf	btemp+10,w,c
  3497  003E52  0A0B               	xorlw	11	; case 11
  3498  003E54  B4D8               	btfsc	status,2,c
  3499  003E56  D7D6               	goto	l5388
  3500  003E58  0A07               	xorlw	7	; case 12
  3501  003E5A  B4D8               	btfsc	status,2,c
  3502  003E5C  D7E2               	goto	l5394
  3503  003E5E  D789               	goto	l5358
  3504  003E60                     l5422:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;stkvar	_stream @ sp[(0)+-1]
  3508  003E60  0EFF               	movlw	-1
  3509  003E62  50E3               	movf	plusw1,w,c
  3510  003E64  6E48               	movwf	btemp+10,c
  3511  003E66  6A49               	clrf	btemp+11,c
  3512                           
  3513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3514                           ; Switch size 1, requested type "simple"
  3515                           ; Number of cases is 1, Range of values is 0 to 0
  3516                           ; switch strategies available:
  3517                           ; Name         Instructions Cycles
  3518                           ; simple_byte            4     3 (average)
  3519                           ;	Chosen strategy is simple_byte
  3520  003E68  5049               	movf	btemp+11,w,c
  3521  003E6A  0A00               	xorlw	0	; case 0
  3522  003E6C  A4D8               	btfss	status,2,c
  3523  003E6E  D781               	goto	l5358
  3524                           
  3525                           ; BSR set to: 0
  3526                           ; Switch size 1, requested type "simple"
  3527                           ; Number of cases is 3, Range of values is 1 to 6
  3528                           ; switch strategies available:
  3529                           ; Name         Instructions Cycles
  3530                           ; simple_byte           10     6 (average)
  3531                           ;	Chosen strategy is simple_byte
  3532  003E70  5048               	movf	btemp+10,w,c
  3533  003E72  0A01               	xorlw	1	; case 1
  3534  003E74  B4D8               	btfsc	status,2,c
  3535  003E76  D78E               	goto	l5368
  3536  003E78  0A03               	xorlw	3	; case 2
  3537  003E7A  B4D8               	btfsc	status,2,c
  3538  003E7C  D7B6               	goto	l5386
  3539  003E7E  0A04               	xorlw	4	; case 6
  3540  003E80  B4D8               	btfsc	status,2,c
  3541  003E82  D7DE               	goto	l5410
  3542  003E84  D776               	goto	l5358
  3543  003E86                     l5424:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;gemsecs.c: 370:  return(block);
  3547  003E86  0060  F004  F03E   	movff	secs_II_message@block,btemp
  3548  003E8C  0060  F008  F03F   	movff	secs_II_message@block+1,btemp+1
  3549  003E92  0060  F00C  F040   	movff	secs_II_message@block+2,btemp+2
  3550                           
  3551                           ; BSR set to: 0
  3552                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3553  003E98  52E5               	movf	postdec1,f,c
  3554  003E9A  52E5               	movf	postdec1,f,c
  3555  003E9C  0012               	return		;funcret
  3556  003E9E                     __end_of_secs_II_message:
  3557                           	opt callstack 0
  3558                           
  3559 ;; *************** function _sprintf *****************
  3560 ;; Defined at:
  3561 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  s               1  [STACK] PTR unsigned char 
  3564 ;;		 -> V(86), 
  3565 ;;  fmt             1  [STACK] PTR const unsigned char 
  3566 ;;		 -> STR_11(21), STR_10(17), STR_9(17), STR_8(19), 
  3567 ;;		 -> STR_7(23), STR_6(6), STR_5(14), STR_4(15), 
  3568 ;;		 -> STR_2(12), STR_1(17), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  f               5  [STACK] struct _IO_FILE
  3571 ;;  ap              2  [STACK] PTR void [1]
  3572 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3573 ;;  ret             2    0        int 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2  [STACK] int 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:   11
  3590 ;; This function calls:
  3591 ;;		_vfprintf
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text7
  3598  004692                     __ptext7:
  3599                           	opt callstack 0
  3600  004692                     _sprintf:
  3601                           	opt callstack 0
  3602                           
  3603                           ; BSR set to: 0
  3604                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3605  004692  0E07               	movlw	7
  3606  004694  26E1               	addwf	fsr1l,f,c
  3607  004696  0E00               	movlw	0
  3608  004698  22E2               	addwfc	fsr1h,f,c
  3609                           
  3610                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3611                           
  3612                           ;incstack = 0
  3613  00469A  0EF6               	movlw	246
  3614  00469C  24E1               	addwf	fsr1l,w,c
  3615  00469E  6E48               	movwf	btemp+10,c
  3616  0046A0  0EFF               	movlw	255
  3617  0046A2  20E2               	addwfc	fsr1h,w,c
  3618  0046A4  6E49               	movwf	btemp+11,c
  3619                           
  3620                           ;stkvar	_ap @ sp[(-7)+5]
  3621  0046A6  0EFF               	movlw	-1
  3622  0046A8  0060  F127  FFE3   	movff	btemp+11,plusw1
  3623  0046AE  0EFE               	movlw	-2
  3624  0046B0  0060  F123  FFE3   	movff	btemp+10,plusw1
  3625                           
  3626                           ;stkvar	_s @ sp[(-7)+-2]
  3627  0046B6  0EF7               	movlw	-9
  3628  0046B8  006F FF8C  F049    	movff	plusw1,btemp+11
  3629                           
  3630                           ;stkvar	_f @ sp[(-7)+0]
  3631  0046BE  0EF9               	movlw	-7
  3632  0046C0  0060  F127  FFE3   	movff	btemp+11,plusw1
  3633                           
  3634                           ;stkvar	_f @ sp[(-7)+0]
  3635  0046C6  0EFA               	movlw	250
  3636  0046C8  24E1               	addwf	fsr1l,w,c
  3637  0046CA  6ED9               	movwf	fsr2l,c
  3638  0046CC  0EFF               	movlw	255
  3639  0046CE  20E2               	addwfc	fsr1h,w,c
  3640  0046D0  6EDA               	movwf	fsr2h,c
  3641  0046D2  0E00               	movlw	0
  3642  0046D4  6EDE               	movwf	postinc2,c
  3643  0046D6  0E00               	movlw	0
  3644  0046D8  6EDD               	movwf	postdec2,c
  3645                           
  3646                           ;stkvar	_f @ sp[(-7)+0]
  3647  0046DA  0EFC               	movlw	252
  3648  0046DC  24E1               	addwf	fsr1l,w,c
  3649  0046DE  6ED9               	movwf	fsr2l,c
  3650  0046E0  0EFF               	movlw	255
  3651  0046E2  20E2               	addwfc	fsr1h,w,c
  3652  0046E4  6EDA               	movwf	fsr2h,c
  3653  0046E6  0E00               	movlw	0
  3654  0046E8  6EDE               	movwf	postinc2,c
  3655  0046EA  0E00               	movlw	0
  3656  0046EC  6EDD               	movwf	postdec2,c
  3657                           
  3658                           ;stkvar	_ap @ sp[(-7)+5]
  3659  0046EE  0EFE               	movlw	254
  3660  0046F0  24E1               	addwf	fsr1l,w,c
  3661  0046F2  6E3E               	movwf	btemp,c
  3662  0046F4  0EFF               	movlw	255
  3663  0046F6  20E2               	addwfc	fsr1h,w,c
  3664  0046F8  6E3F               	movwf	btemp+1,c
  3665  0046FA  0060  F0FB  FFE6   	movff	btemp,postinc1
  3666  004700  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  3667                           
  3668                           ;stkvar	_fmt @ sp[(-9)+-3]
  3669  004706  0EF4               	movlw	-12
  3670  004708  50E3               	movf	plusw1,w,c
  3671  00470A  6EE6               	movwf	postinc1,c
  3672                           
  3673                           ;stkvar	_f @ sp[(-10)+0]
  3674  00470C  0EF6               	movlw	246
  3675  00470E  24E1               	addwf	fsr1l,w,c
  3676  004710  6E3E               	movwf	btemp,c
  3677  004712  0EFF               	movlw	255
  3678  004714  20E2               	addwfc	fsr1h,w,c
  3679  004716  6E3F               	movwf	btemp+1,c
  3680  004718  0060  F0FB  FFE6   	movff	btemp,postinc1
  3681  00471E  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  3682  004724  EC9F  F025         	call	_vfprintf	;wreg free
  3683                           
  3684                           ;stkvar	_f @ sp[(-7)+0]
  3685  004728  0EFA               	movlw	250
  3686  00472A  24E1               	addwf	fsr1l,w,c
  3687  00472C  6ED9               	movwf	fsr2l,c
  3688  00472E  0EFF               	movlw	255
  3689  004730  20E2               	addwfc	fsr1h,w,c
  3690  004732  6EDA               	movwf	fsr2h,c
  3691  004734  50DF               	movf	indf2,w,c
  3692  004736  6E49               	movwf	btemp+11,c
  3693                           
  3694                           ;stkvar	_s @ sp[(-7)+-2]
  3695  004738  0EF7               	movlw	-9
  3696  00473A  50E3               	movf	plusw1,w,c
  3697  00473C  2449               	addwf	btemp+11,w,c
  3698  00473E  6ED9               	movwf	fsr2l,c
  3699  004740  6ADA               	clrf	fsr2h,c
  3700  004742  0E00               	movlw	0
  3701  004744  6EDF               	movwf	indf2,c
  3702                           
  3703                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3704  004746  0EF9               	movlw	249
  3705  004748  26E1               	addwf	fsr1l,f,c
  3706  00474A  0EFF               	movlw	255
  3707  00474C  22E2               	addwfc	fsr1h,f,c
  3708  00474E  52E5               	movf	postdec1,f,c
  3709  004750  50E7               	movf	indf1,w,c
  3710  004752  5EE1               	subwf	fsr1l,f,c
  3711  004754  0E00               	movlw	0
  3712  004756  5AE2               	subwfb	fsr1h,f,c
  3713  004758  0012               	return		;funcret
  3714  00475A                     __end_of_sprintf:
  3715                           	opt callstack 0
  3716                           
  3717 ;; *************** function _r_protocol *****************
  3718 ;; Defined at:
  3719 ;;		line 42 in file "gemsecs.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  r_link          1  [STACK] PTR enum E16164
  3722 ;;		 -> V(86), 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  rxData          1  [STACK] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1  [STACK] enum E16902
  3727 ;; Registers used:
  3728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    5
  3741 ;; This function calls:
  3742 ;;		_StartTimer
  3743 ;;		_TimerDone
  3744 ;;		_UART1_Read
  3745 ;;		_UART1_Write
  3746 ;;		_UART1_is_rx_ready
  3747 ;;		_WaitMs
  3748 ;;		_run_checksum
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text8
  3755  00300E                     __ptext8:
  3756                           	opt callstack 0
  3757  00300E                     _r_protocol:
  3758                           	opt callstack 0
  3759                           
  3760                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3761  00300E  52E6               	movf	postinc1,f,c
  3762                           
  3763                           ;gemsecs.c: 42: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          47:  switch (*r_link) {
  3764                           
  3765                           ;incstack = 0
  3766  003010  D13D               	goto	l5764
  3767  003012                     l5658:
  3768                           
  3769                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  3770  003012  ECCD  F02C         	call	_UART1_is_rx_ready	;wreg free
  3771  003016  503E               	movf	btemp,w,c
  3772  003018  B4D8               	btfsc	status,2,c
  3773  00301A  D159               	goto	l5766
  3774                           
  3775                           ;gemsecs.c: 50:    rxData = UART1_Read();
  3776  00301C  EC11  F029         	call	_UART1_Read	;wreg free
  3777                           
  3778                           ;stkvar	_rxData @ sp[(-1)+0]
  3779  003020  0EFF               	movlw	-1
  3780  003022  0060  F0FB  FFE3   	movff	btemp,plusw1
  3781                           
  3782                           ; BSR set to: 57
  3783                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  3784                           ;stkvar	_rxData @ sp[(-1)+0]
  3785  003028  0EFF               	movlw	-1
  3786  00302A  006F FF8C  F03E    	movff	plusw1,btemp
  3787  003030  0E05               	movlw	5
  3788  003032  183E               	xorwf	btemp,w,c
  3789  003034  A4D8               	btfss	status,2,c
  3790  003036  D14B               	goto	l5766
  3791                           
  3792                           ; BSR set to: 57
  3793                           ;gemsecs.c: 52:     V.error = LINK_ERROR_NONE;
  3794  003038  0100               	movlb	0	; () banked
  3795  00303A  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;gemsecs.c: 53:     *r_link = LINK_STATE_ENQ;
  3799                           ;stkvar	_r_link @ sp[(-1)+-1]
  3800  00303C  0EFE               	movlw	-2
  3801  00303E  50E3               	movf	plusw1,w,c
  3802  003040  6ED9               	movwf	fsr2l,c
  3803  003042  6ADA               	clrf	fsr2h,c
  3804  003044  0E01               	movlw	1
  3805  003046  D109               	goto	L12
  3806  003048                     l1520:
  3807                           
  3808                           ;gemsecs.c: 58:   rxData_l = 0;
  3809  003048  6A31               	clrf	r_protocol@rxData_l,c
  3810                           
  3811                           ;gemsecs.c: 59:   UART1_Write(0x04);
  3812  00304A  0E04               	movlw	4
  3813  00304C  6EE6               	movwf	postinc1,c
  3814  00304E  ECF2  F028         	call	_UART1_Write	;wreg free
  3815                           
  3816                           ; BSR set to: 57
  3817                           ;gemsecs.c: 60:   StartTimer(TMR_T2, 2000);
  3818  003052  0ED0               	movlw	208
  3819  003054  6EE6               	movwf	postinc1,c
  3820  003056  0E07               	movlw	7
  3821  003058  6EE6               	movwf	postinc1,c
  3822  00305A  0E02               	movlw	2
  3823  00305C  6EE6               	movwf	postinc1,c
  3824  00305E  EC4F  F029         	call	_StartTimer	;wreg free
  3825                           
  3826                           ;gemsecs.c: 61:   *r_link = LINK_STATE_EOT;
  3827                           ;stkvar	_r_link @ sp[(-1)+-1]
  3828  003062  0EFE               	movlw	-2
  3829  003064  50E3               	movf	plusw1,w,c
  3830  003066  6ED9               	movwf	fsr2l,c
  3831  003068  6ADA               	clrf	fsr2h,c
  3832  00306A  0E02               	movlw	2
  3833  00306C  D0F6               	goto	L12
  3834  00306E                     l5674:
  3835                           
  3836                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  3837  00306E  0E02               	movlw	2
  3838  003070  6EE6               	movwf	postinc1,c
  3839  003072  EC6B  F02B         	call	_TimerDone	;wreg free
  3840  003076  503E               	movf	btemp,w,c
  3841  003078  B4D8               	btfsc	status,2,c
  3842  00307A  D017               	goto	l5684
  3843                           
  3844                           ;gemsecs.c: 70:    if (!retry--) {
  3845  00307C  065E               	decf	r_protocol@retry,f,c
  3846  00307E  285E               	incf	r_protocol@retry,w,c
  3847  003080  A4D8               	btfss	status,2,c
  3848  003082  D00D               	goto	l5682
  3849                           
  3850                           ;gemsecs.c: 71:     V.error = LINK_ERROR_T2;
  3851  003084  0E02               	movlw	2
  3852  003086  0100               	movlb	0	; () banked
  3853  003088  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  3854                           
  3855                           ;gemsecs.c: 72:     V.failed_receive = 1;
  3856  00308A  51DE               	movf	(_V+85)& (0+255),w,b	;volatile
  3857  00308C  0BF0               	andlw	-16
  3858  00308E  0901               	iorlw	1
  3859  003090  6FDE               	movwf	(_V+85)& (0+255),b	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;gemsecs.c: 73:     *r_link = LINK_STATE_NAK;
  3863                           ;stkvar	_r_link @ sp[(-1)+-1]
  3864  003092  0EFE               	movlw	-2
  3865  003094  50E3               	movf	plusw1,w,c
  3866  003096  6ED9               	movwf	fsr2l,c
  3867  003098  6ADA               	clrf	fsr2h,c
  3868  00309A  0E05               	movlw	5
  3869  00309C  D0DE               	goto	L12
  3870  00309E                     l5682:
  3871                           
  3872                           ;gemsecs.c: 75:     *r_link = LINK_STATE_IDLE;
  3873                           ;stkvar	_r_link @ sp[(-1)+-1]
  3874  00309E  0EFE               	movlw	-2
  3875  0030A0  50E3               	movf	plusw1,w,c
  3876  0030A2  6ED9               	movwf	fsr2l,c
  3877  0030A4  6ADA               	clrf	fsr2h,c
  3878  0030A6  0E00               	movlw	0
  3879  0030A8  D0D8               	goto	L12
  3880  0030AA                     l5684:
  3881                           
  3882                           ;gemsecs.c: 78:    if (UART1_is_rx_ready()) {
  3883  0030AA  ECCD  F02C         	call	_UART1_is_rx_ready	;wreg free
  3884  0030AE  503E               	movf	btemp,w,c
  3885  0030B0  B4D8               	btfsc	status,2,c
  3886  0030B2  D10D               	goto	l5766
  3887                           
  3888                           ;gemsecs.c: 79:     rxData = UART1_Read();
  3889  0030B4  EC11  F029         	call	_UART1_Read	;wreg free
  3890                           
  3891                           ;stkvar	_rxData @ sp[(-1)+0]
  3892  0030B8  0EFF               	movlw	-1
  3893  0030BA  0060  F0FB  FFE3   	movff	btemp,plusw1
  3894                           
  3895                           ; BSR set to: 57
  3896                           ;gemsecs.c: 80:     if (rxData_l == 0) {
  3897  0030C0  5031               	movf	r_protocol@rxData_l,w,c
  3898  0030C2  A4D8               	btfss	status,2,c
  3899  0030C4  D00C               	goto	l5696
  3900                           
  3901                           ; BSR set to: 57
  3902                           ;gemsecs.c: 81:      r_block.length = rxData;
  3903                           ;stkvar	_rxData @ sp[(-1)+0]
  3904  0030C6  0EFF               	movlw	-1
  3905  0030C8  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3906                           
  3907                           ; BSR set to: 57
  3908                           ;gemsecs.c: 82:      run_checksum(0, 1);
  3909  0030CE  0E01               	movlw	1
  3910  0030D0  6EE6               	movwf	postinc1,c
  3911  0030D2  0E00               	movlw	0
  3912  0030D4  6EE6               	movwf	postinc1,c
  3913  0030D6  ECEF  F029         	call	_run_checksum	;wreg free
  3914                           
  3915                           ;gemsecs.c: 83:      rxData_l++;
  3916  0030DA  2A31               	incf	r_protocol@rxData_l,f,c
  3917                           
  3918                           ;gemsecs.c: 84:     } else {
  3919  0030DC  D0F8               	goto	l5766
  3920  0030DE                     l5696:
  3921                           
  3922                           ; BSR set to: 57
  3923                           ;gemsecs.c: 88:      if (rxData_l <= sizeof(block10))
  3924  0030DE  0E0B               	movlw	11
  3925  0030E0  6031               	cpfslt	r_protocol@rxData_l,c
  3926  0030E2  D00C               	goto	l5700
  3927                           
  3928                           ; BSR set to: 57
  3929                           ;gemsecs.c: 89:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3930                           ;stkvar	_rxData @ sp[(-1)+0]
  3931  0030E4  5031               	movf	r_protocol@rxData_l,w,c
  3932  0030E6  0819               	sublw	low (_H10+25)
  3933  0030E8  6ED9               	movwf	fsr2l,c
  3934  0030EA  0E00               	movlw	0
  3935  0030EC  A0D8               	btfss	status,0,c
  3936  0030EE  2AE8               	incf	wreg,f,c
  3937  0030F0  0801               	sublw	high (_H10+25)
  3938  0030F2  6EDA               	movwf	fsr2h,c
  3939  0030F4  0EFF               	movlw	-1
  3940  0030F6  006F FF8F FFDF     	movff	plusw1,indf2
  3941  0030FC                     l5700:
  3942                           
  3943                           ; BSR set to: 57
  3944                           ;gemsecs.c: 90:      if (rxData_l <= r_block.length)
  3945  0030FC  5031               	movf	r_protocol@rxData_l,w,c
  3946  0030FE  0100               	movlb	0	; () banked
  3947  003100  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3948  003102  A0D8               	btfss	status,0,c
  3949  003104  D00D               	goto	l5704
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;gemsecs.c: 91:       V.r_checksum = run_checksum(rxData, 0);
  3953  003106  0E00               	movlw	0
  3954  003108  6EE6               	movwf	postinc1,c
  3955                           
  3956                           ;stkvar	_rxData @ sp[(-2)+0]
  3957  00310A  0EFE               	movlw	-2
  3958  00310C  50E3               	movf	plusw1,w,c
  3959  00310E  6EE6               	movwf	postinc1,c
  3960  003110  ECEF  F029         	call	_run_checksum	;wreg free
  3961  003114  0060  F0F8  F0D9   	movff	btemp,_V+80	;volatile
  3962  00311A  0060  F0FC  F0DA   	movff	btemp+1,_V+81	;volatile
  3963  003120                     l5704:
  3964                           
  3965                           ;gemsecs.c: 93:      if (rxData_l == r_block.length + 1)
  3966  003120  5031               	movf	r_protocol@rxData_l,w,c
  3967  003122  6E48               	movwf	btemp+10,c
  3968  003124  6A49               	clrf	btemp+11,c
  3969  003126  0100               	movlb	0	; () banked
  3970  003128  516C               	movf	(_r_block+12)& (0+255),w,b
  3971  00312A  6E46               	movwf	btemp+8,c
  3972  00312C  6A47               	clrf	btemp+9,c
  3973  00312E  0E01               	movlw	1
  3974  003130  2646               	addwf	btemp+8,f,c
  3975  003132  0E00               	movlw	0
  3976  003134  2247               	addwfc	btemp+9,f,c
  3977  003136  5048               	movf	btemp+10,w,c
  3978  003138  1846               	xorwf	btemp+8,w,c
  3979  00313A  E109               	bnz	l5708
  3980  00313C  5049               	movf	btemp+11,w,c
  3981  00313E  1847               	xorwf	btemp+9,w,c
  3982  003140  A4D8               	btfss	status,2,c
  3983  003142  D005               	goto	l5708
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;gemsecs.c: 94:       H10[1].checksum = (uint16_t) rxData << 8;
  3987                           ;stkvar	_rxData @ sp[(-1)+0]
  3988  003144  0EFF               	movlw	-1
  3989  003146  50E3               	movf	plusw1,w,c
  3990  003148  0101               	movlb	1	; () banked
  3991  00314A  6F0E               	movwf	(_H10+14)& (0+255),b
  3992  00314C  6B0D               	clrf	(_H10+13)& (0+255),b
  3993  00314E                     l5708:
  3994                           
  3995                           ;gemsecs.c: 95:      if (rxData_l == r_block.length + 2)
  3996  00314E  5031               	movf	r_protocol@rxData_l,w,c
  3997  003150  6E48               	movwf	btemp+10,c
  3998  003152  6A49               	clrf	btemp+11,c
  3999  003154  0100               	movlb	0	; () banked
  4000  003156  516C               	movf	(_r_block+12)& (0+255),w,b
  4001  003158  6E46               	movwf	btemp+8,c
  4002  00315A  6A47               	clrf	btemp+9,c
  4003  00315C  0E02               	movlw	2
  4004  00315E  2646               	addwf	btemp+8,f,c
  4005  003160  0E00               	movlw	0
  4006  003162  2247               	addwfc	btemp+9,f,c
  4007  003164  5048               	movf	btemp+10,w,c
  4008  003166  1846               	xorwf	btemp+8,w,c
  4009  003168  E10A               	bnz	l5712
  4010  00316A  5049               	movf	btemp+11,w,c
  4011  00316C  1847               	xorwf	btemp+9,w,c
  4012  00316E  A4D8               	btfss	status,2,c
  4013  003170  D006               	goto	l5712
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;gemsecs.c: 96:       H10[1].checksum += rxData;
  4017                           ;stkvar	_rxData @ sp[(-1)+0]
  4018  003172  0EFF               	movlw	-1
  4019  003174  50E3               	movf	plusw1,w,c
  4020  003176  0101               	movlb	1	; () banked
  4021  003178  270D               	addwf	(_H10+13)& (0+255),f,b
  4022  00317A  0E00               	movlw	0
  4023  00317C  230E               	addwfc	(_H10+14)& (0+255),f,b
  4024  00317E                     l5712:
  4025                           
  4026                           ;gemsecs.c: 98:      rxData_l++;
  4027  00317E  2A31               	incf	r_protocol@rxData_l,f,c
  4028                           
  4029                           ;gemsecs.c: 99:      if (rxData_l > (r_block.length + 2)) {
  4030  003180  5031               	movf	r_protocol@rxData_l,w,c
  4031  003182  6E48               	movwf	btemp+10,c
  4032  003184  6A49               	clrf	btemp+11,c
  4033  003186  0100               	movlb	0	; () banked
  4034  003188  516C               	movf	(_r_block+12)& (0+255),w,b
  4035  00318A  6E46               	movwf	btemp+8,c
  4036  00318C  6A47               	clrf	btemp+9,c
  4037  00318E  0E02               	movlw	2
  4038  003190  2646               	addwf	btemp+8,f,c
  4039  003192  0E00               	movlw	0
  4040  003194  2247               	addwfc	btemp+9,f,c
  4041  003196  5048               	movf	btemp+10,w,c
  4042  003198  5C46               	subwf	btemp+8,w,c
  4043  00319A  5047               	movf	btemp+9,w,c
  4044  00319C  0A80               	xorlw	128
  4045  00319E  6E3E               	movwf	btemp,c
  4046  0031A0  5049               	movf	btemp+11,w,c
  4047  0031A2  0A80               	xorlw	128
  4048  0031A4  583E               	subwfb	btemp,w,c
  4049  0031A6  B0D8               	btfsc	status,0,c
  4050  0031A8  D092               	goto	l5766
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;gemsecs.c: 100:       if (V.r_checksum == H10[1].checksum) {
  4054  0031AA  0101               	movlb	1	; () banked
  4055  0031AC  510D               	movf	(_H10+13)& (0+255),w,b
  4056  0031AE  0100               	movlb	0	; () banked
  4057  0031B0  19D9               	xorwf	(_V+80)& (0+255),w,b	;volatile
  4058  0031B2  E10E               	bnz	l5722
  4059  0031B4  0101               	movlb	1	; () banked
  4060  0031B6  510E               	movf	(_H10+14)& (0+255),w,b
  4061  0031B8  0100               	movlb	0	; () banked
  4062  0031BA  19DA               	xorwf	(_V+81)& (0+255),w,b	;volatile
  4063  0031BC  A4D8               	btfss	status,2,c
  4064  0031BE  D008               	goto	l5722
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;gemsecs.c: 101:        *r_link = LINK_STATE_ACK;
  4068                           ;stkvar	_r_link @ sp[(-1)+-1]
  4069  0031C0  0EFE               	movlw	-2
  4070  0031C2  50E3               	movf	plusw1,w,c
  4071  0031C4  6ED9               	movwf	fsr2l,c
  4072  0031C6  6ADA               	clrf	fsr2h,c
  4073  0031C8  0E03               	movlw	3
  4074  0031CA  D047               	goto	L12
  4075  0031CC                     l5720:
  4076  0031CC  EC11  F029         	call	_UART1_Read	;wreg free
  4077  0031D0                     l5722:
  4078                           
  4079                           ;gemsecs.c: 103:        while (UART1_is_rx_ready())
  4080  0031D0  ECCD  F02C         	call	_UART1_is_rx_ready	;wreg free
  4081  0031D4  503E               	movf	btemp,w,c
  4082  0031D6  A4D8               	btfss	status,2,c
  4083  0031D8  D7F9               	goto	l5720
  4084                           
  4085                           ;gemsecs.c: 105:        WaitMs(500);
  4086  0031DA  0EF4               	movlw	244
  4087  0031DC  6EE6               	movwf	postinc1,c
  4088  0031DE  0E01               	movlw	1
  4089  0031E0  6EE6               	movwf	postinc1,c
  4090  0031E2  ECC4  F029         	call	_WaitMs	;wreg free
  4091                           
  4092                           ;gemsecs.c: 106:        V.error = LINK_ERROR_CHECKSUM;
  4093  0031E6  0E05               	movlw	5
  4094  0031E8  0100               	movlb	0	; () banked
  4095  0031EA  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;gemsecs.c: 107:        V.failed_receive = 2;
  4099  0031EC  51DE               	movf	(_V+85)& (0+255),w,b	;volatile
  4100  0031EE  0BF0               	andlw	-16
  4101  0031F0  0902               	iorlw	2
  4102  0031F2  D74E               	goto	L13
  4103  0031F4                     l5732:
  4104                           
  4105                           ;gemsecs.c: 116:   V.stream = H10[1].block.block.stream;
  4106  0031F4  0101               	movlb	1	; () banked
  4107  0031F6  5116               	movf	(_H10+22)& (0+255),w,b
  4108  0031F8  0B7F               	andlw	127
  4109  0031FA  0100               	movlb	0	; () banked
  4110  0031FC  6FD5               	movwf	(_V+76)& (0+255),b	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;gemsecs.c: 117:   V.function = H10[1].block.block.function;
  4114  0031FE  C115  F0D6         	movff	_H10+21,_V+77	;volatile
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;gemsecs.c: 118:   V.systemb = H10[1].block.block.systemb;
  4118  003202  C10F  F0D1         	movff	_H10+15,_V+72	;volatile
  4119  003206  C110  F0D2         	movff	_H10+16,_V+73	;volatile
  4120  00320A  C111  F0D3         	movff	_H10+17,_V+74	;volatile
  4121  00320E  C112  F0D4         	movff	_H10+18,_V+75	;volatile
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;gemsecs.c: 119:   V.rbit = H10[1].block.block.rbit;
  4125  003212  0101               	movlb	1	; () banked
  4126  003214  AF18               	btfss	(_H10+24)& (0+255),7,b
  4127  003216  D003               	bra	u2995
  4128  003218  0100               	movlb	0	; () banked
  4129  00321A  81DD               	bsf	(_V+84)& (0+255),0,b	;volatile
  4130  00321C  D002               	bra	u2997
  4131  00321E                     u2995:
  4132  00321E  0100               	movlb	0	; () banked
  4133  003220  91DD               	bcf	(_V+84)& (0+255),0,b	;volatile
  4134  003222                     u2997:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;gemsecs.c: 120:   V.wbit = H10[1].block.block.wbit;
  4138  003222  0101               	movlb	1	; () banked
  4139  003224  AF16               	btfss	(_H10+22)& (0+255),7,b
  4140  003226  D003               	bra	u3005
  4141  003228  0100               	movlb	0	; () banked
  4142  00322A  83DD               	bsf	(_V+84)& (0+255),1,b	;volatile
  4143  00322C  D002               	bra	u3007
  4144  00322E                     u3005:
  4145  00322E  0100               	movlb	0	; () banked
  4146  003230  93DD               	bcf	(_V+84)& (0+255),1,b	;volatile
  4147  003232                     u3007:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;gemsecs.c: 121:   V.ebit = H10[1].block.block.ebit;
  4151  003232  0101               	movlb	1	; () banked
  4152  003234  AF14               	btfss	(_H10+20)& (0+255),7,b
  4153  003236  D003               	bra	u3015
  4154  003238  0100               	movlb	0	; () banked
  4155  00323A  85DD               	bsf	(_V+84)& (0+255),2,b	;volatile
  4156  00323C  D002               	bra	u3017
  4157  00323E                     u3015:
  4158  00323E  0100               	movlb	0	; () banked
  4159  003240  95DD               	bcf	(_V+84)& (0+255),2,b	;volatile
  4160  003242                     u3017:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;gemsecs.c: 122:   UART1_Write(0x06);
  4164  003242  0E06               	movlw	6
  4165  003244  6EE6               	movwf	postinc1,c
  4166  003246  ECF2  F028         	call	_UART1_Write	;wreg free
  4167                           
  4168                           ; BSR set to: 57
  4169                           ;gemsecs.c: 123:   V.failed_receive = 0;
  4170  00324A  0EF0               	movlw	-16
  4171  00324C  0100               	movlb	0	; () banked
  4172  00324E  17DE               	andwf	(_V+85)& (0+255),f,b	;volatile
  4173                           
  4174                           ;gemsecs.c: 124:   *r_link = LINK_STATE_DONE;
  4175                           ;stkvar	_r_link @ sp[(-1)+-1]
  4176  003250  0EFE               	movlw	-2
  4177  003252  50E3               	movf	plusw1,w,c
  4178  003254  6ED9               	movwf	fsr2l,c
  4179  003256  6ADA               	clrf	fsr2h,c
  4180  003258  0E04               	movlw	4
  4181  00325A                     L12:
  4182  00325A  6EDF               	movwf	indf2,c
  4183                           
  4184                           ;gemsecs.c: 125:   break;
  4185  00325C  D038               	goto	l5766
  4186  00325E                     l5748:
  4187                           
  4188                           ;gemsecs.c: 127:   UART1_Write(0x15);
  4189  00325E  0E15               	movlw	21
  4190  003260  6EE6               	movwf	postinc1,c
  4191  003262  ECF2  F028         	call	_UART1_Write	;wreg free
  4192                           
  4193                           ; BSR set to: 57
  4194                           ;gemsecs.c: 128:   *r_link = LINK_STATE_ERROR;
  4195                           ;stkvar	_r_link @ sp[(-1)+-1]
  4196  003266  0EFE               	movlw	-2
  4197  003268  50E3               	movf	plusw1,w,c
  4198  00326A  6ED9               	movwf	fsr2l,c
  4199  00326C  6ADA               	clrf	fsr2h,c
  4200  00326E  0E06               	movlw	6
  4201  003270  6EDF               	movwf	indf2,c
  4202                           
  4203                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4204  003272  D002               	goto	l5754
  4205  003274                     l5752:
  4206                           
  4207                           ; BSR set to: 57
  4208                           ;gemsecs.c: 130:    UART1_Read();
  4209  003274  EC11  F029         	call	_UART1_Read	;wreg free
  4210  003278                     l5754:
  4211                           
  4212                           ; BSR set to: 57
  4213                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4214  003278  5038               	movf	_uart1RxCount,w,c	;volatile
  4215  00327A  A4D8               	btfss	status,2,c
  4216  00327C  D7FB               	goto	l5752
  4217                           
  4218                           ; BSR set to: 57
  4219                           ;gemsecs.c: 132:   retry = 3;
  4220  00327E  0E03               	movlw	3
  4221  003280  6E5E               	movwf	r_protocol@retry,c
  4222                           
  4223                           ;gemsecs.c: 133:   break;
  4224  003282  D025               	goto	l5766
  4225  003284                     l5758:
  4226                           
  4227                           ;gemsecs.c: 137:   V.failed_receive = 0;
  4228  003284  0EF0               	movlw	-16
  4229  003286  0100               	movlb	0	; () banked
  4230  003288  17DE               	andwf	(_V+85)& (0+255),f,b	;volatile
  4231  00328A  D709               	goto	l5682
  4232  00328C                     l5764:
  4233                           
  4234                           ;stkvar	_r_link @ sp[(-1)+-1]
  4235  00328C  0EFE               	movlw	-2
  4236  00328E  50E3               	movf	plusw1,w,c
  4237  003290  6ED9               	movwf	fsr2l,c
  4238  003292  6ADA               	clrf	fsr2h,c
  4239  003294  50DF               	movf	indf2,w,c
  4240  003296  6E48               	movwf	btemp+10,c
  4241  003298  6A49               	clrf	btemp+11,c
  4242                           
  4243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4244                           ; Switch size 1, requested type "simple"
  4245                           ; Number of cases is 1, Range of values is 0 to 0
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte            4     3 (average)
  4249                           ;	Chosen strategy is simple_byte
  4250  00329A  5049               	movf	btemp+11,w,c
  4251  00329C  0A00               	xorlw	0	; case 0
  4252  00329E  A4D8               	btfss	status,2,c
  4253  0032A0  D6FE               	goto	l5682
  4254                           
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 7, Range of values is 0 to 6
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte           22    12 (average)
  4260                           ;	Chosen strategy is simple_byte
  4261  0032A2  5048               	movf	btemp+10,w,c
  4262  0032A4  0A00               	xorlw	0	; case 0
  4263  0032A6  B4D8               	btfsc	status,2,c
  4264  0032A8  D6B4               	goto	l5658
  4265  0032AA  0A01               	xorlw	1	; case 1
  4266  0032AC  B4D8               	btfsc	status,2,c
  4267  0032AE  D6CC               	goto	l1520
  4268  0032B0  0A03               	xorlw	3	; case 2
  4269  0032B2  B4D8               	btfsc	status,2,c
  4270  0032B4  D6DC               	goto	l5674
  4271  0032B6  0A01               	xorlw	1	; case 3
  4272  0032B8  B4D8               	btfsc	status,2,c
  4273  0032BA  D79C               	goto	l5732
  4274  0032BC  0A07               	xorlw	7	; case 4
  4275  0032BE  B4D8               	btfsc	status,2,c
  4276  0032C0  D7E1               	goto	l5758
  4277  0032C2  0A01               	xorlw	1	; case 5
  4278  0032C4  B4D8               	btfsc	status,2,c
  4279  0032C6  D7CB               	goto	l5748
  4280  0032C8  0A03               	xorlw	3	; case 6
  4281  0032CA  A4D8               	btfss	status,2,c
  4282  0032CC  D6E8               	goto	l5682
  4283  0032CE                     l5766:
  4284                           
  4285                           ;gemsecs.c: 143:  return *r_link;
  4286                           ;stkvar	_r_link @ sp[(-1)+-1]
  4287  0032CE  0EFE               	movlw	-2
  4288  0032D0  50E3               	movf	plusw1,w,c
  4289  0032D2  6ED9               	movwf	fsr2l,c
  4290  0032D4  6ADA               	clrf	fsr2h,c
  4291  0032D6  50DF               	movf	indf2,w,c
  4292  0032D8  6E3E               	movwf	btemp,c
  4293                           
  4294                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4295  0032DA  52E5               	movf	postdec1,f,c
  4296  0032DC  52E5               	movf	postdec1,f,c
  4297  0032DE  0012               	return		;funcret
  4298  0032E0                     __end_of_r_protocol:
  4299                           	opt callstack 0
  4300                           
  4301 ;; *************** function _run_checksum *****************
  4302 ;; Defined at:
  4303 ;;		line 31 in file "gemsecs.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  byte_block      1  [STACK] unsigned char 
  4306 ;;  clear           1  [STACK] _Bool 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2  [STACK] unsigned short 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4313 ;; Tracked objects:
  4314 ;;		On entry : 6/39
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_r_protocol
  4329 ;; This function uses a reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text9
  4333  0053DE                     __ptext9:
  4334                           	opt callstack 0
  4335  0053DE                     _run_checksum:
  4336                           	opt callstack 26
  4337                           
  4338                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  4339                           ;stkvar	_clear @ sp[(0)+-2]
  4340                           
  4341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4342                           ;incstack = 0
  4343  0053DE  0EFE               	movlw	-2
  4344  0053E0  50E3               	movf	plusw1,w,c
  4345  0053E2  B4D8               	btfsc	status,2,c
  4346  0053E4  D002               	goto	l5314
  4347                           
  4348                           ;gemsecs.c: 36:   sum = 0;
  4349  0053E6  6A2A               	clrf	run_checksum@sum,c
  4350  0053E8  6A2B               	clrf	run_checksum@sum+1,c
  4351  0053EA                     l5314:
  4352                           
  4353                           ;gemsecs.c: 38:  sum += byte_block;
  4354                           ;stkvar	_byte_block @ sp[(0)+-1]
  4355  0053EA  0EFF               	movlw	-1
  4356  0053EC  50E3               	movf	plusw1,w,c
  4357  0053EE  262A               	addwf	run_checksum@sum,f,c
  4358  0053F0  0E00               	movlw	0
  4359  0053F2  222B               	addwfc	run_checksum@sum+1,f,c
  4360                           
  4361                           ;gemsecs.c: 39:  return sum;
  4362  0053F4  0060  F0A8  F03E   	movff	run_checksum@sum,btemp
  4363  0053FA  0060  F0AC  F03F   	movff	run_checksum@sum+1,btemp+1
  4364                           
  4365                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4366  005400  52E5               	movf	postdec1,f,c
  4367  005402  52E5               	movf	postdec1,f,c
  4368  005404  0012               	return		;funcret
  4369  005406                     __end_of_run_checksum:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _WaitMs *****************
  4373 ;; Defined at:
  4374 ;;		line 31 in file "timers.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  numMilliseco    2  [STACK] unsigned short 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1  [STACK] void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/3B
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    4
  4395 ;; This function calls:
  4396 ;;		_StartTimer
  4397 ;;		_TimerDone
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;;		_r_protocol
  4401 ;; This function uses a reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text10
  4405  005388                     __ptext10:
  4406                           	opt callstack 0
  4407  005388                     _WaitMs:
  4408                           	opt callstack 25
  4409                           
  4410                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4411                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4412                           
  4413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4414                           ;incstack = 0
  4415  005388  0EFE               	movlw	-2
  4416  00538A  006F FF8F FFE6     	movff	plusw1,postinc1
  4417  005390  006F FF8F FFE6     	movff	plusw1,postinc1
  4418  005396  0E00               	movlw	0
  4419  005398  6EE6               	movwf	postinc1,c
  4420  00539A  EC4F  F029         	call	_StartTimer	;wreg free
  4421  00539E                     l5252:
  4422                           
  4423                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4424  00539E  0E00               	movlw	0
  4425  0053A0  6EE6               	movwf	postinc1,c
  4426  0053A2  EC6B  F02B         	call	_TimerDone	;wreg free
  4427  0053A6  503E               	movf	btemp,w,c
  4428  0053A8  B4D8               	btfsc	status,2,c
  4429  0053AA  D7F9               	goto	l5252
  4430                           
  4431                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4432  0053AC  52E5               	movf	postdec1,f,c
  4433  0053AE  52E5               	movf	postdec1,f,c
  4434  0053B0  0012               	return		;funcret
  4435  0053B2                     __end_of_WaitMs:
  4436                           	opt callstack 0
  4437                           
  4438 ;; *************** function _TimerDone *****************
  4439 ;; Defined at:
  4440 ;;		line 20 in file "timers.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  timer           1  [STACK] unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1  [STACK] _Bool 
  4447 ;; Registers used:
  4448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    3
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_r_protocol
  4465 ;;		_t_protocol
  4466 ;;		_WaitMs
  4467 ;; This function uses a reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text11
  4471  0056D6                     __ptext11:
  4472                           	opt callstack 0
  4473  0056D6                     _TimerDone:
  4474                           	opt callstack 26
  4475                           
  4476                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4477                           ;stkvar	_timer @ sp[(0)+-1]
  4478                           
  4479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4480                           ;incstack = 0
  4481  0056D6  0EFF               	movlw	-1
  4482  0056D8  50E3               	movf	plusw1,w,c
  4483  0056DA  0D02               	mullw	2
  4484  0056DC  50F3               	movf	prodl,w,c
  4485  0056DE  0F79               	addlw	low _tickCount
  4486  0056E0  6ED9               	movwf	fsr2l,c
  4487  0056E2  6ADA               	clrf	fsr2h,c
  4488  0056E4  50DE               	movf	postinc2,w,c
  4489  0056E6  10DE               	iorwf	postinc2,w,c
  4490  0056E8  A4D8               	btfss	status,2,c
  4491  0056EA  D002               	goto	l5098
  4492                           
  4493                           ;timers.c: 23:   return 1;
  4494  0056EC  0E01               	movlw	1
  4495  0056EE  D001               	goto	L14
  4496  0056F0                     l5098:
  4497                           
  4498                           ;timers.c: 25:  return 0;
  4499  0056F0  0E00               	movlw	0
  4500  0056F2                     L14:
  4501  0056F2  6E3E               	movwf	btemp,c
  4502                           
  4503                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4504  0056F4  52E5               	movf	postdec1,f,c
  4505  0056F6  0012               	return		;funcret
  4506  0056F8                     __end_of_TimerDone:
  4507                           	opt callstack 0
  4508                           
  4509 ;; *************** function _StartTimer *****************
  4510 ;; Defined at:
  4511 ;;		line 12 in file "timers.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  timer           1  [STACK] unsigned char 
  4514 ;;  count           2  [STACK] unsigned short 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1  [STACK] void 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/39
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    3
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_r_protocol
  4537 ;;		_t_protocol
  4538 ;;		_WaitMs
  4539 ;; This function uses a reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text12
  4543  00529E                     __ptext12:
  4544                           	opt callstack 0
  4545  00529E                     _StartTimer:
  4546                           	opt callstack 26
  4547                           
  4548                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4549                           ;stkvar	_count @ sp[(0)+-3]
  4550                           
  4551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4552                           ;incstack = 0
  4553  00529E  0EFD               	movlw	-3
  4554  0052A0  006F FF8C  F048    	movff	plusw1,btemp+10
  4555  0052A6  0EFE               	movlw	-2
  4556  0052A8  006F FF8C  F049    	movff	plusw1,btemp+11
  4557  0052AE  90D8               	bcf	status,0,c
  4558  0052B0  3448               	rlcf	btemp+10,w,c
  4559  0052B2  6E46               	movwf	btemp+8,c
  4560  0052B4  3449               	rlcf	btemp+11,w,c
  4561  0052B6  6E47               	movwf	btemp+9,c
  4562                           
  4563                           ;stkvar	_timer @ sp[(0)+-1]
  4564  0052B8  0EFF               	movlw	-1
  4565  0052BA  50E3               	movf	plusw1,w,c
  4566  0052BC  0D02               	mullw	2
  4567  0052BE  50F3               	movf	prodl,w,c
  4568  0052C0  0F79               	addlw	low _tickCount
  4569  0052C2  6ED9               	movwf	fsr2l,c
  4570  0052C4  6ADA               	clrf	fsr2h,c
  4571  0052C6  0060  F11B  FFDE   	movff	btemp+8,postinc2
  4572  0052CC  0060  F11F  FFDD   	movff	btemp+9,postdec2
  4573                           
  4574                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4575  0052D2  52E5               	movf	postdec1,f,c
  4576  0052D4  52E5               	movf	postdec1,f,c
  4577  0052D6  52E5               	movf	postdec1,f,c
  4578  0052D8  0012               	return		;funcret
  4579  0052DA                     __end_of_StartTimer:
  4580                           	opt callstack 0
  4581                           
  4582 ;; *************** function _UART1_is_rx_ready *****************
  4583 ;; Defined at:
  4584 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1  [STACK] unsigned char 
  4591 ;; Registers used:
  4592 ;;		btemp
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    3
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_r_protocol
  4609 ;;		_t_protocol
  4610 ;; This function uses a reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text13
  4614  00599A                     __ptext13:
  4615                           	opt callstack 0
  4616  00599A                     _UART1_is_rx_ready:
  4617                           	opt callstack 26
  4618                           
  4619                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4620                           
  4621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4622                           ;incstack = 0
  4623  00599A  0060  F0E0  F03E   	movff	_uart1RxCount,btemp	;volatile
  4624                           
  4625                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4626  0059A0  0012               	return		;funcret
  4627  0059A2                     __end_of_UART1_is_rx_ready:
  4628                           	opt callstack 0
  4629                           
  4630 ;; *************** function _UART1_Write *****************
  4631 ;; Defined at:
  4632 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  txData          1  [STACK] unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1  [STACK] void 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 3F/39
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    3
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_r_protocol
  4657 ;;		_t_protocol
  4658 ;;		_secs_send
  4659 ;; This function uses a reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text14
  4663  0051E4                     __ptext14:
  4664                           	opt callstack 0
  4665  0051E4                     _UART1_Write:
  4666                           	opt callstack 25
  4667                           
  4668                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4669                           
  4670                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4671                           
  4672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4673                           ;incstack = 0
  4674  0051E4  503B               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4675  0051E6  B4D8               	btfsc	status,2,c
  4676  0051E8  D7FD               	goto	_UART1_Write
  4677                           
  4678                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4679  0051EA  0139               	movlb	57	; () banked
  4680  0051EC  B993               	btfsc	147,4,b	;volatile
  4681  0051EE  D005               	goto	l579
  4682                           
  4683                           ; BSR set to: 57
  4684                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4685                           ;stkvar	_txData @ sp[(0)+-1]
  4686  0051F0  0EFF               	movlw	-1
  4687  0051F2  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4688                           
  4689                           ;mcc_generated_files/uart1.c: 186:  } else {
  4690  0051F8  D011               	goto	l5034
  4691  0051FA                     l579:
  4692                           
  4693                           ; BSR set to: 57
  4694                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4695  0051FA  9993               	bcf	147,4,b	;volatile
  4696                           
  4697                           ; BSR set to: 57
  4698                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4699                           ;stkvar	_txData @ sp[(0)+-1]
  4700  0051FC  0EC0               	movlw	low _uart1TxBuffer
  4701  0051FE  243D               	addwf	_uart1TxHead,w,c	;volatile
  4702  005200  6ED9               	movwf	fsr2l,c
  4703  005202  6ADA               	clrf	fsr2h,c
  4704  005204  0E02               	movlw	high _uart1TxBuffer
  4705  005206  22DA               	addwfc	fsr2h,f,c
  4706  005208  0EFF               	movlw	-1
  4707  00520A  006F FF8F FFDF     	movff	plusw1,indf2
  4708                           
  4709                           ; BSR set to: 57
  4710  005210  2A3D               	incf	_uart1TxHead,f,c	;volatile
  4711                           
  4712                           ; BSR set to: 57
  4713                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4714  005212  0E3F               	movlw	63
  4715  005214  643D               	cpfsgt	_uart1TxHead,c
  4716  005216  D001               	goto	l5032
  4717                           
  4718                           ; BSR set to: 57
  4719                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4720  005218  6A3D               	clrf	_uart1TxHead,c	;volatile
  4721  00521A                     l5032:
  4722                           
  4723                           ; BSR set to: 57
  4724                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4725  00521A  063B               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4726  00521C                     l5034:
  4727                           
  4728                           ; BSR set to: 57
  4729                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4730  00521C  8993               	bsf	147,4,b	;volatile
  4731                           
  4732                           ; BSR set to: 57
  4733                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4734  00521E  52E5               	movf	postdec1,f,c
  4735  005220  0012               	return		;funcret
  4736  005222                     __end_of_UART1_Write:
  4737                           	opt callstack 0
  4738                           
  4739 ;; *************** function _UART1_Read *****************
  4740 ;; Defined at:
  4741 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  readValue       1  [STACK] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1  [STACK] unsigned char 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 3F/39
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_r_protocol
  4766 ;;		_t_protocol
  4767 ;; This function uses a reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text15
  4771  005222                     __ptext15:
  4772                           	opt callstack 0
  4773  005222                     _UART1_Read:
  4774                           	opt callstack 0
  4775                           
  4776                           ; BSR set to: 57
  4777                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4778  005222  52E6               	movf	postinc1,f,c
  4779  005224                     
  4780                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4781                           
  4782                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4783  005224  5038               	movf	_uart1RxCount,w,c	;volatile
  4784  005226  B4D8               	btfsc	status,2,c
  4785  005228  D7FD               	goto	l5216
  4786                           
  4787                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4788  00522A  0E80               	movlw	low _uart1RxBuffer
  4789  00522C  2439               	addwf	_uart1RxTail,w,c	;volatile
  4790  00522E  6ED9               	movwf	fsr2l,c
  4791  005230  6ADA               	clrf	fsr2h,c
  4792  005232  0E02               	movlw	high _uart1RxBuffer
  4793  005234  22DA               	addwfc	fsr2h,f,c
  4794  005236  50DF               	movf	indf2,w,c
  4795  005238  6E49               	movwf	btemp+11,c
  4796                           
  4797                           ;stkvar	_readValue @ sp[(-1)+0]
  4798  00523A  0EFF               	movlw	-1
  4799  00523C  0060  F127  FFE3   	movff	btemp+11,plusw1
  4800  005242  2A39               	incf	_uart1RxTail,f,c	;volatile
  4801                           
  4802                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4803  005244  0E3F               	movlw	63
  4804  005246  6439               	cpfsgt	_uart1RxTail,c
  4805  005248  D001               	goto	l572
  4806                           
  4807                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4808  00524A  6A39               	clrf	_uart1RxTail,c	;volatile
  4809  00524C                     l572:
  4810                           
  4811                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4812  00524C  0139               	movlb	57	; () banked
  4813  00524E  9793               	bcf	147,3,b	;volatile
  4814                           
  4815                           ; BSR set to: 57
  4816                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4817  005250  0638               	decf	_uart1RxCount,f,c	;volatile
  4818                           
  4819                           ; BSR set to: 57
  4820                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4821  005252  8793               	bsf	147,3,b	;volatile
  4822                           
  4823                           ; BSR set to: 57
  4824                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4825                           ;stkvar	_readValue @ sp[(-1)+0]
  4826  005254  0EFF               	movlw	-1
  4827  005256  006F FF8C  F03E    	movff	plusw1,btemp
  4828                           
  4829                           ; BSR set to: 57
  4830                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4831  00525C  52E5               	movf	postdec1,f,c
  4832  00525E  0012               	return		;funcret
  4833  005260                     __end_of_UART1_Read:
  4834                           	opt callstack 0
  4835                           
  4836 ;; *************** function _init_display *****************
  4837 ;; Defined at:
  4838 ;;		line 35 in file "eadog.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1  [STACK] void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 3F/3D
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    5
  4859 ;; This function calls:
  4860 ;;		_ringBufS_init
  4861 ;;		_send_lcd_cmd
  4862 ;;		_send_lcd_cmd_long
  4863 ;;		_wdtdelay
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;; This function uses a reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text16
  4870  004406                     __ptext16:
  4871                           	opt callstack 0
  4872  004406                     _init_display:
  4873                           	opt callstack 25
  4874                           
  4875                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4876                           
  4877                           ; BSR set to: 57
  4878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4879                           ;incstack = 0
  4880  004406  0E43               	movlw	low _ring_buf1
  4881  004408  0100               	movlb	0	; () banked
  4882  00440A  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4883  00440C  0E03               	movlw	high _ring_buf1
  4884  00440E  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4885                           
  4886                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4887  004410  0E00               	movlw	low _ring_buf2
  4888  004412  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4889  004414  0E03               	movlw	high _ring_buf2
  4890  004416  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4894  004418  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4895  00441E  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4896  004424  EC2B  F02A         	call	_ringBufS_init	;wreg free
  4897                           
  4898                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4899  004428  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4900  00442E  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4901  004434  EC2B  F02A         	call	_ringBufS_init	;wreg free
  4902                           
  4903                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4904  004438  80BE               	bsf	16318,0,c	;volatile
  4905  00443A  84BC               	bsf	16316,2,c	;volatile
  4906                           
  4907                           ;eadog.c: 44:  wdtdelay(350000);
  4908  00443C  0E30               	movlw	48
  4909  00443E  6EE6               	movwf	postinc1,c
  4910  004440  0E57               	movlw	87
  4911  004442  6EE6               	movwf	postinc1,c
  4912  004444  0E05               	movlw	5
  4913  004446  6EE6               	movwf	postinc1,c
  4914  004448  0E00               	movlw	0
  4915  00444A  6EE6               	movwf	postinc1,c
  4916  00444C  ECA8  F027         	call	_wdtdelay	;wreg free
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4920  004450  0E39               	movlw	57
  4921  004452  6EE6               	movwf	postinc1,c
  4922  004454  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4926  004458  0E1D               	movlw	29
  4927  00445A  6EE6               	movwf	postinc1,c
  4928  00445C  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4932  004460  0E50               	movlw	80
  4933  004462  6EE6               	movwf	postinc1,c
  4934  004464  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4938  004468  0E6C               	movlw	108
  4939  00446A  6EE6               	movwf	postinc1,c
  4940  00446C  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4944  004470  0E76               	movlw	118
  4945  004472  6EE6               	movwf	postinc1,c
  4946  004474  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4950  004478  0E38               	movlw	56
  4951  00447A  6EE6               	movwf	postinc1,c
  4952  00447C  EC03  F02A         	call	_send_lcd_cmd_long	;wreg free
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4956  004480  0E0F               	movlw	15
  4957  004482  6EE6               	movwf	postinc1,c
  4958  004484  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4962  004488  0E01               	movlw	1
  4963  00448A  6EE6               	movwf	postinc1,c
  4964  00448C  EC03  F02A         	call	_send_lcd_cmd_long	;wreg free
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4968  004490  0E02               	movlw	2
  4969  004492  6EE6               	movwf	postinc1,c
  4970  004494  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4974  004498  0E06               	movlw	6
  4975  00449A  6EE6               	movwf	postinc1,c
  4976  00449C  EC17  F02A         	call	_send_lcd_cmd	;wreg free
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;eadog.c: 55:  wdtdelay(30);
  4980  0044A0  0E1E               	movlw	30
  4981  0044A2  6EE6               	movwf	postinc1,c
  4982  0044A4  0E00               	movlw	0
  4983  0044A6  6EE6               	movwf	postinc1,c
  4984  0044A8  0E00               	movlw	0
  4985  0044AA  6EE6               	movwf	postinc1,c
  4986  0044AC  0E00               	movlw	0
  4987  0044AE  6EE6               	movwf	postinc1,c
  4988  0044B0  ECA8  F027         	call	_wdtdelay	;wreg free
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4992  0044B4  0E02               	movlw	2
  4993  0044B6  013D               	movlb	61	; () banked
  4994  0044B8  6F16               	movwf	22,b	;volatile
  4995                           
  4996                           ; BSR set to: 61
  4997                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4998  0044BA  0E40               	movlw	64
  4999  0044BC  6F15               	movwf	21,b	;volatile
  5000                           
  5001                           ; BSR set to: 61
  5002                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  5003  0044BE  0E83               	movlw	131
  5004  0044C0  6F14               	movwf	20,b	;volatile
  5005                           
  5006                           ; BSR set to: 61
  5007                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  5008  0044C2  931A               	bcf	26,1,b	;volatile
  5009                           
  5010                           ; BSR set to: 61
  5011                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  5012  0044C4  0E3F               	movlw	-193
  5013  0044C6  013B               	movlb	59	; () banked
  5014  0044C8  17FD               	andwf	253,f,b	;volatile
  5015                           
  5016                           ; BSR set to: 59
  5017                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  5018  0044CA  9BFD               	bcf	253,5,b	;volatile
  5019                           
  5020                           ; BSR set to: 59
  5021                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  5022  0044CC  51FD               	movf	253,w,b	;volatile
  5023  0044CE  0BF9               	andlw	-7
  5024  0044D0  0902               	iorlw	2
  5025  0044D2  6FFD               	movwf	253,b	;volatile
  5026                           
  5027                           ; BSR set to: 59
  5028                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  5029  0044D4  0EE7               	movlw	-25
  5030  0044D6  17FD               	andwf	253,f,b	;volatile
  5031                           
  5032                           ; BSR set to: 59
  5033                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  5034  0044D8  81FD               	bsf	253,0,b	;volatile
  5035                           
  5036                           ; BSR set to: 59
  5037                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  5038  0044DA  0E43               	movlw	low _ring_buf1
  5039  0044DC  6FF9               	movwf	249,b	;volatile
  5040  0044DE  0E03               	movlw	high _ring_buf1
  5041  0044E0  6FFA               	movwf	250,b	;volatile
  5042  0044E2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5043  0044E4  6FFB               	movwf	251,b	;volatile
  5044                           
  5045                           ; BSR set to: 59
  5046                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  5047  0044E6  9BFC               	bcf	252,5,b	;volatile
  5048                           
  5049                           ; BSR set to: 59
  5050                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  5051  0044E8  013D               	movlb	61	; () banked
  5052  0044EA  831A               	bsf	26,1,b	;volatile
  5053                           
  5054                           ; BSR set to: 61
  5055                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  5056  0044EC  90BE               	bcf	16318,0,c	;volatile
  5057                           
  5058                           ; BSR set to: 61
  5059                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5060  0044EE  0012               	return		;funcret
  5061  0044F0                     __end_of_init_display:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function _send_lcd_cmd_long *****************
  5065 ;; Defined at:
  5066 ;;		line 97 in file "eadog.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  cmd             1  [STACK] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1  [STACK] void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5075 ;; Tracked objects:
  5076 ;;		On entry : 3F/0
  5077 ;;		On exit  : 3F/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    4
  5087 ;; This function calls:
  5088 ;;		_SPI1_Exchange8bit
  5089 ;;		_wdtdelay
  5090 ;; This function is called by:
  5091 ;;		_init_display
  5092 ;; This function uses a reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text17
  5096  005406                     __ptext17:
  5097                           	opt callstack 0
  5098  005406                     _send_lcd_cmd_long:
  5099                           	opt callstack 25
  5100                           
  5101                           ; BSR set to: 61
  5102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5103                           ;incstack = 0
  5104                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5105  005406  92BC               	bcf	16316,1,c	;volatile
  5106                           
  5107                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5108  005408  94BC               	bcf	16316,2,c	;volatile
  5109                           
  5110                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5111                           ;stkvar	_cmd @ sp[(0)+-1]
  5112  00540A  0EFF               	movlw	-1
  5113  00540C  50E3               	movf	plusw1,w,c
  5114  00540E  6EE6               	movwf	postinc1,c
  5115  005410  EC02  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5116                           
  5117                           ; BSR set to: 57
  5118                           ;eadog.c: 102:  wdtdelay(800);
  5119  005414  0E20               	movlw	32
  5120  005416  6EE6               	movwf	postinc1,c
  5121  005418  0E03               	movlw	3
  5122  00541A  6EE6               	movwf	postinc1,c
  5123  00541C  0E00               	movlw	0
  5124  00541E  6EE6               	movwf	postinc1,c
  5125  005420  0E00               	movlw	0
  5126  005422  6EE6               	movwf	postinc1,c
  5127  005424  ECA8  F027         	call	_wdtdelay	;wreg free
  5128                           
  5129                           ; BSR set to: 0
  5130  005428  82BC               	bsf	16316,1,c	;volatile
  5131                           
  5132                           ; BSR set to: 0
  5133                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5134  00542A  52E5               	movf	postdec1,f,c
  5135  00542C  0012               	return		;funcret
  5136  00542E                     __end_of_send_lcd_cmd_long:
  5137                           	opt callstack 0
  5138                           
  5139 ;; *************** function _send_lcd_cmd *****************
  5140 ;; Defined at:
  5141 ;;		line 85 in file "eadog.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  cmd             1  [STACK] unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1  [STACK] void 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5150 ;; Tracked objects:
  5151 ;;		On entry : 3F/0
  5152 ;;		On exit  : 3F/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    4
  5162 ;; This function calls:
  5163 ;;		_SPI1_Exchange8bit
  5164 ;;		_wdtdelay
  5165 ;; This function is called by:
  5166 ;;		_init_display
  5167 ;; This function uses a reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text18
  5171  00542E                     __ptext18:
  5172                           	opt callstack 0
  5173  00542E                     _send_lcd_cmd:
  5174                           	opt callstack 25
  5175                           
  5176                           ; BSR set to: 0
  5177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5178                           ;incstack = 0
  5179                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5180  00542E  92BC               	bcf	16316,1,c	;volatile
  5181                           
  5182                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5183  005430  94BC               	bcf	16316,2,c	;volatile
  5184                           
  5185                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5186                           ;stkvar	_cmd @ sp[(0)+-1]
  5187  005432  0EFF               	movlw	-1
  5188  005434  50E3               	movf	plusw1,w,c
  5189  005436  6EE6               	movwf	postinc1,c
  5190  005438  EC02  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5191                           
  5192                           ; BSR set to: 57
  5193                           ;eadog.c: 90:  wdtdelay(30);
  5194  00543C  0E1E               	movlw	30
  5195  00543E  6EE6               	movwf	postinc1,c
  5196  005440  0E00               	movlw	0
  5197  005442  6EE6               	movwf	postinc1,c
  5198  005444  0E00               	movlw	0
  5199  005446  6EE6               	movwf	postinc1,c
  5200  005448  0E00               	movlw	0
  5201  00544A  6EE6               	movwf	postinc1,c
  5202  00544C  ECA8  F027         	call	_wdtdelay	;wreg free
  5203                           
  5204                           ; BSR set to: 0
  5205  005450  82BC               	bsf	16316,1,c	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5209  005452  52E5               	movf	postdec1,f,c
  5210  005454  0012               	return		;funcret
  5211  005456                     __end_of_send_lcd_cmd:
  5212                           	opt callstack 0
  5213                           
  5214 ;; *************** function _SPI1_Exchange8bit *****************
  5215 ;; Defined at:
  5216 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  data            1  [STACK] unsigned char 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1  [STACK] unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 3F/39
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    3
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_send_lcd_cmd
  5241 ;;		_send_lcd_cmd_long
  5242 ;; This function uses a reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text19
  5246  005804                     __ptext19:
  5247                           	opt callstack 0
  5248  005804                     _SPI1_Exchange8bit:
  5249                           	opt callstack 25
  5250                           
  5251                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5252                           
  5253                           ; BSR set to: 0
  5254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5255                           ;incstack = 0
  5256  005804  0E01               	movlw	1
  5257  005806  013D               	movlb	61	; () banked
  5258  005808  6F12               	movwf	18,b	;volatile
  5259                           
  5260                           ; BSR set to: 61
  5261                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5262                           ;stkvar	_data @ sp[(0)+-1]
  5263  00580A  0EFF               	movlw	-1
  5264  00580C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5265  005812                     l847:
  5266                           
  5267                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5268  005812  0139               	movlb	57	; () banked
  5269  005814  A9A2               	btfss	162,4,b	;volatile
  5270  005816  D7FD               	goto	l847
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5274  005818  006F F440  F03E    	movff	15632,btemp	;volatile
  5275                           
  5276                           ; BSR set to: 57
  5277                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5278  00581E  52E5               	movf	postdec1,f,c
  5279  005820  0012               	return		;funcret
  5280  005822                     __end_of_SPI1_Exchange8bit:
  5281                           	opt callstack 0
  5282                           
  5283 ;; *************** function _ringBufS_init *****************
  5284 ;; Defined at:
  5285 ;;		line 22 in file "ringbufs.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  _this           2  [STACK] PTR volatile struct ring
  5288 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1  [STACK] void 
  5293 ;; Registers used:
  5294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    4
  5307 ;; This function calls:
  5308 ;;		_memset
  5309 ;; This function is called by:
  5310 ;;		_init_display
  5311 ;; This function uses a reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text20
  5315  005456                     __ptext20:
  5316                           	opt callstack 0
  5317  005456                     _ringBufS_init:
  5318                           	opt callstack 25
  5319                           
  5320                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5321                           
  5322                           ; BSR set to: 57
  5323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5324                           ;incstack = 0
  5325  005456  0E43               	movlw	67
  5326  005458  6EE6               	movwf	postinc1,c
  5327  00545A  0E00               	movlw	0
  5328  00545C  6EE6               	movwf	postinc1,c
  5329  00545E  0E00               	movlw	0
  5330  005460  6EE6               	movwf	postinc1,c
  5331  005462  0E00               	movlw	0
  5332  005464  6EE6               	movwf	postinc1,c
  5333                           
  5334                           ;stkvar	__this @ sp[(-4)+-2]
  5335  005466  0EFA               	movlw	-6
  5336  005468  006F FF8F FFE6     	movff	plusw1,postinc1
  5337  00546E  006F FF8F FFE6     	movff	plusw1,postinc1
  5338  005474  EC91  F016         	call	_memset	;wreg free
  5339                           
  5340                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5341  005478  52E5               	movf	postdec1,f,c
  5342  00547A  52E5               	movf	postdec1,f,c
  5343  00547C  0012               	return		;funcret
  5344  00547E                     __end_of_ringBufS_init:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5348 ;; Defined at:
  5349 ;;		line 218 in file "eadog.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  r               1  [STACK] unsigned char 
  5352 ;;  c               1  [STACK] unsigned char 
  5353 ;;  strPtr          1  [STACK] PTR unsigned char 
  5354 ;;		 -> V(86), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1  [STACK] void 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5361 ;; Tracked objects:
  5362 ;;		On entry : 3F/0
  5363 ;;		On exit  : 3F/3B
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:   13
  5373 ;; This function calls:
  5374 ;;		_eaDogM_WriteString
  5375 ;;		_send_lcd_cmd_dma
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text21
  5382  0052DA                     __ptext21:
  5383                           	opt callstack 0
  5384  0052DA                     _eaDogM_WriteStringAtPos:
  5385                           	opt callstack 17
  5386                           
  5387                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5388                           ;stkvar	_c @ sp[(0)+-2]
  5389                           
  5390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5391                           ;incstack = 0
  5392  0052DA  0EFE               	movlw	-2
  5393  0052DC  006F FF8C  F049    	movff	plusw1,btemp+11
  5394                           
  5395                           ;stkvar	_r @ sp[(0)+-1]
  5396  0052E2  0EFF               	movlw	-1
  5397  0052E4  50E3               	movf	plusw1,w,c
  5398  0052E6  0D10               	mullw	16
  5399  0052E8  50F3               	movf	prodl,w,c
  5400  0052EA  2449               	addwf	btemp+11,w,c
  5401  0052EC  0F80               	addlw	128
  5402  0052EE  6EE6               	movwf	postinc1,c
  5403  0052F0  ECD6  F027         	call	_send_lcd_cmd_dma	;wreg free
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5407                           ;stkvar	_strPtr @ sp[(0)+-3]
  5408  0052F4  0EFD               	movlw	-3
  5409  0052F6  50E3               	movf	plusw1,w,c
  5410  0052F8  6EE6               	movwf	postinc1,c
  5411  0052FA  EC05  F025         	call	_eaDogM_WriteString	;wreg free
  5412                           
  5413                           ; BSR set to: 59
  5414                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5415  0052FE  52E5               	movf	postdec1,f,c
  5416  005300  52E5               	movf	postdec1,f,c
  5417  005302  52E5               	movf	postdec1,f,c
  5418  005304  0012               	return		;funcret
  5419  005306                     __end_of_eaDogM_WriteStringAtPos:
  5420                           	opt callstack 0
  5421                           
  5422 ;; *************** function _eaDogM_WriteString *****************
  5423 ;; Defined at:
  5424 ;;		line 167 in file "eadog.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  strPtr          1  [STACK] PTR unsigned char 
  5427 ;;		 -> V(86), 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1  [STACK] void 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5434 ;; Tracked objects:
  5435 ;;		On entry : 3F/0
  5436 ;;		On exit  : 3F/3B
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:   12
  5446 ;; This function calls:
  5447 ;;		_printf
  5448 ;;		_ringBufS_flush
  5449 ;;		_start_lcd
  5450 ;;		_strlen
  5451 ;;		_wait_lcd_set
  5452 ;; This function is called by:
  5453 ;;		_eaDogM_WriteStringAtPos
  5454 ;; This function uses a reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text22
  5458  004A0A                     __ptext22:
  5459                           	opt callstack 0
  5460  004A0A                     _eaDogM_WriteString:
  5461                           	opt callstack 17
  5462                           
  5463                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5464                           
  5465                           ; BSR set to: 59
  5466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5467                           ;incstack = 0
  5468  004A0A  ECD1  F02C         	call	_wait_lcd_set	;wreg free
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5472  004A0E  0E00               	movlw	0
  5473  004A10  6EE6               	movwf	postinc1,c
  5474  004A12  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5475  004A18  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5476  004A1E  ECE9  F025         	call	_ringBufS_flush	;wreg free
  5477  004A22  94BC               	bcf	16316,2,c	;volatile
  5478                           
  5479                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5480                           ;stkvar	_strPtr @ sp[(0)+-1]
  5481  004A24  0EFF               	movlw	-1
  5482  004A26  006F FF8C  F049    	movff	plusw1,btemp+11
  5483  004A2C  0060  F127  FFE6   	movff	btemp+11,postinc1
  5484  004A32  0E00               	movlw	0
  5485  004A34  6EE6               	movwf	postinc1,c
  5486  004A36  EC64  F024         	call	_strlen	;wreg free
  5487  004A3A  503F               	movf	btemp+1,w,c
  5488  004A3C  E104               	bnz	u3840
  5489  004A3E  0E41               	movlw	65
  5490  004A40  5C3E               	subwf	btemp,w,c
  5491  004A42  A0D8               	btfss	status,0,c
  5492  004A44  D008               	goto	l6674
  5493  004A46                     u3840:
  5494                           
  5495                           ;stkvar	_strPtr @ sp[(0)+-1]
  5496  004A46  0EFF               	movlw	-1
  5497  004A48  50E3               	movf	plusw1,w,c
  5498  004A4A  6ED9               	movwf	fsr2l,c
  5499  004A4C  6ADA               	clrf	fsr2h,c
  5500  004A4E  0E40               	movlw	64
  5501  004A50  26D9               	addwf	fsr2l,f,c
  5502  004A52  0E00               	movlw	0
  5503  004A54  6EDF               	movwf	indf2,c
  5504  004A56                     l6674:
  5505                           
  5506                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5507  004A56  013B               	movlb	59	; () banked
  5508  004A58  9FFC               	bcf	252,7,b	;volatile
  5509                           
  5510                           ; BSR set to: 59
  5511                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5512                           ;stkvar	_strPtr @ sp[(0)+-1]
  5513  004A5A  0EFF               	movlw	-1
  5514  004A5C  006F FF8C  F049    	movff	plusw1,btemp+11
  5515  004A62  0060  F127  FFE6   	movff	btemp+11,postinc1
  5516  004A68  0E00               	movlw	0
  5517  004A6A  6EE6               	movwf	postinc1,c
  5518  004A6C  EC64  F024         	call	_strlen	;wreg free
  5519  004A70  0060  F0FB  FBF7   	movff	btemp,15351	;volatile
  5520  004A76  0060  F0FF  FBF8   	movff	btemp+1,15352	;volatile
  5521                           
  5522                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5523  004A7C  013B               	movlb	59	; () banked
  5524  004A7E  8FFC               	bsf	252,7,b	;volatile
  5525                           
  5526                           ; BSR set to: 59
  5527                           ;eadog.c: 177:  printf("%s", strPtr);
  5528                           ;stkvar	_strPtr @ sp[(0)+-1]
  5529  004A80  0EFF               	movlw	-1
  5530  004A82  006F FF8C  F049    	movff	plusw1,btemp+11
  5531  004A88  0060  F127  FFE6   	movff	btemp+11,postinc1
  5532  004A8E  0E00               	movlw	0
  5533  004A90  6EE6               	movwf	postinc1,c
  5534  004A92  0E99               	movlw	(STR_2+9)& (0+255)
  5535  004A94  6EE6               	movwf	postinc1,c
  5536  004A96  0E03               	movlw	3
  5537  004A98  6EE6               	movwf	postinc1,c
  5538  004A9A  EC48  F027         	call	_printf	;wreg free
  5539                           
  5540                           ;eadog.c: 178:  start_lcd();
  5541  004A9E  ECD4  F02C         	call	_start_lcd	;wreg free
  5542                           
  5543                           ; BSR set to: 59
  5544                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5545  004AA2  52E5               	movf	postdec1,f,c
  5546  004AA4  0012               	return		;funcret
  5547  004AA6                     __end_of_eaDogM_WriteString:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _eaDogM_WriteCommand *****************
  5551 ;; Defined at:
  5552 ;;		line 143 in file "eadog.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  cmd             1  [STACK] unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1  [STACK] void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5561 ;; Tracked objects:
  5562 ;;		On entry : 3F/3D
  5563 ;;		On exit  : 3F/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:   13
  5573 ;; This function calls:
  5574 ;;		_send_lcd_cmd_dma
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text23
  5581  00591A                     __ptext23:
  5582                           	opt callstack 0
  5583  00591A                     _eaDogM_WriteCommand:
  5584                           	opt callstack 17
  5585                           
  5586                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5587                           ;stkvar	_cmd @ sp[(0)+-1]
  5588                           
  5589                           ; BSR set to: 59
  5590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5591                           ;incstack = 0
  5592  00591A  0EFF               	movlw	-1
  5593  00591C  50E3               	movf	plusw1,w,c
  5594  00591E  6EE6               	movwf	postinc1,c
  5595  005920  ECD6  F027         	call	_send_lcd_cmd_dma	;wreg free
  5596                           
  5597                           ; BSR set to: 0
  5598                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5599  005924  52E5               	movf	postdec1,f,c
  5600  005926  0012               	return		;funcret
  5601  005928                     __end_of_eaDogM_WriteCommand:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _send_lcd_cmd_dma *****************
  5605 ;; Defined at:
  5606 ;;		line 184 in file "eadog.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  strPtr          1  [STACK] unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1  [STACK] void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 3F/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;Total ram usage:        0 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   12
  5627 ;; This function calls:
  5628 ;;		_printf
  5629 ;;		_ringBufS_flush
  5630 ;;		_start_lcd
  5631 ;;		_wait_lcd_done
  5632 ;;		_wait_lcd_set
  5633 ;; This function is called by:
  5634 ;;		_eaDogM_WriteCommand
  5635 ;;		_eaDogM_WriteStringAtPos
  5636 ;; This function uses a reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text24
  5640  004FAC                     __ptext24:
  5641                           	opt callstack 0
  5642  004FAC                     _send_lcd_cmd_dma:
  5643                           	opt callstack 17
  5644                           
  5645                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5646                           
  5647                           ; BSR set to: 0
  5648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5649                           ;incstack = 0
  5650  004FAC  ECD1  F02C         	call	_wait_lcd_set	;wreg free
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5654  004FB0  0E00               	movlw	0
  5655  004FB2  6EE6               	movwf	postinc1,c
  5656  004FB4  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5657  004FBA  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5658  004FC0  ECE9  F025         	call	_ringBufS_flush	;wreg free
  5659  004FC4  92BC               	bcf	16316,1,c	;volatile
  5660  004FC6  94BC               	bcf	16316,2,c	;volatile
  5661                           
  5662                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5663  004FC8  013B               	movlb	59	; () banked
  5664  004FCA  9FFC               	bcf	252,7,b	;volatile
  5665                           
  5666                           ; BSR set to: 59
  5667                           ;eadog.c: 192:  DMA1SSZ = 1;
  5668  004FCC  0E00               	movlw	0
  5669  004FCE  6FF8               	movwf	248,b	;volatile
  5670  004FD0  0E01               	movlw	1
  5671  004FD2  6FF7               	movwf	247,b	;volatile
  5672                           
  5673                           ; BSR set to: 59
  5674                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5675  004FD4  8FFC               	bsf	252,7,b	;volatile
  5676                           
  5677                           ; BSR set to: 59
  5678                           ;eadog.c: 194:  printf("%c", strPtr);
  5679                           ;stkvar	_strPtr @ sp[(0)+-1]
  5680  004FD6  0EFF               	movlw	-1
  5681  004FD8  50E3               	movf	plusw1,w,c
  5682  004FDA  6EE6               	movwf	postinc1,c
  5683  004FDC  0E00               	movlw	0
  5684  004FDE  6EE6               	movwf	postinc1,c
  5685  004FE0  0EAD               	movlw	STR_13& (0+255)
  5686  004FE2  6EE6               	movwf	postinc1,c
  5687  004FE4  0E03               	movlw	3
  5688  004FE6  6EE6               	movwf	postinc1,c
  5689  004FE8  EC48  F027         	call	_printf	;wreg free
  5690                           
  5691                           ;eadog.c: 195:  start_lcd();
  5692  004FEC  ECD4  F02C         	call	_start_lcd	;wreg free
  5693                           
  5694                           ; BSR set to: 59
  5695                           ;eadog.c: 196:  wait_lcd_done();
  5696  004FF0  EC11  F02C         	call	_wait_lcd_done	;wreg free
  5697                           
  5698                           ; BSR set to: 0
  5699  004FF4  82BC               	bsf	16316,1,c	;volatile
  5700                           
  5701                           ; BSR set to: 0
  5702                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5703  004FF6  52E5               	movf	postdec1,f,c
  5704  004FF8  0012               	return		;funcret
  5705  004FFA                     __end_of_send_lcd_cmd_dma:
  5706                           	opt callstack 0
  5707                           
  5708 ;; *************** function _wait_lcd_set *****************
  5709 ;; Defined at:
  5710 ;;		line 114 in file "eadog.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1  [STACK] void 
  5717 ;; Registers used:
  5718 ;;		None
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 3F/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    3
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_eaDogM_WriteString
  5735 ;;		_send_lcd_cmd_dma
  5736 ;; This function uses a reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text25
  5740  0059A2                     __ptext25:
  5741                           	opt callstack 0
  5742  0059A2                     _wait_lcd_set:
  5743                           	opt callstack 25
  5744                           
  5745                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5746                           
  5747                           ; BSR set to: 0
  5748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5749                           ;incstack = 0
  5750  0059A2  0100               	movlb	0	; () banked
  5751  0059A4  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5752                           
  5753                           ; BSR set to: 0
  5754                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5755  0059A6  0012               	return		;funcret
  5756  0059A8                     __end_of_wait_lcd_set:
  5757                           	opt callstack 0
  5758                           
  5759 ;; *************** function _wait_lcd_done *****************
  5760 ;; Defined at:
  5761 ;;		line 124 in file "eadog.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1  [STACK] void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 3F/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		_wdtdelay
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;;		_send_lcd_cmd_dma
  5787 ;; This function uses a reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text26
  5791  005822                     __ptext26:
  5792                           	opt callstack 0
  5793  005822                     _wait_lcd_done:
  5794                           	opt callstack 26
  5795                           
  5796                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5797                           
  5798                           ; BSR set to: 0
  5799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5800                           ;incstack = 0
  5801  005822  0100               	movlb	0	; () banked
  5802  005824  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5803  005826  D7FD               	goto	_wait_lcd_done
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;eadog.c: 127:  wdtdelay(50);
  5807  005828  0E32               	movlw	50
  5808  00582A  6EE6               	movwf	postinc1,c
  5809  00582C  0E00               	movlw	0
  5810  00582E  6EE6               	movwf	postinc1,c
  5811  005830  0E00               	movlw	0
  5812  005832  6EE6               	movwf	postinc1,c
  5813  005834  0E00               	movlw	0
  5814  005836  6EE6               	movwf	postinc1,c
  5815  005838  ECA8  F027         	call	_wdtdelay	;wreg free
  5816                           
  5817                           ; BSR set to: 0
  5818                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5819  00583C  0012               	return		;funcret
  5820  00583E                     __end_of_wait_lcd_done:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function _wdtdelay *****************
  5824 ;; Defined at:
  5825 ;;		line 21 in file "eadog.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  delay           4  [STACK] unsigned long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1  [STACK] void 
  5832 ;; Registers used:
  5833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 3F/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    3
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_init_display
  5850 ;;		_send_lcd_cmd
  5851 ;;		_send_lcd_cmd_long
  5852 ;;		_wait_lcd_done
  5853 ;; This function uses a reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text27
  5857  004F50                     __ptext27:
  5858                           	opt callstack 0
  5859  004F50                     _wdtdelay:
  5860                           	opt callstack 26
  5861                           
  5862                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5863                           
  5864                           ; BSR set to: 0
  5865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5866                           ;incstack = 0
  5867  004F50  0100               	movlb	0	; () banked
  5868  004F52  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5869  004F54  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5870  004F56  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5871  004F58  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5872  004F5A  D009               	goto	l4958
  5873  004F5C                     l1308:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;eadog.c: 26:   __nop();
  5877  004F5C  F000               	nop	
  5878  004F5E  0004               	clrwdt		;# 
  5879                           
  5880                           ;eadog.c: 28:  };
  5881  004F60  0E01               	movlw	1
  5882  004F62  0100               	movlb	0	; () banked
  5883  004F64  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5884  004F66  0E00               	movlw	0
  5885  004F68  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5886  004F6A  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5887  004F6C  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5888  004F6E                     l4958:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;stkvar	_delay @ sp[(0)+-4]
  5892  004F6E  0EFC               	movlw	-4
  5893  004F70  006F FF8C  F03E    	movff	plusw1,btemp
  5894  004F76  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5895  004F78  5C3E               	subwf	btemp,w,c
  5896  004F7A  0EFD               	movlw	-3
  5897  004F7C  006F FF8C  F03E    	movff	plusw1,btemp
  5898  004F82  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5899  004F84  583E               	subwfb	btemp,w,c
  5900  004F86  0EFE               	movlw	-2
  5901  004F88  006F FF8C  F03E    	movff	plusw1,btemp
  5902  004F8E  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5903  004F90  583E               	subwfb	btemp,w,c
  5904  004F92  0EFF               	movlw	-1
  5905  004F94  006F FF8C  F03E    	movff	plusw1,btemp
  5906  004F9A  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5907  004F9C  583E               	subwfb	btemp,w,c
  5908  004F9E  B0D8               	btfsc	status,0,c
  5909  004FA0  D7DD               	goto	l1308
  5910                           
  5911                           ; BSR set to: 0
  5912                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5913  004FA2  52E5               	movf	postdec1,f,c
  5914  004FA4  52E5               	movf	postdec1,f,c
  5915  004FA6  52E5               	movf	postdec1,f,c
  5916  004FA8  52E5               	movf	postdec1,f,c
  5917  004FAA  0012               	return		;funcret
  5918  004FAC                     __end_of_wdtdelay:
  5919                           	opt callstack 0
  5920                           
  5921 ;; *************** function _start_lcd *****************
  5922 ;; Defined at:
  5923 ;;		line 109 in file "eadog.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1  [STACK] void 
  5930 ;; Registers used:
  5931 ;;		None
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/3B
  5934 ;;		On exit  : 3F/3B
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    3
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_eaDogM_WriteString
  5948 ;;		_send_lcd_cmd_dma
  5949 ;; This function uses a reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text28
  5953  0059A8                     __ptext28:
  5954                           	opt callstack 0
  5955  0059A8                     _start_lcd:
  5956                           	opt callstack 25
  5957                           
  5958                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5959                           
  5960                           ; BSR set to: 0
  5961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5962                           ;incstack = 0
  5963  0059A8  013B               	movlb	59	; () banked
  5964  0059AA  8DFC               	bsf	252,6,b	;volatile
  5965                           
  5966                           ; BSR set to: 59
  5967                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5968  0059AC  0012               	return		;funcret
  5969  0059AE                     __end_of_start_lcd:
  5970                           	opt callstack 0
  5971                           
  5972 ;; *************** function _ringBufS_flush *****************
  5973 ;; Defined at:
  5974 ;;		line 76 in file "ringbufs.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5977 ;;		 -> ring_buf1(67), 
  5978 ;;  clearBuffer     1  [STACK] const char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1  [STACK] void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5985 ;; Tracked objects:
  5986 ;;		On entry : 3F/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5994 ;;Total ram usage:        0 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		_memset
  5999 ;; This function is called by:
  6000 ;;		_eaDogM_WriteString
  6001 ;;		_send_lcd_cmd_dma
  6002 ;; This function uses a reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text29
  6006  004BD2                     __ptext29:
  6007                           	opt callstack 0
  6008  004BD2                     _ringBufS_flush:
  6009                           	opt callstack 24
  6010                           
  6011                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6012                           ;stkvar	__this @ sp[(0)+-2]
  6013                           
  6014                           ; BSR set to: 59
  6015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6016                           ;incstack = 0
  6017  004BD2  0EFE               	movlw	-2
  6018  004BD4  006F FF8C  F048    	movff	plusw1,btemp+10
  6019  004BDA  0EFF               	movlw	-1
  6020  004BDC  006F FF8C  F049    	movff	plusw1,btemp+11
  6021  004BE2  0E42               	movlw	66
  6022  004BE4  2448               	addwf	btemp+10,w,c
  6023  004BE6  6ED9               	movwf	fsr2l,c
  6024  004BE8  0E00               	movlw	0
  6025  004BEA  2049               	addwfc	btemp+11,w,c
  6026  004BEC  6EDA               	movwf	fsr2h,c
  6027  004BEE  0E00               	movlw	0
  6028  004BF0  6EDF               	movwf	indf2,c
  6029                           
  6030                           ;ringbufs.c: 79:  _this->head = 0;
  6031                           ;stkvar	__this @ sp[(0)+-2]
  6032  004BF2  0EFE               	movlw	-2
  6033  004BF4  006F FF8C  F048    	movff	plusw1,btemp+10
  6034  004BFA  0EFF               	movlw	-1
  6035  004BFC  006F FF8C  F049    	movff	plusw1,btemp+11
  6036  004C02  0E40               	movlw	64
  6037  004C04  2448               	addwf	btemp+10,w,c
  6038  004C06  6ED9               	movwf	fsr2l,c
  6039  004C08  0E00               	movlw	0
  6040  004C0A  2049               	addwfc	btemp+11,w,c
  6041  004C0C  6EDA               	movwf	fsr2h,c
  6042  004C0E  0E00               	movlw	0
  6043  004C10  6EDF               	movwf	indf2,c
  6044                           
  6045                           ;ringbufs.c: 80:  _this->tail = 0;
  6046                           ;stkvar	__this @ sp[(0)+-2]
  6047  004C12  0EFE               	movlw	-2
  6048  004C14  006F FF8C  F048    	movff	plusw1,btemp+10
  6049  004C1A  0EFF               	movlw	-1
  6050  004C1C  006F FF8C  F049    	movff	plusw1,btemp+11
  6051  004C22  0E41               	movlw	65
  6052  004C24  2448               	addwf	btemp+10,w,c
  6053  004C26  6ED9               	movwf	fsr2l,c
  6054  004C28  0E00               	movlw	0
  6055  004C2A  2049               	addwfc	btemp+11,w,c
  6056  004C2C  6EDA               	movwf	fsr2h,c
  6057  004C2E  0E00               	movlw	0
  6058  004C30  6EDF               	movwf	indf2,c
  6059                           
  6060                           ;ringbufs.c: 81:  if (clearBuffer) {
  6061                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6062  004C32  0EFD               	movlw	-3
  6063  004C34  50E3               	movf	plusw1,w,c
  6064  004C36  B4D8               	btfsc	status,2,c
  6065  004C38  D011               	goto	l1444
  6066                           
  6067                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6068  004C3A  0E40               	movlw	64
  6069  004C3C  6EE6               	movwf	postinc1,c
  6070  004C3E  0E00               	movlw	0
  6071  004C40  6EE6               	movwf	postinc1,c
  6072  004C42  0E00               	movlw	0
  6073  004C44  6EE6               	movwf	postinc1,c
  6074  004C46  0E00               	movlw	0
  6075  004C48  6EE6               	movwf	postinc1,c
  6076                           
  6077                           ;stkvar	__this @ sp[(-4)+-2]
  6078  004C4A  0EFA               	movlw	-6
  6079  004C4C  006F FF8F FFE6     	movff	plusw1,postinc1
  6080  004C52  006F FF8F FFE6     	movff	plusw1,postinc1
  6081  004C58  EC91  F016         	call	_memset	;wreg free
  6082  004C5C                     l1444:
  6083                           
  6084                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6085  004C5C  52E5               	movf	postdec1,f,c
  6086  004C5E  52E5               	movf	postdec1,f,c
  6087  004C60  52E5               	movf	postdec1,f,c
  6088  004C62  0012               	return		;funcret
  6089  004C64                     __end_of_ringBufS_flush:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _memset *****************
  6093 ;; Defined at:
  6094 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  dest            2  [STACK] PTR void 
  6097 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6098 ;;  c               2  [STACK] int 
  6099 ;;  n               2  [STACK] unsigned int 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  s               2  [STACK] PTR unsigned char 
  6102 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6103 ;;  k               2  [STACK] unsigned int 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2  [STACK] PTR void 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6117 ;;Total ram usage:        0 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    3
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_ringBufS_init
  6124 ;;		_ringBufS_flush
  6125 ;; This function uses a reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text30
  6129  002D22                     __ptext30:
  6130                           	opt callstack 0
  6131  002D22                     _memset:
  6132                           	opt callstack 0
  6133                           
  6134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6135  002D22  52E6               	movf	postinc1,f,c
  6136  002D24  52E6               	movf	postinc1,f,c
  6137  002D26  52E6               	movf	postinc1,f,c
  6138  002D28  52E6               	movf	postinc1,f,c
  6139                           
  6140                           ;stkvar	_dest @ sp[(-4)+-2]
  6141                           
  6142                           ;incstack = 0
  6143  002D2A  0EFA               	movlw	-6
  6144  002D2C  006F FF8C  F048    	movff	plusw1,btemp+10
  6145  002D32  0EFB               	movlw	-5
  6146  002D34  006F FF8C  F049    	movff	plusw1,btemp+11
  6147                           
  6148                           ;stkvar	_s @ sp[(-4)+0]
  6149  002D3A  0EFD               	movlw	-3
  6150  002D3C  0060  F127  FFE3   	movff	btemp+11,plusw1
  6151  002D42  0EFC               	movlw	-4
  6152  002D44  0060  F123  FFE3   	movff	btemp+10,plusw1
  6153                           
  6154                           ;stkvar	_n @ sp[(-4)+-6]
  6155  002D4A  0EF6               	movlw	-10
  6156  002D4C  006F FF8C  F03E    	movff	plusw1,btemp
  6157  002D52  0EF7               	movlw	-9
  6158  002D54  50E3               	movf	plusw1,w,c
  6159  002D56  103E               	iorwf	btemp,w,c
  6160  002D58  B4D8               	btfsc	status,2,c
  6161  002D5A  D154               	goto	u3800
  6162                           
  6163                           ;stkvar	_c @ sp[(-4)+-4]
  6164                           ;stkvar	_s @ sp[(-4)+0]
  6165  002D5C  0EFC               	movlw	-4
  6166  002D5E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6167  002D64  0EFD               	movlw	-3
  6168  002D66  006F FF8F FFDA     	movff	plusw1,fsr2h
  6169  002D6C  0EF8               	movlw	-8
  6170  002D6E  006F FF8F FFDF     	movff	plusw1,indf2
  6171                           
  6172                           ;stkvar	_c @ sp[(-4)+-4]
  6173                           ;stkvar	_n @ sp[(-4)+-6]
  6174                           ;stkvar	_s @ sp[(-4)+0]
  6175  002D74  0EFC               	movlw	-4
  6176  002D76  006F FF8C  F048    	movff	plusw1,btemp+10
  6177  002D7C  0EFD               	movlw	-3
  6178  002D7E  006F FF8C  F049    	movff	plusw1,btemp+11
  6179  002D84  0EF6               	movlw	-10
  6180  002D86  50E3               	movf	plusw1,w,c
  6181  002D88  2648               	addwf	btemp+10,f,c
  6182  002D8A  0EF7               	movlw	-9
  6183  002D8C  50E3               	movf	plusw1,w,c
  6184  002D8E  2249               	addwfc	btemp+11,f,c
  6185  002D90  0EFF               	movlw	255
  6186  002D92  2448               	addwf	btemp+10,w,c
  6187  002D94  6ED9               	movwf	fsr2l,c
  6188  002D96  0EFF               	movlw	255
  6189  002D98  2049               	addwfc	btemp+11,w,c
  6190  002D9A  6EDA               	movwf	fsr2h,c
  6191  002D9C  0EF8               	movlw	-8
  6192  002D9E  006F FF8F FFDF     	movff	plusw1,indf2
  6193                           
  6194                           ;stkvar	_n @ sp[(-4)+-6]
  6195  002DA4  0EF7               	movlw	-9
  6196  002DA6  50E3               	movf	plusw1,w,c
  6197  002DA8  E108               	bnz	l6576
  6198  002DAA  0EF6               	movlw	-10
  6199  002DAC  006F FF8C  F03E    	movff	plusw1,btemp
  6200  002DB2  0E03               	movlw	3
  6201  002DB4  5E3E               	subwf	btemp,f,c
  6202  002DB6  A0D8               	btfss	status,0,c
  6203  002DB8  D125               	goto	u3800
  6204  002DBA                     l6576:
  6205                           
  6206                           ;stkvar	_c @ sp[(-4)+-4]
  6207                           ;stkvar	_s @ sp[(-4)+0]
  6208  002DBA  0EFC               	movlw	-4
  6209  002DBC  006F FF8C  F048    	movff	plusw1,btemp+10
  6210  002DC2  0EFD               	movlw	-3
  6211  002DC4  006F FF8C  F049    	movff	plusw1,btemp+11
  6212  002DCA  0E01               	movlw	1
  6213  002DCC  2448               	addwf	btemp+10,w,c
  6214  002DCE  6ED9               	movwf	fsr2l,c
  6215  002DD0  0E00               	movlw	0
  6216  002DD2  2049               	addwfc	btemp+11,w,c
  6217  002DD4  6EDA               	movwf	fsr2h,c
  6218  002DD6  0EF8               	movlw	-8
  6219  002DD8  006F FF8F FFDF     	movff	plusw1,indf2
  6220                           
  6221                           ;stkvar	_c @ sp[(-4)+-4]
  6222                           ;stkvar	_s @ sp[(-4)+0]
  6223  002DDE  0EFC               	movlw	-4
  6224  002DE0  006F FF8C  F048    	movff	plusw1,btemp+10
  6225  002DE6  0EFD               	movlw	-3
  6226  002DE8  006F FF8C  F049    	movff	plusw1,btemp+11
  6227  002DEE  0E02               	movlw	2
  6228  002DF0  2448               	addwf	btemp+10,w,c
  6229  002DF2  6ED9               	movwf	fsr2l,c
  6230  002DF4  0E00               	movlw	0
  6231  002DF6  2049               	addwfc	btemp+11,w,c
  6232  002DF8  6EDA               	movwf	fsr2h,c
  6233  002DFA  0EF8               	movlw	-8
  6234  002DFC  006F FF8F FFDF     	movff	plusw1,indf2
  6235                           
  6236                           ;stkvar	_c @ sp[(-4)+-4]
  6237                           ;stkvar	_n @ sp[(-4)+-6]
  6238                           ;stkvar	_s @ sp[(-4)+0]
  6239  002E02  0EFC               	movlw	-4
  6240  002E04  006F FF8C  F048    	movff	plusw1,btemp+10
  6241  002E0A  0EFD               	movlw	-3
  6242  002E0C  006F FF8C  F049    	movff	plusw1,btemp+11
  6243  002E12  0EF6               	movlw	-10
  6244  002E14  50E3               	movf	plusw1,w,c
  6245  002E16  2648               	addwf	btemp+10,f,c
  6246  002E18  0EF7               	movlw	-9
  6247  002E1A  50E3               	movf	plusw1,w,c
  6248  002E1C  2249               	addwfc	btemp+11,f,c
  6249  002E1E  0EFE               	movlw	254
  6250  002E20  2448               	addwf	btemp+10,w,c
  6251  002E22  6ED9               	movwf	fsr2l,c
  6252  002E24  0EFF               	movlw	255
  6253  002E26  2049               	addwfc	btemp+11,w,c
  6254  002E28  6EDA               	movwf	fsr2h,c
  6255  002E2A  0EF8               	movlw	-8
  6256  002E2C  006F FF8F FFDF     	movff	plusw1,indf2
  6257                           
  6258                           ;stkvar	_c @ sp[(-4)+-4]
  6259                           ;stkvar	_n @ sp[(-4)+-6]
  6260                           ;stkvar	_s @ sp[(-4)+0]
  6261  002E32  0EFC               	movlw	-4
  6262  002E34  006F FF8C  F048    	movff	plusw1,btemp+10
  6263  002E3A  0EFD               	movlw	-3
  6264  002E3C  006F FF8C  F049    	movff	plusw1,btemp+11
  6265  002E42  0EF6               	movlw	-10
  6266  002E44  50E3               	movf	plusw1,w,c
  6267  002E46  2648               	addwf	btemp+10,f,c
  6268  002E48  0EF7               	movlw	-9
  6269  002E4A  50E3               	movf	plusw1,w,c
  6270  002E4C  2249               	addwfc	btemp+11,f,c
  6271  002E4E  0EFD               	movlw	253
  6272  002E50  2448               	addwf	btemp+10,w,c
  6273  002E52  6ED9               	movwf	fsr2l,c
  6274  002E54  0EFF               	movlw	255
  6275  002E56  2049               	addwfc	btemp+11,w,c
  6276  002E58  6EDA               	movwf	fsr2h,c
  6277  002E5A  0EF8               	movlw	-8
  6278  002E5C  006F FF8F FFDF     	movff	plusw1,indf2
  6279                           
  6280                           ;stkvar	_n @ sp[(-4)+-6]
  6281  002E62  0EF7               	movlw	-9
  6282  002E64  50E3               	movf	plusw1,w,c
  6283  002E66  E108               	bnz	l6582
  6284  002E68  0EF6               	movlw	-10
  6285  002E6A  006F FF8C  F03E    	movff	plusw1,btemp
  6286  002E70  0E07               	movlw	7
  6287  002E72  5E3E               	subwf	btemp,f,c
  6288  002E74  A0D8               	btfss	status,0,c
  6289  002E76  D0C6               	goto	u3800
  6290  002E78                     l6582:
  6291                           
  6292                           ;stkvar	_c @ sp[(-4)+-4]
  6293                           ;stkvar	_s @ sp[(-4)+0]
  6294  002E78  0EFC               	movlw	-4
  6295  002E7A  006F FF8C  F048    	movff	plusw1,btemp+10
  6296  002E80  0EFD               	movlw	-3
  6297  002E82  006F FF8C  F049    	movff	plusw1,btemp+11
  6298  002E88  0E03               	movlw	3
  6299  002E8A  2448               	addwf	btemp+10,w,c
  6300  002E8C  6ED9               	movwf	fsr2l,c
  6301  002E8E  0E00               	movlw	0
  6302  002E90  2049               	addwfc	btemp+11,w,c
  6303  002E92  6EDA               	movwf	fsr2h,c
  6304  002E94  0EF8               	movlw	-8
  6305  002E96  006F FF8F FFDF     	movff	plusw1,indf2
  6306                           
  6307                           ;stkvar	_c @ sp[(-4)+-4]
  6308                           ;stkvar	_n @ sp[(-4)+-6]
  6309                           ;stkvar	_s @ sp[(-4)+0]
  6310  002E9C  0EFC               	movlw	-4
  6311  002E9E  006F FF8C  F048    	movff	plusw1,btemp+10
  6312  002EA4  0EFD               	movlw	-3
  6313  002EA6  006F FF8C  F049    	movff	plusw1,btemp+11
  6314  002EAC  0EF6               	movlw	-10
  6315  002EAE  50E3               	movf	plusw1,w,c
  6316  002EB0  2648               	addwf	btemp+10,f,c
  6317  002EB2  0EF7               	movlw	-9
  6318  002EB4  50E3               	movf	plusw1,w,c
  6319  002EB6  2249               	addwfc	btemp+11,f,c
  6320  002EB8  0EFC               	movlw	252
  6321  002EBA  2448               	addwf	btemp+10,w,c
  6322  002EBC  6ED9               	movwf	fsr2l,c
  6323  002EBE  0EFF               	movlw	255
  6324  002EC0  2049               	addwfc	btemp+11,w,c
  6325  002EC2  6EDA               	movwf	fsr2h,c
  6326  002EC4  0EF8               	movlw	-8
  6327  002EC6  006F FF8F FFDF     	movff	plusw1,indf2
  6328                           
  6329                           ;stkvar	_n @ sp[(-4)+-6]
  6330  002ECC  0EF7               	movlw	-9
  6331  002ECE  50E3               	movf	plusw1,w,c
  6332  002ED0  E108               	bnz	l6588
  6333  002ED2  0EF6               	movlw	-10
  6334  002ED4  006F FF8C  F03E    	movff	plusw1,btemp
  6335  002EDA  0E09               	movlw	9
  6336  002EDC  5E3E               	subwf	btemp,f,c
  6337  002EDE  A0D8               	btfss	status,0,c
  6338  002EE0  D091               	goto	u3800
  6339  002EE2                     l6588:
  6340                           
  6341                           ;stkvar	_s @ sp[(-4)+0]
  6342  002EE2  0EFC               	movlw	-4
  6343  002EE4  006F FF8C  F048    	movff	plusw1,btemp+10
  6344  002EEA  1E48               	comf	btemp+10,f,c
  6345  002EEC  0EFD               	movlw	-3
  6346  002EEE  006F FF8C  F049    	movff	plusw1,btemp+11
  6347  002EF4  1E49               	comf	btemp+11,f,c
  6348  002EF6  2A48               	incf	btemp+10,f,c
  6349  002EF8  B4D8               	btfsc	status,2,c
  6350  002EFA  2A49               	incf	btemp+11,f,c
  6351  002EFC  0E03               	movlw	3
  6352  002EFE  1648               	andwf	btemp+10,f,c
  6353  002F00  0E00               	movlw	0
  6354  002F02  1649               	andwf	btemp+11,f,c
  6355                           
  6356                           ;stkvar	_k @ sp[(-4)+2]
  6357  002F04  0EFE               	movlw	-2
  6358  002F06  0060  F123  FFE3   	movff	btemp+10,plusw1
  6359  002F0C  0EFF               	movlw	-1
  6360  002F0E  0060  F127  FFE3   	movff	btemp+11,plusw1
  6361                           
  6362                           ;stkvar	_k @ sp[(-4)+2]
  6363                           ;stkvar	_s @ sp[(-4)+0]
  6364  002F14  0EFC               	movlw	-4
  6365  002F16  50E3               	movf	plusw1,w,c
  6366  002F18  6E3E               	movwf	btemp,c
  6367  002F1A  0EFE               	movlw	-2
  6368  002F1C  50E3               	movf	plusw1,w,c
  6369  002F1E  263E               	addwf	btemp,f,c
  6370  002F20  0EFC               	movlw	-4
  6371  002F22  0060  F0FB  FFE3   	movff	btemp,plusw1
  6372  002F28  0EFD               	movlw	-3
  6373  002F2A  50E3               	movf	plusw1,w,c
  6374  002F2C  6E3E               	movwf	btemp,c
  6375  002F2E  0EFF               	movlw	-1
  6376  002F30  50E3               	movf	plusw1,w,c
  6377  002F32  223E               	addwfc	btemp,f,c
  6378  002F34  0EFD               	movlw	-3
  6379  002F36  0060  F0FB  FFE3   	movff	btemp,plusw1
  6380                           
  6381                           ;stkvar	_k @ sp[(-4)+2]
  6382                           ;stkvar	_n @ sp[(-4)+-6]
  6383  002F3C  0EF6               	movlw	-10
  6384  002F3E  50E3               	movf	plusw1,w,c
  6385  002F40  6E3E               	movwf	btemp,c
  6386  002F42  0EFE               	movlw	-2
  6387  002F44  50E3               	movf	plusw1,w,c
  6388  002F46  5E3E               	subwf	btemp,f,c
  6389  002F48  0EF6               	movlw	-10
  6390  002F4A  0060  F0FB  FFE3   	movff	btemp,plusw1
  6391  002F50  0EF7               	movlw	-9
  6392  002F52  50E3               	movf	plusw1,w,c
  6393  002F54  6E3E               	movwf	btemp,c
  6394  002F56  0EFF               	movlw	-1
  6395  002F58  50E3               	movf	plusw1,w,c
  6396  002F5A  5A3E               	subwfb	btemp,f,c
  6397  002F5C  0EF7               	movlw	-9
  6398  002F5E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6399  002F64  0EFC               	movlw	252
  6400  002F66  6E48               	movwf	btemp+10,c
  6401  002F68  0EFF               	movlw	255
  6402  002F6A  6E49               	movwf	btemp+11,c
  6403                           
  6404                           ;stkvar	_n @ sp[(-4)+-6]
  6405  002F6C  0EF6               	movlw	-10
  6406  002F6E  006F FF8C  F03E    	movff	plusw1,btemp
  6407  002F74  5048               	movf	btemp+10,w,c
  6408  002F76  163E               	andwf	btemp,f,c
  6409  002F78  0EF6               	movlw	-10
  6410  002F7A  0060  F0FB  FFE3   	movff	btemp,plusw1
  6411  002F80  0EF7               	movlw	-9
  6412  002F82  006F FF8C  F03E    	movff	plusw1,btemp
  6413  002F88  5049               	movf	btemp+11,w,c
  6414  002F8A  163E               	andwf	btemp,f,c
  6415  002F8C  0EF7               	movlw	-9
  6416  002F8E  D02E               	goto	L15
  6417  002F90                     l6596:
  6418                           
  6419                           ;stkvar	_c @ sp[(-4)+-4]
  6420                           ;stkvar	_s @ sp[(-4)+0]
  6421  002F90  0EFC               	movlw	-4
  6422  002F92  006F FF8F FFD9     	movff	plusw1,fsr2l
  6423  002F98  0EFD               	movlw	-3
  6424  002F9A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6425  002FA0  0EF8               	movlw	-8
  6426  002FA2  006F FF8F FFDF     	movff	plusw1,indf2
  6427                           
  6428                           ;stkvar	_n @ sp[(-4)+-6]
  6429  002FA8  0EF6               	movlw	-10
  6430  002FAA  006F FF8C  F03E    	movff	plusw1,btemp
  6431  002FB0  0E01               	movlw	1
  6432  002FB2  5E3E               	subwf	btemp,f,c
  6433  002FB4  0EF6               	movlw	-10
  6434  002FB6  0060  F0FB  FFE3   	movff	btemp,plusw1
  6435  002FBC  0EF7               	movlw	-9
  6436  002FBE  006F FF8C  F03E    	movff	plusw1,btemp
  6437  002FC4  0E00               	movlw	0
  6438  002FC6  5A3E               	subwfb	btemp,f,c
  6439  002FC8  0EF7               	movlw	-9
  6440  002FCA  0060  F0FB  FFE3   	movff	btemp,plusw1
  6441                           
  6442                           ;stkvar	_s @ sp[(-4)+0]
  6443  002FD0  0EFC               	movlw	-4
  6444  002FD2  50E3               	movf	plusw1,w,c
  6445  002FD4  0F01               	addlw	1
  6446  002FD6  6E3E               	movwf	btemp,c
  6447  002FD8  0EFC               	movlw	-4
  6448  002FDA  0060  F0FB  FFE3   	movff	btemp,plusw1
  6449  002FE0  6A3E               	clrf	btemp,c
  6450  002FE2  0EFD               	movlw	-3
  6451  002FE4  50E3               	movf	plusw1,w,c
  6452  002FE6  203E               	addwfc	btemp,w,c
  6453  002FE8  6E3E               	movwf	btemp,c
  6454  002FEA  0EFD               	movlw	-3
  6455  002FEC                     L15:
  6456  002FEC  0060  F0FB  FFE3   	movff	btemp,plusw1
  6457                           
  6458                           ;stkvar	_n @ sp[(-4)+-6]
  6459  002FF2  0EF6               	movlw	-10
  6460  002FF4  006F FF8C  F03E    	movff	plusw1,btemp
  6461  002FFA  0EF7               	movlw	-9
  6462  002FFC  50E3               	movf	plusw1,w,c
  6463  002FFE  103E               	iorwf	btemp,w,c
  6464  003000  A4D8               	btfss	status,2,c
  6465  003002  D7C6               	goto	l6596
  6466  003004                     u3800:
  6467                           
  6468                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6469  003004  0EF6               	movlw	246
  6470  003006  26E1               	addwf	fsr1l,f,c
  6471  003008  0EFF               	movlw	255
  6472  00300A  22E2               	addwfc	fsr1h,f,c
  6473  00300C  0012               	return		;funcret
  6474  00300E                     __end_of_memset:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _printf *****************
  6478 ;; Defined at:
  6479 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  fmt             1  [STACK] PTR const unsigned char 
  6482 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  ap              2  [STACK] PTR void [1]
  6485 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6486 ;;  ret             2    0        int 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  2  [STACK] int 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6491 ;; Tracked objects:
  6492 ;;		On entry : 3F/3B
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   11
  6503 ;; This function calls:
  6504 ;;		_vfprintf
  6505 ;; This function is called by:
  6506 ;;		_eaDogM_WriteString
  6507 ;;		_send_lcd_cmd_dma
  6508 ;; This function uses a reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text31
  6512  004E90                     __ptext31:
  6513                           	opt callstack 0
  6514  004E90                     _printf:
  6515                           	opt callstack 0
  6516                           
  6517                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6518  004E90  52E6               	movf	postinc1,f,c
  6519  004E92  52E6               	movf	postinc1,f,c
  6520                           
  6521                           ;stkvar	?_printf @ sp[(-2)+-3]
  6522                           
  6523                           ;incstack = 0
  6524  004E94  0EFB               	movlw	251
  6525  004E96  24E1               	addwf	fsr1l,w,c
  6526  004E98  6E48               	movwf	btemp+10,c
  6527  004E9A  0EFF               	movlw	255
  6528  004E9C  20E2               	addwfc	fsr1h,w,c
  6529  004E9E  6E49               	movwf	btemp+11,c
  6530  004EA0  0E01               	movlw	1
  6531  004EA2  2648               	addwf	btemp+10,f,c
  6532  004EA4  0E00               	movlw	0
  6533  004EA6  2249               	addwfc	btemp+11,f,c
  6534                           
  6535                           ;stkvar	_ap @ sp[(-2)+0]
  6536  004EA8  0EFF               	movlw	-1
  6537  004EAA  0060  F127  FFE3   	movff	btemp+11,plusw1
  6538  004EB0  0EFE               	movlw	-2
  6539  004EB2  0060  F123  FFE3   	movff	btemp+10,plusw1
  6540                           
  6541                           ;stkvar	_ap @ sp[(-2)+0]
  6542  004EB8  0EFE               	movlw	254
  6543  004EBA  24E1               	addwf	fsr1l,w,c
  6544  004EBC  6E3E               	movwf	btemp,c
  6545  004EBE  0EFF               	movlw	255
  6546  004EC0  20E2               	addwfc	fsr1h,w,c
  6547  004EC2  6E3F               	movwf	btemp+1,c
  6548  004EC4  0060  F0FB  FFE6   	movff	btemp,postinc1
  6549  004ECA  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6550                           
  6551                           ;stkvar	_fmt @ sp[(-4)+-2]
  6552  004ED0  0EFA               	movlw	-6
  6553  004ED2  50E3               	movf	plusw1,w,c
  6554  004ED4  6EE6               	movwf	postinc1,c
  6555  004ED6  0E00               	movlw	0
  6556  004ED8  6EE6               	movwf	postinc1,c
  6557  004EDA  0E00               	movlw	0
  6558  004EDC  6EE6               	movwf	postinc1,c
  6559  004EDE  EC9F  F025         	call	_vfprintf	;wreg free
  6560                           
  6561                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6562  004EE2  52E5               	movf	postdec1,f,c
  6563  004EE4  52E5               	movf	postdec1,f,c
  6564  004EE6  52E5               	movf	postdec1,f,c
  6565  004EE8  50E7               	movf	indf1,w,c
  6566  004EEA  5EE1               	subwf	fsr1l,f,c
  6567  004EEC  0E00               	movlw	0
  6568  004EEE  5AE2               	subwfb	fsr1h,f,c
  6569  004EF0  0012               	return		;funcret
  6570  004EF2                     __end_of_printf:
  6571                           	opt callstack 0
  6572                           
  6573 ;; *************** function _vfprintf *****************
  6574 ;; Defined at:
  6575 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6578 ;;		 -> f(5), NULL(0), 
  6579 ;;  fmt             1  [STACK] PTR const unsigned char 
  6580 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6581 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6582 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6583 ;;		 -> STR_1(17), 
  6584 ;;  ap              2  [STACK] PTR PTR void 
  6585 ;;		 -> ap(2), ap(2), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  cfmt            1  [STACK] PTR unsigned char 
  6588 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6589 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6590 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6591 ;;		 -> STR_1(17), 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2  [STACK] int 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6605 ;;Total ram usage:        0 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:   10
  6608 ;; This function calls:
  6609 ;;		_vfpfcnvrt
  6610 ;; This function is called by:
  6611 ;;		_sprintf
  6612 ;;		_printf
  6613 ;; This function uses a reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text32
  6617  004B3E                     __ptext32:
  6618                           	opt callstack 0
  6619  004B3E                     _vfprintf:
  6620                           	opt callstack 0
  6621                           
  6622                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6623  004B3E  52E6               	movf	postinc1,f,c
  6624                           
  6625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6626                           ;stkvar	_fmt @ sp[(-1)+-3]
  6627                           
  6628                           ;incstack = 0
  6629  004B40  0EFC               	movlw	-4
  6630  004B42  006F FF8C  F049    	movff	plusw1,btemp+11
  6631                           
  6632                           ;stkvar	_cfmt @ sp[(-1)+0]
  6633  004B48  0EFF               	movlw	-1
  6634  004B4A  0060  F127  FFE3   	movff	btemp+11,plusw1
  6635                           
  6636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6637  004B50  6A22               	clrf	_nout,c
  6638  004B52  6A23               	clrf	_nout+1,c
  6639                           
  6640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6641  004B54  D020               	goto	l6610
  6642  004B56                     l6608:
  6643                           
  6644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6645                           ;stkvar	_ap @ sp[(-1)+-5]
  6646  004B56  0EFA               	movlw	-6
  6647  004B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6648  004B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6649                           
  6650                           ;stkvar	_cfmt @ sp[(-3)+0]
  6651  004B64  0EFD               	movlw	253
  6652  004B66  24E1               	addwf	fsr1l,w,c
  6653  004B68  6E3E               	movwf	btemp,c
  6654  004B6A  0EFF               	movlw	255
  6655  004B6C  20E2               	addwfc	fsr1h,w,c
  6656  004B6E  6E3F               	movwf	btemp+1,c
  6657  004B70  0060  F0FB  FFE6   	movff	btemp,postinc1
  6658  004B76  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6659                           
  6660                           ;stkvar	_fp @ sp[(-5)+-2]
  6661  004B7C  0EF9               	movlw	-7
  6662  004B7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6663  004B84  006F FF8F FFE6     	movff	plusw1,postinc1
  6664  004B8A  EC59  F010         	call	_vfpfcnvrt	;wreg free
  6665  004B8E  503E               	movf	btemp,w,c
  6666  004B90  2622               	addwf	_nout,f,c
  6667  004B92  503F               	movf	btemp+1,w,c
  6668  004B94  2223               	addwfc	_nout+1,f,c
  6669  004B96                     l6610:
  6670                           
  6671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6672                           ;stkvar	_cfmt @ sp[(-1)+0]
  6673  004B96  50E1               	movf	fsr1l,w,c
  6674  004B98  0FFF               	addlw	-1
  6675  004B9A  6ED9               	movwf	fsr2l,c
  6676  004B9C  50E2               	movf	fsr1h,w,c
  6677  004B9E  6EDA               	movwf	fsr2h,c
  6678  004BA0  0EFF               	movlw	255
  6679  004BA2  22DA               	addwfc	fsr2h,f,c
  6680  004BA4  006F FF7F FFF6     	movff	indf2,tblptrl
  6681  004BAA                     	if	1	;There is more than 1 active tblptr byte
  6682  004BAA  0E20               	movlw	high __smallconst
  6683  004BAC  6EF7               	movwf	tblptrh,c
  6684  004BAE                     	endif
  6685  004BAE                     	if	0	;tblptru may be non-zero
  6686  004BAE                     	endif
  6687  004BAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6688  004BAE  0E00               	movlw	low (__smallconst shr (0+16))
  6689  004BB0  6EF8               	movwf	tblptru,c
  6690  004BB2                     	endif
  6691  004BB2  0008               	tblrd		*
  6692  004BB4  50F5               	movf	tablat,w,c
  6693  004BB6  0900               	iorlw	0
  6694  004BB8  A4D8               	btfss	status,2,c
  6695  004BBA  D7CD               	goto	l6608
  6696                           
  6697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6698  004BBC  0060  F088  F03E   	movff	_nout,btemp
  6699  004BC2  0060  F08C  F03F   	movff	_nout+1,btemp+1
  6700                           
  6701                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6702  004BC8  0EFA               	movlw	250
  6703  004BCA  26E1               	addwf	fsr1l,f,c
  6704  004BCC  0EFF               	movlw	255
  6705  004BCE  22E2               	addwfc	fsr1h,f,c
  6706  004BD0  0012               	return		;funcret
  6707  004BD2                     __end_of_vfprintf:
  6708                           	opt callstack 0
  6709                           
  6710 ;; *************** function _vfpfcnvrt *****************
  6711 ;; Defined at:
  6712 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6715 ;;		 -> f(5), NULL(0), 
  6716 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6717 ;;		 -> cfmt(1), 
  6718 ;;  ap              2  [STACK] PTR PTR void 
  6719 ;;		 -> ap(2), ap(2), 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  ll              8  [STACK] long long 
  6722 ;;  llu             8    0        unsigned long long 
  6723 ;;  f               4    0        unsigned long long 
  6724 ;;  vp              3    0        PTR void 
  6725 ;;  ct              3    0        unsigned char [3]
  6726 ;;  cp              2  [STACK] PTR unsigned char 
  6727 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(86), 
  6728 ;;  i               2    0        int 
  6729 ;;  done            2    0        int 
  6730 ;;  c               1  [STACK] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2  [STACK] int 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    9
  6747 ;; This function calls:
  6748 ;;		_ctoa
  6749 ;;		_dtoa
  6750 ;;		_fputc
  6751 ;;		_stoa
  6752 ;;		_strncmp
  6753 ;; This function is called by:
  6754 ;;		_vfprintf
  6755 ;; This function uses a reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text33
  6759  0020B2                     __ptext33:
  6760                           	opt callstack 0
  6761  0020B2                     _vfpfcnvrt:
  6762                           	opt callstack 0
  6763                           
  6764                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6765  0020B2  0E0B               	movlw	11
  6766  0020B4  26E1               	addwf	fsr1l,f,c
  6767  0020B6  0E00               	movlw	0
  6768  0020B8  22E2               	addwfc	fsr1h,f,c
  6769                           
  6770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6771                           ;stkvar	_fmt @ sp[(-11)+-4]
  6772                           
  6773                           ;incstack = 0
  6774  0020BA  0EF1               	movlw	-15
  6775  0020BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6776  0020C2  0EF2               	movlw	-14
  6777  0020C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6778  0020CA  006F FF7F FFF6     	movff	indf2,tblptrl
  6779  0020D0                     	if	1	;There is more than 1 active tblptr byte
  6780  0020D0  0E20               	movlw	high __smallconst
  6781  0020D2  6EF7               	movwf	tblptrh,c
  6782  0020D4                     	endif
  6783  0020D4                     	if	0	;tblptru may be non-zero
  6784  0020D4                     	endif
  6785  0020D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6786  0020D4  0E00               	movlw	low (__smallconst shr (0+16))
  6787  0020D6  6EF8               	movwf	tblptru,c
  6788  0020D8                     	endif
  6789  0020D8  0008               	tblrd		*
  6790  0020DA  50F5               	movf	tablat,w,c
  6791  0020DC  0A25               	xorlw	37
  6792  0020DE  A4D8               	btfss	status,2,c
  6793  0020E0  D213               	goto	l6554
  6794                           
  6795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6796                           ;stkvar	_fmt @ sp[(-11)+-4]
  6797  0020E2  0EF1               	movlw	-15
  6798  0020E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6799  0020EA  0EF2               	movlw	-14
  6800  0020EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6801  0020F2  2ADF               	incf	indf2,f,c
  6802                           
  6803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6804  0020F4  6A24               	clrf	_width,c
  6805  0020F6  6A25               	clrf	_width+1,c
  6806  0020F8  6A28               	clrf	_flags,c
  6807  0020FA  6A29               	clrf	_flags+1,c
  6808                           
  6809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6810  0020FC  6826               	setf	_prec,c
  6811  0020FE  6827               	setf	_prec+1,c
  6812                           
  6813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6814                           ;stkvar	_fmt @ sp[(-11)+-4]
  6815  002100  0EF1               	movlw	-15
  6816  002102  006F FF8F FFD9     	movff	plusw1,fsr2l
  6817  002108  0EF2               	movlw	-14
  6818  00210A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6819  002110  006F FF7F FFF6     	movff	indf2,tblptrl
  6820  002116                     	if	1	;There is more than 1 active tblptr byte
  6821  002116  0E20               	movlw	high __smallconst
  6822  002118  6EF7               	movwf	tblptrh,c
  6823  00211A                     	endif
  6824  00211A                     	if	0	;tblptru may be non-zero
  6825  00211A                     	endif
  6826  00211A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6827  00211A  0E00               	movlw	low (__smallconst shr (0+16))
  6828  00211C  6EF8               	movwf	tblptru,c
  6829  00211E                     	endif
  6830  00211E  0008               	tblrd		*
  6831  002120  50F5               	movf	tablat,w,c
  6832  002122  0A63               	xorlw	99
  6833  002124  A4D8               	btfss	status,2,c
  6834  002126  D034               	goto	l6504
  6835                           
  6836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6837                           ;stkvar	_fmt @ sp[(-11)+-4]
  6838  002128  0EF1               	movlw	-15
  6839  00212A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6840  002130  0EF2               	movlw	-14
  6841  002132  006F FF8F FFDA     	movff	plusw1,fsr2h
  6842  002138  2ADF               	incf	indf2,f,c
  6843                           
  6844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6845                           ;stkvar	_ap @ sp[(-11)+-6]
  6846  00213A  0EEF               	movlw	-17
  6847  00213C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6848  002142  0EF0               	movlw	-16
  6849  002144  006F FF8F FFDA     	movff	plusw1,fsr2h
  6850  00214A  0E02               	movlw	2
  6851  00214C  5EDE               	subwf	postinc2,f,c
  6852  00214E  0E00               	movlw	0
  6853  002150  5ADD               	subwfb	postdec2,f,c
  6854  002152  006F FF78  F048    	movff	postinc2,btemp+10
  6855  002158  006F FF74  F049    	movff	postdec2,btemp+11
  6856  00215E  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6857  002164  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6858  00216A  50DF               	movf	indf2,w,c
  6859  00216C  6E49               	movwf	btemp+11,c
  6860                           
  6861                           ;stkvar	_c @ sp[(-11)+10]
  6862  00216E  0EFF               	movlw	-1
  6863  002170  0060  F127  FFE3   	movff	btemp+11,plusw1
  6864                           
  6865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6866                           ;stkvar	_c @ sp[(-11)+10]
  6867  002176  0EFF               	movlw	-1
  6868  002178  50E3               	movf	plusw1,w,c
  6869  00217A  6EE6               	movwf	postinc1,c
  6870                           
  6871                           ;stkvar	_fp @ sp[(-12)+-2]
  6872  00217C  0EF2               	movlw	-14
  6873  00217E  006F FF8F FFE6     	movff	plusw1,postinc1
  6874  002184  006F FF8F FFE6     	movff	plusw1,postinc1
  6875  00218A  EC32  F026         	call	_ctoa	;wreg free
  6876  00218E  D1E3               	goto	l1730
  6877  002190                     l6504:
  6878                           
  6879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6880                           ;stkvar	_fmt @ sp[(-11)+-4]
  6881  002190  0EF1               	movlw	-15
  6882  002192  006F FF8F FFD9     	movff	plusw1,fsr2l
  6883  002198  0EF2               	movlw	-14
  6884  00219A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6885  0021A0  006F FF7F FFF6     	movff	indf2,tblptrl
  6886  0021A6                     	if	1	;There is more than 1 active tblptr byte
  6887  0021A6  0E20               	movlw	high __smallconst
  6888  0021A8  6EF7               	movwf	tblptrh,c
  6889  0021AA                     	endif
  6890  0021AA                     	if	0	;tblptru may be non-zero
  6891  0021AA                     	endif
  6892  0021AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6893  0021AA  0E00               	movlw	low (__smallconst shr (0+16))
  6894  0021AC  6EF8               	movwf	tblptru,c
  6895  0021AE                     	endif
  6896  0021AE  0008               	tblrd		*
  6897  0021B0  50F5               	movf	tablat,w,c
  6898  0021B2  0A64               	xorlw	100
  6899  0021B4  B4D8               	btfsc	status,2,c
  6900  0021B6  D014               	goto	u3710
  6901                           
  6902                           ;stkvar	_fmt @ sp[(-11)+-4]
  6903  0021B8  0EF1               	movlw	-15
  6904  0021BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6905  0021C0  0EF2               	movlw	-14
  6906  0021C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6907  0021C8  006F FF7F FFF6     	movff	indf2,tblptrl
  6908  0021CE                     	if	1	;There is more than 1 active tblptr byte
  6909  0021CE  0E20               	movlw	high __smallconst
  6910  0021D0  6EF7               	movwf	tblptrh,c
  6911  0021D2                     	endif
  6912  0021D2                     	if	0	;tblptru may be non-zero
  6913  0021D2                     	endif
  6914  0021D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6915  0021D2  0E00               	movlw	low (__smallconst shr (0+16))
  6916  0021D4  6EF8               	movwf	tblptru,c
  6917  0021D6                     	endif
  6918  0021D6  0008               	tblrd		*
  6919  0021D8  50F5               	movf	tablat,w,c
  6920  0021DA  0A69               	xorlw	105
  6921  0021DC  A4D8               	btfss	status,2,c
  6922  0021DE  D073               	goto	l6516
  6923  0021E0                     u3710:
  6924                           
  6925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6926                           ;stkvar	_fmt @ sp[(-11)+-4]
  6927  0021E0  0EF1               	movlw	-15
  6928  0021E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6929  0021E8  0EF2               	movlw	-14
  6930  0021EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6931  0021F0  2ADF               	incf	indf2,f,c
  6932                           
  6933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6934                           ;stkvar	_ap @ sp[(-11)+-6]
  6935  0021F2  0EEF               	movlw	-17
  6936  0021F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6937  0021FA  0EF0               	movlw	-16
  6938  0021FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6939  002202  0E02               	movlw	2
  6940  002204  5EDE               	subwf	postinc2,f,c
  6941  002206  0E00               	movlw	0
  6942  002208  5ADD               	subwfb	postdec2,f,c
  6943  00220A  006F FF78  F048    	movff	postinc2,btemp+10
  6944  002210  006F FF74  F049    	movff	postdec2,btemp+11
  6945  002216  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6946  00221C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6947  002222  006F FF78  F048    	movff	postinc2,btemp+10
  6948  002228  006F FF74  F049    	movff	postdec2,btemp+11
  6949                           
  6950                           ;stkvar	_ll @ sp[(-11)+0]
  6951  00222E  0EF5               	movlw	-11
  6952  002230  0060  F123  FFE3   	movff	btemp+10,plusw1
  6953  002236  0EF6               	movlw	-10
  6954  002238  0060  F127  FFE3   	movff	btemp+11,plusw1
  6955  00223E  6A3E               	clrf	btemp,c
  6956  002240  BEE3               	btfsc	plusw1,7,c
  6957  002242  683E               	setf	btemp,c
  6958  002244  0EF7               	movlw	-9
  6959  002246  0060  F0FB  FFE3   	movff	btemp,plusw1
  6960  00224C  0EF8               	movlw	-8
  6961  00224E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6962  002254  0EF9               	movlw	-7
  6963  002256  0060  F0FB  FFE3   	movff	btemp,plusw1
  6964  00225C  0EFA               	movlw	-6
  6965  00225E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6966  002264  0EFB               	movlw	-5
  6967  002266  0060  F0FB  FFE3   	movff	btemp,plusw1
  6968  00226C  0EFC               	movlw	-4
  6969  00226E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6970  002274                     l6512:
  6971                           
  6972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6973                           ;stkvar	_ll @ sp[(-11)+0]
  6974  002274  50E1               	movf	fsr1l,w,c
  6975  002276  0FF5               	addlw	-11
  6976  002278  6ED9               	movwf	fsr2l,c
  6977  00227A  50E2               	movf	fsr1h,w,c
  6978  00227C  6EDA               	movwf	fsr2h,c
  6979  00227E  0EFF               	movlw	255
  6980  002280  22DA               	addwfc	fsr2h,f,c
  6981  002282  006F FF7B FFE6     	movff	postinc2,postinc1
  6982  002288  006F FF7B FFE6     	movff	postinc2,postinc1
  6983  00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  6984  002294  006F FF7B FFE6     	movff	postinc2,postinc1
  6985  00229A  006F FF7B FFE6     	movff	postinc2,postinc1
  6986  0022A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6987  0022A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6988  0022AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6989                           
  6990                           ;stkvar	_fp @ sp[(-19)+-2]
  6991  0022B2  0EEB               	movlw	-21
  6992  0022B4  006F FF8F FFE6     	movff	plusw1,postinc1
  6993  0022BA  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  0022C0  ECB0  F012         	call	_dtoa	;wreg free
  6995  0022C4  D148               	goto	l1730
  6996  0022C6                     l6516:
  6997                           
  6998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  6999  0022C6  0E02               	movlw	2
  7000  0022C8  6EE6               	movwf	postinc1,c
  7001  0022CA  0E00               	movlw	0
  7002  0022CC  6EE6               	movwf	postinc1,c
  7003  0022CE  0EA7               	movlw	STR_15& (0+255)
  7004  0022D0  6EE6               	movwf	postinc1,c
  7005                           
  7006                           ;stkvar	_fmt @ sp[(-14)+-4]
  7007  0022D2  0EEE               	movlw	-18
  7008  0022D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7009  0022DA  0EEF               	movlw	-17
  7010  0022DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7011  0022E2  50DF               	movf	indf2,w,c
  7012  0022E4  6EE6               	movwf	postinc1,c
  7013  0022E6  EC2B  F020         	call	_strncmp	;wreg free
  7014  0022EA  503E               	movf	btemp,w,c
  7015  0022EC  103F               	iorwf	btemp+1,w,c
  7016  0022EE  B4D8               	btfsc	status,2,c
  7017  0022F0  D016               	goto	u3730
  7018  0022F2  0E02               	movlw	2
  7019  0022F4  6EE6               	movwf	postinc1,c
  7020  0022F6  0E00               	movlw	0
  7021  0022F8  6EE6               	movwf	postinc1,c
  7022  0022FA  0EAA               	movlw	STR_19& (0+255)
  7023  0022FC  6EE6               	movwf	postinc1,c
  7024                           
  7025                           ;stkvar	_fmt @ sp[(-14)+-4]
  7026  0022FE  0EEE               	movlw	-18
  7027  002300  006F FF8F FFD9     	movff	plusw1,fsr2l
  7028  002306  0EEF               	movlw	-17
  7029  002308  006F FF8F FFDA     	movff	plusw1,fsr2h
  7030  00230E  50DF               	movf	indf2,w,c
  7031  002310  6EE6               	movwf	postinc1,c
  7032  002312  EC2B  F020         	call	_strncmp	;wreg free
  7033  002316  503E               	movf	btemp,w,c
  7034  002318  103F               	iorwf	btemp+1,w,c
  7035  00231A  A4D8               	btfss	status,2,c
  7036  00231C  D067               	goto	l6528
  7037  00231E                     u3730:
  7038                           
  7039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7040                           ;stkvar	_fmt @ sp[(-11)+-4]
  7041  00231E  0EF1               	movlw	-15
  7042  002320  006F FF8F FFD9     	movff	plusw1,fsr2l
  7043  002326  0EF2               	movlw	-14
  7044  002328  006F FF8F FFDA     	movff	plusw1,fsr2h
  7045  00232E  0E02               	movlw	2
  7046  002330  26DF               	addwf	indf2,f,c
  7047                           
  7048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7049                           ;stkvar	_ap @ sp[(-11)+-6]
  7050  002332  0EEF               	movlw	-17
  7051  002334  006F FF8F FFD9     	movff	plusw1,fsr2l
  7052  00233A  0EF0               	movlw	-16
  7053  00233C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7054  002342  0E04               	movlw	4
  7055  002344  5EDE               	subwf	postinc2,f,c
  7056  002346  0E00               	movlw	0
  7057  002348  5ADD               	subwfb	postdec2,f,c
  7058  00234A  006F FF78  F048    	movff	postinc2,btemp+10
  7059  002350  006F FF74  F049    	movff	postdec2,btemp+11
  7060  002356  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7061  00235C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7062  002362  006F FF78  F046    	movff	postinc2,btemp+8
  7063  002368  006F FF78  F047    	movff	postinc2,btemp+9
  7064  00236E  006F FF78  F048    	movff	postinc2,btemp+10
  7065  002374  006F FF78  F049    	movff	postinc2,btemp+11
  7066  00237A  0060  F118  F04E   	movff	btemp+8,btemp+16
  7067  002380  0060  F11C  F04F   	movff	btemp+9,btemp+17
  7068  002386  0060  F120  F050   	movff	btemp+10,btemp+18
  7069  00238C  0060  F124  F051   	movff	btemp+11,btemp+19
  7070  002392  6A52               	clrf	btemp+20,c
  7071  002394  BE51               	btfsc	btemp+19,7,c
  7072  002396  6852               	setf	btemp+20,c
  7073  002398  0060  F148  F053   	movff	btemp+20,btemp+21
  7074  00239E  0060  F148  F054   	movff	btemp+20,btemp+22
  7075  0023A4  0060  F148  F055   	movff	btemp+20,btemp+23
  7076                           
  7077                           ;stkvar	_ll @ sp[(-11)+0]
  7078  0023AA  0EF5               	movlw	-11
  7079  0023AC  0060  F13B  FFE3   	movff	btemp+16,plusw1
  7080  0023B2  0EF6               	movlw	-10
  7081  0023B4  0060  F13F  FFE3   	movff	btemp+17,plusw1
  7082  0023BA  0EF7               	movlw	-9
  7083  0023BC  0060  F143  FFE3   	movff	btemp+18,plusw1
  7084  0023C2  0EF8               	movlw	-8
  7085  0023C4  0060  F147  FFE3   	movff	btemp+19,plusw1
  7086  0023CA  0EF9               	movlw	-7
  7087  0023CC  0060  F14B  FFE3   	movff	btemp+20,plusw1
  7088  0023D2  0EFA               	movlw	-6
  7089  0023D4  0060  F14F  FFE3   	movff	btemp+21,plusw1
  7090  0023DA  0EFB               	movlw	-5
  7091  0023DC  0060  F153  FFE3   	movff	btemp+22,plusw1
  7092  0023E2  0EFC               	movlw	-4
  7093  0023E4  0060  F157  FFE3   	movff	btemp+23,plusw1
  7094  0023EA  D744               	goto	l6512
  7095  0023EC                     l6528:
  7096                           
  7097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7098                           ;stkvar	_fmt @ sp[(-11)+-4]
  7099  0023EC  0EF1               	movlw	-15
  7100  0023EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7101  0023F4  0EF2               	movlw	-14
  7102  0023F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7103  0023FC  006F FF7F FFF6     	movff	indf2,tblptrl
  7104  002402                     	if	1	;There is more than 1 active tblptr byte
  7105  002402  0E20               	movlw	high __smallconst
  7106  002404  6EF7               	movwf	tblptrh,c
  7107  002406                     	endif
  7108  002406                     	if	0	;tblptru may be non-zero
  7109  002406                     	endif
  7110  002406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7111  002406  0E00               	movlw	low (__smallconst shr (0+16))
  7112  002408  6EF8               	movwf	tblptru,c
  7113  00240A                     	endif
  7114  00240A  0008               	tblrd		*
  7115  00240C  50F5               	movf	tablat,w,c
  7116  00240E  0A73               	xorlw	115
  7117  002410  A4D8               	btfss	status,2,c
  7118  002412  D040               	goto	l6538
  7119                           
  7120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7121                           ;stkvar	_fmt @ sp[(-11)+-4]
  7122  002414  0EF1               	movlw	-15
  7123  002416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7124  00241C  0EF2               	movlw	-14
  7125  00241E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7126  002424  2ADF               	incf	indf2,f,c
  7127                           
  7128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7129                           ;stkvar	_ap @ sp[(-11)+-6]
  7130  002426  0EEF               	movlw	-17
  7131  002428  006F FF8F FFD9     	movff	plusw1,fsr2l
  7132  00242E  0EF0               	movlw	-16
  7133  002430  006F FF8F FFDA     	movff	plusw1,fsr2h
  7134  002436  0E02               	movlw	2
  7135  002438  5EDE               	subwf	postinc2,f,c
  7136  00243A  0E00               	movlw	0
  7137  00243C  5ADD               	subwfb	postdec2,f,c
  7138  00243E  006F FF78  F048    	movff	postinc2,btemp+10
  7139  002444  006F FF74  F049    	movff	postdec2,btemp+11
  7140  00244A  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7141  002450  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7142  002456  006F FF78  F048    	movff	postinc2,btemp+10
  7143  00245C  006F FF74  F049    	movff	postdec2,btemp+11
  7144                           
  7145                           ;stkvar	_cp @ sp[(-11)+8]
  7146  002462  0EFE               	movlw	-2
  7147  002464  0060  F127  FFE3   	movff	btemp+11,plusw1
  7148  00246A  0EFD               	movlw	-3
  7149  00246C  0060  F123  FFE3   	movff	btemp+10,plusw1
  7150                           
  7151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7152                           ;stkvar	_cp @ sp[(-11)+8]
  7153  002472  0EFD               	movlw	-3
  7154  002474  006F FF8F FFE6     	movff	plusw1,postinc1
  7155  00247A  006F FF8F FFE6     	movff	plusw1,postinc1
  7156                           
  7157                           ;stkvar	_fp @ sp[(-13)+-2]
  7158  002480  0EF1               	movlw	-15
  7159  002482  006F FF8F FFE6     	movff	plusw1,postinc1
  7160  002488  006F FF8F FFE6     	movff	plusw1,postinc1
  7161  00248E  EC70  F019         	call	_stoa	;wreg free
  7162  002492  D061               	goto	l1730
  7163  002494                     l6538:
  7164                           
  7165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7166                           ;stkvar	_fmt @ sp[(-11)+-4]
  7167  002494  0EF1               	movlw	-15
  7168  002496  006F FF8F FFD9     	movff	plusw1,fsr2l
  7169  00249C  0EF2               	movlw	-14
  7170  00249E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7171  0024A4  006F FF7F FFF6     	movff	indf2,tblptrl
  7172  0024AA                     	if	1	;There is more than 1 active tblptr byte
  7173  0024AA  0E20               	movlw	high __smallconst
  7174  0024AC  6EF7               	movwf	tblptrh,c
  7175  0024AE                     	endif
  7176  0024AE                     	if	0	;tblptru may be non-zero
  7177  0024AE                     	endif
  7178  0024AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7179  0024AE  0E00               	movlw	low (__smallconst shr (0+16))
  7180  0024B0  6EF8               	movwf	tblptru,c
  7181  0024B2                     	endif
  7182  0024B2  0008               	tblrd		*
  7183  0024B4  50F5               	movf	tablat,w,c
  7184  0024B6  0A25               	xorlw	37
  7185  0024B8  A4D8               	btfss	status,2,c
  7186  0024BA  D018               	goto	l6548
  7187                           
  7188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7189                           ;stkvar	_fmt @ sp[(-11)+-4]
  7190  0024BC  0EF1               	movlw	-15
  7191  0024BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7192  0024C4  0EF2               	movlw	-14
  7193  0024C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7194  0024CC  2ADF               	incf	indf2,f,c
  7195                           
  7196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7197                           ;stkvar	_fp @ sp[(-11)+-2]
  7198  0024CE  0EF3               	movlw	-13
  7199  0024D0  006F FF8F FFE6     	movff	plusw1,postinc1
  7200  0024D6  006F FF8F FFE6     	movff	plusw1,postinc1
  7201  0024DC  0E25               	movlw	37
  7202  0024DE  6EE6               	movwf	postinc1,c
  7203  0024E0  0E00               	movlw	0
  7204  0024E2  6EE6               	movwf	postinc1,c
  7205  0024E4  EC7D  F021         	call	_fputc	;wreg free
  7206  0024E8                     l6544:
  7207                           
  7208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7209  0024E8  0E01               	movlw	1
  7210  0024EA  D00A               	goto	L16
  7211  0024EC                     l6548:
  7212                           
  7213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7214                           ;stkvar	_fmt @ sp[(-11)+-4]
  7215  0024EC  0EF1               	movlw	-15
  7216  0024EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7217  0024F4  0EF2               	movlw	-14
  7218  0024F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7219  0024FC  2ADF               	incf	indf2,f,c
  7220                           
  7221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7222  0024FE  0E00               	movlw	0
  7223  002500                     L16:
  7224  002500  6E3E               	movwf	btemp,c
  7225  002502  0E00               	movlw	0
  7226  002504  6E3F               	movwf	btemp+1,c
  7227  002506  D027               	goto	l1730
  7228  002508                     l6554:
  7229                           
  7230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7231                           ;stkvar	_fp @ sp[(-11)+-2]
  7232  002508  0EF3               	movlw	-13
  7233  00250A  006F FF8F FFE6     	movff	plusw1,postinc1
  7234  002510  006F FF8F FFE6     	movff	plusw1,postinc1
  7235                           
  7236                           ;stkvar	_fmt @ sp[(-13)+-4]
  7237  002516  0EEF               	movlw	-17
  7238  002518  006F FF8F FFD9     	movff	plusw1,fsr2l
  7239  00251E  0EF0               	movlw	-16
  7240  002520  006F FF8F FFDA     	movff	plusw1,fsr2h
  7241  002526  006F FF7F FFF6     	movff	indf2,tblptrl
  7242  00252C                     	if	1	;There is more than 1 active tblptr byte
  7243  00252C  0E20               	movlw	high __smallconst
  7244  00252E  6EF7               	movwf	tblptrh,c
  7245  002530                     	endif
  7246  002530                     	if	0	;tblptru may be non-zero
  7247  002530                     	endif
  7248  002530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7249  002530  0E00               	movlw	low (__smallconst shr (0+16))
  7250  002532  6EF8               	movwf	tblptru,c
  7251  002534                     	endif
  7252  002534  0008               	tblrd		*
  7253  002536  50F5               	movf	tablat,w,c
  7254  002538  6EE6               	movwf	postinc1,c
  7255  00253A  0E00               	movlw	0
  7256  00253C  6EE6               	movwf	postinc1,c
  7257  00253E  EC7D  F021         	call	_fputc	;wreg free
  7258                           
  7259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7260                           ;stkvar	_fmt @ sp[(-11)+-4]
  7261  002542  0EF1               	movlw	-15
  7262  002544  006F FF8F FFD9     	movff	plusw1,fsr2l
  7263  00254A  0EF2               	movlw	-14
  7264  00254C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7265  002552  2ADF               	incf	indf2,f,c
  7266  002554  D7C9               	goto	l6544
  7267  002556                     l1730:
  7268                           
  7269                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7270  002556  0EEF               	movlw	239
  7271  002558  26E1               	addwf	fsr1l,f,c
  7272  00255A  0EFF               	movlw	255
  7273  00255C  22E2               	addwfc	fsr1h,f,c
  7274  00255E  0012               	return		;funcret
  7275  002560                     __end_of_vfpfcnvrt:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _strncmp *****************
  7279 ;; Defined at:
  7280 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  _l              1  [STACK] PTR const unsigned char 
  7283 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7284 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7285 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7286 ;;		 -> STR_1(17), 
  7287 ;;  _r              1  [STACK] PTR const unsigned char 
  7288 ;;		 -> STR_21(3), STR_17(3), 
  7289 ;;  n               2  [STACK] unsigned int 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  r               1  [STACK] PTR const unsigned char 
  7292 ;;		 -> STR_21(3), STR_17(3), 
  7293 ;;  l               1  [STACK] PTR const unsigned char 
  7294 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7295 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7296 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7297 ;;		 -> STR_1(17), 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2  [STACK] int 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7311 ;;Total ram usage:        0 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_vfpfcnvrt
  7318 ;; This function uses a reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text34
  7322  004056                     __ptext34:
  7323                           	opt callstack 0
  7324  004056                     _strncmp:
  7325                           	opt callstack 0
  7326                           
  7327                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7328  004056  52E6               	movf	postinc1,f,c
  7329  004058  52E6               	movf	postinc1,f,c
  7330                           
  7331                           ;stkvar	__l @ sp[(-2)+-1]
  7332                           
  7333                           ;incstack = 0
  7334  00405A  0EFD               	movlw	-3
  7335  00405C  006F FF8C  F049    	movff	plusw1,btemp+11
  7336                           
  7337                           ;stkvar	_l @ sp[(-2)+1]
  7338  004062  0EFF               	movlw	-1
  7339  004064  0060  F127  FFE3   	movff	btemp+11,plusw1
  7340                           
  7341                           ;stkvar	__r @ sp[(-2)+-2]
  7342  00406A  0EFC               	movlw	-4
  7343  00406C  006F FF8C  F049    	movff	plusw1,btemp+11
  7344                           
  7345                           ;stkvar	_r @ sp[(-2)+0]
  7346  004072  0EFE               	movlw	-2
  7347  004074  0060  F127  FFE3   	movff	btemp+11,plusw1
  7348                           
  7349                           ;stkvar	_n @ sp[(-2)+-4]
  7350  00407A  0EFA               	movlw	-6
  7351  00407C  006F FF8C  F03E    	movff	plusw1,btemp
  7352  004082  0E01               	movlw	1
  7353  004084  5E3E               	subwf	btemp,f,c
  7354  004086  0EFA               	movlw	-6
  7355  004088  0060  F0FB  FFE3   	movff	btemp,plusw1
  7356  00408E  0EFB               	movlw	-5
  7357  004090  006F FF8C  F03E    	movff	plusw1,btemp
  7358  004096  0E00               	movlw	0
  7359  004098  5A3E               	subwfb	btemp,f,c
  7360  00409A  0EFB               	movlw	-5
  7361  00409C  0060  F0FB  FFE3   	movff	btemp,plusw1
  7362  0040A2  0EFA               	movlw	-6
  7363  0040A4  28E3               	incf	plusw1,w,c
  7364  0040A6  E121               	bnz	l4866
  7365  0040A8  0EFB               	movlw	-5
  7366  0040AA  28E3               	incf	plusw1,w,c
  7367  0040AC  A4D8               	btfss	status,2,c
  7368  0040AE  D01D               	goto	l4866
  7369  0040B0  0E00               	movlw	0
  7370  0040B2  6E3E               	movwf	btemp,c
  7371  0040B4  0E00               	movlw	0
  7372  0040B6  6E3F               	movwf	btemp+1,c
  7373  0040B8  D091               	goto	l2479
  7374  0040BA                     l4862:
  7375                           
  7376                           ;stkvar	_l @ sp[(-2)+1]
  7377  0040BA  0EFF               	movlw	-1
  7378  0040BC  2AE3               	incf	plusw1,f,c
  7379                           
  7380                           ;stkvar	_r @ sp[(-2)+0]
  7381  0040BE  0EFE               	movlw	-2
  7382  0040C0  2AE3               	incf	plusw1,f,c
  7383                           
  7384                           ;stkvar	_n @ sp[(-2)+-4]
  7385  0040C2  0EFA               	movlw	-6
  7386  0040C4  006F FF8C  F03E    	movff	plusw1,btemp
  7387  0040CA  0E01               	movlw	1
  7388  0040CC  5E3E               	subwf	btemp,f,c
  7389  0040CE  0EFA               	movlw	-6
  7390  0040D0  0060  F0FB  FFE3   	movff	btemp,plusw1
  7391  0040D6  0EFB               	movlw	-5
  7392  0040D8  006F FF8C  F03E    	movff	plusw1,btemp
  7393  0040DE  0E00               	movlw	0
  7394  0040E0  5A3E               	subwfb	btemp,f,c
  7395  0040E2  0EFB               	movlw	-5
  7396  0040E4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7397  0040EA                     l4866:
  7398                           
  7399                           ;stkvar	_l @ sp[(-2)+1]
  7400  0040EA  50E1               	movf	fsr1l,w,c
  7401  0040EC  0FFF               	addlw	-1
  7402  0040EE  6ED9               	movwf	fsr2l,c
  7403  0040F0  50E2               	movf	fsr1h,w,c
  7404  0040F2  6EDA               	movwf	fsr2h,c
  7405  0040F4  0EFF               	movlw	255
  7406  0040F6  22DA               	addwfc	fsr2h,f,c
  7407  0040F8  006F FF7F FFF6     	movff	indf2,tblptrl
  7408  0040FE                     	if	1	;There is more than 1 active tblptr byte
  7409  0040FE  0E20               	movlw	high __smallconst
  7410  004100  6EF7               	movwf	tblptrh,c
  7411  004102                     	endif
  7412  004102                     	if	0	;tblptru may be non-zero
  7413  004102                     	endif
  7414  004102                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7415  004102  0E00               	movlw	low (__smallconst shr (0+16))
  7416  004104  6EF8               	movwf	tblptru,c
  7417  004106                     	endif
  7418  004106  0008               	tblrd		*
  7419  004108  50F5               	movf	tablat,w,c
  7420  00410A  0900               	iorlw	0
  7421  00410C  B4D8               	btfsc	status,2,c
  7422  00410E  D041               	goto	u2420
  7423                           
  7424                           ;stkvar	_r @ sp[(-2)+0]
  7425  004110  50E1               	movf	fsr1l,w,c
  7426  004112  0FFE               	addlw	-2
  7427  004114  6ED9               	movwf	fsr2l,c
  7428  004116  50E2               	movf	fsr1h,w,c
  7429  004118  6EDA               	movwf	fsr2h,c
  7430  00411A  0EFF               	movlw	255
  7431  00411C  22DA               	addwfc	fsr2h,f,c
  7432  00411E  006F FF7F FFF6     	movff	indf2,tblptrl
  7433  004124                     	if	1	;There is more than 1 active tblptr byte
  7434  004124  0E20               	movlw	high __smallconst
  7435  004126  6EF7               	movwf	tblptrh,c
  7436  004128                     	endif
  7437  004128                     	if	0	;tblptru may be non-zero
  7438  004128                     	endif
  7439  004128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7440  004128  0E00               	movlw	low (__smallconst shr (0+16))
  7441  00412A  6EF8               	movwf	tblptru,c
  7442  00412C                     	endif
  7443  00412C  0008               	tblrd		*
  7444  00412E  50F5               	movf	tablat,w,c
  7445  004130  0900               	iorlw	0
  7446  004132  B4D8               	btfsc	status,2,c
  7447  004134  D02E               	goto	u2420
  7448                           
  7449                           ;stkvar	_n @ sp[(-2)+-4]
  7450  004136  0EFA               	movlw	-6
  7451  004138  006F FF8C  F03E    	movff	plusw1,btemp
  7452  00413E  0EFB               	movlw	-5
  7453  004140  50E3               	movf	plusw1,w,c
  7454  004142  103E               	iorwf	btemp,w,c
  7455  004144  B4D8               	btfsc	status,2,c
  7456  004146  D025               	goto	u2420
  7457                           
  7458                           ;stkvar	_l @ sp[(-2)+1]
  7459  004148  50E1               	movf	fsr1l,w,c
  7460  00414A  0FFF               	addlw	-1
  7461  00414C  6ED9               	movwf	fsr2l,c
  7462  00414E  50E2               	movf	fsr1h,w,c
  7463  004150  6EDA               	movwf	fsr2h,c
  7464  004152  0EFF               	movlw	255
  7465  004154  22DA               	addwfc	fsr2h,f,c
  7466  004156  006F FF7F FFF6     	movff	indf2,tblptrl
  7467  00415C                     	if	1	;There is more than 1 active tblptr byte
  7468  00415C  0E20               	movlw	high __smallconst
  7469  00415E  6EF7               	movwf	tblptrh,c
  7470  004160                     	endif
  7471  004160                     	if	0	;tblptru may be non-zero
  7472  004160                     	endif
  7473  004160                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7474  004160  0E00               	movlw	low (__smallconst shr (0+16))
  7475  004162  6EF8               	movwf	tblptru,c
  7476  004164                     	endif
  7477  004164  0008               	tblrd		*
  7478  004166  006F FFD4  F049    	movff	tablat,btemp+11
  7479                           
  7480                           ;stkvar	_r @ sp[(-2)+0]
  7481  00416C  50E1               	movf	fsr1l,w,c
  7482  00416E  0FFE               	addlw	-2
  7483  004170  6ED9               	movwf	fsr2l,c
  7484  004172  50E2               	movf	fsr1h,w,c
  7485  004174  6EDA               	movwf	fsr2h,c
  7486  004176  0EFF               	movlw	255
  7487  004178  22DA               	addwfc	fsr2h,f,c
  7488  00417A  006F FF7F FFF6     	movff	indf2,tblptrl
  7489  004180                     	if	1	;There is more than 1 active tblptr byte
  7490  004180  0E20               	movlw	high __smallconst
  7491  004182  6EF7               	movwf	tblptrh,c
  7492  004184                     	endif
  7493  004184                     	if	0	;tblptru may be non-zero
  7494  004184                     	endif
  7495  004184                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7496  004184  0E00               	movlw	low (__smallconst shr (0+16))
  7497  004186  6EF8               	movwf	tblptru,c
  7498  004188                     	endif
  7499  004188  0008               	tblrd		*
  7500  00418A  50F5               	movf	tablat,w,c
  7501  00418C  1849               	xorwf	btemp+11,w,c
  7502  00418E  B4D8               	btfsc	status,2,c
  7503  004190  D794               	goto	l4862
  7504  004192                     u2420:
  7505                           
  7506                           ;stkvar	_l @ sp[(-2)+1]
  7507  004192  50E1               	movf	fsr1l,w,c
  7508  004194  0FFF               	addlw	-1
  7509  004196  6ED9               	movwf	fsr2l,c
  7510  004198  50E2               	movf	fsr1h,w,c
  7511  00419A  6EDA               	movwf	fsr2h,c
  7512  00419C  0EFF               	movlw	255
  7513  00419E  22DA               	addwfc	fsr2h,f,c
  7514  0041A0  006F FF7F FFF6     	movff	indf2,tblptrl
  7515  0041A6                     	if	1	;There is more than 1 active tblptr byte
  7516  0041A6  0E20               	movlw	high __smallconst
  7517  0041A8  6EF7               	movwf	tblptrh,c
  7518  0041AA                     	endif
  7519  0041AA                     	if	0	;tblptru may be non-zero
  7520  0041AA                     	endif
  7521  0041AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7522  0041AA  0E00               	movlw	low (__smallconst shr (0+16))
  7523  0041AC  6EF8               	movwf	tblptru,c
  7524  0041AE                     	endif
  7525  0041AE  0008               	tblrd		*
  7526  0041B0  50F5               	movf	tablat,w,c
  7527  0041B2  6E3E               	movwf	btemp,c
  7528  0041B4  6A3F               	clrf	btemp+1,c
  7529                           
  7530                           ;stkvar	_r @ sp[(-2)+0]
  7531  0041B6  50E1               	movf	fsr1l,w,c
  7532  0041B8  0FFE               	addlw	-2
  7533  0041BA  6ED9               	movwf	fsr2l,c
  7534  0041BC  50E2               	movf	fsr1h,w,c
  7535  0041BE  6EDA               	movwf	fsr2h,c
  7536  0041C0  0EFF               	movlw	255
  7537  0041C2  22DA               	addwfc	fsr2h,f,c
  7538  0041C4  006F FF7F FFF6     	movff	indf2,tblptrl
  7539  0041CA                     	if	1	;There is more than 1 active tblptr byte
  7540  0041CA  0E20               	movlw	high __smallconst
  7541  0041CC  6EF7               	movwf	tblptrh,c
  7542  0041CE                     	endif
  7543  0041CE                     	if	0	;tblptru may be non-zero
  7544  0041CE                     	endif
  7545  0041CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7546  0041CE  0E00               	movlw	low (__smallconst shr (0+16))
  7547  0041D0  6EF8               	movwf	tblptru,c
  7548  0041D2                     	endif
  7549  0041D2  0008               	tblrd		*
  7550  0041D4  50F5               	movf	tablat,w,c
  7551  0041D6  5E3E               	subwf	btemp,f,c
  7552  0041D8  0E00               	movlw	0
  7553  0041DA  5A3F               	subwfb	btemp+1,f,c
  7554  0041DC                     l2479:
  7555                           
  7556                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7557  0041DC  0EFA               	movlw	250
  7558  0041DE  26E1               	addwf	fsr1l,f,c
  7559  0041E0  0EFF               	movlw	255
  7560  0041E2  22E2               	addwfc	fsr1h,f,c
  7561  0041E4  0012               	return		;funcret
  7562  0041E6                     __end_of_strncmp:
  7563                           	opt callstack 0
  7564                           
  7565 ;; *************** function _stoa *****************
  7566 ;; Defined at:
  7567 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7570 ;;		 -> f(5), NULL(0), 
  7571 ;;  s               2  [STACK] PTR unsigned char 
  7572 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(86), 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  nuls            7  [STACK] unsigned char [7]
  7575 ;;  l               2  [STACK] int 
  7576 ;;  p               2  [STACK] int 
  7577 ;;  cp              2  [STACK] PTR unsigned char 
  7578 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(5), 
  7579 ;;		 -> V(86), 
  7580 ;;  w               2  [STACK] int 
  7581 ;;  i               2  [STACK] int 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  2  [STACK] int 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;Total ram usage:        0 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    6
  7598 ;; This function calls:
  7599 ;;		_fputc
  7600 ;;		_strlen
  7601 ;; This function is called by:
  7602 ;;		_vfpfcnvrt
  7603 ;; This function uses a reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text35
  7607  0032E0                     __ptext35:
  7608                           	opt callstack 0
  7609  0032E0                     _stoa:
  7610                           	opt callstack 0
  7611                           
  7612                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7613  0032E0  0E11               	movlw	17
  7614  0032E2  26E1               	addwf	fsr1l,f,c
  7615  0032E4  0E00               	movlw	0
  7616  0032E6  22E2               	addwfc	fsr1h,f,c
  7617                           
  7618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7619                           
  7620                           ;incstack = 0
  7621  0032E8  EE20  F0DF         	lfsr	2,stoa@F1144
  7622                           
  7623                           ;stkvar	_nuls @ sp[(-17)+0]
  7624  0032EC  0E07               	movlw	7
  7625  0032EE  6E3E               	movwf	btemp,c
  7626  0032F0  0EEF               	movlw	-17
  7627  0032F2                     us358999:
  7628  0032F2  006F FF7B FFE3     	movff	postinc2,plusw1
  7629  0032F8  28E8               	incf	wreg,w,c
  7630  0032FA  2E3E               	decfsz	btemp,f,c
  7631  0032FC  D7FA               	bra	us358999
  7632                           
  7633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7634                           ;stkvar	_s @ sp[(-17)+-4]
  7635  0032FE  0EEB               	movlw	-21
  7636  003300  006F FF8C  F048    	movff	plusw1,btemp+10
  7637  003306  0EEC               	movlw	-20
  7638  003308  006F FF8C  F049    	movff	plusw1,btemp+11
  7639                           
  7640                           ;stkvar	_cp @ sp[(-17)+11]
  7641  00330E  0EFB               	movlw	-5
  7642  003310  0060  F127  FFE3   	movff	btemp+11,plusw1
  7643  003316  0EFA               	movlw	-6
  7644  003318  0060  F123  FFE3   	movff	btemp+10,plusw1
  7645                           
  7646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7647                           ;stkvar	_cp @ sp[(-17)+11]
  7648  00331E  0EFA               	movlw	-6
  7649  003320  006F FF8C  F03E    	movff	plusw1,btemp
  7650  003326  0EFB               	movlw	-5
  7651  003328  50E3               	movf	plusw1,w,c
  7652  00332A  103E               	iorwf	btemp,w,c
  7653  00332C  A4D8               	btfss	status,2,c
  7654  00332E  D00E               	goto	l6442
  7655                           
  7656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7657                           ;stkvar	_nuls @ sp[(-17)+0]
  7658  003330  0EEF               	movlw	239
  7659  003332  24E1               	addwf	fsr1l,w,c
  7660  003334  6E48               	movwf	btemp+10,c
  7661  003336  0EFF               	movlw	255
  7662  003338  20E2               	addwfc	fsr1h,w,c
  7663  00333A  6E49               	movwf	btemp+11,c
  7664                           
  7665                           ;stkvar	_cp @ sp[(-17)+11]
  7666  00333C  0EFB               	movlw	-5
  7667  00333E  0060  F127  FFE3   	movff	btemp+11,plusw1
  7668  003344  0EFA               	movlw	-6
  7669  003346  0060  F123  FFE3   	movff	btemp+10,plusw1
  7670  00334C                     l6442:
  7671                           
  7672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7673                           ;stkvar	_cp @ sp[(-17)+11]
  7674  00334C  0EFA               	movlw	-6
  7675  00334E  006F FF8F FFE6     	movff	plusw1,postinc1
  7676  003354  006F FF8F FFE6     	movff	plusw1,postinc1
  7677  00335A  EC64  F024         	call	_strlen	;wreg free
  7678                           
  7679                           ;stkvar	_l @ sp[(-17)+7]
  7680  00335E  0EF6               	movlw	-10
  7681  003360  0060  F0FB  FFE3   	movff	btemp,plusw1
  7682  003366  0EF7               	movlw	-9
  7683  003368  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  7684                           
  7685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7686                           ;stkvar	_p @ sp[(-17)+9]
  7687  00336E  0EF8               	movlw	-8
  7688  003370  0060  F09B  FFE3   	movff	_prec,plusw1
  7689  003376  0EF9               	movlw	-7
  7690  003378  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7691                           
  7692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7693                           ;stkvar	_p @ sp[(-17)+9]
  7694  00337E  0EF9               	movlw	-7
  7695  003380  BEE3               	btfsc	plusw1,7,c
  7696  003382  D023               	goto	l1711
  7697                           
  7698                           ;stkvar	_l @ sp[(-17)+7]
  7699                           ;stkvar	_p @ sp[(-17)+9]
  7700  003384  50E1               	movf	fsr1l,w,c
  7701  003386  0FF8               	addlw	-8
  7702  003388  6ED9               	movwf	fsr2l,c
  7703  00338A  50E2               	movf	fsr1h,w,c
  7704  00338C  6EDA               	movwf	fsr2h,c
  7705  00338E  0EFF               	movlw	255
  7706  003390  22DA               	addwfc	fsr2h,f,c
  7707  003392  0EF6               	movlw	-10
  7708  003394  50E3               	movf	plusw1,w,c
  7709  003396  5CDE               	subwf	postinc2,w,c
  7710  003398  50DE               	movf	postinc2,w,c
  7711  00339A  0A80               	xorlw	128
  7712  00339C  6E3E               	movwf	btemp,c
  7713  00339E  0EF7               	movlw	-9
  7714  0033A0  50E3               	movf	plusw1,w,c
  7715  0033A2  0A80               	xorlw	128
  7716  0033A4  583E               	subwfb	btemp,w,c
  7717  0033A6  B0D8               	btfsc	status,0,c
  7718  0033A8  D010               	goto	l1711
  7719                           
  7720                           ;stkvar	_p @ sp[(-17)+9]
  7721                           ;stkvar	_l @ sp[(-17)+7]
  7722  0033AA  0EF8               	movlw	-8
  7723  0033AC  006F FF8C  F03E    	movff	plusw1,btemp
  7724  0033B2  0EF6               	movlw	-10
  7725  0033B4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7726  0033BA  0EF9               	movlw	-7
  7727  0033BC  006F FF8C  F03E    	movff	plusw1,btemp
  7728  0033C2  0EF7               	movlw	-9
  7729  0033C4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7730  0033CA                     l1711:
  7731                           
  7732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7733                           ;stkvar	_l @ sp[(-17)+7]
  7734                           ;stkvar	_p @ sp[(-17)+9]
  7735  0033CA  0EF6               	movlw	-10
  7736  0033CC  006F FF8C  F03E    	movff	plusw1,btemp
  7737  0033D2  0EF8               	movlw	-8
  7738  0033D4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7739  0033DA  0EF7               	movlw	-9
  7740  0033DC  006F FF8C  F03E    	movff	plusw1,btemp
  7741  0033E2  0EF9               	movlw	-7
  7742  0033E4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7743                           
  7744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7745                           ;stkvar	_w @ sp[(-17)+13]
  7746  0033EA  0EFC               	movlw	-4
  7747  0033EC  0060  F093  FFE3   	movff	_width,plusw1
  7748  0033F2  0EFD               	movlw	-3
  7749  0033F4  0060  F097  FFE3   	movff	_width+1,plusw1
  7750                           
  7751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7752  0033FA  A028               	btfss	_flags,0,c
  7753  0033FC  D01F               	goto	l6462
  7754  0033FE  D031               	goto	u3630
  7755  003400                     l6458:
  7756                           
  7757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7758                           ;stkvar	_fp @ sp[(-17)+-2]
  7759  003400  0EED               	movlw	-19
  7760  003402  006F FF8F FFE6     	movff	plusw1,postinc1
  7761  003408  006F FF8F FFE6     	movff	plusw1,postinc1
  7762  00340E  0E20               	movlw	32
  7763  003410  6EE6               	movwf	postinc1,c
  7764  003412  0E00               	movlw	0
  7765  003414  6EE6               	movwf	postinc1,c
  7766  003416  EC7D  F021         	call	_fputc	;wreg free
  7767                           
  7768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7769                           ;stkvar	_l @ sp[(-17)+7]
  7770  00341A  0EF6               	movlw	-10
  7771  00341C  50E3               	movf	plusw1,w,c
  7772  00341E  0F01               	addlw	1
  7773  003420  6E3E               	movwf	btemp,c
  7774  003422  0EF6               	movlw	-10
  7775  003424  0060  F0FB  FFE3   	movff	btemp,plusw1
  7776  00342A  6A3E               	clrf	btemp,c
  7777  00342C  0EF7               	movlw	-9
  7778  00342E  50E3               	movf	plusw1,w,c
  7779  003430  203E               	addwfc	btemp,w,c
  7780  003432  6E3E               	movwf	btemp,c
  7781  003434  0EF7               	movlw	-9
  7782  003436  0060  F0FB  FFE3   	movff	btemp,plusw1
  7783  00343C                     l6462:
  7784                           
  7785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7786                           ;stkvar	_w @ sp[(-17)+13]
  7787                           ;stkvar	_l @ sp[(-17)+7]
  7788  00343C  50E1               	movf	fsr1l,w,c
  7789  00343E  0FF6               	addlw	-10
  7790  003440  6ED9               	movwf	fsr2l,c
  7791  003442  50E2               	movf	fsr1h,w,c
  7792  003444  6EDA               	movwf	fsr2h,c
  7793  003446  0EFF               	movlw	255
  7794  003448  22DA               	addwfc	fsr2h,f,c
  7795  00344A  0EFC               	movlw	-4
  7796  00344C  50E3               	movf	plusw1,w,c
  7797  00344E  5CDE               	subwf	postinc2,w,c
  7798  003450  50DE               	movf	postinc2,w,c
  7799  003452  0A80               	xorlw	128
  7800  003454  6E3E               	movwf	btemp,c
  7801  003456  0EFD               	movlw	-3
  7802  003458  50E3               	movf	plusw1,w,c
  7803  00345A  0A80               	xorlw	128
  7804  00345C  583E               	subwfb	btemp,w,c
  7805  00345E  A0D8               	btfss	status,0,c
  7806  003460  D7CF               	goto	l6458
  7807  003462                     u3630:
  7808                           
  7809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7810                           ;stkvar	_i @ sp[(-17)+15]
  7811  003462  0EFE               	movlw	-2
  7812  003464  6AE3               	clrf	plusw1,c
  7813  003466  0EFF               	movlw	-1
  7814  003468  6AE3               	clrf	plusw1,c
  7815                           
  7816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7817  00346A  D045               	goto	l6472
  7818  00346C                     l6466:
  7819                           
  7820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7821                           ;stkvar	_fp @ sp[(-17)+-2]
  7822  00346C  0EED               	movlw	-19
  7823  00346E  006F FF8F FFE6     	movff	plusw1,postinc1
  7824  003474  006F FF8F FFE6     	movff	plusw1,postinc1
  7825                           
  7826                           ;stkvar	_cp @ sp[(-19)+11]
  7827  00347A  0EF8               	movlw	-8
  7828  00347C  006F FF8F FFF6     	movff	plusw1,tblptrl
  7829  003482  0EF9               	movlw	-7
  7830  003484  006F FF8F FFF7     	movff	plusw1,tblptrh
  7831  00348A  0E00               	movlw	low (__smallconst shr (0+16))
  7832  00348C  6EF8               	movwf	tblptru,c
  7833  00348E  0E1F               	movlw	(high __ramtop+-1)
  7834  003490  64F7               	cpfsgt	tblptrh,c
  7835  003492  D003               	bra	u3647
  7836  003494  0008               	tblrd		*
  7837  003496  50F5               	movf	tablat,w,c
  7838  003498  D007               	bra	u3640
  7839  00349A                     u3647:
  7840  00349A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7841  0034A0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7842  0034A6  50EF               	movf	indf0,w,c
  7843  0034A8                     u3640:
  7844  0034A8  6EE6               	movwf	postinc1,c
  7845  0034AA  0E00               	movlw	0
  7846  0034AC  6EE6               	movwf	postinc1,c
  7847  0034AE  EC7D  F021         	call	_fputc	;wreg free
  7848                           
  7849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7850                           ;stkvar	_cp @ sp[(-17)+11]
  7851  0034B2  0EFA               	movlw	-6
  7852  0034B4  50E3               	movf	plusw1,w,c
  7853  0034B6  0F01               	addlw	1
  7854  0034B8  6E3E               	movwf	btemp,c
  7855  0034BA  0EFA               	movlw	-6
  7856  0034BC  0060  F0FB  FFE3   	movff	btemp,plusw1
  7857  0034C2  6A3E               	clrf	btemp,c
  7858  0034C4  0EFB               	movlw	-5
  7859  0034C6  50E3               	movf	plusw1,w,c
  7860  0034C8  203E               	addwfc	btemp,w,c
  7861  0034CA  6E3E               	movwf	btemp,c
  7862  0034CC  0EFB               	movlw	-5
  7863  0034CE  0060  F0FB  FFE3   	movff	btemp,plusw1
  7864                           
  7865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7866                           ;stkvar	_i @ sp[(-17)+15]
  7867  0034D4  0EFE               	movlw	-2
  7868  0034D6  50E3               	movf	plusw1,w,c
  7869  0034D8  0F01               	addlw	1
  7870  0034DA  6E3E               	movwf	btemp,c
  7871  0034DC  0EFE               	movlw	-2
  7872  0034DE  0060  F0FB  FFE3   	movff	btemp,plusw1
  7873  0034E4  6A3E               	clrf	btemp,c
  7874  0034E6  0EFF               	movlw	-1
  7875  0034E8  50E3               	movf	plusw1,w,c
  7876  0034EA  203E               	addwfc	btemp,w,c
  7877  0034EC  6E3E               	movwf	btemp,c
  7878  0034EE  0EFF               	movlw	-1
  7879  0034F0  0060  F0FB  FFE3   	movff	btemp,plusw1
  7880  0034F6                     l6472:
  7881                           
  7882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7883                           ;stkvar	_p @ sp[(-17)+9]
  7884                           ;stkvar	_i @ sp[(-17)+15]
  7885  0034F6  50E1               	movf	fsr1l,w,c
  7886  0034F8  0FFE               	addlw	-2
  7887  0034FA  6ED9               	movwf	fsr2l,c
  7888  0034FC  50E2               	movf	fsr1h,w,c
  7889  0034FE  6EDA               	movwf	fsr2h,c
  7890  003500  0EFF               	movlw	255
  7891  003502  22DA               	addwfc	fsr2h,f,c
  7892  003504  0EF8               	movlw	-8
  7893  003506  50E3               	movf	plusw1,w,c
  7894  003508  5CDE               	subwf	postinc2,w,c
  7895  00350A  50DE               	movf	postinc2,w,c
  7896  00350C  0A80               	xorlw	128
  7897  00350E  6E3E               	movwf	btemp,c
  7898  003510  0EF9               	movlw	-7
  7899  003512  50E3               	movf	plusw1,w,c
  7900  003514  0A80               	xorlw	128
  7901  003516  583E               	subwfb	btemp,w,c
  7902  003518  A0D8               	btfss	status,0,c
  7903  00351A  D7A8               	goto	l6466
  7904                           
  7905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7906  00351C  B028               	btfsc	_flags,0,c
  7907  00351E  D01F               	goto	l6480
  7908  003520  D031               	goto	u3670
  7909  003522                     l6476:
  7910                           
  7911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7912                           ;stkvar	_fp @ sp[(-17)+-2]
  7913  003522  0EED               	movlw	-19
  7914  003524  006F FF8F FFE6     	movff	plusw1,postinc1
  7915  00352A  006F FF8F FFE6     	movff	plusw1,postinc1
  7916  003530  0E20               	movlw	32
  7917  003532  6EE6               	movwf	postinc1,c
  7918  003534  0E00               	movlw	0
  7919  003536  6EE6               	movwf	postinc1,c
  7920  003538  EC7D  F021         	call	_fputc	;wreg free
  7921                           
  7922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7923                           ;stkvar	_l @ sp[(-17)+7]
  7924  00353C  0EF6               	movlw	-10
  7925  00353E  50E3               	movf	plusw1,w,c
  7926  003540  0F01               	addlw	1
  7927  003542  6E3E               	movwf	btemp,c
  7928  003544  0EF6               	movlw	-10
  7929  003546  0060  F0FB  FFE3   	movff	btemp,plusw1
  7930  00354C  6A3E               	clrf	btemp,c
  7931  00354E  0EF7               	movlw	-9
  7932  003550  50E3               	movf	plusw1,w,c
  7933  003552  203E               	addwfc	btemp,w,c
  7934  003554  6E3E               	movwf	btemp,c
  7935  003556  0EF7               	movlw	-9
  7936  003558  0060  F0FB  FFE3   	movff	btemp,plusw1
  7937  00355E                     l6480:
  7938                           
  7939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7940                           ;stkvar	_w @ sp[(-17)+13]
  7941                           ;stkvar	_l @ sp[(-17)+7]
  7942  00355E  50E1               	movf	fsr1l,w,c
  7943  003560  0FF6               	addlw	-10
  7944  003562  6ED9               	movwf	fsr2l,c
  7945  003564  50E2               	movf	fsr1h,w,c
  7946  003566  6EDA               	movwf	fsr2h,c
  7947  003568  0EFF               	movlw	255
  7948  00356A  22DA               	addwfc	fsr2h,f,c
  7949  00356C  0EFC               	movlw	-4
  7950  00356E  50E3               	movf	plusw1,w,c
  7951  003570  5CDE               	subwf	postinc2,w,c
  7952  003572  50DE               	movf	postinc2,w,c
  7953  003574  0A80               	xorlw	128
  7954  003576  6E3E               	movwf	btemp,c
  7955  003578  0EFD               	movlw	-3
  7956  00357A  50E3               	movf	plusw1,w,c
  7957  00357C  0A80               	xorlw	128
  7958  00357E  583E               	subwfb	btemp,w,c
  7959  003580  A0D8               	btfss	status,0,c
  7960  003582  D7CF               	goto	l6476
  7961  003584                     u3670:
  7962                           
  7963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7964                           ;stkvar	_l @ sp[(-17)+7]
  7965  003584  0EF6               	movlw	-10
  7966  003586  006F FF8C  F03E    	movff	plusw1,btemp
  7967  00358C  0EF7               	movlw	-9
  7968  00358E  006F FF8C  F03F    	movff	plusw1,btemp+1
  7969                           
  7970                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7971  003594  0EEB               	movlw	235
  7972  003596  26E1               	addwf	fsr1l,f,c
  7973  003598  0EFF               	movlw	255
  7974  00359A  22E2               	addwfc	fsr1h,f,c
  7975  00359C  0012               	return		;funcret
  7976  00359E                     __end_of_stoa:
  7977                           	opt callstack 0
  7978                           
  7979 ;; *************** function _dtoa *****************
  7980 ;; Defined at:
  7981 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7984 ;;		 -> f(5), NULL(0), 
  7985 ;;  d               8  [STACK] long long 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  n               8  [STACK] long long 
  7988 ;;  i               2  [STACK] int 
  7989 ;;  s               2  [STACK] int 
  7990 ;;  w               2  [STACK] int 
  7991 ;;  p               2  [STACK] int 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  2  [STACK] int 
  7994 ;; Registers used:
  7995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    8
  8008 ;; This function calls:
  8009 ;;		___aodiv
  8010 ;;		___aomod
  8011 ;;		_abs
  8012 ;;		_pad
  8013 ;; This function is called by:
  8014 ;;		_vfpfcnvrt
  8015 ;; This function uses a reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text36
  8019  002560                     __ptext36:
  8020                           	opt callstack 0
  8021  002560                     _dtoa:
  8022                           	opt callstack 0
  8023                           
  8024                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8025  002560  0E12               	movlw	18
  8026  002562  26E1               	addwf	fsr1l,f,c
  8027  002564  0E00               	movlw	0
  8028  002566  22E2               	addwfc	fsr1h,f,c
  8029                           
  8030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8031                           ;stkvar	_d @ sp[(-18)+-10]
  8032                           
  8033                           ;incstack = 0
  8034  002568  0EE4               	movlw	228
  8035  00256A  24E1               	addwf	fsr1l,w,c
  8036  00256C  6ED9               	movwf	fsr2l,c
  8037  00256E  0EFF               	movlw	255
  8038  002570  20E2               	addwfc	fsr1h,w,c
  8039  002572  6EDA               	movwf	fsr2h,c
  8040                           
  8041                           ;stkvar	_n @ sp[(-18)+2]
  8042  002574  0E08               	movlw	8
  8043  002576  6E3E               	movwf	btemp,c
  8044  002578  0EF0               	movlw	-16
  8045  00257A                     us341999:
  8046  00257A  006F FF7B FFE3     	movff	postinc2,plusw1
  8047  002580  28E8               	incf	wreg,w,c
  8048  002582  2E3E               	decfsz	btemp,f,c
  8049  002584  D7FA               	bra	us341999
  8050                           
  8051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8052                           ;stkvar	_n @ sp[(-18)+2]
  8053  002586  0EF7               	movlw	-9
  8054  002588  AEE3               	btfss	plusw1,7,c
  8055  00258A  D002               	goto	u3420
  8056  00258C  0E01               	movlw	1
  8057  00258E  D001               	goto	u3430
  8058  002590                     u3420:
  8059  002590  0E00               	movlw	0
  8060  002592                     u3430:
  8061  002592  6E48               	movwf	btemp+10,c
  8062  002594  6A49               	clrf	btemp+11,c
  8063                           
  8064                           ;stkvar	_s @ sp[(-18)+12]
  8065  002596  0EFA               	movlw	-6
  8066  002598  0060  F123  FFE3   	movff	btemp+10,plusw1
  8067  00259E  0EFB               	movlw	-5
  8068  0025A0  0060  F127  FFE3   	movff	btemp+11,plusw1
  8069                           
  8070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8071                           ;stkvar	_s @ sp[(-18)+12]
  8072  0025A6  0EFA               	movlw	-6
  8073  0025A8  006F FF8C  F03E    	movff	plusw1,btemp
  8074  0025AE  0EFB               	movlw	-5
  8075  0025B0  50E3               	movf	plusw1,w,c
  8076  0025B2  103E               	iorwf	btemp,w,c
  8077  0025B4  B4D8               	btfsc	status,2,c
  8078  0025B6  D025               	goto	u3450
  8079                           
  8080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8081                           ;stkvar	_n @ sp[(-18)+2]
  8082                           ;stkvar	_n @ sp[(-18)+2]
  8083  0025B8  0EF0               	movlw	-16
  8084  0025BA  6CE3               	negf	plusw1,c
  8085  0025BC  0EF1               	movlw	-15
  8086  0025BE  1EE3               	comf	plusw1,f,c
  8087  0025C0  0EF2               	movlw	-14
  8088  0025C2  1EE3               	comf	plusw1,f,c
  8089  0025C4  0EF3               	movlw	-13
  8090  0025C6  1EE3               	comf	plusw1,f,c
  8091  0025C8  0EF4               	movlw	-12
  8092  0025CA  1EE3               	comf	plusw1,f,c
  8093  0025CC  0EF5               	movlw	-11
  8094  0025CE  1EE3               	comf	plusw1,f,c
  8095  0025D0  0EF6               	movlw	-10
  8096  0025D2  1EE3               	comf	plusw1,f,c
  8097  0025D4  0EF7               	movlw	-9
  8098  0025D6  1EE3               	comf	plusw1,f,c
  8099  0025D8  E314               	bnc	u3450
  8100  0025DA  0EF1               	movlw	-15
  8101  0025DC  2AE3               	incf	plusw1,f,c
  8102  0025DE  E311               	bnc	u3450
  8103  0025E0  0EF2               	movlw	-14
  8104  0025E2  2AE3               	incf	plusw1,f,c
  8105  0025E4  E30E               	bnc	u3450
  8106  0025E6  0EF3               	movlw	-13
  8107  0025E8  2AE3               	incf	plusw1,f,c
  8108  0025EA  E30B               	bnc	u3450
  8109  0025EC  0EF4               	movlw	-12
  8110  0025EE  2AE3               	incf	plusw1,f,c
  8111  0025F0  E308               	bnc	u3450
  8112  0025F2  0EF5               	movlw	-11
  8113  0025F4  2AE3               	incf	plusw1,f,c
  8114  0025F6  E305               	bnc	u3450
  8115  0025F8  0EF6               	movlw	-10
  8116  0025FA  2AE3               	incf	plusw1,f,c
  8117  0025FC  E302               	bnc	u3450
  8118  0025FE  0EF7               	movlw	-9
  8119  002600  2AE3               	incf	plusw1,f,c
  8120  002602                     u3450:
  8121                           
  8122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8123  002602  AE27               	btfss	_prec+1,7,c
  8124                           
  8125                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8126  002604  9228               	bcf	_flags,1,c
  8127                           
  8128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8129  002606  BE27               	btfsc	_prec+1,7,c
  8130  002608  D005               	goto	u3470
  8131  00260A  5027               	movf	_prec+1,w,c
  8132  00260C  E110               	bnz	l6384
  8133  00260E  0426               	decf	_prec,w,c
  8134  002610  B0D8               	btfsc	status,0,c
  8135  002612  D00D               	goto	l6384
  8136  002614                     u3470:
  8137  002614  0E01               	movlw	1
  8138  002616  6E48               	movwf	btemp+10,c
  8139  002618  0E00               	movlw	0
  8140  00261A  6E49               	movwf	btemp+11,c
  8141                           
  8142                           ;stkvar	_p @ sp[(-18)+16]
  8143  00261C  0EFE               	movlw	-2
  8144  00261E  0060  F123  FFE3   	movff	btemp+10,plusw1
  8145  002624  0EFF               	movlw	-1
  8146  002626  0060  F127  FFE3   	movff	btemp+11,plusw1
  8147  00262C  D008               	goto	l1684
  8148  00262E                     l6384:
  8149                           
  8150                           ;stkvar	_p @ sp[(-18)+16]
  8151  00262E  0EFE               	movlw	-2
  8152  002630  0060  F09B  FFE3   	movff	_prec,plusw1
  8153  002636  0EFF               	movlw	-1
  8154  002638  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8155  00263E                     l1684:
  8156                           
  8157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8158                           ;stkvar	_w @ sp[(-18)+14]
  8159  00263E  0EFC               	movlw	-4
  8160  002640  0060  F093  FFE3   	movff	_width,plusw1
  8161  002646  0EFD               	movlw	-3
  8162  002648  0060  F097  FFE3   	movff	_width+1,plusw1
  8163                           
  8164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8165                           ;stkvar	_s @ sp[(-18)+12]
  8166  00264E  0EFA               	movlw	-6
  8167  002650  006F FF8C  F03E    	movff	plusw1,btemp
  8168  002656  0EFB               	movlw	-5
  8169  002658  50E3               	movf	plusw1,w,c
  8170  00265A  103E               	iorwf	btemp,w,c
  8171  00265C  A4D8               	btfss	status,2,c
  8172  00265E  D002               	goto	u3490
  8173  002660  A428               	btfss	_flags,2,c
  8174  002662  D00A               	goto	l6392
  8175  002664                     u3490:
  8176                           
  8177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8178                           ;stkvar	_w @ sp[(-18)+14]
  8179  002664  50E1               	movf	fsr1l,w,c
  8180  002666  0FFC               	addlw	-4
  8181  002668  6ED9               	movwf	fsr2l,c
  8182  00266A  50E2               	movf	fsr1h,w,c
  8183  00266C  6EDA               	movwf	fsr2h,c
  8184  00266E  0EFF               	movlw	255
  8185  002670  22DA               	addwfc	fsr2h,f,c
  8186  002672  06DE               	decf	postinc2,f,c
  8187  002674  0E00               	movlw	0
  8188  002676  5ADD               	subwfb	postdec2,f,c
  8189  002678                     l6392:
  8190                           
  8191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8192  002678  0E1F               	movlw	31
  8193  00267A  6E48               	movwf	btemp+10,c
  8194  00267C  0E00               	movlw	0
  8195  00267E  6E49               	movwf	btemp+11,c
  8196                           
  8197                           ;stkvar	_i @ sp[(-18)+10]
  8198  002680  0EF8               	movlw	-8
  8199  002682  0060  F123  FFE3   	movff	btemp+10,plusw1
  8200  002688  0EF9               	movlw	-7
  8201  00268A  0060  F127  FFE3   	movff	btemp+11,plusw1
  8202                           
  8203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8204  002690  0101               	movlb	1	; () banked
  8205  002692  6BE3               	clrf	(_dbuf+31)& (0+255),b
  8206                           
  8207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8208  002694  D109               	goto	l6406
  8209  002696                     l6396:
  8210                           
  8211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8212                           ;stkvar	_i @ sp[(-18)+10]
  8213  002696  50E1               	movf	fsr1l,w,c
  8214  002698  0FF8               	addlw	-8
  8215  00269A  6ED9               	movwf	fsr2l,c
  8216  00269C  50E2               	movf	fsr1h,w,c
  8217  00269E  6EDA               	movwf	fsr2h,c
  8218  0026A0  0EFF               	movlw	255
  8219  0026A2  22DA               	addwfc	fsr2h,f,c
  8220  0026A4  06DE               	decf	postinc2,f,c
  8221  0026A6  0E00               	movlw	0
  8222  0026A8  5ADD               	subwfb	postdec2,f,c
  8223                           
  8224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8225  0026AA  0E0A               	movlw	10
  8226  0026AC  6EE6               	movwf	postinc1,c
  8227  0026AE  0E00               	movlw	0
  8228  0026B0  6EE6               	movwf	postinc1,c
  8229  0026B2  0E00               	movlw	0
  8230  0026B4  6EE6               	movwf	postinc1,c
  8231  0026B6  0E00               	movlw	0
  8232  0026B8  6EE6               	movwf	postinc1,c
  8233  0026BA  0E00               	movlw	0
  8234  0026BC  6EE6               	movwf	postinc1,c
  8235  0026BE  0E00               	movlw	0
  8236  0026C0  6EE6               	movwf	postinc1,c
  8237  0026C2  0E00               	movlw	0
  8238  0026C4  6EE6               	movwf	postinc1,c
  8239  0026C6  0E00               	movlw	0
  8240  0026C8  6EE6               	movwf	postinc1,c
  8241                           
  8242                           ;stkvar	_n @ sp[(-26)+2]
  8243  0026CA  50E1               	movf	fsr1l,w,c
  8244  0026CC  0FE8               	addlw	-24
  8245  0026CE  6ED9               	movwf	fsr2l,c
  8246  0026D0  50E2               	movf	fsr1h,w,c
  8247  0026D2  6EDA               	movwf	fsr2h,c
  8248  0026D4  0EFF               	movlw	255
  8249  0026D6  22DA               	addwfc	fsr2h,f,c
  8250  0026D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8251  0026DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8252  0026E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8253  0026EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8254  0026F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8255  0026F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8256  0026FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8257  002702  006F FF7B FFE6     	movff	postinc2,postinc1
  8258  002708  EC3D  F01D         	call	___aomod	;wreg free
  8259  00270C  52E5               	movf	postdec1,f,c
  8260  00270E  006F FF9C  F055    	movff	indf1,btemp+23
  8261  002714  52E5               	movf	postdec1,f,c
  8262  002716  006F FF9C  F054    	movff	indf1,btemp+22
  8263  00271C  52E5               	movf	postdec1,f,c
  8264  00271E  006F FF9C  F053    	movff	indf1,btemp+21
  8265  002724  52E5               	movf	postdec1,f,c
  8266  002726  006F FF9C  F052    	movff	indf1,btemp+20
  8267  00272C  52E5               	movf	postdec1,f,c
  8268  00272E  006F FF9C  F051    	movff	indf1,btemp+19
  8269  002734  52E5               	movf	postdec1,f,c
  8270  002736  006F FF9C  F050    	movff	indf1,btemp+18
  8271  00273C  52E5               	movf	postdec1,f,c
  8272  00273E  006F FF9C  F04F    	movff	indf1,btemp+17
  8273  002744  52E5               	movf	postdec1,f,c
  8274  002746  006F FF9C  F04E    	movff	indf1,btemp+16
  8275  00274C  0EF8               	movlw	248
  8276  00274E  26E1               	addwf	fsr1l,f,c
  8277  002750  0EFF               	movlw	255
  8278  002752  22E2               	addwfc	fsr1h,f,c
  8279  002754  0060  F138  F048   	movff	btemp+16,btemp+10
  8280  00275A  0060  F13C  F049   	movff	btemp+17,btemp+11
  8281  002760  0060  F123  FFE6   	movff	btemp+10,postinc1
  8282  002766  0060  F127  FFE6   	movff	btemp+11,postinc1
  8283  00276C  EC48  F028         	call	_abs	;wreg free
  8284  002770  0E30               	movlw	48
  8285  002772  263E               	addwf	btemp,f,c
  8286                           
  8287                           ;stkvar	_i @ sp[(-18)+10]
  8288  002774  0EF8               	movlw	-8
  8289  002776  006F FF8C  F048    	movff	plusw1,btemp+10
  8290  00277C  0EF9               	movlw	-7
  8291  00277E  006F FF8C  F049    	movff	plusw1,btemp+11
  8292  002784  0EC4               	movlw	low _dbuf
  8293  002786  2448               	addwf	btemp+10,w,c
  8294  002788  6ED9               	movwf	fsr2l,c
  8295  00278A  0E01               	movlw	high _dbuf
  8296  00278C  2049               	addwfc	btemp+11,w,c
  8297  00278E  6EDA               	movwf	fsr2h,c
  8298  002790  0060  F0FB  FFDF   	movff	btemp,indf2
  8299                           
  8300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8301                           ;stkvar	_p @ sp[(-18)+16]
  8302  002796  50E1               	movf	fsr1l,w,c
  8303  002798  0FFE               	addlw	-2
  8304  00279A  6ED9               	movwf	fsr2l,c
  8305  00279C  50E2               	movf	fsr1h,w,c
  8306  00279E  6EDA               	movwf	fsr2h,c
  8307  0027A0  0EFF               	movlw	255
  8308  0027A2  22DA               	addwfc	fsr2h,f,c
  8309  0027A4  06DE               	decf	postinc2,f,c
  8310  0027A6  0E00               	movlw	0
  8311  0027A8  5ADD               	subwfb	postdec2,f,c
  8312                           
  8313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8314                           ;stkvar	_w @ sp[(-18)+14]
  8315  0027AA  50E1               	movf	fsr1l,w,c
  8316  0027AC  0FFC               	addlw	-4
  8317  0027AE  6ED9               	movwf	fsr2l,c
  8318  0027B0  50E2               	movf	fsr1h,w,c
  8319  0027B2  6EDA               	movwf	fsr2h,c
  8320  0027B4  0EFF               	movlw	255
  8321  0027B6  22DA               	addwfc	fsr2h,f,c
  8322  0027B8  06DE               	decf	postinc2,f,c
  8323  0027BA  0E00               	movlw	0
  8324  0027BC  5ADD               	subwfb	postdec2,f,c
  8325                           
  8326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8327  0027BE  0E0A               	movlw	10
  8328  0027C0  6EE6               	movwf	postinc1,c
  8329  0027C2  0E00               	movlw	0
  8330  0027C4  6EE6               	movwf	postinc1,c
  8331  0027C6  0E00               	movlw	0
  8332  0027C8  6EE6               	movwf	postinc1,c
  8333  0027CA  0E00               	movlw	0
  8334  0027CC  6EE6               	movwf	postinc1,c
  8335  0027CE  0E00               	movlw	0
  8336  0027D0  6EE6               	movwf	postinc1,c
  8337  0027D2  0E00               	movlw	0
  8338  0027D4  6EE6               	movwf	postinc1,c
  8339  0027D6  0E00               	movlw	0
  8340  0027D8  6EE6               	movwf	postinc1,c
  8341  0027DA  0E00               	movlw	0
  8342  0027DC  6EE6               	movwf	postinc1,c
  8343                           
  8344                           ;stkvar	_n @ sp[(-26)+2]
  8345  0027DE  50E1               	movf	fsr1l,w,c
  8346  0027E0  0FE8               	addlw	-24
  8347  0027E2  6ED9               	movwf	fsr2l,c
  8348  0027E4  50E2               	movf	fsr1h,w,c
  8349  0027E6  6EDA               	movwf	fsr2h,c
  8350  0027E8  0EFF               	movlw	255
  8351  0027EA  22DA               	addwfc	fsr2h,f,c
  8352  0027EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8353  0027F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8354  0027F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8355  0027FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8356  002804  006F FF7B FFE6     	movff	postinc2,postinc1
  8357  00280A  006F FF7B FFE6     	movff	postinc2,postinc1
  8358  002810  006F FF7B FFE6     	movff	postinc2,postinc1
  8359  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  8360  00281C  ECCF  F01A         	call	___aodiv	;wreg free
  8361  002820  52E5               	movf	postdec1,f,c
  8362  002822  006F FF9C  F055    	movff	indf1,btemp+23
  8363  002828  52E5               	movf	postdec1,f,c
  8364  00282A  006F FF9C  F054    	movff	indf1,btemp+22
  8365  002830  52E5               	movf	postdec1,f,c
  8366  002832  006F FF9C  F053    	movff	indf1,btemp+21
  8367  002838  52E5               	movf	postdec1,f,c
  8368  00283A  006F FF9C  F052    	movff	indf1,btemp+20
  8369  002840  52E5               	movf	postdec1,f,c
  8370  002842  006F FF9C  F051    	movff	indf1,btemp+19
  8371  002848  52E5               	movf	postdec1,f,c
  8372  00284A  006F FF9C  F050    	movff	indf1,btemp+18
  8373  002850  52E5               	movf	postdec1,f,c
  8374  002852  006F FF9C  F04F    	movff	indf1,btemp+17
  8375  002858  52E5               	movf	postdec1,f,c
  8376  00285A  006F FF9C  F04E    	movff	indf1,btemp+16
  8377  002860  0EF8               	movlw	248
  8378  002862  26E1               	addwf	fsr1l,f,c
  8379  002864  0EFF               	movlw	255
  8380  002866  22E2               	addwfc	fsr1h,f,c
  8381                           
  8382                           ;stkvar	_n @ sp[(-18)+2]
  8383  002868  0EF0               	movlw	-16
  8384  00286A  0060  F13B  FFE3   	movff	btemp+16,plusw1
  8385  002870  0EF1               	movlw	-15
  8386  002872  0060  F13F  FFE3   	movff	btemp+17,plusw1
  8387  002878  0EF2               	movlw	-14
  8388  00287A  0060  F143  FFE3   	movff	btemp+18,plusw1
  8389  002880  0EF3               	movlw	-13
  8390  002882  0060  F147  FFE3   	movff	btemp+19,plusw1
  8391  002888  0EF4               	movlw	-12
  8392  00288A  0060  F14B  FFE3   	movff	btemp+20,plusw1
  8393  002890  0EF5               	movlw	-11
  8394  002892  0060  F14F  FFE3   	movff	btemp+21,plusw1
  8395  002898  0EF6               	movlw	-10
  8396  00289A  0060  F153  FFE3   	movff	btemp+22,plusw1
  8397  0028A0  0EF7               	movlw	-9
  8398  0028A2  0060  F157  FFE3   	movff	btemp+23,plusw1
  8399  0028A8                     l6406:
  8400                           
  8401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8402                           ;stkvar	_i @ sp[(-18)+10]
  8403  0028A8  0EF9               	movlw	-7
  8404  0028AA  BEE3               	btfsc	plusw1,7,c
  8405  0028AC  D036               	goto	u3540
  8406  0028AE  0EF9               	movlw	-7
  8407  0028B0  50E3               	movf	plusw1,w,c
  8408  0028B2  E104               	bnz	u3500
  8409  0028B4  0EF8               	movlw	-8
  8410  0028B6  04E3               	decf	plusw1,w,c
  8411  0028B8  A0D8               	btfss	status,0,c
  8412  0028BA  D02F               	goto	u3540
  8413  0028BC                     u3500:
  8414                           
  8415                           ;stkvar	_n @ sp[(-18)+2]
  8416  0028BC  0EF0               	movlw	-16
  8417  0028BE  50E3               	movf	plusw1,w,c
  8418  0028C0  E115               	bnz	u3511
  8419  0028C2  0EF1               	movlw	-15
  8420  0028C4  50E3               	movf	plusw1,w,c
  8421  0028C6  E112               	bnz	u3511
  8422  0028C8  0EF2               	movlw	-14
  8423  0028CA  50E3               	movf	plusw1,w,c
  8424  0028CC  E10F               	bnz	u3511
  8425  0028CE  0EF3               	movlw	-13
  8426  0028D0  50E3               	movf	plusw1,w,c
  8427  0028D2  E10C               	bnz	u3511
  8428  0028D4  0EF4               	movlw	-12
  8429  0028D6  50E3               	movf	plusw1,w,c
  8430  0028D8  E109               	bnz	u3511
  8431  0028DA  0EF5               	movlw	-11
  8432  0028DC  50E3               	movf	plusw1,w,c
  8433  0028DE  E106               	bnz	u3511
  8434  0028E0  0EF6               	movlw	-10
  8435  0028E2  50E3               	movf	plusw1,w,c
  8436  0028E4  E103               	bnz	u3511
  8437  0028E6  0EF7               	movlw	-9
  8438  0028E8  50E3               	movf	plusw1,w,c
  8439  0028EA  A4D8               	btfss	status,2,c
  8440  0028EC                     u3511:
  8441  0028EC  D6D4               	goto	l6396
  8442                           
  8443                           ;stkvar	_p @ sp[(-18)+16]
  8444  0028EE  0EFF               	movlw	-1
  8445  0028F0  BEE3               	btfsc	plusw1,7,c
  8446  0028F2  D007               	goto	u3520
  8447  0028F4  0EFF               	movlw	-1
  8448  0028F6  50E3               	movf	plusw1,w,c
  8449  0028F8  E103               	bnz	u3521
  8450  0028FA  0EFE               	movlw	-2
  8451  0028FC  04E3               	decf	plusw1,w,c
  8452  0028FE  B0D8               	btfsc	status,0,c
  8453  002900                     u3521:
  8454  002900  D6CA               	goto	l6396
  8455  002902                     u3520:
  8456                           
  8457                           ;stkvar	_w @ sp[(-18)+14]
  8458  002902  0EFD               	movlw	-3
  8459  002904  BEE3               	btfsc	plusw1,7,c
  8460  002906  D009               	goto	u3540
  8461  002908  0EFD               	movlw	-3
  8462  00290A  50E3               	movf	plusw1,w,c
  8463  00290C  E104               	bnz	u3530
  8464  00290E  0EFC               	movlw	-4
  8465  002910  04E3               	decf	plusw1,w,c
  8466  002912  A0D8               	btfss	status,0,c
  8467  002914  D002               	goto	u3540
  8468  002916                     u3530:
  8469  002916  B228               	btfsc	_flags,1,c
  8470  002918  D6BE               	goto	l6396
  8471  00291A                     u3540:
  8472                           
  8473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8474                           ;stkvar	_s @ sp[(-18)+12]
  8475  00291A  0EFA               	movlw	-6
  8476  00291C  006F FF8C  F03E    	movff	plusw1,btemp
  8477  002922  0EFB               	movlw	-5
  8478  002924  50E3               	movf	plusw1,w,c
  8479  002926  103E               	iorwf	btemp,w,c
  8480  002928  A4D8               	btfss	status,2,c
  8481  00292A  D002               	goto	u3560
  8482  00292C  A428               	btfss	_flags,2,c
  8483  00292E  D033               	goto	l6430
  8484  002930                     u3560:
  8485                           
  8486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8487                           ;stkvar	_i @ sp[(-18)+10]
  8488  002930  50E1               	movf	fsr1l,w,c
  8489  002932  0FF8               	addlw	-8
  8490  002934  6ED9               	movwf	fsr2l,c
  8491  002936  50E2               	movf	fsr1h,w,c
  8492  002938  6EDA               	movwf	fsr2h,c
  8493  00293A  0EFF               	movlw	255
  8494  00293C  22DA               	addwfc	fsr2h,f,c
  8495  00293E  06DE               	decf	postinc2,f,c
  8496  002940  0E00               	movlw	0
  8497  002942  5ADD               	subwfb	postdec2,f,c
  8498                           
  8499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8500                           ;stkvar	_s @ sp[(-18)+12]
  8501  002944  0EFA               	movlw	-6
  8502  002946  006F FF8C  F03E    	movff	plusw1,btemp
  8503  00294C  0EFB               	movlw	-5
  8504  00294E  50E3               	movf	plusw1,w,c
  8505  002950  103E               	iorwf	btemp,w,c
  8506  002952  A4D8               	btfss	status,2,c
  8507  002954  D002               	goto	l6426
  8508  002956  0E2B               	movlw	43
  8509  002958  D001               	goto	L17
  8510  00295A                     l6426:
  8511  00295A  0E2D               	movlw	45
  8512  00295C                     L17:
  8513  00295C  6E48               	movwf	btemp+10,c
  8514  00295E  0E00               	movlw	0
  8515  002960  6E49               	movwf	btemp+11,c
  8516                           
  8517                           ;stkvar	_dtoa$3821 @ sp[(-18)+0]
  8518  002962  0EEE               	movlw	-18
  8519  002964  0060  F123  FFE3   	movff	btemp+10,plusw1
  8520  00296A  0EEF               	movlw	-17
  8521  00296C  0060  F127  FFE3   	movff	btemp+11,plusw1
  8522                           
  8523                           ;stkvar	_dtoa$3821 @ sp[(-18)+0]
  8524                           ;stkvar	_i @ sp[(-18)+10]
  8525  002972  0EF8               	movlw	-8
  8526  002974  006F FF8C  F048    	movff	plusw1,btemp+10
  8527  00297A  0EF9               	movlw	-7
  8528  00297C  006F FF8C  F049    	movff	plusw1,btemp+11
  8529  002982  0EC4               	movlw	low _dbuf
  8530  002984  2448               	addwf	btemp+10,w,c
  8531  002986  6ED9               	movwf	fsr2l,c
  8532  002988  0E01               	movlw	high _dbuf
  8533  00298A  2049               	addwfc	btemp+11,w,c
  8534  00298C  6EDA               	movwf	fsr2h,c
  8535  00298E  0EEE               	movlw	-18
  8536  002990  006F FF8F FFDF     	movff	plusw1,indf2
  8537  002996                     l6430:
  8538                           
  8539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8540                           ;stkvar	_w @ sp[(-18)+14]
  8541  002996  0EFC               	movlw	-4
  8542  002998  006F FF8F FFE6     	movff	plusw1,postinc1
  8543  00299E  006F FF8F FFE6     	movff	plusw1,postinc1
  8544                           
  8545                           ;stkvar	_i @ sp[(-20)+10]
  8546  0029A4  0EC4               	movlw	low _dbuf
  8547  0029A6  6E48               	movwf	btemp+10,c
  8548  0029A8  0E01               	movlw	high _dbuf
  8549  0029AA  6E49               	movwf	btemp+11,c
  8550  0029AC  0EF6               	movlw	-10
  8551  0029AE  50E3               	movf	plusw1,w,c
  8552  0029B0  2648               	addwf	btemp+10,f,c
  8553  0029B2  0EF7               	movlw	-9
  8554  0029B4  50E3               	movf	plusw1,w,c
  8555  0029B6  2249               	addwfc	btemp+11,f,c
  8556  0029B8  0060  F123  FFE6   	movff	btemp+10,postinc1
  8557  0029BE  0060  F127  FFE6   	movff	btemp+11,postinc1
  8558                           
  8559                           ;stkvar	_fp @ sp[(-22)+-2]
  8560  0029C4  0EE8               	movlw	-24
  8561  0029C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8562  0029CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8563  0029D2  ECF3  F020         	call	_pad	;wreg free
  8564                           
  8565                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8566  0029D6  0EE4               	movlw	228
  8567  0029D8  26E1               	addwf	fsr1l,f,c
  8568  0029DA  0EFF               	movlw	255
  8569  0029DC  22E2               	addwfc	fsr1h,f,c
  8570  0029DE  0012               	return		;funcret
  8571  0029E0                     __end_of_dtoa:
  8572                           	opt callstack 0
  8573                           
  8574 ;; *************** function _abs *****************
  8575 ;; Defined at:
  8576 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  a               2  [STACK] int 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2  [STACK] int 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/1
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    3
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_dtoa
  8601 ;; This function uses a reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text37
  8605  005090                     __ptext37:
  8606                           	opt callstack 0
  8607  005090                     _abs:
  8608                           	opt callstack 23
  8609                           
  8610                           ;stkvar	_a @ sp[(0)+-2]
  8611                           
  8612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8613                           ;incstack = 0
  8614  005090  0EFF               	movlw	-1
  8615  005092  BEE3               	btfsc	plusw1,7,c
  8616  005094  D007               	goto	u1860
  8617  005096  0EFF               	movlw	-1
  8618  005098  50E3               	movf	plusw1,w,c
  8619  00509A  E112               	bnz	l4638
  8620  00509C  0EFE               	movlw	-2
  8621  00509E  04E3               	decf	plusw1,w,c
  8622  0050A0  B0D8               	btfsc	status,0,c
  8623  0050A2  D00E               	goto	l4638
  8624  0050A4                     u1860:
  8625                           
  8626                           ;stkvar	_a @ sp[(0)+-2]
  8627  0050A4  0EFE               	movlw	-2
  8628  0050A6  006F FF8C  F03E    	movff	plusw1,btemp
  8629  0050AC  1E3E               	comf	btemp,f,c
  8630  0050AE  0EFF               	movlw	-1
  8631  0050B0  006F FF8C  F03F    	movff	plusw1,btemp+1
  8632  0050B6  1E3F               	comf	btemp+1,f,c
  8633  0050B8  2A3E               	incf	btemp,f,c
  8634  0050BA  B4D8               	btfsc	status,2,c
  8635  0050BC  2A3F               	incf	btemp+1,f,c
  8636  0050BE  D008               	goto	l2425
  8637  0050C0                     l4638:
  8638                           
  8639                           ;stkvar	_a @ sp[(0)+-2]
  8640  0050C0  0EFE               	movlw	-2
  8641  0050C2  006F FF8C  F03E    	movff	plusw1,btemp
  8642  0050C8  0EFF               	movlw	-1
  8643  0050CA  006F FF8C  F03F    	movff	plusw1,btemp+1
  8644  0050D0                     l2425:
  8645                           
  8646                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8647  0050D0  52E5               	movf	postdec1,f,c
  8648  0050D2  52E5               	movf	postdec1,f,c
  8649  0050D4  0012               	return		;funcret
  8650  0050D6                     __end_of_abs:
  8651                           	opt callstack 0
  8652                           
  8653 ;; *************** function ___aomod *****************
  8654 ;; Defined at:
  8655 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  dividend        8  [STACK] long long 
  8658 ;;  divisor         8  [STACK] long long 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  sign            1  [STACK] unsigned char 
  8661 ;;  counter         1  [STACK] unsigned char 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  8  [STACK] long long 
  8664 ;; Registers used:
  8665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/1
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8675 ;;Total ram usage:        0 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    3
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_dtoa
  8682 ;; This function uses a reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text38
  8686  003A7A                     __ptext38:
  8687                           	opt callstack 0
  8688  003A7A                     ___aomod:
  8689                           	opt callstack 0
  8690                           
  8691                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8692  003A7A  52E6               	movf	postinc1,f,c
  8693  003A7C  52E6               	movf	postinc1,f,c
  8694                           
  8695                           ;stkvar	_sign @ sp[(-2)+0]
  8696                           
  8697                           ;incstack = 0
  8698  003A7E  0EFE               	movlw	-2
  8699  003A80  6AE3               	clrf	plusw1,c
  8700                           
  8701                           ;stkvar	_dividend @ sp[(-2)+-8]
  8702  003A82  0EFD               	movlw	-3
  8703  003A84  AEE3               	btfss	plusw1,7,c
  8704  003A86  D028               	goto	l4694
  8705                           
  8706                           ;stkvar	_dividend @ sp[(-2)+-8]
  8707                           ;stkvar	_dividend @ sp[(-2)+-8]
  8708  003A88  0EF6               	movlw	-10
  8709  003A8A  6CE3               	negf	plusw1,c
  8710  003A8C  0EF7               	movlw	-9
  8711  003A8E  1EE3               	comf	plusw1,f,c
  8712  003A90  0EF8               	movlw	-8
  8713  003A92  1EE3               	comf	plusw1,f,c
  8714  003A94  0EF9               	movlw	-7
  8715  003A96  1EE3               	comf	plusw1,f,c
  8716  003A98  0EFA               	movlw	-6
  8717  003A9A  1EE3               	comf	plusw1,f,c
  8718  003A9C  0EFB               	movlw	-5
  8719  003A9E  1EE3               	comf	plusw1,f,c
  8720  003AA0  0EFC               	movlw	-4
  8721  003AA2  1EE3               	comf	plusw1,f,c
  8722  003AA4  0EFD               	movlw	-3
  8723  003AA6  1EE3               	comf	plusw1,f,c
  8724  003AA8  E314               	bnc	u2000
  8725  003AAA  0EF7               	movlw	-9
  8726  003AAC  2AE3               	incf	plusw1,f,c
  8727  003AAE  E311               	bnc	u2000
  8728  003AB0  0EF8               	movlw	-8
  8729  003AB2  2AE3               	incf	plusw1,f,c
  8730  003AB4  E30E               	bnc	u2000
  8731  003AB6  0EF9               	movlw	-7
  8732  003AB8  2AE3               	incf	plusw1,f,c
  8733  003ABA  E30B               	bnc	u2000
  8734  003ABC  0EFA               	movlw	-6
  8735  003ABE  2AE3               	incf	plusw1,f,c
  8736  003AC0  E308               	bnc	u2000
  8737  003AC2  0EFB               	movlw	-5
  8738  003AC4  2AE3               	incf	plusw1,f,c
  8739  003AC6  E305               	bnc	u2000
  8740  003AC8  0EFC               	movlw	-4
  8741  003ACA  2AE3               	incf	plusw1,f,c
  8742  003ACC  E302               	bnc	u2000
  8743  003ACE  0EFD               	movlw	-3
  8744  003AD0  2AE3               	incf	plusw1,f,c
  8745  003AD2                     u2000:
  8746                           
  8747                           ;stkvar	_sign @ sp[(-2)+0]
  8748  003AD2  0EFE               	movlw	-2
  8749  003AD4  6AE3               	clrf	plusw1,c
  8750  003AD6  2AE3               	incf	plusw1,f,c
  8751  003AD8                     l4694:
  8752                           
  8753                           ;stkvar	_divisor @ sp[(-2)+-16]
  8754  003AD8  0EF5               	movlw	-11
  8755  003ADA  AEE3               	btfss	plusw1,7,c
  8756  003ADC  D025               	goto	u2020
  8757                           
  8758                           ;stkvar	_divisor @ sp[(-2)+-16]
  8759                           ;stkvar	_divisor @ sp[(-2)+-16]
  8760  003ADE  0EEE               	movlw	-18
  8761  003AE0  6CE3               	negf	plusw1,c
  8762  003AE2  0EEF               	movlw	-17
  8763  003AE4  1EE3               	comf	plusw1,f,c
  8764  003AE6  0EF0               	movlw	-16
  8765  003AE8  1EE3               	comf	plusw1,f,c
  8766  003AEA  0EF1               	movlw	-15
  8767  003AEC  1EE3               	comf	plusw1,f,c
  8768  003AEE  0EF2               	movlw	-14
  8769  003AF0  1EE3               	comf	plusw1,f,c
  8770  003AF2  0EF3               	movlw	-13
  8771  003AF4  1EE3               	comf	plusw1,f,c
  8772  003AF6  0EF4               	movlw	-12
  8773  003AF8  1EE3               	comf	plusw1,f,c
  8774  003AFA  0EF5               	movlw	-11
  8775  003AFC  1EE3               	comf	plusw1,f,c
  8776  003AFE  E314               	bnc	u2020
  8777  003B00  0EEF               	movlw	-17
  8778  003B02  2AE3               	incf	plusw1,f,c
  8779  003B04  E311               	bnc	u2020
  8780  003B06  0EF0               	movlw	-16
  8781  003B08  2AE3               	incf	plusw1,f,c
  8782  003B0A  E30E               	bnc	u2020
  8783  003B0C  0EF1               	movlw	-15
  8784  003B0E  2AE3               	incf	plusw1,f,c
  8785  003B10  E30B               	bnc	u2020
  8786  003B12  0EF2               	movlw	-14
  8787  003B14  2AE3               	incf	plusw1,f,c
  8788  003B16  E308               	bnc	u2020
  8789  003B18  0EF3               	movlw	-13
  8790  003B1A  2AE3               	incf	plusw1,f,c
  8791  003B1C  E305               	bnc	u2020
  8792  003B1E  0EF4               	movlw	-12
  8793  003B20  2AE3               	incf	plusw1,f,c
  8794  003B22  E302               	bnc	u2020
  8795  003B24  0EF5               	movlw	-11
  8796  003B26  2AE3               	incf	plusw1,f,c
  8797  003B28                     u2020:
  8798                           
  8799                           ;stkvar	_divisor @ sp[(-2)+-16]
  8800  003B28  0EEE               	movlw	-18
  8801  003B2A  50E3               	movf	plusw1,w,c
  8802  003B2C  E116               	bnz	u2030
  8803  003B2E  0EEF               	movlw	-17
  8804  003B30  50E3               	movf	plusw1,w,c
  8805  003B32  E113               	bnz	u2030
  8806  003B34  0EF0               	movlw	-16
  8807  003B36  50E3               	movf	plusw1,w,c
  8808  003B38  E110               	bnz	u2030
  8809  003B3A  0EF1               	movlw	-15
  8810  003B3C  50E3               	movf	plusw1,w,c
  8811  003B3E  E10D               	bnz	u2030
  8812  003B40  0EF2               	movlw	-14
  8813  003B42  50E3               	movf	plusw1,w,c
  8814  003B44  E10A               	bnz	u2030
  8815  003B46  0EF3               	movlw	-13
  8816  003B48  50E3               	movf	plusw1,w,c
  8817  003B4A  E107               	bnz	u2030
  8818  003B4C  0EF4               	movlw	-12
  8819  003B4E  50E3               	movf	plusw1,w,c
  8820  003B50  E104               	bnz	u2030
  8821  003B52  0EF5               	movlw	-11
  8822  003B54  50E3               	movf	plusw1,w,c
  8823  003B56  B4D8               	btfsc	status,2,c
  8824  003B58  D075               	goto	u2060
  8825  003B5A                     u2030:
  8826                           
  8827                           ;stkvar	_counter @ sp[(-2)+1]
  8828  003B5A  0EFF               	movlw	-1
  8829  003B5C  6AE3               	clrf	plusw1,c
  8830  003B5E  D012               	goto	L18
  8831  003B60                     l4702:
  8832                           
  8833                           ;stkvar	_divisor @ sp[(-2)+-16]
  8834  003B60  90D8               	bcf	status,0,c
  8835  003B62  0EEE               	movlw	-18
  8836  003B64  36E3               	rlcf	plusw1,f,c
  8837  003B66  0EEF               	movlw	-17
  8838  003B68  36E3               	rlcf	plusw1,f,c
  8839  003B6A  0EF0               	movlw	-16
  8840  003B6C  36E3               	rlcf	plusw1,f,c
  8841  003B6E  0EF1               	movlw	-15
  8842  003B70  36E3               	rlcf	plusw1,f,c
  8843  003B72  0EF2               	movlw	-14
  8844  003B74  36E3               	rlcf	plusw1,f,c
  8845  003B76  0EF3               	movlw	-13
  8846  003B78  36E3               	rlcf	plusw1,f,c
  8847  003B7A  0EF4               	movlw	-12
  8848  003B7C  36E3               	rlcf	plusw1,f,c
  8849  003B7E  0EF5               	movlw	-11
  8850  003B80  36E3               	rlcf	plusw1,f,c
  8851                           
  8852                           ;stkvar	_counter @ sp[(-2)+1]
  8853  003B82  0EFF               	movlw	-1
  8854  003B84                     L18:
  8855  003B84  2AE3               	incf	plusw1,f,c
  8856                           
  8857                           ;stkvar	_divisor @ sp[(-2)+-16]
  8858  003B86  0EF5               	movlw	-11
  8859  003B88  AEE3               	btfss	plusw1,7,c
  8860  003B8A  D7EA               	goto	l4702
  8861  003B8C                     u2040:
  8862                           
  8863                           ;stkvar	_divisor @ sp[(-2)+-16]
  8864                           ;stkvar	_dividend @ sp[(-2)+-8]
  8865  003B8C  50E1               	movf	fsr1l,w,c
  8866  003B8E  0FF6               	addlw	-10
  8867  003B90  6ED9               	movwf	fsr2l,c
  8868  003B92  50E2               	movf	fsr1h,w,c
  8869  003B94  6EDA               	movwf	fsr2h,c
  8870  003B96  0EFF               	movlw	255
  8871  003B98  22DA               	addwfc	fsr2h,f,c
  8872  003B9A  0EEE               	movlw	-18
  8873  003B9C  50E3               	movf	plusw1,w,c
  8874  003B9E  5CDE               	subwf	postinc2,w,c
  8875  003BA0  0EEF               	movlw	-17
  8876  003BA2  50E3               	movf	plusw1,w,c
  8877  003BA4  58DE               	subwfb	postinc2,w,c
  8878  003BA6  0EF0               	movlw	-16
  8879  003BA8  50E3               	movf	plusw1,w,c
  8880  003BAA  58DE               	subwfb	postinc2,w,c
  8881  003BAC  0EF1               	movlw	-15
  8882  003BAE  50E3               	movf	plusw1,w,c
  8883  003BB0  58DE               	subwfb	postinc2,w,c
  8884  003BB2  0EF2               	movlw	-14
  8885  003BB4  50E3               	movf	plusw1,w,c
  8886  003BB6  58DE               	subwfb	postinc2,w,c
  8887  003BB8  0EF3               	movlw	-13
  8888  003BBA  50E3               	movf	plusw1,w,c
  8889  003BBC  58DE               	subwfb	postinc2,w,c
  8890  003BBE  0EF4               	movlw	-12
  8891  003BC0  50E3               	movf	plusw1,w,c
  8892  003BC2  58DE               	subwfb	postinc2,w,c
  8893  003BC4  0EF5               	movlw	-11
  8894  003BC6  50E3               	movf	plusw1,w,c
  8895  003BC8  58DE               	subwfb	postinc2,w,c
  8896  003BCA  A0D8               	btfss	status,0,c
  8897  003BCC  D01F               	goto	l4710
  8898                           
  8899                           ;stkvar	_divisor @ sp[(-2)+-16]
  8900                           ;stkvar	_dividend @ sp[(-2)+-8]
  8901  003BCE  50E1               	movf	fsr1l,w,c
  8902  003BD0  0FF6               	addlw	-10
  8903  003BD2  6ED9               	movwf	fsr2l,c
  8904  003BD4  50E2               	movf	fsr1h,w,c
  8905  003BD6  6EDA               	movwf	fsr2h,c
  8906  003BD8  0EFF               	movlw	255
  8907  003BDA  22DA               	addwfc	fsr2h,f,c
  8908  003BDC  0EEE               	movlw	-18
  8909  003BDE  50E3               	movf	plusw1,w,c
  8910  003BE0  5EDE               	subwf	postinc2,f,c
  8911  003BE2  0EEF               	movlw	-17
  8912  003BE4  50E3               	movf	plusw1,w,c
  8913  003BE6  5ADE               	subwfb	postinc2,f,c
  8914  003BE8  0EF0               	movlw	-16
  8915  003BEA  50E3               	movf	plusw1,w,c
  8916  003BEC  5ADE               	subwfb	postinc2,f,c
  8917  003BEE  0EF1               	movlw	-15
  8918  003BF0  50E3               	movf	plusw1,w,c
  8919  003BF2  5ADE               	subwfb	postinc2,f,c
  8920  003BF4  0EF2               	movlw	-14
  8921  003BF6  50E3               	movf	plusw1,w,c
  8922  003BF8  5ADE               	subwfb	postinc2,f,c
  8923  003BFA  0EF3               	movlw	-13
  8924  003BFC  50E3               	movf	plusw1,w,c
  8925  003BFE  5ADE               	subwfb	postinc2,f,c
  8926  003C00  0EF4               	movlw	-12
  8927  003C02  50E3               	movf	plusw1,w,c
  8928  003C04  5ADE               	subwfb	postinc2,f,c
  8929  003C06  0EF5               	movlw	-11
  8930  003C08  50E3               	movf	plusw1,w,c
  8931  003C0A  5ADE               	subwfb	postinc2,f,c
  8932  003C0C                     l4710:
  8933                           
  8934                           ;stkvar	_divisor @ sp[(-2)+-16]
  8935  003C0C  90D8               	bcf	status,0,c
  8936  003C0E  0EF5               	movlw	-11
  8937  003C10  32E3               	rrcf	plusw1,f,c
  8938  003C12  0EF4               	movlw	-12
  8939  003C14  32E3               	rrcf	plusw1,f,c
  8940  003C16  0EF3               	movlw	-13
  8941  003C18  32E3               	rrcf	plusw1,f,c
  8942  003C1A  0EF2               	movlw	-14
  8943  003C1C  32E3               	rrcf	plusw1,f,c
  8944  003C1E  0EF1               	movlw	-15
  8945  003C20  32E3               	rrcf	plusw1,f,c
  8946  003C22  0EF0               	movlw	-16
  8947  003C24  32E3               	rrcf	plusw1,f,c
  8948  003C26  0EEF               	movlw	-17
  8949  003C28  32E3               	rrcf	plusw1,f,c
  8950  003C2A  0EEE               	movlw	-18
  8951  003C2C  32E3               	rrcf	plusw1,f,c
  8952                           
  8953                           ;stkvar	_counter @ sp[(-2)+1]
  8954  003C2E  0EFF               	movlw	-1
  8955  003C30  50E3               	movf	plusw1,w,c
  8956  003C32  6E3E               	movwf	btemp,c
  8957  003C34  0E01               	movlw	1
  8958  003C36  5E3E               	subwf	btemp,f,c
  8959  003C38  0EFF               	movlw	-1
  8960  003C3A  0060  F0FB  FFE3   	movff	btemp,plusw1
  8961  003C40  A4D8               	btfss	status,2,c
  8962  003C42  D7A4               	goto	u2040
  8963  003C44                     u2060:
  8964                           
  8965                           ;stkvar	_sign @ sp[(-2)+0]
  8966  003C44  0EFE               	movlw	-2
  8967  003C46  50E3               	movf	plusw1,w,c
  8968  003C48  B4D8               	btfsc	status,2,c
  8969  003C4A  D025               	goto	u2080
  8970                           
  8971                           ;stkvar	_dividend @ sp[(-2)+-8]
  8972                           ;stkvar	_dividend @ sp[(-2)+-8]
  8973  003C4C  0EF6               	movlw	-10
  8974  003C4E  6CE3               	negf	plusw1,c
  8975  003C50  0EF7               	movlw	-9
  8976  003C52  1EE3               	comf	plusw1,f,c
  8977  003C54  0EF8               	movlw	-8
  8978  003C56  1EE3               	comf	plusw1,f,c
  8979  003C58  0EF9               	movlw	-7
  8980  003C5A  1EE3               	comf	plusw1,f,c
  8981  003C5C  0EFA               	movlw	-6
  8982  003C5E  1EE3               	comf	plusw1,f,c
  8983  003C60  0EFB               	movlw	-5
  8984  003C62  1EE3               	comf	plusw1,f,c
  8985  003C64  0EFC               	movlw	-4
  8986  003C66  1EE3               	comf	plusw1,f,c
  8987  003C68  0EFD               	movlw	-3
  8988  003C6A  1EE3               	comf	plusw1,f,c
  8989  003C6C  E314               	bnc	u2080
  8990  003C6E  0EF7               	movlw	-9
  8991  003C70  2AE3               	incf	plusw1,f,c
  8992  003C72  E311               	bnc	u2080
  8993  003C74  0EF8               	movlw	-8
  8994  003C76  2AE3               	incf	plusw1,f,c
  8995  003C78  E30E               	bnc	u2080
  8996  003C7A  0EF9               	movlw	-7
  8997  003C7C  2AE3               	incf	plusw1,f,c
  8998  003C7E  E30B               	bnc	u2080
  8999  003C80  0EFA               	movlw	-6
  9000  003C82  2AE3               	incf	plusw1,f,c
  9001  003C84  E308               	bnc	u2080
  9002  003C86  0EFB               	movlw	-5
  9003  003C88  2AE3               	incf	plusw1,f,c
  9004  003C8A  E305               	bnc	u2080
  9005  003C8C  0EFC               	movlw	-4
  9006  003C8E  2AE3               	incf	plusw1,f,c
  9007  003C90  E302               	bnc	u2080
  9008  003C92  0EFD               	movlw	-3
  9009  003C94  2AE3               	incf	plusw1,f,c
  9010  003C96                     u2080:
  9011                           
  9012                           ;stkvar	_dividend @ sp[(-2)+-8]
  9013  003C96  0EF6               	movlw	246
  9014  003C98  24E1               	addwf	fsr1l,w,c
  9015  003C9A  6ED9               	movwf	fsr2l,c
  9016  003C9C  0EFF               	movlw	255
  9017  003C9E  20E2               	addwfc	fsr1h,w,c
  9018  003CA0  6EDA               	movwf	fsr2h,c
  9019                           
  9020                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9021  003CA2  0E08               	movlw	8
  9022  003CA4  6E3E               	movwf	btemp,c
  9023  003CA6  0EF6               	movlw	-10
  9024  003CA8                     us209999:
  9025  003CA8  006F FF7B FFE3     	movff	postinc2,plusw1
  9026  003CAE  28E8               	incf	wreg,w,c
  9027  003CB0  2E3E               	decfsz	btemp,f,c
  9028  003CB2  D7FA               	bra	us209999
  9029                           
  9030                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9031  003CB4  52E5               	movf	postdec1,f,c
  9032  003CB6  52E5               	movf	postdec1,f,c
  9033  003CB8  0012               	return		;funcret
  9034  003CBA                     __end_of___aomod:
  9035                           	opt callstack 0
  9036                           
  9037 ;; *************** function ___aodiv *****************
  9038 ;; Defined at:
  9039 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  dividend        8  [STACK] long long 
  9042 ;;  divisor         8  [STACK] long long 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  quotient        8  [STACK] long long 
  9045 ;;  sign            1  [STACK] unsigned char 
  9046 ;;  counter         1  [STACK] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  8  [STACK] long long 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/1
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    3
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_dtoa
  9067 ;; This function uses a reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text39
  9071  00359E                     __ptext39:
  9072                           	opt callstack 0
  9073  00359E                     ___aodiv:
  9074                           	opt callstack 0
  9075                           
  9076                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9077  00359E  0E0A               	movlw	10
  9078  0035A0  26E1               	addwf	fsr1l,f,c
  9079  0035A2  0E00               	movlw	0
  9080  0035A4  22E2               	addwfc	fsr1h,f,c
  9081                           
  9082                           ;stkvar	_sign @ sp[(-10)+8]
  9083                           
  9084                           ;incstack = 0
  9085  0035A6  0EFE               	movlw	-2
  9086  0035A8  6AE3               	clrf	plusw1,c
  9087                           
  9088                           ;stkvar	_divisor @ sp[(-10)+-16]
  9089  0035AA  0EED               	movlw	-19
  9090  0035AC  AEE3               	btfss	plusw1,7,c
  9091  0035AE  D028               	goto	l4650
  9092                           
  9093                           ;stkvar	_divisor @ sp[(-10)+-16]
  9094                           ;stkvar	_divisor @ sp[(-10)+-16]
  9095  0035B0  0EE6               	movlw	-26
  9096  0035B2  6CE3               	negf	plusw1,c
  9097  0035B4  0EE7               	movlw	-25
  9098  0035B6  1EE3               	comf	plusw1,f,c
  9099  0035B8  0EE8               	movlw	-24
  9100  0035BA  1EE3               	comf	plusw1,f,c
  9101  0035BC  0EE9               	movlw	-23
  9102  0035BE  1EE3               	comf	plusw1,f,c
  9103  0035C0  0EEA               	movlw	-22
  9104  0035C2  1EE3               	comf	plusw1,f,c
  9105  0035C4  0EEB               	movlw	-21
  9106  0035C6  1EE3               	comf	plusw1,f,c
  9107  0035C8  0EEC               	movlw	-20
  9108  0035CA  1EE3               	comf	plusw1,f,c
  9109  0035CC  0EED               	movlw	-19
  9110  0035CE  1EE3               	comf	plusw1,f,c
  9111  0035D0  E314               	bnc	u1880
  9112  0035D2  0EE7               	movlw	-25
  9113  0035D4  2AE3               	incf	plusw1,f,c
  9114  0035D6  E311               	bnc	u1880
  9115  0035D8  0EE8               	movlw	-24
  9116  0035DA  2AE3               	incf	plusw1,f,c
  9117  0035DC  E30E               	bnc	u1880
  9118  0035DE  0EE9               	movlw	-23
  9119  0035E0  2AE3               	incf	plusw1,f,c
  9120  0035E2  E30B               	bnc	u1880
  9121  0035E4  0EEA               	movlw	-22
  9122  0035E6  2AE3               	incf	plusw1,f,c
  9123  0035E8  E308               	bnc	u1880
  9124  0035EA  0EEB               	movlw	-21
  9125  0035EC  2AE3               	incf	plusw1,f,c
  9126  0035EE  E305               	bnc	u1880
  9127  0035F0  0EEC               	movlw	-20
  9128  0035F2  2AE3               	incf	plusw1,f,c
  9129  0035F4  E302               	bnc	u1880
  9130  0035F6  0EED               	movlw	-19
  9131  0035F8  2AE3               	incf	plusw1,f,c
  9132  0035FA                     u1880:
  9133                           
  9134                           ;stkvar	_sign @ sp[(-10)+8]
  9135  0035FA  0EFE               	movlw	-2
  9136  0035FC  6AE3               	clrf	plusw1,c
  9137  0035FE  2AE3               	incf	plusw1,f,c
  9138  003600                     l4650:
  9139                           
  9140                           ;stkvar	_dividend @ sp[(-10)+-8]
  9141  003600  0EF5               	movlw	-11
  9142  003602  AEE3               	btfss	plusw1,7,c
  9143  003604  D027               	goto	l4656
  9144                           
  9145                           ;stkvar	_dividend @ sp[(-10)+-8]
  9146                           ;stkvar	_dividend @ sp[(-10)+-8]
  9147  003606  0EEE               	movlw	-18
  9148  003608  6CE3               	negf	plusw1,c
  9149  00360A  0EEF               	movlw	-17
  9150  00360C  1EE3               	comf	plusw1,f,c
  9151  00360E  0EF0               	movlw	-16
  9152  003610  1EE3               	comf	plusw1,f,c
  9153  003612  0EF1               	movlw	-15
  9154  003614  1EE3               	comf	plusw1,f,c
  9155  003616  0EF2               	movlw	-14
  9156  003618  1EE3               	comf	plusw1,f,c
  9157  00361A  0EF3               	movlw	-13
  9158  00361C  1EE3               	comf	plusw1,f,c
  9159  00361E  0EF4               	movlw	-12
  9160  003620  1EE3               	comf	plusw1,f,c
  9161  003622  0EF5               	movlw	-11
  9162  003624  1EE3               	comf	plusw1,f,c
  9163  003626  E314               	bnc	u1900
  9164  003628  0EEF               	movlw	-17
  9165  00362A  2AE3               	incf	plusw1,f,c
  9166  00362C  E311               	bnc	u1900
  9167  00362E  0EF0               	movlw	-16
  9168  003630  2AE3               	incf	plusw1,f,c
  9169  003632  E30E               	bnc	u1900
  9170  003634  0EF1               	movlw	-15
  9171  003636  2AE3               	incf	plusw1,f,c
  9172  003638  E30B               	bnc	u1900
  9173  00363A  0EF2               	movlw	-14
  9174  00363C  2AE3               	incf	plusw1,f,c
  9175  00363E  E308               	bnc	u1900
  9176  003640  0EF3               	movlw	-13
  9177  003642  2AE3               	incf	plusw1,f,c
  9178  003644  E305               	bnc	u1900
  9179  003646  0EF4               	movlw	-12
  9180  003648  2AE3               	incf	plusw1,f,c
  9181  00364A  E302               	bnc	u1900
  9182  00364C  0EF5               	movlw	-11
  9183  00364E  2AE3               	incf	plusw1,f,c
  9184  003650                     u1900:
  9185                           
  9186                           ;stkvar	_sign @ sp[(-10)+8]
  9187  003650  0EFE               	movlw	-2
  9188  003652  70E3               	btg	plusw1,0,c
  9189  003654                     l4656:
  9190                           
  9191                           ;stkvar	_quotient @ sp[(-10)+0]
  9192  003654  0E07               	movlw	7
  9193  003656  6E3E               	movwf	btemp,c
  9194  003658  0EF6               	movlw	-10
  9195  00365A                     u1911:
  9196  00365A  6AE3               	clrf	plusw1,c
  9197  00365C  2AE8               	incf	wreg,f,c
  9198  00365E  063E               	decf	btemp,f,c
  9199  003660  E2FC               	bc	u1911
  9200                           
  9201                           ;stkvar	_divisor @ sp[(-10)+-16]
  9202  003662  0EE6               	movlw	-26
  9203  003664  50E3               	movf	plusw1,w,c
  9204  003666  E116               	bnz	u1920
  9205  003668  0EE7               	movlw	-25
  9206  00366A  50E3               	movf	plusw1,w,c
  9207  00366C  E113               	bnz	u1920
  9208  00366E  0EE8               	movlw	-24
  9209  003670  50E3               	movf	plusw1,w,c
  9210  003672  E110               	bnz	u1920
  9211  003674  0EE9               	movlw	-23
  9212  003676  50E3               	movf	plusw1,w,c
  9213  003678  E10D               	bnz	u1920
  9214  00367A  0EEA               	movlw	-22
  9215  00367C  50E3               	movf	plusw1,w,c
  9216  00367E  E10A               	bnz	u1920
  9217  003680  0EEB               	movlw	-21
  9218  003682  50E3               	movf	plusw1,w,c
  9219  003684  E107               	bnz	u1920
  9220  003686  0EEC               	movlw	-20
  9221  003688  50E3               	movf	plusw1,w,c
  9222  00368A  E104               	bnz	u1920
  9223  00368C  0EED               	movlw	-19
  9224  00368E  50E3               	movf	plusw1,w,c
  9225  003690  B4D8               	btfsc	status,2,c
  9226  003692  D088               	goto	u1950
  9227  003694                     u1920:
  9228                           
  9229                           ;stkvar	_counter @ sp[(-10)+9]
  9230  003694  0EFF               	movlw	-1
  9231  003696  6AE3               	clrf	plusw1,c
  9232  003698  D012               	goto	L19
  9233  00369A                     l4662:
  9234                           
  9235                           ;stkvar	_divisor @ sp[(-10)+-16]
  9236  00369A  90D8               	bcf	status,0,c
  9237  00369C  0EE6               	movlw	-26
  9238  00369E  36E3               	rlcf	plusw1,f,c
  9239  0036A0  0EE7               	movlw	-25
  9240  0036A2  36E3               	rlcf	plusw1,f,c
  9241  0036A4  0EE8               	movlw	-24
  9242  0036A6  36E3               	rlcf	plusw1,f,c
  9243  0036A8  0EE9               	movlw	-23
  9244  0036AA  36E3               	rlcf	plusw1,f,c
  9245  0036AC  0EEA               	movlw	-22
  9246  0036AE  36E3               	rlcf	plusw1,f,c
  9247  0036B0  0EEB               	movlw	-21
  9248  0036B2  36E3               	rlcf	plusw1,f,c
  9249  0036B4  0EEC               	movlw	-20
  9250  0036B6  36E3               	rlcf	plusw1,f,c
  9251  0036B8  0EED               	movlw	-19
  9252  0036BA  36E3               	rlcf	plusw1,f,c
  9253                           
  9254                           ;stkvar	_counter @ sp[(-10)+9]
  9255  0036BC  0EFF               	movlw	-1
  9256  0036BE                     L19:
  9257  0036BE  2AE3               	incf	plusw1,f,c
  9258                           
  9259                           ;stkvar	_divisor @ sp[(-10)+-16]
  9260  0036C0  0EED               	movlw	-19
  9261  0036C2  AEE3               	btfss	plusw1,7,c
  9262  0036C4  D7EA               	goto	l4662
  9263  0036C6                     u1930:
  9264                           
  9265                           ;stkvar	_quotient @ sp[(-10)+0]
  9266  0036C6  90D8               	bcf	status,0,c
  9267  0036C8  0EF6               	movlw	-10
  9268  0036CA  36E3               	rlcf	plusw1,f,c
  9269  0036CC  0EF7               	movlw	-9
  9270  0036CE  36E3               	rlcf	plusw1,f,c
  9271  0036D0  0EF8               	movlw	-8
  9272  0036D2  36E3               	rlcf	plusw1,f,c
  9273  0036D4  0EF9               	movlw	-7
  9274  0036D6  36E3               	rlcf	plusw1,f,c
  9275  0036D8  0EFA               	movlw	-6
  9276  0036DA  36E3               	rlcf	plusw1,f,c
  9277  0036DC  0EFB               	movlw	-5
  9278  0036DE  36E3               	rlcf	plusw1,f,c
  9279  0036E0  0EFC               	movlw	-4
  9280  0036E2  36E3               	rlcf	plusw1,f,c
  9281  0036E4  0EFD               	movlw	-3
  9282  0036E6  36E3               	rlcf	plusw1,f,c
  9283                           
  9284                           ;stkvar	_divisor @ sp[(-10)+-16]
  9285                           ;stkvar	_dividend @ sp[(-10)+-8]
  9286  0036E8  50E1               	movf	fsr1l,w,c
  9287  0036EA  0FEE               	addlw	-18
  9288  0036EC  6ED9               	movwf	fsr2l,c
  9289  0036EE  50E2               	movf	fsr1h,w,c
  9290  0036F0  6EDA               	movwf	fsr2h,c
  9291  0036F2  0EFF               	movlw	255
  9292  0036F4  22DA               	addwfc	fsr2h,f,c
  9293  0036F6  0EE6               	movlw	-26
  9294  0036F8  50E3               	movf	plusw1,w,c
  9295  0036FA  5CDE               	subwf	postinc2,w,c
  9296  0036FC  0EE7               	movlw	-25
  9297  0036FE  50E3               	movf	plusw1,w,c
  9298  003700  58DE               	subwfb	postinc2,w,c
  9299  003702  0EE8               	movlw	-24
  9300  003704  50E3               	movf	plusw1,w,c
  9301  003706  58DE               	subwfb	postinc2,w,c
  9302  003708  0EE9               	movlw	-23
  9303  00370A  50E3               	movf	plusw1,w,c
  9304  00370C  58DE               	subwfb	postinc2,w,c
  9305  00370E  0EEA               	movlw	-22
  9306  003710  50E3               	movf	plusw1,w,c
  9307  003712  58DE               	subwfb	postinc2,w,c
  9308  003714  0EEB               	movlw	-21
  9309  003716  50E3               	movf	plusw1,w,c
  9310  003718  58DE               	subwfb	postinc2,w,c
  9311  00371A  0EEC               	movlw	-20
  9312  00371C  50E3               	movf	plusw1,w,c
  9313  00371E  58DE               	subwfb	postinc2,w,c
  9314  003720  0EED               	movlw	-19
  9315  003722  50E3               	movf	plusw1,w,c
  9316  003724  58DE               	subwfb	postinc2,w,c
  9317  003726  A0D8               	btfss	status,0,c
  9318  003728  D021               	goto	l4674
  9319                           
  9320                           ;stkvar	_divisor @ sp[(-10)+-16]
  9321                           ;stkvar	_dividend @ sp[(-10)+-8]
  9322  00372A  50E1               	movf	fsr1l,w,c
  9323  00372C  0FEE               	addlw	-18
  9324  00372E  6ED9               	movwf	fsr2l,c
  9325  003730  50E2               	movf	fsr1h,w,c
  9326  003732  6EDA               	movwf	fsr2h,c
  9327  003734  0EFF               	movlw	255
  9328  003736  22DA               	addwfc	fsr2h,f,c
  9329  003738  0EE6               	movlw	-26
  9330  00373A  50E3               	movf	plusw1,w,c
  9331  00373C  5EDE               	subwf	postinc2,f,c
  9332  00373E  0EE7               	movlw	-25
  9333  003740  50E3               	movf	plusw1,w,c
  9334  003742  5ADE               	subwfb	postinc2,f,c
  9335  003744  0EE8               	movlw	-24
  9336  003746  50E3               	movf	plusw1,w,c
  9337  003748  5ADE               	subwfb	postinc2,f,c
  9338  00374A  0EE9               	movlw	-23
  9339  00374C  50E3               	movf	plusw1,w,c
  9340  00374E  5ADE               	subwfb	postinc2,f,c
  9341  003750  0EEA               	movlw	-22
  9342  003752  50E3               	movf	plusw1,w,c
  9343  003754  5ADE               	subwfb	postinc2,f,c
  9344  003756  0EEB               	movlw	-21
  9345  003758  50E3               	movf	plusw1,w,c
  9346  00375A  5ADE               	subwfb	postinc2,f,c
  9347  00375C  0EEC               	movlw	-20
  9348  00375E  50E3               	movf	plusw1,w,c
  9349  003760  5ADE               	subwfb	postinc2,f,c
  9350  003762  0EED               	movlw	-19
  9351  003764  50E3               	movf	plusw1,w,c
  9352  003766  5ADE               	subwfb	postinc2,f,c
  9353                           
  9354                           ;stkvar	_quotient @ sp[(-10)+0]
  9355  003768  0EF6               	movlw	-10
  9356  00376A  80E3               	bsf	plusw1,0,c
  9357  00376C                     l4674:
  9358                           
  9359                           ;stkvar	_divisor @ sp[(-10)+-16]
  9360  00376C  90D8               	bcf	status,0,c
  9361  00376E  0EED               	movlw	-19
  9362  003770  32E3               	rrcf	plusw1,f,c
  9363  003772  0EEC               	movlw	-20
  9364  003774  32E3               	rrcf	plusw1,f,c
  9365  003776  0EEB               	movlw	-21
  9366  003778  32E3               	rrcf	plusw1,f,c
  9367  00377A  0EEA               	movlw	-22
  9368  00377C  32E3               	rrcf	plusw1,f,c
  9369  00377E  0EE9               	movlw	-23
  9370  003780  32E3               	rrcf	plusw1,f,c
  9371  003782  0EE8               	movlw	-24
  9372  003784  32E3               	rrcf	plusw1,f,c
  9373  003786  0EE7               	movlw	-25
  9374  003788  32E3               	rrcf	plusw1,f,c
  9375  00378A  0EE6               	movlw	-26
  9376  00378C  32E3               	rrcf	plusw1,f,c
  9377                           
  9378                           ;stkvar	_counter @ sp[(-10)+9]
  9379  00378E  0EFF               	movlw	-1
  9380  003790  50E3               	movf	plusw1,w,c
  9381  003792  6E3E               	movwf	btemp,c
  9382  003794  0E01               	movlw	1
  9383  003796  5E3E               	subwf	btemp,f,c
  9384  003798  0EFF               	movlw	-1
  9385  00379A  0060  F0FB  FFE3   	movff	btemp,plusw1
  9386  0037A0  A4D8               	btfss	status,2,c
  9387  0037A2  D791               	goto	u1930
  9388  0037A4                     u1950:
  9389                           
  9390                           ;stkvar	_sign @ sp[(-10)+8]
  9391  0037A4  0EFE               	movlw	-2
  9392  0037A6  50E3               	movf	plusw1,w,c
  9393  0037A8  B4D8               	btfsc	status,2,c
  9394  0037AA  D025               	goto	u1970
  9395                           
  9396                           ;stkvar	_quotient @ sp[(-10)+0]
  9397                           ;stkvar	_quotient @ sp[(-10)+0]
  9398  0037AC  0EF6               	movlw	-10
  9399  0037AE  6CE3               	negf	plusw1,c
  9400  0037B0  0EF7               	movlw	-9
  9401  0037B2  1EE3               	comf	plusw1,f,c
  9402  0037B4  0EF8               	movlw	-8
  9403  0037B6  1EE3               	comf	plusw1,f,c
  9404  0037B8  0EF9               	movlw	-7
  9405  0037BA  1EE3               	comf	plusw1,f,c
  9406  0037BC  0EFA               	movlw	-6
  9407  0037BE  1EE3               	comf	plusw1,f,c
  9408  0037C0  0EFB               	movlw	-5
  9409  0037C2  1EE3               	comf	plusw1,f,c
  9410  0037C4  0EFC               	movlw	-4
  9411  0037C6  1EE3               	comf	plusw1,f,c
  9412  0037C8  0EFD               	movlw	-3
  9413  0037CA  1EE3               	comf	plusw1,f,c
  9414  0037CC  E314               	bnc	u1970
  9415  0037CE  0EF7               	movlw	-9
  9416  0037D0  2AE3               	incf	plusw1,f,c
  9417  0037D2  E311               	bnc	u1970
  9418  0037D4  0EF8               	movlw	-8
  9419  0037D6  2AE3               	incf	plusw1,f,c
  9420  0037D8  E30E               	bnc	u1970
  9421  0037DA  0EF9               	movlw	-7
  9422  0037DC  2AE3               	incf	plusw1,f,c
  9423  0037DE  E30B               	bnc	u1970
  9424  0037E0  0EFA               	movlw	-6
  9425  0037E2  2AE3               	incf	plusw1,f,c
  9426  0037E4  E308               	bnc	u1970
  9427  0037E6  0EFB               	movlw	-5
  9428  0037E8  2AE3               	incf	plusw1,f,c
  9429  0037EA  E305               	bnc	u1970
  9430  0037EC  0EFC               	movlw	-4
  9431  0037EE  2AE3               	incf	plusw1,f,c
  9432  0037F0  E302               	bnc	u1970
  9433  0037F2  0EFD               	movlw	-3
  9434  0037F4  2AE3               	incf	plusw1,f,c
  9435  0037F6                     u1970:
  9436                           
  9437                           ;stkvar	_quotient @ sp[(-10)+0]
  9438  0037F6  0EF6               	movlw	246
  9439  0037F8  24E1               	addwf	fsr1l,w,c
  9440  0037FA  6ED9               	movwf	fsr2l,c
  9441  0037FC  0EFF               	movlw	255
  9442  0037FE  20E2               	addwfc	fsr1h,w,c
  9443  003800  6EDA               	movwf	fsr2h,c
  9444                           
  9445                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9446  003802  0E08               	movlw	8
  9447  003804  6E3E               	movwf	btemp,c
  9448  003806  0EEE               	movlw	-18
  9449  003808                     us198999:
  9450  003808  006F FF7B FFE3     	movff	postinc2,plusw1
  9451  00380E  28E8               	incf	wreg,w,c
  9452  003810  2E3E               	decfsz	btemp,f,c
  9453  003812  D7FA               	bra	us198999
  9454                           
  9455                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9456  003814  0EF6               	movlw	246
  9457  003816  26E1               	addwf	fsr1l,f,c
  9458  003818  0EFF               	movlw	255
  9459  00381A  22E2               	addwfc	fsr1h,f,c
  9460  00381C  0012               	return		;funcret
  9461  00381E                     __end_of___aodiv:
  9462                           	opt callstack 0
  9463                           
  9464 ;; *************** function _ctoa *****************
  9465 ;; Defined at:
  9466 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9469 ;;		 -> f(5), NULL(0), 
  9470 ;;  c               1  [STACK] unsigned char 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  w               2  [STACK] int 
  9473 ;;  l               2    0        int 
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  2  [STACK] int 
  9476 ;; Registers used:
  9477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9487 ;;Total ram usage:        0 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:    8
  9490 ;; This function calls:
  9491 ;;		_pad
  9492 ;; This function is called by:
  9493 ;;		_vfpfcnvrt
  9494 ;; This function uses a reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text40
  9498  004C64                     __ptext40:
  9499                           	opt callstack 0
  9500  004C64                     _ctoa:
  9501                           	opt callstack 0
  9502                           
  9503                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9504  004C64  52E6               	movf	postinc1,f,c
  9505  004C66  52E6               	movf	postinc1,f,c
  9506                           
  9507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9508                           
  9509                           ;incstack = 0
  9510  004C68  5024               	movf	_width,w,c
  9511  004C6A  1025               	iorwf	_width+1,w,c
  9512  004C6C  A4D8               	btfss	status,2,c
  9513  004C6E  D009               	goto	l6358
  9514                           
  9515                           ;stkvar	_w @ sp[(-2)+0]
  9516  004C70  0EFE               	movlw	-2
  9517  004C72  0060  F093  FFE3   	movff	_width,plusw1
  9518  004C78  0EFF               	movlw	-1
  9519  004C7A  0060  F097  FFE3   	movff	_width+1,plusw1
  9520  004C80  D016               	goto	l6360
  9521  004C82                     l6358:
  9522  004C82  0EFF               	movlw	255
  9523  004C84  6E48               	movwf	btemp+10,c
  9524  004C86  0EFF               	movlw	255
  9525  004C88  6E49               	movwf	btemp+11,c
  9526  004C8A  0060  F090  F046   	movff	_width,btemp+8
  9527  004C90  0060  F094  F047   	movff	_width+1,btemp+9
  9528  004C96  5048               	movf	btemp+10,w,c
  9529  004C98  2646               	addwf	btemp+8,f,c
  9530  004C9A  5049               	movf	btemp+11,w,c
  9531  004C9C  2247               	addwfc	btemp+9,f,c
  9532                           
  9533                           ;stkvar	_w @ sp[(-2)+0]
  9534  004C9E  0EFE               	movlw	-2
  9535  004CA0  0060  F11B  FFE3   	movff	btemp+8,plusw1
  9536  004CA6  0EFF               	movlw	-1
  9537  004CA8  0060  F11F  FFE3   	movff	btemp+9,plusw1
  9538  004CAE                     l6360:
  9539                           
  9540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9541                           ;stkvar	_c @ sp[(-2)+-3]
  9542  004CAE  0EFB               	movlw	-5
  9543  004CB0  006F FF8C  F1C4    	movff	plusw1,_dbuf
  9544                           
  9545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9546  004CB6  0101               	movlb	1	; () banked
  9547  004CB8  6BC5               	clrf	(_dbuf+1)& (0+255),b
  9548                           
  9549                           ; BSR set to: 1
  9550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9551                           ;stkvar	_w @ sp[(-2)+0]
  9552  004CBA  0EFE               	movlw	-2
  9553  004CBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9554  004CC2  006F FF8F FFE6     	movff	plusw1,postinc1
  9555  004CC8  0EC4               	movlw	low _dbuf
  9556  004CCA  6EE6               	movwf	postinc1,c
  9557  004CCC  0E01               	movlw	high _dbuf
  9558  004CCE  6EE6               	movwf	postinc1,c
  9559                           
  9560                           ;stkvar	_fp @ sp[(-6)+-2]
  9561  004CD0  0EF8               	movlw	-8
  9562  004CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  004CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  9564  004CDE  ECF3  F020         	call	_pad	;wreg free
  9565                           
  9566                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9567  004CE2  0EFB               	movlw	251
  9568  004CE4  26E1               	addwf	fsr1l,f,c
  9569  004CE6  0EFF               	movlw	255
  9570  004CE8  22E2               	addwfc	fsr1h,f,c
  9571  004CEA  0012               	return		;funcret
  9572  004CEC                     __end_of_ctoa:
  9573                           	opt callstack 0
  9574                           
  9575 ;; *************** function _pad *****************
  9576 ;; Defined at:
  9577 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9580 ;;		 -> f(5), NULL(0), 
  9581 ;;  buf             2  [STACK] PTR unsigned char 
  9582 ;;		 -> dbuf(32), 
  9583 ;;  p               2  [STACK] int 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  w               2  [STACK] int 
  9586 ;;  i               2  [STACK] int 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  2  [STACK] int 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/1
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9600 ;;Total ram usage:        0 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    7
  9603 ;; This function calls:
  9604 ;;		_fputc
  9605 ;;		_fputs
  9606 ;;		_strlen
  9607 ;; This function is called by:
  9608 ;;		_ctoa
  9609 ;;		_dtoa
  9610 ;; This function uses a reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text41
  9614  0041E6                     __ptext41:
  9615                           	opt callstack 0
  9616  0041E6                     _pad:
  9617                           	opt callstack 0
  9618                           
  9619                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9620  0041E6  52E6               	movf	postinc1,f,c
  9621  0041E8  52E6               	movf	postinc1,f,c
  9622  0041EA  52E6               	movf	postinc1,f,c
  9623  0041EC  52E6               	movf	postinc1,f,c
  9624                           
  9625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9626                           
  9627                           ;incstack = 0
  9628  0041EE  A028               	btfss	_flags,0,c
  9629  0041F0  D010               	goto	l6336
  9630                           
  9631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9632                           ;stkvar	_fp @ sp[(-4)+-2]
  9633  0041F2  0EFA               	movlw	-6
  9634  0041F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9635  0041FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9636                           
  9637                           ;stkvar	_buf @ sp[(-6)+-4]
  9638  004200  0EF6               	movlw	-10
  9639  004202  006F FF8F FFE6     	movff	plusw1,postinc1
  9640  004208  006F FF8F FFE6     	movff	plusw1,postinc1
  9641  00420E  EC53  F025         	call	_fputs	;wreg free
  9642  004212                     l6336:
  9643                           
  9644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9645                           ;stkvar	_p @ sp[(-4)+-6]
  9646  004212  0EF7               	movlw	-9
  9647  004214  BEE3               	btfsc	plusw1,7,c
  9648  004216  D011               	goto	l6340
  9649                           
  9650                           ;stkvar	_p @ sp[(-4)+-6]
  9651                           ;stkvar	_w @ sp[(-4)+0]
  9652  004218  0EF6               	movlw	-10
  9653  00421A  006F FF8C  F03E    	movff	plusw1,btemp
  9654  004220  0EFC               	movlw	-4
  9655  004222  0060  F0FB  FFE3   	movff	btemp,plusw1
  9656  004228  0EF7               	movlw	-9
  9657  00422A  006F FF8C  F03E    	movff	plusw1,btemp
  9658  004230  0EFD               	movlw	-3
  9659  004232  0060  F0FB  FFE3   	movff	btemp,plusw1
  9660  004238  D004               	goto	l1664
  9661  00423A                     l6340:
  9662                           
  9663                           ;stkvar	_w @ sp[(-4)+0]
  9664  00423A  0EFC               	movlw	-4
  9665  00423C  6AE3               	clrf	plusw1,c
  9666  00423E  0EFD               	movlw	-3
  9667  004240  6AE3               	clrf	plusw1,c
  9668  004242                     l1664:
  9669                           
  9670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9671                           ;stkvar	_i @ sp[(-4)+2]
  9672  004242  0EFE               	movlw	-2
  9673  004244  6AE3               	clrf	plusw1,c
  9674  004246  0EFF               	movlw	-1
  9675  004248  6AE3               	clrf	plusw1,c
  9676                           
  9677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9678  00424A  D01E               	goto	l6346
  9679  00424C                     l6342:
  9680                           
  9681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9682                           ;stkvar	_fp @ sp[(-4)+-2]
  9683  00424C  0EFA               	movlw	-6
  9684  00424E  006F FF8F FFE6     	movff	plusw1,postinc1
  9685  004254  006F FF8F FFE6     	movff	plusw1,postinc1
  9686  00425A  0E20               	movlw	32
  9687  00425C  6EE6               	movwf	postinc1,c
  9688  00425E  0E00               	movlw	0
  9689  004260  6EE6               	movwf	postinc1,c
  9690  004262  EC7D  F021         	call	_fputc	;wreg free
  9691                           
  9692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9693                           ;stkvar	_i @ sp[(-4)+2]
  9694  004266  0EFE               	movlw	-2
  9695  004268  50E3               	movf	plusw1,w,c
  9696  00426A  0F01               	addlw	1
  9697  00426C  6E3E               	movwf	btemp,c
  9698  00426E  0EFE               	movlw	-2
  9699  004270  0060  F0FB  FFE3   	movff	btemp,plusw1
  9700  004276  6A3E               	clrf	btemp,c
  9701  004278  0EFF               	movlw	-1
  9702  00427A  50E3               	movf	plusw1,w,c
  9703  00427C  203E               	addwfc	btemp,w,c
  9704  00427E  6E3E               	movwf	btemp,c
  9705  004280  0EFF               	movlw	-1
  9706  004282  0060  F0FB  FFE3   	movff	btemp,plusw1
  9707  004288                     l6346:
  9708                           
  9709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9710                           ;stkvar	_w @ sp[(-4)+0]
  9711                           ;stkvar	_i @ sp[(-4)+2]
  9712  004288  50E1               	movf	fsr1l,w,c
  9713  00428A  0FFE               	addlw	-2
  9714  00428C  6ED9               	movwf	fsr2l,c
  9715  00428E  50E2               	movf	fsr1h,w,c
  9716  004290  6EDA               	movwf	fsr2h,c
  9717  004292  0EFF               	movlw	255
  9718  004294  22DA               	addwfc	fsr2h,f,c
  9719  004296  0EFC               	movlw	-4
  9720  004298  50E3               	movf	plusw1,w,c
  9721  00429A  5CDE               	subwf	postinc2,w,c
  9722  00429C  50DE               	movf	postinc2,w,c
  9723  00429E  0A80               	xorlw	128
  9724  0042A0  6E3E               	movwf	btemp,c
  9725  0042A2  0EFD               	movlw	-3
  9726  0042A4  50E3               	movf	plusw1,w,c
  9727  0042A6  0A80               	xorlw	128
  9728  0042A8  583E               	subwfb	btemp,w,c
  9729  0042AA  A0D8               	btfss	status,0,c
  9730  0042AC  D7CF               	goto	l6342
  9731                           
  9732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9733  0042AE  B028               	btfsc	_flags,0,c
  9734  0042B0  D010               	goto	l6350
  9735                           
  9736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9737                           ;stkvar	_fp @ sp[(-4)+-2]
  9738  0042B2  0EFA               	movlw	-6
  9739  0042B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9740  0042BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9741                           
  9742                           ;stkvar	_buf @ sp[(-6)+-4]
  9743  0042C0  0EF6               	movlw	-10
  9744  0042C2  006F FF8F FFE6     	movff	plusw1,postinc1
  9745  0042C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9746  0042CE  EC53  F025         	call	_fputs	;wreg free
  9747  0042D2                     l6350:
  9748                           
  9749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9750                           ;stkvar	_w @ sp[(-4)+0]
  9751                           ;stkvar	_buf @ sp[(-4)+-4]
  9752  0042D2  0EF8               	movlw	-8
  9753  0042D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9754  0042DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9755  0042E0  EC64  F024         	call	_strlen	;wreg free
  9756  0042E4  0EFC               	movlw	-4
  9757  0042E6  50E3               	movf	plusw1,w,c
  9758  0042E8  263E               	addwf	btemp,f,c
  9759  0042EA  0EFD               	movlw	-3
  9760  0042EC  50E3               	movf	plusw1,w,c
  9761  0042EE  223F               	addwfc	btemp+1,f,c
  9762                           
  9763                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9764  0042F0  0EF6               	movlw	246
  9765  0042F2  26E1               	addwf	fsr1l,f,c
  9766  0042F4  0EFF               	movlw	255
  9767  0042F6  22E2               	addwfc	fsr1h,f,c
  9768  0042F8  0012               	return		;funcret
  9769  0042FA                     __end_of_pad:
  9770                           	opt callstack 0
  9771                           
  9772 ;; *************** function _strlen *****************
  9773 ;; Defined at:
  9774 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  s               2  [STACK] PTR const unsigned char 
  9777 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9778 ;;		 -> STR_3(5), V(86), 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  a               2  [STACK] PTR const unsigned char 
  9781 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9782 ;;		 -> STR_3(5), V(86), 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2  [STACK] unsigned int 
  9785 ;; Registers used:
  9786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    3
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_eaDogM_WriteString
  9803 ;;		_pad
  9804 ;;		_stoa
  9805 ;; This function uses a reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text42
  9809  0048C8                     __ptext42:
  9810                           	opt callstack 0
  9811  0048C8                     _strlen:
  9812                           	opt callstack 0
  9813                           
  9814                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9815  0048C8  52E6               	movf	postinc1,f,c
  9816  0048CA  52E6               	movf	postinc1,f,c
  9817                           
  9818                           ;stkvar	_s @ sp[(-2)+-2]
  9819                           
  9820                           ;incstack = 0
  9821  0048CC  0EFC               	movlw	-4
  9822  0048CE  006F FF8C  F048    	movff	plusw1,btemp+10
  9823  0048D4  0EFD               	movlw	-3
  9824  0048D6  006F FF8C  F049    	movff	plusw1,btemp+11
  9825                           
  9826                           ;stkvar	_a @ sp[(-2)+0]
  9827  0048DC  0EFF               	movlw	-1
  9828  0048DE  0060  F127  FFE3   	movff	btemp+11,plusw1
  9829  0048E4  0EFE               	movlw	-2
  9830  0048E6  0060  F123  FFE3   	movff	btemp+10,plusw1
  9831  0048EC  D011               	goto	l4598
  9832  0048EE                     l4596:
  9833                           
  9834                           ;stkvar	_s @ sp[(-2)+-2]
  9835  0048EE  0EFC               	movlw	-4
  9836  0048F0  50E3               	movf	plusw1,w,c
  9837  0048F2  0F01               	addlw	1
  9838  0048F4  6E3E               	movwf	btemp,c
  9839  0048F6  0EFC               	movlw	-4
  9840  0048F8  0060  F0FB  FFE3   	movff	btemp,plusw1
  9841  0048FE  6A3E               	clrf	btemp,c
  9842  004900  0EFD               	movlw	-3
  9843  004902  50E3               	movf	plusw1,w,c
  9844  004904  203E               	addwfc	btemp,w,c
  9845  004906  6E3E               	movwf	btemp,c
  9846  004908  0EFD               	movlw	-3
  9847  00490A  0060  F0FB  FFE3   	movff	btemp,plusw1
  9848  004910                     l4598:
  9849                           
  9850                           ;stkvar	_s @ sp[(-2)+-2]
  9851  004910  0EFC               	movlw	-4
  9852  004912  006F FF8F FFF6     	movff	plusw1,tblptrl
  9853  004918  0EFD               	movlw	-3
  9854  00491A  006F FF8F FFF7     	movff	plusw1,tblptrh
  9855  004920  0E00               	movlw	low (__smallconst shr (0+16))
  9856  004922  6EF8               	movwf	tblptru,c
  9857  004924  0E1F               	movlw	(high __ramtop+-1)
  9858  004926  64F7               	cpfsgt	tblptrh,c
  9859  004928  D003               	bra	u1797
  9860  00492A  0008               	tblrd		*
  9861  00492C  50F5               	movf	tablat,w,c
  9862  00492E  D007               	bra	u1790
  9863  004930                     u1797:
  9864  004930  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9865  004936  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9866  00493C  50EF               	movf	indf0,w,c
  9867  00493E                     u1790:
  9868  00493E  0900               	iorlw	0
  9869  004940  A4D8               	btfss	status,2,c
  9870  004942  D7D5               	goto	l4596
  9871                           
  9872                           ;stkvar	_a @ sp[(-2)+0]
  9873                           ;stkvar	_s @ sp[(-2)+-2]
  9874  004944  0EFC               	movlw	-4
  9875  004946  006F FF8C  F03E    	movff	plusw1,btemp
  9876  00494C  0EFD               	movlw	-3
  9877  00494E  006F FF8C  F03F    	movff	plusw1,btemp+1
  9878  004954  0EFE               	movlw	-2
  9879  004956  50E3               	movf	plusw1,w,c
  9880  004958  5E3E               	subwf	btemp,f,c
  9881  00495A  0EFF               	movlw	-1
  9882  00495C  50E3               	movf	plusw1,w,c
  9883  00495E  5A3F               	subwfb	btemp+1,f,c
  9884                           
  9885                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9886  004960  52E5               	movf	postdec1,f,c
  9887  004962  52E5               	movf	postdec1,f,c
  9888  004964  52E5               	movf	postdec1,f,c
  9889  004966  52E5               	movf	postdec1,f,c
  9890  004968  0012               	return		;funcret
  9891  00496A                     __end_of_strlen:
  9892                           	opt callstack 0
  9893                           
  9894 ;; *************** function _fputs *****************
  9895 ;; Defined at:
  9896 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  s               2  [STACK] PTR const unsigned char 
  9899 ;;		 -> dbuf(32), 
  9900 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9901 ;;		 -> f(5), NULL(0), 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  i               2  [STACK] int 
  9904 ;;  c               1  [STACK] unsigned char 
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  2  [STACK] int 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/1
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    6
  9921 ;; This function calls:
  9922 ;;		_fputc
  9923 ;; This function is called by:
  9924 ;;		_pad
  9925 ;; This function uses a reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text43
  9929  004AA6                     __ptext43:
  9930                           	opt callstack 0
  9931  004AA6                     _fputs:
  9932                           	opt callstack 0
  9933                           
  9934                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9935  004AA6  52E6               	movf	postinc1,f,c
  9936  004AA8  52E6               	movf	postinc1,f,c
  9937  004AAA  52E6               	movf	postinc1,f,c
  9938                           
  9939                           ;stkvar	_i @ sp[(-3)+0]
  9940                           
  9941                           ;incstack = 0
  9942  004AAC  0EFD               	movlw	-3
  9943  004AAE  6AE3               	clrf	plusw1,c
  9944  004AB0  0EFE               	movlw	-2
  9945  004AB2  6AE3               	clrf	plusw1,c
  9946  004AB4  D01F               	goto	l6330
  9947  004AB6                     l6326:
  9948                           
  9949                           ;stkvar	_fp @ sp[(-3)+-4]
  9950  004AB6  0EF9               	movlw	-7
  9951  004AB8  006F FF8F FFE6     	movff	plusw1,postinc1
  9952  004ABE  006F FF8F FFE6     	movff	plusw1,postinc1
  9953                           
  9954                           ;stkvar	_c @ sp[(-5)+2]
  9955  004AC4  0EFD               	movlw	-3
  9956  004AC6  50E3               	movf	plusw1,w,c
  9957  004AC8  6EE6               	movwf	postinc1,c
  9958  004ACA  0E00               	movlw	0
  9959  004ACC  6EE6               	movwf	postinc1,c
  9960  004ACE  EC7D  F021         	call	_fputc	;wreg free
  9961                           
  9962                           ;stkvar	_i @ sp[(-3)+0]
  9963  004AD2  0EFD               	movlw	-3
  9964  004AD4  50E3               	movf	plusw1,w,c
  9965  004AD6  0F01               	addlw	1
  9966  004AD8  6E3E               	movwf	btemp,c
  9967  004ADA  0EFD               	movlw	-3
  9968  004ADC  0060  F0FB  FFE3   	movff	btemp,plusw1
  9969  004AE2  6A3E               	clrf	btemp,c
  9970  004AE4  0EFE               	movlw	-2
  9971  004AE6  50E3               	movf	plusw1,w,c
  9972  004AE8  203E               	addwfc	btemp,w,c
  9973  004AEA  6E3E               	movwf	btemp,c
  9974  004AEC  0EFE               	movlw	-2
  9975  004AEE  0060  F0FB  FFE3   	movff	btemp,plusw1
  9976  004AF4                     l6330:
  9977                           
  9978                           ;stkvar	_i @ sp[(-3)+0]
  9979  004AF4  0EFD               	movlw	-3
  9980  004AF6  006F FF8C  F048    	movff	plusw1,btemp+10
  9981  004AFC  0EFE               	movlw	-2
  9982  004AFE  006F FF8C  F049    	movff	plusw1,btemp+11
  9983                           
  9984                           ;stkvar	_s @ sp[(-3)+-2]
  9985  004B04  0EFB               	movlw	-5
  9986  004B06  006F FF8C  F046    	movff	plusw1,btemp+8
  9987  004B0C  0EFC               	movlw	-4
  9988  004B0E  006F FF8C  F047    	movff	plusw1,btemp+9
  9989  004B14  5048               	movf	btemp+10,w,c
  9990  004B16  2446               	addwf	btemp+8,w,c
  9991  004B18  6ED9               	movwf	fsr2l,c
  9992  004B1A  5049               	movf	btemp+11,w,c
  9993  004B1C  2047               	addwfc	btemp+9,w,c
  9994  004B1E  6EDA               	movwf	fsr2h,c
  9995  004B20  50DF               	movf	indf2,w,c
  9996  004B22  6E49               	movwf	btemp+11,c
  9997                           
  9998                           ;stkvar	_c @ sp[(-3)+2]
  9999  004B24  0EFF               	movlw	-1
 10000  004B26  0060  F127  FFE3   	movff	btemp+11,plusw1
 10001  004B2C  0EFF               	movlw	-1
 10002  004B2E  50E3               	movf	plusw1,w,c
 10003  004B30  A4D8               	btfss	status,2,c
 10004  004B32  D7C1               	goto	l6326
 10005                           
 10006                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10007  004B34  0EF9               	movlw	249
 10008  004B36  26E1               	addwf	fsr1l,f,c
 10009  004B38  0EFF               	movlw	255
 10010  004B3A  22E2               	addwfc	fsr1h,f,c
 10011  004B3C  0012               	return		;funcret
 10012  004B3E                     __end_of_fputs:
 10013                           	opt callstack 0
 10014                           
 10015 ;; *************** function _fputc *****************
 10016 ;; Defined at:
 10017 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  c               2  [STACK] int 
 10020 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10021 ;;		 -> f(5), NULL(0), 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  2  [STACK] int 
 10026 ;; Registers used:
 10027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10037 ;;Total ram usage:        0 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    5
 10040 ;; This function calls:
 10041 ;;		_putch
 10042 ;; This function is called by:
 10043 ;;		_pad
 10044 ;;		_stoa
 10045 ;;		_vfpfcnvrt
 10046 ;;		_fputs
 10047 ;; This function uses a reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text44
 10051  0042FA                     __ptext44:
 10052                           	opt callstack 0
 10053  0042FA                     _fputc:
 10054                           	opt callstack 21
 10055                           
 10056                           ;stkvar	_fp @ sp[(0)+-4]
 10057                           
 10058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10059                           ;incstack = 0
 10060  0042FA  0EFC               	movlw	-4
 10061  0042FC  006F FF8C  F03E    	movff	plusw1,btemp
 10062  004302  0EFD               	movlw	-3
 10063  004304  50E3               	movf	plusw1,w,c
 10064  004306  103E               	iorwf	btemp,w,c
 10065  004308  B4D8               	btfsc	status,2,c
 10066  00430A  D009               	goto	u3320
 10067                           
 10068                           ;stkvar	_fp @ sp[(0)+-4]
 10069  00430C  0EFC               	movlw	-4
 10070  00430E  006F FF8C  F03E    	movff	plusw1,btemp
 10071  004314  0EFD               	movlw	-3
 10072  004316  50E3               	movf	plusw1,w,c
 10073  004318  103E               	iorwf	btemp,w,c
 10074  00431A  A4D8               	btfss	status,2,c
 10075  00431C  D006               	goto	l6316
 10076  00431E                     u3320:
 10077                           
 10078                           ;stkvar	_c @ sp[(0)+-2]
 10079  00431E  0EFE               	movlw	-2
 10080  004320  50E3               	movf	plusw1,w,c
 10081  004322  6EE6               	movwf	postinc1,c
 10082  004324  EC3B  F02C         	call	_putch	;wreg free
 10083  004328  D069               	goto	l2447
 10084  00432A                     l6316:
 10085                           
 10086                           ;stkvar	_fp @ sp[(0)+-4]
 10087  00432A  0EFC               	movlw	-4
 10088  00432C  006F FF8C  F048    	movff	plusw1,btemp+10
 10089  004332  0EFD               	movlw	-3
 10090  004334  006F FF8C  F049    	movff	plusw1,btemp+11
 10091  00433A  0E03               	movlw	3
 10092  00433C  2448               	addwf	btemp+10,w,c
 10093  00433E  6ED9               	movwf	fsr2l,c
 10094  004340  0E00               	movlw	0
 10095  004342  2049               	addwfc	btemp+11,w,c
 10096  004344  6EDA               	movwf	fsr2h,c
 10097  004346  50DE               	movf	postinc2,w,c
 10098  004348  10DE               	iorwf	postinc2,w,c
 10099  00434A  B4D8               	btfsc	status,2,c
 10100  00434C  D026               	goto	u3340
 10101                           
 10102                           ;stkvar	_fp @ sp[(0)+-4]
 10103  00434E  0EFC               	movlw	-4
 10104  004350  006F FF8C  F048    	movff	plusw1,btemp+10
 10105  004356  0EFD               	movlw	-3
 10106  004358  006F FF8C  F049    	movff	plusw1,btemp+11
 10107  00435E  0E03               	movlw	3
 10108  004360  2448               	addwf	btemp+10,w,c
 10109  004362  6ED9               	movwf	fsr2l,c
 10110  004364  0E00               	movlw	0
 10111  004366  2049               	addwfc	btemp+11,w,c
 10112  004368  6EDA               	movwf	fsr2h,c
 10113                           
 10114                           ;stkvar	_fp @ sp[(0)+-4]
 10115  00436A  0EFC               	movlw	-4
 10116  00436C  006F FF8C  F048    	movff	plusw1,btemp+10
 10117  004372  0EFD               	movlw	-3
 10118  004374  006F FF8C  F049    	movff	plusw1,btemp+11
 10119  00437A  0E01               	movlw	1
 10120  00437C  2448               	addwf	btemp+10,w,c
 10121  00437E  6EE9               	movwf	fsr0l,c
 10122  004380  0E00               	movlw	0
 10123  004382  2049               	addwfc	btemp+11,w,c
 10124  004384  6EEA               	movwf	fsr0h,c
 10125  004386  50DE               	movf	postinc2,w,c
 10126  004388  5CEE               	subwf	postinc0,w,c
 10127  00438A  50EE               	movf	postinc0,w,c
 10128  00438C  0A80               	xorlw	128
 10129  00438E  6E3E               	movwf	btemp,c
 10130  004390  50DE               	movf	postinc2,w,c
 10131  004392  0A80               	xorlw	128
 10132  004394  583E               	subwfb	btemp,w,c
 10133  004396  B0D8               	btfsc	status,0,c
 10134  004398  D031               	goto	l2447
 10135  00439A                     u3340:
 10136                           
 10137                           ;stkvar	_c @ sp[(0)+-2]
 10138                           ;stkvar	_fp @ sp[(0)+-4]
 10139  00439A  0EFC               	movlw	-4
 10140  00439C  006F FF8C  F048    	movff	plusw1,btemp+10
 10141  0043A2  0EFD               	movlw	-3
 10142  0043A4  006F FF8C  F049    	movff	plusw1,btemp+11
 10143  0043AA  0E01               	movlw	1
 10144  0043AC  2448               	addwf	btemp+10,w,c
 10145  0043AE  6ED9               	movwf	fsr2l,c
 10146  0043B0  0E00               	movlw	0
 10147  0043B2  2049               	addwfc	btemp+11,w,c
 10148  0043B4  6EDA               	movwf	fsr2h,c
 10149  0043B6  50DF               	movf	indf2,w,c
 10150  0043B8  6E49               	movwf	btemp+11,c
 10151                           
 10152                           ;stkvar	_fp @ sp[(0)+-4]
 10153  0043BA  0EFC               	movlw	-4
 10154  0043BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10155  0043C2  0EFD               	movlw	-3
 10156  0043C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10157  0043CA  50DF               	movf	indf2,w,c
 10158  0043CC  2449               	addwf	btemp+11,w,c
 10159  0043CE  6ED9               	movwf	fsr2l,c
 10160  0043D0  6ADA               	clrf	fsr2h,c
 10161  0043D2  0EFE               	movlw	-2
 10162  0043D4  006F FF8F FFDF     	movff	plusw1,indf2
 10163                           
 10164                           ;stkvar	_fp @ sp[(0)+-4]
 10165  0043DA  0EFC               	movlw	-4
 10166  0043DC  006F FF8C  F048    	movff	plusw1,btemp+10
 10167  0043E2  0EFD               	movlw	-3
 10168  0043E4  006F FF8C  F049    	movff	plusw1,btemp+11
 10169  0043EA  0E01               	movlw	1
 10170  0043EC  2448               	addwf	btemp+10,w,c
 10171  0043EE  6ED9               	movwf	fsr2l,c
 10172  0043F0  0E00               	movlw	0
 10173  0043F2  2049               	addwfc	btemp+11,w,c
 10174  0043F4  6EDA               	movwf	fsr2h,c
 10175  0043F6  2ADE               	incf	postinc2,f,c
 10176  0043F8  0E00               	movlw	0
 10177  0043FA  22DD               	addwfc	postdec2,f,c
 10178  0043FC                     l2447:
 10179                           
 10180                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10181  0043FC  52E5               	movf	postdec1,f,c
 10182  0043FE  52E5               	movf	postdec1,f,c
 10183  004400  52E5               	movf	postdec1,f,c
 10184  004402  52E5               	movf	postdec1,f,c
 10185  004404  0012               	return		;funcret
 10186  004406                     __end_of_fputc:
 10187                           	opt callstack 0
 10188                           
 10189 ;; *************** function _putch *****************
 10190 ;; Defined at:
 10191 ;;		line 138 in file "eadog.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  c               1  [STACK] unsigned char 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;		None
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  1  [STACK] void 
 10198 ;; Registers used:
 10199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;Total ram usage:        0 bytes
 10210 ;; Hardware stack levels used:    1
 10211 ;; Hardware stack levels required when called:    4
 10212 ;; This function calls:
 10213 ;;		_ringBufS_put_dma
 10214 ;; This function is called by:
 10215 ;;		_fputc
 10216 ;; This function uses a reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text45
 10220  005876                     __ptext45:
 10221                           	opt callstack 0
 10222  005876                     _putch:
 10223                           	opt callstack 21
 10224                           
 10225                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10226                           ;stkvar	_c @ sp[(0)+-1]
 10227                           
 10228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10229                           ;incstack = 0
 10230  005876  0EFF               	movlw	-1
 10231  005878  50E3               	movf	plusw1,w,c
 10232  00587A  6EE6               	movwf	postinc1,c
 10233  00587C  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10234  005882  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10235  005888  EC0F  F024         	call	_ringBufS_put_dma	;wreg free
 10236                           
 10237                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10238  00588C  52E5               	movf	postdec1,f,c
 10239  00588E  0012               	return		;funcret
 10240  005890                     __end_of_putch:
 10241                           	opt callstack 0
 10242                           
 10243 ;; *************** function _ringBufS_put_dma *****************
 10244 ;; Defined at:
 10245 ;;		line 67 in file "ringbufs.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10248 ;;		 -> ring_buf1(67), 
 10249 ;;  c               1  [STACK] const unsigned char 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1  [STACK] void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    3
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_putch
 10272 ;; This function uses a reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text46
 10276  00481E                     __ptext46:
 10277                           	opt callstack 0
 10278  00481E                     _ringBufS_put_dma:
 10279                           	opt callstack 21
 10280                           
 10281                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10282                           ;stkvar	__this @ sp[(0)+-2]
 10283                           
 10284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10285                           ;incstack = 0
 10286  00481E  0EFE               	movlw	-2
 10287  004820  006F FF8C  F048    	movff	plusw1,btemp+10
 10288  004826  0EFF               	movlw	-1
 10289  004828  006F FF8C  F049    	movff	plusw1,btemp+11
 10290  00482E  0E42               	movlw	66
 10291  004830  2448               	addwf	btemp+10,w,c
 10292  004832  6ED9               	movwf	fsr2l,c
 10293  004834  0E00               	movlw	0
 10294  004836  2049               	addwfc	btemp+11,w,c
 10295  004838  6EDA               	movwf	fsr2h,c
 10296  00483A  0E40               	movlw	64
 10297  00483C  60DF               	cpfslt	indf2,c
 10298  00483E  D040               	goto	l1440
 10299                           
 10300                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10301                           ;stkvar	_c @ sp[(0)+-3]
 10302                           ;stkvar	__this @ sp[(0)+-2]
 10303  004840  0EFE               	movlw	-2
 10304  004842  006F FF8C  F048    	movff	plusw1,btemp+10
 10305  004848  0EFF               	movlw	-1
 10306  00484A  006F FF8C  F049    	movff	plusw1,btemp+11
 10307  004850  0E40               	movlw	64
 10308  004852  2448               	addwf	btemp+10,w,c
 10309  004854  6ED9               	movwf	fsr2l,c
 10310  004856  0E00               	movlw	0
 10311  004858  2049               	addwfc	btemp+11,w,c
 10312  00485A  6EDA               	movwf	fsr2h,c
 10313  00485C  50DF               	movf	indf2,w,c
 10314  00485E  6E49               	movwf	btemp+11,c
 10315                           
 10316                           ;stkvar	__this @ sp[(0)+-2]
 10317  004860  0EFE               	movlw	-2
 10318  004862  006F FF8C  F046    	movff	plusw1,btemp+8
 10319  004868  0EFF               	movlw	-1
 10320  00486A  006F FF8C  F047    	movff	plusw1,btemp+9
 10321  004870  5049               	movf	btemp+11,w,c
 10322  004872  2446               	addwf	btemp+8,w,c
 10323  004874  6ED9               	movwf	fsr2l,c
 10324  004876  0E00               	movlw	0
 10325  004878  2047               	addwfc	btemp+9,w,c
 10326  00487A  6EDA               	movwf	fsr2h,c
 10327  00487C  0EFD               	movlw	-3
 10328  00487E  006F FF8F FFDF     	movff	plusw1,indf2
 10329                           
 10330                           ;ringbufs.c: 71:   ++_this->head;
 10331                           ;stkvar	__this @ sp[(0)+-2]
 10332  004884  0EFE               	movlw	-2
 10333  004886  006F FF8C  F048    	movff	plusw1,btemp+10
 10334  00488C  0EFF               	movlw	-1
 10335  00488E  006F FF8C  F049    	movff	plusw1,btemp+11
 10336  004894  0E40               	movlw	64
 10337  004896  2448               	addwf	btemp+10,w,c
 10338  004898  6ED9               	movwf	fsr2l,c
 10339  00489A  0E00               	movlw	0
 10340  00489C  2049               	addwfc	btemp+11,w,c
 10341  00489E  6EDA               	movwf	fsr2h,c
 10342  0048A0  2ADF               	incf	indf2,f,c
 10343                           
 10344                           ;ringbufs.c: 72:   ++_this->count;
 10345                           ;stkvar	__this @ sp[(0)+-2]
 10346  0048A2  0EFE               	movlw	-2
 10347  0048A4  006F FF8C  F048    	movff	plusw1,btemp+10
 10348  0048AA  0EFF               	movlw	-1
 10349  0048AC  006F FF8C  F049    	movff	plusw1,btemp+11
 10350  0048B2  0E42               	movlw	66
 10351  0048B4  2448               	addwf	btemp+10,w,c
 10352  0048B6  6ED9               	movwf	fsr2l,c
 10353  0048B8  0E00               	movlw	0
 10354  0048BA  2049               	addwfc	btemp+11,w,c
 10355  0048BC  6EDA               	movwf	fsr2h,c
 10356  0048BE  2ADF               	incf	indf2,f,c
 10357  0048C0                     l1440:
 10358                           
 10359                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10360  0048C0  52E5               	movf	postdec1,f,c
 10361  0048C2  52E5               	movf	postdec1,f,c
 10362  0048C4  52E5               	movf	postdec1,f,c
 10363  0048C6  0012               	return		;funcret
 10364  0048C8                     __end_of_ringBufS_put_dma:
 10365                           	opt callstack 0
 10366                           
 10367 ;; *************** function _SYSTEM_Initialize *****************
 10368 ;; Defined at:
 10369 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1  [STACK] void 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 3F/3C
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    5
 10390 ;; This function calls:
 10391 ;;		_ADCC_Initialize
 10392 ;;		_CLC1_Initialize
 10393 ;;		_CLKREF_Initialize
 10394 ;;		_DMA1_Initialize
 10395 ;;		_DSM_Initialize
 10396 ;;		_EXT_INT_Initialize
 10397 ;;		_INTERRUPT_Initialize
 10398 ;;		_NCO1_Initialize
 10399 ;;		_OSCILLATOR_Initialize
 10400 ;;		_PIN_MANAGER_Initialize
 10401 ;;		_PMD_Initialize
 10402 ;;		_SPI1_Initialize
 10403 ;;		_TMR5_Initialize
 10404 ;;		_TMR6_Initialize
 10405 ;;		_UART1_Initialize
 10406 ;;		_UART2_Initialize
 10407 ;; This function is called by:
 10408 ;;		_main
 10409 ;; This function uses a reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text47
 10413  005162                     __ptext47:
 10414                           	opt callstack 0
 10415  005162                     _SYSTEM_Initialize:
 10416                           	opt callstack 25
 10417                           
 10418                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10419                           
 10420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10421                           ;incstack = 0
 10422  005162  ECE3  F026         	call	_INTERRUPT_Initialize	;wreg free
 10423                           
 10424                           ; BSR set to: 57
 10425                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10426  005166  EC83  F02C         	call	_PMD_Initialize	;wreg free
 10427                           
 10428                           ; BSR set to: 57
 10429                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10430  00516A  ECB5  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10431                           
 10432                           ; BSR set to: 58
 10433                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10434  00516E  EC78  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10435                           
 10436                           ; BSR set to: 57
 10437                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10438  005172  EC23  F028         	call	_ADCC_Initialize	;wreg free
 10439                           
 10440                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10441  005176  EC1F  F02C         	call	_NCO1_Initialize	;wreg free
 10442                           
 10443                           ; BSR set to: 63
 10444                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10445  00517A  ECFD  F027         	call	_EXT_INT_Initialize	;wreg free
 10446                           
 10447                           ; BSR set to: 57
 10448                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10449  00517E  EC8F  F02A         	call	_TMR6_Initialize	;wreg free
 10450                           
 10451                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10452  005182  EC7C  F02B         	call	_CLC1_Initialize	;wreg free
 10453                           
 10454                           ; BSR set to: 60
 10455                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10456  005186  EC6B  F028         	call	_TMR5_Initialize	;wreg free
 10457                           
 10458                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10459  00518A  EC2D  F02C         	call	_DSM_Initialize	;wreg free
 10460                           
 10461                           ; BSR set to: 60
 10462                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10463  00518E  EC16  F027         	call	_UART1_Initialize	;wreg free
 10464                           
 10465                           ; BSR set to: 57
 10466                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10467  005192  EC79  F027         	call	_UART2_Initialize	;wreg free
 10468                           
 10469                           ; BSR set to: 57
 10470                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10471  005196  EC6D  F02C         	call	_SPI1_Initialize	;wreg free
 10472                           
 10473                           ; BSR set to: 61
 10474                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10475  00519A  ECAE  F026         	call	_DMA1_Initialize	;wreg free
 10476                           
 10477                           ; BSR set to: 59
 10478                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10479  00519E  ECB3  F02C         	call	_CLKREF_Initialize	;wreg free
 10480                           
 10481                           ; BSR set to: 60
 10482                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10483  0051A2  0012               	return		;funcret
 10484  0051A4                     __end_of_SYSTEM_Initialize:
 10485                           	opt callstack 0
 10486                           
 10487 ;; *************** function _UART2_Initialize *****************
 10488 ;; Defined at:
 10489 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1  [STACK] void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10498 ;; Tracked objects:
 10499 ;;		On entry : 3F/39
 10500 ;;		On exit  : 3F/39
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    4
 10510 ;; This function calls:
 10511 ;;		_UART2_SetRxInterruptHandler
 10512 ;;		_UART2_SetTxInterruptHandler
 10513 ;; This function is called by:
 10514 ;;		_SYSTEM_Initialize
 10515 ;; This function uses a reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text48
 10519  004EF2                     __ptext48:
 10520                           	opt callstack 0
 10521  004EF2                     _UART2_Initialize:
 10522                           	opt callstack 25
 10523                           
 10524                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10525                           
 10526                           ; BSR set to: 60
 10527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10528                           ;incstack = 0
 10529  004EF2  0139               	movlb	57	; () banked
 10530  004EF4  9596               	bcf	150,2,b	;volatile
 10531                           
 10532                           ; BSR set to: 57
 10533                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10534  004EF6  0EE4               	movlw	low _UART2_Receive_ISR
 10535  004EF8  6EE6               	movwf	postinc1,c
 10536  004EFA  0E57               	movlw	high _UART2_Receive_ISR
 10537  004EFC  6EE6               	movwf	postinc1,c
 10538  004EFE  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10539  004F00  6EE6               	movwf	postinc1,c
 10540  004F02  EC53  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10541                           
 10542                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10543  004F06  0139               	movlb	57	; () banked
 10544  004F08  9796               	bcf	150,3,b	;volatile
 10545                           
 10546                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10547  004F0A  0E32               	movlw	low _UART2_Transmit_ISR
 10548  004F0C  6EE6               	movwf	postinc1,c
 10549  004F0E  0E53               	movlw	high _UART2_Transmit_ISR
 10550  004F10  6EE6               	movwf	postinc1,c
 10551  004F12  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10552  004F14  6EE6               	movwf	postinc1,c
 10553  004F16  EC3F  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10554                           
 10555                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10556  004F1A  013D               	movlb	61	; () banked
 10557  004F1C  6BD4               	clrf	212,b	;volatile
 10558                           
 10559                           ; BSR set to: 61
 10560                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10561  004F1E  6BD6               	clrf	214,b	;volatile
 10562                           
 10563                           ; BSR set to: 61
 10564                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10565  004F20  6BD8               	clrf	216,b	;volatile
 10566                           
 10567                           ; BSR set to: 61
 10568                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10569  004F22  0EB0               	movlw	176
 10570  004F24  6FDA               	movwf	218,b	;volatile
 10571                           
 10572                           ; BSR set to: 61
 10573                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10574  004F26  0E80               	movlw	128
 10575  004F28  6FDB               	movwf	219,b	;volatile
 10576                           
 10577                           ; BSR set to: 61
 10578                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10579  004F2A  6BDC               	clrf	220,b	;volatile
 10580                           
 10581                           ; BSR set to: 61
 10582                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10583  004F2C  0E82               	movlw	130
 10584  004F2E  6FDD               	movwf	221,b	;volatile
 10585                           
 10586                           ; BSR set to: 61
 10587                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10588  004F30  0E06               	movlw	6
 10589  004F32  6FDE               	movwf	222,b	;volatile
 10590                           
 10591                           ; BSR set to: 61
 10592                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10593  004F34  6BDF               	clrf	223,b	;volatile
 10594                           
 10595                           ; BSR set to: 61
 10596                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10597  004F36  6BE0               	clrf	224,b	;volatile
 10598                           
 10599                           ; BSR set to: 61
 10600                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10601  004F38  6BE1               	clrf	225,b	;volatile
 10602                           
 10603                           ; BSR set to: 61
 10604                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10605  004F3A  6BE2               	clrf	226,b	;volatile
 10606                           
 10607                           ; BSR set to: 61
 10608                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10609  004F3C  6A37               	clrf	_uart2TxHead,c	;volatile
 10610                           
 10611                           ; BSR set to: 61
 10612                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10613  004F3E  6A36               	clrf	_uart2TxTail,c	;volatile
 10614                           
 10615                           ; BSR set to: 61
 10616                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10617  004F40  0E40               	movlw	64
 10618  004F42  6E35               	movwf	_uart2TxBufferRemaining,c	;volatile
 10619                           
 10620                           ; BSR set to: 61
 10621                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10622  004F44  6A34               	clrf	_uart2RxHead,c	;volatile
 10623                           
 10624                           ; BSR set to: 61
 10625                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10626  004F46  6A33               	clrf	_uart2RxTail,c	;volatile
 10627                           
 10628                           ; BSR set to: 61
 10629                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10630  004F48  6A32               	clrf	_uart2RxCount,c	;volatile
 10631                           
 10632                           ; BSR set to: 61
 10633                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10634  004F4A  0139               	movlb	57	; () banked
 10635  004F4C  8596               	bsf	150,2,b	;volatile
 10636                           
 10637                           ; BSR set to: 57
 10638                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10639  004F4E  0012               	return		;funcret
 10640  004F50                     __end_of_UART2_Initialize:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10644 ;; Defined at:
 10645 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10648 ;;		 -> UART2_Transmit_ISR(1), 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;		None
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  1  [STACK] void 
 10653 ;; Registers used:
 10654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10655 ;; Tracked objects:
 10656 ;;		On entry : 3F/39
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10664 ;;Total ram usage:        0 bytes
 10665 ;; Hardware stack levels used:    1
 10666 ;; Hardware stack levels required when called:    3
 10667 ;; This function calls:
 10668 ;;		Nothing
 10669 ;; This function is called by:
 10670 ;;		_UART2_Initialize
 10671 ;; This function uses a reentrant model
 10672 ;;
 10673                           
 10674                           	psect	text49
 10675  00547E                     __ptext49:
 10676                           	opt callstack 0
 10677  00547E                     _UART2_SetTxInterruptHandler:
 10678                           	opt callstack 25
 10679                           
 10680                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10682                           
 10683                           ; BSR set to: 57
 10684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10685                           ;incstack = 0
 10686  00547E  50E1               	movf	fsr1l,w,c
 10687  005480  0FFD               	addlw	-3
 10688  005482  6ED9               	movwf	fsr2l,c
 10689  005484  50E2               	movf	fsr1h,w,c
 10690  005486  6EDA               	movwf	fsr2h,c
 10691  005488  0EFF               	movlw	255
 10692  00548A  22DA               	addwfc	fsr2h,f,c
 10693  00548C  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 10694  005492  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 10695  005498  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 10696                           
 10697                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10698  00549E  52E5               	movf	postdec1,f,c
 10699  0054A0  52E5               	movf	postdec1,f,c
 10700  0054A2  52E5               	movf	postdec1,f,c
 10701  0054A4  0012               	return		;funcret
 10702  0054A6                     __end_of_UART2_SetTxInterruptHandler:
 10703                           	opt callstack 0
 10704                           
 10705 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10706 ;; Defined at:
 10707 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10710 ;;		 -> UART2_Receive_ISR(1), 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1  [STACK] void 
 10715 ;; Registers used:
 10716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10717 ;; Tracked objects:
 10718 ;;		On entry : 3F/39
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;Total ram usage:        0 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:    3
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_UART2_Initialize
 10733 ;; This function uses a reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text50
 10737  0054A6                     __ptext50:
 10738                           	opt callstack 0
 10739  0054A6                     _UART2_SetRxInterruptHandler:
 10740                           	opt callstack 25
 10741                           
 10742                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10743                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10744                           
 10745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10746                           ;incstack = 0
 10747  0054A6  50E1               	movf	fsr1l,w,c
 10748  0054A8  0FFD               	addlw	-3
 10749  0054AA  6ED9               	movwf	fsr2l,c
 10750  0054AC  50E2               	movf	fsr1h,w,c
 10751  0054AE  6EDA               	movwf	fsr2h,c
 10752  0054B0  0EFF               	movlw	255
 10753  0054B2  22DA               	addwfc	fsr2h,f,c
 10754  0054B4  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 10755  0054BA  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 10756  0054C0  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 10757                           
 10758                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10759  0054C6  52E5               	movf	postdec1,f,c
 10760  0054C8  52E5               	movf	postdec1,f,c
 10761  0054CA  52E5               	movf	postdec1,f,c
 10762  0054CC  0012               	return		;funcret
 10763  0054CE                     __end_of_UART2_SetRxInterruptHandler:
 10764                           	opt callstack 0
 10765                           
 10766 ;; *************** function _UART1_Initialize *****************
 10767 ;; Defined at:
 10768 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1  [STACK] void 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10777 ;; Tracked objects:
 10778 ;;		On entry : 3F/3C
 10779 ;;		On exit  : 3F/39
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    4
 10789 ;; This function calls:
 10790 ;;		_UART1_SetRxInterruptHandler
 10791 ;;		_UART1_SetTxInterruptHandler
 10792 ;; This function is called by:
 10793 ;;		_SYSTEM_Initialize
 10794 ;; This function uses a reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text51
 10798  004E2C                     __ptext51:
 10799                           	opt callstack 0
 10800  004E2C                     _UART1_Initialize:
 10801                           	opt callstack 25
 10802                           
 10803                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10804                           
 10805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10806                           ;incstack = 0
 10807  004E2C  0139               	movlb	57	; () banked
 10808  004E2E  9793               	bcf	147,3,b	;volatile
 10809                           
 10810                           ; BSR set to: 57
 10811                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10812  004E30  0EC4               	movlw	low _UART1_Receive_ISR
 10813  004E32  6EE6               	movwf	postinc1,c
 10814  004E34  0E57               	movlw	high _UART1_Receive_ISR
 10815  004E36  6EE6               	movwf	postinc1,c
 10816  004E38  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10817  004E3A  6EE6               	movwf	postinc1,c
 10818  004E3C  EC7B  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10819                           
 10820                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10821  004E40  0139               	movlb	57	; () banked
 10822  004E42  9993               	bcf	147,4,b	;volatile
 10823                           
 10824                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10825  004E44  0E06               	movlw	low _UART1_Transmit_ISR
 10826  004E46  6EE6               	movwf	postinc1,c
 10827  004E48  0E53               	movlw	high _UART1_Transmit_ISR
 10828  004E4A  6EE6               	movwf	postinc1,c
 10829  004E4C  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10830  004E4E  6EE6               	movwf	postinc1,c
 10831  004E50  EC67  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10832                           
 10833                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10834  004E54  013D               	movlb	61	; () banked
 10835  004E56  6BEC               	clrf	236,b	;volatile
 10836                           
 10837                           ; BSR set to: 61
 10838                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10839  004E58  6BED               	clrf	237,b	;volatile
 10840                           
 10841                           ; BSR set to: 61
 10842                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10843  004E5A  6BEE               	clrf	238,b	;volatile
 10844                           
 10845                           ; BSR set to: 61
 10846                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10847  004E5C  6BEF               	clrf	239,b	;volatile
 10848                           
 10849                           ; BSR set to: 61
 10850                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10851  004E5E  6BF0               	clrf	240,b	;volatile
 10852                           
 10853                           ; BSR set to: 61
 10854                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10855  004E60  6BF1               	clrf	241,b	;volatile
 10856                           
 10857                           ; BSR set to: 61
 10858                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10859  004E62  0EB0               	movlw	176
 10860  004E64  6FF2               	movwf	242,b	;volatile
 10861                           
 10862                           ; BSR set to: 61
 10863                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10864  004E66  0E80               	movlw	128
 10865  004E68  6FF3               	movwf	243,b	;volatile
 10866                           
 10867                           ; BSR set to: 61
 10868                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10869  004E6A  6BF4               	clrf	244,b	;volatile
 10870                           
 10871                           ; BSR set to: 61
 10872                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10873  004E6C  0E82               	movlw	130
 10874  004E6E  6FF5               	movwf	245,b	;volatile
 10875                           
 10876                           ; BSR set to: 61
 10877                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10878  004E70  0E06               	movlw	6
 10879  004E72  6FF6               	movwf	246,b	;volatile
 10880                           
 10881                           ; BSR set to: 61
 10882                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10883  004E74  6BF7               	clrf	247,b	;volatile
 10884                           
 10885                           ; BSR set to: 61
 10886                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10887  004E76  6BF8               	clrf	248,b	;volatile
 10888                           
 10889                           ; BSR set to: 61
 10890                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10891  004E78  6BF9               	clrf	249,b	;volatile
 10892                           
 10893                           ; BSR set to: 61
 10894                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10895  004E7A  6BFA               	clrf	250,b	;volatile
 10896                           
 10897                           ; BSR set to: 61
 10898                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10899  004E7C  6A3D               	clrf	_uart1TxHead,c	;volatile
 10900                           
 10901                           ; BSR set to: 61
 10902                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10903  004E7E  6A3C               	clrf	_uart1TxTail,c	;volatile
 10904                           
 10905                           ; BSR set to: 61
 10906                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10907  004E80  0E40               	movlw	64
 10908  004E82  6E3B               	movwf	_uart1TxBufferRemaining,c	;volatile
 10909                           
 10910                           ; BSR set to: 61
 10911                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10912  004E84  6A3A               	clrf	_uart1RxHead,c	;volatile
 10913                           
 10914                           ; BSR set to: 61
 10915                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10916  004E86  6A39               	clrf	_uart1RxTail,c	;volatile
 10917                           
 10918                           ; BSR set to: 61
 10919                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10920  004E88  6A38               	clrf	_uart1RxCount,c	;volatile
 10921                           
 10922                           ; BSR set to: 61
 10923                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10924  004E8A  0139               	movlb	57	; () banked
 10925  004E8C  8793               	bsf	147,3,b	;volatile
 10926                           
 10927                           ; BSR set to: 57
 10928                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10929  004E8E  0012               	return		;funcret
 10930  004E90                     __end_of_UART1_Initialize:
 10931                           	opt callstack 0
 10932                           
 10933 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10934 ;; Defined at:
 10935 ;;		line 244 in file "mcc_generated_files/uart1.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10938 ;;		 -> UART1_Transmit_ISR(1), 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;		None
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1  [STACK] void 
 10943 ;; Registers used:
 10944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10945 ;; Tracked objects:
 10946 ;;		On entry : 3F/39
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10954 ;;Total ram usage:        0 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; Hardware stack levels required when called:    3
 10957 ;; This function calls:
 10958 ;;		Nothing
 10959 ;; This function is called by:
 10960 ;;		_UART1_Initialize
 10961 ;; This function uses a reentrant model
 10962 ;;
 10963                           
 10964                           	psect	text52
 10965  0054CE                     __ptext52:
 10966                           	opt callstack 0
 10967  0054CE                     _UART1_SetTxInterruptHandler:
 10968                           	opt callstack 25
 10969                           
 10970                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10971                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10972                           
 10973                           ; BSR set to: 57
 10974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10975                           ;incstack = 0
 10976  0054CE  50E1               	movf	fsr1l,w,c
 10977  0054D0  0FFD               	addlw	-3
 10978  0054D2  6ED9               	movwf	fsr2l,c
 10979  0054D4  50E2               	movf	fsr1h,w,c
 10980  0054D6  6EDA               	movwf	fsr2h,c
 10981  0054D8  0EFF               	movlw	255
 10982  0054DA  22DA               	addwfc	fsr2h,f,c
 10983  0054DC  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 10984  0054E2  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 10985  0054E8  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 10986                           
 10987                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10988  0054EE  52E5               	movf	postdec1,f,c
 10989  0054F0  52E5               	movf	postdec1,f,c
 10990  0054F2  52E5               	movf	postdec1,f,c
 10991  0054F4  0012               	return		;funcret
 10992  0054F6                     __end_of_UART1_SetTxInterruptHandler:
 10993                           	opt callstack 0
 10994                           
 10995 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10996 ;; Defined at:
 10997 ;;		line 239 in file "mcc_generated_files/uart1.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11000 ;;		 -> UART1_Receive_ISR(1), 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  1  [STACK] void 
 11005 ;; Registers used:
 11006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11007 ;; Tracked objects:
 11008 ;;		On entry : 3F/39
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11016 ;;Total ram usage:        0 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    3
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_UART1_Initialize
 11023 ;; This function uses a reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text53
 11027  0054F6                     __ptext53:
 11028                           	opt callstack 0
 11029  0054F6                     _UART1_SetRxInterruptHandler:
 11030                           	opt callstack 25
 11031                           
 11032                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11033                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11034                           
 11035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11036                           ;incstack = 0
 11037  0054F6  50E1               	movf	fsr1l,w,c
 11038  0054F8  0FFD               	addlw	-3
 11039  0054FA  6ED9               	movwf	fsr2l,c
 11040  0054FC  50E2               	movf	fsr1h,w,c
 11041  0054FE  6EDA               	movwf	fsr2h,c
 11042  005500  0EFF               	movlw	255
 11043  005502  22DA               	addwfc	fsr2h,f,c
 11044  005504  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 11045  00550A  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 11046  005510  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 11047                           
 11048                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11049  005516  52E5               	movf	postdec1,f,c
 11050  005518  52E5               	movf	postdec1,f,c
 11051  00551A  52E5               	movf	postdec1,f,c
 11052  00551C  0012               	return		;funcret
 11053  00551E                     __end_of_UART1_SetRxInterruptHandler:
 11054                           	opt callstack 0
 11055                           
 11056 ;; *************** function _TMR6_Initialize *****************
 11057 ;; Defined at:
 11058 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1  [STACK] void 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11067 ;; Tracked objects:
 11068 ;;		On entry : 3F/39
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    4
 11079 ;; This function calls:
 11080 ;;		_TMR6_SetInterruptHandler
 11081 ;; This function is called by:
 11082 ;;		_SYSTEM_Initialize
 11083 ;; This function uses a reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text54
 11087  00551E                     __ptext54:
 11088                           	opt callstack 0
 11089  00551E                     _TMR6_Initialize:
 11090                           	opt callstack 25
 11091                           
 11092                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11093                           
 11094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11095                           ;incstack = 0
 11096  00551E  0E01               	movlw	1
 11097  005520  6E96               	movwf	16278,c	;volatile
 11098                           
 11099                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11100  005522  6A95               	clrf	16277,c	;volatile
 11101                           
 11102                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11103  005524  6A97               	clrf	16279,c	;volatile
 11104                           
 11105                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11106  005526  0E03               	movlw	3
 11107  005528  6E93               	movwf	16275,c	;volatile
 11108                           
 11109                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11110  00552A  6A92               	clrf	16274,c	;volatile
 11111                           
 11112                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11113  00552C  0139               	movlb	57	; () banked
 11114  00552E  91A9               	bcf	169,0,b	;volatile
 11115                           
 11116                           ; BSR set to: 57
 11117                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11118  005530  8199               	bsf	153,0,b	;volatile
 11119                           
 11120                           ; BSR set to: 57
 11121                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11122  005532  0E1C               	movlw	low _TMR6_DefaultInterruptHandler
 11123  005534  6EE6               	movwf	postinc1,c
 11124  005536  0E51               	movlw	high _TMR6_DefaultInterruptHandler
 11125  005538  6EE6               	movwf	postinc1,c
 11126  00553A  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11127  00553C  6EE6               	movwf	postinc1,c
 11128  00553E  ECA3  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11129                           
 11130                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11131  005542  6894               	setf	16276,c	;volatile
 11132                           
 11133                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11134  005544  0012               	return		;funcret
 11135  005546                     __end_of_TMR6_Initialize:
 11136                           	opt callstack 0
 11137                           
 11138 ;; *************** function _TMR6_SetInterruptHandler *****************
 11139 ;; Defined at:
 11140 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11143 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1  [STACK] void 
 11148 ;; Registers used:
 11149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11150 ;; Tracked objects:
 11151 ;;		On entry : 3F/39
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;Total ram usage:        0 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    3
 11162 ;; This function calls:
 11163 ;;		Nothing
 11164 ;; This function is called by:
 11165 ;;		_TMR6_Initialize
 11166 ;; This function uses a reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text55
 11170  005546                     __ptext55:
 11171                           	opt callstack 0
 11172  005546                     _TMR6_SetInterruptHandler:
 11173                           	opt callstack 25
 11174                           
 11175                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11176                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11177                           
 11178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11179                           ;incstack = 0
 11180  005546  50E1               	movf	fsr1l,w,c
 11181  005548  0FFD               	addlw	-3
 11182  00554A  6ED9               	movwf	fsr2l,c
 11183  00554C  50E2               	movf	fsr1h,w,c
 11184  00554E  6EDA               	movwf	fsr2h,c
 11185  005550  0EFF               	movlw	255
 11186  005552  22DA               	addwfc	fsr2h,f,c
 11187  005554  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 11188  00555A  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 11189  005560  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 11190                           
 11191                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11192  005566  52E5               	movf	postdec1,f,c
 11193  005568  52E5               	movf	postdec1,f,c
 11194  00556A  52E5               	movf	postdec1,f,c
 11195  00556C  0012               	return		;funcret
 11196  00556E                     __end_of_TMR6_SetInterruptHandler:
 11197                           	opt callstack 0
 11198                           
 11199 ;; *************** function _TMR5_Initialize *****************
 11200 ;; Defined at:
 11201 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;		None
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1  [STACK] void 
 11208 ;; Registers used:
 11209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11210 ;; Tracked objects:
 11211 ;;		On entry : 3F/3C
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11219 ;;Total ram usage:        0 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; Hardware stack levels required when called:    4
 11222 ;; This function calls:
 11223 ;;		_TMR5_SetInterruptHandler
 11224 ;; This function is called by:
 11225 ;;		_SYSTEM_Initialize
 11226 ;; This function uses a reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text56
 11230  0050D6                     __ptext56:
 11231                           	opt callstack 0
 11232  0050D6                     _TMR5_Initialize:
 11233                           	opt callstack 25
 11234                           
 11235                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11236                           
 11237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11238                           ;incstack = 0
 11239  0050D6  6A9B               	clrf	16283,c	;volatile
 11240                           
 11241                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11242  0050D8  6A9C               	clrf	16284,c	;volatile
 11243                           
 11244                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11245  0050DA  0E01               	movlw	1
 11246  0050DC  6E9D               	movwf	16285,c	;volatile
 11247                           
 11248                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11249  0050DE  0E63               	movlw	99
 11250  0050E0  6E99               	movwf	16281,c	;volatile
 11251                           
 11252                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11253  0050E2  0EC0               	movlw	192
 11254  0050E4  6E98               	movwf	16280,c	;volatile
 11255                           
 11256                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11257  0050E6  5098               	movf	16280,w,c	;volatile
 11258  0050E8  006F FE64  F03E    	movff	16281,btemp	;volatile
 11259  0050EE  6A3F               	clrf	btemp+1,c
 11260  0050F0  0060  F0F8  F03F   	movff	btemp,btemp+1
 11261  0050F6  6A3E               	clrf	btemp,c
 11262  0050F8  103E               	iorwf	btemp,w,c
 11263  0050FA  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 11264  0050FC  503F               	movf	btemp+1,w,c
 11265  0050FE  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 11266                           
 11267                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11268  005100  0139               	movlb	57	; () banked
 11269  005102  9DA8               	bcf	168,6,b	;volatile
 11270                           
 11271                           ; BSR set to: 57
 11272                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11273  005104  8D98               	bsf	152,6,b	;volatile
 11274                           
 11275                           ; BSR set to: 57
 11276                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11277  005106  0EAA               	movlw	low _TMR5_DefaultInterruptHandler
 11278  005108  6EE6               	movwf	postinc1,c
 11279  00510A  0E58               	movlw	high _TMR5_DefaultInterruptHandler
 11280  00510C  6EE6               	movwf	postinc1,c
 11281  00510E  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11282  005110  6EE6               	movwf	postinc1,c
 11283  005112  ECB7  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
 11284                           
 11285                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11286  005116  0E31               	movlw	49
 11287  005118  6E9A               	movwf	16282,c	;volatile
 11288                           
 11289                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11290  00511A  0012               	return		;funcret
 11291  00511C                     __end_of_TMR5_Initialize:
 11292                           	opt callstack 0
 11293                           
 11294 ;; *************** function _TMR5_SetInterruptHandler *****************
 11295 ;; Defined at:
 11296 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11299 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;		None
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1  [STACK] void 
 11304 ;; Registers used:
 11305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11306 ;; Tracked objects:
 11307 ;;		On entry : 3F/39
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;Total ram usage:        0 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:    3
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_TMR5_Initialize
 11322 ;; This function uses a reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text57
 11326  00556E                     __ptext57:
 11327                           	opt callstack 0
 11328  00556E                     _TMR5_SetInterruptHandler:
 11329                           	opt callstack 25
 11330                           
 11331                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11332                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11333                           
 11334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11335                           ;incstack = 0
 11336  00556E  50E1               	movf	fsr1l,w,c
 11337  005570  0FFD               	addlw	-3
 11338  005572  6ED9               	movwf	fsr2l,c
 11339  005574  50E2               	movf	fsr1h,w,c
 11340  005576  6EDA               	movwf	fsr2h,c
 11341  005578  0EFF               	movlw	255
 11342  00557A  22DA               	addwfc	fsr2h,f,c
 11343  00557C  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 11344  005582  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 11345  005588  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 11346                           
 11347                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11348  00558E  52E5               	movf	postdec1,f,c
 11349  005590  52E5               	movf	postdec1,f,c
 11350  005592  52E5               	movf	postdec1,f,c
 11351  005594  0012               	return		;funcret
 11352  005596                     __end_of_TMR5_SetInterruptHandler:
 11353                           	opt callstack 0
 11354                           
 11355 ;; *************** function _SPI1_Initialize *****************
 11356 ;; Defined at:
 11357 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1  [STACK] void 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2
 11366 ;; Tracked objects:
 11367 ;;		On entry : 3F/39
 11368 ;;		On exit  : 3F/3D
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    3
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_SYSTEM_Initialize
 11382 ;; This function uses a reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text58
 11386  0058DA                     __ptext58:
 11387                           	opt callstack 0
 11388  0058DA                     _SPI1_Initialize:
 11389                           	opt callstack 26
 11390                           
 11391                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11392                           
 11393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11394                           ;incstack = 0
 11395  0058DA  0E40               	movlw	64
 11396  0058DC  013D               	movlb	61	; () banked
 11397  0058DE  6F15               	movwf	21,b	;volatile
 11398                           
 11399                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11400  0058E0  0E03               	movlw	3
 11401  0058E2  6F16               	movwf	22,b	;volatile
 11402                           
 11403                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11404  0058E4  0E4F               	movlw	79
 11405  0058E6  6F19               	movwf	25,b	;volatile
 11406                           
 11407                           ; BSR set to: 61
 11408                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11409  0058E8  6B1C               	clrf	28,b	;volatile
 11410                           
 11411                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11412  0058EA  0E83               	movlw	131
 11413  0058EC  6F14               	movwf	20,b	;volatile
 11414                           
 11415                           ; BSR set to: 61
 11416                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11417  0058EE  0012               	return		;funcret
 11418  0058F0                     __end_of_SPI1_Initialize:
 11419                           	opt callstack 0
 11420                           
 11421 ;; *************** function _PMD_Initialize *****************
 11422 ;; Defined at:
 11423 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1  [STACK] void 
 11430 ;; Registers used:
 11431 ;;		None
 11432 ;; Tracked objects:
 11433 ;;		On entry : 3F/39
 11434 ;;		On exit  : 3F/39
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    3
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_SYSTEM_Initialize
 11448 ;; This function uses a reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text59
 11452  005906                     __ptext59:
 11453                           	opt callstack 0
 11454  005906                     _PMD_Initialize:
 11455                           	opt callstack 26
 11456                           
 11457                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11458                           
 11459                           ; BSR set to: 61
 11460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11461                           ;incstack = 0
 11462  005906  0139               	movlb	57	; () banked
 11463  005908  6BC0               	clrf	192,b	;volatile
 11464                           
 11465                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11466  00590A  6BC1               	clrf	193,b	;volatile
 11467                           
 11468                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11469  00590C  6BC2               	clrf	194,b	;volatile
 11470                           
 11471                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11472  00590E  6BC3               	clrf	195,b	;volatile
 11473                           
 11474                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11475  005910  6BC4               	clrf	196,b	;volatile
 11476                           
 11477                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11478  005912  6BC5               	clrf	197,b	;volatile
 11479                           
 11480                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11481  005914  6BC6               	clrf	198,b	;volatile
 11482                           
 11483                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11484  005916  6BC7               	clrf	199,b	;volatile
 11485                           
 11486                           ; BSR set to: 57
 11487                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11488  005918  0012               	return		;funcret
 11489  00591A                     __end_of_PMD_Initialize:
 11490                           	opt callstack 0
 11491                           
 11492 ;; *************** function _PIN_MANAGER_Initialize *****************
 11493 ;; Defined at:
 11494 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;		None
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1  [STACK] void 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2
 11503 ;; Tracked objects:
 11504 ;;		On entry : 3F/39
 11505 ;;		On exit  : 3F/3A
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;Total ram usage:        0 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; Hardware stack levels required when called:    3
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_SYSTEM_Initialize
 11519 ;; This function uses a reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text60
 11523  00496A                     __ptext60:
 11524                           	opt callstack 0
 11525  00496A                     _PIN_MANAGER_Initialize:
 11526                           	opt callstack 26
 11527                           
 11528                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11529                           
 11530                           ; BSR set to: 57
 11531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11532                           ;incstack = 0
 11533  00496A  0E07               	movlw	7
 11534  00496C  6EBE               	movwf	16318,c	;volatile
 11535                           
 11536                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11537  00496E  6ABD               	clrf	16317,c	;volatile
 11538                           
 11539                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11540  004970  6ABA               	clrf	16314,c	;volatile
 11541                           
 11542                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11543  004972  6ABF               	clrf	16319,c	;volatile
 11544                           
 11545                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11546  004974  6ABB               	clrf	16315,c	;volatile
 11547                           
 11548                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11549  004976  0E06               	movlw	6
 11550  004978  6EBC               	movwf	16316,c	;volatile
 11551                           
 11552                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11553  00497A  6AC6               	clrf	16326,c	;volatile
 11554                           
 11555                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11556  00497C  68C7               	setf	16327,c	;volatile
 11557                           
 11558                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11559  00497E  0E8F               	movlw	143
 11560  004980  6EC2               	movwf	16322,c	;volatile
 11561                           
 11562                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11563  004982  0EBF               	movlw	191
 11564  004984  6EC3               	movwf	16323,c	;volatile
 11565                           
 11566                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11567  004986  0E91               	movlw	145
 11568  004988  6EC4               	movwf	16324,c	;volatile
 11569                           
 11570                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11571  00498A  0EFC               	movlw	252
 11572  00498C  6EC5               	movwf	16325,c	;volatile
 11573                           
 11574                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11575  00498E  0EF0               	movlw	240
 11576  004990  013A               	movlb	58	; () banked
 11577  004992  6F70               	movwf	112,b	;volatile
 11578                           
 11579                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11580  004994  0E01               	movlw	1
 11581  004996  6F60               	movwf	96,b	;volatile
 11582                           
 11583                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11584  004998  0E38               	movlw	56
 11585  00499A  6F50               	movwf	80,b	;volatile
 11586                           
 11587                           ; BSR set to: 58
 11588                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11589  00499C  6B80               	clrf	128,b	;volatile
 11590                           
 11591                           ; BSR set to: 58
 11592                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11593  00499E  6990               	setf	144,b	;volatile
 11594                           
 11595                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11596  0049A0  0E8F               	movlw	143
 11597  0049A2  6F40               	movwf	64,b	;volatile
 11598                           
 11599                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11600  0049A4  0E0C               	movlw	12
 11601  0049A6  6F71               	movwf	113,b	;volatile
 11602                           
 11603                           ; BSR set to: 58
 11604                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11605  0049A8  6B91               	clrf	145,b	;volatile
 11606                           
 11607                           ; BSR set to: 58
 11608                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11609  0049AA  6B81               	clrf	129,b	;volatile
 11610                           
 11611                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11612  0049AC  0E87               	movlw	135
 11613  0049AE  6F51               	movwf	81,b	;volatile
 11614                           
 11615                           ; BSR set to: 58
 11616                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11617  0049B0  6B41               	clrf	65,b	;volatile
 11618                           
 11619                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11620  0049B2  0E90               	movlw	144
 11621  0049B4  6F61               	movwf	97,b	;volatile
 11622                           
 11623                           ; BSR set to: 58
 11624                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11625  0049B6  6B82               	clrf	130,b	;volatile
 11626                           
 11627                           ; BSR set to: 58
 11628                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11629  0049B8  6B92               	clrf	146,b	;volatile
 11630                           
 11631                           ; BSR set to: 58
 11632                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11633  0049BA  6B42               	clrf	66,b	;volatile
 11634                           
 11635                           ; BSR set to: 58
 11636                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11637  0049BC  6B52               	clrf	82,b	;volatile
 11638                           
 11639                           ; BSR set to: 58
 11640                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11641  0049BE  6B62               	clrf	98,b	;volatile
 11642                           
 11643                           ; BSR set to: 58
 11644                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11645  0049C0  6B72               	clrf	114,b	;volatile
 11646                           
 11647                           ; BSR set to: 58
 11648                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11649  0049C2  6943               	setf	67,b	;volatile
 11650                           
 11651                           ; BSR set to: 58
 11652                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11653  0049C4  6953               	setf	83,b	;volatile
 11654                           
 11655                           ; BSR set to: 58
 11656                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11657  0049C6  6963               	setf	99,b	;volatile
 11658                           
 11659                           ; BSR set to: 58
 11660                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11661  0049C8  6973               	setf	115,b	;volatile
 11662                           
 11663                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11664  0049CA  0E07               	movlw	7
 11665  0049CC  6F83               	movwf	131,b	;volatile
 11666                           
 11667                           ; BSR set to: 58
 11668                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11669  0049CE  6993               	setf	147,b	;volatile
 11670                           
 11671                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11672  0049D0  0E0F               	movlw	15
 11673  0049D2  6FE8               	movwf	232,b	;volatile
 11674                           
 11675                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11676  0049D4  0E16               	movlw	22
 11677  0049D6  6F0E               	movwf	14,b	;volatile
 11678                           
 11679                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11680  0049D8  0E1E               	movlw	30
 11681  0049DA  6F13               	movwf	19,b	;volatile
 11682                           
 11683                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11684  0049DC  0E08               	movlw	8
 11685  0049DE  6FC0               	movwf	192,b	;volatile
 11686                           
 11687                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11688  0049E0  0E0A               	movlw	10
 11689  0049E2  6FC2               	movwf	194,b	;volatile
 11690                           
 11691                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11692  0049E4  0E09               	movlw	9
 11693  0049E6  6FC1               	movwf	193,b	;volatile
 11694                           
 11695                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11696  0049E8  0E17               	movlw	23
 11697  0049EA  6FE5               	movwf	229,b	;volatile
 11698                           
 11699                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11700  0049EC  0E13               	movlw	19
 11701  0049EE  6FDE               	movwf	222,b	;volatile
 11702                           
 11703                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11704  0049F0  0E01               	movlw	1
 11705  0049F2  6F04               	movwf	4,b	;volatile
 11706                           
 11707                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11708  0049F4  0E26               	movlw	38
 11709  0049F6  6F05               	movwf	5,b	;volatile
 11710                           
 11711                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11712  0049F8  0E28               	movlw	40
 11713  0049FA  6F06               	movwf	6,b	;volatile
 11714                           
 11715                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11716  0049FC  0E1F               	movlw	31
 11717  0049FE  6F15               	movwf	21,b	;volatile
 11718                           
 11719                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11720  004A00  0E13               	movlw	19
 11721  004A02  6F16               	movwf	22,b	;volatile
 11722                           
 11723                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11724  004A04  0E14               	movlw	20
 11725  004A06  6FDF               	movwf	223,b	;volatile
 11726                           
 11727                           ; BSR set to: 58
 11728                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11729  004A08  0012               	return		;funcret
 11730  004A0A                     __end_of_PIN_MANAGER_Initialize:
 11731                           	opt callstack 0
 11732                           
 11733 ;; *************** function _OSCILLATOR_Initialize *****************
 11734 ;; Defined at:
 11735 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;		None
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;		None
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1  [STACK] void 
 11742 ;; Registers used:
 11743 ;;		wreg, status,2
 11744 ;; Tracked objects:
 11745 ;;		On entry : 3F/3A
 11746 ;;		On exit  : 3F/39
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11753 ;;Total ram usage:        0 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    3
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_SYSTEM_Initialize
 11760 ;; This function uses a reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text61
 11764  0058F0                     __ptext61:
 11765                           	opt callstack 0
 11766  0058F0                     _OSCILLATOR_Initialize:
 11767                           	opt callstack 26
 11768                           
 11769                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11770                           
 11771                           ; BSR set to: 58
 11772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11773                           ;incstack = 0
 11774  0058F0  0E20               	movlw	32
 11775  0058F2  0139               	movlb	57	; () banked
 11776  0058F4  6FD9               	movwf	217,b	;volatile
 11777                           
 11778                           ; BSR set to: 57
 11779                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11780  0058F6  6BDB               	clrf	219,b	;volatile
 11781                           
 11782                           ; BSR set to: 57
 11783                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11784  0058F8  6BDD               	clrf	221,b	;volatile
 11785                           
 11786                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11787  0058FA  0E02               	movlw	2
 11788  0058FC  6FDF               	movwf	223,b	;volatile
 11789                           
 11790                           ; BSR set to: 57
 11791                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11792  0058FE  6BDE               	clrf	222,b	;volatile
 11793  005900                     l194:
 11794                           
 11795                           ; BSR set to: 57
 11796                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11797  005900  B1DC               	btfsc	220,0,b	;volatile
 11798  005902  0012               	return	
 11799  005904  D7FD               	goto	l194
 11800  005906                     __end_of_OSCILLATOR_Initialize:
 11801                           	opt callstack 0
 11802                           
 11803 ;; *************** function _NCO1_Initialize *****************
 11804 ;; Defined at:
 11805 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;		None
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;		None
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1  [STACK] void 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/39
 11816 ;;		On exit  : 3F/3F
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11823 ;;Total ram usage:        0 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; Hardware stack levels required when called:    3
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_SYSTEM_Initialize
 11830 ;; This function uses a reentrant model
 11831 ;;
 11832                           
 11833                           	psect	text62
 11834  00583E                     __ptext62:
 11835                           	opt callstack 0
 11836  00583E                     _NCO1_Initialize:
 11837                           	opt callstack 26
 11838                           
 11839                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11840                           
 11841                           ; BSR set to: 57
 11842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11843                           ;incstack = 0
 11844  00583E  013F               	movlb	63	; () banked
 11845  005840  6B3E               	clrf	62,b	;volatile
 11846                           
 11847                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11848  005842  6B3F               	clrf	63,b	;volatile
 11849                           
 11850                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11851  005844  6B3A               	clrf	58,b	;volatile
 11852                           
 11853                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11854  005846  6B39               	clrf	57,b	;volatile
 11855                           
 11856                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11857  005848  6B38               	clrf	56,b	;volatile
 11858                           
 11859                           ; BSR set to: 63
 11860                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11861  00584A  0E06               	movlw	6
 11862  00584C  6F3D               	movwf	61,b	;volatile
 11863                           
 11864                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11865  00584E  0EC7               	movlw	199
 11866  005850  6F3C               	movwf	60,b	;volatile
 11867                           
 11868                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11869  005852  0EAE               	movlw	174
 11870  005854  6F3B               	movwf	59,b	;volatile
 11871                           
 11872                           ; BSR set to: 63
 11873                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11874  005856  8F3E               	bsf	62,7,b	;volatile
 11875                           
 11876                           ; BSR set to: 63
 11877                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11878  005858  0012               	return		;funcret
 11879  00585A                     __end_of_NCO1_Initialize:
 11880                           	opt callstack 0
 11881                           
 11882 ;; *************** function _INTERRUPT_Initialize *****************
 11883 ;; Defined at:
 11884 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  state           1  [STACK] _Bool 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1  [STACK] void 
 11891 ;; Registers used:
 11892 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 3F/39
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11902 ;;Total ram usage:        0 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    3
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_SYSTEM_Initialize
 11909 ;; This function uses a reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text63
 11913  004DC6                     __ptext63:
 11914                           	opt callstack 0
 11915  004DC6                     _INTERRUPT_Initialize:
 11916                           	opt callstack 0
 11917                           
 11918                           ; BSR set to: 63
 11919                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11920  004DC6  52E6               	movf	postinc1,f,c
 11921                           
 11922                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11923                           
 11924                           ;incstack = 0
 11925  004DC8  8AD2               	bsf	16338,5,c	;volatile
 11926                           
 11927                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11928  004DCA  AED2               	btfss	16338,7,c	;volatile
 11929  004DCC  D003               	goto	u940
 11930  004DCE  6A49               	clrf	btemp+11,c
 11931  004DD0  2A49               	incf	btemp+11,f,c
 11932  004DD2  D001               	goto	u958
 11933  004DD4                     u940:
 11934  004DD4  6A49               	clrf	btemp+11,c
 11935  004DD6                     u958:
 11936                           
 11937                           ;stkvar	_state @ sp[(-1)+0]
 11938  004DD6  0EFF               	movlw	-1
 11939  004DD8  0060  F127  FFE3   	movff	btemp+11,plusw1
 11940                           
 11941                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11942  004DDE  9ED2               	bcf	16338,7,c	;volatile
 11943                           
 11944                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11945  004DE0  0E55               	movlw	85
 11946  004DE2  6ED4               	movwf	16340,c	;volatile
 11947                           
 11948                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11949  004DE4  0EAA               	movlw	170
 11950  004DE6  6ED4               	movwf	16340,c	;volatile
 11951                           
 11952                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11953  004DE8  90D4               	bcf	16340,0,c	;volatile
 11954                           
 11955                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11956  004DEA  0138               	movlb	56	; () banked
 11957  004DEC  6B9F               	clrf	159,b	;volatile
 11958                           
 11959                           ; BSR set to: 56
 11960                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11961  004DEE  6B9E               	clrf	158,b	;volatile
 11962                           
 11963                           ; BSR set to: 56
 11964                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11965  004DF0  0E08               	movlw	8
 11966  004DF2  6F9D               	movwf	157,b	;volatile
 11967                           
 11968                           ; BSR set to: 56
 11969                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11970  004DF4  0E55               	movlw	85
 11971  004DF6  6ED4               	movwf	16340,c	;volatile
 11972                           
 11973                           ; BSR set to: 56
 11974                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11975  004DF8  0EAA               	movlw	170
 11976  004DFA  6ED4               	movwf	16340,c	;volatile
 11977                           
 11978                           ; BSR set to: 56
 11979                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11980  004DFC  80D4               	bsf	16340,0,c	;volatile
 11981                           
 11982                           ; BSR set to: 56
 11983                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11984                           ;stkvar	_state @ sp[(-1)+0]
 11985  004DFE  0EFF               	movlw	-1
 11986  004E00  B0E3               	btfsc	plusw1,0,c
 11987  004E02  D002               	bra	u965
 11988  004E04  9ED2               	bcf	16338,7,c	;volatile
 11989  004E06  D001               	bra	u966
 11990  004E08                     u965:
 11991  004E08  8ED2               	bsf	16338,7,c	;volatile
 11992  004E0A                     u966:
 11993                           
 11994                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11995  004E0A  0139               	movlb	57	; () banked
 11996  004E0C  8782               	bsf	130,3,b	;volatile
 11997                           
 11998                           ; BSR set to: 57
 11999                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12000  004E0E  8382               	bsf	130,1,b	;volatile
 12001                           
 12002                           ; BSR set to: 57
 12003                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12004  004E10  8182               	bsf	130,0,b	;volatile
 12005                           
 12006                           ; BSR set to: 57
 12007                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12008  004E12  8582               	bsf	130,2,b	;volatile
 12009                           
 12010                           ; BSR set to: 57
 12011                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12012  004E14  8786               	bsf	134,3,b	;volatile
 12013                           
 12014                           ; BSR set to: 57
 12015                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12016  004E16  8586               	bsf	134,2,b	;volatile
 12017                           
 12018                           ; BSR set to: 57
 12019                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12020  004E18  8983               	bsf	131,4,b	;volatile
 12021                           
 12022                           ; BSR set to: 57
 12023                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12024  004E1A  8783               	bsf	131,3,b	;volatile
 12025                           
 12026                           ; BSR set to: 57
 12027                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12028  004E1C  8181               	bsf	129,0,b	;volatile
 12029                           
 12030                           ; BSR set to: 57
 12031                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12032  004E1E  8185               	bsf	133,0,b	;volatile
 12033                           
 12034                           ; BSR set to: 57
 12035                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12036  004E20  8B87               	bsf	135,5,b	;volatile
 12037                           
 12038                           ; BSR set to: 57
 12039                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12040  004E22  8189               	bsf	137,0,b	;volatile
 12041                           
 12042                           ; BSR set to: 57
 12043                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12044  004E24  8D88               	bsf	136,6,b	;volatile
 12045                           
 12046                           ; BSR set to: 57
 12047                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12048  004E26  8581               	bsf	129,2,b	;volatile
 12049                           
 12050                           ; BSR set to: 57
 12051                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12052  004E28  52E5               	movf	postdec1,f,c
 12053  004E2A  0012               	return		;funcret
 12054  004E2C                     __end_of_INTERRUPT_Initialize:
 12055                           	opt callstack 0
 12056                           
 12057 ;; *************** function _EXT_INT_Initialize *****************
 12058 ;; Defined at:
 12059 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;		None
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1  [STACK] void 
 12066 ;; Registers used:
 12067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12068 ;; Tracked objects:
 12069 ;;		On entry : 3F/3F
 12070 ;;		On exit  : 3F/39
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12077 ;;Total ram usage:        0 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; Hardware stack levels required when called:    4
 12080 ;; This function calls:
 12081 ;;		_INT0_SetInterruptHandler
 12082 ;;		_INT1_SetInterruptHandler
 12083 ;;		_INT2_SetInterruptHandler
 12084 ;; This function is called by:
 12085 ;;		_SYSTEM_Initialize
 12086 ;; This function uses a reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text64
 12090  004FFA                     __ptext64:
 12091                           	opt callstack 0
 12092  004FFA                     _EXT_INT_Initialize:
 12093                           	opt callstack 25
 12094                           
 12095                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12096                           
 12097                           ; BSR set to: 57
 12098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12099                           ;incstack = 0
 12100  004FFA  0139               	movlb	57	; () banked
 12101  004FFC  91A1               	bcf	161,0,b	;volatile
 12102                           
 12103                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12104  004FFE  90D2               	bcf	16338,0,c	;volatile
 12105                           
 12106                           ; BSR set to: 57
 12107                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12108  005000  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 12109  005002  6EE6               	movwf	postinc1,c
 12110  005004  0E59               	movlw	high _INT0_DefaultInterruptHandler
 12111  005006  6EE6               	movwf	postinc1,c
 12112  005008  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12113  00500A  6EE6               	movwf	postinc1,c
 12114  00500C  ECF3  F02A         	call	_INT0_SetInterruptHandler	;wreg free
 12115                           
 12116                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12117  005010  0139               	movlb	57	; () banked
 12118  005012  8191               	bsf	145,0,b	;volatile
 12119                           
 12120                           ; BSR set to: 57
 12121                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12122  005014  91A5               	bcf	165,0,b	;volatile
 12123                           
 12124                           ; BSR set to: 57
 12125                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12126  005016  92D2               	bcf	16338,1,c	;volatile
 12127                           
 12128                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12129  005018  0EB8               	movlw	low _INT1_DefaultInterruptHandler
 12130  00501A  6EE6               	movwf	postinc1,c
 12131  00501C  0E59               	movlw	high _INT1_DefaultInterruptHandler
 12132  00501E  6EE6               	movwf	postinc1,c
 12133  005020  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12134  005022  6EE6               	movwf	postinc1,c
 12135  005024  ECDF  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 12136                           
 12137                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12138  005028  0139               	movlb	57	; () banked
 12139  00502A  8195               	bsf	149,0,b	;volatile
 12140                           
 12141                           ; BSR set to: 57
 12142                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12143  00502C  9BA7               	bcf	167,5,b	;volatile
 12144                           
 12145                           ; BSR set to: 57
 12146                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12147  00502E  94D2               	bcf	16338,2,c	;volatile
 12148                           
 12149                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12150  005030  0EBA               	movlw	low _INT2_DefaultInterruptHandler
 12151  005032  6EE6               	movwf	postinc1,c
 12152  005034  0E59               	movlw	high _INT2_DefaultInterruptHandler
 12153  005036  6EE6               	movwf	postinc1,c
 12154  005038  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12155  00503A  6EE6               	movwf	postinc1,c
 12156  00503C  ECCB  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 12157                           
 12158                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12159  005040  0139               	movlb	57	; () banked
 12160  005042  8B97               	bsf	151,5,b	;volatile
 12161                           
 12162                           ; BSR set to: 57
 12163                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12164  005044  0012               	return		;funcret
 12165  005046                     __end_of_EXT_INT_Initialize:
 12166                           	opt callstack 0
 12167                           
 12168 ;; *************** function _INT2_SetInterruptHandler *****************
 12169 ;; Defined at:
 12170 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12173 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1  [STACK] void 
 12178 ;; Registers used:
 12179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12180 ;; Tracked objects:
 12181 ;;		On entry : 3F/39
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12189 ;;Total ram usage:        0 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    3
 12192 ;; This function calls:
 12193 ;;		Nothing
 12194 ;; This function is called by:
 12195 ;;		_EXT_INT_Initialize
 12196 ;; This function uses a reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text65
 12200  005596                     __ptext65:
 12201                           	opt callstack 0
 12202  005596                     _INT2_SetInterruptHandler:
 12203                           	opt callstack 25
 12204                           
 12205                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12206                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12207                           
 12208                           ; BSR set to: 57
 12209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12210                           ;incstack = 0
 12211  005596  50E1               	movf	fsr1l,w,c
 12212  005598  0FFD               	addlw	-3
 12213  00559A  6ED9               	movwf	fsr2l,c
 12214  00559C  50E2               	movf	fsr1h,w,c
 12215  00559E  6EDA               	movwf	fsr2h,c
 12216  0055A0  0EFF               	movlw	255
 12217  0055A2  22DA               	addwfc	fsr2h,f,c
 12218  0055A4  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 12219  0055AA  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 12220  0055B0  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 12221                           
 12222                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12223  0055B6  52E5               	movf	postdec1,f,c
 12224  0055B8  52E5               	movf	postdec1,f,c
 12225  0055BA  52E5               	movf	postdec1,f,c
 12226  0055BC  0012               	return		;funcret
 12227  0055BE                     __end_of_INT2_SetInterruptHandler:
 12228                           	opt callstack 0
 12229                           
 12230 ;; *************** function _INT1_SetInterruptHandler *****************
 12231 ;; Defined at:
 12232 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12235 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;		None
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  1  [STACK] void 
 12240 ;; Registers used:
 12241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12242 ;; Tracked objects:
 12243 ;;		On entry : 3F/39
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;Total ram usage:        0 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    3
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_EXT_INT_Initialize
 12258 ;; This function uses a reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text66
 12262  0055BE                     __ptext66:
 12263                           	opt callstack 0
 12264  0055BE                     _INT1_SetInterruptHandler:
 12265                           	opt callstack 25
 12266                           
 12267                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12268                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12269                           
 12270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12271                           ;incstack = 0
 12272  0055BE  50E1               	movf	fsr1l,w,c
 12273  0055C0  0FFD               	addlw	-3
 12274  0055C2  6ED9               	movwf	fsr2l,c
 12275  0055C4  50E2               	movf	fsr1h,w,c
 12276  0055C6  6EDA               	movwf	fsr2h,c
 12277  0055C8  0EFF               	movlw	255
 12278  0055CA  22DA               	addwfc	fsr2h,f,c
 12279  0055CC  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 12280  0055D2  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 12281  0055D8  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 12282                           
 12283                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12284  0055DE  52E5               	movf	postdec1,f,c
 12285  0055E0  52E5               	movf	postdec1,f,c
 12286  0055E2  52E5               	movf	postdec1,f,c
 12287  0055E4  0012               	return		;funcret
 12288  0055E6                     __end_of_INT1_SetInterruptHandler:
 12289                           	opt callstack 0
 12290                           
 12291 ;; *************** function _INT0_SetInterruptHandler *****************
 12292 ;; Defined at:
 12293 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12296 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1  [STACK] void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12303 ;; Tracked objects:
 12304 ;;		On entry : 3F/39
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    3
 12315 ;; This function calls:
 12316 ;;		Nothing
 12317 ;; This function is called by:
 12318 ;;		_EXT_INT_Initialize
 12319 ;; This function uses a reentrant model
 12320 ;;
 12321                           
 12322                           	psect	text67
 12323  0055E6                     __ptext67:
 12324                           	opt callstack 0
 12325  0055E6                     _INT0_SetInterruptHandler:
 12326                           	opt callstack 25
 12327                           
 12328                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12329                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12330                           
 12331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12332                           ;incstack = 0
 12333  0055E6  50E1               	movf	fsr1l,w,c
 12334  0055E8  0FFD               	addlw	-3
 12335  0055EA  6ED9               	movwf	fsr2l,c
 12336  0055EC  50E2               	movf	fsr1h,w,c
 12337  0055EE  6EDA               	movwf	fsr2h,c
 12338  0055F0  0EFF               	movlw	255
 12339  0055F2  22DA               	addwfc	fsr2h,f,c
 12340  0055F4  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 12341  0055FA  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 12342  005600  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 12343                           
 12344                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12345  005606  52E5               	movf	postdec1,f,c
 12346  005608  52E5               	movf	postdec1,f,c
 12347  00560A  52E5               	movf	postdec1,f,c
 12348  00560C  0012               	return		;funcret
 12349  00560E                     __end_of_INT0_SetInterruptHandler:
 12350                           	opt callstack 0
 12351                           
 12352 ;; *************** function _DSM_Initialize *****************
 12353 ;; Defined at:
 12354 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;		None
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;		None
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1  [STACK] void 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/3C
 12365 ;;		On exit  : 3F/3C
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;Total ram usage:        0 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; Hardware stack levels required when called:    3
 12375 ;; This function calls:
 12376 ;;		Nothing
 12377 ;; This function is called by:
 12378 ;;		_SYSTEM_Initialize
 12379 ;; This function uses a reentrant model
 12380 ;;
 12381                           
 12382                           	psect	text68
 12383  00585A                     __ptext68:
 12384                           	opt callstack 0
 12385  00585A                     _DSM_Initialize:
 12386                           	opt callstack 26
 12387                           
 12388                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12389                           
 12390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12391                           ;incstack = 0
 12392  00585A  013C               	movlb	60	; () banked
 12393  00585C  99FA               	bcf	250,4,b	;volatile
 12394                           
 12395                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12396  00585E  81FB               	bsf	251,0,b	;volatile
 12397                           
 12398                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12399  005860  93FB               	bcf	251,1,b	;volatile
 12400                           
 12401                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12402  005862  89FB               	bsf	251,4,b	;volatile
 12403                           
 12404                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12405  005864  9BFB               	bcf	251,5,b	;volatile
 12406                           
 12407                           ; BSR set to: 60
 12408                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12409  005866  0E13               	movlw	19
 12410  005868  6FFC               	movwf	252,b	;volatile
 12411                           
 12412                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12413  00586A  0E0E               	movlw	14
 12414  00586C  6FFE               	movwf	254,b	;volatile
 12415                           
 12416                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12417  00586E  0E04               	movlw	4
 12418  005870  6FFD               	movwf	253,b	;volatile
 12419                           
 12420                           ; BSR set to: 60
 12421                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12422  005872  8FFA               	bsf	250,7,b	;volatile
 12423                           
 12424                           ; BSR set to: 60
 12425                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12426  005874  0012               	return		;funcret
 12427  005876                     __end_of_DSM_Initialize:
 12428                           	opt callstack 0
 12429                           
 12430 ;; *************** function _DMA1_Initialize *****************
 12431 ;; Defined at:
 12432 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1  [STACK] void 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2
 12441 ;; Tracked objects:
 12442 ;;		On entry : 3F/3D
 12443 ;;		On exit  : 3F/3B
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    3
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_SYSTEM_Initialize
 12457 ;; This function uses a reentrant model
 12458 ;;
 12459                           
 12460                           	psect	text69
 12461  004D5C                     __ptext69:
 12462                           	opt callstack 0
 12463  004D5C                     _DMA1_Initialize:
 12464                           	opt callstack 26
 12465                           
 12466                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12467                           
 12468                           ; BSR set to: 60
 12469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12470                           ;incstack = 0
 12471  004D5C  0E00               	movlw	0
 12472  004D5E  013B               	movlb	59	; () banked
 12473  004D60  6FF9               	movwf	249,b	;volatile
 12474  004D62  0E10               	movlw	16
 12475  004D64  6FFA               	movwf	250,b	;volatile
 12476  004D66  0E00               	movlw	0
 12477  004D68  6FFB               	movwf	251,b	;volatile
 12478                           
 12479                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12480  004D6A  0E3D               	movlw	61
 12481  004D6C  6FF1               	movwf	241,b	;volatile
 12482  004D6E  0E11               	movlw	17
 12483  004D70  6FF0               	movwf	240,b	;volatile
 12484                           
 12485                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12486  004D72  0E03               	movlw	3
 12487  004D74  6FFD               	movwf	253,b	;volatile
 12488                           
 12489                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12490  004D76  0E00               	movlw	0
 12491  004D78  6FF8               	movwf	248,b	;volatile
 12492  004D7A  0E01               	movlw	1
 12493  004D7C  6FF7               	movwf	247,b	;volatile
 12494                           
 12495                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12496  004D7E  0E00               	movlw	0
 12497  004D80  6FEF               	movwf	239,b	;volatile
 12498  004D82  0E01               	movlw	1
 12499  004D84  6FEE               	movwf	238,b	;volatile
 12500                           
 12501                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12502  004D86  0E15               	movlw	21
 12503  004D88  6FFF               	movwf	255,b	;volatile
 12504                           
 12505                           ; BSR set to: 59
 12506                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12507  004D8A  6BFE               	clrf	254,b	;volatile
 12508                           
 12509                           ; BSR set to: 59
 12510                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12511  004D8C  0139               	movlb	57	; () banked
 12512  004D8E  93A2               	bcf	162,1,b	;volatile
 12513                           
 12514                           ; BSR set to: 57
 12515                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12516  004D90  91A2               	bcf	162,0,b	;volatile
 12517                           
 12518                           ; BSR set to: 57
 12519                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12520  004D92  97A2               	bcf	162,3,b	;volatile
 12521                           
 12522                           ; BSR set to: 57
 12523                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12524  004D94  95A2               	bcf	162,2,b	;volatile
 12525                           
 12526                           ; BSR set to: 57
 12527                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12528  004D96  8392               	bsf	146,1,b	;volatile
 12529                           
 12530                           ; BSR set to: 57
 12531                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12532  004D98  8192               	bsf	146,0,b	;volatile
 12533                           
 12534                           ; BSR set to: 57
 12535                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12536  004D9A  8792               	bsf	146,3,b	;volatile
 12537                           
 12538                           ; BSR set to: 57
 12539                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12540  004D9C  8592               	bsf	146,2,b	;volatile
 12541                           
 12542                           ; BSR set to: 57
 12543                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12544  004D9E  6BF1               	clrf	241,b	;volatile
 12545                           
 12546                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12547  004DA0  0E01               	movlw	1
 12548  004DA2  6FF2               	movwf	242,b	;volatile
 12549                           
 12550                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12551  004DA4  0E04               	movlw	4
 12552  004DA6  6FF3               	movwf	243,b	;volatile
 12553                           
 12554                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12555  004DA8  0E02               	movlw	2
 12556  004DAA  6FF4               	movwf	244,b	;volatile
 12557                           
 12558                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12559  004DAC  0E03               	movlw	3
 12560  004DAE  6FF7               	movwf	247,b	;volatile
 12561  004DB0  9ED2               	bcf	16338,7,c	;# 
 12562  004DB2  0139               	banksel	14831	;# 
 12563  004DB4  0E55               	movlw	85	;# 
 12564  004DB6  6FEF               	movwf	14831,b	;# 
 12565  004DB8  0EAA               	movlw	170	;# 
 12566  004DBA  6FEF               	movwf	14831,b	;# 
 12567  004DBC  81EF               	bsf	14831,0,b	;# 
 12568  004DBE  8ED2               	bsf	16338,7,c	;# 
 12569                           
 12570                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12571  004DC0  013B               	movlb	59	; () banked
 12572  004DC2  6BFC               	clrf	252,b	;volatile
 12573                           
 12574                           ; BSR set to: 59
 12575                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12576  004DC4  0012               	return		;funcret
 12577  004DC6                     __end_of_DMA1_Initialize:
 12578                           	opt callstack 0
 12579                           
 12580 ;; *************** function _CLKREF_Initialize *****************
 12581 ;; Defined at:
 12582 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;		None
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;		None
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1  [STACK] void 
 12589 ;; Registers used:
 12590 ;;		wreg, status,2
 12591 ;; Tracked objects:
 12592 ;;		On entry : 3F/3B
 12593 ;;		On exit  : 3F/3C
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12600 ;;Total ram usage:        0 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; Hardware stack levels required when called:    3
 12603 ;; This function calls:
 12604 ;;		Nothing
 12605 ;; This function is called by:
 12606 ;;		_SYSTEM_Initialize
 12607 ;; This function uses a reentrant model
 12608 ;;
 12609                           
 12610                           	psect	text70
 12611  005966                     __ptext70:
 12612                           	opt callstack 0
 12613  005966                     _CLKREF_Initialize:
 12614                           	opt callstack 26
 12615                           
 12616                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12617                           
 12618                           ; BSR set to: 59
 12619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12620                           ;incstack = 0
 12621  005966  013C               	movlb	60	; () banked
 12622  005968  6BE6               	clrf	230,b	;volatile
 12623                           
 12624                           ; BSR set to: 60
 12625                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12626  00596A  0E94               	movlw	148
 12627  00596C  6FE5               	movwf	229,b	;volatile
 12628                           
 12629                           ; BSR set to: 60
 12630                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12631  00596E  0012               	return		;funcret
 12632  005970                     __end_of_CLKREF_Initialize:
 12633                           	opt callstack 0
 12634                           
 12635 ;; *************** function _CLC1_Initialize *****************
 12636 ;; Defined at:
 12637 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;		None
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;		None
 12642 ;; Return value:  Size  Location     Type
 12643 ;;                  1  [STACK] void 
 12644 ;; Registers used:
 12645 ;;		wreg, status,2
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/39
 12648 ;;		On exit  : 3F/3C
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12655 ;;Total ram usage:        0 bytes
 12656 ;; Hardware stack levels used:    1
 12657 ;; Hardware stack levels required when called:    3
 12658 ;; This function calls:
 12659 ;;		Nothing
 12660 ;; This function is called by:
 12661 ;;		_SYSTEM_Initialize
 12662 ;; This function uses a reentrant model
 12663 ;;
 12664                           
 12665                           	psect	text71
 12666  0056F8                     __ptext71:
 12667                           	opt callstack 0
 12668  0056F8                     _CLC1_Initialize:
 12669                           	opt callstack 26
 12670                           
 12671                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12672                           
 12673                           ; BSR set to: 60
 12674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12675                           ;incstack = 0
 12676  0056F8  013C               	movlb	60	; () banked
 12677  0056FA  6B75               	clrf	117,b	;volatile
 12678                           
 12679                           ; BSR set to: 60
 12680                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12681  0056FC  0E04               	movlw	4
 12682  0056FE  6F76               	movwf	118,b	;volatile
 12683                           
 12684                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12685  005700  0E04               	movlw	4
 12686  005702  6F77               	movwf	119,b	;volatile
 12687                           
 12688                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12689  005704  0E04               	movlw	4
 12690  005706  6F78               	movwf	120,b	;volatile
 12691                           
 12692                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12693  005708  0E04               	movlw	4
 12694  00570A  6F79               	movwf	121,b	;volatile
 12695                           
 12696                           ; BSR set to: 60
 12697                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12698  00570C  6B7A               	clrf	122,b	;volatile
 12699                           
 12700                           ; BSR set to: 60
 12701                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12702  00570E  6B7B               	clrf	123,b	;volatile
 12703                           
 12704                           ; BSR set to: 60
 12705                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12706  005710  6B7C               	clrf	124,b	;volatile
 12707                           
 12708                           ; BSR set to: 60
 12709                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12710  005712  6B7D               	clrf	125,b	;volatile
 12711                           
 12712                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12713  005714  0E81               	movlw	129
 12714  005716  6F74               	movwf	116,b	;volatile
 12715                           
 12716                           ; BSR set to: 60
 12717                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12718  005718  0012               	return		;funcret
 12719  00571A                     __end_of_CLC1_Initialize:
 12720                           	opt callstack 0
 12721                           
 12722 ;; *************** function _ADCC_Initialize *****************
 12723 ;; Defined at:
 12724 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;		None
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;		None
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  1  [STACK] void 
 12731 ;; Registers used:
 12732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12733 ;; Tracked objects:
 12734 ;;		On entry : 3F/39
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12742 ;;Total ram usage:        0 bytes
 12743 ;; Hardware stack levels used:    1
 12744 ;; Hardware stack levels required when called:    4
 12745 ;; This function calls:
 12746 ;;		_ADCC_SetADIInterruptHandler
 12747 ;; This function is called by:
 12748 ;;		_SYSTEM_Initialize
 12749 ;; This function uses a reentrant model
 12750 ;;
 12751                           
 12752                           	psect	text72
 12753  005046                     __ptext72:
 12754                           	opt callstack 0
 12755  005046                     _ADCC_Initialize:
 12756                           	opt callstack 25
 12757                           
 12758                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12759                           
 12760                           ; BSR set to: 60
 12761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12762                           ;incstack = 0
 12763  005046  013E               	movlb	62	; () banked
 12764  005048  6BDE               	clrf	222,b	;volatile
 12765                           
 12766                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12767  00504A  6BDF               	clrf	223,b	;volatile
 12768                           
 12769                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12770  00504C  6BE0               	clrf	224,b	;volatile
 12771                           
 12772                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12773  00504E  6BE1               	clrf	225,b	;volatile
 12774                           
 12775                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12776  005050  6BE4               	clrf	228,b	;volatile
 12777                           
 12778                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12779  005052  6BE5               	clrf	229,b	;volatile
 12780                           
 12781                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12782  005054  6BEA               	clrf	234,b	;volatile
 12783                           
 12784                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12785  005056  6BEC               	clrf	236,b	;volatile
 12786                           
 12787                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12788  005058  6BF1               	clrf	241,b	;volatile
 12789                           
 12790                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12791  00505A  6BF3               	clrf	243,b	;volatile
 12792                           
 12793                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12794  00505C  6BF4               	clrf	244,b	;volatile
 12795                           
 12796                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12797  00505E  6BF5               	clrf	245,b	;volatile
 12798                           
 12799                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12800  005060  6BF6               	clrf	246,b	;volatile
 12801                           
 12802                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12803  005062  6BF7               	clrf	247,b	;volatile
 12804                           
 12805                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12806  005064  6BF9               	clrf	249,b	;volatile
 12807                           
 12808                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12809  005066  6BFA               	clrf	250,b	;volatile
 12810                           
 12811                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12812  005068  6BFB               	clrf	251,b	;volatile
 12813                           
 12814                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12815  00506A  6BFC               	clrf	252,b	;volatile
 12816                           
 12817                           ; BSR set to: 62
 12818                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12819  00506C  0E02               	movlw	2
 12820  00506E  6FFD               	movwf	253,b	;volatile
 12821                           
 12822                           ; BSR set to: 62
 12823                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12824  005070  6BFE               	clrf	254,b	;volatile
 12825                           
 12826                           ; BSR set to: 62
 12827                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12828  005072  6BFF               	clrf	255,b	;volatile
 12829                           
 12830                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12831  005074  0E94               	movlw	148
 12832  005076  6FF8               	movwf	248,b	;volatile
 12833                           
 12834                           ; BSR set to: 62
 12835                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12836  005078  0139               	movlb	57	; () banked
 12837  00507A  95A1               	bcf	161,2,b	;volatile
 12838                           
 12839                           ; BSR set to: 57
 12840                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12841  00507C  8591               	bsf	145,2,b	;volatile
 12842                           
 12843                           ; BSR set to: 57
 12844                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12845  00507E  0EBC               	movlw	low _ADCC_DefaultInterruptHandler
 12846  005080  6EE6               	movwf	postinc1,c
 12847  005082  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12848  005084  6EE6               	movwf	postinc1,c
 12849  005086  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12850  005088  6EE6               	movwf	postinc1,c
 12851  00508A  EC07  F02B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12852                           
 12853                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12854  00508E  0012               	return		;funcret
 12855  005090                     __end_of_ADCC_Initialize:
 12856                           	opt callstack 0
 12857                           
 12858 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12859 ;; Defined at:
 12860 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12863 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;		None
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  1  [STACK] void 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12870 ;; Tracked objects:
 12871 ;;		On entry : 3F/39
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12879 ;;Total ram usage:        0 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; Hardware stack levels required when called:    3
 12882 ;; This function calls:
 12883 ;;		Nothing
 12884 ;; This function is called by:
 12885 ;;		_ADCC_Initialize
 12886 ;; This function uses a reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text73
 12890  00560E                     __ptext73:
 12891                           	opt callstack 0
 12892  00560E                     _ADCC_SetADIInterruptHandler:
 12893                           	opt callstack 25
 12894                           
 12895                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12896                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12897                           
 12898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12899                           ;incstack = 0
 12900  00560E  50E1               	movf	fsr1l,w,c
 12901  005610  0FFD               	addlw	-3
 12902  005612  6ED9               	movwf	fsr2l,c
 12903  005614  50E2               	movf	fsr1h,w,c
 12904  005616  6EDA               	movwf	fsr2h,c
 12905  005618  0EFF               	movlw	255
 12906  00561A  22DA               	addwfc	fsr2h,f,c
 12907  00561C  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12908  005622  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12909  005628  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12910                           
 12911                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12912  00562E  52E5               	movf	postdec1,f,c
 12913  005630  52E5               	movf	postdec1,f,c
 12914  005632  52E5               	movf	postdec1,f,c
 12915  005634  0012               	return		;funcret
 12916  005636                     __end_of_ADCC_SetADIInterruptHandler:
 12917                           	opt callstack 0
 12918                           
 12919 ;; *************** function _INT0_ISR *****************
 12920 ;; Defined at:
 12921 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;		None
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;		None
 12926 ;; Return value:  Size  Location     Type
 12927 ;;                  1    wreg      void 
 12928 ;; Registers used:
 12929 ;;		wreg, status,2, status,0, pclath, tosl
 12930 ;; Tracked objects:
 12931 ;;		On entry : 0/0
 12932 ;;		On exit  : 0/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12939 ;;Total ram usage:        0 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:    2
 12942 ;; This function calls:
 12943 ;;		_INT0_CallBack
 12944 ;; This function is called by:
 12945 ;;		Interrupt level 2
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text74
 12950  005928                     __ptext74:
 12951                           	opt callstack 0
 12952  005928                     _INT0_ISR:
 12953                           	opt callstack 17
 12954                           
 12955                           ;incstack = 0
 12956  005928  EE13  F150         	lfsr	1,___inthi_sp
 12957                           
 12958                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12959  00592C  0139               	movlb	57	; () banked
 12960  00592E  91A1               	bcf	161,0,b	;volatile
 12961                           
 12962                           ; BSR set to: 57
 12963                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12964  005930  EC8D  F02B         	call	_INT0_CallBack	;wreg free
 12965  005934  0011               	retfie		f
 12966  005936                     __end_of_INT0_ISR:
 12967                           	opt callstack 0
 12968                           
 12969 ;; *************** function _INT0_CallBack *****************
 12970 ;; Defined at:
 12971 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1  [STACK] void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0, pclath, tosl
 12980 ;; Tracked objects:
 12981 ;;		On entry : 3F/39
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:    1
 12992 ;; This function calls:
 12993 ;;		Absolute function
 12994 ;;		_INT0_DefaultInterruptHandler
 12995 ;; This function is called by:
 12996 ;;		_INT0_ISR
 12997 ;; This function uses a reentrant model
 12998 ;;
 12999                           
 13000                           	psect	text75
 13001  00571A                     __ptext75:
 13002                           	opt callstack 0
 13003  00571A                     _INT0_CallBack:
 13004                           	opt callstack 17
 13005                           
 13006                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13007                           
 13008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13009                           ;incstack = 0
 13010  00571A  501F               	movf	_INT0_InterruptHandler,w,c
 13011  00571C  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 13012  00571E  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 13013  005720  B4D8               	btfsc	status,2,c
 13014  005722  0012               	return	
 13015                           
 13016                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13017  005724  D801               	call	u111_48
 13018  005726  0012               	return	
 13019  005728                     u111_48:
 13020  005728  0005               	push	
 13021  00572A  6EFA               	movwf	pclath,c
 13022  00572C  501F               	movf	_INT0_InterruptHandler,w,c
 13023  00572E  6EFD               	movwf	tosl,c
 13024  005730  5020               	movf	_INT0_InterruptHandler+1,w,c
 13025  005732  6EFE               	movwf	tosh,c
 13026  005734  5021               	movf	_INT0_InterruptHandler+2,w,c
 13027  005736  6EFF               	movwf	tosu,c
 13028  005738  50FA               	movf	pclath,w,c
 13029  00573A  0012               	return		;indir
 13030  00573C                     __end_of_INT0_CallBack:
 13031                           	opt callstack 0
 13032                           
 13033 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13034 ;; Defined at:
 13035 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;		None
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;		None
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  1  [STACK] void 
 13042 ;; Registers used:
 13043 ;;		None
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/39
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13053 ;;Total ram usage:        0 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; This function calls:
 13056 ;;		Nothing
 13057 ;; This function is called by:
 13058 ;;		_EXT_INT_Initialize
 13059 ;;		_INT0_CallBack
 13060 ;; This function uses a reentrant model
 13061 ;;
 13062                           
 13063                           	psect	text76
 13064  0059B6                     __ptext76:
 13065                           	opt callstack 0
 13066  0059B6                     _INT0_DefaultInterruptHandler:
 13067                           	opt callstack 17
 13068                           
 13069                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13070                           
 13071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13072                           ;incstack = 0
 13073  0059B6  0012               	return		;funcret
 13074  0059B8                     __end_of_INT0_DefaultInterruptHandler:
 13075                           	opt callstack 0
 13076                           
 13077 ;; *************** function _INT1_ISR *****************
 13078 ;; Defined at:
 13079 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;		None
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      void 
 13086 ;; Registers used:
 13087 ;;		wreg, status,2, status,0, pclath, tosl
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13097 ;;Total ram usage:        0 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    2
 13100 ;; This function calls:
 13101 ;;		_INT1_CallBack
 13102 ;; This function is called by:
 13103 ;;		Interrupt level 2
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           	psect	text77
 13108  005938                     __ptext77:
 13109                           	opt callstack 0
 13110  005938                     _INT1_ISR:
 13111                           	opt callstack 17
 13112                           
 13113                           ;incstack = 0
 13114  005938  EE13  F150         	lfsr	1,___inthi_sp
 13115                           
 13116                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13117  00593C  0139               	movlb	57	; () banked
 13118  00593E  91A5               	bcf	165,0,b	;volatile
 13119                           
 13120                           ; BSR set to: 57
 13121                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13122  005940  EC9E  F02B         	call	_INT1_CallBack	;wreg free
 13123  005944  0011               	retfie		f
 13124  005946                     __end_of_INT1_ISR:
 13125                           	opt callstack 0
 13126                           
 13127 ;; *************** function _INT1_CallBack *****************
 13128 ;; Defined at:
 13129 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;		None
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;		None
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  1  [STACK] void 
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0, pclath, tosl
 13138 ;; Tracked objects:
 13139 ;;		On entry : 3F/39
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13147 ;;Total ram usage:        0 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:    1
 13150 ;; This function calls:
 13151 ;;		Absolute function
 13152 ;;		_INT1_DefaultInterruptHandler
 13153 ;; This function is called by:
 13154 ;;		_INT1_ISR
 13155 ;; This function uses a reentrant model
 13156 ;;
 13157                           
 13158                           	psect	text78
 13159  00573C                     __ptext78:
 13160                           	opt callstack 0
 13161  00573C                     _INT1_CallBack:
 13162                           	opt callstack 17
 13163                           
 13164                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13165                           
 13166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13167                           ;incstack = 0
 13168  00573C  501C               	movf	_INT1_InterruptHandler,w,c
 13169  00573E  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 13170  005740  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 13171  005742  B4D8               	btfsc	status,2,c
 13172  005744  0012               	return	
 13173                           
 13174                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13175  005746  D801               	call	u113_48
 13176  005748  0012               	return	
 13177  00574A                     u113_48:
 13178  00574A  0005               	push	
 13179  00574C  6EFA               	movwf	pclath,c
 13180  00574E  501C               	movf	_INT1_InterruptHandler,w,c
 13181  005750  6EFD               	movwf	tosl,c
 13182  005752  501D               	movf	_INT1_InterruptHandler+1,w,c
 13183  005754  6EFE               	movwf	tosh,c
 13184  005756  501E               	movf	_INT1_InterruptHandler+2,w,c
 13185  005758  6EFF               	movwf	tosu,c
 13186  00575A  50FA               	movf	pclath,w,c
 13187  00575C  0012               	return		;indir
 13188  00575E                     __end_of_INT1_CallBack:
 13189                           	opt callstack 0
 13190                           
 13191 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13192 ;; Defined at:
 13193 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1  [STACK] void 
 13200 ;; Registers used:
 13201 ;;		None
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/39
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;Total ram usage:        0 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; This function calls:
 13214 ;;		Nothing
 13215 ;; This function is called by:
 13216 ;;		_EXT_INT_Initialize
 13217 ;;		_INT1_CallBack
 13218 ;; This function uses a reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text79
 13222  0059B8                     __ptext79:
 13223                           	opt callstack 0
 13224  0059B8                     _INT1_DefaultInterruptHandler:
 13225                           	opt callstack 17
 13226                           
 13227                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13228                           
 13229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13230                           ;incstack = 0
 13231  0059B8  0012               	return		;funcret
 13232  0059BA                     __end_of_INT1_DefaultInterruptHandler:
 13233                           	opt callstack 0
 13234                           
 13235 ;; *************** function _INT2_ISR *****************
 13236 ;; Defined at:
 13237 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;		None
 13240 ;; Auto vars:     Size  Location     Type
 13241 ;;		None
 13242 ;; Return value:  Size  Location     Type
 13243 ;;                  1    wreg      void 
 13244 ;; Registers used:
 13245 ;;		wreg, status,2, status,0, pclath, tosl
 13246 ;; Tracked objects:
 13247 ;;		On entry : 0/0
 13248 ;;		On exit  : 0/0
 13249 ;;		Unchanged: 0/0
 13250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13255 ;;Total ram usage:        0 bytes
 13256 ;; Hardware stack levels used:    1
 13257 ;; Hardware stack levels required when called:    2
 13258 ;; This function calls:
 13259 ;;		_INT2_CallBack
 13260 ;; This function is called by:
 13261 ;;		Interrupt level 2
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           	psect	text80
 13266  005948                     __ptext80:
 13267                           	opt callstack 0
 13268  005948                     _INT2_ISR:
 13269                           	opt callstack 17
 13270                           
 13271                           ;incstack = 0
 13272  005948  EE13  F150         	lfsr	1,___inthi_sp
 13273                           
 13274                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13275  00594C  0139               	movlb	57	; () banked
 13276  00594E  9BA7               	bcf	167,5,b	;volatile
 13277                           
 13278                           ; BSR set to: 57
 13279                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13280  005950  ECAF  F02B         	call	_INT2_CallBack	;wreg free
 13281  005954  0011               	retfie		f
 13282  005956                     __end_of_INT2_ISR:
 13283                           	opt callstack 0
 13284                           
 13285 ;; *************** function _INT2_CallBack *****************
 13286 ;; Defined at:
 13287 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;		None
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1  [STACK] void 
 13294 ;; Registers used:
 13295 ;;		wreg, status,2, status,0, pclath, tosl
 13296 ;; Tracked objects:
 13297 ;;		On entry : 3F/39
 13298 ;;		On exit  : 0/0
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;Total ram usage:        0 bytes
 13306 ;; Hardware stack levels used:    1
 13307 ;; Hardware stack levels required when called:    1
 13308 ;; This function calls:
 13309 ;;		Absolute function
 13310 ;;		_INT2_DefaultInterruptHandler
 13311 ;; This function is called by:
 13312 ;;		_INT2_ISR
 13313 ;; This function uses a reentrant model
 13314 ;;
 13315                           
 13316                           	psect	text81
 13317  00575E                     __ptext81:
 13318                           	opt callstack 0
 13319  00575E                     _INT2_CallBack:
 13320                           	opt callstack 17
 13321                           
 13322                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13323                           
 13324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13325                           ;incstack = 0
 13326  00575E  5019               	movf	_INT2_InterruptHandler,w,c
 13327  005760  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 13328  005762  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 13329  005764  B4D8               	btfsc	status,2,c
 13330  005766  0012               	return	
 13331                           
 13332                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13333  005768  D801               	call	u115_48
 13334  00576A  0012               	return	
 13335  00576C                     u115_48:
 13336  00576C  0005               	push	
 13337  00576E  6EFA               	movwf	pclath,c
 13338  005770  5019               	movf	_INT2_InterruptHandler,w,c
 13339  005772  6EFD               	movwf	tosl,c
 13340  005774  501A               	movf	_INT2_InterruptHandler+1,w,c
 13341  005776  6EFE               	movwf	tosh,c
 13342  005778  501B               	movf	_INT2_InterruptHandler+2,w,c
 13343  00577A  6EFF               	movwf	tosu,c
 13344  00577C  50FA               	movf	pclath,w,c
 13345  00577E  0012               	return		;indir
 13346  005780                     __end_of_INT2_CallBack:
 13347                           	opt callstack 0
 13348                           
 13349 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13350 ;; Defined at:
 13351 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1  [STACK] void 
 13358 ;; Registers used:
 13359 ;;		None
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/39
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_EXT_INT_Initialize
 13375 ;;		_INT2_CallBack
 13376 ;; This function uses a reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text82
 13380  0059BA                     __ptext82:
 13381                           	opt callstack 0
 13382  0059BA                     _INT2_DefaultInterruptHandler:
 13383                           	opt callstack 17
 13384                           
 13385                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13386                           
 13387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13388                           ;incstack = 0
 13389  0059BA  0012               	return		;funcret
 13390  0059BC                     __end_of_INT2_DefaultInterruptHandler:
 13391                           	opt callstack 0
 13392                           
 13393 ;; *************** function _Default_ISR *****************
 13394 ;; Defined at:
 13395 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;		None
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;		None
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      void 
 13402 ;; Registers used:
 13403 ;;		None
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13413 ;;Total ram usage:        0 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; This function calls:
 13416 ;;		Nothing
 13417 ;; This function is called by:
 13418 ;;		Interrupt level 2
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text83
 13423  0059B0                     __ptext83:
 13424                           	opt callstack 0
 13425  0059B0                     _Default_ISR:
 13426                           	opt callstack 19
 13427                           
 13428                           ;incstack = 0
 13429  0059B0  EE13  F150         	lfsr	1,___inthi_sp
 13430  0059B4  0011               	retfie		f
 13431  0059B6                     __end_of_Default_ISR:
 13432                           	opt callstack 0
 13433                           
 13434 ;; *************** function _ADCC_ISR *****************
 13435 ;; Defined at:
 13436 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;		None
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;		None
 13441 ;; Return value:  Size  Location     Type
 13442 ;;                  1    wreg      void 
 13443 ;; Registers used:
 13444 ;;		wreg, status,2, status,0, pclath, tosl
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13454 ;;Total ram usage:        0 bytes
 13455 ;; Hardware stack levels used:    1
 13456 ;; Hardware stack levels required when called:    1
 13457 ;; This function calls:
 13458 ;;		Absolute function
 13459 ;;		_ADCC_DefaultInterruptHandler
 13460 ;; This function is called by:
 13461 ;;		Interrupt level 2
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text84
 13466  0053B4                     __ptext84:
 13467                           	opt callstack 0
 13468  0053B4                     _ADCC_ISR:
 13469                           	opt callstack 18
 13470                           
 13471                           ;incstack = 0
 13472  0053B4  EE13  F150         	lfsr	1,___inthi_sp
 13473                           
 13474                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13475  0053B8  0139               	movlb	57	; () banked
 13476  0053BA  95A1               	bcf	161,2,b	;volatile
 13477                           
 13478                           ; BSR set to: 57
 13479                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13480  0053BC  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13481  0053BE  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13482  0053C0  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13483  0053C2  B4D8               	btfsc	status,2,c
 13484  0053C4  0011               	retfie		f
 13485                           
 13486                           ; BSR set to: 57
 13487                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13488  0053C6  D801               	call	i2u156_48
 13489  0053C8  0011               	retfie		f
 13490  0053CA                     i2u156_48:
 13491  0053CA  0005               	push	
 13492  0053CC  6EFA               	movwf	pclath,c
 13493  0053CE  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13494  0053D0  6EFD               	movwf	tosl,c
 13495  0053D2  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13496  0053D4  6EFE               	movwf	tosh,c
 13497  0053D6  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13498  0053D8  6EFF               	movwf	tosu,c
 13499  0053DA  50FA               	movf	pclath,w,c
 13500  0053DC  0012               	return		;indir
 13501  0053DE                     __end_of_ADCC_ISR:
 13502                           	opt callstack 0
 13503                           
 13504 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13505 ;; Defined at:
 13506 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;		None
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;		None
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1  [STACK] void 
 13513 ;; Registers used:
 13514 ;;		None
 13515 ;; Tracked objects:
 13516 ;;		On entry : 3F/39
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13524 ;;Total ram usage:        0 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; This function calls:
 13527 ;;		Nothing
 13528 ;; This function is called by:
 13529 ;;		_ADCC_Initialize
 13530 ;;		_ADCC_ISR
 13531 ;; This function uses a reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text85
 13535  0059BC                     __ptext85:
 13536                           	opt callstack 0
 13537  0059BC                     _ADCC_DefaultInterruptHandler:
 13538                           	opt callstack 18
 13539                           
 13540                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13541                           
 13542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13543                           ;incstack = 0
 13544  0059BC  0012               	return		;funcret
 13545  0059BE                     __end_of_ADCC_DefaultInterruptHandler:
 13546                           	opt callstack 0
 13547                           
 13548 ;; *************** function _UART1_tx_vect_isr *****************
 13549 ;; Defined at:
 13550 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;		None
 13553 ;; Auto vars:     Size  Location     Type
 13554 ;;		None
 13555 ;; Return value:  Size  Location     Type
 13556 ;;                  1    wreg      void 
 13557 ;; Registers used:
 13558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13559 ;; Tracked objects:
 13560 ;;		On entry : 0/0
 13561 ;;		On exit  : 0/0
 13562 ;;		Unchanged: 0/0
 13563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13568 ;;Total ram usage:        0 bytes
 13569 ;; Hardware stack levels used:    1
 13570 ;; Hardware stack levels required when called:    1
 13571 ;; This function calls:
 13572 ;;		Absolute function
 13573 ;;		_UART1_Transmit_ISR
 13574 ;; This function is called by:
 13575 ;;		Interrupt level 2
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	text86
 13580  005638                     __ptext86:
 13581                           	opt callstack 0
 13582  005638                     _UART1_tx_vect_isr:
 13583                           	opt callstack 18
 13584                           
 13585                           ;incstack = 0
 13586  005638  EE13  F150         	lfsr	1,___inthi_sp
 13587                           
 13588                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13589  00563C  500D               	movf	_UART1_TxInterruptHandler,w,c
 13590  00563E  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13591  005640  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13592  005642  B4D8               	btfsc	status,2,c
 13593  005644  0011               	retfie		f
 13594                           
 13595                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13596  005646  D801               	call	i2u315_48
 13597  005648  0011               	retfie		f
 13598  00564A                     i2u315_48:
 13599  00564A  0005               	push	
 13600  00564C  6EFA               	movwf	pclath,c
 13601  00564E  500D               	movf	_UART1_TxInterruptHandler,w,c
 13602  005650  6EFD               	movwf	tosl,c
 13603  005652  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 13604  005654  6EFE               	movwf	tosh,c
 13605  005656  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 13606  005658  6EFF               	movwf	tosu,c
 13607  00565A  50FA               	movf	pclath,w,c
 13608  00565C  0012               	return		;indir
 13609  00565E                     __end_of_UART1_tx_vect_isr:
 13610                           	opt callstack 0
 13611                           
 13612 ;; *************** function _UART1_Transmit_ISR *****************
 13613 ;; Defined at:
 13614 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1  [STACK] void 
 13621 ;; Registers used:
 13622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 3B/39
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; This function calls:
 13635 ;;		Nothing
 13636 ;; This function is called by:
 13637 ;;		_UART1_Initialize
 13638 ;;		_UART1_tx_vect_isr
 13639 ;; This function uses a reentrant model
 13640 ;;
 13641                           
 13642                           	psect	text87
 13643  005306                     __ptext87:
 13644                           	opt callstack 0
 13645  005306                     _UART1_Transmit_ISR:
 13646                           	opt callstack 18
 13647                           
 13648                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13649                           
 13650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13651                           ;incstack = 0
 13652  005306  0E40               	movlw	64
 13653  005308  603B               	cpfslt	_uart1TxBufferRemaining,c
 13654  00530A  D010               	goto	l597
 13655                           
 13656                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13657  00530C  0EC0               	movlw	low _uart1TxBuffer
 13658  00530E  243C               	addwf	_uart1TxTail,w,c	;volatile
 13659  005310  6ED9               	movwf	fsr2l,c
 13660  005312  6ADA               	clrf	fsr2h,c
 13661  005314  0E02               	movlw	high _uart1TxBuffer
 13662  005316  22DA               	addwfc	fsr2h,f,c
 13663  005318  50DF               	movf	indf2,w,c
 13664  00531A  013D               	movlb	61	; () banked
 13665  00531C  6FEA               	movwf	234,b	;volatile
 13666                           
 13667                           ; BSR set to: 61
 13668  00531E  2A3C               	incf	_uart1TxTail,f,c	;volatile
 13669                           
 13670                           ; BSR set to: 61
 13671                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13672  005320  0E3F               	movlw	63
 13673  005322  643C               	cpfsgt	_uart1TxTail,c
 13674  005324  D001               	goto	l5538
 13675                           
 13676                           ; BSR set to: 61
 13677                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13678  005326  6A3C               	clrf	_uart1TxTail,c	;volatile
 13679  005328                     l5538:
 13680                           
 13681                           ; BSR set to: 61
 13682                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13683  005328  2A3B               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13684                           
 13685                           ;mcc_generated_files/uart1.c: 220:  } else {
 13686  00532A  0012               	return	
 13687  00532C                     l597:
 13688                           
 13689                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13690  00532C  0139               	movlb	57	; () banked
 13691  00532E  9993               	bcf	147,4,b	;volatile
 13692                           
 13693                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13694  005330  0012               	return		;funcret
 13695  005332                     __end_of_UART1_Transmit_ISR:
 13696                           	opt callstack 0
 13697                           
 13698 ;; *************** function _UART1_rx_vect_isr *****************
 13699 ;; Defined at:
 13700 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;		None
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;		None
 13705 ;; Return value:  Size  Location     Type
 13706 ;;                  1    wreg      void 
 13707 ;; Registers used:
 13708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13709 ;; Tracked objects:
 13710 ;;		On entry : 0/0
 13711 ;;		On exit  : 0/0
 13712 ;;		Unchanged: 0/0
 13713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13718 ;;Total ram usage:        0 bytes
 13719 ;; Hardware stack levels used:    1
 13720 ;; Hardware stack levels required when called:    1
 13721 ;; This function calls:
 13722 ;;		Absolute function
 13723 ;;		_UART1_Receive_ISR
 13724 ;; This function is called by:
 13725 ;;		Interrupt level 2
 13726 ;; This function uses a non-reentrant model
 13727 ;;
 13728                           
 13729                           	psect	text88
 13730  005660                     __ptext88:
 13731                           	opt callstack 0
 13732  005660                     _UART1_rx_vect_isr:
 13733                           	opt callstack 18
 13734                           
 13735                           ;incstack = 0
 13736  005660  EE13  F150         	lfsr	1,___inthi_sp
 13737                           
 13738                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13739  005664  5010               	movf	_UART1_RxInterruptHandler,w,c
 13740  005666  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13741  005668  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13742  00566A  B4D8               	btfsc	status,2,c
 13743  00566C  0011               	retfie		f
 13744                           
 13745                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13746  00566E  D801               	call	i2u317_48
 13747  005670  0011               	retfie		f
 13748  005672                     i2u317_48:
 13749  005672  0005               	push	
 13750  005674  6EFA               	movwf	pclath,c
 13751  005676  5010               	movf	_UART1_RxInterruptHandler,w,c
 13752  005678  6EFD               	movwf	tosl,c
 13753  00567A  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 13754  00567C  6EFE               	movwf	tosh,c
 13755  00567E  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 13756  005680  6EFF               	movwf	tosu,c
 13757  005682  50FA               	movf	pclath,w,c
 13758  005684  0012               	return		;indir
 13759  005686                     __end_of_UART1_rx_vect_isr:
 13760                           	opt callstack 0
 13761                           
 13762 ;; *************** function _UART1_Receive_ISR *****************
 13763 ;; Defined at:
 13764 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1  [STACK] void 
 13771 ;; Registers used:
 13772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used:    1
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;;		_UART1_Initialize
 13788 ;;		_UART1_rx_vect_isr
 13789 ;; This function uses a reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text89
 13793  0057C4                     __ptext89:
 13794                           	opt callstack 0
 13795  0057C4                     _UART1_Receive_ISR:
 13796                           	opt callstack 18
 13797                           
 13798                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13799                           
 13800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13801                           ;incstack = 0
 13802  0057C4  0E80               	movlw	low _uart1RxBuffer
 13803  0057C6  243A               	addwf	_uart1RxHead,w,c	;volatile
 13804  0057C8  6ED9               	movwf	fsr2l,c
 13805  0057CA  6ADA               	clrf	fsr2h,c
 13806  0057CC  0E02               	movlw	high _uart1RxBuffer
 13807  0057CE  22DA               	addwfc	fsr2h,f,c
 13808  0057D0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13809  0057D6  2A3A               	incf	_uart1RxHead,f,c	;volatile
 13810                           
 13811                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13812  0057D8  0E3F               	movlw	63
 13813  0057DA  643A               	cpfsgt	_uart1RxHead,c
 13814  0057DC  D001               	goto	l5548
 13815                           
 13816                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13817  0057DE  6A3A               	clrf	_uart1RxHead,c	;volatile
 13818  0057E0                     l5548:
 13819                           
 13820                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13821  0057E0  2A38               	incf	_uart1RxCount,f,c	;volatile
 13822                           
 13823                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13824  0057E2  0012               	return		;funcret
 13825  0057E4                     __end_of_UART1_Receive_ISR:
 13826                           	opt callstack 0
 13827                           
 13828 ;; *************** function _UART2_tx_vect_isr *****************
 13829 ;; Defined at:
 13830 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;		None
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;Total ram usage:        0 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:    1
 13851 ;; This function calls:
 13852 ;;		Absolute function
 13853 ;;		_UART2_Transmit_ISR
 13854 ;; This function is called by:
 13855 ;;		Interrupt level 2
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text90
 13860  005688                     __ptext90:
 13861                           	opt callstack 0
 13862  005688                     _UART2_tx_vect_isr:
 13863                           	opt callstack 18
 13864                           
 13865                           ;incstack = 0
 13866  005688  EE13  F150         	lfsr	1,___inthi_sp
 13867                           
 13868                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13869  00568C  5013               	movf	_UART2_TxInterruptHandler,w,c
 13870  00568E  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13871  005690  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13872  005692  B4D8               	btfsc	status,2,c
 13873  005694  0011               	retfie		f
 13874                           
 13875                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13876  005696  D801               	call	i2u319_48
 13877  005698  0011               	retfie		f
 13878  00569A                     i2u319_48:
 13879  00569A  0005               	push	
 13880  00569C  6EFA               	movwf	pclath,c
 13881  00569E  5013               	movf	_UART2_TxInterruptHandler,w,c
 13882  0056A0  6EFD               	movwf	tosl,c
 13883  0056A2  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 13884  0056A4  6EFE               	movwf	tosh,c
 13885  0056A6  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 13886  0056A8  6EFF               	movwf	tosu,c
 13887  0056AA  50FA               	movf	pclath,w,c
 13888  0056AC  0012               	return		;indir
 13889  0056AE                     __end_of_UART2_tx_vect_isr:
 13890                           	opt callstack 0
 13891                           
 13892 ;; *************** function _UART2_Transmit_ISR *****************
 13893 ;; Defined at:
 13894 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;		None
 13897 ;; Auto vars:     Size  Location     Type
 13898 ;;		None
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  1  [STACK] void 
 13901 ;; Registers used:
 13902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 3B/39
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13912 ;;Total ram usage:        0 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; This function calls:
 13915 ;;		Nothing
 13916 ;; This function is called by:
 13917 ;;		_UART2_Initialize
 13918 ;;		_UART2_tx_vect_isr
 13919 ;; This function uses a reentrant model
 13920 ;;
 13921                           
 13922                           	psect	text91
 13923  005332                     __ptext91:
 13924                           	opt callstack 0
 13925  005332                     _UART2_Transmit_ISR:
 13926                           	opt callstack 18
 13927                           
 13928                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13929                           
 13930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13931                           ;incstack = 0
 13932  005332  0E40               	movlw	64
 13933  005334  6035               	cpfslt	_uart2TxBufferRemaining,c
 13934  005336  D010               	goto	l717
 13935                           
 13936                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13937  005338  0E40               	movlw	low _uart2TxBuffer
 13938  00533A  2436               	addwf	_uart2TxTail,w,c	;volatile
 13939  00533C  6ED9               	movwf	fsr2l,c
 13940  00533E  6ADA               	clrf	fsr2h,c
 13941  005340  0E02               	movlw	high _uart2TxBuffer
 13942  005342  22DA               	addwfc	fsr2h,f,c
 13943  005344  50DF               	movf	indf2,w,c
 13944  005346  013D               	movlb	61	; () banked
 13945  005348  6FD2               	movwf	210,b	;volatile
 13946                           
 13947                           ; BSR set to: 61
 13948  00534A  2A36               	incf	_uart2TxTail,f,c	;volatile
 13949                           
 13950                           ; BSR set to: 61
 13951                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13952  00534C  0E3F               	movlw	63
 13953  00534E  6436               	cpfsgt	_uart2TxTail,c
 13954  005350  D001               	goto	l5560
 13955                           
 13956                           ; BSR set to: 61
 13957                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13958  005352  6A36               	clrf	_uart2TxTail,c	;volatile
 13959  005354                     l5560:
 13960                           
 13961                           ; BSR set to: 61
 13962                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13963  005354  2A35               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13964                           
 13965                           ;mcc_generated_files/uart2.c: 224:     }
 13966  005356  0012               	return	
 13967  005358                     l717:
 13968                           
 13969                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13970  005358  0139               	movlb	57	; () banked
 13971  00535A  9796               	bcf	150,3,b	;volatile
 13972                           
 13973                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13974  00535C  0012               	return		;funcret
 13975  00535E                     __end_of_UART2_Transmit_ISR:
 13976                           	opt callstack 0
 13977                           
 13978 ;; *************** function _UART2_rx_vect_isr *****************
 13979 ;; Defined at:
 13980 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    1
 14001 ;; This function calls:
 14002 ;;		Absolute function
 14003 ;;		_UART2_Receive_ISR
 14004 ;; This function is called by:
 14005 ;;		Interrupt level 2
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           	psect	text92
 14010  0056B0                     __ptext92:
 14011                           	opt callstack 0
 14012  0056B0                     _UART2_rx_vect_isr:
 14013                           	opt callstack 18
 14014                           
 14015                           ;incstack = 0
 14016  0056B0  EE13  F150         	lfsr	1,___inthi_sp
 14017                           
 14018                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14019  0056B4  5016               	movf	_UART2_RxInterruptHandler,w,c
 14020  0056B6  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14021  0056B8  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14022  0056BA  B4D8               	btfsc	status,2,c
 14023  0056BC  0011               	retfie		f
 14024                           
 14025                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14026  0056BE  D801               	call	i2u321_48
 14027  0056C0  0011               	retfie		f
 14028  0056C2                     i2u321_48:
 14029  0056C2  0005               	push	
 14030  0056C4  6EFA               	movwf	pclath,c
 14031  0056C6  5016               	movf	_UART2_RxInterruptHandler,w,c
 14032  0056C8  6EFD               	movwf	tosl,c
 14033  0056CA  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 14034  0056CC  6EFE               	movwf	tosh,c
 14035  0056CE  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 14036  0056D0  6EFF               	movwf	tosu,c
 14037  0056D2  50FA               	movf	pclath,w,c
 14038  0056D4  0012               	return		;indir
 14039  0056D6                     __end_of_UART2_rx_vect_isr:
 14040                           	opt callstack 0
 14041                           
 14042 ;; *************** function _UART2_Receive_ISR *****************
 14043 ;; Defined at:
 14044 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1  [STACK] void 
 14051 ;; Registers used:
 14052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; This function calls:
 14065 ;;		Nothing
 14066 ;; This function is called by:
 14067 ;;		_UART2_Initialize
 14068 ;;		_UART2_rx_vect_isr
 14069 ;; This function uses a reentrant model
 14070 ;;
 14071                           
 14072                           	psect	text93
 14073  0057E4                     __ptext93:
 14074                           	opt callstack 0
 14075  0057E4                     _UART2_Receive_ISR:
 14076                           	opt callstack 18
 14077                           
 14078                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14079                           
 14080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14081                           ;incstack = 0
 14082  0057E4  0E00               	movlw	low _uart2RxBuffer
 14083  0057E6  2434               	addwf	_uart2RxHead,w,c	;volatile
 14084  0057E8  6ED9               	movwf	fsr2l,c
 14085  0057EA  6ADA               	clrf	fsr2h,c
 14086  0057EC  0E02               	movlw	high _uart2RxBuffer
 14087  0057EE  22DA               	addwfc	fsr2h,f,c
 14088  0057F0  006F F743 FFDF     	movff	15824,indf2	;volatile
 14089  0057F6  2A34               	incf	_uart2RxHead,f,c	;volatile
 14090                           
 14091                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14092  0057F8  0E3F               	movlw	63
 14093  0057FA  6434               	cpfsgt	_uart2RxHead,c
 14094  0057FC  D001               	goto	l5570
 14095                           
 14096                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14097  0057FE  6A34               	clrf	_uart2RxHead,c	;volatile
 14098  005800                     l5570:
 14099                           
 14100                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14101  005800  2A32               	incf	_uart2RxCount,f,c	;volatile
 14102                           
 14103                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14104  005802  0012               	return		;funcret
 14105  005804                     __end_of_UART2_Receive_ISR:
 14106                           	opt callstack 0
 14107                           
 14108 ;; *************** function _TMR6_ISR *****************
 14109 ;; Defined at:
 14110 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;		None
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;		None
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      void 
 14117 ;; Registers used:
 14118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14128 ;;Total ram usage:        1 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:    2
 14131 ;; This function calls:
 14132 ;;		_TMR6_CallBack
 14133 ;; This function is called by:
 14134 ;;		Interrupt level 2
 14135 ;; This function uses a non-reentrant model
 14136 ;;
 14137                           
 14138                           	psect	text94
 14139  005890                     __ptext94:
 14140                           	opt callstack 0
 14141  005890                     _TMR6_ISR:
 14142                           	opt callstack 17
 14143                           
 14144                           ;incstack = 0
 14145  005890  0060  F0F8  F05F   	movff	btemp,??_TMR6_ISR
 14146  005896  EE13  F150         	lfsr	1,___inthi_sp
 14147                           
 14148                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14149  00589A  0139               	movlb	57	; () banked
 14150  00589C  91A9               	bcf	169,0,b	;volatile
 14151                           
 14152                           ; BSR set to: 57
 14153                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14154  00589E  ECC0  F02B         	call	_TMR6_CallBack	;wreg free
 14155  0058A2  0060  F17C  F03E   	movff	??_TMR6_ISR,btemp
 14156  0058A8  0011               	retfie		f
 14157  0058AA                     __end_of_TMR6_ISR:
 14158                           	opt callstack 0
 14159                           
 14160 ;; *************** function _TMR6_CallBack *****************
 14161 ;; Defined at:
 14162 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;		None
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1  [STACK] void 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14171 ;; Tracked objects:
 14172 ;;		On entry : 3F/39
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14180 ;;Total ram usage:        0 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    1
 14183 ;; This function calls:
 14184 ;;		Absolute function
 14185 ;;		_TMR6_DefaultInterruptHandler
 14186 ;; This function is called by:
 14187 ;;		_TMR6_ISR
 14188 ;; This function uses a reentrant model
 14189 ;;
 14190                           
 14191                           	psect	text95
 14192  005780                     __ptext95:
 14193                           	opt callstack 0
 14194  005780                     _TMR6_CallBack:
 14195                           	opt callstack 17
 14196                           
 14197                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14198                           
 14199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14200                           ;incstack = 0
 14201  005780  5007               	movf	_TMR6_InterruptHandler,w,c
 14202  005782  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 14203  005784  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 14204  005786  B4D8               	btfsc	status,2,c
 14205  005788  0012               	return	
 14206                           
 14207                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14208  00578A  D801               	call	u285_48
 14209  00578C  0012               	return	
 14210  00578E                     u285_48:
 14211  00578E  0005               	push	
 14212  005790  6EFA               	movwf	pclath,c
 14213  005792  5007               	movf	_TMR6_InterruptHandler,w,c
 14214  005794  6EFD               	movwf	tosl,c
 14215  005796  5008               	movf	_TMR6_InterruptHandler+1,w,c
 14216  005798  6EFE               	movwf	tosh,c
 14217  00579A  5009               	movf	_TMR6_InterruptHandler+2,w,c
 14218  00579C  6EFF               	movwf	tosu,c
 14219  00579E  50FA               	movf	pclath,w,c
 14220  0057A0  0012               	return		;indir
 14221  0057A2                     __end_of_TMR6_CallBack:
 14222                           	opt callstack 0
 14223                           
 14224 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14225 ;; Defined at:
 14226 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;		None
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  i               1  [STACK] unsigned char 
 14231 ;; Return value:  Size  Location     Type
 14232 ;;                  1  [STACK] void 
 14233 ;; Registers used:
 14234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14235 ;; Tracked objects:
 14236 ;;		On entry : 0/39
 14237 ;;		On exit  : 0/0
 14238 ;;		Unchanged: 0/0
 14239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;Total ram usage:        0 bytes
 14245 ;; Hardware stack levels used:    1
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		_TMR6_Initialize
 14250 ;;		_TMR6_CallBack
 14251 ;; This function uses a reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text96
 14255  00511C                     __ptext96:
 14256                           	opt callstack 0
 14257  00511C                     _TMR6_DefaultInterruptHandler:
 14258                           	opt callstack 0
 14259                           
 14260                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14261  00511C  52E6               	movf	postinc1,f,c
 14262                           
 14263                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14264                           ;stkvar	_i @ sp[(-1)+0]
 14265                           
 14266                           ;incstack = 0
 14267  00511E  0EFF               	movlw	-1
 14268  005120  6AE3               	clrf	plusw1,c
 14269  005122                     l5242:
 14270                           
 14271                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14272                           ;stkvar	_i @ sp[(-1)+0]
 14273  005122  0EFF               	movlw	-1
 14274  005124  50E3               	movf	plusw1,w,c
 14275  005126  0D02               	mullw	2
 14276  005128  50F3               	movf	prodl,w,c
 14277  00512A  0F79               	addlw	low _tickCount
 14278  00512C  6ED9               	movwf	fsr2l,c
 14279  00512E  6ADA               	clrf	fsr2h,c
 14280  005130  50DE               	movf	postinc2,w,c
 14281  005132  10DE               	iorwf	postinc2,w,c
 14282  005134  B4D8               	btfsc	status,2,c
 14283  005136  D00A               	goto	l5246
 14284                           
 14285                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14286                           ;stkvar	_i @ sp[(-1)+0]
 14287  005138  0EFF               	movlw	-1
 14288  00513A  50E3               	movf	plusw1,w,c
 14289  00513C  0D02               	mullw	2
 14290  00513E  50F3               	movf	prodl,w,c
 14291  005140  0F79               	addlw	low _tickCount
 14292  005142  6ED9               	movwf	fsr2l,c
 14293  005144  6ADA               	clrf	fsr2h,c
 14294  005146  06DE               	decf	postinc2,f,c
 14295  005148  0E00               	movlw	0
 14296  00514A  5ADD               	subwfb	postdec2,f,c
 14297  00514C                     l5246:
 14298                           
 14299                           ;mcc_generated_files/tmr6.c: 207:  }
 14300                           ;stkvar	_i @ sp[(-1)+0]
 14301  00514C  0EFF               	movlw	-1
 14302  00514E  2AE3               	incf	plusw1,f,c
 14303                           
 14304                           ;stkvar	_i @ sp[(-1)+0]
 14305  005150  0EFF               	movlw	-1
 14306  005152  006F FF8C  F03E    	movff	plusw1,btemp
 14307  005158  0E05               	movlw	5
 14308  00515A  643E               	cpfsgt	btemp,c
 14309  00515C  D7E2               	goto	l5242
 14310                           
 14311                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14312  00515E  52E5               	movf	postdec1,f,c
 14313  005160  0012               	return		;funcret
 14314  005162                     __end_of_TMR6_DefaultInterruptHandler:
 14315                           	opt callstack 0
 14316                           
 14317 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14318 ;; Defined at:
 14319 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;		None
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;		None
 14324 ;; Return value:  Size  Location     Type
 14325 ;;                  1    wreg      void 
 14326 ;; Registers used:
 14327 ;;		None
 14328 ;; Tracked objects:
 14329 ;;		On entry : 0/0
 14330 ;;		On exit  : 3F/0
 14331 ;;		Unchanged: 0/0
 14332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14337 ;;Total ram usage:        0 bytes
 14338 ;; Hardware stack levels used:    1
 14339 ;; This function calls:
 14340 ;;		Nothing
 14341 ;; This function is called by:
 14342 ;;		Interrupt level 2
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text97
 14347  005958                     __ptext97:
 14348                           	opt callstack 0
 14349  005958                     _DMA1_DMASCNT_ISR:
 14350                           	opt callstack 19
 14351                           
 14352                           ;incstack = 0
 14353  005958  EE13  F150         	lfsr	1,___inthi_sp
 14354                           
 14355                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14356  00595C  0139               	movlb	57	; () banked
 14357  00595E  91A2               	bcf	162,0,b	;volatile
 14358                           
 14359                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14360  005960  0100               	movlb	0	; () banked
 14361  005962  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14362                           
 14363                           ; BSR set to: 0
 14364  005964  0011               	retfie		f
 14365  005966                     __end_of_DMA1_DMASCNT_ISR:
 14366                           	opt callstack 0
 14367                           
 14368 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14369 ;; Defined at:
 14370 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;		None
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;		None
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  1    wreg      void 
 14377 ;; Registers used:
 14378 ;;		None
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 3F/39
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;Total ram usage:        0 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; This function calls:
 14391 ;;		Nothing
 14392 ;; This function is called by:
 14393 ;;		Interrupt level 2
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           	psect	text98
 14398  005970                     __ptext98:
 14399                           	opt callstack 0
 14400  005970                     _DMA1_DMADCNT_ISR:
 14401                           	opt callstack 19
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;incstack = 0
 14405  005970  EE13  F150         	lfsr	1,___inthi_sp
 14406                           
 14407                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14408  005974  0139               	movlb	57	; () banked
 14409  005976  93A2               	bcf	162,1,b	;volatile
 14410                           
 14411                           ; BSR set to: 57
 14412  005978  0011               	retfie		f
 14413  00597A                     __end_of_DMA1_DMADCNT_ISR:
 14414                           	opt callstack 0
 14415                           
 14416 ;; *************** function _DMA1_DMAA_ISR *****************
 14417 ;; Defined at:
 14418 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;		None
 14421 ;; Auto vars:     Size  Location     Type
 14422 ;;		None
 14423 ;; Return value:  Size  Location     Type
 14424 ;;                  1    wreg      void 
 14425 ;; Registers used:
 14426 ;;		None
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 3F/39
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14436 ;;Total ram usage:        0 bytes
 14437 ;; Hardware stack levels used:    1
 14438 ;; This function calls:
 14439 ;;		Nothing
 14440 ;; This function is called by:
 14441 ;;		Interrupt level 2
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text99
 14446  00597C                     __ptext99:
 14447                           	opt callstack 0
 14448  00597C                     _DMA1_DMAA_ISR:
 14449                           	opt callstack 19
 14450                           
 14451                           ; BSR set to: 57
 14452                           ;incstack = 0
 14453  00597C  EE13  F150         	lfsr	1,___inthi_sp
 14454                           
 14455                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14456  005980  0139               	movlb	57	; () banked
 14457  005982  97A2               	bcf	162,3,b	;volatile
 14458                           
 14459                           ; BSR set to: 57
 14460  005984  0011               	retfie		f
 14461  005986                     __end_of_DMA1_DMAA_ISR:
 14462                           	opt callstack 0
 14463                           
 14464 ;; *************** function _DMA1_DMAOR_ISR *****************
 14465 ;; Defined at:
 14466 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14467 ;; Parameters:    Size  Location     Type
 14468 ;;		None
 14469 ;; Auto vars:     Size  Location     Type
 14470 ;;		None
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  1    wreg      void 
 14473 ;; Registers used:
 14474 ;;		None
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 3F/39
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14484 ;;Total ram usage:        0 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; This function calls:
 14487 ;;		Nothing
 14488 ;; This function is called by:
 14489 ;;		Interrupt level 2
 14490 ;; This function uses a non-reentrant model
 14491 ;;
 14492                           
 14493                           	psect	text100
 14494  005988                     __ptext100:
 14495                           	opt callstack 0
 14496  005988                     _DMA1_DMAOR_ISR:
 14497                           	opt callstack 19
 14498                           
 14499                           ; BSR set to: 57
 14500                           ;incstack = 0
 14501  005988  EE13  F150         	lfsr	1,___inthi_sp
 14502                           
 14503                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14504  00598C  0139               	movlb	57	; () banked
 14505  00598E  95A2               	bcf	162,2,b	;volatile
 14506                           
 14507                           ; BSR set to: 57
 14508  005990  0011               	retfie		f
 14509  005992                     __end_of_DMA1_DMAOR_ISR:
 14510                           	opt callstack 0
 14511                           
 14512 ;; *************** function _TMR5_ISR *****************
 14513 ;; Defined at:
 14514 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;		None
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;		None
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      void 
 14521 ;; Registers used:
 14522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14531 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14532 ;;Total ram usage:        1 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:    2
 14535 ;; This function calls:
 14536 ;;		_TMR5_CallBack
 14537 ;;		_TMR5_WriteTimer
 14538 ;; This function is called by:
 14539 ;;		Interrupt level 2
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text101
 14544  005260                     __ptext101:
 14545                           	opt callstack 0
 14546  005260                     _TMR5_ISR:
 14547                           	opt callstack 17
 14548                           
 14549                           ; BSR set to: 57
 14550                           ;incstack = 0
 14551  005260  0060  F124  F0F5   	movff	btemp+11,??_TMR5_ISR
 14552  005266  EE13  F150         	lfsr	1,___inthi_sp
 14553                           
 14554                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14555  00526A  0139               	movlb	57	; () banked
 14556  00526C  9DA8               	bcf	168,6,b	;volatile
 14557                           
 14558                           ; BSR set to: 57
 14559                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14560  00526E  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 14561  005274  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14562  00527A  ECD2  F028         	call	_TMR5_WriteTimer	;wreg free
 14563                           
 14564                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14565  00527E  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14566  005280  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14567  005282  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14568  005284  E104               	bnz	i2u400_40
 14569  005286  0E32               	movlw	50
 14570  005288  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14571  00528A  A0D8               	btfss	status,0,c
 14572  00528C  D004               	goto	i2l1135
 14573  00528E                     i2u400_40:
 14574                           
 14575                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14576  00528E  ECD1  F02B         	call	_TMR5_CallBack	;wreg free
 14577                           
 14578                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14579  005292  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14580  005294  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14581  005296                     i2l1135:
 14582  005296  0060  F3D4  F049   	movff	??_TMR5_ISR,btemp+11
 14583  00529C  0011               	retfie		f
 14584  00529E                     __end_of_TMR5_ISR:
 14585                           	opt callstack 0
 14586                           
 14587 ;; *************** function _TMR5_WriteTimer *****************
 14588 ;; Defined at:
 14589 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  timerVal        2  [STACK] unsigned short 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;		None
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  1  [STACK] void 
 14596 ;; Registers used:
 14597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14598 ;; Tracked objects:
 14599 ;;		On entry : 3F/39
 14600 ;;		On exit  : 0/0
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;Total ram usage:        0 bytes
 14608 ;; Hardware stack levels used:    1
 14609 ;; This function calls:
 14610 ;;		Nothing
 14611 ;; This function is called by:
 14612 ;;		_TMR5_ISR
 14613 ;; This function uses a reentrant model
 14614 ;;
 14615                           
 14616                           	psect	text102
 14617  0051A4                     __ptext102:
 14618                           	opt callstack 0
 14619  0051A4                     _TMR5_WriteTimer:
 14620                           	opt callstack 18
 14621                           
 14622                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14623                           
 14624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14625                           ;incstack = 0
 14626  0051A4  A49A               	btfss	16282,2,c	;volatile
 14627  0051A6  D00F               	goto	l3764
 14628                           
 14629                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14630  0051A8  909A               	bcf	16282,0,c	;volatile
 14631                           
 14632                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14633                           ;stkvar	_timerVal @ sp[(0)+-2]
 14634  0051AA  0EFF               	movlw	255
 14635  0051AC  24E1               	addwf	fsr1l,w,c
 14636  0051AE  6ED9               	movwf	fsr2l,c
 14637  0051B0  0EFF               	movlw	255
 14638  0051B2  20E2               	addwfc	fsr1h,w,c
 14639  0051B4  6EDA               	movwf	fsr2h,c
 14640  0051B6  50DF               	movf	indf2,w,c
 14641  0051B8  6E99               	movwf	16281,c	;volatile
 14642                           
 14643                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14644                           ;stkvar	_timerVal @ sp[(0)+-2]
 14645  0051BA  0EFE               	movlw	-2
 14646  0051BC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14647                           
 14648                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14649  0051C2  809A               	bsf	16282,0,c	;volatile
 14650                           
 14651                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14652  0051C4  D00C               	goto	l1118
 14653  0051C6                     l3764:
 14654                           
 14655                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14656                           ;stkvar	_timerVal @ sp[(0)+-2]
 14657  0051C6  0EFF               	movlw	255
 14658  0051C8  24E1               	addwf	fsr1l,w,c
 14659  0051CA  6ED9               	movwf	fsr2l,c
 14660  0051CC  0EFF               	movlw	255
 14661  0051CE  20E2               	addwfc	fsr1h,w,c
 14662  0051D0  6EDA               	movwf	fsr2h,c
 14663  0051D2  50DF               	movf	indf2,w,c
 14664  0051D4  6E99               	movwf	16281,c	;volatile
 14665                           
 14666                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14667                           ;stkvar	_timerVal @ sp[(0)+-2]
 14668  0051D6  0EFE               	movlw	-2
 14669  0051D8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14670  0051DE                     l1118:
 14671                           
 14672                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14673  0051DE  52E5               	movf	postdec1,f,c
 14674  0051E0  52E5               	movf	postdec1,f,c
 14675  0051E2  0012               	return		;funcret
 14676  0051E4                     __end_of_TMR5_WriteTimer:
 14677                           	opt callstack 0
 14678                           
 14679 ;; *************** function _TMR5_CallBack *****************
 14680 ;; Defined at:
 14681 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14682 ;; Parameters:    Size  Location     Type
 14683 ;;		None
 14684 ;; Auto vars:     Size  Location     Type
 14685 ;;		None
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  1  [STACK] void 
 14688 ;; Registers used:
 14689 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14690 ;; Tracked objects:
 14691 ;;		On entry : 0/39
 14692 ;;		On exit  : 0/0
 14693 ;;		Unchanged: 0/0
 14694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;Total ram usage:        0 bytes
 14700 ;; Hardware stack levels used:    1
 14701 ;; Hardware stack levels required when called:    1
 14702 ;; This function calls:
 14703 ;;		Absolute function
 14704 ;;		_TMR5_DefaultInterruptHandler
 14705 ;; This function is called by:
 14706 ;;		_TMR5_ISR
 14707 ;; This function uses a reentrant model
 14708 ;;
 14709                           
 14710                           	psect	text103
 14711  0057A2                     __ptext103:
 14712                           	opt callstack 0
 14713  0057A2                     _TMR5_CallBack:
 14714                           	opt callstack 17
 14715                           
 14716                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14717                           
 14718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14719                           ;incstack = 0
 14720  0057A2  5004               	movf	_TMR5_InterruptHandler,w,c
 14721  0057A4  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 14722  0057A6  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 14723  0057A8  B4D8               	btfsc	status,2,c
 14724  0057AA  0012               	return	
 14725                           
 14726                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14727  0057AC  D801               	call	u126_48
 14728  0057AE  0012               	return	
 14729  0057B0                     u126_48:
 14730  0057B0  0005               	push	
 14731  0057B2  6EFA               	movwf	pclath,c
 14732  0057B4  5004               	movf	_TMR5_InterruptHandler,w,c
 14733  0057B6  6EFD               	movwf	tosl,c
 14734  0057B8  5005               	movf	_TMR5_InterruptHandler+1,w,c
 14735  0057BA  6EFE               	movwf	tosh,c
 14736  0057BC  5006               	movf	_TMR5_InterruptHandler+2,w,c
 14737  0057BE  6EFF               	movwf	tosu,c
 14738  0057C0  50FA               	movf	pclath,w,c
 14739  0057C2  0012               	return		;indir
 14740  0057C4                     __end_of_TMR5_CallBack:
 14741                           	opt callstack 0
 14742                           
 14743 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14744 ;; Defined at:
 14745 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;		None
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1  [STACK] void 
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0, btemp+11
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/39
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14763 ;;Total ram usage:        0 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		_TMR5_Initialize
 14769 ;;		_TMR5_CallBack
 14770 ;; This function uses a reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text104
 14774  0058AA                     __ptext104:
 14775                           	opt callstack 0
 14776  0058AA                     _TMR5_DefaultInterruptHandler:
 14777                           	opt callstack 17
 14778                           
 14779                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14780                           
 14781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14782                           ;incstack = 0
 14783  0058AA  A0BE               	btfss	16318,0,c	;volatile
 14784  0058AC  D002               	goto	u102_40
 14785  0058AE  0E01               	movlw	1
 14786  0058B0  D001               	goto	u102_46
 14787  0058B2                     u102_40:
 14788  0058B2  0E00               	movlw	0
 14789  0058B4                     u102_46:
 14790  0058B4  0AFF               	xorlw	255
 14791  0058B6  6E49               	movwf	btemp+11,c
 14792  0058B8  50BE               	movf	16318,w,c	;volatile
 14793  0058BA  1849               	xorwf	btemp+11,w,c
 14794  0058BC  0BFE               	andlw	-2
 14795  0058BE  1849               	xorwf	btemp+11,w,c
 14796  0058C0  6EBE               	movwf	16318,c	;volatile
 14797                           
 14798                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14799  0058C2  0012               	return		;funcret
 14800  0058C4                     __end_of_TMR5_DefaultInterruptHandler:
 14801                           	opt callstack 0
 14802                           
 14803                           ;
 14804                           ; Interrupt Vector Table @ 0x8
 14805                           ;
 14806                           
 14807                           	psect	ivt0x8
 14808  000008                     __pivt0x8:
 14809                           	opt callstack 0
 14810  000008                     ivt0x8_base:
 14811                           	opt callstack 0
 14812                           
 14813                           ; Vector 0 : SWINT
 14814  000008  166C               	dw	_Default_ISR shr (0+2)
 14815                           
 14816                           ; Vector 1 : HLVD
 14817  00000A  166C               	dw	_Default_ISR shr (0+2)
 14818                           
 14819                           ; Vector 2 : OSF
 14820  00000C  166C               	dw	_Default_ISR shr (0+2)
 14821                           
 14822                           ; Vector 3 : CSW
 14823  00000E  166C               	dw	_Default_ISR shr (0+2)
 14824                           
 14825                           ; Vector 4 : NVM
 14826  000010  166C               	dw	_Default_ISR shr (0+2)
 14827                           
 14828                           ; Vector 5 : SCAN
 14829  000012  166C               	dw	_Default_ISR shr (0+2)
 14830                           
 14831                           ; Vector 6 : CRC
 14832  000014  166C               	dw	_Default_ISR shr (0+2)
 14833                           
 14834                           ; Vector 7 : IOC
 14835  000016  166C               	dw	_Default_ISR shr (0+2)
 14836                           
 14837                           ; Vector 8 : INT0
 14838  000018  164A               	dw	_INT0_ISR shr (0+2)
 14839                           
 14840                           ; Vector 9 : ZCD
 14841  00001A  166C               	dw	_Default_ISR shr (0+2)
 14842                           
 14843                           ; Vector 10 : AD
 14844  00001C  14ED               	dw	_ADCC_ISR shr (0+2)
 14845                           
 14846                           ; Vector 11 : ADT
 14847  00001E  166C               	dw	_Default_ISR shr (0+2)
 14848                           
 14849                           ; Vector 12 : CMP1
 14850  000020  166C               	dw	_Default_ISR shr (0+2)
 14851                           
 14852                           ; Vector 13 : SMT1
 14853  000022  166C               	dw	_Default_ISR shr (0+2)
 14854                           
 14855                           ; Vector 14 : SMT1PRA
 14856  000024  166C               	dw	_Default_ISR shr (0+2)
 14857                           
 14858                           ; Vector 15 : SMT1PRW
 14859  000026  166C               	dw	_Default_ISR shr (0+2)
 14860                           
 14861                           ; Vector 16 : DMA1SCNT
 14862  000028  1656               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14863                           
 14864                           ; Vector 17 : DMA1DCNT
 14865  00002A  165C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14866                           
 14867                           ; Vector 18 : DMA1OR
 14868  00002C  1662               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14869                           
 14870                           ; Vector 19 : DMA1A
 14871  00002E  165F               	dw	_DMA1_DMAA_ISR shr (0+2)
 14872                           
 14873                           ; Vector 20 : SPI1RX
 14874  000030  166C               	dw	_Default_ISR shr (0+2)
 14875                           
 14876                           ; Vector 21 : SPI1TX
 14877  000032  166C               	dw	_Default_ISR shr (0+2)
 14878                           
 14879                           ; Vector 22 : SPI1
 14880  000034  166C               	dw	_Default_ISR shr (0+2)
 14881                           
 14882                           ; Vector 23 : I2C1RX
 14883  000036  166C               	dw	_Default_ISR shr (0+2)
 14884                           
 14885                           ; Vector 24 : I2C1TX
 14886  000038  166C               	dw	_Default_ISR shr (0+2)
 14887                           
 14888                           ; Vector 25 : I2C1
 14889  00003A  166C               	dw	_Default_ISR shr (0+2)
 14890                           
 14891                           ; Vector 26 : I2C1E
 14892  00003C  166C               	dw	_Default_ISR shr (0+2)
 14893                           
 14894                           ; Vector 27 : U1RX
 14895  00003E  1598               	dw	_UART1_rx_vect_isr shr (0+2)
 14896                           
 14897                           ; Vector 28 : U1TX
 14898  000040  158E               	dw	_UART1_tx_vect_isr shr (0+2)
 14899                           
 14900                           ; Vector 29 : U1E
 14901  000042  166C               	dw	_Default_ISR shr (0+2)
 14902                           
 14903                           ; Vector 30 : U1
 14904  000044  166C               	dw	_Default_ISR shr (0+2)
 14905                           
 14906                           ; Vector 31 : TMR0
 14907  000046  166C               	dw	_Default_ISR shr (0+2)
 14908                           
 14909                           ; Vector 32 : TMR1
 14910  000048  166C               	dw	_Default_ISR shr (0+2)
 14911                           
 14912                           ; Vector 33 : TMR1G
 14913  00004A  166C               	dw	_Default_ISR shr (0+2)
 14914                           
 14915                           ; Vector 34 : TMR2
 14916  00004C  166C               	dw	_Default_ISR shr (0+2)
 14917                           
 14918                           ; Vector 35 : CCP1
 14919  00004E  166C               	dw	_Default_ISR shr (0+2)
 14920                           
 14921                           ; Vector 36 : Undefined
 14922  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14923                           
 14924                           ; Vector 37 : NCO1
 14925  000052  166C               	dw	_Default_ISR shr (0+2)
 14926                           
 14927                           ; Vector 38 : CWG1
 14928  000054  166C               	dw	_Default_ISR shr (0+2)
 14929                           
 14930                           ; Vector 39 : CLC1
 14931  000056  166C               	dw	_Default_ISR shr (0+2)
 14932                           
 14933                           ; Vector 40 : INT1
 14934  000058  164E               	dw	_INT1_ISR shr (0+2)
 14935                           
 14936                           ; Vector 41 : CMP2
 14937  00005A  166C               	dw	_Default_ISR shr (0+2)
 14938                           
 14939                           ; Vector 42 : DMA2SCNT
 14940  00005C  166C               	dw	_Default_ISR shr (0+2)
 14941                           
 14942                           ; Vector 43 : DMA2DCNT
 14943  00005E  166C               	dw	_Default_ISR shr (0+2)
 14944                           
 14945                           ; Vector 44 : DMA2OR
 14946  000060  166C               	dw	_Default_ISR shr (0+2)
 14947                           
 14948                           ; Vector 45 : DMA2A
 14949  000062  166C               	dw	_Default_ISR shr (0+2)
 14950                           
 14951                           ; Vector 46 : I2C2RX
 14952  000064  166C               	dw	_Default_ISR shr (0+2)
 14953                           
 14954                           ; Vector 47 : I2C2TX
 14955  000066  166C               	dw	_Default_ISR shr (0+2)
 14956                           
 14957                           ; Vector 48 : I2C2
 14958  000068  166C               	dw	_Default_ISR shr (0+2)
 14959                           
 14960                           ; Vector 49 : I2C2E
 14961  00006A  166C               	dw	_Default_ISR shr (0+2)
 14962                           
 14963                           ; Vector 50 : U2RX
 14964  00006C  15AC               	dw	_UART2_rx_vect_isr shr (0+2)
 14965                           
 14966                           ; Vector 51 : U2TX
 14967  00006E  15A2               	dw	_UART2_tx_vect_isr shr (0+2)
 14968                           
 14969                           ; Vector 52 : U2E
 14970  000070  166C               	dw	_Default_ISR shr (0+2)
 14971                           
 14972                           ; Vector 53 : U2
 14973  000072  166C               	dw	_Default_ISR shr (0+2)
 14974                           
 14975                           ; Vector 54 : TMR3
 14976  000074  166C               	dw	_Default_ISR shr (0+2)
 14977                           
 14978                           ; Vector 55 : TMR3G
 14979  000076  166C               	dw	_Default_ISR shr (0+2)
 14980                           
 14981                           ; Vector 56 : TMR4
 14982  000078  166C               	dw	_Default_ISR shr (0+2)
 14983                           
 14984                           ; Vector 57 : CCP2
 14985  00007A  166C               	dw	_Default_ISR shr (0+2)
 14986                           
 14987                           ; Vector 58 : Undefined
 14988  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14989                           
 14990                           ; Vector 59 : CWG2
 14991  00007E  166C               	dw	_Default_ISR shr (0+2)
 14992                           
 14993                           ; Vector 60 : CLC2
 14994  000080  166C               	dw	_Default_ISR shr (0+2)
 14995                           
 14996                           ; Vector 61 : INT2
 14997  000082  1652               	dw	_INT2_ISR shr (0+2)
 14998                           
 14999                           ; Vector 62 : Undefined
 15000  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15001                           
 15002                           ; Vector 63 : Undefined
 15003  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15004                           
 15005                           ; Vector 64 : Undefined
 15006  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15007                           
 15008                           ; Vector 65 : Undefined
 15009  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15010                           
 15011                           ; Vector 66 : Undefined
 15012  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15013                           
 15014                           ; Vector 67 : Undefined
 15015  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15016                           
 15017                           ; Vector 68 : Undefined
 15018  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15019                           
 15020                           ; Vector 69 : Undefined
 15021  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15022                           
 15023                           ; Vector 70 : TMR5
 15024  000094  1498               	dw	_TMR5_ISR shr (0+2)
 15025                           
 15026                           ; Vector 71 : TMR5G
 15027  000096  166C               	dw	_Default_ISR shr (0+2)
 15028                           
 15029                           ; Vector 72 : TMR6
 15030  000098  1624               	dw	_TMR6_ISR shr (0+2)
 15031                           
 15032                           ; Vector 73 : CCP3
 15033  00009A  166C               	dw	_Default_ISR shr (0+2)
 15034                           
 15035                           ; Vector 74 : CWG3
 15036  00009C  166C               	dw	_Default_ISR shr (0+2)
 15037                           
 15038                           ; Vector 75 : CLC3
 15039  00009E  166C               	dw	_Default_ISR shr (0+2)
 15040                           
 15041                           ; Vector 76 : Undefined
 15042  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15043                           
 15044                           ; Vector 77 : Undefined
 15045  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15046                           
 15047                           ; Vector 78 : Undefined
 15048  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15049                           
 15050                           ; Vector 79 : Undefined
 15051  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15052                           
 15053                           ; Vector 80 : CCP4
 15054  0000A8  166C               	dw	_Default_ISR shr (0+2)
 15055                           
 15056                           ; Vector 81 : CLC4
 15057  0000AA  166C               	dw	_Default_ISR shr (0+2)
 15058  0000AC                     ivt0x8_undefint:
 15059                           	opt callstack 0
 15060  0000AC  00FF               	reset	
 15061                           
 15062                           	psect	text105
 15063  000000                     __ptext105:
 15064                           	opt callstack 0
 15065                           
 15066                           	psect	rparam
 15067  0000                     
 15068                           	psect	temp
 15069  00003E                     btemp:
 15070                           	opt callstack 0
 15071  00003E                     	ds	32
 15072  0000                     wtemp0	set	btemp
 15073  0000                     wtemp1	set	btemp+2
 15074  0000                     wtemp2	set	btemp+4
 15075  0000                     wtemp3	set	btemp+6
 15076  0000                     wtemp4	set	btemp+8
 15077  0000                     wtemp5	set	btemp+10
 15078  0000                     wtemp8	set	btemp+1
 15079  0000                     ttemp0	set	btemp
 15080  0000                     ttemp1	set	btemp+3
 15081  0000                     ttemp2	set	btemp+6
 15082  0000                     ttemp3	set	btemp+9
 15083  0000                     ttemp5	set	btemp+1
 15084  0000                     ttemp6	set	btemp+4
 15085  0000                     ttemp7	set	btemp+8
 15086  0000                     ltemp0	set	btemp
 15087  0000                     ltemp1	set	btemp+4
 15088  0000                     ltemp2	set	btemp+8
 15089  0000                     lltemp0	set	btemp
 15090  0000                     lltemp1	set	btemp+8
 15091  0000                     lltemp2	set	btemp+16
 15092  0000                     lltemp3	set	btemp+24
 15093                           tosu	equ	0x3FFF
 15094                           tosh	equ	0x3FFE
 15095                           tosl	equ	0x3FFD
 15096                           stkptr	equ	0x3FFC
 15097                           pclatu	equ	0x3FFB
 15098                           pclath	equ	0x3FFA
 15099                           pcl	equ	0x3FF9
 15100                           tblptru	equ	0x3FF8
 15101                           tblptrh	equ	0x3FF7
 15102                           tblptrl	equ	0x3FF6
 15103                           tablat	equ	0x3FF5
 15104                           prodh	equ	0x3FF4
 15105                           prodl	equ	0x3FF3
 15106                           indf0	equ	0x3FEF
 15107                           postinc0	equ	0x3FEE
 15108                           postdec0	equ	0x3FED
 15109                           preinc0	equ	0x3FEC
 15110                           plusw0	equ	0x3FEB
 15111                           fsr0h	equ	0x3FEA
 15112                           fsr0l	equ	0x3FE9
 15113                           wreg	equ	0x3FE8
 15114                           indf1	equ	0x3FE7
 15115                           postinc1	equ	0x3FE6
 15116                           postdec1	equ	0x3FE5
 15117                           preinc1	equ	0x3FE4
 15118                           plusw1	equ	0x3FE3
 15119                           fsr1h	equ	0x3FE2
 15120                           fsr1l	equ	0x3FE1
 15121                           bsr	equ	0x3FE0
 15122                           indf2	equ	0x3FDF
 15123                           postinc2	equ	0x3FDE
 15124                           postdec2	equ	0x3FDD
 15125                           preinc2	equ	0x3FDC
 15126                           plusw2	equ	0x3FDB
 15127                           fsr2h	equ	0x3FDA
 15128                           fsr2l	equ	0x3FD9
 15129                           status	equ	0x3FD8


Data Sizes:
    Strings     175
    Constant    0
    Data        331
    BSS         610
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      63
    BANK0           160      1     150
    BANK1           256      0     228
    BANK2           256      0     256
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[86]), 

    a	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[86]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[21]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), 
		 -> STR_7(CODE[23]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4309_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[86]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[5]), 
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16604.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    S3636response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40412
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1722
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     165
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      15
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              0 BANK0      1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      96       5       93.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3AF      58        0.0%
DATA                 0      0     3AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 03:34:19 2019

                    _SPI1_Exchange8bit 5804                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5596                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 00E6  
                                  _H13 01B4                                    _H14 01A3  
                                  _H24 015F                                    _H17 018F  
                                  _H18 017A                                    _H27 0141  
                                  _H53 0386                                    l194 5900  
                                  l572 524C                                    l717 5358  
                                  l579 51FA                                    l597 532C  
                                  l847 5812                                    _GIE 01FE97  
                                  u940 4DD4                                    u965 4E08  
                                  u966 4E0A                                    u958 4DD6  
                                  _abs 5090                                    _pad 41E6  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 571A  
                         _run_checksum 53DE                     _UART1_Transmit_ISR 5306  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 573C  
                         __CFG_ZCD$OFF 000000                                   l1118 51DE  
                                 l1240 2B8C                                   l1219 2AC2  
                                 l1308 4F5C                                   l1236 2B86  
                                 l1245 2C86                                   l1237 2B88  
                                 l1246 2CB6                                   l1440 48C0  
                                 l1520 3048                                   l1444 4C5C  
                                 l1711 33CA                                   l2425 50D0  
                                 l1553 3828                                   l1730 2556  
                                 l2447 43FC                                   l1664 4242  
                                 l5032 521A                                   l1584 404C  
                                 l5034 521C                                   l1684 263E  
                                 l5046 5380                                   l2479 41DC  
                                 l5216 5224                                   l5242 5122  
                                 l5314 53EA                                   l5410 3E40  
                                 l5322 3CC0                                   l7010 2C5E  
                                 l5252 539E                                   l5340 3D18  
                                 l7004 2C42                                   l5246 514C  
                                 l4710 3C0C                                   l4702 3B60  
                                 l5334 3CFA                                   l5422 3E60  
                                 l5352 3D54                                   l5328 3CDC  
                                 l5424 3E86                                   l6330 4AF4  
                                 l4650 3600                                   l5098 56F0  
                                 l5370 3DCC                                   l5346 3D36  
                                 l7018 2C72                                   l3764 51C6  
                                 l6316 432A                                   l6340 423A  
                                 l5700 30FC                                   l7028 2C8A  
                                 l6326 4AB6                                   l6350 42D2  
                                 l6342 424C                                   l4662 369A  
                                 l4638 50C0                                   l6430 2996  
                                 l6406 28A8                                   l5358 3D72  
                                 l5560 5354                                   l6336 4212  
                                 l6360 4CAE                                   l4656 3654  
                                 l6512 2274                                   l6504 2190  
                                 l5720 31CC                                   l5712 317E  
                                 l5704 3120                                   l5368 3D94  
                                 l5570 5800                                   l5538 5328  
                                 l6346 4288                                   l4674 376C  
                                 l6426 295A                                   l6442 334C  
                                 l6610 4B96                                   l5722 31D0  
                                 l5394 3E22                                   l5386 3DEA  
                                 l5548 57E0                                   l4596 48EE  
                                 l6516 22C6                                   l5732 31F4  
                                 l5708 314E                                   l5388 3E04  
                                 l4598 4910                                   l6358 4C82  
                                 l4694 3AD8                                   l6462 343C  
                                 l4862 40BA                                   l6630 450A  
                                 l6702 3FCA                                   l6392 2678  
                                 l6384 262E                                   l6480 355E  
                                 l6472 34F6                                   l6544 24E8  
                                 l6528 23EC                                   l6608 4B56  
                                 l5752 3274                                   l6466 346C  
                                 l6458 3400                                   l4866 40EA  
                                 l6538 2494                                   l6554 2508  
                                 l5754 3278                                   l5682 309E  
                                 l5674 306E                                   l5658 3012  
                                 l6634 457C                                   l6714 401E  
                                 l6706 3FE4                                   l6810 3854  
                                 l6396 2696                                   l6476 3522  
                                 l6548 24EC                                   l5748 325E  
                                 l5684 30AA                                   l5764 328C  
                                 l6716 4046                                   l6820 3896  
                                 l6582 2E78                                   l4958 4F6E  
                                 l5758 3284                                   l5766 32CE  
                                 l6830 38D8                                   l6576 2DBA  
                                 l5696 30DE                                   l6674 4A56  
                                 l6834 38F0                                   l6818 3884  
                                 l6914 29F0                                   l6596 2F90  
                                 l6588 2EE2                                   l6852 39A0  
                                 l6836 38FC                                   l6694 3F1C  
                                 l6862 39C4                                   l6846 3966  
                                 l6926 2A22                                   l6880 3A14  
                                 l6872 39F2                                   l6856 39A8  
                                 l6874 3A00                                   l6970 2B2C  
                                 l6954 2ACC                                   l6876 3A04  
                                 l6884 3A22                                   l6878 3A0C  
                                 l6886 3A64                                   l6974 2B46  
                                 l6966 2B24                                   l6978 2B56  
                                 l6996 2BD8                                   l6998 2C0A  
                                 STR_1 2062                                   STR_2 2090  
                                 STR_3 20A2                                   STR_4 2073  
                                 STR_5 2082                                   STR_6 209C  
                                 STR_7 2001                                   STR_8 202D  
                                 STR_9 2051                                   u2000 3AD2  
                                 u2020 3B28                                   u2030 3B5A  
                                 u2040 3B8C                                   u2060 3C44  
                                 u3005 322E                                   _LATA 003FBA  
                                 _LATB 003FBB                                   u3015 323E  
                                 u3007 3232                                   _LATC 003FBC  
                                 u2080 3C96                                   _LATD 003FBD  
                                 u3017 3242                                   _LATE 003FBE  
                                 u4010 2A08                                   _LATF 003FBF  
                                 u2420 4192                                   u3320 431E  
                                 u4018 2A0A                                   u3340 439A  
                                 u1900 3650                                   u3500 28BC  
                                 u3420 2590                                   u3430 2592  
                                 u1911 365A                                   u3511 28EC  
                                 u1920 3694                                   u3520 2902  
                                 u3521 2900                                   u1930 36C6  
                                 u3530 2916                                   u3450 2602  
                                 u1860 50A4                                   u3540 291A  
                                 u1790 493E                                   u1950 37A4  
                                 u3470 2614                                   u3630 3462  
                                 u3710 21E0                                   u1880 35FA  
                                 u3560 2930                                   u3640 34A8  
                                 u3800 3004                                   u1970 37F6  
                                 u3490 2664                                   u3730 231E  
                                 _T6PR 003F93                                   _PMD0 0039C0  
                                 u1797 4930                                   _PMD1 0039C1  
                                 u3670 3584                                   _PMD2 0039C2  
                                 u3647 349A                                   _PMD3 0039C3  
                                 u3840 4A46                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u3850 3F16  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u2995 321E                                   u2997 3222  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 575E  
                     __end_of_ADCC_ISR 53DE                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01C4                                   _ctoa 4C64  
                                 _main 29E0                                   _dtoa 2560  
                                 _prec 0026                                   _nout 0022  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 32E0  
                                 btemp 003E      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 002E              __end_of_SPI1_Exchange8bit 5822  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5660  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005F             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 5936                       __end_of_INT1_ISR 5946  
                     __end_of_INT2_ISR 5956         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 48C8          __end_of_OSCILLATOR_Initialize 5906  
                                PRLOCK 0039EF                        __end_of___aodiv 381E  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 3CBA  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 2040                                  STR_11 2018  
                                STR_12 2099                                  STR_21 20AA  
                                STR_13 20AD                                  STR_15 20A7  
                                STR_17 20A7                          __CFG_WDTE$OFF 000000  
                                STR_19 20AA                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005F                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 59B0  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5638  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 529E  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 58AA  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 0031  
                                _flags 0028                                  _fputc 42FA  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 4AA6  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005F  
                                _width 0024                                  _putch 5876  
             _INT1_SetInterruptHandler 55BE                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003E                                  ltemp1 0042  
                                ltemp2 0046               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003E  
                                ttemp1 0041                                  ttemp2 0044  
                                ttemp3 0047                                  ttemp5 003F  
                                ttemp6 0042                                  ttemp7 0046  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 551E  
          _UART1_SetRxInterruptHandler 54F6                                  wtemp0 003E  
                                wtemp1 0040                                  wtemp2 0042  
                                wtemp3 0044                                  wtemp4 0046  
                                wtemp5 0048                                  wtemp8 003F  
                      __end_of_sprintf 475A                        __end_of_strncmp 41E6  
                  ??_UART1_tx_vect_isr 005F              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5686               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 50D6                  __end_of_ringBufS_init 547E  
                      __initialization 45C2                      _UART2_rx_vect_isr 56B0  
                         __end_of_ctoa 4CEC                           __end_of_main 2D22  
                         __end_of_dtoa 29E0                           __end_of_stoa 359E  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005F  
             _TMR5_SetInterruptHandler 556E                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005F              __end_of_UART1_tx_vect_isr 565E  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 551E  
                     _UART1_Initialize 4E2C                      _UART2_tx_vect_isr 5688  
                   _UART2_Transmit_ISR 5332                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005F  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               u102_40 58B2                                 u102_46 58B4  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 u111_48 5728  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 u113_48 574A  
                               i2l1135 5296                         __CFG_WDTCCS$SC 000000  
                               u115_48 576C                                 u126_48 57B0  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u285_48 578E           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 4FFA  
                  ??_UART2_tx_vect_isr 005F              __end_of_UART2_rx_vect_isr 56D6  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5966  
                     _UART2_Initialize 4EF2                                 _WaitMs 5388  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4BD2                                 _memset 2D22  
                               clear_0 4642                                 clear_1 4650  
                               clear_2 4662                                 clear_3 466E  
                               clear_4 467A                                 _printf 4E90  
                   _eaDogM_WriteString 4A0A                              ?_ADCC_ISR 005F  
                               _strlen 48C8                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5046                         _PMD_Initialize 5906  
 __end_of_INT2_DefaultInterruptHandler 59BC  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 59BA                           __pdataCOMRAM 005E  
            __end_of_UART2_tx_vect_isr 56AE                                 lltemp0 003E  
                               lltemp1 0046                                 lltemp2 004E  
                               lltemp3 0056                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 4FAC  
                     __end_of_vfprintf 4BD2                             _StartTimer 529E  
                      _CLC1_Initialize 56F8          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 511C                      _SYSTEM_Initialize 5162  
                           __accesstop 0060                __end_of__initialization 468C  
                            ?_INT0_ISR 005F                              ?_INT1_ISR 005F  
                            ?_INT2_ISR 005F              __end_of_CLKREF_Initialize 5970  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 51A4                 __end_of_ringBufS_flush 4C64  
                       __pcstackCOMRAM 005F                             ___inthi_sp 0D50  
                         __pidataBANK0 58C4                           __pidataBANK1 475A  
                         __pidataBANK3 4CEC                              ?_TMR5_ISR 005F  
                            ?_TMR6_ISR 005F                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4406                          __end_of_fputs 4B3E  
                __end_of_TMR5_CallBack 57C4                          __end_of_putch 5890  
              __end_of_TMR6_Initialize 5546                 __end_of_PMD_Initialize 591A  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005F  
                __end_of_TMR6_CallBack 57A2            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 597C  
     __end_of_INT2_SetInterruptHandler 55BE               _UART2_RxInterruptHandler 0016  
            __end_of_SYSTEM_Initialize 51A4                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 585A  
                           __pbssBANK0 0060                             __pbssBANK1 01C4  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001F                             ??_INT0_ISR 005F  
                           ??_INT1_ISR 005F                             ??_INT2_ISR 005F  
                    __end_of_TimerDone 56F8                       _DMA1_DMADCNT_ISR 5970  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 583E  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 556E  
              __end_of_ADCC_Initialize 5090                             ??_TMR5_ISR 00F5  
                           ??_TMR6_ISR 005F                     __size_of_secs_send 01B8  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 57C4                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005F                       _DMA1_DMASCNT_ISR 5958  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 571A  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005F                   __size_of_UART1_Write 003E  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 5876  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 51E4  
                   __end_of_UART1_Read 5260      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4E90                        __size_of_WaitMs 002A  
                              ___aodiv 359E                                ___aomod 3A7A  
            __end_of_UART1_Receive_ISR 57E4                           __psmallconst 2000  
                 __end_of_init_display 44F0                                __pcinit 45C2  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 591A  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 29E0  
                              __ptext1 381E                                __ptext2 3E9E  
                              __ptext3 44F0                                __ptext4 535E  
                              __ptext5 5992                                __ptext6 3CBA  
                              __ptext7 4692                                __ptext8 300E  
                              __ptext9 53DE                      _UART2_Receive_ISR 57E4  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us209999 3CA8  
                              us341999 257A                  _OSCILLATOR_Initialize 58F0  
                              us198999 3808                                us358999 32F2  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0114                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 4F50  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4692  
                              _strncmp 4056                   end_of_initialization 468C  
                    __end_of_secs_send 4056               _INT2_SetInterruptHandler 5596  
             __size_of_secs_II_message 01E4                             _r_protocol 300E  
  __end_of_UART1_SetTxInterruptHandler 54F6            _UART1_SetTxInterruptHandler 54CE  
  __end_of_UART2_SetRxInterruptHandler 54CE            _UART2_SetRxInterruptHandler 54A6  
                           _t_protocol 381E                      __end_of_vfpfcnvrt 2560  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 59AE  
            __end_of_UART2_Receive_ISR 5804                         wdtdelay@dcount 0085  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00F5  
                       _block_checksum 44F0                  _INT1_InterruptHandler 001C  
                            _PORTDbits 003FCD               _TMR6_SetInterruptHandler 5546  
                _TMR5_InterruptHandler 0004   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5636  
          _ADCC_SetADIInterruptHandler 560E                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4D5C  
                      _SPI1_Initialize 58DA                       _UART1_put_buffer 535E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 53B2  
         __end_of_INTERRUPT_Initialize 4E2C                 __end_of_block_checksum 45C2  
 __end_of_INT0_DefaultInterruptHandler 59B8  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 59B6             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 59BE                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 300E                         __end_of_printf 4EF2  
             __end_of_DMA1_DMADCNT_ISR 597A                  __end_of_INT0_CallBack 573C  
                       __end_of_strlen 496A                    start_initialization 45C2  
 __end_of_TMR5_DefaultInterruptHandler 58C4  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 58AA        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 50D6                  __end_of_INT1_CallBack 575E  
                          __end_of_pad 42FA                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5456                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5780                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5966  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5988  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 56D6  
                        _ringBufS_init 5456                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00DF  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5046  
                      run_checksum@sum 002A        __end_of_eaDogM_WriteStringAtPos 5306  
              __end_of_DMA1_Initialize 4DC6                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 560E                          __pcstackBANK0 00F5  
              __end_of_SPI1_Initialize 58F0               _UART1_RxInterruptHandler 0010  
             _UART2_TxInterruptHandler 0013              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4406                 __end_of_DMA1_DMAOR_ISR 5992  
               __size_of_TMR5_CallBack 0022                  _INT2_InterruptHandler 0019  
                _TMR6_InterruptHandler 0007                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 496A                   __end_of_wait_lcd_set 59A8  
                            __ptext100 5988                              __ptext101 5260  
                            __ptext102 51A4                              __ptext103 57A2  
                            __ptext104 58AA                              __ptext105 0000  
                   __end_of_StartTimer 52DA                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0094                               _ADCC_ISR 53B4  
                  __size_of_r_protocol 02D2                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 025C                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4DC6                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005F  
                             _INT0_ISR 5928                               _INT1_ISR 5938  
                             _INT2_ISR 5948                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 3E9E  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                             i2u400_40 528E                               i2u321_48 56C2  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u315_48 564A                               i2u156_48 53CA  
                             i2u317_48 5672                               i2u319_48 569A  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5332  
                             _TMR5_ISR 5260                               _TMR6_ISR 5890  
                            _vfpfcnvrt 20B2                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 57A2                              _start_lcd 59A8  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 5780  
             __end_of_UART1_put_buffer 5388                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5222  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 45D6                              copy_data1 45F8  
                            copy_data2 461A               _INT0_SetInterruptHandler 55E6  
               _uart1TxBufferRemaining 003B    __end_of_UART2_SetTxInterruptHandler 54A6  
          _UART2_SetTxInterruptHandler 547E                           _uart1RxCount 0038  
                         _uart2RxCount 0032                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5406                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5822  
                         _send_lcd_cmd 542E                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 583E  
                __end_of_DMA1_DMAA_ISR 5986   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005F               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 5928                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 00F5                               __ptext10 5388  
                             __ptext11 56D6                               __ptext20 5456  
                             __ptext12 529E                               __ptext21 52DA  
                             __ptext13 599A                               __ptext30 2D22  
                             __ptext22 4A0A                               __ptext14 51E4  
                             __ptext31 4E90                               __ptext23 591A  
                             __ptext15 5222                               __ptext40 4C64  
                             __ptext32 4B3E                               __ptext24 4FAC  
                             __ptext16 4406                               __ptext41 41E6  
                             __ptext33 20B2                               __ptext25 59A2  
                             __ptext17 5406                               __ptext50 54A6  
                             __ptext42 48C8                               __ptext34 4056  
                             __ptext26 5822                               __ptext18 542E  
                             __ptext51 4E2C                               __ptext43 4AA6  
                             __ptext35 32E0                               __ptext27 4F50  
                             __ptext19 5804                               __ptext60 496A  
                             __ptext52 54CE                               __ptext44 42FA  
                             __ptext36 2560                               __ptext28 59A8  
                             __ptext61 58F0                               __ptext53 54F6  
                             __ptext45 5876                               __ptext37 5090  
                             __ptext29 4BD2                               __ptext70 5966  
                             __ptext62 583E                               __ptext54 551E  
                             __ptext46 481E                               __ptext38 3A7A  
                             __ptext71 56F8                               __ptext63 4DC6  
                             __ptext55 5546                               __ptext47 5162  
                             __ptext39 359E                               __ptext80 5948  
                             __ptext72 5046                               __ptext64 4FFA  
                             __ptext56 50D6                               __ptext48 4EF2  
                             __ptext81 575E                               __ptext73 560E  
                             __ptext65 5596                               __ptext57 556E  
                             __ptext49 547E                               __ptext90 5688  
                             __ptext82 59BA                               __ptext74 5928  
                             __ptext66 55BE                               __ptext58 58DA  
                             __ptext91 5332                               __ptext83 59B0  
                             __ptext75 571A                               __ptext67 55E6  
                             __ptext59 5906                               __ptext92 56B0  
                             __ptext84 53B4                               __ptext76 59B6  
                             __ptext68 585A                               __ptext93 57E4  
                             __ptext85 59BC                               __ptext77 5938  
                             __ptext69 4D5C                               __ptext94 5890  
                             __ptext86 5638                               __ptext78 573C  
                             __ptext95 5780                               __ptext87 5306  
                             __ptext79 59B8                               __ptext96 511C  
                             __ptext88 5660                               __ptext97 5958  
                             __ptext89 57C4                               __ptext98 5970  
                             __ptext99 597C                        _secs_II_message 3CBA  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 481E  
                        __size_of_ctoa 0088                          __size_of_main 0342  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005F                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000A  
                            stoa@F1144 00DF                     ??_DMA1_DMASCNT_ISR 00F5  
                             _spi_link 006D                               _wdtdelay 4F50  
           __end_of_UART2_Transmit_ISR 535E                               _vfprintf 4B3E  
                    _UART1_is_rx_ready 599A                            _UART1_Write 51E4  
 __end_of_INT1_DefaultInterruptHandler 59BA  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 59B8                      _UART1_is_tx_ready 5992  
                      r_protocol@retry 005E                          ??_Default_ISR 005F  
                   __end_of_r_protocol 32E0                            _uart1RxHead 003A  
                          _uart1TxHead 003D                            _uart2RxHead 0034  
                          _uart1RxTail 0039                            _uart2TxHead 0037  
                          _uart1TxTail 003C                            _uart2RxTail 0033  
                          _uart2TxTail 0036                           _wait_lcd_set 59A2  
                   _EXT_INT_Initialize 4FFA   __end_of_TMR6_DefaultInterruptHandler 5162  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 511C  
                   __end_of_t_protocol 3A7A   __end_of_ADCC_DefaultInterruptHandler 59BE  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 59BC  
                             intlevel2 0000                      _send_lcd_cmd_long 5406  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4AA6  
              __end_of_NCO1_Initialize 585A                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 59A2                             _UART1_Read 5222  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 599A  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 0035  
                     _send_lcd_cmd_dma 4FAC                  TMR5_ISR@CountCallBack 002C  
              __end_of_secs_II_message 3E9E       __end_of_INT1_SetInterruptHandler 55E6  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00F5  
             _UART1_TxInterruptHandler 000D                        t_protocol@retry 0030  
            __end_of_send_lcd_cmd_long 542E                    __end_of_Default_ISR 59B6  
       __end_of_PIN_MANAGER_Initialize 4A0A                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 52DA              __size_of_UART2_Initialize 005E  
