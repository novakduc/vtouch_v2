

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov  8 22:52:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=4,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=4,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=4,class=CODE,delta=1
   163                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   164                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   165                           	psect	text142,global,reloc=4,class=CODE,delta=1
   166                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   167                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   168  0000                     
   169                           ; Version 2.10
   170                           ; Generated 31/07/2019 GMT
   171                           ; 
   172                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   173                           ; All rights reserved.
   174                           ; 
   175                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   176                           ; 
   177                           ; Redistribution and use in source and binary forms, with or without modification, are
   178                           ; permitted provided that the following conditions are met:
   179                           ; 
   180                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   181                           ;        conditions and the following disclaimer.
   182                           ; 
   183                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   184                           ;        of conditions and the following disclaimer in the documentation and/or other
   185                           ;        materials provided with the distribution.
   186                           ; 
   187                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   188                           ;        software without specific prior written permission.
   189                           ; 
   190                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   191                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   192                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   193                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   194                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   195                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   196                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   197                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   198                           ; 
   199                           ; 
   200                           ; Code-generator required, PIC18F57K42 Definitions
   201                           ; 
   202                           ; SFR Addresses
   203  0000                     
   204 ;;_mode	offset	0
   205 ;;_channel	offset=-1 (param)
   206 ;;_s	offset=-2 (param)
   207 ;;_cmd	offset=-1 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_data	offset=-1 (param)
   210 ;;__this	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_i	offset	0
   213 ;;_lp_speed	offset	0
   214 ;;_new	offset=-4 (param)
   215 ;;_bn	offset=-5 (param)
   216 ;;_slow	offset=-6 (param)
   217 ;;_chan	offset=-1 (param)
   218 ;;_to_what	offset=-2 (param)
   219 ;;_u	offset	0
   220 ;;_s	offset=-2 (param)
   221 ;;_index	offset=-1 (param)
   222 ;;_arg	offset	0
   223 ;;_exp	offset	4
   224 ;;_sign	offset=-1 (param)
   225 ;;_val	offset=-5 (param)
   226 ;;_flipper	offset=-1 (param)
   227 ;;_f	offset	0
   228 ;;_ap	offset	6
   229 ;;_s	offset=-3 (param)
   230 ;;_fmt	offset=-5 (param)
   231 ;;_line	offset=-1 (param)
   232 ;;_vterm	offset=-2 (param)
   233 ;;_numMilliseconds	offset=-2 (param)
   234 ;;_vterm	offset=-1 (param)
   235 ;;_r	offset=-1 (param)
   236 ;;_c	offset=-2 (param)
   237 ;;_strPtr	offset=-4 (param)
   238 ;;_strPtr	offset=-1 (param)
   239 ;;_delay	offset=-4 (param)
   240 ;;_strPtr	offset=-2 (param)
   241 ;;__this	offset=-2 (param)
   242 ;;_clearBuffer	offset=-3 (param)
   243 ;;_s	offset	0
   244 ;;_k	offset	2
   245 ;;_dest	offset=-2 (param)
   246 ;;_c	offset=-4 (param)
   247 ;;_n	offset=-6 (param)
   248 ;;_ap	offset	0
   249 ;;_fmt	offset=-3 (param)
   250 ;;_cfmt	offset	0
   251 ;;_fp	offset=-2 (param)
   252 ;;_fmt	offset=-4 (param)
   253 ;;_ap	offset=-6 (param)
   254 ;;_vfpfcnvrt$4117	offset	0
   255 ;;_vfpfcnvrt$4123	offset	2
   256 ;;_vfpfcnvrt$4116	offset	4
   257 ;;_llu	offset	6
   258 ;;_ll	offset	14
   259 ;;_f	offset	22
   260 ;;_ct	offset	26
   261 ;;_cp	offset	29
   262 ;;_c	offset	31
   263 ;;_fp	offset=-2 (param)
   264 ;;_fmt	offset=-4 (param)
   265 ;;_ap	offset=-6 (param)
   266 ;;_xtoa$4102	offset	0
   267 ;;_xtoa$4101	offset	2
   268 ;;_n	offset	4
   269 ;;_c	offset	12
   270 ;;_i	offset	14
   271 ;;_w	offset	16
   272 ;;_p	offset	18
   273 ;;_fp	offset=-2 (param)
   274 ;;_d	offset=-10 (param)
   275 ;;_x	offset=-11 (param)
   276 ;;_toupper$4762	offset	0
   277 ;;_c	offset=-2 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_c	offset=-2 (param)
   280 ;;_r	offset	0
   281 ;;_l	offset	2
   282 ;;__l	offset=-2 (param)
   283 ;;__r	offset=-4 (param)
   284 ;;_n	offset=-6 (param)
   285 ;;_nuls	offset	0
   286 ;;_l	offset	7
   287 ;;_p	offset	9
   288 ;;_cp	offset	11
   289 ;;_w	offset	13
   290 ;;_i	offset	15
   291 ;;_fp	offset=-2 (param)
   292 ;;_s	offset=-4 (param)
   293 ;;_efgtoa$4081	offset	0
   294 ;;_efgtoa$4080	offset	2
   295 ;;_efgtoa$4079	offset	4
   296 ;;_efgtoa$4075	offset	6
   297 ;;_efgtoa$4071	offset	8
   298 ;;_efgtoa$4070	offset	10
   299 ;;_u	offset	12
   300 ;;_g	offset	16
   301 ;;_l	offset	20
   302 ;;_h	offset	24
   303 ;;_ou	offset	28
   304 ;;_n	offset	32
   305 ;;_e	offset	34
   306 ;;_i	offset	36
   307 ;;_w	offset	38
   308 ;;_p	offset	40
   309 ;;_sign	offset	42
   310 ;;_d	offset	44
   311 ;;_ne	offset	46
   312 ;;_m	offset	48
   313 ;;_pp	offset	50
   314 ;;_t	offset	52
   315 ;;_mode	offset	54
   316 ;;_nmode	offset	55
   317 ;;_fp	offset=-2 (param)
   318 ;;_f	offset=-6 (param)
   319 ;;_c	offset=-7 (param)
   320 ;;_tolower$4747	offset	0
   321 ;;_c	offset=-2 (param)
   322 ;;_c	offset=-2 (param)
   323 ;;_d	offset	0
   324 ;;_s	offset	2
   325 ;;_dest	offset=-2 (param)
   326 ;;_src	offset=-4 (param)
   327 ;;_u	offset	0
   328 ;;_m	offset	4
   329 ;;_e	offset	8
   330 ;;_x	offset=-4 (param)
   331 ;;_u	offset	0
   332 ;;_e	offset	4
   333 ;;_x	offset=-4 (param)
   334 ;;_exp1	offset	0
   335 ;;_sign1	offset	1
   336 ;;_f1	offset=-4 (param)
   337 ;;_b	offset=-4 (param)
   338 ;;_a	offset=-8 (param)
   339 ;;_grs	offset	0
   340 ;;_bexp	offset	1
   341 ;;_aexp	offset	2
   342 ;;_signs	offset	3
   343 ;;_b	offset=-4 (param)
   344 ;;_a	offset=-8 (param)
   345 ;;_f1	offset=-4 (param)
   346 ;;_prod	offset	0
   347 ;;_grs	offset	4
   348 ;;_temp	offset	8
   349 ;;_bexp	offset	10
   350 ;;_aexp	offset	11
   351 ;;_sign	offset	12
   352 ;;_b	offset=-4 (param)
   353 ;;_a	offset=-8 (param)
   354 ;;_ff1	offset=-4 (param)
   355 ;;_ff2	offset=-8 (param)
   356 ;;_ff1	offset=-4 (param)
   357 ;;_ff2	offset=-8 (param)
   358 ;;_grs	offset	0
   359 ;;_rem	offset	4
   360 ;;_new_exp	offset	8
   361 ;;_aexp	offset	10
   362 ;;_bexp	offset	11
   363 ;;_sign	offset	12
   364 ;;_b	offset=-4 (param)
   365 ;;_a	offset=-8 (param)
   366 ;;_sign	offset	0
   367 ;;_counter	offset	1
   368 ;;_dividend	offset=-2 (param)
   369 ;;_divisor	offset=-4 (param)
   370 ;;_quotient	offset	0
   371 ;;_sign	offset	2
   372 ;;_counter	offset	3
   373 ;;_dividend	offset=-2 (param)
   374 ;;_divisor	offset=-4 (param)
   375 ;;_dtoa$4047	offset	0
   376 ;;_n	offset	2
   377 ;;_i	offset	10
   378 ;;_s	offset	12
   379 ;;_w	offset	14
   380 ;;_p	offset	16
   381 ;;_fp	offset=-2 (param)
   382 ;;_d	offset=-10 (param)
   383 ;;_a	offset=-2 (param)
   384 ;;_sign	offset	0
   385 ;;_counter	offset	1
   386 ;;_dividend	offset=-8 (param)
   387 ;;_divisor	offset=-16 (param)
   388 ;;_quotient	offset	0
   389 ;;_sign	offset	8
   390 ;;_counter	offset	9
   391 ;;_dividend	offset=-8 (param)
   392 ;;_divisor	offset=-16 (param)
   393 ;;_w	offset	0
   394 ;;_fp	offset=-2 (param)
   395 ;;_c	offset=-3 (param)
   396 ;;_w	offset	0
   397 ;;_i	offset	2
   398 ;;_fp	offset=-2 (param)
   399 ;;_buf	offset=-4 (param)
   400 ;;_p	offset=-6 (param)
   401 ;;_a	offset	0
   402 ;;_s	offset=-2 (param)
   403 ;;_i	offset	0
   404 ;;_c	offset	2
   405 ;;_s	offset=-2 (param)
   406 ;;_fp	offset=-4 (param)
   407 ;;_c	offset=-2 (param)
   408 ;;_fp	offset=-4 (param)
   409 ;;_c	offset=-1 (param)
   410 ;;__this	offset=-2 (param)
   411 ;;_c	offset=-3 (param)
   412 ;;_atoi$4600	offset	0
   413 ;;_atoi$4598	offset	2
   414 ;;_atoi$4599	offset	4
   415 ;;_n	offset	5
   416 ;;_neg	offset	7
   417 ;;_s	offset=-2 (param)
   418 ;;_isspace$4638	offset	0
   419 ;;_c	offset=-2 (param)
   420 ;;_c	offset=-2 (param)
   421 ;;_vterm	offset=-1 (param)
   422 ;;_new_response_info	offset=-1 (param)
   423 ;;_new_response_info	offset=-1 (param)
   424 ;;_level	offset=-2 (param)
   425 ;;_dutyValue	offset=-2 (param)
   426 ;;_timer	offset=-1 (param)
   427 ;;_timer	offset=-1 (param)
   428 ;;_count	offset=-3 (param)
   429 ;;_InterruptHandler	offset=-3 (param)
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_InterruptHandler	offset=-3 (param)
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_InterruptHandler	offset=-3 (param)
   435 ;;_state	offset	0
   436 ;;_InterruptHandler	offset=-3 (param)
   437 ;;_InterruptHandler	offset=-3 (param)
   438 ;;_InterruptHandler	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_timerVal	offset=-2 (param)
   441 ;;_channel	offset=-1 (param)
   442 ;;_i	offset	0
   443                           
   444                           	psect	idataBANK0
   445  0178EA                     __pidataBANK0:
   446                           	opt callstack 0
   447                           
   448                           ;initializer for _R
   449  0178EA  0000               	dw	0
   450  0178EC  0000               	dw	0
   451  0178EE  0000               	dw	0
   452  0178F0  0000               	dw	0
   453  0178F2  0000               	dw	0
   454  0178F4  0000               	dw	0
   455  0178F6  0000               	dw	0
   456  0178F8  0000               	dw	0
   457  0178FA  0000               	dw	0
   458  0178FC  0000               	dw	0
   459  0178FE  0000               	dw	0
   460  017900  0000               	dw	0
   461  017902  0000               	dw	0
   462  017904  0000               	dw	0
   463  017906  0000               	dw	0
   464  017908  0000               	dw	0
   465  01790A  D000               	dw	53248
   466  01790C  451B               	dw	17691
   467  01790E  8000               	dw	32768
   468  017910  451A               	dw	17690
   469  017912  00                 	db	0
   470  017913  0000               	dw	0
   471  017915  00                 	db	0
   472                           
   473                           ;initializer for stoa@F1166
   474  017916  28                 	db	40
   475  017917  6E                 	db	110
   476  017918  75                 	db	117
   477  017919  6C                 	db	108
   478  01791A  6C                 	db	108
   479  01791B  29                 	db	41
   480  01791C  00                 	db	0
   481                           
   482                           ;initializer for _port_data
   483  01791D  FF                 	db	255
   484  01791E  00                 	db	0
   485  01791F  FF                 	db	255
   486  017920  00                 	db	0
   487  017921  FF                 	db	255
   488  017922  00                 	db	0
   489  017923  FF                 	db	255
   490  017924  00                 	db	0
   491  017925  FF                 	db	255
   492  017926  00                 	db	0
   493  017927  FF                 	db	255
   494  017928  00                 	db	0
   495  017929  FF                 	db	255
   496  01792A  00                 	db	0
   497  01792B  FF                 	db	255
   498  01792C  00                 	db	0
   499                           
   500                           	psect	idataBANK1
   501  016A22                     __pidataBANK1:
   502                           	opt callstack 0
   503                           
   504                           ;initializer for _V
   505  016A22  00                 	db	0
   506  016A23  00                 	db	0
   507  016A24  00                 	db	0
   508  016A25  00                 	db	0
   509  016A26  00                 	db	0
   510  016A27  00                 	db	0
   511  016A28  00                 	db	0
   512  016A29  00                 	db	0
   513  016A2A  00                 	db	0
   514  016A2B  00                 	db	0
   515  016A2C  00                 	db	0
   516  016A2D  00                 	db	0
   517  016A2E  00                 	db	0
   518  016A2F  00                 	db	0
   519  016A30  00                 	db	0
   520  016A31  00                 	db	0
   521  016A32  00                 	db	0
   522  016A33  00                 	db	0
   523  016A34  00                 	db	0
   524  016A35  00                 	db	0
   525  016A36  00                 	db	0
   526  016A37  00                 	db	0
   527  016A38  00                 	db	0
   528  016A39  00                 	db	0
   529  016A3A  00                 	db	0
   530  016A3B  00                 	db	0
   531  016A3C  00                 	db	0
   532  016A3D  00                 	db	0
   533  016A3E  00                 	db	0
   534  016A3F  00                 	db	0
   535  016A40  00                 	db	0
   536  016A41  00                 	db	0
   537  016A42  00                 	db	0
   538  016A43  00                 	db	0
   539  016A44  00                 	db	0
   540  016A45  00                 	db	0
   541  016A46  00                 	db	0
   542  016A47  00                 	db	0
   543  016A48  00                 	db	0
   544  016A49  00                 	db	0
   545  016A4A  00                 	db	0
   546  016A4B  00                 	db	0
   547  016A4C  00                 	db	0
   548  016A4D  00                 	db	0
   549  016A4E  00                 	db	0
   550  016A4F  00                 	db	0
   551  016A50  00                 	db	0
   552  016A51  00                 	db	0
   553  016A52  00                 	db	0
   554  016A53  00                 	db	0
   555  016A54  00                 	db	0
   556  016A55  00                 	db	0
   557  016A56  00                 	db	0
   558  016A57  00                 	db	0
   559  016A58  00                 	db	0
   560  016A59  00                 	db	0
   561  016A5A  00                 	db	0
   562  016A5B  00                 	db	0
   563  016A5C  00                 	db	0
   564  016A5D  00                 	db	0
   565  016A5E  00                 	db	0
   566  016A5F  00                 	db	0
   567  016A60  00                 	db	0
   568  016A61  00                 	db	0
   569  016A62  00                 	db	0
   570  016A63  00                 	db	0
   571  016A64  00                 	db	0
   572  016A65  00                 	db	0
   573  016A66  00                 	db	0
   574  016A67  00                 	db	0
   575  016A68  00                 	db	0
   576  016A69  00                 	db	0
   577  016A6A  00                 	db	0
   578  016A6B  00                 	db	0
   579  016A6C  00                 	db	0
   580  016A6D  00                 	db	0
   581  016A6E  00                 	db	0
   582  016A6F  00                 	db	0
   583  016A70  00                 	db	0
   584  016A71  00                 	db	0
   585  016A72  00                 	db	0
   586  016A73  00                 	db	0
   587  016A74  00                 	db	0
   588  016A75  00                 	db	0
   589  016A76  00                 	db	0
   590  016A77  00                 	db	0
   591  016A78  00                 	db	0
   592  016A79  00                 	db	0
   593  016A7A  00                 	db	0
   594  016A7B  00                 	db	0
   595  016A7C  00                 	db	0
   596  016A7D  00                 	db	0
   597  016A7E  00                 	db	0
   598  016A7F  00                 	db	0
   599  016A80  00                 	db	0
   600  016A81  00                 	db	0
   601  016A82  00                 	db	0
   602  016A83  00                 	db	0
   603  016A84  00                 	db	0
   604  016A85  00                 	db	0
   605  016A86  00                 	db	0
   606  016A87  00                 	db	0
   607  016A88  00                 	db	0
   608  016A89  00                 	db	0
   609  016A8A  00                 	db	0
   610  016A8B  00                 	db	0
   611  016A8C  00                 	db	0
   612  016A8D  00                 	db	0
   613  016A8E  00                 	db	0
   614  016A8F  00                 	db	0
   615  016A90  00                 	db	0
   616  016A91  00                 	db	0
   617  016A92  00                 	db	0
   618  016A93  00                 	db	0
   619  016A94  00                 	db	0
   620  016A95  00                 	db	0
   621  016A96  00                 	db	0
   622  016A97  00                 	db	0
   623  016A98  00                 	db	0
   624  016A99  00                 	db	0
   625  016A9A  00                 	db	0
   626  016A9B  00                 	db	0
   627  016A9C  00                 	db	0
   628  016A9D  00                 	db	0
   629  016A9E  00                 	db	0
   630  016A9F  00                 	db	0
   631  016AA0  00                 	db	0
   632  016AA1  00                 	db	0
   633  016AA2  00                 	db	0
   634  016AA3  0000               	dw	0
   635  016AA5  0000               	dw	0
   636  016AA7  0000               	dw	0
   637  016AA9  0000               	dw	0
   638  016AAB  00                 	db	0
   639  016AAC  00                 	db	0
   640  016AAD  00                 	db	0
   641  016AAE  00                 	db	0
   642  016AAF  00                 	db	0
   643  016AB0  00                 	db	0
   644  016AB1  0000               	dw	0
   645  016AB3  0000               	dw	0
   646  016AB5  0000               	dw	0
   647  016AB7  0000               	dw	0
   648  016AB9  0000               	dw	0
   649  016ABB  0000               	dw	0
   650  016ABD  00                 	db	0
   651  016ABE  00                 	db	0
   652  016ABF  00                 	db	0
   653  016AC0  00                 	db	0
   654  016AC1  00                 	db	0
   655  016AC2  00                 	db	0
   656  016AC3  00                 	db	0
   657  016AC4  00                 	db	0
   658  016AC5  00                 	db	0
   659  016AC6  00                 	db	0
   660  016AC7  0000               	dw	0
   661  016AC9  0000               	dw	0
   662  016ACB  2D                 	db	45
   663  016ACC  00                 	db	0
   664                           
   665                           	psect	mediumconst
   666  00FE72                     __pmediumconst:
   667                           	opt callstack 0
   668  00FE72  00                 	db	0
   669  00FE73                     _T:
   670                           	opt callstack 0
   671  00FE73  63                 	db	99
   672  00FE74  6F                 	db	111
   673  00FE75  6D                 	db	109
   674  00FE76  6D                 	db	109
   675  00FE77  61                 	db	97
   676  00FE78  6E                 	db	110
   677  00FE79  64                 	db	100
   678  00FE7A  73                 	db	115
   679  00FE7B  20                 	db	32
   680  00FE7C  31                 	db	49
   681  00FE7D  00                 	db	0
   682  00FE7E  00                 	db	0
   683  00FE7F  00                 	db	0
   684  00FE80  00                 	db	0
   685  00FE81  00                 	db	0
   686  00FE82  00                 	db	0
   687  00FE83  00                 	db	0
   688  00FE84  00                 	db	0
   689  00FE85  64                 	db	100
   690  00FE86  69                 	db	105
   691  00FE87  73                 	db	115
   692  00FE88  70                 	db	112
   693  00FE89  6C                 	db	108
   694  00FE8A  61                 	db	97
   695  00FE8B  79                 	db	121
   696  00FE8C  73                 	db	115
   697  00FE8D  20                 	db	32
   698  00FE8E  31                 	db	49
   699  00FE8F  00                 	db	0
   700  00FE90  00                 	db	0
   701  00FE91  00                 	db	0
   702  00FE92  00                 	db	0
   703  00FE93  00                 	db	0
   704  00FE94  00                 	db	0
   705  00FE95  00                 	db	0
   706  00FE96  00                 	db	0
   707  00FE97  63                 	db	99
   708  00FE98  6F                 	db	111
   709  00FE99  6D                 	db	109
   710  00FE9A  6D                 	db	109
   711  00FE9B  61                 	db	97
   712  00FE9C  6E                 	db	110
   713  00FE9D  64                 	db	100
   714  00FE9E  73                 	db	115
   715  00FE9F  20                 	db	32
   716  00FEA0  32                 	db	50
   717  00FEA1  00                 	db	0
   718  00FEA2  00                 	db	0
   719  00FEA3  00                 	db	0
   720  00FEA4  00                 	db	0
   721  00FEA5  00                 	db	0
   722  00FEA6  00                 	db	0
   723  00FEA7  00                 	db	0
   724  00FEA8  00                 	db	0
   725  00FEA9  64                 	db	100
   726  00FEAA  69                 	db	105
   727  00FEAB  73                 	db	115
   728  00FEAC  70                 	db	112
   729  00FEAD  6C                 	db	108
   730  00FEAE  61                 	db	97
   731  00FEAF  79                 	db	121
   732  00FEB0  73                 	db	115
   733  00FEB1  20                 	db	32
   734  00FEB2  32                 	db	50
   735  00FEB3  00                 	db	0
   736  00FEB4  00                 	db	0
   737  00FEB5  00                 	db	0
   738  00FEB6  00                 	db	0
   739  00FEB7  00                 	db	0
   740  00FEB8  00                 	db	0
   741  00FEB9  00                 	db	0
   742  00FEBA  00                 	db	0
   743  00FEBB  63                 	db	99
   744  00FEBC  6F                 	db	111
   745  00FEBD  6D                 	db	109
   746  00FEBE  6D                 	db	109
   747  00FEBF  61                 	db	97
   748  00FEC0  6E                 	db	110
   749  00FEC1  64                 	db	100
   750  00FEC2  73                 	db	115
   751  00FEC3  20                 	db	32
   752  00FEC4  33                 	db	51
   753  00FEC5  00                 	db	0
   754  00FEC6  00                 	db	0
   755  00FEC7  00                 	db	0
   756  00FEC8  00                 	db	0
   757  00FEC9  00                 	db	0
   758  00FECA  00                 	db	0
   759  00FECB  00                 	db	0
   760  00FECC  00                 	db	0
   761  00FECD  64                 	db	100
   762  00FECE  69                 	db	105
   763  00FECF  73                 	db	115
   764  00FED0  70                 	db	112
   765  00FED1  6C                 	db	108
   766  00FED2  61                 	db	97
   767  00FED3  79                 	db	121
   768  00FED4  73                 	db	115
   769  00FED5  20                 	db	32
   770  00FED6  33                 	db	51
   771  00FED7  00                 	db	0
   772  00FED8  00                 	db	0
   773  00FED9  00                 	db	0
   774  00FEDA  00                 	db	0
   775  00FEDB  00                 	db	0
   776  00FEDC  00                 	db	0
   777  00FEDD  00                 	db	0
   778  00FEDE  00                 	db	0
   779  00FEDF  63                 	db	99
   780  00FEE0  6F                 	db	111
   781  00FEE1  6D                 	db	109
   782  00FEE2  6D                 	db	109
   783  00FEE3  61                 	db	97
   784  00FEE4  6E                 	db	110
   785  00FEE5  64                 	db	100
   786  00FEE6  73                 	db	115
   787  00FEE7  20                 	db	32
   788  00FEE8  34                 	db	52
   789  00FEE9  00                 	db	0
   790  00FEEA  00                 	db	0
   791  00FEEB  00                 	db	0
   792  00FEEC  00                 	db	0
   793  00FEED  00                 	db	0
   794  00FEEE  00                 	db	0
   795  00FEEF  00                 	db	0
   796  00FEF0  00                 	db	0
   797  00FEF1  64                 	db	100
   798  00FEF2  69                 	db	105
   799  00FEF3  73                 	db	115
   800  00FEF4  70                 	db	112
   801  00FEF5  6C                 	db	108
   802  00FEF6  61                 	db	97
   803  00FEF7  79                 	db	121
   804  00FEF8  73                 	db	115
   805  00FEF9  20                 	db	32
   806  00FEFA  34                 	db	52
   807  00FEFB  00                 	db	0
   808  00FEFC  00                 	db	0
   809  00FEFD  00                 	db	0
   810  00FEFE  00                 	db	0
   811  00FEFF  00                 	db	0
   812  00FF00  00                 	db	0
   813  00FF01  00                 	db	0
   814  00FF02  00                 	db	0
   815  00FF03                     __end_of_T:
   816                           	opt callstack 0
   817  0000                     _IVTADL	set	14493
   818  0000                     _IVTADH	set	14494
   819  0000                     _IVTADU	set	14495
   820  0000                     _PIR4bits	set	14756
   821  0000                     _PIE8bits	set	14744
   822  0000                     _PIR8bits	set	14760
   823  0000                     _SCANPR	set	14839
   824  0000                     _DMA2PR	set	14836
   825  0000                     _DMA1PR	set	14835
   826  0000                     _MAINPR	set	14834
   827  0000                     _ISRPR	set	14833
   828  0000                     _PIE2bits	set	14738
   829  0000                     _PIR2bits	set	14754
   830  0000                     _PIE9bits	set	14745
   831  0000                     _PIR9bits	set	14761
   832  0000                     _PIE6bits	set	14742
   833  0000                     _PIE3bits	set	14739
   834  0000                     _PMD7	set	14791
   835  0000                     _PMD6	set	14790
   836  0000                     _PMD5	set	14789
   837  0000                     _PMD4	set	14788
   838  0000                     _PMD3	set	14787
   839  0000                     _PMD2	set	14786
   840  0000                     _PMD1	set	14785
   841  0000                     _PMD0	set	14784
   842  0000                     _OSCTUNE	set	14814
   843  0000                     _OSCFRQ	set	14815
   844  0000                     _OSCEN	set	14813
   845  0000                     _OSCCON3	set	14811
   846  0000                     _OSCCON1	set	14809
   847  0000                     _IPR8bits	set	14728
   848  0000                     _IPR9bits	set	14729
   849  0000                     _IPR5bits	set	14725
   850  0000                     _IPR1bits	set	14721
   851  0000                     _IPR3bits	set	14723
   852  0000                     _IPR6bits	set	14726
   853  0000                     _IPR2bits	set	14722
   854  0000                     _PIE5bits	set	14741
   855  0000                     _PIE1bits	set	14737
   856  0000                     _PIR5bits	set	14757
   857  0000                     _PIR1bits	set	14753
   858  0000                     _PLLR	set	118496
   859  0000                     _SPI1SDIPPS	set	15071
   860  0000                     _U1RXPPS	set	15077
   861  0000                     _RC6PPS	set	14870
   862  0000                     _RC5PPS	set	14869
   863  0000                     _INT1PPS	set	15041
   864  0000                     _RD1PPS	set	14873
   865  0000                     _INT0PPS	set	15040
   866  0000                     _RC3PPS	set	14867
   867  0000                     _RB6PPS	set	14862
   868  0000                     _SPI1SCKPPS	set	15070
   869  0000                     _U2RXPPS	set	15080
   870  0000                     _SLRCONF	set	14995
   871  0000                     _SLRCONE	set	14979
   872  0000                     _SLRCOND	set	14963
   873  0000                     _SLRCONC	set	14947
   874  0000                     _SLRCONB	set	14931
   875  0000                     _SLRCONA	set	14915
   876  0000                     _ODCOND	set	14962
   877  0000                     _ODCONC	set	14946
   878  0000                     _ODCONB	set	14930
   879  0000                     _ODCONA	set	14914
   880  0000                     _ODCONF	set	14994
   881  0000                     _ODCONE	set	14978
   882  0000                     _WPUC	set	14945
   883  0000                     _WPUA	set	14913
   884  0000                     _WPUB	set	14929
   885  0000                     _WPUE	set	14977
   886  0000                     _WPUF	set	14993
   887  0000                     _WPUD	set	14961
   888  0000                     _ANSELA	set	14912
   889  0000                     _ANSELF	set	14992
   890  0000                     _ANSELE	set	14976
   891  0000                     _ANSELB	set	14928
   892  0000                     _ANSELC	set	14944
   893  0000                     _ANSELD	set	14960
   894  0000                     _DMA2SSA	set	15321
   895  0000                     _DMA1SSA	set	15353
   896  0000                     _DMA2DSZ	set	15310
   897  0000                     _DMA2SSZ	set	15319
   898  0000                     _DMA2DSA	set	15312
   899  0000                     _DMA1DSZ	set	15342
   900  0000                     _DMA1SSZ	set	15351
   901  0000                     _DMA1DSA	set	15344
   902  0000                     _DMA1CON0bits	set	15356
   903  0000                     _DMA1CON1bits	set	15357
   904  0000                     _DMA2CON0	set	15324
   905  0000                     _DMA2AIRQ	set	15326
   906  0000                     _DMA2SIRQ	set	15327
   907  0000                     _DMA2CON1	set	15325
   908  0000                     _DMA1CON0	set	15356
   909  0000                     _DMA1AIRQ	set	15358
   910  0000                     _DMA1SIRQ	set	15359
   911  0000                     _DMA1CON1	set	15357
   912  0000                     _CLKRCON	set	15589
   913  0000                     _CLKRCLK	set	15590
   914  0000                     _SPI1INTFbits	set	15642
   915  0000                     _SPI1RXB	set	15632
   916  0000                     _SPI1TXB	set	15633
   917  0000                     _SPI1TCNTL	set	15634
   918  0000                     _SPI1CON0	set	15636
   919  0000                     _SPI1CLK	set	15644
   920  0000                     _SPI1BAUD	set	15641
   921  0000                     _SPI1CON2	set	15638
   922  0000                     _SPI1CON1	set	15637
   923  0000                     _U2RXB	set	15824
   924  0000                     _U2TXB	set	15826
   925  0000                     _U2ERRIE	set	15842
   926  0000                     _U2ERRIR	set	15841
   927  0000                     _U2UIR	set	15840
   928  0000                     _U2FIFO	set	15839
   929  0000                     _U2BRGH	set	15838
   930  0000                     _U2BRGL	set	15837
   931  0000                     _U2CON2	set	15836
   932  0000                     _U2CON1	set	15835
   933  0000                     _U2CON0	set	15834
   934  0000                     _U2P3L	set	15832
   935  0000                     _U2P2L	set	15830
   936  0000                     _U2P1L	set	15828
   937  0000                     _U1RXB	set	15848
   938  0000                     _U1TXB	set	15850
   939  0000                     _U1ERRIE	set	15866
   940  0000                     _U1ERRIR	set	15865
   941  0000                     _U1UIR	set	15864
   942  0000                     _U1FIFO	set	15863
   943  0000                     _U1BRGH	set	15862
   944  0000                     _U1BRGL	set	15861
   945  0000                     _U1CON2	set	15860
   946  0000                     _U1CON1	set	15859
   947  0000                     _U1CON0	set	15858
   948  0000                     _U1P3H	set	15857
   949  0000                     _U1P3L	set	15856
   950  0000                     _U1P2H	set	15855
   951  0000                     _U1P2L	set	15854
   952  0000                     _U1P1H	set	15853
   953  0000                     _U1P1L	set	15852
   954  0000                     _FVRCON	set	16065
   955  0000                     _ADFLTRL	set	16102
   956  0000                     _ADFLTRH	set	16103
   957  0000                     _ADCON0bits	set	16120
   958  0000                     _ADCON0	set	16120
   959  0000                     _ADCLK	set	16127
   960  0000                     _ADACT	set	16126
   961  0000                     _ADREF	set	16125
   962  0000                     _ADSTAT	set	16124
   963  0000                     _ADCON3	set	16123
   964  0000                     _ADCON2	set	16122
   965  0000                     _ADCON1	set	16121
   966  0000                     _ADPREH	set	16119
   967  0000                     _ADPREL	set	16118
   968  0000                     _ADCAP	set	16117
   969  0000                     _ADACQH	set	16116
   970  0000                     _ADACQL	set	16115
   971  0000                     _ADPCH	set	16113
   972  0000                     _ADRPT	set	16108
   973  0000                     _ADACCU	set	16106
   974  0000                     _ADSTPTH	set	16101
   975  0000                     _ADSTPTL	set	16100
   976  0000                     _ADUTHH	set	16097
   977  0000                     _ADUTHL	set	16096
   978  0000                     _ADLTHH	set	16095
   979  0000                     _ADLTHL	set	16094
   980  0000                     _CCPTMRS1bits	set	16223
   981  0000                     _LATCbits	set	16316
   982  0000                     _LATDbits	set	16317
   983  0000                     _PORTBbits	set	16331
   984  0000                     _T2CON	set	16300
   985  0000                     _T2TMR	set	16298
   986  0000                     _T2PR	set	16299
   987  0000                     _T2RST	set	16303
   988  0000                     _T2HLT	set	16301
   989  0000                     _T2CLKCON	set	16302
   990  0000                     _PWM8DCL	set	16224
   991  0000                     _PWM8DCH	set	16225
   992  0000                     _PWM8CON	set	16226
   993  0000                     _LATEbits	set	16318
   994  0000                     _T5CONbits	set	16282
   995  0000                     _T5CON	set	16282
   996  0000                     _TMR5L	set	16280
   997  0000                     _TMR5H	set	16281
   998  0000                     _T5CLK	set	16285
   999  0000                     _T5GATE	set	16284
  1000  0000                     _T5GCON	set	16283
  1001  0000                     _T6CON	set	16276
  1002  0000                     _T6TMR	set	16274
  1003  0000                     _T6PR	set	16275
  1004  0000                     _T6RST	set	16279
  1005  0000                     _T6HLT	set	16277
  1006  0000                     _T6CLKCON	set	16278
  1007  0000                     _TRISD	set	16325
  1008  0000                     _TRISC	set	16324
  1009  0000                     _TRISB	set	16323
  1010  0000                     _TRISA	set	16322
  1011  0000                     _TRISF	set	16327
  1012  0000                     _TRISE	set	16326
  1013  0000                     _LATC	set	16316
  1014  0000                     _LATB	set	16315
  1015  0000                     _LATF	set	16319
  1016  0000                     _LATA	set	16314
  1017  0000                     _LATD	set	16317
  1018  0000                     _LATE	set	16318
  1019  0000                     _IVTLOCKbits	set	16340
  1020  0000                     _IVTLOCK	set	16340
  1021  0000                     _INTCON0bits	set	16338
  1022  0000                     _GIE	set	130711
  1023  00FF03                     
  1024                           ; BSR set to: 57
  1025  00FF03  20                 	db	32
  1026  00FF04  4D                 	db	77	;'M'
  1027  00FF05  65                 	db	101	;'e'
  1028  00FF06  73                 	db	115	;'s'
  1029  00FF07  67                 	db	103	;'g'
  1030  00FF08  20                 	db	32
  1031  00FF09  25                 	db	37
  1032  00FF0A  64                 	db	100	;'d'
  1033  00FF0B  20                 	db	32
  1034  00FF0C  53                 	db	83	;'S'
  1035  00FF0D  74                 	db	116	;'t'
  1036  00FF0E  61                 	db	97	;'a'
  1037  00FF0F  63                 	db	99	;'c'
  1038  00FF10  6B                 	db	107	;'k'
  1039  00FF11  20                 	db	32
  1040  00FF12  25                 	db	37
  1041  00FF13  64                 	db	100	;'d'
  1042  00FF14  20                 	db	32
  1043  00FF15  20                 	db	32
  1044  00FF16  20                 	db	32
  1045  00FF17  20                 	db	32
  1046  00FF18  20                 	db	32
  1047  00FF19  20                 	db	32
  1048  00FF1A  00                 	db	0
  1049  00FF1B                     STR_26:
  1050                           
  1051                           ; BSR set to: 57
  1052  00FF1B  20                 	db	32
  1053  00FF1C  20                 	db	32
  1054  00FF1D  20                 	db	32
  1055  00FF1E  20                 	db	32
  1056  00FF1F  20                 	db	32
  1057  00FF20  20                 	db	32
  1058  00FF21  20                 	db	32
  1059  00FF22  20                 	db	32
  1060  00FF23  20                 	db	32
  1061  00FF24  20                 	db	32
  1062  00FF25  20                 	db	32
  1063  00FF26  20                 	db	32
  1064  00FF27  20                 	db	32
  1065  00FF28  20                 	db	32
  1066  00FF29  20                 	db	32
  1067  00FF2A  20                 	db	32
  1068  00FF2B  20                 	db	32
  1069  00FF2C  20                 	db	32
  1070  00FF2D  00                 	db	0
  1071  00FF2E                     STR_16:
  1072                           
  1073                           ; BSR set to: 57
  1074  00FF2E  48                 	db	72	;'H'
  1075  00FF2F  45                 	db	69	;'E'
  1076  00FF30  4C                 	db	76	;'L'
  1077  00FF31  50                 	db	80	;'P'
  1078  00FF32  20                 	db	32
  1079  00FF33  25                 	db	37
  1080  00FF34  73                 	db	115	;'s'
  1081  00FF35  20                 	db	32
  1082  00FF36  20                 	db	32
  1083  00FF37  20                 	db	32
  1084  00FF38  20                 	db	32
  1085  00FF39  20                 	db	32
  1086  00FF3A  20                 	db	32
  1087  00FF3B  20                 	db	32
  1088  00FF3C  20                 	db	32
  1089  00FF3D  20                 	db	32
  1090  00FF3E  20                 	db	32
  1091  00FF3F  20                 	db	32
  1092  00FF40  00                 	db	0
  1093  00FF41                     
  1094                           ; BSR set to: 57
  1095  00FF41  44                 	db	68	;'D'
  1096  00FF42  49                 	db	73	;'I'
  1097  00FF43  53                 	db	83	;'S'
  1098  00FF44  50                 	db	80	;'P'
  1099  00FF45  4C                 	db	76	;'L'
  1100  00FF46  41                 	db	65	;'A'
  1101  00FF47  59                 	db	89	;'Y'
  1102  00FF48  20                 	db	32
  1103  00FF49  25                 	db	37
  1104  00FF4A  73                 	db	115	;'s'
  1105  00FF4B  20                 	db	32
  1106  00FF4C  20                 	db	32
  1107  00FF4D  20                 	db	32
  1108  00FF4E  20                 	db	32
  1109  00FF4F  20                 	db	32
  1110  00FF50  20                 	db	32
  1111  00FF51  20                 	db	32
  1112  00FF52  20                 	db	32
  1113  00FF53  00                 	db	0
  1114  00FF54                     STR_8:
  1115                           
  1116                           ; BSR set to: 57
  1117  00FF54  20                 	db	32
  1118  00FF55  56                 	db	86	;'V'
  1119  00FF56  54                 	db	84	;'T'
  1120  00FF57  45                 	db	69	;'E'
  1121  00FF58  52                 	db	82	;'R'
  1122  00FF59  4D                 	db	77	;'M'
  1123  00FF5A  20                 	db	32
  1124  00FF5B  23                 	db	35
  1125  00FF5C  32                 	db	50	;'2'
  1126  00FF5D  20                 	db	32
  1127  00FF5E  20                 	db	32
  1128  00FF5F  20                 	db	32
  1129  00FF60  20                 	db	32
  1130  00FF61  20                 	db	32
  1131  00FF62  20                 	db	32
  1132  00FF63  20                 	db	32
  1133  00FF64  00                 	db	0
  1134  00FF65                     STR_4:
  1135                           
  1136                           ; BSR set to: 57
  1137  00FF65  20                 	db	32
  1138  00FF66  4E                 	db	78	;'N'
  1139  00FF67  53                 	db	83	;'S'
  1140  00FF68  41                 	db	65	;'A'
  1141  00FF69  53                 	db	83	;'S'
  1142  00FF6A  50                 	db	80	;'P'
  1143  00FF6B  4F                 	db	79	;'O'
  1144  00FF6C  4F                 	db	79	;'O'
  1145  00FF6D  4B                 	db	75	;'K'
  1146  00FF6E  20                 	db	32
  1147  00FF6F  20                 	db	32
  1148  00FF70  20                 	db	32
  1149  00FF71  20                 	db	32
  1150  00FF72  20                 	db	32
  1151  00FF73  20                 	db	32
  1152  00FF74  20                 	db	32
  1153  00FF75  00                 	db	0
  1154  00FF76                     STR_1:
  1155                           
  1156                           ; BSR set to: 57
  1157  00FF76  20                 	db	32
  1158  00FF77  4D                 	db	77	;'M'
  1159  00FF78  42                 	db	66	;'B'
  1160  00FF79  4D                 	db	77	;'M'
  1161  00FF7A  43                 	db	67	;'C'
  1162  00FF7B  20                 	db	32
  1163  00FF7C  53                 	db	83	;'S'
  1164  00FF7D  4F                 	db	79	;'O'
  1165  00FF7E  4C                 	db	76	;'L'
  1166  00FF7F  41                 	db	65	;'A'
  1167  00FF80  52                 	db	82	;'R'
  1168  00FF81  4D                 	db	77	;'M'
  1169  00FF82  4F                 	db	79	;'O'
  1170  00FF83  4E                 	db	78	;'N'
  1171  00FF84  20                 	db	32
  1172  00FF85  20                 	db	32
  1173  00FF86  00                 	db	0
  1174  00FF87                     STR_5:
  1175                           
  1176                           ; BSR set to: 57
  1177  00FF87  20                 	db	32
  1178  00FF88  53                 	db	83	;'S'
  1179  00FF89  45                 	db	69	;'E'
  1180  00FF8A  51                 	db	81	;'Q'
  1181  00FF8B  55                 	db	85	;'U'
  1182  00FF8C  45                 	db	69	;'E'
  1183  00FF8D  4E                 	db	78	;'N'
  1184  00FF8E  43                 	db	67	;'C'
  1185  00FF8F  45                 	db	69	;'E'
  1186  00FF90  20                 	db	32
  1187  00FF91  54                 	db	84	;'T'
  1188  00FF92  45                 	db	69	;'E'
  1189  00FF93  53                 	db	83	;'S'
  1190  00FF94  54                 	db	84	;'T'
  1191  00FF95  20                 	db	32
  1192  00FF96  20                 	db	32
  1193  00FF97  00                 	db	0
  1194  00FF98                     STR_20:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FF98  76                 	db	118	;'v'
  1198  00FF99  74                 	db	116	;'t'
  1199  00FF9A  65                 	db	101	;'e'
  1200  00FF9B  72                 	db	114	;'r'
  1201  00FF9C  6D                 	db	109	;'m'
  1202  00FF9D  20                 	db	32
  1203  00FF9E  25                 	db	37
  1204  00FF9F  78                 	db	120	;'x'
  1205  00FFA0  3A                 	db	58	;':'
  1206  00FFA1  25                 	db	37
  1207  00FFA2  78                 	db	120	;'x'
  1208  00FFA3  20                 	db	32
  1209  00FFA4  20                 	db	32
  1210  00FFA5  20                 	db	32
  1211  00FFA6  00                 	db	0
  1212  00FFA7                     STR_2:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FFA7  20                 	db	32
  1216  00FFA8  56                 	db	86	;'V'
  1217  00FFA9  65                 	db	101	;'e'
  1218  00FFAA  72                 	db	114	;'r'
  1219  00FFAB  73                 	db	115	;'s'
  1220  00FFAC  69                 	db	105	;'i'
  1221  00FFAD  6F                 	db	111	;'o'
  1222  00FFAE  6E                 	db	110	;'n'
  1223  00FFAF  20                 	db	32
  1224  00FFB0  25                 	db	37
  1225  00FFB1  73                 	db	115	;'s'
  1226  00FFB2  20                 	db	32
  1227  00FFB3  20                 	db	32
  1228  00FFB4  20                 	db	32
  1229  00FFB5  00                 	db	0
  1230  00FFB6                     STR_9:
  1231                           
  1232                           ; BSR set to: 57
  1233  00FFB6  25                 	db	37
  1234  00FFB7  64                 	db	100	;'d'
  1235  00FFB8  20                 	db	32
  1236  00FFB9  25                 	db	37
  1237  00FFBA  32                 	db	50	;'2'
  1238  00FFBB  2E                 	db	46
  1239  00FFBC  32                 	db	50	;'2'
  1240  00FFBD  66                 	db	102	;'f'
  1241  00FFBE  20                 	db	32
  1242  00FFBF  20                 	db	32
  1243  00FFC0  20                 	db	32
  1244  00FFC1  23                 	db	35
  1245  00FFC2  00                 	db	0
  1246  00FFC3                     STR_14:
  1247                           
  1248                           ; BSR set to: 57
  1249  00FFC3  4E                 	db	78	;'N'
  1250  00FFC4  6F                 	db	111	;'o'
  1251  00FFC5  76                 	db	118	;'v'
  1252  00FFC6  20                 	db	32
  1253  00FFC7  20                 	db	32
  1254  00FFC8  38                 	db	56	;'8'
  1255  00FFC9  20                 	db	32
  1256  00FFCA  32                 	db	50	;'2'
  1257  00FFCB  30                 	db	48	;'0'
  1258  00FFCC  31                 	db	49	;'1'
  1259  00FFCD  39                 	db	57	;'9'
  1260  00FFCE  00                 	db	0
  1261  00FFCF                     STR_18:
  1262                           
  1263                           ; BSR set to: 57
  1264  00FFCF  25                 	db	37
  1265  00FFD0  73                 	db	115	;'s'
  1266  00FFD1  20                 	db	32
  1267  00FFD2  20                 	db	32
  1268  00FFD3  20                 	db	32
  1269  00FFD4  20                 	db	32
  1270  00FFD5  20                 	db	32
  1271  00FFD6  20                 	db	32
  1272  00FFD7  20                 	db	32
  1273  00FFD8  00                 	db	0
  1274  00FFD9                     STR_15:
  1275                           
  1276                           ; BSR set to: 57
  1277  00FFD9  31                 	db	49	;'1'
  1278  00FFDA  34                 	db	52	;'4'
  1279  00FFDB  3A                 	db	58	;':'
  1280  00FFDC  34                 	db	52	;'4'
  1281  00FFDD  36                 	db	54	;'6'
  1282  00FFDE  3A                 	db	58	;':'
  1283  00FFDF  31                 	db	49	;'1'
  1284  00FFE0  35                 	db	53	;'5'
  1285  00FFE1  00                 	db	0
  1286  00FFE2                     STR_33:
  1287                           
  1288                           ; BSR set to: 57
  1289  00FFE2  49                 	db	73	;'I'
  1290  00FFE3  4E                 	db	78	;'N'
  1291  00FFE4  46                 	db	70	;'F'
  1292  00FFE5  00                 	db	0
  1293  00FFE6                     STR_37:
  1294                           
  1295                           ; BSR set to: 57
  1296  00FFE6  4E                 	db	78	;'N'
  1297  00FFE7  41                 	db	65	;'A'
  1298  00FFE8  4E                 	db	78	;'N'
  1299  00FFE9  00                 	db	0
  1300  00FFEA                     STR_34:
  1301                           
  1302                           ; BSR set to: 57
  1303  00FFEA  69                 	db	105	;'i'
  1304  00FFEB  6E                 	db	110	;'n'
  1305  00FFEC  66                 	db	102	;'f'
  1306  00FFED  00                 	db	0
  1307  00FFEE                     STR_38:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFEE  6E                 	db	110	;'n'
  1311  00FFEF  61                 	db	97	;'a'
  1312  00FFF0  6E                 	db	110	;'n'
  1313  00FFF1  00                 	db	0
  1314  00FFF2                     STR_3:
  1315                           
  1316                           ; BSR set to: 57
  1317  00FFF2  30                 	db	48	;'0'
  1318  00FFF3  2E                 	db	46
  1319  00FFF4  39                 	db	57	;'9'
  1320  00FFF5  00                 	db	0
  1321  00FFF6                     STR_41:
  1322                           
  1323                           ; BSR set to: 57
  1324  00FFF6  6C                 	db	108	;'l'
  1325  00FFF7  66                 	db	102	;'f'
  1326  00FFF8  00                 	db	0
  1327  00FFF9                     STR_12:
  1328                           
  1329                           ; BSR set to: 57
  1330  00FFF9  25                 	db	37
  1331  00FFFA  63                 	db	99	;'c'
  1332  00FFFB  00                 	db	0
  1333  00FFFC                     STR_11:
  1334                           
  1335                           ; BSR set to: 57
  1336  00FFFC  25                 	db	37
  1337  00FFFD  73                 	db	115	;'s'
  1338  00FFFE  00                 	db	0
  1339  0000                     
  1340                           ; #config settings
  1341  00FFFF  00                 	db	0	; dummy byte at the end
  1342  0000                     
  1343                           	psect	cinit
  1344  016898                     __pcinit:
  1345                           	opt callstack 0
  1346  016898                     start_initialization:
  1347                           	opt callstack 0
  1348  016898                     __initialization:
  1349                           	opt callstack 0
  1350                           
  1351                           ; Initialize objects allocated to BANK1 (171 bytes)
  1352                           ; load TBLPTR registers with __pidataBANK1
  1353  016898  0E22               	movlw	low __pidataBANK1
  1354  01689A  6EF6               	movwf	tblptrl,c
  1355  01689C  0E6A               	movlw	high __pidataBANK1
  1356  01689E  6EF7               	movwf	tblptrh,c
  1357  0168A0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1358  0168A2  6EF8               	movwf	tblptru,c
  1359  0168A4  EE00  F100         	lfsr	0,__pdataBANK1
  1360  0168A8  EE20 F0AB          	lfsr	2,171
  1361  0168AC                     copy_data0:
  1362  0168AC  0009               	tblrd		*+
  1363  0168AE  006F FFD7 FFEE     	movff	tablat,postinc0
  1364  0168B4  50DD               	movf	postdec2,w,c
  1365  0168B6  50D9               	movf	fsr2l,w,c
  1366  0168B8  E1F9               	bnz	copy_data0
  1367                           
  1368                           ; Initialize objects allocated to BANK0 (67 bytes)
  1369                           ; load TBLPTR registers with __pidataBANK0
  1370  0168BA  0EEA               	movlw	low __pidataBANK0
  1371  0168BC  6EF6               	movwf	tblptrl,c
  1372  0168BE  0E78               	movlw	high __pidataBANK0
  1373  0168C0  6EF7               	movwf	tblptrh,c
  1374  0168C2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1375  0168C4  6EF8               	movwf	tblptru,c
  1376  0168C6  EE00  F060         	lfsr	0,__pdataBANK0
  1377  0168CA  EE20 F043          	lfsr	2,67
  1378  0168CE                     copy_data1:
  1379  0168CE  0009               	tblrd		*+
  1380  0168D0  006F FFD7 FFEE     	movff	tablat,postinc0
  1381  0168D6  50DD               	movf	postdec2,w,c
  1382  0168D8  50D9               	movf	fsr2l,w,c
  1383  0168DA  E1F9               	bnz	copy_data1
  1384                           
  1385                           ; Clear objects allocated to BANK6 (255 bytes)
  1386  0168DC  EE01  F200         	lfsr	0,__pbssBANK6
  1387  0168E0  EE20 F0FF          	lfsr	2,255
  1388  0168E4                     clear_0:
  1389  0168E4  6AEE               	clrf	postinc0,c
  1390  0168E6  50DD               	movf	postdec2,w,c
  1391  0168E8  50D9               	movf	fsr2l,w,c
  1392  0168EA  E1FC               	bnz	clear_0
  1393  0168EC  50DA               	movf	fsr2h,w,c
  1394  0168EE  E1FA               	bnz	clear_0
  1395                           
  1396                           ; Clear objects allocated to BANK5 (255 bytes)
  1397  0168F0  EE01  F100         	lfsr	0,__pbssBANK5
  1398  0168F4  EE20 F0FF          	lfsr	2,255
  1399  0168F8                     clear_1:
  1400  0168F8  6AEE               	clrf	postinc0,c
  1401  0168FA  50DD               	movf	postdec2,w,c
  1402  0168FC  50D9               	movf	fsr2l,w,c
  1403  0168FE  E1FC               	bnz	clear_1
  1404  016900  50DA               	movf	fsr2h,w,c
  1405  016902  E1FA               	bnz	clear_1
  1406                           
  1407                           ; Clear objects allocated to BANK4 (218 bytes)
  1408  016904  EE01  F000         	lfsr	0,__pbssBANK4
  1409  016908  0EDA               	movlw	218
  1410  01690A                     clear_2:
  1411  01690A  6AEE               	clrf	postinc0,c
  1412  01690C  06E8               	decf	wreg,f,c
  1413  01690E  E1FD               	bnz	clear_2
  1414                           
  1415                           ; Clear objects allocated to BANK3 (198 bytes)
  1416  016910  EE00  F300         	lfsr	0,__pbssBANK3
  1417  016914  0EC6               	movlw	198
  1418  016916                     clear_3:
  1419  016916  6AEE               	clrf	postinc0,c
  1420  016918  06E8               	decf	wreg,f,c
  1421  01691A  E1FD               	bnz	clear_3
  1422                           
  1423                           ; Clear objects allocated to BANK2 (236 bytes)
  1424  01691C  EE00  F200         	lfsr	0,__pbssBANK2
  1425  016920  0EEC               	movlw	236
  1426  016922                     clear_4:
  1427  016922  6AEE               	clrf	postinc0,c
  1428  016924  06E8               	decf	wreg,f,c
  1429  016926  E1FD               	bnz	clear_4
  1430                           
  1431                           ; Clear objects allocated to BANK1 (80 bytes)
  1432  016928  EE00  F1AB         	lfsr	0,__pbssBANK1
  1433  01692C  0E50               	movlw	80
  1434  01692E                     clear_5:
  1435  01692E  6AEE               	clrf	postinc0,c
  1436  016930  06E8               	decf	wreg,f,c
  1437  016932  E1FD               	bnz	clear_5
  1438                           
  1439                           ; Clear objects allocated to BANK0 (59 bytes)
  1440  016934  EE00  F0A3         	lfsr	0,__pbssBANK0
  1441  016938  0E3B               	movlw	59
  1442  01693A                     clear_6:
  1443  01693A  6AEE               	clrf	postinc0,c
  1444  01693C  06E8               	decf	wreg,f,c
  1445  01693E  E1FD               	bnz	clear_6
  1446                           
  1447                           ; Clear objects allocated to COMRAM (52 bytes)
  1448  016940  EE00  F001         	lfsr	0,__pbssCOMRAM
  1449  016944  0E34               	movlw	52
  1450  016946                     clear_7:
  1451  016946  6AEE               	clrf	postinc0,c
  1452  016948  06E8               	decf	wreg,f,c
  1453  01694A  E1FD               	bnz	clear_7
  1454                           
  1455                           ;
  1456                           ; Setup IVTBASE
  1457                           ;
  1458  01694C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1459  01694E  6ED5               	movwf	213,c
  1460  016950  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1461  016952  6ED6               	movwf	214,c
  1462  016954  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1463  016956  6ED7               	movwf	215,c
  1464  016958                     end_of_initialization:
  1465                           	opt callstack 0
  1466  016958                     __end_of__initialization:
  1467                           	opt callstack 0
  1468  016958  0100               	movlb	0
  1469  01695A  EF95  F09F         	goto	_main	;jump to C main() function
  1470                           
  1471                           	psect	bssCOMRAM
  1472  000001                     __pbssCOMRAM:
  1473                           	opt callstack 0
  1474  000001                     _TMR6_InterruptHandler:
  1475                           	opt callstack 0
  1476  000001                     	ds	3
  1477  000004                     _ADCC_ADTI_InterruptHandler:
  1478                           	opt callstack 0
  1479  000004                     	ds	3
  1480  000007                     _ADCC_ADI_InterruptHandler:
  1481                           	opt callstack 0
  1482  000007                     	ds	3
  1483  00000A                     _UART1_TxInterruptHandler:
  1484                           	opt callstack 0
  1485  00000A                     	ds	3
  1486  00000D                     _UART1_RxInterruptHandler:
  1487                           	opt callstack 0
  1488  00000D                     	ds	3
  1489  000010                     _UART2_TxInterruptHandler:
  1490                           	opt callstack 0
  1491  000010                     	ds	3
  1492  000013                     _UART2_RxInterruptHandler:
  1493                           	opt callstack 0
  1494  000013                     	ds	3
  1495  000016                     _INT1_InterruptHandler:
  1496                           	opt callstack 0
  1497  000016                     	ds	3
  1498  000019                     _INT0_InterruptHandler:
  1499                           	opt callstack 0
  1500  000019                     	ds	3
  1501  00001C                     _nout:
  1502                           	opt callstack 0
  1503  00001C                     	ds	2
  1504  00001E                     _width:
  1505                           	opt callstack 0
  1506  00001E                     	ds	2
  1507  000020                     _prec:
  1508                           	opt callstack 0
  1509  000020                     	ds	2
  1510  000022                     _flags:
  1511                           	opt callstack 0
  1512  000022                     	ds	2
  1513  000024                     TMR5_ISR@CountCallBack:
  1514                           	opt callstack 0
  1515  000024                     	ds	2
  1516  000026                     _timer5ReloadVal:
  1517                           	opt callstack 0
  1518  000026                     	ds	2
  1519  000028                     _mode_sw:
  1520                           	opt callstack 0
  1521  000028                     	ds	1
  1522  000029                     _uart2RxCount:
  1523                           	opt callstack 0
  1524  000029                     	ds	1
  1525  00002A                     _uart2RxTail:
  1526                           	opt callstack 0
  1527  00002A                     	ds	1
  1528  00002B                     _uart2RxHead:
  1529                           	opt callstack 0
  1530  00002B                     	ds	1
  1531  00002C                     _uart2TxBufferRemaining:
  1532                           	opt callstack 0
  1533  00002C                     	ds	1
  1534  00002D                     _uart2TxTail:
  1535                           	opt callstack 0
  1536  00002D                     	ds	1
  1537  00002E                     _uart2TxHead:
  1538                           	opt callstack 0
  1539  00002E                     	ds	1
  1540  00002F                     _uart1RxCount:
  1541                           	opt callstack 0
  1542  00002F                     	ds	1
  1543  000030                     _uart1RxTail:
  1544                           	opt callstack 0
  1545  000030                     	ds	1
  1546  000031                     _uart1RxHead:
  1547                           	opt callstack 0
  1548  000031                     	ds	1
  1549  000032                     _uart1TxBufferRemaining:
  1550                           	opt callstack 0
  1551  000032                     	ds	1
  1552  000033                     _uart1TxTail:
  1553                           	opt callstack 0
  1554  000033                     	ds	1
  1555  000034                     _uart1TxHead:
  1556                           	opt callstack 0
  1557  000034                     	ds	1
  1558                           
  1559                           	psect	bssBANK0
  1560  0000A3                     __pbssBANK0:
  1561                           	opt callstack 0
  1562  0000A3                     _tickCount:
  1563                           	opt callstack 0
  1564  0000A3                     	ds	24
  1565  0000BB                     _spi_link:
  1566                           	opt callstack 0
  1567  0000BB                     	ds	12
  1568  0000C7                     floorf@F524:
  1569                           	opt callstack 0
  1570  0000C7                     	ds	4
  1571  0000CB                     ___fpclassifyf@F463:
  1572                           	opt callstack 0
  1573  0000CB                     	ds	4
  1574  0000CF                     wdtdelay@dcount:
  1575                           	opt callstack 0
  1576  0000CF                     	ds	4
  1577  0000D3                     _TMR5_InterruptHandler:
  1578                           	opt callstack 0
  1579  0000D3                     	ds	3
  1580  0000D6                     _seed:
  1581                           	opt callstack 0
  1582  0000D6                     	ds	8
  1583                           
  1584                           	psect	dataBANK0
  1585  000060                     __pdataBANK0:
  1586                           	opt callstack 0
  1587  000060                     _R:
  1588                           	opt callstack 0
  1589  000060                     	ds	44
  1590  00008C                     stoa@F1166:
  1591                           	opt callstack 0
  1592  00008C                     	ds	7
  1593  000093                     _port_data:
  1594                           	opt callstack 0
  1595  000093                     	ds	16
  1596                           
  1597                           	psect	bssBANK1
  1598  0001AB                     __pbssBANK1:
  1599                           	opt callstack 0
  1600  0001AB                     _dbuf:
  1601                           	opt callstack 0
  1602  0001AB                     	ds	80
  1603                           
  1604                           	psect	dataBANK1
  1605  000100                     __pdataBANK1:
  1606                           	opt callstack 0
  1607  000100                     _V:
  1608                           	opt callstack 0
  1609  000100                     	ds	171
  1610                           
  1611                           	psect	bssBANK2
  1612  000200                     __pbssBANK2:
  1613                           	opt callstack 0
  1614  000200                     _C:
  1615                           	opt callstack 0
  1616  000200                     	ds	108
  1617  00026C                     lp_filter@smooth:
  1618                           	opt callstack 0
  1619  00026C                     	ds	64
  1620  0002AC                     _uart1TxBuffer:
  1621                           	opt callstack 0
  1622  0002AC                     	ds	64
  1623                           
  1624                           	psect	bssBANK3
  1625  000300                     __pbssBANK3:
  1626                           	opt callstack 0
  1627  000300                     _uart2TxBuffer:
  1628                           	opt callstack 0
  1629  000300                     	ds	64
  1630  000340                     _ring_buf2:
  1631                           	opt callstack 0
  1632  000340                     	ds	67
  1633  000383                     _ring_buf1:
  1634                           	opt callstack 0
  1635  000383                     	ds	67
  1636                           
  1637                           	psect	bssBANK4
  1638  000400                     __pbssBANK4:
  1639                           	opt callstack 0
  1640  000400                     _D:
  1641                           	opt callstack 0
  1642  000400                     	ds	218
  1643                           
  1644                           	psect	bssBANK5
  1645  000500                     __pbssBANK5:
  1646                           	opt callstack 0
  1647  000500                     _uart1RxBuffer:
  1648                           	opt callstack 0
  1649  000500                     	ds	255
  1650                           
  1651                           	psect	bssBANK6
  1652  000600                     __pbssBANK6:
  1653                           	opt callstack 0
  1654  000600                     _uart2RxBuffer:
  1655                           	opt callstack 0
  1656  000600                     	ds	255
  1657                           
  1658                           	psect	cstackBANK0
  1659  0000DE                     __pcstackBANK0:
  1660                           	opt callstack 0
  1661  0000DE                     ??_TMR6_ISR:
  1662                           
  1663                           ; 1 bytes @ 0x0
  1664  0000DE                     	ds	1
  1665  0000DF                     ??_TMR5_ISR:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  0000DF                     	ds	4
  1669                           
  1670                           	psect	cstackCOMRAM
  1671  000055                     __pcstackCOMRAM:
  1672                           	opt callstack 0
  1673  000055                     ??_ADCC_ISR:
  1674  000055                     
  1675                           ; 1 bytes @ 0x0
  1676  000055                     	ds	1
  1677  000056                     ??_ADCC_ThresholdISR:
  1678                           
  1679                           ; 1 bytes @ 0x1
  1680  000056                     	ds	5
  1681                           
  1682 ;;
  1683 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1684 ;;
  1685 ;; *************** function _main *****************
  1686 ;; Defined at:
  1687 ;;		line 142 in file "main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  mode            1  [STACK] enum E17005
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1  [STACK] void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels required when called:   19
  1707 ;; This function calls:
  1708 ;;		_SYSTEM_Initialize
  1709 ;;		_StartTimer
  1710 ;;		_TimerDone
  1711 ;;		_WaitMs
  1712 ;;		_check_adc_scan
  1713 ;;		_check_help
  1714 ;;		_clear_adc_scan
  1715 ;;		_convert_adc_data
  1716 ;;		_eaDogM_WriteCommand
  1717 ;;		_get_raw_result
  1718 ;;		_get_vterm_ptr
  1719 ;;		_init_display
  1720 ;;		_mode_lamp_dim
  1721 ;;		_set_display_info
  1722 ;;		_set_vterm
  1723 ;;		_sprintf
  1724 ;;		_srand
  1725 ;;		_start_adc_scan
  1726 ;;		_update_lcd
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text0
  1733  013F2A                     __ptext0:
  1734                           	opt callstack 0
  1735  013F2A                     _main:
  1736                           	opt callstack 0
  1737                           
  1738                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1739  013F2A  52E6               	movf	postinc1,f,c
  1740                           
  1741                           ;main.c: 144:  UI_STATES mode;;main.c: 147:  SYSTEM_Initialize();
  1742                           
  1743                           ;incstack = 0
  1744  013F2C  ECEA  F0BB         	call	_SYSTEM_Initialize	;wreg free
  1745                           
  1746                           ; BSR set to: 60
  1747                           ;main.c: 150:  (INTCON0bits.GIEH = 1);
  1748  013F30  8ED2               	bsf	210,7,c	;volatile
  1749                           
  1750                           ; BSR set to: 60
  1751                           ;main.c: 153:  (INTCON0bits.GIEL = 1);
  1752  013F32  8CD2               	bsf	210,6,c	;volatile
  1753                           
  1754                           ; BSR set to: 60
  1755                           ;main.c: 155:  V.ui_state = UI_STATE_INIT;
  1756  013F34  0101               	movlb	1	; () banked
  1757  013F36  6B00               	clrf	_V& (0+255),b	;volatile
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;main.c: 160:  WaitMs(300);
  1761  013F38  0E2C               	movlw	44
  1762  013F3A  6EE6               	movwf	postinc1,c
  1763  013F3C  0E01               	movlw	1
  1764  013F3E  6EE6               	movwf	postinc1,c
  1765  013F40  EC2E  F0BD         	call	_WaitMs	;wreg free
  1766                           
  1767                           ;main.c: 161:  if (PORTBbits.RB0) {
  1768  013F44  A0CB               	btfss	203,0,c	;volatile
  1769  013F46  D004               	goto	l9969
  1770                           
  1771                           ;main.c: 162:   mode = UI_STATE_HOST;
  1772                           ;stkvar	_mode @ sp[(-1)+0]
  1773  013F48  0EFF               	movlw	-1
  1774  013F4A  6AE3               	clrf	plusw1,c
  1775  013F4C  2AE3               	incf	plusw1,f,c
  1776                           
  1777                           ;main.c: 163:  } else {
  1778  013F4E  D004               	goto	l9971
  1779  013F50                     l9969:
  1780                           
  1781                           ;main.c: 164:   mode = UI_STATE_LOG;
  1782                           ;stkvar	_mode @ sp[(-1)+0]
  1783  013F50  0EFF               	movlw	-1
  1784  013F52  6AE3               	clrf	plusw1,c
  1785  013F54  80E3               	bsf	plusw1,0,c
  1786  013F56  82E3               	bsf	plusw1,1,c	;indir
  1787  013F58                     l9971:
  1788                           
  1789                           ;main.c: 167:  if (mode == UI_STATE_HOST) {
  1790                           ;stkvar	_mode @ sp[(-1)+0]
  1791  013F58  0EFF               	movlw	-1
  1792  013F5A  04E3               	decf	plusw1,w,c
  1793  013F5C  A4D8               	btfss	status,2,c
  1794  013F5E  D007               	goto	l1240
  1795                           
  1796                           ;main.c: 168:   do { LATDbits.LATD0 = 1; } while(0);
  1797  013F60  80BD               	bsf	189,0,c	;volatile
  1798                           
  1799                           ;main.c: 169:   V.mode_pwm = 70;
  1800  013F62  0E00               	movlw	0
  1801  013F64  0101               	movlb	1	; () banked
  1802  013F66  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1803  013F68  0E46               	movlw	70
  1804  013F6A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1805                           
  1806                           ;main.c: 170:  } else {
  1807  013F6C  D004               	goto	l9975
  1808  013F6E                     l1240:
  1809  013F6E  90BD               	bcf	189,0,c	;volatile
  1810                           
  1811                           ;main.c: 172:   V.mode_pwm = 0;
  1812  013F70  0101               	movlb	1	; () banked
  1813  013F72  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1814  013F74  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1815  013F76                     l9975:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 174:  mode_lamp_dim(V.mode_pwm);
  1819  013F76  0060  F657  FFE6   	movff	_V+149,postinc1
  1820  013F7C  0060  F65B  FFE6   	movff	_V+150,postinc1
  1821  013F82  EC7F  F0C0         	call	_mode_lamp_dim	;wreg free
  1822  013F86  D0CB               	goto	l10017
  1823  013F88                     l9977:
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;main.c: 185:    init_display();
  1827  013F88  EC6D  F0B3         	call	_init_display	;wreg free
  1828                           
  1829                           ; BSR set to: 61
  1830                           ;main.c: 186:    eaDogM_WriteCommand(0b00001100);
  1831  013F8C  0E0C               	movlw	12
  1832  013F8E  6EE6               	movwf	postinc1,c
  1833  013F90  ECD3  F0C0         	call	_eaDogM_WriteCommand	;wreg free
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 188:    V.ui_state = mode;
  1837                           ;stkvar	_mode @ sp[(-1)+0]
  1838  013F94  0EFF               	movlw	-1
  1839  013F96  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 189:    srand(1957);
  1843  013F9C  0EA5               	movlw	165
  1844  013F9E  6EE6               	movwf	postinc1,c
  1845  013FA0  0E07               	movlw	7
  1846  013FA2  6EE6               	movwf	postinc1,c
  1847  013FA4  EC64  F0BD         	call	_srand	;wreg free
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 190:    set_vterm(0);
  1851  013FA8  0E00               	movlw	0
  1852  013FAA  6EE6               	movwf	postinc1,c
  1853  013FAC  EC4A  F0C0         	call	_set_vterm	;wreg free
  1854                           
  1855                           ; BSR set to: 4
  1856                           ;main.c: 191:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1857  013FB0  0E76               	movlw	low STR_1
  1858  013FB2  6EE6               	movwf	postinc1,c
  1859  013FB4  0EFF               	movlw	high STR_1
  1860  013FB6  6EE6               	movwf	postinc1,c
  1861  013FB8  0E00               	movlw	0
  1862  013FBA  6EE6               	movwf	postinc1,c
  1863  013FBC  0E00               	movlw	0
  1864  013FBE  6EE6               	movwf	postinc1,c
  1865  013FC0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1866  013FC4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1867  013FCA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1868  013FD0  0E04               	movlw	4
  1869  013FD2  6EE6               	movwf	postinc1,c
  1870  013FD4  ECE8  F0B2         	call	_sprintf	;wreg free
  1871                           
  1872                           ;main.c: 192:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.9");
  1873  013FD8  0EF2               	movlw	low STR_3
  1874  013FDA  6EE6               	movwf	postinc1,c
  1875  013FDC  0EFF               	movlw	high STR_3
  1876  013FDE  6EE6               	movwf	postinc1,c
  1877  013FE0  0EA7               	movlw	low STR_2
  1878  013FE2  6EE6               	movwf	postinc1,c
  1879  013FE4  0EFF               	movlw	high STR_2
  1880  013FE6  6EE6               	movwf	postinc1,c
  1881  013FE8  0E00               	movlw	0
  1882  013FEA  6EE6               	movwf	postinc1,c
  1883  013FEC  0E01               	movlw	1
  1884  013FEE  6EE6               	movwf	postinc1,c
  1885  013FF0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1886  013FF4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1887  013FFA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1888  014000  0E06               	movlw	6
  1889  014002  6EE6               	movwf	postinc1,c
  1890  014004  ECE8  F0B2         	call	_sprintf	;wreg free
  1891                           
  1892                           ;main.c: 193:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1893  014008  0E65               	movlw	low STR_4
  1894  01400A  6EE6               	movwf	postinc1,c
  1895  01400C  0EFF               	movlw	high STR_4
  1896  01400E  6EE6               	movwf	postinc1,c
  1897  014010  0E00               	movlw	0
  1898  014012  6EE6               	movwf	postinc1,c
  1899  014014  0E02               	movlw	2
  1900  014016  6EE6               	movwf	postinc1,c
  1901  014018  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1902  01401C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1903  014022  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1904  014028  0E04               	movlw	4
  1905  01402A  6EE6               	movwf	postinc1,c
  1906  01402C  ECE8  F0B2         	call	_sprintf	;wreg free
  1907                           
  1908                           ;main.c: 194:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1909  014030  0E87               	movlw	low STR_5
  1910  014032  6EE6               	movwf	postinc1,c
  1911  014034  0EFF               	movlw	high STR_5
  1912  014036  6EE6               	movwf	postinc1,c
  1913  014038  0E02               	movlw	2
  1914  01403A  6EE6               	movwf	postinc1,c
  1915  01403C  0E00               	movlw	0
  1916  01403E  6EE6               	movwf	postinc1,c
  1917  014040  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1918  014044  0060  F0D7  FFE6   	movff	btemp,postinc1
  1919  01404A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1920  014050  0E04               	movlw	4
  1921  014052  6EE6               	movwf	postinc1,c
  1922  014054  ECE8  F0B2         	call	_sprintf	;wreg free
  1923                           
  1924                           ;main.c: 195:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.9");
  1925  014058  0EF2               	movlw	low STR_3
  1926  01405A  6EE6               	movwf	postinc1,c
  1927  01405C  0EFF               	movlw	high STR_3
  1928  01405E  6EE6               	movwf	postinc1,c
  1929  014060  0EA7               	movlw	low STR_2
  1930  014062  6EE6               	movwf	postinc1,c
  1931  014064  0EFF               	movlw	high STR_2
  1932  014066  6EE6               	movwf	postinc1,c
  1933  014068  0E02               	movlw	2
  1934  01406A  6EE6               	movwf	postinc1,c
  1935  01406C  0E01               	movlw	1
  1936  01406E  6EE6               	movwf	postinc1,c
  1937  014070  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1938  014074  0060  F0D7  FFE6   	movff	btemp,postinc1
  1939  01407A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1940  014080  0E06               	movlw	6
  1941  014082  6EE6               	movwf	postinc1,c
  1942  014084  ECE8  F0B2         	call	_sprintf	;wreg free
  1943                           
  1944                           ;main.c: 196:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1945  014088  0E54               	movlw	low STR_8
  1946  01408A  6EE6               	movwf	postinc1,c
  1947  01408C  0EFF               	movlw	high STR_8
  1948  01408E  6EE6               	movwf	postinc1,c
  1949  014090  0E02               	movlw	2
  1950  014092  6EE6               	movwf	postinc1,c
  1951  014094  0E02               	movlw	2
  1952  014096  6EE6               	movwf	postinc1,c
  1953  014098  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1954  01409C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1955  0140A2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1956  0140A8  0E04               	movlw	4
  1957  0140AA  6EE6               	movwf	postinc1,c
  1958  0140AC  ECE8  F0B2         	call	_sprintf	;wreg free
  1959                           
  1960                           ;main.c: 197:    update_lcd(0);
  1961  0140B0  0E00               	movlw	0
  1962  0140B2  6EE6               	movwf	postinc1,c
  1963  0140B4  EC61  F0B2         	call	_update_lcd	;wreg free
  1964                           
  1965                           ;main.c: 198:    WaitMs(3000);
  1966  0140B8  0EB8               	movlw	184
  1967  0140BA  6EE6               	movwf	postinc1,c
  1968  0140BC  0E0B               	movlw	11
  1969  0140BE  6EE6               	movwf	postinc1,c
  1970  0140C0  EC2E  F0BD         	call	_WaitMs	;wreg free
  1971                           
  1972                           ;main.c: 199:    StartTimer(TMR_DISPLAY, 250);
  1973  0140C4  0EFA               	movlw	250
  1974  0140C6  6EE6               	movwf	postinc1,c
  1975  0140C8  0E00               	movlw	0
  1976  0140CA  6EE6               	movwf	postinc1,c
  1977  0140CC  0E0A               	movlw	10
  1978  0140CE  6EE6               	movwf	postinc1,c
  1979  0140D0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1980                           
  1981                           ;main.c: 200:    StartTimer(TMR_ADC, 500);
  1982  0140D4  0EF4               	movlw	244
  1983  0140D6  6EE6               	movwf	postinc1,c
  1984  0140D8  0E01               	movlw	1
  1985  0140DA  6EE6               	movwf	postinc1,c
  1986  0140DC  0E01               	movlw	1
  1987  0140DE  6EE6               	movwf	postinc1,c
  1988  0140E0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1989                           
  1990                           ;main.c: 201:    StartTimer(TMR_INFO, 3000);
  1991  0140E4  0EB8               	movlw	184
  1992  0140E6  6EE6               	movwf	postinc1,c
  1993  0140E8  0E0B               	movlw	11
  1994  0140EA  6EE6               	movwf	postinc1,c
  1995  0140EC  0E07               	movlw	7
  1996  0140EE  6EE6               	movwf	postinc1,c
  1997  0140F0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1998                           
  1999                           ;main.c: 202:    StartTimer(TMR_FLIPPER, 1500);
  2000  0140F4  0EDC               	movlw	220
  2001  0140F6  6EE6               	movwf	postinc1,c
  2002  0140F8  0E05               	movlw	5
  2003  0140FA  6EE6               	movwf	postinc1,c
  2004  0140FC  0E0B               	movlw	11
  2005  0140FE  6EE6               	movwf	postinc1,c
  2006  014100  ECD8  F0BC         	call	_StartTimer	;wreg free
  2007                           
  2008                           ;main.c: 203:    StartTimer(TMR_HELPDIS, 3000);
  2009  014104  0EB8               	movlw	184
  2010  014106  6EE6               	movwf	postinc1,c
  2011  014108  0E0B               	movlw	11
  2012  01410A  6EE6               	movwf	postinc1,c
  2013  01410C  0E09               	movlw	9
  2014  01410E  6EE6               	movwf	postinc1,c
  2015  014110  ECD8  F0BC         	call	_StartTimer	;wreg free
  2016                           
  2017                           ;main.c: 205:    start_adc_scan();
  2018  014114  ECB1  F0B9         	call	_start_adc_scan	;wreg free
  2019                           
  2020                           ;main.c: 207:    break;
  2021  014118  D016               	goto	l10019
  2022  01411A                     l1249:
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;main.c: 214:    V.ui_state = UI_STATE_INIT;
  2026  01411A  6B00               	clrf	_V& (0+255),b	;volatile
  2027                           
  2028                           ;main.c: 215:    break;
  2029  01411C  D014               	goto	l10019
  2030  01411E                     l10017:
  2031  01411E  0101               	movlb	1	; () banked
  2032  014120  5100               	movf	_V& (0+255),w,b	;volatile
  2033  014122  6E3F               	movwf	(btemp+10)^0,c
  2034  014124  6A40               	clrf	(btemp+11)^0,c
  2035                           
  2036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2037                           ; Switch size 1, requested type "simple"
  2038                           ; Number of cases is 1, Range of values is 0 to 0
  2039                           ; switch strategies available:
  2040                           ; Name         Instructions Cycles
  2041                           ; simple_byte            4     3 (average)
  2042                           ;	Chosen strategy is simple_byte
  2043  014126  5040               	movf	(btemp+11)^0,w,c
  2044  014128  0A00               	xorlw	0	; case 0
  2045  01412A  A4D8               	btfss	status,2,c
  2046  01412C  D7F6               	goto	l1249
  2047                           
  2048                           ; BSR set to: 1
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 4, Range of values is 0 to 4
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           13     7 (average)
  2054                           ;	Chosen strategy is simple_byte
  2055  01412E  503F               	movf	(btemp+10)^0,w,c
  2056  014130  0A00               	xorlw	0	; case 0
  2057  014132  B4D8               	btfsc	status,2,c
  2058  014134  D729               	goto	l9977
  2059  014136  0A01               	xorlw	1	; case 1
  2060  014138  B4D8               	btfsc	status,2,c
  2061  01413A  D005               	goto	l10019
  2062  01413C  0A02               	xorlw	2	; case 3
  2063  01413E  B4D8               	btfsc	status,2,c
  2064  014140  D002               	goto	l10019
  2065  014142  0A07               	xorlw	7	; case 4
  2066  014144  D7EA               	goto	l1249
  2067  014146                     l10019:
  2068                           
  2069                           ;main.c: 218:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2070  014146  0E01               	movlw	1
  2071  014148  6EE6               	movwf	postinc1,c
  2072  01414A  EC8B  F0BF         	call	_TimerDone	;wreg free
  2073  01414E  5035               	movf	btemp^0,w,c
  2074  014150  B4D8               	btfsc	status,2,c
  2075  014152  D013               	goto	l10031
  2076  014154  EC17  F0C1         	call	_check_adc_scan	;wreg free
  2077  014158  5035               	movf	btemp^0,w,c
  2078  01415A  B4D8               	btfsc	status,2,c
  2079  01415C  D00E               	goto	l10031
  2080                           
  2081                           ;main.c: 222:    convert_adc_data();
  2082  01415E  ECA4  F0B8         	call	_convert_adc_data	;wreg free
  2083                           
  2084                           ;main.c: 226:    clear_adc_scan();
  2085  014162  EC1F  F0C1         	call	_clear_adc_scan	;wreg free
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 227:    start_adc_scan();
  2089  014166  ECB1  F0B9         	call	_start_adc_scan	;wreg free
  2090                           
  2091                           ;main.c: 228:    StartTimer(TMR_ADC, 500);
  2092  01416A  0EF4               	movlw	244
  2093  01416C  6EE6               	movwf	postinc1,c
  2094  01416E  0E01               	movlw	1
  2095  014170  6EE6               	movwf	postinc1,c
  2096  014172  0E01               	movlw	1
  2097  014174  6EE6               	movwf	postinc1,c
  2098  014176  ECD8  F0BC         	call	_StartTimer	;wreg free
  2099  01417A                     l10031:
  2100                           
  2101                           ;main.c: 235:   if (TimerDone(TMR_DISPLAY)) {
  2102                           
  2103                           ;main.c: 231:   if (V.ticks) {
  2104  01417A  0E0A               	movlw	10
  2105  01417C  6EE6               	movwf	postinc1,c
  2106  01417E  EC8B  F0BF         	call	_TimerDone	;wreg free
  2107  014182  5035               	movf	btemp^0,w,c
  2108  014184  B4D8               	btfsc	status,2,c
  2109  014186  D06B               	goto	l10047
  2110                           
  2111                           ;main.c: 236:    if (TimerDone(TMR_HELPDIS)) {
  2112  014188  0E09               	movlw	9
  2113  01418A  6EE6               	movwf	postinc1,c
  2114  01418C  EC8B  F0BF         	call	_TimerDone	;wreg free
  2115  014190  5035               	movf	btemp^0,w,c
  2116  014192  B4D8               	btfsc	status,2,c
  2117  014194  D004               	goto	l10039
  2118                           
  2119                           ;main.c: 237:     set_display_info(DIS_STR);
  2120  014196  0E00               	movlw	0
  2121  014198  6EE6               	movwf	postinc1,c
  2122  01419A  EC00  F0C0         	call	_set_display_info	;wreg free
  2123  01419E                     l10039:
  2124                           
  2125                           ;main.c: 239:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2126  01419E  0060  F803  FFE6   	movff	_C,postinc1
  2127  0141A4  0060  F807  FFE6   	movff	_C+1,postinc1
  2128  0141AA  0060  F80B  FFE6   	movff	_C+2,postinc1
  2129  0141B0  0060  F80F  FFE6   	movff	_C+3,postinc1
  2130  0141B6  0E00               	movlw	0
  2131  0141B8  6EE6               	movwf	postinc1,c
  2132  0141BA  ECF1  F0BF         	call	_get_raw_result	;wreg free
  2133  0141BE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2134  0141C4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2135  0141CA  0EB6               	movlw	low STR_9
  2136  0141CC  6EE6               	movwf	postinc1,c
  2137  0141CE  0EFF               	movlw	high STR_9
  2138  0141D0  6EE6               	movwf	postinc1,c
  2139  0141D2  0E00               	movlw	0
  2140  0141D4  6EE6               	movwf	postinc1,c
  2141  0141D6  0E01               	movlw	1
  2142  0141D8  6EE6               	movwf	postinc1,c
  2143  0141DA  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  2144  0141DE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2145  0141E4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2146  0141EA  0E0A               	movlw	10
  2147  0141EC  6EE6               	movwf	postinc1,c
  2148  0141EE  ECE8  F0B2         	call	_sprintf	;wreg free
  2149                           
  2150                           ;main.c: 240:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2151  0141F2  0060  F823  FFE6   	movff	_C+8,postinc1
  2152  0141F8  0060  F827  FFE6   	movff	_C+9,postinc1
  2153  0141FE  0060  F82B  FFE6   	movff	_C+10,postinc1
  2154  014204  0060  F82F  FFE6   	movff	_C+11,postinc1
  2155  01420A  0E02               	movlw	2
  2156  01420C  6EE6               	movwf	postinc1,c
  2157  01420E  ECF1  F0BF         	call	_get_raw_result	;wreg free
  2158  014212  0060  F0D7  FFE6   	movff	btemp,postinc1
  2159  014218  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2160  01421E  0EB6               	movlw	low STR_9
  2161  014220  6EE6               	movwf	postinc1,c
  2162  014222  0EFF               	movlw	high STR_9
  2163  014224  6EE6               	movwf	postinc1,c
  2164  014226  0E00               	movlw	0
  2165  014228  6EE6               	movwf	postinc1,c
  2166  01422A  0E02               	movlw	2
  2167  01422C  6EE6               	movwf	postinc1,c
  2168  01422E  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  2169  014232  0060  F0D7  FFE6   	movff	btemp,postinc1
  2170  014238  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2171  01423E  0E0A               	movlw	10
  2172  014240  6EE6               	movwf	postinc1,c
  2173  014242  ECE8  F0B2         	call	_sprintf	;wreg free
  2174                           
  2175                           ;main.c: 241:    StartTimer(TMR_DISPLAY, 250);
  2176  014246  0EFA               	movlw	250
  2177  014248  6EE6               	movwf	postinc1,c
  2178  01424A  0E00               	movlw	0
  2179  01424C  6EE6               	movwf	postinc1,c
  2180  01424E  0E0A               	movlw	10
  2181  014250  6EE6               	movwf	postinc1,c
  2182  014252  ECD8  F0BC         	call	_StartTimer	;wreg free
  2183                           
  2184                           ;main.c: 242:    update_lcd(0);
  2185  014256  0E00               	movlw	0
  2186  014258  6EE6               	movwf	postinc1,c
  2187  01425A  EC61  F0B2         	call	_update_lcd	;wreg free
  2188  01425E                     l10047:
  2189                           
  2190                           ;main.c: 248:   check_help(V.flipper);
  2191  01425E  0101               	movlb	1	; () banked
  2192  014260  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2193  014262  6EE6               	movwf	postinc1,c
  2194  014264  EC77  F0A9         	call	_check_help	;wreg free
  2195                           
  2196                           ;main.c: 253:   if (V.set_sequ) {
  2197  014268  0101               	movlb	1	; () banked
  2198  01426A  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2199  01426C  D758               	goto	l10017
  2200                           
  2201                           ; BSR set to: 1
  2202                           ;main.c: 254:    if (TimerDone(TMR_INFO)) {
  2203  01426E  0E07               	movlw	7
  2204  014270  6EE6               	movwf	postinc1,c
  2205  014272  EC8B  F0BF         	call	_TimerDone	;wreg free
  2206  014276  5035               	movf	btemp^0,w,c
  2207  014278  B4D8               	btfsc	status,2,c
  2208  01427A  D00B               	goto	l10059
  2209                           
  2210                           ;main.c: 255:     V.set_sequ = 0;
  2211  01427C  0101               	movlb	1	; () banked
  2212  01427E  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 256:     set_vterm(0);
  2216  014280  0E00               	movlw	0
  2217  014282  6EE6               	movwf	postinc1,c
  2218  014284  EC4A  F0C0         	call	_set_vterm	;wreg free
  2219                           
  2220                           ; BSR set to: 4
  2221                           ;main.c: 257:     update_lcd(0);
  2222  014288  0E00               	movlw	0
  2223  01428A  6EE6               	movwf	postinc1,c
  2224  01428C  EC61  F0B2         	call	_update_lcd	;wreg free
  2225                           
  2226                           ;main.c: 258:    } else {
  2227  014290  D746               	goto	l10017
  2228  014292                     l10059:
  2229                           
  2230                           ;main.c: 259:     set_vterm(2);
  2231  014292  0E02               	movlw	2
  2232  014294  6EE6               	movwf	postinc1,c
  2233  014296  EC4A  F0C0         	call	_set_vterm	;wreg free
  2234                           
  2235                           ; BSR set to: 4
  2236                           ;main.c: 260:     update_lcd(2);
  2237  01429A  0E02               	movlw	2
  2238  01429C  6EE6               	movwf	postinc1,c
  2239  01429E  EC61  F0B2         	call	_update_lcd	;wreg free
  2240  0142A2  D73D               	goto	l10017
  2241  0142A4                     __end_of_main:
  2242                           	opt callstack 0
  2243                           
  2244 ;; *************** function _start_adc_scan *****************
  2245 ;; Defined at:
  2246 ;;		line 33 in file "daq.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1  [STACK] _Bool 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/4
  2257 ;;		On exit  : 1/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    7
  2267 ;; This function calls:
  2268 ;;		_ADCC_SetADIInterruptHandler
  2269 ;;		_ADCC_SetADTIInterruptHandler
  2270 ;;		_ADCC_StartConversion
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text1
  2277  017362                     __ptext1:
  2278                           	opt callstack 0
  2279  017362                     _start_adc_scan:
  2280                           	opt callstack 23
  2281                           
  2282                           ;daq.c: 35:  if (R.done)
  2283                           
  2284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2285                           ;incstack = 0
  2286  017362  0100               	movlb	0	; () banked
  2287  017364  518B               	movf	(_R+43)& (0+255),w,b	;volatile
  2288  017366  A4D8               	btfss	status,2,c
  2289  017368  0012               	return	
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;daq.c: 38:  R.scan_index = 0;
  2293  01736A  6B88               	clrf	(_R+40)& (0+255),b	;volatile
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2297  01736C  013A               	movlb	58	; () banked
  2298  01736E  5140               	movf	64,w,b	;volatile
  2299  017370  006E F940  F035    	movff	14928,btemp	;volatile
  2300  017376  6A36               	clrf	(btemp+1)^0,c
  2301  017378  0060  F0D4  F036   	movff	btemp,btemp+1
  2302  01737E  6A35               	clrf	btemp^0,c
  2303  017380  2635               	addwf	btemp^0,f,c
  2304  017382  0E00               	movlw	0
  2305  017384  2236               	addwfc	(btemp+1)^0,f,c
  2306  017386  0E77               	movlw	119
  2307  017388  1435               	andwf	btemp^0,w,c
  2308  01738A  0100               	movlb	0	; () banked
  2309  01738C  6F89               	movwf	(_R+41)& (0+255),b	;volatile
  2310  01738E  0E3C               	movlw	60
  2311  017390  1436               	andwf	(btemp+1)^0,w,c
  2312  017392  6F8A               	movwf	(_R+42)& (0+255),b	;volatile
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2316  017394  0E1E               	movlw	low _adc_int_handler
  2317  017396  6EE6               	movwf	postinc1,c
  2318  017398  0E80               	movlw	high _adc_int_handler
  2319  01739A  6EE6               	movwf	postinc1,c
  2320  01739C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2321  01739E  6EE6               	movwf	postinc1,c
  2322  0173A0  EC28  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2323                           
  2324                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2325  0173A4  0E00               	movlw	low _adc_int_t_handler
  2326  0173A6  6EE6               	movwf	postinc1,c
  2327  0173A8  0E6E               	movlw	high _adc_int_t_handler
  2328  0173AA  6EE6               	movwf	postinc1,c
  2329  0173AC  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2330  0173AE  6EE6               	movwf	postinc1,c
  2331  0173B0  EC14  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2332                           
  2333                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  2334  0173B4  0100               	movlb	0	; () banked
  2335  0173B6  5188               	movf	(_R+40)& (0+255),w,b	;volatile
  2336  0173B8  0B0F               	andlw	15
  2337  0173BA  6EE6               	movwf	postinc1,c
  2338  0173BC  ECC2  F0C0         	call	_ADCC_StartConversion	;wreg free
  2339                           
  2340                           ; BSR set to: 62
  2341  0173C0  82BE               	bsf	190,1,c	;volatile
  2342                           
  2343                           ; BSR set to: 62
  2344  0173C2  84BE               	bsf	190,2,c	;volatile
  2345                           
  2346                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2347  0173C4  0012               	return		;funcret
  2348  0173C6                     __end_of_start_adc_scan:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _ADCC_StartConversion *****************
  2352 ;; Defined at:
  2353 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  channel         1  [STACK] enum E16136
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1  [STACK] void 
  2360 ;; Registers used:
  2361 ;;		fsr1l, fsr1h
  2362 ;; Tracked objects:
  2363 ;;		On entry : 3F/0
  2364 ;;		On exit  : 3F/3E
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    6
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_start_adc_scan
  2378 ;;		_adc_int_t_handler
  2379 ;; This function uses a reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text2
  2383  018184                     __ptext2:
  2384                           	opt callstack 0
  2385  018184                     _ADCC_StartConversion:
  2386                           	opt callstack 6
  2387                           
  2388                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2389                           ;stkvar	_channel @ sp[(0)+-1]
  2390                           
  2391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2392                           ;incstack = 0
  2393  018184  0EFF               	movlw	-1
  2394  018186  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2395                           
  2396                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2397  01818C  013E               	movlb	62	; () banked
  2398  01818E  8FF8               	bsf	248,7,b	;volatile
  2399                           
  2400                           ; BSR set to: 62
  2401                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2402  018190  81F8               	bsf	248,0,b	;volatile
  2403                           
  2404                           ; BSR set to: 62
  2405                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2406  018192  52E5               	movf	postdec1,f,c
  2407  018194  0012               	return		;funcret
  2408  018196                     __end_of_ADCC_StartConversion:
  2409                           	opt callstack 0
  2410                           
  2411 ;; *************** function _srand *****************
  2412 ;; Defined at:
  2413 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  s               2  [STACK] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1  [STACK] void 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2422 ;; Tracked objects:
  2423 ;;		On entry : 3F/0
  2424 ;;		On exit  : 3F/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    6
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text3
  2442  017AC8                     __ptext3:
  2443                           	opt callstack 0
  2444  017AC8                     _srand:
  2445                           	opt callstack 24
  2446                           
  2447                           ;stkvar	_s @ sp[(0)+-2]
  2448                           
  2449                           ; BSR set to: 62
  2450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2451                           ;incstack = 0
  2452  017AC8  0EFE               	movlw	-2
  2453  017ACA  50E3               	movf	plusw1,w,c
  2454  017ACC  0FFF               	addlw	255
  2455  017ACE  6E3F               	movwf	(btemp+10)^0,c
  2456  017AD0  0EFF               	movlw	-1
  2457  017AD2  006F FF8C  F040    	movff	plusw1,btemp+11
  2458  017AD8  0EFF               	movlw	255
  2459  017ADA  2240               	addwfc	(btemp+11)^0,f,c
  2460  017ADC  0060  F0FC  F0D6   	movff	btemp+10,_seed
  2461  017AE2  0060  F100  F0D7   	movff	btemp+11,_seed+1
  2462  017AE8  0100               	movlb	0	; () banked
  2463  017AEA  6BD8               	clrf	(_seed+2)& (0+255),b
  2464  017AEC  6BD9               	clrf	(_seed+3)& (0+255),b
  2465  017AEE  6BDA               	clrf	(_seed+4)& (0+255),b
  2466  017AF0  6BDB               	clrf	(_seed+5)& (0+255),b
  2467  017AF2  6BDC               	clrf	(_seed+6)& (0+255),b
  2468  017AF4  6BDD               	clrf	(_seed+7)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2472  017AF6  52E5               	movf	postdec1,f,c
  2473  017AF8  52E5               	movf	postdec1,f,c
  2474  017AFA  0012               	return		;funcret
  2475  017AFC                     __end_of_srand:
  2476                           	opt callstack 0
  2477                           
  2478 ;; *************** function _init_display *****************
  2479 ;; Defined at:
  2480 ;;		line 37 in file "eadog.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1  [STACK] void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/1
  2491 ;;		On exit  : 3F/3D
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    8
  2501 ;; This function calls:
  2502 ;;		_ringBufS_init
  2503 ;;		_send_lcd_cmd
  2504 ;;		_send_lcd_cmd_long
  2505 ;;		_wdtdelay
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text4
  2512  0166DA                     __ptext4:
  2513                           	opt callstack 0
  2514  0166DA                     _init_display:
  2515                           	opt callstack 22
  2516                           
  2517                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2518                           
  2519                           ; BSR set to: 0
  2520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2521                           ;incstack = 0
  2522  0166DA  0E83               	movlw	low _ring_buf1
  2523  0166DC  0100               	movlb	0	; () banked
  2524  0166DE  6FC1               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2525  0166E0  0E03               	movlw	high _ring_buf1
  2526  0166E2  6FC2               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2527                           
  2528                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2529  0166E4  0E40               	movlw	low _ring_buf2
  2530  0166E6  6FBF               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2531  0166E8  0E03               	movlw	high _ring_buf2
  2532  0166EA  6FC0               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2536  0166EC  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  2537  0166F2  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  2538  0166F8  EC60  F0BE         	call	_ringBufS_init	;wreg free
  2539                           
  2540                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2541  0166FC  0060  F2FF  FFE6   	movff	_spi_link+4,postinc1
  2542  016702  0060  F303  FFE6   	movff	_spi_link+5,postinc1
  2543  016708  EC60  F0BE         	call	_ringBufS_init	;wreg free
  2544                           
  2545                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2546  01670C  84BE               	bsf	190,2,c	;volatile
  2547  01670E  84BC               	bsf	188,2,c	;volatile
  2548                           
  2549                           ;eadog.c: 46:  wdtdelay(350000);
  2550  016710  0E30               	movlw	48
  2551  016712  6EE6               	movwf	postinc1,c
  2552  016714  0E57               	movlw	87
  2553  016716  6EE6               	movwf	postinc1,c
  2554  016718  0E05               	movlw	5
  2555  01671A  6EE6               	movwf	postinc1,c
  2556  01671C  0E00               	movlw	0
  2557  01671E  6EE6               	movwf	postinc1,c
  2558  016720  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2562  016724  0E39               	movlw	57
  2563  016726  6EE6               	movwf	postinc1,c
  2564  016728  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2568  01672C  0E1D               	movlw	29
  2569  01672E  6EE6               	movwf	postinc1,c
  2570  016730  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2574  016734  0E50               	movlw	80
  2575  016736  6EE6               	movwf	postinc1,c
  2576  016738  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2580  01673C  0E6C               	movlw	108
  2581  01673E  6EE6               	movwf	postinc1,c
  2582  016740  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2586  016744  0E76               	movlw	118
  2587  016746  6EE6               	movwf	postinc1,c
  2588  016748  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2592  01674C  0E38               	movlw	56
  2593  01674E  6EE6               	movwf	postinc1,c
  2594  016750  EC38  F0BE         	call	_send_lcd_cmd_long	;wreg free
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2598  016754  0E0F               	movlw	15
  2599  016756  6EE6               	movwf	postinc1,c
  2600  016758  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2604  01675C  0E01               	movlw	1
  2605  01675E  6EE6               	movwf	postinc1,c
  2606  016760  EC38  F0BE         	call	_send_lcd_cmd_long	;wreg free
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2610  016764  0E02               	movlw	2
  2611  016766  6EE6               	movwf	postinc1,c
  2612  016768  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2616  01676C  0E06               	movlw	6
  2617  01676E  6EE6               	movwf	postinc1,c
  2618  016770  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;eadog.c: 57:  wdtdelay(30);
  2622  016774  0E1E               	movlw	30
  2623  016776  6EE6               	movwf	postinc1,c
  2624  016778  0E00               	movlw	0
  2625  01677A  6EE6               	movwf	postinc1,c
  2626  01677C  0E00               	movlw	0
  2627  01677E  6EE6               	movwf	postinc1,c
  2628  016780  0E00               	movlw	0
  2629  016782  6EE6               	movwf	postinc1,c
  2630  016784  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2634  016788  0E02               	movlw	2
  2635  01678A  013D               	movlb	61	; () banked
  2636  01678C  6F16               	movwf	22,b	;volatile
  2637                           
  2638                           ; BSR set to: 61
  2639                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2640  01678E  0E40               	movlw	64
  2641  016790  6F15               	movwf	21,b	;volatile
  2642                           
  2643                           ; BSR set to: 61
  2644                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2645  016792  0E83               	movlw	131
  2646  016794  6F14               	movwf	20,b	;volatile
  2647                           
  2648                           ; BSR set to: 61
  2649                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2650  016796  931A               	bcf	26,1,b	;volatile
  2651                           
  2652                           ; BSR set to: 61
  2653                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2654  016798  0E3F               	movlw	-193
  2655  01679A  013B               	movlb	59	; () banked
  2656  01679C  17FD               	andwf	253,f,b	;volatile
  2657                           
  2658                           ; BSR set to: 59
  2659                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2660  01679E  9BFD               	bcf	253,5,b	;volatile
  2661                           
  2662                           ; BSR set to: 59
  2663                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2664  0167A0  51FD               	movf	253,w,b	;volatile
  2665  0167A2  0BF9               	andlw	-7
  2666  0167A4  0902               	iorlw	2
  2667  0167A6  6FFD               	movwf	253,b	;volatile
  2668                           
  2669                           ; BSR set to: 59
  2670                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2671  0167A8  0EE7               	movlw	-25
  2672  0167AA  17FD               	andwf	253,f,b	;volatile
  2673                           
  2674                           ; BSR set to: 59
  2675                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2676  0167AC  81FD               	bsf	253,0,b	;volatile
  2677                           
  2678                           ; BSR set to: 59
  2679                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2680  0167AE  0E83               	movlw	low _ring_buf1
  2681  0167B0  6FF9               	movwf	249,b	;volatile
  2682  0167B2  0E03               	movlw	high _ring_buf1
  2683  0167B4  6FFA               	movwf	250,b	;volatile
  2684  0167B6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2685  0167B8  6FFB               	movwf	251,b	;volatile
  2686                           
  2687                           ; BSR set to: 59
  2688                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2689  0167BA  9BFC               	bcf	252,5,b	;volatile
  2690                           
  2691                           ; BSR set to: 59
  2692                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2693  0167BC  013D               	movlb	61	; () banked
  2694  0167BE  831A               	bsf	26,1,b	;volatile
  2695                           
  2696                           ; BSR set to: 61
  2697                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2698  0167C0  94BE               	bcf	190,2,c	;volatile
  2699                           
  2700                           ; BSR set to: 61
  2701                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2702  0167C2  0012               	return		;funcret
  2703  0167C4                     __end_of_init_display:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _send_lcd_cmd_long *****************
  2707 ;; Defined at:
  2708 ;;		line 114 in file "eadog.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  cmd             1  [STACK] const unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1  [STACK] void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2717 ;; Tracked objects:
  2718 ;;		On entry : 3F/0
  2719 ;;		On exit  : 3F/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    7
  2729 ;; This function calls:
  2730 ;;		_SPI1_Exchange8bit
  2731 ;;		_wdtdelay
  2732 ;; This function is called by:
  2733 ;;		_init_display
  2734 ;; This function uses a reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text5
  2738  017C70                     __ptext5:
  2739                           	opt callstack 0
  2740  017C70                     _send_lcd_cmd_long:
  2741                           	opt callstack 22
  2742                           
  2743                           ; BSR set to: 61
  2744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2745                           ;incstack = 0
  2746                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2747  017C70  92BC               	bcf	188,1,c	;volatile
  2748                           
  2749                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2750  017C72  94BC               	bcf	188,2,c	;volatile
  2751                           
  2752                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2753                           ;stkvar	_cmd @ sp[(0)+-1]
  2754  017C74  0EFF               	movlw	-1
  2755  017C76  50E3               	movf	plusw1,w,c
  2756  017C78  6EE6               	movwf	postinc1,c
  2757  017C7A  ECE2  F0BF         	call	_SPI1_Exchange8bit	;wreg free
  2758                           
  2759                           ; BSR set to: 57
  2760                           ;eadog.c: 119:  wdtdelay(800);
  2761  017C7E  0E20               	movlw	32
  2762  017C80  6EE6               	movwf	postinc1,c
  2763  017C82  0E03               	movlw	3
  2764  017C84  6EE6               	movwf	postinc1,c
  2765  017C86  0E00               	movlw	0
  2766  017C88  6EE6               	movwf	postinc1,c
  2767  017C8A  0E00               	movlw	0
  2768  017C8C  6EE6               	movwf	postinc1,c
  2769  017C8E  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2770                           
  2771                           ; BSR set to: 0
  2772  017C92  82BC               	bsf	188,1,c	;volatile
  2773                           
  2774                           ; BSR set to: 0
  2775                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2776  017C94  52E5               	movf	postdec1,f,c
  2777  017C96  0012               	return		;funcret
  2778  017C98                     __end_of_send_lcd_cmd_long:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _send_lcd_cmd *****************
  2782 ;; Defined at:
  2783 ;;		line 102 in file "eadog.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  cmd             1  [STACK] const unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1  [STACK] void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2792 ;; Tracked objects:
  2793 ;;		On entry : 3F/0
  2794 ;;		On exit  : 3F/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    7
  2804 ;; This function calls:
  2805 ;;		_SPI1_Exchange8bit
  2806 ;;		_wdtdelay
  2807 ;; This function is called by:
  2808 ;;		_init_display
  2809 ;; This function uses a reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text6
  2813  017C98                     __ptext6:
  2814                           	opt callstack 0
  2815  017C98                     _send_lcd_cmd:
  2816                           	opt callstack 22
  2817                           
  2818                           ; BSR set to: 0
  2819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2820                           ;incstack = 0
  2821                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2822  017C98  92BC               	bcf	188,1,c	;volatile
  2823                           
  2824                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2825  017C9A  94BC               	bcf	188,2,c	;volatile
  2826                           
  2827                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2828                           ;stkvar	_cmd @ sp[(0)+-1]
  2829  017C9C  0EFF               	movlw	-1
  2830  017C9E  50E3               	movf	plusw1,w,c
  2831  017CA0  6EE6               	movwf	postinc1,c
  2832  017CA2  ECE2  F0BF         	call	_SPI1_Exchange8bit	;wreg free
  2833                           
  2834                           ; BSR set to: 57
  2835                           ;eadog.c: 107:  wdtdelay(30);
  2836  017CA6  0E1E               	movlw	30
  2837  017CA8  6EE6               	movwf	postinc1,c
  2838  017CAA  0E00               	movlw	0
  2839  017CAC  6EE6               	movwf	postinc1,c
  2840  017CAE  0E00               	movlw	0
  2841  017CB0  6EE6               	movwf	postinc1,c
  2842  017CB2  0E00               	movlw	0
  2843  017CB4  6EE6               	movwf	postinc1,c
  2844  017CB6  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2845                           
  2846                           ; BSR set to: 0
  2847  017CBA  82BC               	bsf	188,1,c	;volatile
  2848                           
  2849                           ; BSR set to: 0
  2850                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2851  017CBC  52E5               	movf	postdec1,f,c
  2852  017CBE  0012               	return		;funcret
  2853  017CC0                     __end_of_send_lcd_cmd:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _SPI1_Exchange8bit *****************
  2857 ;; Defined at:
  2858 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  data            1  [STACK] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1  [STACK] unsigned char 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 3F/39
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    6
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_send_lcd_cmd
  2883 ;;		_send_lcd_cmd_long
  2884 ;; This function uses a reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text7
  2888  017FC4                     __ptext7:
  2889                           	opt callstack 0
  2890  017FC4                     _SPI1_Exchange8bit:
  2891                           	opt callstack 22
  2892                           
  2893                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2894                           
  2895                           ; BSR set to: 0
  2896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2897                           ;incstack = 0
  2898  017FC4  0E01               	movlw	1
  2899  017FC6  013D               	movlb	61	; () banked
  2900  017FC8  6F12               	movwf	18,b	;volatile
  2901                           
  2902                           ; BSR set to: 61
  2903                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2904                           ;stkvar	_data @ sp[(0)+-1]
  2905  017FCA  0EFF               	movlw	-1
  2906  017FCC  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2907  017FD2                     l835:
  2908                           
  2909                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2910  017FD2  0139               	movlb	57	; () banked
  2911  017FD4  A9A2               	btfss	162,4,b	;volatile
  2912  017FD6  D7FD               	goto	l835
  2913                           
  2914                           ; BSR set to: 57
  2915                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2916  017FD8  006F F440  F035    	movff	15632,btemp	;volatile
  2917                           
  2918                           ; BSR set to: 57
  2919                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2920  017FDE  52E5               	movf	postdec1,f,c
  2921  017FE0  0012               	return		;funcret
  2922  017FE2                     __end_of_SPI1_Exchange8bit:
  2923                           	opt callstack 0
  2924                           
  2925 ;; *************** function _ringBufS_init *****************
  2926 ;; Defined at:
  2927 ;;		line 22 in file "ringbufs.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  _this           2  [STACK] PTR volatile struct ring
  2930 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1  [STACK] void 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    7
  2949 ;; This function calls:
  2950 ;;		_memset
  2951 ;; This function is called by:
  2952 ;;		_init_display
  2953 ;; This function uses a reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text8
  2957  017CC0                     __ptext8:
  2958                           	opt callstack 0
  2959  017CC0                     _ringBufS_init:
  2960                           	opt callstack 22
  2961                           
  2962                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2963                           
  2964                           ; BSR set to: 57
  2965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2966                           ;incstack = 0
  2967  017CC0  0E43               	movlw	67
  2968  017CC2  6EE6               	movwf	postinc1,c
  2969  017CC4  0E00               	movlw	0
  2970  017CC6  6EE6               	movwf	postinc1,c
  2971  017CC8  0E00               	movlw	0
  2972  017CCA  6EE6               	movwf	postinc1,c
  2973  017CCC  0E00               	movlw	0
  2974  017CCE  6EE6               	movwf	postinc1,c
  2975                           
  2976                           ;stkvar	__this @ sp[(-4)+-2]
  2977  017CD0  0EFA               	movlw	-6
  2978  017CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  2979  017CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  2980  017CDE  EC08  F0A3         	call	_memset	;wreg free
  2981                           
  2982                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2983  017CE2  52E5               	movf	postdec1,f,c
  2984  017CE4  52E5               	movf	postdec1,f,c
  2985  017CE6  0012               	return		;funcret
  2986  017CE8                     __end_of_ringBufS_init:
  2987                           	opt callstack 0
  2988                           
  2989 ;; *************** function _eaDogM_WriteCommand *****************
  2990 ;; Defined at:
  2991 ;;		line 160 in file "eadog.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  cmd             1  [STACK] const unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1  [STACK] void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3000 ;; Tracked objects:
  3001 ;;		On entry : 3F/3D
  3002 ;;		On exit  : 3F/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   16
  3012 ;; This function calls:
  3013 ;;		_send_lcd_cmd_dma
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text9
  3020  0181A6                     __ptext9:
  3021                           	opt callstack 0
  3022  0181A6                     _eaDogM_WriteCommand:
  3023                           	opt callstack 14
  3024                           
  3025                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3026                           ;stkvar	_cmd @ sp[(0)+-1]
  3027                           
  3028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3029                           ;incstack = 0
  3030  0181A6  0EFF               	movlw	-1
  3031  0181A8  50E3               	movf	plusw1,w,c
  3032  0181AA  6EE6               	movwf	postinc1,c
  3033  0181AC  EC2E  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  3034                           
  3035                           ; BSR set to: 0
  3036                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3037  0181B0  52E5               	movf	postdec1,f,c
  3038  0181B2  0012               	return		;funcret
  3039  0181B4                     __end_of_eaDogM_WriteCommand:
  3040                           	opt callstack 0
  3041                           
  3042 ;; *************** function _convert_adc_data *****************
  3043 ;; Defined at:
  3044 ;;		line 31 in file "mbmc.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  i               1  [STACK] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1  [STACK] void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/4
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    9
  3065 ;; This function calls:
  3066 ;;		_conv_raw_result
  3067 ;;		_lp_filter
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text10
  3074  017148                     __ptext10:
  3075                           	opt callstack 0
  3076  017148                     _convert_adc_data:
  3077                           	opt callstack 0
  3078                           
  3079                           ; BSR set to: 0
  3080                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3081  017148  52E6               	movf	postinc1,f,c
  3082                           
  3083                           ;mbmc.c: 33:  uint8_t i = 0;
  3084                           ;stkvar	_i @ sp[(-1)+0]
  3085                           
  3086                           ;incstack = 0
  3087  01714A  0EFF               	movlw	-1
  3088  01714C  6AE3               	clrf	plusw1,c
  3089  01714E                     l8631:
  3090                           
  3091                           ;mbmc.c: 36:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3092  01714E  0E00               	movlw	0
  3093  017150  6EE6               	movwf	postinc1,c
  3094                           
  3095                           ;stkvar	_i @ sp[(-2)+0]
  3096  017152  0EFE               	movlw	-2
  3097  017154  50E3               	movf	plusw1,w,c
  3098  017156  6EE6               	movwf	postinc1,c
  3099  017158  0E00               	movlw	0
  3100  01715A  6EE6               	movwf	postinc1,c
  3101                           
  3102                           ;stkvar	_i @ sp[(-4)+0]
  3103  01715C  0EFC               	movlw	-4
  3104  01715E  50E3               	movf	plusw1,w,c
  3105  017160  6EE6               	movwf	postinc1,c
  3106  017162  ECB1  F09B         	call	_conv_raw_result	;wreg free
  3107  017166  0060  F0D7  FFE6   	movff	btemp,postinc1
  3108  01716C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3109  017172  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3110  017178  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3111  01717E  EC66  F0AC         	call	_lp_filter	;wreg free
  3112                           
  3113                           ;stkvar	_i @ sp[(-1)+0]
  3114  017182  0EFF               	movlw	-1
  3115  017184  50E3               	movf	plusw1,w,c
  3116  017186  0D04               	mullw	4
  3117  017188  0E00               	movlw	low _C
  3118  01718A  24F3               	addwf	243,w,c
  3119  01718C  6ED9               	movwf	fsr2l,c
  3120  01718E  0E02               	movlw	high _C
  3121  017190  20F4               	addwfc	prodh,w,c
  3122  017192  6EDA               	movwf	fsr2h,c
  3123  017194  0060  F0D7  FFDE   	movff	btemp,postinc2
  3124  01719A  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3125  0171A0  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3126  0171A6  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3127                           
  3128                           ;mbmc.c: 37:  } while (++i < 16);
  3129                           ;stkvar	_i @ sp[(-1)+0]
  3130  0171AC  0EFF               	movlw	-1
  3131  0171AE  2AE3               	incf	plusw1,f,c
  3132  0171B0  0EFF               	movlw	-1
  3133  0171B2  006F FF8C  F035    	movff	plusw1,btemp
  3134  0171B8  0E0F               	movlw	15
  3135  0171BA  6435               	cpfsgt	btemp^0,c
  3136  0171BC  D7C8               	goto	l8631
  3137                           
  3138                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3139  0171BE  52E5               	movf	postdec1,f,c
  3140  0171C0  0012               	return		;funcret
  3141  0171C2                     __end_of_convert_adc_data:
  3142                           	opt callstack 0
  3143                           
  3144 ;; *************** function _lp_filter *****************
  3145 ;; Defined at:
  3146 ;;		line 9 in file "mbmc.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  new             4  [STACK] float 
  3149 ;;  bn              1  [STACK] unsigned char 
  3150 ;;  slow            1  [STACK] char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  lp_speed        4  [STACK] float 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  4  [STACK] float 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/4
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    8
  3169 ;; This function calls:
  3170 ;;		___fladd
  3171 ;;		___flmul
  3172 ;;		___flsub
  3173 ;; This function is called by:
  3174 ;;		_convert_adc_data
  3175 ;; This function uses a reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text11
  3179  0158CC                     __ptext11:
  3180                           	opt callstack 0
  3181  0158CC                     _lp_filter:
  3182                           	opt callstack 0
  3183                           
  3184                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3185  0158CC  52E6               	movf	postinc1,f,c
  3186  0158CE  52E6               	movf	postinc1,f,c
  3187  0158D0  52E6               	movf	postinc1,f,c
  3188  0158D2  52E6               	movf	postinc1,f,c
  3189                           
  3190                           ;mbmc.c: 9: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 10: {;mbmc.c: 11
      +                          :  static float smooth[16];;mbmc.c: 12:  float lp_speed;;mbmc.c: 14:  if (bn >= 16)
  3191                           ;stkvar	_bn @ sp[(-4)+-5]
  3192                           
  3193                           ;incstack = 0
  3194  0158D4  0EF7               	movlw	-9
  3195  0158D6  006F FF8C  F035    	movff	plusw1,btemp
  3196  0158DC  0E0F               	movlw	15
  3197  0158DE  6435               	cpfsgt	btemp^0,c
  3198  0158E0  D011               	goto	l8425
  3199  0158E2                     u7990:
  3200                           
  3201                           ;mbmc.c: 15:   return new;
  3202                           ;stkvar	_new @ sp[(-4)+-4]
  3203  0158E2  0EF8               	movlw	-8
  3204  0158E4  006F FF8C  F035    	movff	plusw1,btemp
  3205  0158EA  0EF9               	movlw	-7
  3206  0158EC  006F FF8C  F036    	movff	plusw1,btemp+1
  3207  0158F2  0EFA               	movlw	-6
  3208  0158F4  006F FF8C  F037    	movff	plusw1,btemp+2
  3209  0158FA  0EFB               	movlw	-5
  3210  0158FC  006F FF8C  F038    	movff	plusw1,btemp+3
  3211  015902  D0BF               	goto	l1685
  3212  015904                     l8425:
  3213                           
  3214                           ;mbmc.c: 17:  if (slow == (-1)) {
  3215                           ;stkvar	_slow @ sp[(-4)+-6]
  3216  015904  0EF6               	movlw	-10
  3217  015906  28E3               	incf	plusw1,w,c
  3218  015908  A4D8               	btfss	status,2,c
  3219  01590A  D012               	goto	l8433
  3220                           
  3221                           ;mbmc.c: 18:   smooth[bn] = 0.0;
  3222                           ;stkvar	_bn @ sp[(-4)+-5]
  3223  01590C  0EF7               	movlw	-9
  3224  01590E  50E3               	movf	plusw1,w,c
  3225  015910  0D04               	mullw	4
  3226  015912  0E6C               	movlw	low lp_filter@smooth
  3227  015914  24F3               	addwf	243,w,c
  3228  015916  6ED9               	movwf	fsr2l,c
  3229  015918  0E02               	movlw	high lp_filter@smooth
  3230  01591A  20F4               	addwfc	prodh,w,c
  3231  01591C  6EDA               	movwf	fsr2h,c
  3232  01591E  0E00               	movlw	0
  3233  015920  6EDE               	movwf	postinc2,c
  3234  015922  0E00               	movlw	0
  3235  015924  6EDE               	movwf	postinc2,c
  3236  015926  0E00               	movlw	0
  3237  015928  6EDE               	movwf	postinc2,c
  3238  01592A  0E00               	movlw	0
  3239  01592C  6EDD               	movwf	postdec2,c
  3240  01592E  D7D9               	goto	u7990
  3241  015930                     l8433:
  3242                           
  3243                           ;mbmc.c: 22:  if (slow) {
  3244                           ;stkvar	_slow @ sp[(-4)+-6]
  3245  015930  0EF6               	movlw	-10
  3246  015932  50E3               	movf	plusw1,w,c
  3247  015934  B4D8               	btfsc	status,2,c
  3248  015936  D008               	goto	l8437
  3249                           
  3250                           ;mbmc.c: 23:   lp_speed = 0.066;
  3251  015938  0E02               	movlw	2
  3252  01593A  6E3D               	movwf	(btemp+8)^0,c
  3253  01593C  0E2B               	movlw	43
  3254  01593E  6E3E               	movwf	(btemp+9)^0,c
  3255  015940  0E87               	movlw	135
  3256  015942  6E3F               	movwf	(btemp+10)^0,c
  3257  015944  0E3D               	movlw	61
  3258  015946  D007               	goto	L1
  3259  015948                     l8437:
  3260                           
  3261                           ;mbmc.c: 25:   lp_speed = 0.333;
  3262  015948  0EFA               	movlw	250
  3263  01594A  6E3D               	movwf	(btemp+8)^0,c
  3264  01594C  0E7E               	movlw	126
  3265  01594E  6E3E               	movwf	(btemp+9)^0,c
  3266  015950  0EAA               	movlw	170
  3267  015952  6E3F               	movwf	(btemp+10)^0,c
  3268  015954  0E3E               	movlw	62
  3269  015956                     L1:
  3270  015956  6E40               	movwf	(btemp+11)^0,c
  3271                           
  3272                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3273  015958  0EFC               	movlw	-4
  3274  01595A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3275  015960  0EFD               	movlw	-3
  3276  015962  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3277  015968  0EFE               	movlw	-2
  3278  01596A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3279  015970  0EFF               	movlw	-1
  3280  015972  0060  F103  FFE3   	movff	btemp+11,plusw1
  3281                           
  3282                           ;mbmc.c: 28:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3283                           ;stkvar	_bn @ sp[(-4)+-5]
  3284  015978  0EF7               	movlw	-9
  3285  01597A  50E3               	movf	plusw1,w,c
  3286  01597C  0D04               	mullw	4
  3287  01597E  0E6C               	movlw	low lp_filter@smooth
  3288  015980  24F3               	addwf	243,w,c
  3289  015982  6ED9               	movwf	fsr2l,c
  3290  015984  0E02               	movlw	high lp_filter@smooth
  3291  015986  20F4               	addwfc	prodh,w,c
  3292  015988  6EDA               	movwf	fsr2h,c
  3293  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
  3294  015990  006F FF7B FFE6     	movff	postinc2,postinc1
  3295  015996  006F FF7B FFE6     	movff	postinc2,postinc1
  3296  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
  3297                           
  3298                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3299  0159A2  0EF8               	movlw	-8
  3300  0159A4  006F FF8F FFE6     	movff	plusw1,postinc1
  3301  0159AA  006F FF8F FFE6     	movff	plusw1,postinc1
  3302  0159B0  006F FF8F FFE6     	movff	plusw1,postinc1
  3303  0159B6  006F FF8F FFE6     	movff	plusw1,postinc1
  3304                           
  3305                           ;stkvar	_bn @ sp[(-12)+-5]
  3306  0159BC  0EEF               	movlw	-17
  3307  0159BE  50E3               	movf	plusw1,w,c
  3308  0159C0  0D04               	mullw	4
  3309  0159C2  0E6C               	movlw	low lp_filter@smooth
  3310  0159C4  24F3               	addwf	243,w,c
  3311  0159C6  6ED9               	movwf	fsr2l,c
  3312  0159C8  0E02               	movlw	high lp_filter@smooth
  3313  0159CA  20F4               	addwfc	prodh,w,c
  3314  0159CC  6EDA               	movwf	fsr2h,c
  3315  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
  3316  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
  3317  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
  3318  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
  3319                           
  3320                           ;stkvar	_new @ sp[(-16)+-4]
  3321  0159E6  0EEC               	movlw	-20
  3322  0159E8  006F FF8F FFE6     	movff	plusw1,postinc1
  3323  0159EE  006F FF8F FFE6     	movff	plusw1,postinc1
  3324  0159F4  006F FF8F FFE6     	movff	plusw1,postinc1
  3325  0159FA  006F FF8F FFE6     	movff	plusw1,postinc1
  3326  015A00  ECA4  F0BB         	call	___flsub	;wreg free
  3327  015A04  0060  F0D7  FFE6   	movff	btemp,postinc1
  3328  015A0A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3329  015A10  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3330  015A16  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3331  015A1C  ECC1  F08E         	call	___flmul	;wreg free
  3332  015A20  0060  F0D7  FFE6   	movff	btemp,postinc1
  3333  015A26  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3334  015A2C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3335  015A32  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3336  015A38  ECD6  F092         	call	___fladd	;wreg free
  3337                           
  3338                           ;stkvar	_bn @ sp[(-4)+-5]
  3339  015A3C  0EF7               	movlw	-9
  3340  015A3E  50E3               	movf	plusw1,w,c
  3341  015A40  0D04               	mullw	4
  3342  015A42  0E6C               	movlw	low lp_filter@smooth
  3343  015A44  24F3               	addwf	243,w,c
  3344  015A46  6ED9               	movwf	fsr2l,c
  3345  015A48  0E02               	movlw	high lp_filter@smooth
  3346  015A4A  20F4               	addwfc	prodh,w,c
  3347  015A4C  6EDA               	movwf	fsr2h,c
  3348  015A4E  0060  F0D7  FFDE   	movff	btemp,postinc2
  3349  015A54  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3350  015A5A  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3351  015A60  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3352  015A66  52DD               	movf	postdec2,f,c
  3353  015A68  52DD               	movf	postdec2,f,c
  3354  015A6A  006F FF78  F035    	movff	postinc2,btemp
  3355  015A70  006F FF78  F036    	movff	postinc2,btemp+1
  3356  015A76  006F FF78  F037    	movff	postinc2,btemp+2
  3357  015A7C  006F FF78  F038    	movff	postinc2,btemp+3
  3358  015A82                     l1685:
  3359                           
  3360                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3361  015A82  0EF6               	movlw	246
  3362  015A84  26E1               	addwf	fsr1l,f,c
  3363  015A86  0EFF               	movlw	255
  3364  015A88  22E2               	addwfc	fsr1h,f,c
  3365  015A8A  0012               	return		;funcret
  3366  015A8C                     __end_of_lp_filter:
  3367                           	opt callstack 0
  3368                           
  3369 ;; *************** function _conv_raw_result *****************
  3370 ;; Defined at:
  3371 ;;		line 75 in file "daq.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  chan            1  [STACK] enum E16136
  3374 ;;  to_what         1  [STACK] enum E16198
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  4  [STACK] float 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/4
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    8
  3393 ;; This function calls:
  3394 ;;		___fldiv
  3395 ;;		___flmul
  3396 ;;		___flsub
  3397 ;;		___xxtofl
  3398 ;;		_get_raw_result
  3399 ;;		_nanf
  3400 ;; This function is called by:
  3401 ;;		_convert_adc_data
  3402 ;; This function uses a reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text12
  3406  013762                     __ptext12:
  3407                           	opt callstack 0
  3408  013762                     _conv_raw_result:
  3409                           	opt callstack 21
  3410                           
  3411                           ;daq.c: 75: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 76: {;
      +                          daq.c: 77:  if (!(0b0011110001110111 >> chan & 0x1))
  3412                           ;stkvar	_chan @ sp[(0)+-1]
  3413                           
  3414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3415                           ;incstack = 0
  3416  013762  0EFF               	movlw	-1
  3417  013764  006F FF8C  F040    	movff	plusw1,btemp+11
  3418  01376A  0E77               	movlw	119
  3419  01376C  6E3D               	movwf	(btemp+8)^0,c
  3420  01376E  0E3C               	movlw	60
  3421  013770  6E3E               	movwf	(btemp+9)^0,c
  3422  013772  2A40               	incf	(btemp+11)^0,f,c
  3423  013774  D003               	goto	u7914
  3424  013776                     u7915:
  3425  013776  343E               	rlcf	(btemp+9)^0,w,c
  3426  013778  323E               	rrcf	(btemp+9)^0,f,c
  3427  01377A  323D               	rrcf	(btemp+8)^0,f,c
  3428  01377C                     u7914:
  3429  01377C  2E40               	decfsz	(btemp+11)^0,f,c
  3430  01377E  D7FB               	goto	u7915
  3431  013780  B03D               	btfsc	(btemp+8)^0,0,c
  3432  013782  D1E3               	goto	l8409
  3433                           
  3434                           ;daq.c: 78:   return nanf("");
  3435  013784  0E2D               	movlw	low (STR_26+18)
  3436  013786  6EE6               	movwf	postinc1,c
  3437  013788  0EFF               	movlw	high (STR_26+18)
  3438  01378A  6EE6               	movwf	postinc1,c
  3439  01378C  EC15  F0BA         	call	_nanf	;wreg free
  3440  013790  D1EC               	goto	l1649
  3441  013792                     l8369:
  3442                           
  3443                           ;daq.c: 82:   if (0b0000000000000011 >> chan & 0x1) {
  3444                           ;stkvar	_chan @ sp[(0)+-1]
  3445  013792  0EFF               	movlw	-1
  3446  013794  006F FF8C  F040    	movff	plusw1,btemp+11
  3447  01379A  0E03               	movlw	3
  3448  01379C  6E3D               	movwf	(btemp+8)^0,c
  3449  01379E  0E00               	movlw	0
  3450  0137A0  6E3E               	movwf	(btemp+9)^0,c
  3451  0137A2  2A40               	incf	(btemp+11)^0,f,c
  3452  0137A4  D003               	goto	u7934
  3453  0137A6                     u7935:
  3454  0137A6  343E               	rlcf	(btemp+9)^0,w,c
  3455  0137A8  323E               	rrcf	(btemp+9)^0,f,c
  3456  0137AA  323D               	rrcf	(btemp+8)^0,f,c
  3457  0137AC                     u7934:
  3458  0137AC  2E40               	decfsz	(btemp+11)^0,f,c
  3459  0137AE  D7FB               	goto	u7935
  3460  0137B0  A03D               	btfss	(btemp+8)^0,0,c
  3461  0137B2  D10D               	goto	l8383
  3462                           
  3463                           ;daq.c: 83:    if (0b0000000000000001 >> chan & 0x1) {
  3464                           ;stkvar	_chan @ sp[(0)+-1]
  3465  0137B4  0EFF               	movlw	-1
  3466  0137B6  006F FF8C  F040    	movff	plusw1,btemp+11
  3467  0137BC  0E01               	movlw	1
  3468  0137BE  6E3D               	movwf	(btemp+8)^0,c
  3469  0137C0  0E00               	movlw	0
  3470  0137C2  6E3E               	movwf	(btemp+9)^0,c
  3471  0137C4  2A40               	incf	(btemp+11)^0,f,c
  3472  0137C6  D003               	goto	u7954
  3473  0137C8                     u7955:
  3474  0137C8  343E               	rlcf	(btemp+9)^0,w,c
  3475  0137CA  323E               	rrcf	(btemp+9)^0,f,c
  3476  0137CC  323D               	rrcf	(btemp+8)^0,f,c
  3477  0137CE                     u7954:
  3478  0137CE  2E40               	decfsz	(btemp+11)^0,f,c
  3479  0137D0  D7FB               	goto	u7955
  3480  0137D2  A03D               	btfss	(btemp+8)^0,0,c
  3481  0137D4  D07E               	goto	l8379
  3482                           
  3483                           ;daq.c: 84:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[1]) * 30.00 / 
      +                          1000.0;
  3484  0137D6  0E00               	movlw	0
  3485  0137D8  6EE6               	movwf	postinc1,c
  3486  0137DA  0E00               	movlw	0
  3487  0137DC  6EE6               	movwf	postinc1,c
  3488  0137DE  0E7A               	movlw	122
  3489  0137E0  6EE6               	movwf	postinc1,c
  3490  0137E2  0E44               	movlw	68
  3491  0137E4  6EE6               	movwf	postinc1,c
  3492  0137E6  0E00               	movlw	0
  3493  0137E8  6EE6               	movwf	postinc1,c
  3494  0137EA  0E00               	movlw	0
  3495  0137EC  6EE6               	movwf	postinc1,c
  3496  0137EE  0EF0               	movlw	240
  3497  0137F0  6EE6               	movwf	postinc1,c
  3498  0137F2  0E41               	movlw	65
  3499  0137F4  6EE6               	movwf	postinc1,c
  3500  0137F6  0060  F213  FFE6   	movff	_R+36,postinc1
  3501  0137FC  0060  F217  FFE6   	movff	_R+37,postinc1
  3502  013802  0060  F21B  FFE6   	movff	_R+38,postinc1
  3503  013808  0060  F21F  FFE6   	movff	_R+39,postinc1
  3504  01380E  0E00               	movlw	0
  3505  013810  6EE6               	movwf	postinc1,c
  3506  013812  0E00               	movlw	0
  3507  013814  6EE6               	movwf	postinc1,c
  3508  013816  0EA0               	movlw	160
  3509  013818  6EE6               	movwf	postinc1,c
  3510  01381A  0E3F               	movlw	63
  3511  01381C  6EE6               	movwf	postinc1,c
  3512                           
  3513                           ;stkvar	_chan @ sp[(-16)+-1]
  3514  01381E  0EEF               	movlw	-17
  3515  013820  50E3               	movf	plusw1,w,c
  3516  013822  6EE6               	movwf	postinc1,c
  3517  013824  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3518  013828  0060  F0D4  F03F   	movff	btemp,btemp+10
  3519  01382E  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3520  013834  503F               	movf	(btemp+10)^0,w,c
  3521  013836  6E39               	movwf	(btemp+4)^0,c
  3522  013838  5040               	movf	(btemp+11)^0,w,c
  3523  01383A  6E3A               	movwf	(btemp+5)^0,c
  3524  01383C  6A3B               	clrf	(btemp+6)^0,c
  3525  01383E  6A3C               	clrf	(btemp+7)^0,c
  3526  013840  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3527  013846  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3528  01384C  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3529  013852  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3530  013858  0E00               	movlw	0
  3531  01385A  6EE6               	movwf	postinc1,c
  3532  01385C  EC80  F0AA         	call	___xxtofl	;wreg free
  3533  013860  0060  F0D7  FFE6   	movff	btemp,postinc1
  3534  013866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3535  01386C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3536  013872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3537  013878  ECC1  F08E         	call	___flmul	;wreg free
  3538  01387C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3539  013882  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3540  013888  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3541  01388E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3542  013894  ECA4  F0BB         	call	___flsub	;wreg free
  3543  013898  0060  F0D7  FFE6   	movff	btemp,postinc1
  3544  01389E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3545  0138A4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3546  0138AA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3547  0138B0  ECC1  F08E         	call	___flmul	;wreg free
  3548  0138B4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3549  0138BA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3550  0138C0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3551  0138C6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3552  0138CC  ECB4  F096         	call	___fldiv	;wreg free
  3553  0138D0  D14C               	goto	l1649
  3554  0138D2                     l8379:
  3555                           
  3556                           ;daq.c: 86:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[0]) * 59.30 / 
      +                          1000.0;
  3557  0138D2  0E00               	movlw	0
  3558  0138D4  6EE6               	movwf	postinc1,c
  3559  0138D6  0E00               	movlw	0
  3560  0138D8  6EE6               	movwf	postinc1,c
  3561  0138DA  0E7A               	movlw	122
  3562  0138DC  6EE6               	movwf	postinc1,c
  3563  0138DE  0E44               	movlw	68
  3564  0138E0  6EE6               	movwf	postinc1,c
  3565  0138E2  0E33               	movlw	51
  3566  0138E4  6EE6               	movwf	postinc1,c
  3567  0138E6  0E33               	movlw	51
  3568  0138E8  6EE6               	movwf	postinc1,c
  3569  0138EA  0E6D               	movlw	109
  3570  0138EC  6EE6               	movwf	postinc1,c
  3571  0138EE  0E42               	movlw	66
  3572  0138F0  6EE6               	movwf	postinc1,c
  3573  0138F2  0060  F203  FFE6   	movff	_R+32,postinc1
  3574  0138F8  0060  F207  FFE6   	movff	_R+33,postinc1
  3575  0138FE  0060  F20B  FFE6   	movff	_R+34,postinc1
  3576  013904  0060  F20F  FFE6   	movff	_R+35,postinc1
  3577  01390A  0E00               	movlw	0
  3578  01390C  6EE6               	movwf	postinc1,c
  3579  01390E  0E00               	movlw	0
  3580  013910  6EE6               	movwf	postinc1,c
  3581  013912  0EA0               	movlw	160
  3582  013914  6EE6               	movwf	postinc1,c
  3583  013916  0E3F               	movlw	63
  3584  013918  6EE6               	movwf	postinc1,c
  3585                           
  3586                           ;stkvar	_chan @ sp[(-16)+-1]
  3587  01391A  0EEF               	movlw	-17
  3588  01391C  50E3               	movf	plusw1,w,c
  3589  01391E  6EE6               	movwf	postinc1,c
  3590  013920  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3591  013924  0060  F0D4  F03F   	movff	btemp,btemp+10
  3592  01392A  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3593  013930  503F               	movf	(btemp+10)^0,w,c
  3594  013932  6E39               	movwf	(btemp+4)^0,c
  3595  013934  5040               	movf	(btemp+11)^0,w,c
  3596  013936  6E3A               	movwf	(btemp+5)^0,c
  3597  013938  6A3B               	clrf	(btemp+6)^0,c
  3598  01393A  6A3C               	clrf	(btemp+7)^0,c
  3599  01393C  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3600  013942  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3601  013948  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3602  01394E  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3603  013954  0E00               	movlw	0
  3604  013956  6EE6               	movwf	postinc1,c
  3605  013958  EC80  F0AA         	call	___xxtofl	;wreg free
  3606  01395C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3607  013962  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3608  013968  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3609  01396E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3610  013974  ECC1  F08E         	call	___flmul	;wreg free
  3611  013978  0060  F0D7  FFE6   	movff	btemp,postinc1
  3612  01397E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3613  013984  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3614  01398A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3615  013990  ECA4  F0BB         	call	___flsub	;wreg free
  3616  013994  0060  F0D7  FFE6   	movff	btemp,postinc1
  3617  01399A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3618  0139A0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3619  0139A6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3620  0139AC  ECC1  F08E         	call	___flmul	;wreg free
  3621  0139B0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3622  0139B6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3623  0139BC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3624  0139C2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3625  0139C8  ECB4  F096         	call	___fldiv	;wreg free
  3626  0139CC  D0CE               	goto	l1649
  3627  0139CE                     l8383:
  3628                           
  3629                           ;daq.c: 89:    if (0b0000100000000000 >> chan & 0x1) {
  3630                           ;stkvar	_chan @ sp[(0)+-1]
  3631  0139CE  0EFF               	movlw	-1
  3632  0139D0  006F FF8C  F040    	movff	plusw1,btemp+11
  3633  0139D6  0E00               	movlw	0
  3634  0139D8  6E3D               	movwf	(btemp+8)^0,c
  3635  0139DA  0E08               	movlw	8
  3636  0139DC  6E3E               	movwf	(btemp+9)^0,c
  3637  0139DE  2A40               	incf	(btemp+11)^0,f,c
  3638  0139E0  D003               	goto	u7974
  3639  0139E2                     u7975:
  3640  0139E2  343E               	rlcf	(btemp+9)^0,w,c
  3641  0139E4  323E               	rrcf	(btemp+9)^0,f,c
  3642  0139E6  323D               	rrcf	(btemp+8)^0,f,c
  3643  0139E8                     u7974:
  3644  0139E8  2E40               	decfsz	(btemp+11)^0,f,c
  3645  0139EA  D7FB               	goto	u7975
  3646  0139EC  A03D               	btfss	(btemp+8)^0,0,c
  3647  0139EE  D008               	goto	l8391
  3648                           
  3649                           ;daq.c: 90:     return 25.0;
  3650  0139F0  0E00               	movlw	0
  3651  0139F2  6E35               	movwf	btemp^0,c
  3652  0139F4  0E00               	movlw	0
  3653  0139F6  6E36               	movwf	(btemp+1)^0,c
  3654  0139F8  0EC8               	movlw	200
  3655  0139FA  6E37               	movwf	(btemp+2)^0,c
  3656  0139FC  0E41               	movlw	65
  3657  0139FE  D0A3               	goto	L2
  3658  013A00                     l8391:
  3659                           
  3660                           ;daq.c: 92:     return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3661  013A00  0E00               	movlw	0
  3662  013A02  6EE6               	movwf	postinc1,c
  3663  013A04  0E00               	movlw	0
  3664  013A06  6EE6               	movwf	postinc1,c
  3665  013A08  0E7A               	movlw	122
  3666  013A0A  6EE6               	movwf	postinc1,c
  3667  013A0C  0E44               	movlw	68
  3668  013A0E  6EE6               	movwf	postinc1,c
  3669  013A10  0E61               	movlw	97
  3670  013A12  6EE6               	movwf	postinc1,c
  3671  013A14  0E03               	movlw	3
  3672  013A16  6EE6               	movwf	postinc1,c
  3673  013A18  0E04               	movlw	4
  3674  013A1A  6EE6               	movwf	postinc1,c
  3675  013A1C  0E41               	movlw	65
  3676  013A1E  6EE6               	movwf	postinc1,c
  3677                           
  3678                           ;stkvar	_chan @ sp[(-8)+-1]
  3679  013A20  0EF7               	movlw	-9
  3680  013A22  50E3               	movf	plusw1,w,c
  3681  013A24  6EE6               	movwf	postinc1,c
  3682  013A26  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3683  013A2A  0060  F0D4  F03F   	movff	btemp,btemp+10
  3684  013A30  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3685  013A36  503F               	movf	(btemp+10)^0,w,c
  3686  013A38  6E39               	movwf	(btemp+4)^0,c
  3687  013A3A  5040               	movf	(btemp+11)^0,w,c
  3688  013A3C  6E3A               	movwf	(btemp+5)^0,c
  3689  013A3E  6A3B               	clrf	(btemp+6)^0,c
  3690  013A40  6A3C               	clrf	(btemp+7)^0,c
  3691  013A42  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3692  013A48  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3693  013A4E  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3694  013A54  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3695  013A5A  0E00               	movlw	0
  3696  013A5C  6EE6               	movwf	postinc1,c
  3697  013A5E  EC80  F0AA         	call	___xxtofl	;wreg free
  3698  013A62  0060  F0D7  FFE6   	movff	btemp,postinc1
  3699  013A68  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3700  013A6E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3701  013A74  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3702  013A7A  ECC1  F08E         	call	___flmul	;wreg free
  3703  013A7E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3704  013A84  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3705  013A8A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3706  013A90  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3707  013A96  ECB4  F096         	call	___fldiv	;wreg free
  3708  013A9A  D067               	goto	l1649
  3709  013A9C                     l8395:
  3710                           
  3711                           ;daq.c: 97:   return((float) get_raw_result(chan) * 1.25) / 1000.0;
  3712  013A9C  0E00               	movlw	0
  3713  013A9E  6EE6               	movwf	postinc1,c
  3714  013AA0  0E00               	movlw	0
  3715  013AA2  6EE6               	movwf	postinc1,c
  3716  013AA4  0E7A               	movlw	122
  3717  013AA6  6EE6               	movwf	postinc1,c
  3718  013AA8  0E44               	movlw	68
  3719  013AAA  6EE6               	movwf	postinc1,c
  3720  013AAC  0E00               	movlw	0
  3721  013AAE  6EE6               	movwf	postinc1,c
  3722  013AB0  0E00               	movlw	0
  3723  013AB2  6EE6               	movwf	postinc1,c
  3724  013AB4  0EA0               	movlw	160
  3725  013AB6  6EE6               	movwf	postinc1,c
  3726  013AB8  0E3F               	movlw	63
  3727  013ABA  6EE6               	movwf	postinc1,c
  3728                           
  3729                           ;stkvar	_chan @ sp[(-8)+-1]
  3730  013ABC  0EF7               	movlw	-9
  3731  013ABE  50E3               	movf	plusw1,w,c
  3732  013AC0  6EE6               	movwf	postinc1,c
  3733  013AC2  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3734  013AC6  0060  F0D4  F03F   	movff	btemp,btemp+10
  3735  013ACC  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3736  013AD2  503F               	movf	(btemp+10)^0,w,c
  3737  013AD4  6E39               	movwf	(btemp+4)^0,c
  3738  013AD6  5040               	movf	(btemp+11)^0,w,c
  3739  013AD8  6E3A               	movwf	(btemp+5)^0,c
  3740  013ADA  6A3B               	clrf	(btemp+6)^0,c
  3741  013ADC  6A3C               	clrf	(btemp+7)^0,c
  3742  013ADE  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3743  013AE4  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3744  013AEA  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3745  013AF0  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3746  013AF6  0E00               	movlw	0
  3747  013AF8  6EE6               	movwf	postinc1,c
  3748  013AFA  EC80  F0AA         	call	___xxtofl	;wreg free
  3749  013AFE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3750  013B04  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3751  013B0A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3752  013B10  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3753  013B16  ECC1  F08E         	call	___flmul	;wreg free
  3754  013B1A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3755  013B20  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3756  013B26  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3757  013B2C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3758  013B32  ECB4  F096         	call	___fldiv	;wreg free
  3759  013B36  D019               	goto	l1649
  3760  013B38                     l8401:
  3761                           
  3762                           ;daq.c: 100:   return 0.0;
  3763  013B38  0E00               	movlw	0
  3764  013B3A  6E35               	movwf	btemp^0,c
  3765  013B3C  0E00               	movlw	0
  3766  013B3E  6E36               	movwf	(btemp+1)^0,c
  3767  013B40  0E00               	movlw	0
  3768  013B42  6E37               	movwf	(btemp+2)^0,c
  3769  013B44  0E00               	movlw	0
  3770  013B46                     L2:
  3771  013B46  6E38               	movwf	(btemp+3)^0,c
  3772  013B48  D010               	goto	l1649
  3773  013B4A                     l8409:
  3774                           
  3775                           ;stkvar	_to_what @ sp[(0)+-2]
  3776  013B4A  0EFE               	movlw	-2
  3777  013B4C  50E3               	movf	plusw1,w,c
  3778  013B4E  6E3F               	movwf	(btemp+10)^0,c
  3779  013B50  6A40               	clrf	(btemp+11)^0,c
  3780                           
  3781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3782                           ; Switch size 1, requested type "simple"
  3783                           ; Number of cases is 1, Range of values is 0 to 0
  3784                           ; switch strategies available:
  3785                           ; Name         Instructions Cycles
  3786                           ; simple_byte            4     3 (average)
  3787                           ;	Chosen strategy is simple_byte
  3788  013B52  5040               	movf	(btemp+11)^0,w,c
  3789  013B54  0A00               	xorlw	0	; case 0
  3790  013B56  A4D8               	btfss	status,2,c
  3791  013B58  D7EF               	goto	l8401
  3792                           
  3793                           ; Switch size 1, requested type "simple"
  3794                           ; Number of cases is 2, Range of values is 0 to 1
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte            7     4 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799  013B5A  503F               	movf	(btemp+10)^0,w,c
  3800  013B5C  0A00               	xorlw	0	; case 0
  3801  013B5E  B4D8               	btfsc	status,2,c
  3802  013B60  D618               	goto	l8369
  3803  013B62  0A01               	xorlw	1	; case 1
  3804  013B64  B4D8               	btfsc	status,2,c
  3805  013B66  D79A               	goto	l8395
  3806  013B68  D7E7               	goto	l8401
  3807  013B6A                     l1649:
  3808                           
  3809                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3810  013B6A  52E5               	movf	postdec1,f,c
  3811  013B6C  52E5               	movf	postdec1,f,c
  3812  013B6E  0012               	return		;funcret
  3813  013B70                     __end_of_conv_raw_result:
  3814                           	opt callstack 0
  3815                           
  3816 ;; *************** function _nanf *****************
  3817 ;; Defined at:
  3818 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  s               2  [STACK] PTR const unsigned char 
  3821 ;;		 -> STR_32(1), 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  u               4  [STACK] struct .
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  4  [STACK] float 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/4
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    6
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_conv_raw_result
  3844 ;; This function uses a reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text13
  3848  01742A                     __ptext13:
  3849                           	opt callstack 0
  3850  01742A                     _nanf:
  3851                           	opt callstack 0
  3852                           
  3853                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3854  01742A  52E6               	movf	postinc1,f,c
  3855  01742C  52E6               	movf	postinc1,f,c
  3856  01742E  52E6               	movf	postinc1,f,c
  3857  017430  52E6               	movf	postinc1,f,c
  3858                           
  3859                           ;incstack = 0
  3860  017432  0EFF               	movlw	255
  3861  017434  6E3D               	movwf	(btemp+8)^0,c
  3862  017436  0EFF               	movlw	255
  3863  017438  6E3E               	movwf	(btemp+9)^0,c
  3864  01743A  0EFF               	movlw	255
  3865  01743C  6E3F               	movwf	(btemp+10)^0,c
  3866  01743E  0E7F               	movlw	127
  3867  017440  6E40               	movwf	(btemp+11)^0,c
  3868                           
  3869                           ;stkvar	_u @ sp[(-4)+0]
  3870  017442  0EFC               	movlw	-4
  3871  017444  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3872  01744A  0EFD               	movlw	-3
  3873  01744C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3874  017452  0EFE               	movlw	-2
  3875  017454  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3876  01745A  0EFF               	movlw	-1
  3877  01745C  0060  F103  FFE3   	movff	btemp+11,plusw1
  3878                           
  3879                           ;stkvar	_u @ sp[(-4)+0]
  3880  017462  0EFC               	movlw	-4
  3881  017464  006F FF8C  F035    	movff	plusw1,btemp
  3882  01746A  0EFD               	movlw	-3
  3883  01746C  006F FF8C  F036    	movff	plusw1,btemp+1
  3884  017472  0EFE               	movlw	-2
  3885  017474  006F FF8C  F037    	movff	plusw1,btemp+2
  3886  01747A  0EFF               	movlw	-1
  3887  01747C  006F FF8C  F038    	movff	plusw1,btemp+3
  3888                           
  3889                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  3890  017482  0EFA               	movlw	250
  3891  017484  26E1               	addwf	fsr1l,f,c
  3892  017486  0EFF               	movlw	255
  3893  017488  22E2               	addwfc	fsr1h,f,c
  3894  01748A  0012               	return		;funcret
  3895  01748C                     __end_of_nanf:
  3896                           	opt callstack 0
  3897                           
  3898 ;; *************** function _get_raw_result *****************
  3899 ;; Defined at:
  3900 ;;		line 67 in file "daq.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  index           1  [STACK] enum E16136
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2  [STACK] unsigned short 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/4
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    6
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;;		_conv_raw_result
  3926 ;; This function uses a reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text14
  3930  017FE2                     __ptext14:
  3931                           	opt callstack 0
  3932  017FE2                     _get_raw_result:
  3933                           	opt callstack 24
  3934                           
  3935                           ;daq.c: 67: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 68: {;daq.c: 69:  r
      +                          eturn R.raw_adc[index];
  3936                           ;stkvar	_index @ sp[(0)+-1]
  3937                           
  3938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3939                           ;incstack = 0
  3940  017FE2  0EFF               	movlw	-1
  3941  017FE4  50E3               	movf	plusw1,w,c
  3942  017FE6  0D02               	mullw	2
  3943  017FE8  50F3               	movf	243,w,c
  3944  017FEA  0F60               	addlw	low _R
  3945  017FEC  6ED9               	movwf	fsr2l,c
  3946  017FEE  6ADA               	clrf	fsr2h,c
  3947  017FF0  006F FF78  F035    	movff	postinc2,btemp
  3948  017FF6  006F FF74  F036    	movff	postdec2,btemp+1
  3949                           
  3950                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3951  017FFC  52E5               	movf	postdec1,f,c
  3952  017FFE  0012               	return		;funcret
  3953  018000                     __end_of_get_raw_result:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function ___xxtofl *****************
  3957 ;; Defined at:
  3958 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  sign            1  [STACK] unsigned char 
  3961 ;;  val             4  [STACK] long 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  arg             4  [STACK] unsigned long 
  3964 ;;  exp             1  [STACK] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  4  [STACK] unsigned char 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/4
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    6
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_conv_raw_result
  3985 ;; This function uses a reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text15
  3989  015500                     __ptext15:
  3990                           	opt callstack 0
  3991  015500                     ___xxtofl:
  3992                           	opt callstack 0
  3993                           
  3994                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3995  015500  0E05               	movlw	5
  3996  015502  26E1               	addwf	fsr1l,f,c
  3997  015504  0E00               	movlw	0
  3998  015506  22E2               	addwfc	fsr1h,f,c
  3999                           
  4000                           ;stkvar	_sign @ sp[(-5)+-1]
  4001                           
  4002                           ;incstack = 0
  4003  015508  0EFA               	movlw	-6
  4004  01550A  50E3               	movf	plusw1,w,c
  4005  01550C  B4D8               	btfsc	status,2,c
  4006  01550E  D01D               	goto	l7843
  4007                           
  4008                           ;stkvar	_val @ sp[(-5)+-5]
  4009  015510  0EF9               	movlw	-7
  4010  015512  AEE3               	btfss	plusw1,7,c
  4011  015514  D01A               	goto	l7843
  4012                           
  4013                           ;stkvar	_val @ sp[(-5)+-5]
  4014  015516  0EF6               	movlw	-10
  4015  015518  006F FF8C  F03D    	movff	plusw1,btemp+8
  4016  01551E  0EF7               	movlw	-9
  4017  015520  006F FF8C  F03E    	movff	plusw1,btemp+9
  4018  015526  0EF8               	movlw	-8
  4019  015528  006F FF8C  F03F    	movff	plusw1,btemp+10
  4020  01552E  0EF9               	movlw	-7
  4021  015530  006F FF8C  F040    	movff	plusw1,btemp+11
  4022  015536  1E3D               	comf	(btemp+8)^0,f,c
  4023  015538  1E3E               	comf	(btemp+9)^0,f,c
  4024  01553A  1E3F               	comf	(btemp+10)^0,f,c
  4025  01553C  1E40               	comf	(btemp+11)^0,f,c
  4026  01553E  2A3D               	incf	(btemp+8)^0,f,c
  4027  015540  0E00               	movlw	0
  4028  015542  223E               	addwfc	(btemp+9)^0,f,c
  4029  015544  223F               	addwfc	(btemp+10)^0,f,c
  4030  015546  2240               	addwfc	(btemp+11)^0,f,c
  4031  015548  D010               	goto	L3
  4032  01554A                     l7843:
  4033                           
  4034                           ;stkvar	_val @ sp[(-5)+-5]
  4035  01554A  0EF6               	movlw	-10
  4036  01554C  006F FF8C  F03D    	movff	plusw1,btemp+8
  4037  015552  0EF7               	movlw	-9
  4038  015554  006F FF8C  F03E    	movff	plusw1,btemp+9
  4039  01555A  0EF8               	movlw	-8
  4040  01555C  006F FF8C  F03F    	movff	plusw1,btemp+10
  4041  015562  0EF9               	movlw	-7
  4042  015564  006F FF8C  F040    	movff	plusw1,btemp+11
  4043  01556A                     L3:
  4044                           
  4045                           ;stkvar	_arg @ sp[(-5)+0]
  4046  01556A  0EFB               	movlw	-5
  4047  01556C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4048  015572  0EFC               	movlw	-4
  4049  015574  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4050  01557A  0EFD               	movlw	-3
  4051  01557C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4052  015582  0EFE               	movlw	-2
  4053  015584  0060  F103  FFE3   	movff	btemp+11,plusw1
  4054                           
  4055                           ;stkvar	_val @ sp[(-5)+-5]
  4056  01558A  0EF6               	movlw	-10
  4057  01558C  50E3               	movf	plusw1,w,c
  4058  01558E  E113               	bnz	l7851
  4059  015590  0EF7               	movlw	-9
  4060  015592  50E3               	movf	plusw1,w,c
  4061  015594  E110               	bnz	l7851
  4062  015596  0EF8               	movlw	-8
  4063  015598  50E3               	movf	plusw1,w,c
  4064  01559A  E10D               	bnz	l7851
  4065  01559C  0EF9               	movlw	-7
  4066  01559E  50E3               	movf	plusw1,w,c
  4067  0155A0  A4D8               	btfss	status,2,c
  4068  0155A2  D009               	goto	l7851
  4069  0155A4  0E00               	movlw	0
  4070  0155A6  6E35               	movwf	btemp^0,c
  4071  0155A8  0E00               	movlw	0
  4072  0155AA  6E36               	movwf	(btemp+1)^0,c
  4073  0155AC  0E00               	movlw	0
  4074  0155AE  6E37               	movwf	(btemp+2)^0,c
  4075  0155B0  0E00               	movlw	0
  4076  0155B2  6E38               	movwf	(btemp+3)^0,c
  4077  0155B4  D0A2               	goto	l2632
  4078  0155B6                     l7851:
  4079  0155B6  0E96               	movlw	150
  4080  0155B8  6E40               	movwf	(btemp+11)^0,c
  4081                           
  4082                           ;stkvar	_exp @ sp[(-5)+4]
  4083  0155BA  0EFF               	movlw	-1
  4084  0155BC  0060  F103  FFE3   	movff	btemp+11,plusw1
  4085  0155C2  D00B               	goto	l7855
  4086  0155C4                     l7853:
  4087                           
  4088                           ;stkvar	_exp @ sp[(-5)+4]
  4089  0155C4  0EFF               	movlw	-1
  4090  0155C6  2AE3               	incf	plusw1,f,c
  4091                           
  4092                           ;stkvar	_arg @ sp[(-5)+0]
  4093  0155C8  90D8               	bcf	status,0,c
  4094  0155CA  0EFE               	movlw	-2
  4095  0155CC  32E3               	rrcf	plusw1,f,c
  4096  0155CE  0EFD               	movlw	-3
  4097  0155D0  32E3               	rrcf	plusw1,f,c
  4098  0155D2  0EFC               	movlw	-4
  4099  0155D4  32E3               	rrcf	plusw1,f,c
  4100  0155D6  0EFB               	movlw	-5
  4101  0155D8  32E3               	rrcf	plusw1,f,c
  4102  0155DA                     l7855:
  4103                           
  4104                           ;stkvar	_arg @ sp[(-5)+0]
  4105  0155DA  50E1               	movf	fsr1l,w,c
  4106  0155DC  0FFB               	addlw	-5
  4107  0155DE  6ED9               	movwf	fsr2l,c
  4108  0155E0  50E2               	movf	fsr1h,w,c
  4109  0155E2  6EDA               	movwf	fsr2h,c
  4110  0155E4  0EFF               	movlw	255
  4111  0155E6  22DA               	addwfc	fsr2h,f,c
  4112  0155E8  52DE               	movf	postinc2,f,c
  4113  0155EA  52DE               	movf	postinc2,f,c
  4114  0155EC  52DE               	movf	postinc2,f,c
  4115  0155EE  0EFE               	movlw	254
  4116  0155F0  14DD               	andwf	postdec2,w,c
  4117  0155F2  B4D8               	btfsc	status,2,c
  4118  0155F4  D018               	goto	l7863
  4119  0155F6  D7E6               	goto	l7853
  4120  0155F8                     l7857:
  4121                           
  4122                           ;stkvar	_exp @ sp[(-5)+4]
  4123  0155F8  0EFF               	movlw	-1
  4124  0155FA  2AE3               	incf	plusw1,f,c
  4125                           
  4126                           ;stkvar	_arg @ sp[(-5)+0]
  4127  0155FC  50E1               	movf	fsr1l,w,c
  4128  0155FE  0FFB               	addlw	-5
  4129  015600  6ED9               	movwf	fsr2l,c
  4130  015602  50E2               	movf	fsr1h,w,c
  4131  015604  6EDA               	movwf	fsr2h,c
  4132  015606  0EFF               	movlw	255
  4133  015608  22DA               	addwfc	fsr2h,f,c
  4134  01560A  2ADE               	incf	postinc2,f,c
  4135  01560C  0E00               	movlw	0
  4136  01560E  22DE               	addwfc	postinc2,f,c
  4137  015610  22DE               	addwfc	postinc2,f,c
  4138  015612  22DE               	addwfc	postinc2,f,c
  4139                           
  4140                           ;stkvar	_arg @ sp[(-5)+0]
  4141  015614  90D8               	bcf	status,0,c
  4142  015616  0EFE               	movlw	-2
  4143  015618  32E3               	rrcf	plusw1,f,c
  4144  01561A  0EFD               	movlw	-3
  4145  01561C  32E3               	rrcf	plusw1,f,c
  4146  01561E  0EFC               	movlw	-4
  4147  015620  32E3               	rrcf	plusw1,f,c
  4148  015622  0EFB               	movlw	-5
  4149  015624  32E3               	rrcf	plusw1,f,c
  4150  015626                     l7863:
  4151                           
  4152                           ;stkvar	_arg @ sp[(-5)+0]
  4153  015626  50E1               	movf	fsr1l,w,c
  4154  015628  0FFB               	addlw	-5
  4155  01562A  6ED9               	movwf	fsr2l,c
  4156  01562C  50E2               	movf	fsr1h,w,c
  4157  01562E  6EDA               	movwf	fsr2h,c
  4158  015630  0EFF               	movlw	255
  4159  015632  22DA               	addwfc	fsr2h,f,c
  4160  015634  52DE               	movf	postinc2,f,c
  4161  015636  52DE               	movf	postinc2,f,c
  4162  015638  52DE               	movf	postinc2,f,c
  4163  01563A  0EFF               	movlw	255
  4164  01563C  14DD               	andwf	postdec2,w,c
  4165  01563E  B4D8               	btfsc	status,2,c
  4166  015640  D00C               	goto	l7867
  4167  015642  D7DA               	goto	l7857
  4168  015644                     l7865:
  4169                           
  4170                           ;stkvar	_exp @ sp[(-5)+4]
  4171  015644  0EFF               	movlw	-1
  4172  015646  06E3               	decf	plusw1,f,c
  4173                           
  4174                           ;stkvar	_arg @ sp[(-5)+0]
  4175  015648  90D8               	bcf	status,0,c
  4176  01564A  0EFB               	movlw	-5
  4177  01564C  36E3               	rlcf	plusw1,f,c
  4178  01564E  0EFC               	movlw	-4
  4179  015650  36E3               	rlcf	plusw1,f,c
  4180  015652  0EFD               	movlw	-3
  4181  015654  36E3               	rlcf	plusw1,f,c
  4182  015656  0EFE               	movlw	-2
  4183  015658  36E3               	rlcf	plusw1,f,c
  4184  01565A                     l7867:
  4185                           
  4186                           ;stkvar	_arg @ sp[(-5)+0]
  4187  01565A  0EFD               	movlw	-3
  4188  01565C  BEE3               	btfsc	plusw1,7,c
  4189  01565E  D007               	goto	u7740
  4190                           
  4191                           ;stkvar	_exp @ sp[(-5)+4]
  4192  015660  0EFF               	movlw	-1
  4193  015662  006F FF8C  F035    	movff	plusw1,btemp
  4194  015668  0E02               	movlw	2
  4195  01566A  6035               	cpfslt	btemp^0,c
  4196  01566C  D7EB               	goto	l7865
  4197  01566E                     u7740:
  4198                           
  4199                           ;stkvar	_exp @ sp[(-5)+4]
  4200  01566E  0EFF               	movlw	-1
  4201  015670  B0E3               	btfsc	plusw1,0,c
  4202  015672  D002               	goto	l7875
  4203                           
  4204                           ;stkvar	_arg @ sp[(-5)+0]
  4205  015674  0EFD               	movlw	-3
  4206  015676  9EE3               	bcf	plusw1,7,c
  4207  015678                     l7875:
  4208                           
  4209                           ;stkvar	_exp @ sp[(-5)+4]
  4210  015678  50E1               	movf	fsr1l,w,c
  4211  01567A  0FFF               	addlw	-1
  4212  01567C  6ED9               	movwf	fsr2l,c
  4213  01567E  50E2               	movf	fsr1h,w,c
  4214  015680  6EDA               	movwf	fsr2h,c
  4215  015682  0EFF               	movlw	255
  4216  015684  22DA               	addwfc	fsr2h,f,c
  4217  015686  90D8               	bcf	status,0,c
  4218  015688  32DF               	rrcf	indf2,f,c
  4219                           
  4220                           ;stkvar	_exp @ sp[(-5)+4]
  4221  01568A  0EFF               	movlw	-1
  4222  01568C  006F FF8C  F040    	movff	plusw1,btemp+11
  4223  015692  0060  F100  F039   	movff	btemp+11,btemp+4
  4224  015698  6A3A               	clrf	(btemp+5)^0,c
  4225  01569A  6A3B               	clrf	(btemp+6)^0,c
  4226  01569C  6A3C               	clrf	(btemp+7)^0,c
  4227  01569E  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4228  0156A4  6A3B               	clrf	(btemp+6)^0,c
  4229  0156A6  6A3A               	clrf	(btemp+5)^0,c
  4230  0156A8  6A39               	clrf	(btemp+4)^0,c
  4231                           
  4232                           ;stkvar	_arg @ sp[(-5)+0]
  4233  0156AA  50E1               	movf	fsr1l,w,c
  4234  0156AC  0FFB               	addlw	-5
  4235  0156AE  6ED9               	movwf	fsr2l,c
  4236  0156B0  50E2               	movf	fsr1h,w,c
  4237  0156B2  6EDA               	movwf	fsr2h,c
  4238  0156B4  0EFF               	movlw	255
  4239  0156B6  22DA               	addwfc	fsr2h,f,c
  4240  0156B8  5039               	movf	(btemp+4)^0,w,c
  4241  0156BA  12DE               	iorwf	postinc2,f,c
  4242  0156BC  503A               	movf	(btemp+5)^0,w,c
  4243  0156BE  12DE               	iorwf	postinc2,f,c
  4244  0156C0  503B               	movf	(btemp+6)^0,w,c
  4245  0156C2  12DE               	iorwf	postinc2,f,c
  4246  0156C4  503C               	movf	(btemp+7)^0,w,c
  4247  0156C6  12DE               	iorwf	postinc2,f,c
  4248                           
  4249                           ;stkvar	_sign @ sp[(-5)+-1]
  4250  0156C8  0EFA               	movlw	-6
  4251  0156CA  50E3               	movf	plusw1,w,c
  4252  0156CC  B4D8               	btfsc	status,2,c
  4253  0156CE  D005               	goto	l7885
  4254                           
  4255                           ;stkvar	_val @ sp[(-5)+-5]
  4256  0156D0  0EF9               	movlw	-7
  4257  0156D2  AEE3               	btfss	plusw1,7,c
  4258  0156D4  D002               	goto	l7885
  4259                           
  4260                           ;stkvar	_arg @ sp[(-5)+0]
  4261  0156D6  0EFE               	movlw	-2
  4262  0156D8  8EE3               	bsf	plusw1,7,c
  4263  0156DA                     l7885:
  4264                           
  4265                           ;stkvar	_arg @ sp[(-5)+0]
  4266  0156DA  0EFB               	movlw	-5
  4267  0156DC  006F FF8C  F035    	movff	plusw1,btemp
  4268  0156E2  0EFC               	movlw	-4
  4269  0156E4  006F FF8C  F036    	movff	plusw1,btemp+1
  4270  0156EA  0EFD               	movlw	-3
  4271  0156EC  006F FF8C  F037    	movff	plusw1,btemp+2
  4272  0156F2  0EFE               	movlw	-2
  4273  0156F4  006F FF8C  F038    	movff	plusw1,btemp+3
  4274  0156FA                     l2632:
  4275                           
  4276                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4277  0156FA  0EF6               	movlw	246
  4278  0156FC  26E1               	addwf	fsr1l,f,c
  4279  0156FE  0EFF               	movlw	255
  4280  015700  22E2               	addwfc	fsr1h,f,c
  4281  015702  0012               	return		;funcret
  4282  015704                     __end_of___xxtofl:
  4283                           	opt callstack 0
  4284                           
  4285 ;; *************** function _clear_adc_scan *****************
  4286 ;; Defined at:
  4287 ;;		line 59 in file "daq.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1  [STACK] void 
  4294 ;; Registers used:
  4295 ;;		None
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/4
  4298 ;;		On exit  : 3F/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    6
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text16
  4316  01823E                     __ptext16:
  4317                           	opt callstack 0
  4318  01823E                     _clear_adc_scan:
  4319                           	opt callstack 24
  4320                           
  4321                           ;daq.c: 61:  R.done = 0;
  4322                           
  4323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4324                           ;incstack = 0
  4325  01823E  0100               	movlb	0	; () banked
  4326  018240  6B8B               	clrf	(_R+43)& (0+255),b	;volatile
  4327                           
  4328                           ; BSR set to: 0
  4329                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4330  018242  0012               	return		;funcret
  4331  018244                     __end_of_clear_adc_scan:
  4332                           	opt callstack 0
  4333                           
  4334 ;; *************** function _check_help *****************
  4335 ;; Defined at:
  4336 ;;		line 40 in file "mconfig.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  flipper         1  [STACK] _Bool 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1  [STACK] void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4345 ;; Tracked objects:
  4346 ;;		On entry : 3F/1
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:   18
  4357 ;; This function calls:
  4358 ;;		_StartTimer
  4359 ;;		_TimerDone
  4360 ;;		_display_help
  4361 ;;		_display_info
  4362 ;;		_get_vterm_ptr
  4363 ;;		_help_button
  4364 ;;		_mode_lamp_bright
  4365 ;;		_mode_lamp_dim
  4366 ;;		_set_display_info
  4367 ;;		_set_temp_display_help
  4368 ;;		_set_vterm
  4369 ;;		_sprintf
  4370 ;;		_update_lcd
  4371 ;;		_vterm_dump
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text17
  4378  0152EE                     __ptext17:
  4379                           	opt callstack 0
  4380  0152EE                     _check_help:
  4381                           	opt callstack 12
  4382                           
  4383                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4384                           
  4385                           ; BSR set to: 0
  4386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4387                           ;incstack = 0
  4388  0152EE  ECF6  F0BC         	call	_help_button	;wreg free
  4389  0152F2  5035               	movf	btemp^0,w,c
  4390  0152F4  B4D8               	btfsc	status,2,c
  4391  0152F6  D0D0               	goto	l9901
  4392  0152F8  EC0F  F0C1         	call	_display_info	;wreg free
  4393  0152FC  0435               	decf	btemp^0,w,c
  4394  0152FE  B4D8               	btfsc	status,2,c
  4395  015300  D0CB               	goto	l9901
  4396                           
  4397                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4398  015302  0EDC               	movlw	220
  4399  015304  6EE6               	movwf	postinc1,c
  4400  015306  0E05               	movlw	5
  4401  015308  6EE6               	movwf	postinc1,c
  4402  01530A  0E0B               	movlw	11
  4403  01530C  6EE6               	movwf	postinc1,c
  4404  01530E  ECD8  F0BC         	call	_StartTimer	;wreg free
  4405                           
  4406                           ;mconfig.c: 47:   if (V.debug)
  4407  015312  0101               	movlb	1	; () banked
  4408  015314  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;mconfig.c: 48:    vterm_dump();
  4412  015316  EC22  F0B0         	call	_vterm_dump	;wreg free
  4413                           
  4414                           ;mconfig.c: 50:   set_vterm(1);
  4415  01531A  0E01               	movlw	1
  4416  01531C  6EE6               	movwf	postinc1,c
  4417  01531E  EC4A  F0C0         	call	_set_vterm	;wreg free
  4418                           
  4419                           ; BSR set to: 4
  4420                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4421  015322  EC0F  F0C1         	call	_display_info	;wreg free
  4422  015326  5035               	movf	btemp^0,w,c
  4423  015328  6EE6               	movwf	postinc1,c
  4424  01532A  ECCB  F0C0         	call	_set_temp_display_help	;wreg free
  4425                           
  4426                           ; BSR set to: 1
  4427                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4428  01532E  0E01               	movlw	1
  4429  015330  6EE6               	movwf	postinc1,c
  4430  015332  EC00  F0C0         	call	_set_display_info	;wreg free
  4431                           
  4432                           ;mconfig.c: 53:   if (flipper) {
  4433                           ;stkvar	_flipper @ sp[(0)+-1]
  4434  015336  0EFF               	movlw	-1
  4435  015338  50E3               	movf	plusw1,w,c
  4436  01533A  B4D8               	btfsc	status,2,c
  4437  01533C  D019               	goto	l9889
  4438                           
  4439                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4440  01533E  0EC3               	movlw	low STR_14
  4441  015340  6EE6               	movwf	postinc1,c
  4442  015342  0EFF               	movlw	high STR_14
  4443  015344  6EE6               	movwf	postinc1,c
  4444  015346  0E2E               	movlw	low STR_16
  4445  015348  6EE6               	movwf	postinc1,c
  4446  01534A  0EFF               	movlw	high STR_16
  4447  01534C  6EE6               	movwf	postinc1,c
  4448  01534E  0E01               	movlw	1
  4449  015350  6EE6               	movwf	postinc1,c
  4450  015352  0E00               	movlw	0
  4451  015354  6EE6               	movwf	postinc1,c
  4452  015356  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4453  01535A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4454  015360  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4455  015366  0E06               	movlw	6
  4456  015368  6EE6               	movwf	postinc1,c
  4457  01536A  ECE8  F0B2         	call	_sprintf	;wreg free
  4458                           
  4459                           ;mconfig.c: 55:   } else {
  4460  01536E  D018               	goto	l1551
  4461  015370                     l9889:
  4462                           
  4463                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4464  015370  0ED9               	movlw	low STR_15
  4465  015372  6EE6               	movwf	postinc1,c
  4466  015374  0EFF               	movlw	high STR_15
  4467  015376  6EE6               	movwf	postinc1,c
  4468  015378  0E2E               	movlw	low STR_16
  4469  01537A  6EE6               	movwf	postinc1,c
  4470  01537C  0EFF               	movlw	high STR_16
  4471  01537E  6EE6               	movwf	postinc1,c
  4472  015380  0E01               	movlw	1
  4473  015382  6EE6               	movwf	postinc1,c
  4474  015384  0E00               	movlw	0
  4475  015386  6EE6               	movwf	postinc1,c
  4476  015388  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4477  01538C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4478  015392  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4479  015398  0E06               	movlw	6
  4480  01539A  6EE6               	movwf	postinc1,c
  4481  01539C  ECE8  F0B2         	call	_sprintf	;wreg free
  4482  0153A0                     l1551:
  4483                           
  4484                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4485  0153A0  0101               	movlb	1	; () banked
  4486  0153A2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4487  0153A4  32E8               	rrcf	wreg,f,c
  4488  0153A6  32E8               	rrcf	wreg,f,c
  4489  0153A8  0B03               	andlw	3
  4490  0153AA  0D24               	mullw	36
  4491  0153AC  0E12               	movlw	18
  4492  0153AE  26F3               	addwf	243,f,c
  4493  0153B0  0E00               	movlw	0
  4494  0153B2  22F4               	addwfc	244,f,c
  4495  0153B4  0E73               	movlw	low _T
  4496  0153B6  6E3F               	movwf	(btemp+10)^0,c
  4497  0153B8  0EFE               	movlw	high _T
  4498  0153BA  6E40               	movwf	(btemp+11)^0,c
  4499  0153BC  50F3               	movf	243,w,c
  4500  0153BE  263F               	addwf	(btemp+10)^0,f,c
  4501  0153C0  50F4               	movf	244,w,c
  4502  0153C2  2240               	addwfc	(btemp+11)^0,f,c
  4503  0153C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4504  0153CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  4505  0153D0  0ECF               	movlw	low STR_18
  4506  0153D2  6EE6               	movwf	postinc1,c
  4507  0153D4  0EFF               	movlw	high STR_18
  4508  0153D6  6EE6               	movwf	postinc1,c
  4509  0153D8  0E01               	movlw	1
  4510  0153DA  6EE6               	movwf	postinc1,c
  4511  0153DC  0E01               	movlw	1
  4512  0153DE  6EE6               	movwf	postinc1,c
  4513  0153E0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4514  0153E4  0060  F0D7  FFE6   	movff	btemp,postinc1
  4515  0153EA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4516  0153F0  0E06               	movlw	6
  4517  0153F2  6EE6               	movwf	postinc1,c
  4518  0153F4  ECE8  F0B2         	call	_sprintf	;wreg free
  4519                           
  4520                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4521  0153F8  0101               	movlb	1	; () banked
  4522  0153FA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4523  0153FC  32E8               	rrcf	wreg,f,c
  4524  0153FE  32E8               	rrcf	wreg,f,c
  4525  015400  0B03               	andlw	3
  4526  015402  0D24               	mullw	36
  4527  015404  0E73               	movlw	low _T
  4528  015406  6E3F               	movwf	(btemp+10)^0,c
  4529  015408  0EFE               	movlw	high _T
  4530  01540A  6E40               	movwf	(btemp+11)^0,c
  4531  01540C  50F3               	movf	243,w,c
  4532  01540E  263F               	addwf	(btemp+10)^0,f,c
  4533  015410  50F4               	movf	244,w,c
  4534  015412  2240               	addwfc	(btemp+11)^0,f,c
  4535  015414  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4536  01541A  0060  F103  FFE6   	movff	btemp+11,postinc1
  4537  015420  0ECF               	movlw	low STR_18
  4538  015422  6EE6               	movwf	postinc1,c
  4539  015424  0EFF               	movlw	high STR_18
  4540  015426  6EE6               	movwf	postinc1,c
  4541  015428  0E01               	movlw	1
  4542  01542A  6EE6               	movwf	postinc1,c
  4543  01542C  0E02               	movlw	2
  4544  01542E  6EE6               	movwf	postinc1,c
  4545  015430  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4546  015434  0060  F0D7  FFE6   	movff	btemp,postinc1
  4547  01543A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4548  015440  0E06               	movlw	6
  4549  015442  6EE6               	movwf	postinc1,c
  4550  015444  ECE8  F0B2         	call	_sprintf	;wreg free
  4551                           
  4552                           ;mconfig.c: 60:   V.help_id++;
  4553  015448  EE20  F19B         	lfsr	2,_V+155	;volatile
  4554  01544C  38DF               	swapf	223,w,c
  4555  01544E  6E40               	movwf	(btemp+11)^0,c
  4556  015450  3240               	rrcf	(btemp+11)^0,f,c
  4557  015452  3040               	rrcf	(btemp+11)^0,w,c
  4558  015454  0B03               	andlw	3
  4559  015456  6E40               	movwf	(btemp+11)^0,c
  4560  015458  2A40               	incf	(btemp+11)^0,f,c
  4561  01545A  3A40               	swapf	(btemp+11)^0,f,c
  4562  01545C  3640               	rlcf	(btemp+11)^0,f,c
  4563  01545E  3640               	rlcf	(btemp+11)^0,f,c
  4564  015460  50DF               	movf	223,w,c
  4565  015462  1840               	xorwf	(btemp+11)^0,w,c
  4566  015464  0B3F               	andlw	-193
  4567  015466  1840               	xorwf	(btemp+11)^0,w,c
  4568  015468  6EDF               	movwf	223,c
  4569                           
  4570                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4571  01546A  0EB8               	movlw	184
  4572  01546C  6EE6               	movwf	postinc1,c
  4573  01546E  0E0B               	movlw	11
  4574  015470  6EE6               	movwf	postinc1,c
  4575  015472  0E09               	movlw	9
  4576  015474  6EE6               	movwf	postinc1,c
  4577  015476  ECD8  F0BC         	call	_StartTimer	;wreg free
  4578                           
  4579                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4580  01547A  0EB8               	movlw	184
  4581  01547C  6EE6               	movwf	postinc1,c
  4582  01547E  0E0B               	movlw	11
  4583  015480  6EE6               	movwf	postinc1,c
  4584  015482  0E07               	movlw	7
  4585  015484  6EE6               	movwf	postinc1,c
  4586  015486  ECD8  F0BC         	call	_StartTimer	;wreg free
  4587                           
  4588                           ;mconfig.c: 63:   mode_lamp_bright();
  4589  01548A  ECDA  F0C0         	call	_mode_lamp_bright	;wreg free
  4590                           
  4591                           ;mconfig.c: 64:   update_lcd(1);
  4592  01548E  0E01               	movlw	1
  4593  015490  6EE6               	movwf	postinc1,c
  4594  015492  EC61  F0B2         	call	_update_lcd	;wreg free
  4595                           
  4596                           ;mconfig.c: 65:  } else {
  4597  015496  D032               	goto	l1555
  4598  015498                     l9901:
  4599                           
  4600                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4601  015498  0E09               	movlw	9
  4602  01549A  6EE6               	movwf	postinc1,c
  4603  01549C  EC8B  F0BF         	call	_TimerDone	;wreg free
  4604  0154A0  5035               	movf	btemp^0,w,c
  4605  0154A2  B4D8               	btfsc	status,2,c
  4606  0154A4  D02B               	goto	l1555
  4607                           
  4608                           ;mconfig.c: 67:    set_vterm(0);
  4609  0154A6  0E00               	movlw	0
  4610  0154A8  6EE6               	movwf	postinc1,c
  4611  0154AA  EC4A  F0C0         	call	_set_vterm	;wreg free
  4612                           
  4613                           ; BSR set to: 4
  4614                           ;mconfig.c: 68:    V.help = 0;
  4615  0154AE  0101               	movlb	1	; () banked
  4616  0154B0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4617                           
  4618                           ; BSR set to: 1
  4619                           ;mconfig.c: 69:    set_display_info(display_help());
  4620  0154B2  EC13  F0C1         	call	_display_help	;wreg free
  4621  0154B6  5035               	movf	btemp^0,w,c
  4622  0154B8  6EE6               	movwf	postinc1,c
  4623  0154BA  EC00  F0C0         	call	_set_display_info	;wreg free
  4624                           
  4625                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4626  0154BE  0060  F657  FFE6   	movff	_V+149,postinc1
  4627  0154C4  0060  F65B  FFE6   	movff	_V+150,postinc1
  4628  0154CA  EC7F  F0C0         	call	_mode_lamp_dim	;wreg free
  4629                           
  4630                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4631  0154CE  0E0B               	movlw	11
  4632  0154D0  6EE6               	movwf	postinc1,c
  4633  0154D2  EC8B  F0BF         	call	_TimerDone	;wreg free
  4634  0154D6  5035               	movf	btemp^0,w,c
  4635  0154D8  B4D8               	btfsc	status,2,c
  4636  0154DA  D010               	goto	l1555
  4637                           
  4638                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4639  0154DC  0101               	movlb	1	; () banked
  4640  0154DE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4641  0154E0  A4D8               	btfss	status,2,c
  4642  0154E2  D002               	goto	u9970
  4643  0154E4  0E01               	movlw	1
  4644  0154E6  D001               	goto	u9980
  4645  0154E8                     u9970:
  4646  0154E8  0E00               	movlw	0
  4647  0154EA                     u9980:
  4648  0154EA  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4649                           
  4650                           ; BSR set to: 1
  4651                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4652  0154EC  0EDC               	movlw	220
  4653  0154EE  6EE6               	movwf	postinc1,c
  4654  0154F0  0E05               	movlw	5
  4655  0154F2  6EE6               	movwf	postinc1,c
  4656  0154F4  0E0B               	movlw	11
  4657  0154F6  6EE6               	movwf	postinc1,c
  4658  0154F8  ECD8  F0BC         	call	_StartTimer	;wreg free
  4659  0154FC                     l1555:
  4660                           
  4661                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4662  0154FC  52E5               	movf	postdec1,f,c
  4663  0154FE  0012               	return		;funcret
  4664  015500                     __end_of_check_help:
  4665                           	opt callstack 0
  4666                           
  4667 ;; *************** function _vterm_dump *****************
  4668 ;; Defined at:
  4669 ;;		line 118 in file "mconfig.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1  [STACK] void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4678 ;; Tracked objects:
  4679 ;;		On entry : 3F/1
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:   17
  4690 ;; This function calls:
  4691 ;;		_WaitMs
  4692 ;;		_eaDogM_WriteStringAtPos
  4693 ;;		_get_vterm_ptr
  4694 ;;		_sprintf
  4695 ;;		_wait_lcd_done
  4696 ;; This function is called by:
  4697 ;;		_check_help
  4698 ;; This function uses a reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text18
  4702  016044                     __ptext18:
  4703                           	opt callstack 0
  4704  016044                     _vterm_dump:
  4705                           	opt callstack 12
  4706                           
  4707                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4708                           
  4709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4710                           ;incstack = 0
  4711  016044  0E01               	movlw	1
  4712  016046  6EE6               	movwf	postinc1,c
  4713  016048  0E00               	movlw	0
  4714  01604A  6EE6               	movwf	postinc1,c
  4715  01604C  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4716  016050  0060  F0D7  FFE6   	movff	btemp,postinc1
  4717  016056  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4718  01605C  0E00               	movlw	0
  4719  01605E  6EE6               	movwf	postinc1,c
  4720  016060  0E00               	movlw	0
  4721  016062  6EE6               	movwf	postinc1,c
  4722  016064  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4723  016068  0060  F0D7  FFE6   	movff	btemp,postinc1
  4724  01606E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4725  016074  0E98               	movlw	low STR_20
  4726  016076  6EE6               	movwf	postinc1,c
  4727  016078  0EFF               	movlw	high STR_20
  4728  01607A  6EE6               	movwf	postinc1,c
  4729  01607C  0E01               	movlw	low (_V+1)
  4730  01607E  6EE6               	movwf	postinc1,c
  4731  016080  0E01               	movlw	high (_V+1)
  4732  016082  6EE6               	movwf	postinc1,c
  4733  016084  0E08               	movlw	8
  4734  016086  6EE6               	movwf	postinc1,c
  4735  016088  ECE8  F0B2         	call	_sprintf	;wreg free
  4736                           
  4737                           ;mconfig.c: 121:  wait_lcd_done();
  4738  01608C  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4742  016090  0E01               	movlw	low (_V+1)
  4743  016092  6EE6               	movwf	postinc1,c
  4744  016094  0E01               	movlw	high (_V+1)
  4745  016096  6EE6               	movwf	postinc1,c
  4746  016098  0E00               	movlw	0
  4747  01609A  6EE6               	movwf	postinc1,c
  4748  01609C  0E00               	movlw	0
  4749  01609E  6EE6               	movwf	postinc1,c
  4750  0160A0  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4751                           
  4752                           ; BSR set to: 59
  4753                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4754  0160A4  0E01               	movlw	1
  4755  0160A6  6EE6               	movwf	postinc1,c
  4756  0160A8  0E01               	movlw	1
  4757  0160AA  6EE6               	movwf	postinc1,c
  4758  0160AC  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4759  0160B0  0060  F0D7  FFE6   	movff	btemp,postinc1
  4760  0160B6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4761  0160BC  0E00               	movlw	0
  4762  0160BE  6EE6               	movwf	postinc1,c
  4763  0160C0  0E01               	movlw	1
  4764  0160C2  6EE6               	movwf	postinc1,c
  4765  0160C4  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4766  0160C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  4767  0160CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4768  0160D4  0E98               	movlw	low STR_20
  4769  0160D6  6EE6               	movwf	postinc1,c
  4770  0160D8  0EFF               	movlw	high STR_20
  4771  0160DA  6EE6               	movwf	postinc1,c
  4772  0160DC  0E01               	movlw	low (_V+1)
  4773  0160DE  6EE6               	movwf	postinc1,c
  4774  0160E0  0E01               	movlw	high (_V+1)
  4775  0160E2  6EE6               	movwf	postinc1,c
  4776  0160E4  0E08               	movlw	8
  4777  0160E6  6EE6               	movwf	postinc1,c
  4778  0160E8  ECE8  F0B2         	call	_sprintf	;wreg free
  4779                           
  4780                           ;mconfig.c: 124:  wait_lcd_done();
  4781  0160EC  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4782                           
  4783                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4784  0160F0  0E01               	movlw	low (_V+1)
  4785  0160F2  6EE6               	movwf	postinc1,c
  4786  0160F4  0E01               	movlw	high (_V+1)
  4787  0160F6  6EE6               	movwf	postinc1,c
  4788  0160F8  0E00               	movlw	0
  4789  0160FA  6EE6               	movwf	postinc1,c
  4790  0160FC  0E01               	movlw	1
  4791  0160FE  6EE6               	movwf	postinc1,c
  4792  016100  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4793                           
  4794                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4795  016104  0E01               	movlw	1
  4796  016106  6EE6               	movwf	postinc1,c
  4797  016108  0E02               	movlw	2
  4798  01610A  6EE6               	movwf	postinc1,c
  4799  01610C  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4800  016110  0060  F0D7  FFE6   	movff	btemp,postinc1
  4801  016116  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4802  01611C  0E00               	movlw	0
  4803  01611E  6EE6               	movwf	postinc1,c
  4804  016120  0E02               	movlw	2
  4805  016122  6EE6               	movwf	postinc1,c
  4806  016124  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4807  016128  0060  F0D7  FFE6   	movff	btemp,postinc1
  4808  01612E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4809  016134  0E98               	movlw	low STR_20
  4810  016136  6EE6               	movwf	postinc1,c
  4811  016138  0EFF               	movlw	high STR_20
  4812  01613A  6EE6               	movwf	postinc1,c
  4813  01613C  0E01               	movlw	low (_V+1)
  4814  01613E  6EE6               	movwf	postinc1,c
  4815  016140  0E01               	movlw	high (_V+1)
  4816  016142  6EE6               	movwf	postinc1,c
  4817  016144  0E08               	movlw	8
  4818  016146  6EE6               	movwf	postinc1,c
  4819  016148  ECE8  F0B2         	call	_sprintf	;wreg free
  4820                           
  4821                           ;mconfig.c: 127:  wait_lcd_done();
  4822  01614C  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4826  016150  0E01               	movlw	low (_V+1)
  4827  016152  6EE6               	movwf	postinc1,c
  4828  016154  0E01               	movlw	high (_V+1)
  4829  016156  6EE6               	movwf	postinc1,c
  4830  016158  0E00               	movlw	0
  4831  01615A  6EE6               	movwf	postinc1,c
  4832  01615C  0E02               	movlw	2
  4833  01615E  6EE6               	movwf	postinc1,c
  4834  016160  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4835                           
  4836                           ; BSR set to: 59
  4837                           ;mconfig.c: 129:  WaitMs(3000);
  4838  016164  0EB8               	movlw	184
  4839  016166  6EE6               	movwf	postinc1,c
  4840  016168  0E0B               	movlw	11
  4841  01616A  6EE6               	movwf	postinc1,c
  4842  01616C  EC2E  F0BD         	call	_WaitMs	;wreg free
  4843                           
  4844                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4845  016170  0012               	return		;funcret
  4846  016172                     __end_of_vterm_dump:
  4847                           	opt callstack 0
  4848                           
  4849 ;; *************** function _sprintf *****************
  4850 ;; Defined at:
  4851 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  s               2  [STACK] PTR unsigned char 
  4854 ;;		 -> D.lcd(216), D(218), V(171), 
  4855 ;;  fmt             2  [STACK] PTR const unsigned char 
  4856 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4857 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4858 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4859 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4860 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4861 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  f               6  [STACK] struct _IO_FILE
  4864 ;;  ap              2  [STACK] PTR void [1]
  4865 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4866 ;;  ret             2    0        int 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2  [STACK] int 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/4
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   14
  4883 ;; This function calls:
  4884 ;;		_vfprintf
  4885 ;; This function is called by:
  4886 ;;		_main
  4887 ;;		_check_help
  4888 ;;		_vterm_dump
  4889 ;; This function uses a reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text19
  4893  0165D0                     __ptext19:
  4894                           	opt callstack 0
  4895  0165D0                     _sprintf:
  4896                           	opt callstack 0
  4897                           
  4898                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4899  0165D0  0E08               	movlw	8
  4900  0165D2  26E1               	addwf	fsr1l,f,c
  4901  0165D4  0E00               	movlw	0
  4902  0165D6  22E2               	addwfc	fsr1h,f,c
  4903                           
  4904                           ;incstack = 0
  4905  0165D8  0EFE               	movlw	254
  4906  0165DA  6E3F               	movwf	(btemp+10)^0,c
  4907  0165DC  0EFF               	movlw	255
  4908  0165DE  6E40               	movwf	(btemp+11)^0,c
  4909                           
  4910                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4911  0165E0  0EF5               	movlw	245
  4912  0165E2  24E1               	addwf	fsr1l,w,c
  4913  0165E4  6E3D               	movwf	(btemp+8)^0,c
  4914  0165E6  0EFF               	movlw	255
  4915  0165E8  20E2               	addwfc	fsr1h,w,c
  4916  0165EA  6E3E               	movwf	(btemp+9)^0,c
  4917  0165EC  503F               	movf	(btemp+10)^0,w,c
  4918  0165EE  263D               	addwf	(btemp+8)^0,f,c
  4919  0165F0  5040               	movf	(btemp+11)^0,w,c
  4920  0165F2  223E               	addwfc	(btemp+9)^0,f,c
  4921                           
  4922                           ;stkvar	_ap @ sp[(-8)+6]
  4923  0165F4  0EFF               	movlw	-1
  4924  0165F6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4925  0165FC  0EFE               	movlw	-2
  4926  0165FE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4927                           
  4928                           ;stkvar	_s @ sp[(-8)+-3]
  4929  016604  0EF5               	movlw	-11
  4930  016606  006F FF8C  F03F    	movff	plusw1,btemp+10
  4931  01660C  0EF6               	movlw	-10
  4932  01660E  006F FF8C  F040    	movff	plusw1,btemp+11
  4933                           
  4934                           ;stkvar	_f @ sp[(-8)+0]
  4935  016614  0EF9               	movlw	-7
  4936  016616  0060  F103  FFE3   	movff	btemp+11,plusw1
  4937  01661C  0EF8               	movlw	-8
  4938  01661E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4939                           
  4940                           ;stkvar	_f @ sp[(-8)+0]
  4941  016624  0EFA               	movlw	250
  4942  016626  24E1               	addwf	fsr1l,w,c
  4943  016628  6ED9               	movwf	fsr2l,c
  4944  01662A  0EFF               	movlw	255
  4945  01662C  20E2               	addwfc	fsr1h,w,c
  4946  01662E  6EDA               	movwf	fsr2h,c
  4947  016630  0E00               	movlw	0
  4948  016632  6EDE               	movwf	postinc2,c
  4949  016634  0E00               	movlw	0
  4950  016636  6EDD               	movwf	postdec2,c
  4951                           
  4952                           ;stkvar	_f @ sp[(-8)+0]
  4953  016638  0EFC               	movlw	252
  4954  01663A  24E1               	addwf	fsr1l,w,c
  4955  01663C  6ED9               	movwf	fsr2l,c
  4956  01663E  0EFF               	movlw	255
  4957  016640  20E2               	addwfc	fsr1h,w,c
  4958  016642  6EDA               	movwf	fsr2h,c
  4959  016644  0E00               	movlw	0
  4960  016646  6EDE               	movwf	postinc2,c
  4961  016648  0E00               	movlw	0
  4962  01664A  6EDD               	movwf	postdec2,c
  4963                           
  4964                           ;stkvar	_ap @ sp[(-8)+6]
  4965  01664C  0EFE               	movlw	254
  4966  01664E  24E1               	addwf	fsr1l,w,c
  4967  016650  6E35               	movwf	btemp^0,c
  4968  016652  0EFF               	movlw	255
  4969  016654  20E2               	addwfc	fsr1h,w,c
  4970  016656  6E36               	movwf	(btemp+1)^0,c
  4971  016658  0060  F0D7  FFE6   	movff	btemp,postinc1
  4972  01665E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4973                           
  4974                           ;stkvar	_fmt @ sp[(-10)+-5]
  4975  016664  0EF1               	movlw	-15
  4976  016666  006F FF8F FFE6     	movff	plusw1,postinc1
  4977  01666C  006F FF8F FFE6     	movff	plusw1,postinc1
  4978                           
  4979                           ;stkvar	_f @ sp[(-12)+0]
  4980  016672  0EF4               	movlw	244
  4981  016674  24E1               	addwf	fsr1l,w,c
  4982  016676  6E35               	movwf	btemp^0,c
  4983  016678  0EFF               	movlw	255
  4984  01667A  20E2               	addwfc	fsr1h,w,c
  4985  01667C  6E36               	movwf	(btemp+1)^0,c
  4986  01667E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4987  016684  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4988  01668A  ECBC  F0B5         	call	_vfprintf	;wreg free
  4989                           
  4990                           ;stkvar	_f @ sp[(-8)+0]
  4991  01668E  0EFA               	movlw	250
  4992  016690  24E1               	addwf	fsr1l,w,c
  4993  016692  6ED9               	movwf	fsr2l,c
  4994  016694  0EFF               	movlw	255
  4995  016696  20E2               	addwfc	fsr1h,w,c
  4996  016698  6EDA               	movwf	fsr2h,c
  4997  01669A  006F FF78  F03F    	movff	postinc2,btemp+10
  4998  0166A0  006F FF74  F040    	movff	postdec2,btemp+11
  4999                           
  5000                           ;stkvar	_s @ sp[(-8)+-3]
  5001  0166A6  0EF5               	movlw	-11
  5002  0166A8  006F FF8C  F03D    	movff	plusw1,btemp+8
  5003  0166AE  0EF6               	movlw	-10
  5004  0166B0  006F FF8C  F03E    	movff	plusw1,btemp+9
  5005  0166B6  503F               	movf	(btemp+10)^0,w,c
  5006  0166B8  243D               	addwf	(btemp+8)^0,w,c
  5007  0166BA  6ED9               	movwf	fsr2l,c
  5008  0166BC  5040               	movf	(btemp+11)^0,w,c
  5009  0166BE  203E               	addwfc	(btemp+9)^0,w,c
  5010  0166C0  6EDA               	movwf	fsr2h,c
  5011  0166C2  0E00               	movlw	0
  5012  0166C4  6EDF               	movwf	indf2,c
  5013                           
  5014                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  5015  0166C6  0EF8               	movlw	248
  5016  0166C8  26E1               	addwf	fsr1l,f,c
  5017  0166CA  0EFF               	movlw	255
  5018  0166CC  22E2               	addwfc	fsr1h,f,c
  5019  0166CE  52E5               	movf	postdec1,f,c
  5020  0166D0  50E7               	movf	indf1,w,c
  5021  0166D2  5EE1               	subwf	fsr1l,f,c
  5022  0166D4  0E00               	movlw	0
  5023  0166D6  5AE2               	subwfb	fsr1h,f,c
  5024  0166D8  0012               	return		;funcret
  5025  0166DA                     __end_of_sprintf:
  5026                           	opt callstack 0
  5027                           
  5028 ;; *************** function _get_vterm_ptr *****************
  5029 ;; Defined at:
  5030 ;;		line 113 in file "mconfig.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  line            1  [STACK] unsigned char 
  5033 ;;  vterm           1  [STACK] unsigned char 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2  [STACK] PTR unsigned char 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/4
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    6
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;;		_check_help
  5057 ;;		_vterm_dump
  5058 ;; This function uses a reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text20
  5062  017BC0                     __ptext20:
  5063                           	opt callstack 0
  5064  017BC0                     _get_vterm_ptr:
  5065                           	opt callstack 24
  5066                           
  5067                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5068                           ;stkvar	_vterm @ sp[(0)+-2]
  5069                           
  5070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5071                           ;incstack = 0
  5072  017BC0  0EFE               	movlw	-2
  5073  017BC2  50E3               	movf	plusw1,w,c
  5074  017BC4  0B03               	andlw	3
  5075  017BC6  0D36               	mullw	54
  5076  017BC8  0E00               	movlw	low _D
  5077  017BCA  6E35               	movwf	btemp^0,c
  5078  017BCC  0E04               	movlw	high _D
  5079  017BCE  6E36               	movwf	(btemp+1)^0,c
  5080  017BD0  50F3               	movf	243,w,c
  5081  017BD2  2635               	addwf	btemp^0,f,c
  5082  017BD4  50F4               	movf	244,w,c
  5083  017BD6  2236               	addwfc	(btemp+1)^0,f,c
  5084                           
  5085                           ;stkvar	_line @ sp[(0)+-1]
  5086  017BD8  0EFF               	movlw	-1
  5087  017BDA  50E3               	movf	plusw1,w,c
  5088  017BDC  0B03               	andlw	3
  5089  017BDE  0D12               	mullw	18
  5090  017BE0  50F3               	movf	243,w,c
  5091  017BE2  2635               	addwf	btemp^0,f,c
  5092  017BE4  50F4               	movf	244,w,c
  5093  017BE6  2236               	addwfc	(btemp+1)^0,f,c
  5094                           
  5095                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5096  017BE8  52E5               	movf	postdec1,f,c
  5097  017BEA  52E5               	movf	postdec1,f,c
  5098  017BEC  0012               	return		;funcret
  5099  017BEE                     __end_of_get_vterm_ptr:
  5100                           	opt callstack 0
  5101                           
  5102 ;; *************** function _WaitMs *****************
  5103 ;; Defined at:
  5104 ;;		line 32 in file "timers.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  numMilliseco    2  [STACK] const unsigned short 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1  [STACK] void 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/1
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    7
  5125 ;; This function calls:
  5126 ;;		_StartTimer
  5127 ;;		_TimerDone
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;;		_vterm_dump
  5131 ;; This function uses a reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text21
  5135  017A5C                     __ptext21:
  5136                           	opt callstack 0
  5137  017A5C                     _WaitMs:
  5138                           	opt callstack 21
  5139                           
  5140                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5141                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5142                           
  5143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5144                           ;incstack = 0
  5145  017A5C  0EFE               	movlw	-2
  5146  017A5E  006F FF8F FFE6     	movff	plusw1,postinc1
  5147  017A64  006F FF8F FFE6     	movff	plusw1,postinc1
  5148  017A6A  0E00               	movlw	0
  5149  017A6C  6EE6               	movwf	postinc1,c
  5150  017A6E  ECD8  F0BC         	call	_StartTimer	;wreg free
  5151                           
  5152                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5153  017A72  D005               	goto	l7805
  5154  017A74                     l1481:
  5155                           
  5156                           ;timers.c: 36:   __nop();
  5157  017A74  F000               	nop	
  5158                           
  5159                           ;timers.c: 37:   __nop();
  5160  017A76  F000               	nop	
  5161                           
  5162                           ;timers.c: 38:   __nop();
  5163  017A78  F000               	nop	
  5164                           
  5165                           ;timers.c: 39:   __nop();
  5166  017A7A  F000               	nop	
  5167  017A7C  0004               	clrwdt		;# 
  5168  017A7E                     l7805:
  5169                           
  5170                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5171  017A7E  0E00               	movlw	0
  5172  017A80  6EE6               	movwf	postinc1,c
  5173  017A82  EC8B  F0BF         	call	_TimerDone	;wreg free
  5174  017A86  5035               	movf	btemp^0,w,c
  5175  017A88  B4D8               	btfsc	status,2,c
  5176  017A8A  D7F4               	goto	l1481
  5177                           
  5178                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5179  017A8C  52E5               	movf	postdec1,f,c
  5180  017A8E  52E5               	movf	postdec1,f,c
  5181  017A90  0012               	return		;funcret
  5182  017A92                     __end_of_WaitMs:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function _update_lcd *****************
  5186 ;; Defined at:
  5187 ;;		line 82 in file "mconfig.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  vterm           1  [STACK] unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1  [STACK] unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/4
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:   17
  5208 ;; This function calls:
  5209 ;;		_eaDogM_WriteStringAtPos
  5210 ;;		_wait_lcd_done
  5211 ;; This function is called by:
  5212 ;;		_main
  5213 ;;		_check_help
  5214 ;; This function uses a reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text22
  5218  0164C2                     __ptext22:
  5219                           	opt callstack 0
  5220  0164C2                     _update_lcd:
  5221                           	opt callstack 13
  5222                           
  5223                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5224                           ;stkvar	_vterm @ sp[(0)+-1]
  5225                           
  5226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5227                           ;incstack = 0
  5228  0164C2  0EFF               	movlw	-1
  5229  0164C4  006F FF8C  F035    	movff	plusw1,btemp
  5230  0164CA  0E03               	movlw	3
  5231  0164CC  1635               	andwf	btemp^0,f,c
  5232  0164CE  0EFF               	movlw	-1
  5233  0164D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  5234                           
  5235                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5236  0164D6  0104               	movlb	4	; () banked
  5237  0164D8  A1D8               	btfss	(_D+216)& (0+255),0,b
  5238  0164DA  D004               	goto	l9773
  5239                           
  5240                           ; BSR set to: 4
  5241                           ;stkvar	_vterm @ sp[(0)+-1]
  5242  0164DC  0EFF               	movlw	-1
  5243  0164DE  50E3               	movf	plusw1,w,c
  5244  0164E0  B4D8               	btfsc	status,2,c
  5245  0164E2  D074               	goto	l1559
  5246  0164E4                     l9773:
  5247                           
  5248                           ; BSR set to: 4
  5249                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5250                           ;stkvar	_vterm @ sp[(0)+-1]
  5251  0164E4  0EFF               	movlw	-1
  5252  0164E6  50E3               	movf	plusw1,w,c
  5253  0164E8  0D36               	mullw	54
  5254  0164EA  0E10               	movlw	low (_D+16)
  5255  0164EC  24F3               	addwf	243,w,c
  5256  0164EE  6ED9               	movwf	fsr2l,c
  5257  0164F0  0E04               	movlw	high (_D+16)
  5258  0164F2  20F4               	addwfc	prodh,w,c
  5259  0164F4  6EDA               	movwf	fsr2h,c
  5260  0164F6  0E00               	movlw	0
  5261  0164F8  6EDF               	movwf	indf2,c
  5262                           
  5263                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5264                           ;stkvar	_vterm @ sp[(0)+-1]
  5265  0164FA  0EFF               	movlw	-1
  5266  0164FC  50E3               	movf	plusw1,w,c
  5267  0164FE  0D36               	mullw	54
  5268  016500  0E22               	movlw	low (_D+34)
  5269  016502  24F3               	addwf	243,w,c
  5270  016504  6ED9               	movwf	fsr2l,c
  5271  016506  0E04               	movlw	high (_D+34)
  5272  016508  20F4               	addwfc	prodh,w,c
  5273  01650A  6EDA               	movwf	fsr2h,c
  5274  01650C  0E00               	movlw	0
  5275  01650E  6EDF               	movwf	indf2,c
  5276                           
  5277                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5278                           ;stkvar	_vterm @ sp[(0)+-1]
  5279  016510  0EFF               	movlw	-1
  5280  016512  50E3               	movf	plusw1,w,c
  5281  016514  0D36               	mullw	54
  5282  016516  0E34               	movlw	low (_D+52)
  5283  016518  24F3               	addwf	243,w,c
  5284  01651A  6ED9               	movwf	fsr2l,c
  5285  01651C  0E04               	movlw	high (_D+52)
  5286  01651E  20F4               	addwfc	prodh,w,c
  5287  016520  6EDA               	movwf	fsr2h,c
  5288  016522  0E00               	movlw	0
  5289  016524  6EDF               	movwf	indf2,c
  5290                           
  5291                           ; BSR set to: 4
  5292                           ;mconfig.c: 92:  wait_lcd_done();
  5293  016526  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5297                           ;stkvar	_vterm @ sp[(0)+-1]
  5298  01652A  0EFF               	movlw	-1
  5299  01652C  50E3               	movf	plusw1,w,c
  5300  01652E  0D36               	mullw	54
  5301  016530  0E00               	movlw	low _D
  5302  016532  6E3F               	movwf	(btemp+10)^0,c
  5303  016534  0E04               	movlw	high _D
  5304  016536  6E40               	movwf	(btemp+11)^0,c
  5305  016538  50F3               	movf	243,w,c
  5306  01653A  263F               	addwf	(btemp+10)^0,f,c
  5307  01653C  50F4               	movf	244,w,c
  5308  01653E  2240               	addwfc	(btemp+11)^0,f,c
  5309  016540  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5310  016546  0060  F103  FFE6   	movff	btemp+11,postinc1
  5311  01654C  0E00               	movlw	0
  5312  01654E  6EE6               	movwf	postinc1,c
  5313  016550  0E00               	movlw	0
  5314  016552  6EE6               	movwf	postinc1,c
  5315  016554  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5316                           
  5317                           ; BSR set to: 59
  5318                           ;mconfig.c: 94:  wait_lcd_done();
  5319  016558  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5323                           ;stkvar	_vterm @ sp[(0)+-1]
  5324  01655C  0EFF               	movlw	-1
  5325  01655E  50E3               	movf	plusw1,w,c
  5326  016560  0D36               	mullw	54
  5327  016562  0E00               	movlw	low _D
  5328  016564  6E3F               	movwf	(btemp+10)^0,c
  5329  016566  0E04               	movlw	high _D
  5330  016568  6E40               	movwf	(btemp+11)^0,c
  5331  01656A  0E12               	movlw	18
  5332  01656C  263F               	addwf	(btemp+10)^0,f,c
  5333  01656E  0E00               	movlw	0
  5334  016570  2240               	addwfc	(btemp+11)^0,f,c
  5335  016572  50F3               	movf	243,w,c
  5336  016574  263F               	addwf	(btemp+10)^0,f,c
  5337  016576  50F4               	movf	244,w,c
  5338  016578  2240               	addwfc	(btemp+11)^0,f,c
  5339  01657A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5340  016580  0060  F103  FFE6   	movff	btemp+11,postinc1
  5341  016586  0E00               	movlw	0
  5342  016588  6EE6               	movwf	postinc1,c
  5343  01658A  0E01               	movlw	1
  5344  01658C  6EE6               	movwf	postinc1,c
  5345  01658E  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5346                           
  5347                           ; BSR set to: 59
  5348                           ;mconfig.c: 96:  wait_lcd_done();
  5349  016592  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5353                           ;stkvar	_vterm @ sp[(0)+-1]
  5354  016596  0EFF               	movlw	-1
  5355  016598  50E3               	movf	plusw1,w,c
  5356  01659A  0D36               	mullw	54
  5357  01659C  0E00               	movlw	low _D
  5358  01659E  6E3F               	movwf	(btemp+10)^0,c
  5359  0165A0  0E04               	movlw	high _D
  5360  0165A2  6E40               	movwf	(btemp+11)^0,c
  5361  0165A4  0E24               	movlw	36
  5362  0165A6  263F               	addwf	(btemp+10)^0,f,c
  5363  0165A8  0E00               	movlw	0
  5364  0165AA  2240               	addwfc	(btemp+11)^0,f,c
  5365  0165AC  50F3               	movf	243,w,c
  5366  0165AE  263F               	addwf	(btemp+10)^0,f,c
  5367  0165B0  50F4               	movf	244,w,c
  5368  0165B2  2240               	addwfc	(btemp+11)^0,f,c
  5369  0165B4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5370  0165BA  0060  F103  FFE6   	movff	btemp+11,postinc1
  5371  0165C0  0E00               	movlw	0
  5372  0165C2  6EE6               	movwf	postinc1,c
  5373  0165C4  0E02               	movlw	2
  5374  0165C6  6EE6               	movwf	postinc1,c
  5375  0165C8  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5376  0165CC                     l1559:
  5377                           
  5378                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5379  0165CC  52E5               	movf	postdec1,f,c
  5380  0165CE  0012               	return		;funcret
  5381  0165D0                     __end_of_update_lcd:
  5382                           	opt callstack 0
  5383                           
  5384 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5385 ;; Defined at:
  5386 ;;		line 252 in file "eadog.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  r               1  [STACK] const unsigned char 
  5389 ;;  c               1  [STACK] const unsigned char 
  5390 ;;  strPtr          2  [STACK] PTR unsigned char 
  5391 ;;		 -> D.lcd(216), D(218), V(171), 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1  [STACK] void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5398 ;; Tracked objects:
  5399 ;;		On entry : 3F/0
  5400 ;;		On exit  : 3F/3B
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:   16
  5410 ;; This function calls:
  5411 ;;		_eaDogM_WriteString
  5412 ;;		_send_lcd_cmd_dma
  5413 ;; This function is called by:
  5414 ;;		_update_lcd
  5415 ;;		_vterm_dump
  5416 ;; This function uses a reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text23
  5420  017A92                     __ptext23:
  5421                           	opt callstack 0
  5422  017A92                     _eaDogM_WriteStringAtPos:
  5423                           	opt callstack 13
  5424                           
  5425                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5426                           ;stkvar	_c @ sp[(0)+-2]
  5427                           
  5428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5429                           ;incstack = 0
  5430  017A92  0EFE               	movlw	-2
  5431  017A94  006F FF8C  F040    	movff	plusw1,btemp+11
  5432                           
  5433                           ;stkvar	_r @ sp[(0)+-1]
  5434  017A9A  0EFF               	movlw	-1
  5435  017A9C  50E3               	movf	plusw1,w,c
  5436  017A9E  0D10               	mullw	16
  5437  017AA0  50F3               	movf	243,w,c
  5438  017AA2  2440               	addwf	(btemp+11)^0,w,c
  5439  017AA4  0F80               	addlw	128
  5440  017AA6  6EE6               	movwf	postinc1,c
  5441  017AA8  EC2E  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  5442                           
  5443                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5444                           ;stkvar	_strPtr @ sp[(0)+-4]
  5445  017AAC  0EFC               	movlw	-4
  5446  017AAE  006F FF8F FFE6     	movff	plusw1,postinc1
  5447  017AB4  006F FF8F FFE6     	movff	plusw1,postinc1
  5448  017ABA  EC10  F0B6         	call	_eaDogM_WriteString	;wreg free
  5449                           
  5450                           ; BSR set to: 59
  5451                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5452  017ABE  52E5               	movf	postdec1,f,c
  5453  017AC0  52E5               	movf	postdec1,f,c
  5454  017AC2  52E5               	movf	postdec1,f,c
  5455  017AC4  52E5               	movf	postdec1,f,c
  5456  017AC6  0012               	return		;funcret
  5457  017AC8                     __end_of_eaDogM_WriteStringAtPos:
  5458                           	opt callstack 0
  5459                           
  5460 ;; *************** function _send_lcd_cmd_dma *****************
  5461 ;; Defined at:
  5462 ;;		line 205 in file "eadog.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  strPtr          1  [STACK] unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1  [STACK] void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/3D
  5473 ;;		On exit  : 3F/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:   15
  5483 ;; This function calls:
  5484 ;;		_printf
  5485 ;;		_ringBufS_flush
  5486 ;;		_start_lcd
  5487 ;;		_wait_lcd_done
  5488 ;;		_wait_lcd_set
  5489 ;; This function is called by:
  5490 ;;		_eaDogM_WriteCommand
  5491 ;;		_eaDogM_WriteStringAtPos
  5492 ;; This function uses a reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text24
  5496  01765C                     __ptext24:
  5497                           	opt callstack 0
  5498  01765C                     _send_lcd_cmd_dma:
  5499                           	opt callstack 13
  5500                           
  5501                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5502                           
  5503                           ; BSR set to: 59
  5504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5505                           ;incstack = 0
  5506  01765C  EC22  F0C1         	call	_wait_lcd_set	;wreg free
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5510  017660  0E00               	movlw	0
  5511  017662  6EE6               	movwf	postinc1,c
  5512  017664  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  5513  01766A  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  5514  017670  EC4B  F0B7         	call	_ringBufS_flush	;wreg free
  5515  017674  92BC               	bcf	188,1,c	;volatile
  5516  017676  94BC               	bcf	188,2,c	;volatile
  5517                           
  5518                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5519  017678  013B               	movlb	59	; () banked
  5520  01767A  9FFC               	bcf	252,7,b	;volatile
  5521                           
  5522                           ; BSR set to: 59
  5523                           ;eadog.c: 214:  DMA1SSZ = 1;
  5524  01767C  0E00               	movlw	0
  5525  01767E  6FF8               	movwf	248,b	;volatile
  5526  017680  0E01               	movlw	1
  5527  017682  6FF7               	movwf	247,b	;volatile
  5528                           
  5529                           ; BSR set to: 59
  5530                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5531  017684  8FFC               	bsf	252,7,b	;volatile
  5532                           
  5533                           ; BSR set to: 59
  5534                           ;eadog.c: 216:  printf("%c", strPtr);
  5535                           ;stkvar	_strPtr @ sp[(0)+-1]
  5536  017686  0EFF               	movlw	-1
  5537  017688  50E3               	movf	plusw1,w,c
  5538  01768A  6EE6               	movwf	postinc1,c
  5539  01768C  0E00               	movlw	0
  5540  01768E  6EE6               	movwf	postinc1,c
  5541  017690  0EF9               	movlw	low STR_12
  5542  017692  6EE6               	movwf	postinc1,c
  5543  017694  0EFF               	movlw	high STR_12
  5544  017696  6EE6               	movwf	postinc1,c
  5545  017698  0E04               	movlw	4
  5546  01769A  6EE6               	movwf	postinc1,c
  5547  01769C  EC46  F0BA         	call	_printf	;wreg free
  5548                           
  5549                           ;eadog.c: 217:  start_lcd();
  5550  0176A0  EC25  F0C1         	call	_start_lcd	;wreg free
  5551                           
  5552                           ; BSR set to: 59
  5553                           ;eadog.c: 218:  wait_lcd_done();
  5554  0176A4  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5555                           
  5556                           ; BSR set to: 0
  5557  0176A8  82BC               	bsf	188,1,c	;volatile
  5558                           
  5559                           ; BSR set to: 0
  5560                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5561  0176AA  52E5               	movf	postdec1,f,c
  5562  0176AC  0012               	return		;funcret
  5563  0176AE                     __end_of_send_lcd_cmd_dma:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function _wait_lcd_done *****************
  5567 ;; Defined at:
  5568 ;;		line 141 in file "eadog.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1  [STACK] void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/1
  5579 ;;		On exit  : 3F/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    7
  5589 ;; This function calls:
  5590 ;;		_wdtdelay
  5591 ;; This function is called by:
  5592 ;;		_send_lcd_cmd_dma
  5593 ;;		_update_lcd
  5594 ;;		_vterm_dump
  5595 ;; This function uses a reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text25
  5599  018078                     __ptext25:
  5600                           	opt callstack 0
  5601  018078                     _wait_lcd_done:
  5602                           	opt callstack 22
  5603                           
  5604                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5605                           
  5606                           ; BSR set to: 0
  5607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5608                           ;incstack = 0
  5609  018078  0100               	movlb	0	; () banked
  5610  01807A  B7BB               	btfsc	_spi_link& (0+255),3,b	;volatile
  5611  01807C  D7FD               	goto	_wait_lcd_done
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;eadog.c: 144:  wdtdelay(50);
  5615  01807E  0E32               	movlw	50
  5616  018080  6EE6               	movwf	postinc1,c
  5617  018082  0E00               	movlw	0
  5618  018084  6EE6               	movwf	postinc1,c
  5619  018086  0E00               	movlw	0
  5620  018088  6EE6               	movwf	postinc1,c
  5621  01808A  0E00               	movlw	0
  5622  01808C  6EE6               	movwf	postinc1,c
  5623  01808E  ECD4  F0BA         	call	_wdtdelay	;wreg free
  5624                           
  5625                           ; BSR set to: 0
  5626                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5627  018092  0012               	return		;funcret
  5628  018094                     __end_of_wait_lcd_done:
  5629                           	opt callstack 0
  5630                           
  5631 ;; *************** function _wdtdelay *****************
  5632 ;; Defined at:
  5633 ;;		line 22 in file "eadog.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  delay           4  [STACK] const unsigned long 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1  [STACK] void 
  5640 ;; Registers used:
  5641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 3F/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    6
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_init_display
  5658 ;;		_send_lcd_cmd
  5659 ;;		_send_lcd_cmd_long
  5660 ;;		_wait_lcd_done
  5661 ;; This function uses a reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text26
  5665  0175A8                     __ptext26:
  5666                           	opt callstack 0
  5667  0175A8                     _wdtdelay:
  5668                           	opt callstack 22
  5669                           
  5670                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5671                           
  5672                           ; BSR set to: 0
  5673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5674                           ;incstack = 0
  5675  0175A8  0100               	movlb	0	; () banked
  5676  0175AA  6BCF               	clrf	wdtdelay@dcount& (0+255),b
  5677  0175AC  6BD0               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5678  0175AE  6BD1               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5679  0175B0  6BD2               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5680  0175B2                     l1326:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;eadog.c: 27:   __nop();
  5684  0175B2  F000               	nop	
  5685  0175B4  0004               	clrwdt		;# 
  5686                           
  5687                           ;eadog.c: 29:  };
  5688  0175B6  0E01               	movlw	1
  5689  0175B8  0100               	movlb	0	; () banked
  5690  0175BA  27CF               	addwf	wdtdelay@dcount& (0+255),f,b
  5691  0175BC  0E00               	movlw	0
  5692  0175BE  23D0               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5693  0175C0  23D1               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5694  0175C2  23D2               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;stkvar	_delay @ sp[(0)+-4]
  5698  0175C4  0EFC               	movlw	-4
  5699  0175C6  006F FF8C  F035    	movff	plusw1,btemp
  5700  0175CC  51CF               	movf	wdtdelay@dcount& (0+255),w,b
  5701  0175CE  5C35               	subwf	btemp^0,w,c
  5702  0175D0  0EFD               	movlw	-3
  5703  0175D2  006F FF8C  F035    	movff	plusw1,btemp
  5704  0175D8  51D0               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5705  0175DA  5835               	subwfb	btemp^0,w,c
  5706  0175DC  0EFE               	movlw	-2
  5707  0175DE  006F FF8C  F035    	movff	plusw1,btemp
  5708  0175E4  51D1               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5709  0175E6  5835               	subwfb	btemp^0,w,c
  5710  0175E8  0EFF               	movlw	-1
  5711  0175EA  006F FF8C  F035    	movff	plusw1,btemp
  5712  0175F0  51D2               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5713  0175F2  5835               	subwfb	btemp^0,w,c
  5714  0175F4  B0D8               	btfsc	status,0,c
  5715  0175F6  D7DD               	goto	l1326
  5716                           
  5717                           ; BSR set to: 0
  5718                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5719  0175F8  52E5               	movf	postdec1,f,c
  5720  0175FA  52E5               	movf	postdec1,f,c
  5721  0175FC  52E5               	movf	postdec1,f,c
  5722  0175FE  52E5               	movf	postdec1,f,c
  5723  017600  0012               	return		;funcret
  5724  017602                     __end_of_wdtdelay:
  5725                           	opt callstack 0
  5726                           
  5727 ;; *************** function _eaDogM_WriteString *****************
  5728 ;; Defined at:
  5729 ;;		line 184 in file "eadog.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  strPtr          2  [STACK] PTR unsigned char 
  5732 ;;		 -> D.lcd(216), D(218), V(171), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1  [STACK] void 
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5739 ;; Tracked objects:
  5740 ;;		On entry : 3F/0
  5741 ;;		On exit  : 3F/3B
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:   15
  5751 ;; This function calls:
  5752 ;;		_printf
  5753 ;;		_ringBufS_flush
  5754 ;;		_start_lcd
  5755 ;;		_strlen
  5756 ;;		_wait_lcd_set
  5757 ;; This function is called by:
  5758 ;;		_eaDogM_WriteStringAtPos
  5759 ;; This function uses a reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text27
  5763  016C20                     __ptext27:
  5764                           	opt callstack 0
  5765  016C20                     _eaDogM_WriteString:
  5766                           	opt callstack 13
  5767                           
  5768                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5769                           
  5770                           ; BSR set to: 0
  5771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5772                           ;incstack = 0
  5773  016C20  EC22  F0C1         	call	_wait_lcd_set	;wreg free
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5777  016C24  0E00               	movlw	0
  5778  016C26  6EE6               	movwf	postinc1,c
  5779  016C28  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  5780  016C2E  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  5781  016C34  EC4B  F0B7         	call	_ringBufS_flush	;wreg free
  5782  016C38  94BC               	bcf	188,2,c	;volatile
  5783                           
  5784                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5785                           ;stkvar	_strPtr @ sp[(0)+-2]
  5786  016C3A  0EFE               	movlw	-2
  5787  016C3C  006F FF8F FFE6     	movff	plusw1,postinc1
  5788  016C42  006F FF8F FFE6     	movff	plusw1,postinc1
  5789  016C48  EC63  F0B6         	call	_strlen	;wreg free
  5790  016C4C  5036               	movf	(btemp+1)^0,w,c
  5791  016C4E  E104               	bnz	u9880
  5792  016C50  0E41               	movlw	65
  5793  016C52  5C35               	subwf	btemp^0,w,c
  5794  016C54  A0D8               	btfss	status,0,c
  5795  016C56  D010               	goto	l9739
  5796  016C58                     u9880:
  5797                           
  5798                           ;stkvar	_strPtr @ sp[(0)+-2]
  5799  016C58  0EFE               	movlw	-2
  5800  016C5A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5801  016C60  0EFF               	movlw	-1
  5802  016C62  006F FF8C  F040    	movff	plusw1,btemp+11
  5803  016C68  0E40               	movlw	64
  5804  016C6A  243F               	addwf	(btemp+10)^0,w,c
  5805  016C6C  6ED9               	movwf	fsr2l,c
  5806  016C6E  0E00               	movlw	0
  5807  016C70  2040               	addwfc	(btemp+11)^0,w,c
  5808  016C72  6EDA               	movwf	fsr2h,c
  5809  016C74  0E00               	movlw	0
  5810  016C76  6EDF               	movwf	indf2,c
  5811  016C78                     l9739:
  5812                           
  5813                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5814  016C78  013B               	movlb	59	; () banked
  5815  016C7A  9FFC               	bcf	252,7,b	;volatile
  5816                           
  5817                           ; BSR set to: 59
  5818                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5819                           ;stkvar	_strPtr @ sp[(0)+-2]
  5820  016C7C  0EFE               	movlw	-2
  5821  016C7E  006F FF8F FFE6     	movff	plusw1,postinc1
  5822  016C84  006F FF8F FFE6     	movff	plusw1,postinc1
  5823  016C8A  EC63  F0B6         	call	_strlen	;wreg free
  5824  016C8E  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5825  016C94  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5826                           
  5827                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5828  016C9A  013B               	movlb	59	; () banked
  5829  016C9C  8FFC               	bsf	252,7,b	;volatile
  5830                           
  5831                           ; BSR set to: 59
  5832                           ;eadog.c: 195:  printf("%s", strPtr);
  5833                           ;stkvar	_strPtr @ sp[(0)+-2]
  5834  016C9E  0EFE               	movlw	-2
  5835  016CA0  006F FF8F FFE6     	movff	plusw1,postinc1
  5836  016CA6  006F FF8F FFE6     	movff	plusw1,postinc1
  5837  016CAC  0EFC               	movlw	low STR_11
  5838  016CAE  6EE6               	movwf	postinc1,c
  5839  016CB0  0EFF               	movlw	high STR_11
  5840  016CB2  6EE6               	movwf	postinc1,c
  5841  016CB4  0E04               	movlw	4
  5842  016CB6  6EE6               	movwf	postinc1,c
  5843  016CB8  EC46  F0BA         	call	_printf	;wreg free
  5844                           
  5845                           ;eadog.c: 196:  start_lcd();
  5846  016CBC  EC25  F0C1         	call	_start_lcd	;wreg free
  5847                           
  5848                           ; BSR set to: 59
  5849                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5850  016CC0  52E5               	movf	postdec1,f,c
  5851  016CC2  52E5               	movf	postdec1,f,c
  5852  016CC4  0012               	return		;funcret
  5853  016CC6                     __end_of_eaDogM_WriteString:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _wait_lcd_set *****************
  5857 ;; Defined at:
  5858 ;;		line 131 in file "eadog.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1  [STACK] void 
  5865 ;; Registers used:
  5866 ;;		None
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/3D
  5869 ;;		On exit  : 3F/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    6
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_eaDogM_WriteString
  5883 ;;		_send_lcd_cmd_dma
  5884 ;; This function uses a reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text28
  5888  018244                     __ptext28:
  5889                           	opt callstack 0
  5890  018244                     _wait_lcd_set:
  5891                           	opt callstack 21
  5892                           
  5893                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5894                           
  5895                           ; BSR set to: 59
  5896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5897                           ;incstack = 0
  5898  018244  0100               	movlb	0	; () banked
  5899  018246  87BB               	bsf	_spi_link& (0+255),3,b	;volatile
  5900                           
  5901                           ; BSR set to: 0
  5902                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5903  018248  0012               	return		;funcret
  5904  01824A                     __end_of_wait_lcd_set:
  5905                           	opt callstack 0
  5906                           
  5907 ;; *************** function _start_lcd *****************
  5908 ;; Defined at:
  5909 ;;		line 126 in file "eadog.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1  [STACK] void 
  5916 ;; Registers used:
  5917 ;;		None
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/3B
  5920 ;;		On exit  : 3F/3B
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    6
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_eaDogM_WriteString
  5934 ;;		_send_lcd_cmd_dma
  5935 ;; This function uses a reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text29
  5939  01824A                     __ptext29:
  5940                           	opt callstack 0
  5941  01824A                     _start_lcd:
  5942                           	opt callstack 21
  5943                           
  5944                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5945                           
  5946                           ; BSR set to: 0
  5947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5948                           ;incstack = 0
  5949  01824A  013B               	movlb	59	; () banked
  5950  01824C  8DFC               	bsf	252,6,b	;volatile
  5951                           
  5952                           ; BSR set to: 59
  5953                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5954  01824E  0012               	return		;funcret
  5955  018250                     __end_of_start_lcd:
  5956                           	opt callstack 0
  5957                           
  5958 ;; *************** function _ringBufS_flush *****************
  5959 ;; Defined at:
  5960 ;;		line 76 in file "ringbufs.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5963 ;;		 -> ring_buf1(67), 
  5964 ;;  clearBuffer     1  [STACK] const char 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1  [STACK] void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5971 ;; Tracked objects:
  5972 ;;		On entry : 3F/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5980 ;;Total ram usage:        0 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    7
  5983 ;; This function calls:
  5984 ;;		_memset
  5985 ;; This function is called by:
  5986 ;;		_eaDogM_WriteString
  5987 ;;		_send_lcd_cmd_dma
  5988 ;; This function uses a reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text30
  5992  016E96                     __ptext30:
  5993                           	opt callstack 0
  5994  016E96                     _ringBufS_flush:
  5995                           	opt callstack 20
  5996                           
  5997                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5998                           ;stkvar	__this @ sp[(0)+-2]
  5999                           
  6000                           ; BSR set to: 59
  6001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6002                           ;incstack = 0
  6003  016E96  0EFE               	movlw	-2
  6004  016E98  006F FF8C  F03F    	movff	plusw1,btemp+10
  6005  016E9E  0EFF               	movlw	-1
  6006  016EA0  006F FF8C  F040    	movff	plusw1,btemp+11
  6007  016EA6  0E42               	movlw	66
  6008  016EA8  243F               	addwf	(btemp+10)^0,w,c
  6009  016EAA  6ED9               	movwf	fsr2l,c
  6010  016EAC  0E00               	movlw	0
  6011  016EAE  2040               	addwfc	(btemp+11)^0,w,c
  6012  016EB0  6EDA               	movwf	fsr2h,c
  6013  016EB2  0E00               	movlw	0
  6014  016EB4  6EDF               	movwf	indf2,c
  6015                           
  6016                           ;ringbufs.c: 79:  _this->head = 0;
  6017                           ;stkvar	__this @ sp[(0)+-2]
  6018  016EB6  0EFE               	movlw	-2
  6019  016EB8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6020  016EBE  0EFF               	movlw	-1
  6021  016EC0  006F FF8C  F040    	movff	plusw1,btemp+11
  6022  016EC6  0E40               	movlw	64
  6023  016EC8  243F               	addwf	(btemp+10)^0,w,c
  6024  016ECA  6ED9               	movwf	fsr2l,c
  6025  016ECC  0E00               	movlw	0
  6026  016ECE  2040               	addwfc	(btemp+11)^0,w,c
  6027  016ED0  6EDA               	movwf	fsr2h,c
  6028  016ED2  0E00               	movlw	0
  6029  016ED4  6EDF               	movwf	indf2,c
  6030                           
  6031                           ;ringbufs.c: 80:  _this->tail = 0;
  6032                           ;stkvar	__this @ sp[(0)+-2]
  6033  016ED6  0EFE               	movlw	-2
  6034  016ED8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6035  016EDE  0EFF               	movlw	-1
  6036  016EE0  006F FF8C  F040    	movff	plusw1,btemp+11
  6037  016EE6  0E41               	movlw	65
  6038  016EE8  243F               	addwf	(btemp+10)^0,w,c
  6039  016EEA  6ED9               	movwf	fsr2l,c
  6040  016EEC  0E00               	movlw	0
  6041  016EEE  2040               	addwfc	(btemp+11)^0,w,c
  6042  016EF0  6EDA               	movwf	fsr2h,c
  6043  016EF2  0E00               	movlw	0
  6044  016EF4  6EDF               	movwf	indf2,c
  6045                           
  6046                           ;ringbufs.c: 81:  if (clearBuffer) {
  6047                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6048  016EF6  0EFD               	movlw	-3
  6049  016EF8  50E3               	movf	plusw1,w,c
  6050  016EFA  B4D8               	btfsc	status,2,c
  6051  016EFC  D011               	goto	l1466
  6052                           
  6053                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6054  016EFE  0E40               	movlw	64
  6055  016F00  6EE6               	movwf	postinc1,c
  6056  016F02  0E00               	movlw	0
  6057  016F04  6EE6               	movwf	postinc1,c
  6058  016F06  0E00               	movlw	0
  6059  016F08  6EE6               	movwf	postinc1,c
  6060  016F0A  0E00               	movlw	0
  6061  016F0C  6EE6               	movwf	postinc1,c
  6062                           
  6063                           ;stkvar	__this @ sp[(-4)+-2]
  6064  016F0E  0EFA               	movlw	-6
  6065  016F10  006F FF8F FFE6     	movff	plusw1,postinc1
  6066  016F16  006F FF8F FFE6     	movff	plusw1,postinc1
  6067  016F1C  EC08  F0A3         	call	_memset	;wreg free
  6068  016F20                     l1466:
  6069                           
  6070                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6071  016F20  52E5               	movf	postdec1,f,c
  6072  016F22  52E5               	movf	postdec1,f,c
  6073  016F24  52E5               	movf	postdec1,f,c
  6074  016F26  0012               	return		;funcret
  6075  016F28                     __end_of_ringBufS_flush:
  6076                           	opt callstack 0
  6077                           
  6078 ;; *************** function _memset *****************
  6079 ;; Defined at:
  6080 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  dest            2  [STACK] PTR void 
  6083 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6084 ;;  c               2  [STACK] int 
  6085 ;;  n               2  [STACK] unsigned int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  s               2  [STACK] PTR unsigned char 
  6088 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6089 ;;  k               2  [STACK] unsigned int 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2  [STACK] PTR void 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    6
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_ringBufS_init
  6110 ;;		_ringBufS_flush
  6111 ;; This function uses a reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text31
  6115  014610                     __ptext31:
  6116                           	opt callstack 0
  6117  014610                     _memset:
  6118                           	opt callstack 0
  6119                           
  6120                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6121  014610  52E6               	movf	postinc1,f,c
  6122  014612  52E6               	movf	postinc1,f,c
  6123  014614  52E6               	movf	postinc1,f,c
  6124  014616  52E6               	movf	postinc1,f,c
  6125                           
  6126                           ;stkvar	_dest @ sp[(-4)+-2]
  6127                           
  6128                           ;incstack = 0
  6129  014618  0EFA               	movlw	-6
  6130  01461A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6131  014620  0EFB               	movlw	-5
  6132  014622  006F FF8C  F040    	movff	plusw1,btemp+11
  6133                           
  6134                           ;stkvar	_s @ sp[(-4)+0]
  6135  014628  0EFD               	movlw	-3
  6136  01462A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6137  014630  0EFC               	movlw	-4
  6138  014632  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6139                           
  6140                           ;stkvar	_n @ sp[(-4)+-6]
  6141  014638  0EF6               	movlw	-10
  6142  01463A  006F FF8C  F035    	movff	plusw1,btemp
  6143  014640  0EF7               	movlw	-9
  6144  014642  50E3               	movf	plusw1,w,c
  6145  014644  1035               	iorwf	btemp^0,w,c
  6146  014646  B4D8               	btfsc	status,2,c
  6147  014648  D154               	goto	u9850
  6148                           
  6149                           ;stkvar	_c @ sp[(-4)+-4]
  6150                           ;stkvar	_s @ sp[(-4)+0]
  6151  01464A  0EFC               	movlw	-4
  6152  01464C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6153  014652  0EFD               	movlw	-3
  6154  014654  006F FF8F FFDA     	movff	plusw1,fsr2h
  6155  01465A  0EF8               	movlw	-8
  6156  01465C  006F FF8F FFDF     	movff	plusw1,indf2
  6157                           
  6158                           ;stkvar	_c @ sp[(-4)+-4]
  6159                           ;stkvar	_n @ sp[(-4)+-6]
  6160                           ;stkvar	_s @ sp[(-4)+0]
  6161  014662  0EFC               	movlw	-4
  6162  014664  006F FF8C  F03F    	movff	plusw1,btemp+10
  6163  01466A  0EFD               	movlw	-3
  6164  01466C  006F FF8C  F040    	movff	plusw1,btemp+11
  6165  014672  0EF6               	movlw	-10
  6166  014674  50E3               	movf	plusw1,w,c
  6167  014676  263F               	addwf	(btemp+10)^0,f,c
  6168  014678  0EF7               	movlw	-9
  6169  01467A  50E3               	movf	plusw1,w,c
  6170  01467C  2240               	addwfc	(btemp+11)^0,f,c
  6171  01467E  0EFF               	movlw	255
  6172  014680  243F               	addwf	(btemp+10)^0,w,c
  6173  014682  6ED9               	movwf	fsr2l,c
  6174  014684  0EFF               	movlw	255
  6175  014686  2040               	addwfc	(btemp+11)^0,w,c
  6176  014688  6EDA               	movwf	fsr2h,c
  6177  01468A  0EF8               	movlw	-8
  6178  01468C  006F FF8F FFDF     	movff	plusw1,indf2
  6179                           
  6180                           ;stkvar	_n @ sp[(-4)+-6]
  6181  014692  0EF7               	movlw	-9
  6182  014694  50E3               	movf	plusw1,w,c
  6183  014696  E108               	bnz	l9655
  6184  014698  0EF6               	movlw	-10
  6185  01469A  006F FF8C  F035    	movff	plusw1,btemp
  6186  0146A0  0E03               	movlw	3
  6187  0146A2  5E35               	subwf	btemp^0,f,c
  6188  0146A4  A0D8               	btfss	status,0,c
  6189  0146A6  D125               	goto	u9850
  6190  0146A8                     l9655:
  6191                           
  6192                           ;stkvar	_c @ sp[(-4)+-4]
  6193                           ;stkvar	_s @ sp[(-4)+0]
  6194  0146A8  0EFC               	movlw	-4
  6195  0146AA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6196  0146B0  0EFD               	movlw	-3
  6197  0146B2  006F FF8C  F040    	movff	plusw1,btemp+11
  6198  0146B8  0E01               	movlw	1
  6199  0146BA  243F               	addwf	(btemp+10)^0,w,c
  6200  0146BC  6ED9               	movwf	fsr2l,c
  6201  0146BE  0E00               	movlw	0
  6202  0146C0  2040               	addwfc	(btemp+11)^0,w,c
  6203  0146C2  6EDA               	movwf	fsr2h,c
  6204  0146C4  0EF8               	movlw	-8
  6205  0146C6  006F FF8F FFDF     	movff	plusw1,indf2
  6206                           
  6207                           ;stkvar	_c @ sp[(-4)+-4]
  6208                           ;stkvar	_s @ sp[(-4)+0]
  6209  0146CC  0EFC               	movlw	-4
  6210  0146CE  006F FF8C  F03F    	movff	plusw1,btemp+10
  6211  0146D4  0EFD               	movlw	-3
  6212  0146D6  006F FF8C  F040    	movff	plusw1,btemp+11
  6213  0146DC  0E02               	movlw	2
  6214  0146DE  243F               	addwf	(btemp+10)^0,w,c
  6215  0146E0  6ED9               	movwf	fsr2l,c
  6216  0146E2  0E00               	movlw	0
  6217  0146E4  2040               	addwfc	(btemp+11)^0,w,c
  6218  0146E6  6EDA               	movwf	fsr2h,c
  6219  0146E8  0EF8               	movlw	-8
  6220  0146EA  006F FF8F FFDF     	movff	plusw1,indf2
  6221                           
  6222                           ;stkvar	_c @ sp[(-4)+-4]
  6223                           ;stkvar	_n @ sp[(-4)+-6]
  6224                           ;stkvar	_s @ sp[(-4)+0]
  6225  0146F0  0EFC               	movlw	-4
  6226  0146F2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6227  0146F8  0EFD               	movlw	-3
  6228  0146FA  006F FF8C  F040    	movff	plusw1,btemp+11
  6229  014700  0EF6               	movlw	-10
  6230  014702  50E3               	movf	plusw1,w,c
  6231  014704  263F               	addwf	(btemp+10)^0,f,c
  6232  014706  0EF7               	movlw	-9
  6233  014708  50E3               	movf	plusw1,w,c
  6234  01470A  2240               	addwfc	(btemp+11)^0,f,c
  6235  01470C  0EFE               	movlw	254
  6236  01470E  243F               	addwf	(btemp+10)^0,w,c
  6237  014710  6ED9               	movwf	fsr2l,c
  6238  014712  0EFF               	movlw	255
  6239  014714  2040               	addwfc	(btemp+11)^0,w,c
  6240  014716  6EDA               	movwf	fsr2h,c
  6241  014718  0EF8               	movlw	-8
  6242  01471A  006F FF8F FFDF     	movff	plusw1,indf2
  6243                           
  6244                           ;stkvar	_c @ sp[(-4)+-4]
  6245                           ;stkvar	_n @ sp[(-4)+-6]
  6246                           ;stkvar	_s @ sp[(-4)+0]
  6247  014720  0EFC               	movlw	-4
  6248  014722  006F FF8C  F03F    	movff	plusw1,btemp+10
  6249  014728  0EFD               	movlw	-3
  6250  01472A  006F FF8C  F040    	movff	plusw1,btemp+11
  6251  014730  0EF6               	movlw	-10
  6252  014732  50E3               	movf	plusw1,w,c
  6253  014734  263F               	addwf	(btemp+10)^0,f,c
  6254  014736  0EF7               	movlw	-9
  6255  014738  50E3               	movf	plusw1,w,c
  6256  01473A  2240               	addwfc	(btemp+11)^0,f,c
  6257  01473C  0EFD               	movlw	253
  6258  01473E  243F               	addwf	(btemp+10)^0,w,c
  6259  014740  6ED9               	movwf	fsr2l,c
  6260  014742  0EFF               	movlw	255
  6261  014744  2040               	addwfc	(btemp+11)^0,w,c
  6262  014746  6EDA               	movwf	fsr2h,c
  6263  014748  0EF8               	movlw	-8
  6264  01474A  006F FF8F FFDF     	movff	plusw1,indf2
  6265                           
  6266                           ;stkvar	_n @ sp[(-4)+-6]
  6267  014750  0EF7               	movlw	-9
  6268  014752  50E3               	movf	plusw1,w,c
  6269  014754  E108               	bnz	l9661
  6270  014756  0EF6               	movlw	-10
  6271  014758  006F FF8C  F035    	movff	plusw1,btemp
  6272  01475E  0E07               	movlw	7
  6273  014760  5E35               	subwf	btemp^0,f,c
  6274  014762  A0D8               	btfss	status,0,c
  6275  014764  D0C6               	goto	u9850
  6276  014766                     l9661:
  6277                           
  6278                           ;stkvar	_c @ sp[(-4)+-4]
  6279                           ;stkvar	_s @ sp[(-4)+0]
  6280  014766  0EFC               	movlw	-4
  6281  014768  006F FF8C  F03F    	movff	plusw1,btemp+10
  6282  01476E  0EFD               	movlw	-3
  6283  014770  006F FF8C  F040    	movff	plusw1,btemp+11
  6284  014776  0E03               	movlw	3
  6285  014778  243F               	addwf	(btemp+10)^0,w,c
  6286  01477A  6ED9               	movwf	fsr2l,c
  6287  01477C  0E00               	movlw	0
  6288  01477E  2040               	addwfc	(btemp+11)^0,w,c
  6289  014780  6EDA               	movwf	fsr2h,c
  6290  014782  0EF8               	movlw	-8
  6291  014784  006F FF8F FFDF     	movff	plusw1,indf2
  6292                           
  6293                           ;stkvar	_c @ sp[(-4)+-4]
  6294                           ;stkvar	_n @ sp[(-4)+-6]
  6295                           ;stkvar	_s @ sp[(-4)+0]
  6296  01478A  0EFC               	movlw	-4
  6297  01478C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6298  014792  0EFD               	movlw	-3
  6299  014794  006F FF8C  F040    	movff	plusw1,btemp+11
  6300  01479A  0EF6               	movlw	-10
  6301  01479C  50E3               	movf	plusw1,w,c
  6302  01479E  263F               	addwf	(btemp+10)^0,f,c
  6303  0147A0  0EF7               	movlw	-9
  6304  0147A2  50E3               	movf	plusw1,w,c
  6305  0147A4  2240               	addwfc	(btemp+11)^0,f,c
  6306  0147A6  0EFC               	movlw	252
  6307  0147A8  243F               	addwf	(btemp+10)^0,w,c
  6308  0147AA  6ED9               	movwf	fsr2l,c
  6309  0147AC  0EFF               	movlw	255
  6310  0147AE  2040               	addwfc	(btemp+11)^0,w,c
  6311  0147B0  6EDA               	movwf	fsr2h,c
  6312  0147B2  0EF8               	movlw	-8
  6313  0147B4  006F FF8F FFDF     	movff	plusw1,indf2
  6314                           
  6315                           ;stkvar	_n @ sp[(-4)+-6]
  6316  0147BA  0EF7               	movlw	-9
  6317  0147BC  50E3               	movf	plusw1,w,c
  6318  0147BE  E108               	bnz	l9667
  6319  0147C0  0EF6               	movlw	-10
  6320  0147C2  006F FF8C  F035    	movff	plusw1,btemp
  6321  0147C8  0E09               	movlw	9
  6322  0147CA  5E35               	subwf	btemp^0,f,c
  6323  0147CC  A0D8               	btfss	status,0,c
  6324  0147CE  D091               	goto	u9850
  6325  0147D0                     l9667:
  6326                           
  6327                           ;stkvar	_s @ sp[(-4)+0]
  6328  0147D0  0EFC               	movlw	-4
  6329  0147D2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6330  0147D8  1E3F               	comf	(btemp+10)^0,f,c
  6331  0147DA  0EFD               	movlw	-3
  6332  0147DC  006F FF8C  F040    	movff	plusw1,btemp+11
  6333  0147E2  1E40               	comf	(btemp+11)^0,f,c
  6334  0147E4  2A3F               	incf	(btemp+10)^0,f,c
  6335  0147E6  B4D8               	btfsc	status,2,c
  6336  0147E8  2A40               	incf	(btemp+11)^0,f,c
  6337  0147EA  0E03               	movlw	3
  6338  0147EC  163F               	andwf	(btemp+10)^0,f,c
  6339  0147EE  0E00               	movlw	0
  6340  0147F0  1640               	andwf	(btemp+11)^0,f,c
  6341                           
  6342                           ;stkvar	_k @ sp[(-4)+2]
  6343  0147F2  0EFE               	movlw	-2
  6344  0147F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6345  0147FA  0EFF               	movlw	-1
  6346  0147FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  6347                           
  6348                           ;stkvar	_k @ sp[(-4)+2]
  6349                           ;stkvar	_s @ sp[(-4)+0]
  6350  014802  0EFC               	movlw	-4
  6351  014804  50E3               	movf	plusw1,w,c
  6352  014806  6E35               	movwf	btemp^0,c
  6353  014808  0EFE               	movlw	-2
  6354  01480A  50E3               	movf	plusw1,w,c
  6355  01480C  2635               	addwf	btemp^0,f,c
  6356  01480E  0EFC               	movlw	-4
  6357  014810  0060  F0D7  FFE3   	movff	btemp,plusw1
  6358  014816  0EFD               	movlw	-3
  6359  014818  50E3               	movf	plusw1,w,c
  6360  01481A  6E35               	movwf	btemp^0,c
  6361  01481C  0EFF               	movlw	-1
  6362  01481E  50E3               	movf	plusw1,w,c
  6363  014820  2235               	addwfc	btemp^0,f,c
  6364  014822  0EFD               	movlw	-3
  6365  014824  0060  F0D7  FFE3   	movff	btemp,plusw1
  6366                           
  6367                           ;stkvar	_k @ sp[(-4)+2]
  6368                           ;stkvar	_n @ sp[(-4)+-6]
  6369  01482A  0EF6               	movlw	-10
  6370  01482C  50E3               	movf	plusw1,w,c
  6371  01482E  6E35               	movwf	btemp^0,c
  6372  014830  0EFE               	movlw	-2
  6373  014832  50E3               	movf	plusw1,w,c
  6374  014834  5E35               	subwf	btemp^0,f,c
  6375  014836  0EF6               	movlw	-10
  6376  014838  0060  F0D7  FFE3   	movff	btemp,plusw1
  6377  01483E  0EF7               	movlw	-9
  6378  014840  50E3               	movf	plusw1,w,c
  6379  014842  6E35               	movwf	btemp^0,c
  6380  014844  0EFF               	movlw	-1
  6381  014846  50E3               	movf	plusw1,w,c
  6382  014848  5A35               	subwfb	btemp^0,f,c
  6383  01484A  0EF7               	movlw	-9
  6384  01484C  0060  F0D7  FFE3   	movff	btemp,plusw1
  6385  014852  0EFC               	movlw	252
  6386  014854  6E3F               	movwf	(btemp+10)^0,c
  6387  014856  0EFF               	movlw	255
  6388  014858  6E40               	movwf	(btemp+11)^0,c
  6389                           
  6390                           ;stkvar	_n @ sp[(-4)+-6]
  6391  01485A  0EF6               	movlw	-10
  6392  01485C  006F FF8C  F035    	movff	plusw1,btemp
  6393  014862  503F               	movf	(btemp+10)^0,w,c
  6394  014864  1635               	andwf	btemp^0,f,c
  6395  014866  0EF6               	movlw	-10
  6396  014868  0060  F0D7  FFE3   	movff	btemp,plusw1
  6397  01486E  0EF7               	movlw	-9
  6398  014870  006F FF8C  F035    	movff	plusw1,btemp
  6399  014876  5040               	movf	(btemp+11)^0,w,c
  6400  014878  1635               	andwf	btemp^0,f,c
  6401  01487A  0EF7               	movlw	-9
  6402  01487C  D02E               	goto	L4
  6403  01487E                     l9675:
  6404                           
  6405                           ;stkvar	_c @ sp[(-4)+-4]
  6406                           ;stkvar	_s @ sp[(-4)+0]
  6407  01487E  0EFC               	movlw	-4
  6408  014880  006F FF8F FFD9     	movff	plusw1,fsr2l
  6409  014886  0EFD               	movlw	-3
  6410  014888  006F FF8F FFDA     	movff	plusw1,fsr2h
  6411  01488E  0EF8               	movlw	-8
  6412  014890  006F FF8F FFDF     	movff	plusw1,indf2
  6413                           
  6414                           ;stkvar	_n @ sp[(-4)+-6]
  6415  014896  0EF6               	movlw	-10
  6416  014898  006F FF8C  F035    	movff	plusw1,btemp
  6417  01489E  0E01               	movlw	1
  6418  0148A0  5E35               	subwf	btemp^0,f,c
  6419  0148A2  0EF6               	movlw	-10
  6420  0148A4  0060  F0D7  FFE3   	movff	btemp,plusw1
  6421  0148AA  0EF7               	movlw	-9
  6422  0148AC  006F FF8C  F035    	movff	plusw1,btemp
  6423  0148B2  0E00               	movlw	0
  6424  0148B4  5A35               	subwfb	btemp^0,f,c
  6425  0148B6  0EF7               	movlw	-9
  6426  0148B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6427                           
  6428                           ;stkvar	_s @ sp[(-4)+0]
  6429  0148BE  0EFC               	movlw	-4
  6430  0148C0  50E3               	movf	plusw1,w,c
  6431  0148C2  0F01               	addlw	1
  6432  0148C4  6E35               	movwf	btemp^0,c
  6433  0148C6  0EFC               	movlw	-4
  6434  0148C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6435  0148CE  6A35               	clrf	btemp^0,c
  6436  0148D0  0EFD               	movlw	-3
  6437  0148D2  50E3               	movf	plusw1,w,c
  6438  0148D4  2035               	addwfc	btemp^0,w,c
  6439  0148D6  6E35               	movwf	btemp^0,c
  6440  0148D8  0EFD               	movlw	-3
  6441  0148DA                     L4:
  6442  0148DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6443                           
  6444                           ;stkvar	_n @ sp[(-4)+-6]
  6445  0148E0  0EF6               	movlw	-10
  6446  0148E2  006F FF8C  F035    	movff	plusw1,btemp
  6447  0148E8  0EF7               	movlw	-9
  6448  0148EA  50E3               	movf	plusw1,w,c
  6449  0148EC  1035               	iorwf	btemp^0,w,c
  6450  0148EE  A4D8               	btfss	status,2,c
  6451  0148F0  D7C6               	goto	l9675
  6452  0148F2                     u9850:
  6453                           
  6454                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6455  0148F2  0EF6               	movlw	246
  6456  0148F4  26E1               	addwf	fsr1l,f,c
  6457  0148F6  0EFF               	movlw	255
  6458  0148F8  22E2               	addwfc	fsr1h,f,c
  6459  0148FA  0012               	return		;funcret
  6460  0148FC                     __end_of_memset:
  6461                           	opt callstack 0
  6462                           
  6463 ;; *************** function _printf *****************
  6464 ;; Defined at:
  6465 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  fmt             2  [STACK] PTR const unsigned char 
  6468 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  ap              2  [STACK] PTR void [1]
  6471 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6472 ;;  ret             2    0        int 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  2  [STACK] int 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6477 ;; Tracked objects:
  6478 ;;		On entry : 3F/3B
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;Total ram usage:        0 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:   14
  6489 ;; This function calls:
  6490 ;;		_vfprintf
  6491 ;; This function is called by:
  6492 ;;		_eaDogM_WriteString
  6493 ;;		_send_lcd_cmd_dma
  6494 ;; This function uses a reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text32
  6498  01748C                     __ptext32:
  6499                           	opt callstack 0
  6500  01748C                     _printf:
  6501                           	opt callstack 0
  6502                           
  6503                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6504  01748C  52E6               	movf	postinc1,f,c
  6505  01748E  52E6               	movf	postinc1,f,c
  6506                           
  6507                           ;stkvar	?_printf @ sp[(-2)+-3]
  6508                           
  6509                           ;incstack = 0
  6510  017490  0EFB               	movlw	251
  6511  017492  24E1               	addwf	fsr1l,w,c
  6512  017494  6E3F               	movwf	(btemp+10)^0,c
  6513  017496  0EFF               	movlw	255
  6514  017498  20E2               	addwfc	fsr1h,w,c
  6515  01749A  6E40               	movwf	(btemp+11)^0,c
  6516                           
  6517                           ;stkvar	_ap @ sp[(-2)+0]
  6518  01749C  0EFF               	movlw	-1
  6519  01749E  0060  F103  FFE3   	movff	btemp+11,plusw1
  6520  0174A4  0EFE               	movlw	-2
  6521  0174A6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6522                           
  6523                           ;stkvar	_ap @ sp[(-2)+0]
  6524  0174AC  0EFE               	movlw	254
  6525  0174AE  24E1               	addwf	fsr1l,w,c
  6526  0174B0  6E35               	movwf	btemp^0,c
  6527  0174B2  0EFF               	movlw	255
  6528  0174B4  20E2               	addwfc	fsr1h,w,c
  6529  0174B6  6E36               	movwf	(btemp+1)^0,c
  6530  0174B8  0060  F0D7  FFE6   	movff	btemp,postinc1
  6531  0174BE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6532                           
  6533                           ;stkvar	_fmt @ sp[(-4)+-3]
  6534  0174C4  0EF9               	movlw	-7
  6535  0174C6  006F FF8F FFE6     	movff	plusw1,postinc1
  6536  0174CC  006F FF8F FFE6     	movff	plusw1,postinc1
  6537  0174D2  0E00               	movlw	0
  6538  0174D4  6EE6               	movwf	postinc1,c
  6539  0174D6  0E00               	movlw	0
  6540  0174D8  6EE6               	movwf	postinc1,c
  6541  0174DA  ECBC  F0B5         	call	_vfprintf	;wreg free
  6542                           
  6543                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6544  0174DE  52E5               	movf	postdec1,f,c
  6545  0174E0  52E5               	movf	postdec1,f,c
  6546  0174E2  52E5               	movf	postdec1,f,c
  6547  0174E4  50E7               	movf	indf1,w,c
  6548  0174E6  5EE1               	subwf	fsr1l,f,c
  6549  0174E8  0E00               	movlw	0
  6550  0174EA  5AE2               	subwfb	fsr1h,f,c
  6551  0174EC  0012               	return		;funcret
  6552  0174EE                     __end_of_printf:
  6553                           	opt callstack 0
  6554                           
  6555 ;; *************** function _vfprintf *****************
  6556 ;; Defined at:
  6557 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6560 ;;		 -> f(6), NULL(0), 
  6561 ;;  fmt             2  [STACK] PTR const unsigned char 
  6562 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6563 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6564 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6565 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6566 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6567 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6568 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6569 ;;  ap              2  [STACK] PTR PTR void 
  6570 ;;		 -> ap(2), ap(2), 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  cfmt            2  [STACK] PTR unsigned char 
  6573 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6574 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6575 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6576 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6577 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6578 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6579 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2  [STACK] int 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/4
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:   13
  6596 ;; This function calls:
  6597 ;;		_vfpfcnvrt
  6598 ;; This function is called by:
  6599 ;;		_sprintf
  6600 ;;		_printf
  6601 ;; This function uses a reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text33
  6605  016B78                     __ptext33:
  6606                           	opt callstack 0
  6607  016B78                     _vfprintf:
  6608                           	opt callstack 0
  6609                           
  6610                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6611  016B78  52E6               	movf	postinc1,f,c
  6612  016B7A  52E6               	movf	postinc1,f,c
  6613                           
  6614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6615                           ;stkvar	_fmt @ sp[(-2)+-4]
  6616                           
  6617                           ;incstack = 0
  6618  016B7C  0EFA               	movlw	-6
  6619  016B7E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6620  016B84  0EFB               	movlw	-5
  6621  016B86  006F FF8C  F040    	movff	plusw1,btemp+11
  6622                           
  6623                           ;stkvar	_cfmt @ sp[(-2)+0]
  6624  016B8C  0EFF               	movlw	-1
  6625  016B8E  0060  F103  FFE3   	movff	btemp+11,plusw1
  6626  016B94  0EFE               	movlw	-2
  6627  016B96  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6628                           
  6629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6630  016B9C  6A1C               	clrf	_nout^0,c
  6631  016B9E  6A1D               	clrf	(_nout+1)^0,c
  6632                           
  6633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6634  016BA0  D020               	goto	l9689
  6635  016BA2                     l9687:
  6636                           
  6637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6638                           ;stkvar	_ap @ sp[(-2)+-6]
  6639  016BA2  0EF8               	movlw	-8
  6640  016BA4  006F FF8F FFE6     	movff	plusw1,postinc1
  6641  016BAA  006F FF8F FFE6     	movff	plusw1,postinc1
  6642                           
  6643                           ;stkvar	_cfmt @ sp[(-4)+0]
  6644  016BB0  0EFC               	movlw	252
  6645  016BB2  24E1               	addwf	fsr1l,w,c
  6646  016BB4  6E35               	movwf	btemp^0,c
  6647  016BB6  0EFF               	movlw	255
  6648  016BB8  20E2               	addwfc	fsr1h,w,c
  6649  016BBA  6E36               	movwf	(btemp+1)^0,c
  6650  016BBC  0060  F0D7  FFE6   	movff	btemp,postinc1
  6651  016BC2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6652                           
  6653                           ;stkvar	_fp @ sp[(-6)+-2]
  6654  016BC8  0EF8               	movlw	-8
  6655  016BCA  006F FF8F FFE6     	movff	plusw1,postinc1
  6656  016BD0  006F FF8F FFE6     	movff	plusw1,postinc1
  6657  016BD6  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6658  016BDA  5035               	movf	btemp^0,w,c
  6659  016BDC  261C               	addwf	_nout^0,f,c
  6660  016BDE  5036               	movf	(btemp+1)^0,w,c
  6661  016BE0  221D               	addwfc	(_nout+1)^0,f,c
  6662  016BE2                     l9689:
  6663                           
  6664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6665                           ;stkvar	_cfmt @ sp[(-2)+0]
  6666  016BE2  50E1               	movf	fsr1l,w,c
  6667  016BE4  0FFE               	addlw	-2
  6668  016BE6  6ED9               	movwf	fsr2l,c
  6669  016BE8  50E2               	movf	fsr1h,w,c
  6670  016BEA  6EDA               	movwf	fsr2h,c
  6671  016BEC  0EFF               	movlw	255
  6672  016BEE  22DA               	addwfc	fsr2h,f,c
  6673  016BF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  6674  016BF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  6675  016BFC                     	if	0	;tblptru may be non-zero
  6676  016BFC                     	endif
  6677  016BFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6678  016BFC  0E00               	movlw	low (__mediumconst shr (0+16))
  6679  016BFE  6EF8               	movwf	tblptru,c
  6680  016C00                     	endif
  6681  016C00  0008               	tblrd		*
  6682  016C02  50F5               	movf	tablat,w,c
  6683  016C04  0900               	iorlw	0
  6684  016C06  A4D8               	btfss	status,2,c
  6685  016C08  D7CC               	goto	l9687
  6686                           
  6687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6688  016C0A  0060  F070  F035   	movff	_nout,btemp
  6689  016C10  0060  F074  F036   	movff	_nout+1,btemp+1
  6690                           
  6691                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6692  016C16  0EF8               	movlw	248
  6693  016C18  26E1               	addwf	fsr1l,f,c
  6694  016C1A  0EFF               	movlw	255
  6695  016C1C  22E2               	addwfc	fsr1h,f,c
  6696  016C1E  0012               	return		;funcret
  6697  016C20                     __end_of_vfprintf:
  6698                           	opt callstack 0
  6699                           
  6700 ;; *************** function _vfpfcnvrt *****************
  6701 ;; Defined at:
  6702 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6705 ;;		 -> f(6), NULL(0), 
  6706 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6707 ;;		 -> cfmt(2), 
  6708 ;;  ap              2  [STACK] PTR PTR void 
  6709 ;;		 -> ap(2), ap(2), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  llu             8  [STACK] unsigned long long 
  6712 ;;  ll              8  [STACK] long long 
  6713 ;;  f               4  [STACK] long long 
  6714 ;;  ct              3  [STACK] unsigned char [3]
  6715 ;;  vp              3    0        PTR void 
  6716 ;;  cp              2  [STACK] PTR unsigned char 
  6717 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6718 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6719 ;;		 -> STR_3(4), V(171), 
  6720 ;;  i               2    0        int 
  6721 ;;  done            2    0        int 
  6722 ;;  c               1  [STACK] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  2  [STACK] int 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/4
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6736 ;;Total ram usage:        0 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:   12
  6739 ;; This function calls:
  6740 ;;		_atoi
  6741 ;;		_ctoa
  6742 ;;		_dtoa
  6743 ;;		_efgtoa
  6744 ;;		_fputc
  6745 ;;		_isdigit
  6746 ;;		_isupper
  6747 ;;		_stoa
  6748 ;;		_strncmp
  6749 ;;		_tolower
  6750 ;;		_xtoa
  6751 ;; This function is called by:
  6752 ;;		_vfprintf
  6753 ;; This function uses a reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text34
  6757  011244                     __ptext34:
  6758                           	opt callstack 0
  6759  011244                     _vfpfcnvrt:
  6760                           	opt callstack 0
  6761                           
  6762                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6763  011244  0E20               	movlw	32
  6764  011246  26E1               	addwf	fsr1l,f,c
  6765  011248  0E00               	movlw	0
  6766  01124A  22E2               	addwfc	fsr1h,f,c
  6767                           
  6768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6769                           ;stkvar	_fmt @ sp[(-32)+-4]
  6770                           
  6771                           ;incstack = 0
  6772  01124C  0EDC               	movlw	-36
  6773  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6774  011254  0EDD               	movlw	-35
  6775  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6776  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6777  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6778  011268                     	if	0	;tblptru may be non-zero
  6779  011268                     	endif
  6780  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6781  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6782  01126A  6EF8               	movwf	tblptru,c
  6783  01126C                     	endif
  6784  01126C  0008               	tblrd		*
  6785  01126E  50F5               	movf	tablat,w,c
  6786  011270  0A25               	xorlw	37
  6787  011272  A4D8               	btfss	status,2,c
  6788  011274  EF92  F08E         	goto	l9633
  6789                           
  6790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6791                           ;stkvar	_fmt @ sp[(-32)+-4]
  6792  011278  0EDC               	movlw	-36
  6793  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6794  011280  0EDD               	movlw	-35
  6795  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6796  011288  2ADE               	incf	postinc2,f,c
  6797  01128A  0E00               	movlw	0
  6798  01128C  22DD               	addwfc	postdec2,f,c
  6799                           
  6800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6801  01128E  6A1E               	clrf	_width^0,c
  6802  011290  6A1F               	clrf	(_width+1)^0,c
  6803  011292  6A22               	clrf	_flags^0,c
  6804  011294  6A23               	clrf	(_flags+1)^0,c
  6805                           
  6806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6807  011296  6820               	setf	_prec^0,c
  6808  011298  6821               	setf	(_prec+1)^0,c
  6809                           
  6810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6811                           ;stkvar	_fmt @ sp[(-32)+-4]
  6812  01129A  0EDC               	movlw	-36
  6813  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6814  0112A2  0EDD               	movlw	-35
  6815  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6816  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6817  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6818  0112B6                     	if	0	;tblptru may be non-zero
  6819  0112B6                     	endif
  6820  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6821  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6822  0112B8  6EF8               	movwf	tblptru,c
  6823  0112BA                     	endif
  6824  0112BA  0008               	tblrd		*
  6825  0112BC  50F5               	movf	tablat,w,c
  6826  0112BE  0A2A               	xorlw	42
  6827  0112C0  A4D8               	btfss	status,2,c
  6828  0112C2  D031               	goto	l9497
  6829                           
  6830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6831                           ;stkvar	_fmt @ sp[(-32)+-4]
  6832  0112C4  0EDC               	movlw	-36
  6833  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6834  0112CC  0EDD               	movlw	-35
  6835  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6836  0112D4  2ADE               	incf	postinc2,f,c
  6837  0112D6  0E00               	movlw	0
  6838  0112D8  22DD               	addwfc	postdec2,f,c
  6839                           
  6840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6841                           ;stkvar	_ap @ sp[(-32)+-6]
  6842  0112DA  0EDA               	movlw	-38
  6843  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6844  0112E2  0EDB               	movlw	-37
  6845  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6846  0112EA  0E02               	movlw	2
  6847  0112EC  5EDE               	subwf	postinc2,f,c
  6848  0112EE  0E00               	movlw	0
  6849  0112F0  5ADD               	subwfb	postdec2,f,c
  6850  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6851  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6852  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6853  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6854  01130A  006F FF78  F01E    	movff	postinc2,_width
  6855  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6856                           
  6857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6858  011316  AE1F               	btfss	(_width+1)^0,7,c
  6859  011318  D066               	goto	u9610
  6860                           
  6861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6862  01131A  8022               	bsf	_flags^0,0,c
  6863                           
  6864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6865  01131C  6C1E               	negf	_width^0,c
  6866  01131E  1E1F               	comf	(_width+1)^0,f,c
  6867  011320  B0D8               	btfsc	status,0,c
  6868  011322  2A1F               	incf	(_width+1)^0,f,c
  6869  011324  D060               	goto	u9610
  6870  011326                     l9497:
  6871                           
  6872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6873                           ;stkvar	_fmt @ sp[(-32)+-4]
  6874  011326  0EDC               	movlw	-36
  6875  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6876  01132E  0EDD               	movlw	-35
  6877  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6878  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6879  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6880  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6881  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6882  01134E  EC1D  F0A7         	call	_atoi	;wreg free
  6883  011352  0060  F0D4  F01E   	movff	btemp,_width
  6884  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6885                           
  6886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6887  01135E  D00B               	goto	l9501
  6888  011360                     l9499:
  6889                           
  6890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6891                           ;stkvar	_fmt @ sp[(-32)+-4]
  6892  011360  0EDC               	movlw	-36
  6893  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6894  011368  0EDD               	movlw	-35
  6895  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6896  011370  2ADE               	incf	postinc2,f,c
  6897  011372  0E00               	movlw	0
  6898  011374  22DD               	addwfc	postdec2,f,c
  6899  011376                     l9501:
  6900  011376  0ED0               	movlw	208
  6901  011378  6E3F               	movwf	(btemp+10)^0,c
  6902  01137A  0EFF               	movlw	255
  6903  01137C  6E40               	movwf	(btemp+11)^0,c
  6904                           
  6905                           ;stkvar	_fmt @ sp[(-32)+-4]
  6906  01137E  0EDC               	movlw	-36
  6907  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6908  011386  0EDD               	movlw	-35
  6909  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6910  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6911  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6912  01139A                     	if	0	;tblptru may be non-zero
  6913  01139A                     	endif
  6914  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6915  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6916  01139C  6EF8               	movwf	tblptru,c
  6917  01139E                     	endif
  6918  01139E  0008               	tblrd		*
  6919  0113A0  50F5               	movf	tablat,w,c
  6920  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6921  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6922  0113A6  503F               	movf	(btemp+10)^0,w,c
  6923  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6924  0113AA  5040               	movf	(btemp+11)^0,w,c
  6925  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6926  0113AE  503E               	movf	(btemp+9)^0,w,c
  6927  0113B0  E106               	bnz	u9590
  6928  0113B2  0E0A               	movlw	10
  6929  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6930  0113B6  B0D8               	btfsc	status,0,c
  6931  0113B8  D002               	goto	u9590
  6932  0113BA  0E01               	movlw	1
  6933  0113BC  D001               	goto	u9600
  6934  0113BE                     u9590:
  6935  0113BE  0E00               	movlw	0
  6936  0113C0                     u9600:
  6937  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6938  0113C2  6A40               	clrf	(btemp+11)^0,c
  6939                           
  6940                           ;stkvar	_vfpfcnvrt$4116 @ sp[(-32)+4]
  6941  0113C4  0EE4               	movlw	-28
  6942  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6943  0113CC  0EE5               	movlw	-27
  6944  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6945                           
  6946                           ;stkvar	_vfpfcnvrt$4116 @ sp[(-32)+4]
  6947  0113D4  0EE4               	movlw	-28
  6948  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6949  0113DC  0EE5               	movlw	-27
  6950  0113DE  50E3               	movf	plusw1,w,c
  6951  0113E0  1035               	iorwf	btemp^0,w,c
  6952  0113E2  A4D8               	btfss	status,2,c
  6953  0113E4  D7BD               	goto	l9499
  6954  0113E6                     u9610:
  6955                           
  6956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6957                           ;stkvar	_fmt @ sp[(-32)+-4]
  6958  0113E6  0EDC               	movlw	-36
  6959  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6960  0113EE  0EDD               	movlw	-35
  6961  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6962  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6963  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6964  011402                     	if	0	;tblptru may be non-zero
  6965  011402                     	endif
  6966  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6967  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6968  011404  6EF8               	movwf	tblptru,c
  6969  011406                     	endif
  6970  011406  0008               	tblrd		*
  6971  011408  50F5               	movf	tablat,w,c
  6972  01140A  0A2E               	xorlw	46
  6973  01140C  A4D8               	btfss	status,2,c
  6974  01140E  D0AC               	goto	u9660
  6975                           
  6976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6977  011410  6A20               	clrf	_prec^0,c
  6978  011412  6A21               	clrf	(_prec+1)^0,c
  6979                           
  6980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6981                           ;stkvar	_fmt @ sp[(-32)+-4]
  6982  011414  0EDC               	movlw	-36
  6983  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6984  01141C  0EDD               	movlw	-35
  6985  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6986  011424  2ADE               	incf	postinc2,f,c
  6987  011426  0E00               	movlw	0
  6988  011428  22DD               	addwfc	postdec2,f,c
  6989                           
  6990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6991                           ;stkvar	_fmt @ sp[(-32)+-4]
  6992  01142A  0EDC               	movlw	-36
  6993  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6994  011432  0EDD               	movlw	-35
  6995  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6996  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6997  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  6998  011446                     	if	0	;tblptru may be non-zero
  6999  011446                     	endif
  7000  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7001  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7002  011448  6EF8               	movwf	tblptru,c
  7003  01144A                     	endif
  7004  01144A  0008               	tblrd		*
  7005  01144C  50F5               	movf	tablat,w,c
  7006  01144E  0A2A               	xorlw	42
  7007  011450  A4D8               	btfss	status,2,c
  7008  011452  D02A               	goto	l9519
  7009                           
  7010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7011                           ;stkvar	_fmt @ sp[(-32)+-4]
  7012  011454  0EDC               	movlw	-36
  7013  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7014  01145C  0EDD               	movlw	-35
  7015  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7016  011464  2ADE               	incf	postinc2,f,c
  7017  011466  0E00               	movlw	0
  7018  011468  22DD               	addwfc	postdec2,f,c
  7019                           
  7020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7021                           ;stkvar	_ap @ sp[(-32)+-6]
  7022  01146A  0EDA               	movlw	-38
  7023  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7024  011472  0EDB               	movlw	-37
  7025  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7026  01147A  0E02               	movlw	2
  7027  01147C  5EDE               	subwf	postinc2,f,c
  7028  01147E  0E00               	movlw	0
  7029  011480  5ADD               	subwfb	postdec2,f,c
  7030  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7031  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7032  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7033  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7034  01149A  006F FF78  F020    	movff	postinc2,_prec
  7035  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7036                           
  7037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7038  0114A6  D060               	goto	u9660
  7039  0114A8                     l9519:
  7040                           
  7041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7042                           ;stkvar	_fmt @ sp[(-32)+-4]
  7043  0114A8  0EDC               	movlw	-36
  7044  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7045  0114B0  0EDD               	movlw	-35
  7046  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7047  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7048  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7049  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7050  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7051  0114D0  EC1D  F0A7         	call	_atoi	;wreg free
  7052  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7053  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7054                           
  7055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7056  0114E0  D00B               	goto	l9523
  7057  0114E2                     l9521:
  7058                           
  7059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7060                           ;stkvar	_fmt @ sp[(-32)+-4]
  7061  0114E2  0EDC               	movlw	-36
  7062  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7063  0114EA  0EDD               	movlw	-35
  7064  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7065  0114F2  2ADE               	incf	postinc2,f,c
  7066  0114F4  0E00               	movlw	0
  7067  0114F6  22DD               	addwfc	postdec2,f,c
  7068  0114F8                     l9523:
  7069  0114F8  0ED0               	movlw	208
  7070  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7071  0114FC  0EFF               	movlw	255
  7072  0114FE  6E40               	movwf	(btemp+11)^0,c
  7073                           
  7074                           ;stkvar	_fmt @ sp[(-32)+-4]
  7075  011500  0EDC               	movlw	-36
  7076  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7077  011508  0EDD               	movlw	-35
  7078  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7079  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7080  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7081  01151C                     	if	0	;tblptru may be non-zero
  7082  01151C                     	endif
  7083  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7084  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7085  01151E  6EF8               	movwf	tblptru,c
  7086  011520                     	endif
  7087  011520  0008               	tblrd		*
  7088  011522  50F5               	movf	tablat,w,c
  7089  011524  6E3D               	movwf	(btemp+8)^0,c
  7090  011526  6A3E               	clrf	(btemp+9)^0,c
  7091  011528  503F               	movf	(btemp+10)^0,w,c
  7092  01152A  263D               	addwf	(btemp+8)^0,f,c
  7093  01152C  5040               	movf	(btemp+11)^0,w,c
  7094  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7095  011530  503E               	movf	(btemp+9)^0,w,c
  7096  011532  E106               	bnz	u9640
  7097  011534  0E0A               	movlw	10
  7098  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7099  011538  B0D8               	btfsc	status,0,c
  7100  01153A  D002               	goto	u9640
  7101  01153C  0E01               	movlw	1
  7102  01153E  D001               	goto	u9650
  7103  011540                     u9640:
  7104  011540  0E00               	movlw	0
  7105  011542                     u9650:
  7106  011542  6E3F               	movwf	(btemp+10)^0,c
  7107  011544  6A40               	clrf	(btemp+11)^0,c
  7108                           
  7109                           ;stkvar	_vfpfcnvrt$4117 @ sp[(-32)+0]
  7110  011546  0EE0               	movlw	-32
  7111  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7112  01154E  0EE1               	movlw	-31
  7113  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7114                           
  7115                           ;stkvar	_vfpfcnvrt$4117 @ sp[(-32)+0]
  7116  011556  0EE0               	movlw	-32
  7117  011558  006F FF8C  F035    	movff	plusw1,btemp
  7118  01155E  0EE1               	movlw	-31
  7119  011560  50E3               	movf	plusw1,w,c
  7120  011562  1035               	iorwf	btemp^0,w,c
  7121  011564  A4D8               	btfss	status,2,c
  7122  011566  D7BD               	goto	l9521
  7123  011568                     u9660:
  7124                           
  7125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7126                           ;stkvar	_fmt @ sp[(-32)+-4]
  7127  011568  0EDC               	movlw	-36
  7128  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7129  011570  0EDD               	movlw	-35
  7130  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7131  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7132  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7133  011584                     	if	0	;tblptru may be non-zero
  7134  011584                     	endif
  7135  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7136  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7137  011586  6EF8               	movwf	tblptru,c
  7138  011588                     	endif
  7139  011588  0008               	tblrd		*
  7140  01158A  50F5               	movf	tablat,w,c
  7141  01158C  6EE6               	movwf	postinc1,c
  7142  01158E  0E00               	movlw	0
  7143  011590  6EE6               	movwf	postinc1,c
  7144  011592  EC62  F0B8         	call	_tolower	;wreg free
  7145                           
  7146                           ;stkvar	_ct @ sp[(-32)+26]
  7147  011596  0EFA               	movlw	-6
  7148  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7149                           
  7150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7151                           ;stkvar	_ct @ sp[(-32)+26]
  7152  01159E  0EFA               	movlw	-6
  7153  0115A0  50E3               	movf	plusw1,w,c
  7154  0115A2  B4D8               	btfsc	status,2,c
  7155  0115A4  D05B               	goto	l9539
  7156                           
  7157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7158                           ;stkvar	_ct @ sp[(-32)+26]
  7159  0115A6  0EFB               	movlw	251
  7160  0115A8  24E1               	addwf	fsr1l,w,c
  7161  0115AA  6ED9               	movwf	fsr2l,c
  7162  0115AC  0EFF               	movlw	255
  7163  0115AE  20E2               	addwfc	fsr1h,w,c
  7164  0115B0  6EDA               	movwf	fsr2h,c
  7165                           
  7166                           ;stkvar	_fmt @ sp[(-32)+-4]
  7167  0115B2  0EDC               	movlw	-36
  7168  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7169  0115BA  0EDD               	movlw	-35
  7170  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7171  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7172  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7173  0115CE  0E01               	movlw	1
  7174  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7175  0115D2  0E00               	movlw	0
  7176  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7177  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7178  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7179  0115E2                     	if	0	;tblptru may be non-zero
  7180  0115E2                     	endif
  7181  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7182  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7183  0115E4  6EF8               	movwf	tblptru,c
  7184  0115E6                     	endif
  7185  0115E6  0008               	tblrd		*
  7186  0115E8  50F5               	movf	tablat,w,c
  7187  0115EA  6EE6               	movwf	postinc1,c
  7188  0115EC  0E00               	movlw	0
  7189  0115EE  6EE6               	movwf	postinc1,c
  7190  0115F0  EC62  F0B8         	call	_tolower	;wreg free
  7191  0115F4  5035               	movf	btemp^0,w,c
  7192  0115F6  6EDF               	movwf	indf2,c
  7193                           
  7194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7195                           ;stkvar	_ct @ sp[(-32)+26]
  7196  0115F8  0EFB               	movlw	251
  7197  0115FA  24E1               	addwf	fsr1l,w,c
  7198  0115FC  6ED9               	movwf	fsr2l,c
  7199  0115FE  0EFF               	movlw	255
  7200  011600  20E2               	addwfc	fsr1h,w,c
  7201  011602  6EDA               	movwf	fsr2h,c
  7202  011604  50DF               	movf	indf2,w,c
  7203  011606  B4D8               	btfsc	status,2,c
  7204  011608  D029               	goto	l9539
  7205                           
  7206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7207                           ;stkvar	_ct @ sp[(-32)+26]
  7208  01160A  0EFC               	movlw	252
  7209  01160C  24E1               	addwf	fsr1l,w,c
  7210  01160E  6ED9               	movwf	fsr2l,c
  7211  011610  0EFF               	movlw	255
  7212  011612  20E2               	addwfc	fsr1h,w,c
  7213  011614  6EDA               	movwf	fsr2h,c
  7214                           
  7215                           ;stkvar	_fmt @ sp[(-32)+-4]
  7216  011616  0EDC               	movlw	-36
  7217  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7218  01161E  0EDD               	movlw	-35
  7219  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7220  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7221  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7222  011632  0E02               	movlw	2
  7223  011634  263F               	addwf	(btemp+10)^0,f,c
  7224  011636  0E00               	movlw	0
  7225  011638  2240               	addwfc	(btemp+11)^0,f,c
  7226  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7227  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7228  011646                     	if	0	;tblptru may be non-zero
  7229  011646                     	endif
  7230  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7231  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7232  011648  6EF8               	movwf	tblptru,c
  7233  01164A                     	endif
  7234  01164A  0008               	tblrd		*
  7235  01164C  50F5               	movf	tablat,w,c
  7236  01164E  6EE6               	movwf	postinc1,c
  7237  011650  0E00               	movlw	0
  7238  011652  6EE6               	movwf	postinc1,c
  7239  011654  EC62  F0B8         	call	_tolower	;wreg free
  7240  011658  5035               	movf	btemp^0,w,c
  7241  01165A  6EDF               	movwf	indf2,c
  7242  01165C                     l9539:
  7243                           
  7244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7245                           ;stkvar	_fmt @ sp[(-32)+-4]
  7246  01165C  0EDC               	movlw	-36
  7247  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7248  011664  0EDD               	movlw	-35
  7249  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7250  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7251  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7252  011678                     	if	0	;tblptru may be non-zero
  7253  011678                     	endif
  7254  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7255  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7256  01167A  6EF8               	movwf	tblptru,c
  7257  01167C                     	endif
  7258  01167C  0008               	tblrd		*
  7259  01167E  50F5               	movf	tablat,w,c
  7260  011680  0A63               	xorlw	99
  7261  011682  A4D8               	btfss	status,2,c
  7262  011684  D036               	goto	l9549
  7263                           
  7264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7265                           ;stkvar	_fmt @ sp[(-32)+-4]
  7266  011686  0EDC               	movlw	-36
  7267  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7268  01168E  0EDD               	movlw	-35
  7269  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7270  011696  2ADE               	incf	postinc2,f,c
  7271  011698  0E00               	movlw	0
  7272  01169A  22DD               	addwfc	postdec2,f,c
  7273                           
  7274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7275                           ;stkvar	_ap @ sp[(-32)+-6]
  7276  01169C  0EDA               	movlw	-38
  7277  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7278  0116A4  0EDB               	movlw	-37
  7279  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7280  0116AC  0E02               	movlw	2
  7281  0116AE  5EDE               	subwf	postinc2,f,c
  7282  0116B0  0E00               	movlw	0
  7283  0116B2  5ADD               	subwfb	postdec2,f,c
  7284  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7285  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7286  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7287  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7288  0116CC  50DF               	movf	indf2,w,c
  7289  0116CE  6E40               	movwf	(btemp+11)^0,c
  7290                           
  7291                           ;stkvar	_c @ sp[(-32)+31]
  7292  0116D0  0EFF               	movlw	-1
  7293  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7294                           
  7295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7296                           ;stkvar	_c @ sp[(-32)+31]
  7297  0116D8  0EFF               	movlw	-1
  7298  0116DA  50E3               	movf	plusw1,w,c
  7299  0116DC  6EE6               	movwf	postinc1,c
  7300                           
  7301                           ;stkvar	_fp @ sp[(-33)+-2]
  7302  0116DE  0EDD               	movlw	-35
  7303  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7304  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7305  0116EC  ECDC  F0B7         	call	_ctoa	;wreg free
  7306  0116F0  D343               	goto	l1949
  7307  0116F2                     l9549:
  7308                           
  7309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7310                           ;stkvar	_fmt @ sp[(-32)+-4]
  7311  0116F2  0EDC               	movlw	-36
  7312  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7313  0116FA  0EDD               	movlw	-35
  7314  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7315  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7316  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7317  01170E                     	if	0	;tblptru may be non-zero
  7318  01170E                     	endif
  7319  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7320  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7321  011710  6EF8               	movwf	tblptru,c
  7322  011712                     	endif
  7323  011712  0008               	tblrd		*
  7324  011714  50F5               	movf	tablat,w,c
  7325  011716  0A64               	xorlw	100
  7326  011718  B4D8               	btfsc	status,2,c
  7327  01171A  D015               	goto	u9710
  7328                           
  7329                           ;stkvar	_fmt @ sp[(-32)+-4]
  7330  01171C  0EDC               	movlw	-36
  7331  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7332  011724  0EDD               	movlw	-35
  7333  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7334  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7335  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7336  011738                     	if	0	;tblptru may be non-zero
  7337  011738                     	endif
  7338  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7339  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7340  01173A  6EF8               	movwf	tblptru,c
  7341  01173C                     	endif
  7342  01173C  0008               	tblrd		*
  7343  01173E  50F5               	movf	tablat,w,c
  7344  011740  0A69               	xorlw	105
  7345  011742  A4D8               	btfss	status,2,c
  7346  011744  D075               	goto	l9561
  7347  011746                     u9710:
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7350                           ;stkvar	_fmt @ sp[(-32)+-4]
  7351  011746  0EDC               	movlw	-36
  7352  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7353  01174E  0EDD               	movlw	-35
  7354  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7355  011756  2ADE               	incf	postinc2,f,c
  7356  011758  0E00               	movlw	0
  7357  01175A  22DD               	addwfc	postdec2,f,c
  7358                           
  7359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7360                           ;stkvar	_ap @ sp[(-32)+-6]
  7361  01175C  0EDA               	movlw	-38
  7362  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7363  011764  0EDB               	movlw	-37
  7364  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7365  01176C  0E02               	movlw	2
  7366  01176E  5EDE               	subwf	postinc2,f,c
  7367  011770  0E00               	movlw	0
  7368  011772  5ADD               	subwfb	postdec2,f,c
  7369  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7370  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7371  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7372  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7373  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7374  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7375                           
  7376                           ;stkvar	_ll @ sp[(-32)+14]
  7377  011798  0EEE               	movlw	-18
  7378  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7379  0117A0  0EEF               	movlw	-17
  7380  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7381  0117A8  6A35               	clrf	btemp^0,c
  7382  0117AA  BEE3               	btfsc	plusw1,7,c
  7383  0117AC  6835               	setf	btemp^0,c
  7384  0117AE  0EF0               	movlw	-16
  7385  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7386  0117B6  0EF1               	movlw	-15
  7387  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7388  0117BE  0EF2               	movlw	-14
  7389  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7390  0117C6  0EF3               	movlw	-13
  7391  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7392  0117CE  0EF4               	movlw	-12
  7393  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7394  0117D6  0EF5               	movlw	-11
  7395  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7396                           
  7397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7398                           ;stkvar	_ll @ sp[(-32)+14]
  7399  0117DE  50E1               	movf	fsr1l,w,c
  7400  0117E0  0FEE               	addlw	-18
  7401  0117E2  6ED9               	movwf	fsr2l,c
  7402  0117E4  50E2               	movf	fsr1h,w,c
  7403  0117E6  6EDA               	movwf	fsr2h,c
  7404  0117E8  0EFF               	movlw	255
  7405  0117EA  22DA               	addwfc	fsr2h,f,c
  7406  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7407  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7408  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7409  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7410  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7411  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7412  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7413  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7414                           
  7415                           ;stkvar	_fp @ sp[(-40)+-2]
  7416  01181C  0ED6               	movlw	-42
  7417  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7418  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7419  01182A  EC71  F099         	call	_dtoa	;wreg free
  7420  01182E  D2A4               	goto	l1949
  7421  011830                     l9561:
  7422                           
  7423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7424                           ;stkvar	_ct @ sp[(-32)+26]
  7425  011830  0EFA               	movlw	-6
  7426  011832  006F FF8C  F035    	movff	plusw1,btemp
  7427  011838  0E66               	movlw	102
  7428  01183A  1835               	xorwf	btemp^0,w,c
  7429  01183C  A4D8               	btfss	status,2,c
  7430  01183E  D06E               	goto	l9573
  7431                           
  7432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7433                           ;stkvar	_fmt @ sp[(-32)+-4]
  7434  011840  0EDC               	movlw	-36
  7435  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7436  011848  0EDD               	movlw	-35
  7437  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7438  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7439  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7440  01185C                     	if	0	;tblptru may be non-zero
  7441  01185C                     	endif
  7442  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7443  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7444  01185E  6EF8               	movwf	tblptru,c
  7445  011860                     	endif
  7446                           
  7447                           ;stkvar	_c @ sp[(-32)+31]
  7448  011860  0008               	tblrd		*
  7449  011862  0EFF               	movlw	-1
  7450  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7451                           
  7452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7453                           ;stkvar	_fmt @ sp[(-32)+-4]
  7454  01186A  0EDC               	movlw	-36
  7455  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7456  011872  0EDD               	movlw	-35
  7457  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7458  01187A  2ADE               	incf	postinc2,f,c
  7459  01187C  0E00               	movlw	0
  7460  01187E  22DD               	addwfc	postdec2,f,c
  7461                           
  7462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7463                           ;stkvar	_ap @ sp[(-32)+-6]
  7464  011880  0EDA               	movlw	-38
  7465  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7466  011888  0EDB               	movlw	-37
  7467  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7468  011890  0E04               	movlw	4
  7469  011892  5EDE               	subwf	postinc2,f,c
  7470  011894  0E00               	movlw	0
  7471  011896  5ADD               	subwfb	postdec2,f,c
  7472  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7473  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7474  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7475  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7476  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7477  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7478  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7479  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7480                           
  7481                           ;stkvar	_f @ sp[(-32)+22]
  7482  0118C8  0EF6               	movlw	-10
  7483  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7484  0118D0  0EF7               	movlw	-9
  7485  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7486  0118D8  0EF8               	movlw	-8
  7487  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7488  0118E0  0EF9               	movlw	-7
  7489  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7490  0118E8                     l9569:
  7491                           
  7492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7493                           ;stkvar	_c @ sp[(-32)+31]
  7494  0118E8  0EFF               	movlw	-1
  7495  0118EA  50E3               	movf	plusw1,w,c
  7496  0118EC  6EE6               	movwf	postinc1,c
  7497                           
  7498                           ;stkvar	_f @ sp[(-33)+22]
  7499  0118EE  0EF5               	movlw	-11
  7500  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7501  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7502  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7503  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7504                           
  7505                           ;stkvar	_fp @ sp[(-37)+-2]
  7506  011908  0ED9               	movlw	-39
  7507  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7508  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7509  011916  EC00  F080         	call	_efgtoa	;wreg free
  7510  01191A  D22E               	goto	l1949
  7511  01191C                     l9573:
  7512                           
  7513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7514  01191C  0E02               	movlw	2
  7515  01191E  6EE6               	movwf	postinc1,c
  7516  011920  0E00               	movlw	0
  7517  011922  6EE6               	movwf	postinc1,c
  7518  011924  0EF6               	movlw	low STR_41
  7519  011926  6EE6               	movwf	postinc1,c
  7520  011928  0EFF               	movlw	high STR_41
  7521  01192A  6EE6               	movwf	postinc1,c
  7522                           
  7523                           ;stkvar	_ct @ sp[(-36)+26]
  7524  01192C  0EF6               	movlw	246
  7525  01192E  24E1               	addwf	fsr1l,w,c
  7526  011930  6E35               	movwf	btemp^0,c
  7527  011932  0EFF               	movlw	255
  7528  011934  20E2               	addwfc	fsr1h,w,c
  7529  011936  6E36               	movwf	(btemp+1)^0,c
  7530  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7531  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7532  011944  EC82  F0AB         	call	_strncmp	;wreg free
  7533  011948  5035               	movf	btemp^0,w,c
  7534  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7535  01194C  A4D8               	btfss	status,2,c
  7536  01194E  D096               	goto	l9593
  7537                           
  7538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7539                           ;stkvar	_fmt @ sp[(-32)+-4]
  7540  011950  0EDC               	movlw	-36
  7541  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7542  011958  0EDD               	movlw	-35
  7543  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7544  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7545  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7546  01196C  0E01               	movlw	1
  7547  01196E  263F               	addwf	(btemp+10)^0,f,c
  7548  011970  0E00               	movlw	0
  7549  011972  2240               	addwfc	(btemp+11)^0,f,c
  7550  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7551  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7552  011980                     	if	0	;tblptru may be non-zero
  7553  011980                     	endif
  7554  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7555  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7556  011982  6EF8               	movwf	tblptru,c
  7557  011984                     	endif
  7558                           
  7559                           ;stkvar	_c @ sp[(-32)+31]
  7560  011984  0008               	tblrd		*
  7561  011986  0EFF               	movlw	-1
  7562  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7563  01198E  0EBF               	movlw	191
  7564  011990  6E3F               	movwf	(btemp+10)^0,c
  7565  011992  0EFF               	movlw	255
  7566  011994  6E40               	movwf	(btemp+11)^0,c
  7567                           
  7568                           ;stkvar	_fmt @ sp[(-32)+-4]
  7569  011996  0EDC               	movlw	-36
  7570  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7571  01199E  0EDD               	movlw	-35
  7572  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7573  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7574  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7575  0119B2                     	if	0	;tblptru may be non-zero
  7576  0119B2                     	endif
  7577  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7578  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7579  0119B4  6EF8               	movwf	tblptru,c
  7580  0119B6                     	endif
  7581  0119B6  0008               	tblrd		*
  7582  0119B8  50F5               	movf	tablat,w,c
  7583  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7584  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7585  0119BE  503F               	movf	(btemp+10)^0,w,c
  7586  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7587  0119C2  5040               	movf	(btemp+11)^0,w,c
  7588  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7589  0119C6  503E               	movf	(btemp+9)^0,w,c
  7590  0119C8  E106               	bnz	u9740
  7591  0119CA  0E1A               	movlw	26
  7592  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7593  0119CE  B0D8               	btfsc	status,0,c
  7594  0119D0  D002               	goto	u9740
  7595  0119D2  0E01               	movlw	1
  7596  0119D4  D001               	goto	u9750
  7597  0119D6                     u9740:
  7598  0119D6  0E00               	movlw	0
  7599  0119D8                     u9750:
  7600  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7601  0119DA  6A40               	clrf	(btemp+11)^0,c
  7602                           
  7603                           ;stkvar	_vfpfcnvrt$4123 @ sp[(-32)+2]
  7604  0119DC  0EE2               	movlw	-30
  7605  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7606  0119E4  0EE3               	movlw	-29
  7607  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7608                           
  7609                           ;stkvar	_vfpfcnvrt$4123 @ sp[(-32)+2]
  7610  0119EC  0EE2               	movlw	-30
  7611  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7612  0119F4  0EE3               	movlw	-29
  7613  0119F6  50E3               	movf	plusw1,w,c
  7614  0119F8  1035               	iorwf	btemp^0,w,c
  7615                           
  7616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7617                           ;stkvar	_ap @ sp[(-32)+-6]
  7618                           
  7619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7620                           
  7621                           ;stkvar	_f @ sp[(-32)+22]
  7622                           
  7623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7624                           ;stkvar	_ap @ sp[(-32)+-6]
  7625  0119FA  0EDA               	movlw	-38
  7626  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7627  011A02  0EDB               	movlw	-37
  7628  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7629  011A0A  0E04               	movlw	4
  7630  011A0C  5EDE               	subwf	postinc2,f,c
  7631  011A0E  0E00               	movlw	0
  7632  011A10  5ADD               	subwfb	postdec2,f,c
  7633  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7634  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7635  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7636  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7637  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7638  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7639  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7640  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7641                           
  7642                           ;stkvar	_f @ sp[(-32)+22]
  7643  011A42  0EF6               	movlw	-10
  7644  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7645  011A4A  0EF7               	movlw	-9
  7646  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7647  011A52  0EF8               	movlw	-8
  7648  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7649  011A5A  0EF9               	movlw	-7
  7650  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7651                           
  7652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7653                           ;stkvar	_fmt @ sp[(-32)+-4]
  7654  011A62  0EDC               	movlw	-36
  7655  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7656  011A6A  0EDD               	movlw	-35
  7657  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7658  011A72  0E02               	movlw	2
  7659  011A74  26DE               	addwf	postinc2,f,c
  7660  011A76  0E00               	movlw	0
  7661  011A78  22DD               	addwfc	postdec2,f,c
  7662  011A7A  D736               	goto	l9569
  7663  011A7C                     l9593:
  7664                           
  7665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7666                           ;stkvar	_fmt @ sp[(-32)+-4]
  7667  011A7C  0EDC               	movlw	-36
  7668  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7669  011A84  0EDD               	movlw	-35
  7670  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7671  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7672  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7673  011A98                     	if	0	;tblptru may be non-zero
  7674  011A98                     	endif
  7675  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7676  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7677  011A9A  6EF8               	movwf	tblptru,c
  7678  011A9C                     	endif
  7679  011A9C  0008               	tblrd		*
  7680  011A9E  50F5               	movf	tablat,w,c
  7681  011AA0  0A73               	xorlw	115
  7682  011AA2  A4D8               	btfss	status,2,c
  7683  011AA4  D042               	goto	l9603
  7684                           
  7685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7686                           ;stkvar	_fmt @ sp[(-32)+-4]
  7687  011AA6  0EDC               	movlw	-36
  7688  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7689  011AAE  0EDD               	movlw	-35
  7690  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7691  011AB6  2ADE               	incf	postinc2,f,c
  7692  011AB8  0E00               	movlw	0
  7693  011ABA  22DD               	addwfc	postdec2,f,c
  7694                           
  7695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7696                           ;stkvar	_ap @ sp[(-32)+-6]
  7697  011ABC  0EDA               	movlw	-38
  7698  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7699  011AC4  0EDB               	movlw	-37
  7700  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7701  011ACC  0E02               	movlw	2
  7702  011ACE  5EDE               	subwf	postinc2,f,c
  7703  011AD0  0E00               	movlw	0
  7704  011AD2  5ADD               	subwfb	postdec2,f,c
  7705  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7706  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7707  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7708  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7709  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7710  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7711                           
  7712                           ;stkvar	_cp @ sp[(-32)+29]
  7713  011AF8  0EFE               	movlw	-2
  7714  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7715  011B00  0EFD               	movlw	-3
  7716  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7717                           
  7718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7719                           ;stkvar	_cp @ sp[(-32)+29]
  7720  011B08  0EFD               	movlw	-3
  7721  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7722  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7723                           
  7724                           ;stkvar	_fp @ sp[(-34)+-2]
  7725  011B16  0EDC               	movlw	-36
  7726  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7727  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7728  011B24  EC7E  F0A4         	call	_stoa	;wreg free
  7729  011B28  D127               	goto	l1949
  7730  011B2A                     l9603:
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7733                           ;stkvar	_fmt @ sp[(-32)+-4]
  7734  011B2A  0EDC               	movlw	-36
  7735  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7736  011B32  0EDD               	movlw	-35
  7737  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7738  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7739  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7740  011B46                     	if	0	;tblptru may be non-zero
  7741  011B46                     	endif
  7742  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7743  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7744  011B48  6EF8               	movwf	tblptru,c
  7745  011B4A                     	endif
  7746  011B4A  0008               	tblrd		*
  7747  011B4C  50F5               	movf	tablat,w,c
  7748  011B4E  0A78               	xorlw	120
  7749  011B50  B4D8               	btfsc	status,2,c
  7750  011B52  D015               	goto	u9790
  7751                           
  7752                           ;stkvar	_fmt @ sp[(-32)+-4]
  7753  011B54  0EDC               	movlw	-36
  7754  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7755  011B5C  0EDD               	movlw	-35
  7756  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7757  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7758  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7759  011B70                     	if	0	;tblptru may be non-zero
  7760  011B70                     	endif
  7761  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7762  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7763  011B72  6EF8               	movwf	tblptru,c
  7764  011B74                     	endif
  7765  011B74  0008               	tblrd		*
  7766  011B76  50F5               	movf	tablat,w,c
  7767  011B78  0A58               	xorlw	88
  7768  011B7A  A4D8               	btfss	status,2,c
  7769  011B7C  D094               	goto	l9617
  7770  011B7E                     u9790:
  7771                           
  7772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7773                           ;stkvar	_fmt @ sp[(-32)+-4]
  7774  011B7E  0EDC               	movlw	-36
  7775  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7776  011B86  0EDD               	movlw	-35
  7777  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7778  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7779  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7780  011B9A                     	if	0	;tblptru may be non-zero
  7781  011B9A                     	endif
  7782  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7783  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7784  011B9C  6EF8               	movwf	tblptru,c
  7785  011B9E                     	endif
  7786                           
  7787                           ;stkvar	_c @ sp[(-32)+31]
  7788  011B9E  0008               	tblrd		*
  7789  011BA0  0EFF               	movlw	-1
  7790  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7791                           
  7792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7793                           ;stkvar	_fmt @ sp[(-32)+-4]
  7794  011BA8  0EDC               	movlw	-36
  7795  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7796  011BB0  0EDD               	movlw	-35
  7797  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7798  011BB8  2ADE               	incf	postinc2,f,c
  7799  011BBA  0E00               	movlw	0
  7800  011BBC  22DD               	addwfc	postdec2,f,c
  7801                           
  7802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7803                           ;stkvar	_ap @ sp[(-32)+-6]
  7804  011BBE  0EDA               	movlw	-38
  7805  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7806  011BC6  0EDB               	movlw	-37
  7807  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7808  011BCE  0E02               	movlw	2
  7809  011BD0  5EDE               	subwf	postinc2,f,c
  7810  011BD2  0E00               	movlw	0
  7811  011BD4  5ADD               	subwfb	postdec2,f,c
  7812  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7813  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7814  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7815  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7816  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7817  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7818  011BFA  503F               	movf	(btemp+10)^0,w,c
  7819  011BFC  6E45               	movwf	(btemp+16)^0,c
  7820  011BFE  5040               	movf	(btemp+11)^0,w,c
  7821  011C00  6E46               	movwf	(btemp+17)^0,c
  7822  011C02  6A47               	clrf	(btemp+18)^0,c
  7823  011C04  6A48               	clrf	(btemp+19)^0,c
  7824  011C06  6A49               	clrf	(btemp+20)^0,c
  7825  011C08  6A4A               	clrf	(btemp+21)^0,c
  7826  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7827  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7828                           
  7829                           ;stkvar	_llu @ sp[(-32)+6]
  7830  011C0E  0EE6               	movlw	-26
  7831  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7832  011C16  0EE7               	movlw	-25
  7833  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7834  011C1E  0EE8               	movlw	-24
  7835  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7836  011C26  0EE9               	movlw	-23
  7837  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7838  011C2E  0EEA               	movlw	-22
  7839  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7840  011C36  0EEB               	movlw	-21
  7841  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7842  011C3E  0EEC               	movlw	-20
  7843  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7844  011C46  0EED               	movlw	-19
  7845  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7846                           
  7847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7848                           ;stkvar	_c @ sp[(-32)+31]
  7849  011C4E  0EFF               	movlw	-1
  7850  011C50  50E3               	movf	plusw1,w,c
  7851  011C52  6EE6               	movwf	postinc1,c
  7852                           
  7853                           ;stkvar	_llu @ sp[(-33)+6]
  7854  011C54  50E1               	movf	fsr1l,w,c
  7855  011C56  0FE5               	addlw	-27
  7856  011C58  6ED9               	movwf	fsr2l,c
  7857  011C5A  50E2               	movf	fsr1h,w,c
  7858  011C5C  6EDA               	movwf	fsr2h,c
  7859  011C5E  0EFF               	movlw	255
  7860  011C60  22DA               	addwfc	fsr2h,f,c
  7861  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7862  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7863  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7864  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7865  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7866  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7867  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7868  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7869                           
  7870                           ;stkvar	_fp @ sp[(-41)+-2]
  7871  011C92  0ED5               	movlw	-43
  7872  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7873  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7874  011CA0  ECB8  F09D         	call	_xtoa	;wreg free
  7875  011CA4  D069               	goto	l1949
  7876  011CA6                     l9617:
  7877                           
  7878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7879                           ;stkvar	_fmt @ sp[(-32)+-4]
  7880  011CA6  0EDC               	movlw	-36
  7881  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7882  011CAE  0EDD               	movlw	-35
  7883  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7884  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7885  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7886  011CC2                     	if	0	;tblptru may be non-zero
  7887  011CC2                     	endif
  7888  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7889  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7890  011CC4  6EF8               	movwf	tblptru,c
  7891  011CC6                     	endif
  7892  011CC6  0008               	tblrd		*
  7893  011CC8  50F5               	movf	tablat,w,c
  7894  011CCA  0A25               	xorlw	37
  7895  011CCC  A4D8               	btfss	status,2,c
  7896  011CCE  D01A               	goto	l9627
  7897                           
  7898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7899                           ;stkvar	_fmt @ sp[(-32)+-4]
  7900  011CD0  0EDC               	movlw	-36
  7901  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7902  011CD8  0EDD               	movlw	-35
  7903  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7904  011CE0  2ADE               	incf	postinc2,f,c
  7905  011CE2  0E00               	movlw	0
  7906  011CE4  22DD               	addwfc	postdec2,f,c
  7907                           
  7908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7909                           ;stkvar	_fp @ sp[(-32)+-2]
  7910  011CE6  0EDE               	movlw	-34
  7911  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7912  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7913  011CF4  0E25               	movlw	37
  7914  011CF6  6EE6               	movwf	postinc1,c
  7915  011CF8  0E00               	movlw	0
  7916  011CFA  6EE6               	movwf	postinc1,c
  7917  011CFC  ECB9  F0B0         	call	_fputc	;wreg free
  7918  011D00                     l9623:
  7919                           
  7920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7921  011D00  0E01               	movlw	1
  7922  011D02  D00C               	goto	L5
  7923  011D04                     l9627:
  7924                           
  7925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7926                           ;stkvar	_fmt @ sp[(-32)+-4]
  7927  011D04  0EDC               	movlw	-36
  7928  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7929  011D0C  0EDD               	movlw	-35
  7930  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7931  011D14  2ADE               	incf	postinc2,f,c
  7932  011D16  0E00               	movlw	0
  7933  011D18  22DD               	addwfc	postdec2,f,c
  7934                           
  7935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7936  011D1A  0E00               	movlw	0
  7937  011D1C                     L5:
  7938  011D1C  6E35               	movwf	btemp^0,c
  7939  011D1E  0E00               	movlw	0
  7940  011D20  6E36               	movwf	(btemp+1)^0,c
  7941  011D22  D02A               	goto	l1949
  7942  011D24                     l9633:
  7943                           
  7944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7945                           ;stkvar	_fp @ sp[(-32)+-2]
  7946  011D24  0EDE               	movlw	-34
  7947  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7948  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7949                           
  7950                           ;stkvar	_fmt @ sp[(-34)+-4]
  7951  011D32  0EDA               	movlw	-38
  7952  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7953  011D3A  0EDB               	movlw	-37
  7954  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7955  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7956  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7957  011D4E                     	if	0	;tblptru may be non-zero
  7958  011D4E                     	endif
  7959  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7960  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7961  011D50  6EF8               	movwf	tblptru,c
  7962  011D52                     	endif
  7963  011D52  0008               	tblrd		*
  7964  011D54  50F5               	movf	tablat,w,c
  7965  011D56  6EE6               	movwf	postinc1,c
  7966  011D58  0E00               	movlw	0
  7967  011D5A  6EE6               	movwf	postinc1,c
  7968  011D5C  ECB9  F0B0         	call	_fputc	;wreg free
  7969                           
  7970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7971                           ;stkvar	_fmt @ sp[(-32)+-4]
  7972  011D60  0EDC               	movlw	-36
  7973  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7974  011D68  0EDD               	movlw	-35
  7975  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7976  011D70  2ADE               	incf	postinc2,f,c
  7977  011D72  0E00               	movlw	0
  7978  011D74  22DD               	addwfc	postdec2,f,c
  7979  011D76  D7C4               	goto	l9623
  7980  011D78                     l1949:
  7981                           
  7982                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7983  011D78  0EDA               	movlw	218
  7984  011D7A  26E1               	addwf	fsr1l,f,c
  7985  011D7C  0EFF               	movlw	255
  7986  011D7E  22E2               	addwfc	fsr1h,f,c
  7987  011D80  0012               	return		;funcret
  7988  011D82                     __end_of_vfpfcnvrt:
  7989                           	opt callstack 0
  7990                           
  7991 ;; *************** function _xtoa *****************
  7992 ;; Defined at:
  7993 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7996 ;;		 -> f(6), NULL(0), 
  7997 ;;  d               8  [STACK] unsigned long long 
  7998 ;;  x               1  [STACK] unsigned char 
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;  n               8  [STACK] unsigned long long 
  8001 ;;  c               2  [STACK] int 
  8002 ;;  i               2  [STACK] int 
  8003 ;;  w               2  [STACK] int 
  8004 ;;  p               2  [STACK] int 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  2  [STACK] int 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/4
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;Total ram usage:        0 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:   11
  8021 ;; This function calls:
  8022 ;;		_isalpha
  8023 ;;		_isupper
  8024 ;;		_pad
  8025 ;;		_toupper
  8026 ;; This function is called by:
  8027 ;;		_vfpfcnvrt
  8028 ;; This function uses a reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text35
  8032  013B70                     __ptext35:
  8033                           	opt callstack 0
  8034  013B70                     _xtoa:
  8035                           	opt callstack 0
  8036                           
  8037                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8038  013B70  0E14               	movlw	20
  8039  013B72  26E1               	addwf	fsr1l,f,c
  8040  013B74  0E00               	movlw	0
  8041  013B76  22E2               	addwfc	fsr1h,f,c
  8042                           
  8043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8044                           
  8045                           ;incstack = 0
  8046  013B78  AE21               	btfss	(_prec+1)^0,7,c
  8047                           
  8048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8049  013B7A  9222               	bcf	_flags^0,1,c
  8050                           
  8051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8052  013B7C  BE21               	btfsc	(_prec+1)^0,7,c
  8053  013B7E  D005               	goto	u9390
  8054  013B80  5021               	movf	(_prec+1)^0,w,c
  8055  013B82  E110               	bnz	l9415
  8056  013B84  0420               	decf	_prec^0,w,c
  8057  013B86  B0D8               	btfsc	status,0,c
  8058  013B88  D00D               	goto	l9415
  8059  013B8A                     u9390:
  8060  013B8A  0E01               	movlw	1
  8061  013B8C  6E3F               	movwf	(btemp+10)^0,c
  8062  013B8E  0E00               	movlw	0
  8063  013B90  6E40               	movwf	(btemp+11)^0,c
  8064                           
  8065                           ;stkvar	_p @ sp[(-20)+18]
  8066  013B92  0EFE               	movlw	-2
  8067  013B94  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8068  013B9A  0EFF               	movlw	-1
  8069  013B9C  0060  F103  FFE3   	movff	btemp+11,plusw1
  8070  013BA2  D008               	goto	l1899
  8071  013BA4                     l9415:
  8072                           
  8073                           ;stkvar	_p @ sp[(-20)+18]
  8074  013BA4  0EFE               	movlw	-2
  8075  013BA6  0060  F083  FFE3   	movff	_prec,plusw1
  8076  013BAC  0EFF               	movlw	-1
  8077  013BAE  0060  F087  FFE3   	movff	_prec+1,plusw1
  8078  013BB4                     l1899:
  8079                           
  8080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8081                           ;stkvar	_w @ sp[(-20)+16]
  8082  013BB4  0EFC               	movlw	-4
  8083  013BB6  0060  F07B  FFE3   	movff	_width,plusw1
  8084  013BBC  0EFD               	movlw	-3
  8085  013BBE  0060  F07F  FFE3   	movff	_width+1,plusw1
  8086                           
  8087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8088  013BC4  A822               	btfss	_flags^0,4,c
  8089  013BC6  D00B               	goto	l9421
  8090                           
  8091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8092                           ;stkvar	_w @ sp[(-20)+16]
  8093  013BC8  50E1               	movf	fsr1l,w,c
  8094  013BCA  0FFC               	addlw	-4
  8095  013BCC  6ED9               	movwf	fsr2l,c
  8096  013BCE  50E2               	movf	fsr1h,w,c
  8097  013BD0  6EDA               	movwf	fsr2h,c
  8098  013BD2  0EFF               	movlw	255
  8099  013BD4  22DA               	addwfc	fsr2h,f,c
  8100  013BD6  0EFE               	movlw	254
  8101  013BD8  26DE               	addwf	postinc2,f,c
  8102  013BDA  0EFF               	movlw	255
  8103  013BDC  22DD               	addwfc	postdec2,f,c
  8104  013BDE                     l9421:
  8105                           
  8106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8107                           ;stkvar	_d @ sp[(-20)+-10]
  8108  013BDE  0EE2               	movlw	226
  8109  013BE0  24E1               	addwf	fsr1l,w,c
  8110  013BE2  6ED9               	movwf	fsr2l,c
  8111  013BE4  0EFF               	movlw	255
  8112  013BE6  20E2               	addwfc	fsr1h,w,c
  8113  013BE8  6EDA               	movwf	fsr2h,c
  8114                           
  8115                           ;stkvar	_n @ sp[(-20)+4]
  8116  013BEA  0E08               	movlw	8
  8117  013BEC  6E35               	movwf	btemp^0,c
  8118  013BEE  0EF0               	movlw	-16
  8119  013BF0                     us941999:
  8120  013BF0  006F FF7B FFE3     	movff	postinc2,plusw1
  8121  013BF6  28E8               	incf	wreg,w,c
  8122  013BF8  2E35               	decfsz	btemp^0,f,c
  8123  013BFA  D7FA               	bra	us941999
  8124                           
  8125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8126  013BFC  0E4F               	movlw	79
  8127  013BFE  6E3F               	movwf	(btemp+10)^0,c
  8128  013C00  0E00               	movlw	0
  8129  013C02  6E40               	movwf	(btemp+11)^0,c
  8130                           
  8131                           ;stkvar	_i @ sp[(-20)+14]
  8132  013C04  0EFA               	movlw	-6
  8133  013C06  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8134  013C0C  0EFB               	movlw	-5
  8135  013C0E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8136                           
  8137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8138  013C14  0101               	movlb	1	; () banked
  8139  013C16  6BFA               	clrf	(_dbuf+79)& (0+255),b
  8140                           
  8141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8142  013C18  D0EE               	goto	l9459
  8143  013C1A                     l9427:
  8144                           
  8145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8146                           ;stkvar	_i @ sp[(-20)+14]
  8147  013C1A  50E1               	movf	fsr1l,w,c
  8148  013C1C  0FFA               	addlw	-6
  8149  013C1E  6ED9               	movwf	fsr2l,c
  8150  013C20  50E2               	movf	fsr1h,w,c
  8151  013C22  6EDA               	movwf	fsr2h,c
  8152  013C24  0EFF               	movlw	255
  8153  013C26  22DA               	addwfc	fsr2h,f,c
  8154  013C28  06DE               	decf	postinc2,f,c
  8155  013C2A  0E00               	movlw	0
  8156  013C2C  5ADD               	subwfb	postdec2,f,c
  8157                           
  8158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8159                           ;stkvar	_n @ sp[(-20)+4]
  8160  013C2E  0EF0               	movlw	-16
  8161  013C30  006F FF8C  F03F    	movff	plusw1,btemp+10
  8162  013C36  0EF1               	movlw	-15
  8163  013C38  006F FF8C  F040    	movff	plusw1,btemp+11
  8164  013C3E  0E0F               	movlw	15
  8165  013C40  163F               	andwf	(btemp+10)^0,f,c
  8166  013C42  0E00               	movlw	0
  8167  013C44  1640               	andwf	(btemp+11)^0,f,c
  8168                           
  8169                           ;stkvar	_c @ sp[(-20)+12]
  8170  013C46  0EF8               	movlw	-8
  8171  013C48  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8172  013C4E  0EF9               	movlw	-7
  8173  013C50  0060  F103  FFE3   	movff	btemp+11,plusw1
  8174                           
  8175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8176                           ;stkvar	_c @ sp[(-20)+12]
  8177  013C56  0EF9               	movlw	-7
  8178  013C58  BEE3               	btfsc	plusw1,7,c
  8179  013C5A  D00F               	goto	l9435
  8180  013C5C  0EF9               	movlw	-7
  8181  013C5E  50E3               	movf	plusw1,w,c
  8182  013C60  E108               	bnz	u9420
  8183  013C62  0EF8               	movlw	-8
  8184  013C64  006F FF8C  F035    	movff	plusw1,btemp
  8185  013C6A  0E0A               	movlw	10
  8186  013C6C  5E35               	subwf	btemp^0,f,c
  8187  013C6E  A0D8               	btfss	status,0,c
  8188  013C70  D004               	goto	l9435
  8189  013C72                     u9420:
  8190                           
  8191                           ;stkvar	_c @ sp[(-20)+12]
  8192  013C72  0EF8               	movlw	-8
  8193  013C74  50E3               	movf	plusw1,w,c
  8194  013C76  0F57               	addlw	87
  8195  013C78  D003               	goto	L6
  8196  013C7A                     l9435:
  8197                           
  8198                           ;stkvar	_c @ sp[(-20)+12]
  8199  013C7A  0EF8               	movlw	-8
  8200  013C7C  50E3               	movf	plusw1,w,c
  8201  013C7E  0F30               	addlw	48
  8202  013C80                     L6:
  8203  013C80  6E3F               	movwf	(btemp+10)^0,c
  8204  013C82  0EF9               	movlw	-7
  8205  013C84  006F FF8C  F040    	movff	plusw1,btemp+11
  8206  013C8A  0E00               	movlw	0
  8207  013C8C  2240               	addwfc	(btemp+11)^0,f,c
  8208                           
  8209                           ;stkvar	_c @ sp[(-20)+12]
  8210  013C8E  0EF8               	movlw	-8
  8211  013C90  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8212  013C96  0EF9               	movlw	-7
  8213  013C98  0060  F103  FFE3   	movff	btemp+11,plusw1
  8214  013C9E  0EBF               	movlw	191
  8215  013CA0  6E3F               	movwf	(btemp+10)^0,c
  8216  013CA2  0EFF               	movlw	255
  8217  013CA4  6E40               	movwf	(btemp+11)^0,c
  8218                           
  8219                           ;stkvar	_x @ sp[(-20)+-11]
  8220  013CA6  0EE1               	movlw	-31
  8221  013CA8  50E3               	movf	plusw1,w,c
  8222  013CAA  6E3D               	movwf	(btemp+8)^0,c
  8223  013CAC  6A3E               	clrf	(btemp+9)^0,c
  8224  013CAE  503F               	movf	(btemp+10)^0,w,c
  8225  013CB0  263D               	addwf	(btemp+8)^0,f,c
  8226  013CB2  5040               	movf	(btemp+11)^0,w,c
  8227  013CB4  223E               	addwfc	(btemp+9)^0,f,c
  8228  013CB6  503E               	movf	(btemp+9)^0,w,c
  8229  013CB8  E106               	bnz	u9430
  8230  013CBA  0E1A               	movlw	26
  8231  013CBC  5C3D               	subwf	(btemp+8)^0,w,c
  8232  013CBE  B0D8               	btfsc	status,0,c
  8233  013CC0  D002               	goto	u9430
  8234  013CC2  0E01               	movlw	1
  8235  013CC4  D001               	goto	u9440
  8236  013CC6                     u9430:
  8237  013CC6  0E00               	movlw	0
  8238  013CC8                     u9440:
  8239  013CC8  6E3F               	movwf	(btemp+10)^0,c
  8240  013CCA  6A40               	clrf	(btemp+11)^0,c
  8241                           
  8242                           ;stkvar	_xtoa$4101 @ sp[(-20)+2]
  8243  013CCC  0EEE               	movlw	-18
  8244  013CCE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8245  013CD4  0EEF               	movlw	-17
  8246  013CD6  0060  F103  FFE3   	movff	btemp+11,plusw1
  8247                           
  8248                           ;stkvar	_xtoa$4101 @ sp[(-20)+2]
  8249  013CDC  0EEE               	movlw	-18
  8250  013CDE  006F FF8C  F035    	movff	plusw1,btemp
  8251  013CE4  0EEF               	movlw	-17
  8252  013CE6  50E3               	movf	plusw1,w,c
  8253  013CE8  1035               	iorwf	btemp^0,w,c
  8254  013CEA  B4D8               	btfsc	status,2,c
  8255  013CEC  D041               	goto	l9451
  8256  013CEE  0E9F               	movlw	159
  8257  013CF0  6E3F               	movwf	(btemp+10)^0,c
  8258  013CF2  0EFF               	movlw	255
  8259  013CF4  6E40               	movwf	(btemp+11)^0,c
  8260                           
  8261                           ;stkvar	_c @ sp[(-20)+12]
  8262  013CF6  0EF8               	movlw	-8
  8263  013CF8  006F FF8C  F03D    	movff	plusw1,btemp+8
  8264  013CFE  0EF9               	movlw	-7
  8265  013D00  006F FF8C  F03E    	movff	plusw1,btemp+9
  8266  013D06  0E20               	movlw	32
  8267  013D08  123D               	iorwf	(btemp+8)^0,f,c
  8268  013D0A  0E00               	movlw	0
  8269  013D0C  123E               	iorwf	(btemp+9)^0,f,c
  8270  013D0E  503F               	movf	(btemp+10)^0,w,c
  8271  013D10  263D               	addwf	(btemp+8)^0,f,c
  8272  013D12  5040               	movf	(btemp+11)^0,w,c
  8273  013D14  223E               	addwfc	(btemp+9)^0,f,c
  8274  013D16  503E               	movf	(btemp+9)^0,w,c
  8275  013D18  E106               	bnz	u9460
  8276  013D1A  0E1A               	movlw	26
  8277  013D1C  5C3D               	subwf	(btemp+8)^0,w,c
  8278  013D1E  B0D8               	btfsc	status,0,c
  8279  013D20  D002               	goto	u9460
  8280  013D22  0E01               	movlw	1
  8281  013D24  D001               	goto	u9470
  8282  013D26                     u9460:
  8283  013D26  0E00               	movlw	0
  8284  013D28                     u9470:
  8285  013D28  6E3F               	movwf	(btemp+10)^0,c
  8286  013D2A  6A40               	clrf	(btemp+11)^0,c
  8287                           
  8288                           ;stkvar	_xtoa$4102 @ sp[(-20)+0]
  8289  013D2C  0EEC               	movlw	-20
  8290  013D2E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8291  013D34  0EED               	movlw	-19
  8292  013D36  0060  F103  FFE3   	movff	btemp+11,plusw1
  8293                           
  8294                           ;stkvar	_xtoa$4102 @ sp[(-20)+0]
  8295  013D3C  0EEC               	movlw	-20
  8296  013D3E  006F FF8C  F035    	movff	plusw1,btemp
  8297  013D44  0EED               	movlw	-19
  8298  013D46  50E3               	movf	plusw1,w,c
  8299  013D48  1035               	iorwf	btemp^0,w,c
  8300  013D4A  B4D8               	btfsc	status,2,c
  8301  013D4C  D011               	goto	l9451
  8302                           
  8303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8304                           ;stkvar	_c @ sp[(-20)+12]
  8305  013D4E  0EF8               	movlw	-8
  8306  013D50  006F FF8F FFE6     	movff	plusw1,postinc1
  8307  013D56  006F FF8F FFE6     	movff	plusw1,postinc1
  8308  013D5C  EC20  F0B8         	call	_toupper	;wreg free
  8309                           
  8310                           ;stkvar	_c @ sp[(-20)+12]
  8311  013D60  0EF8               	movlw	-8
  8312  013D62  0060  F0D7  FFE3   	movff	btemp,plusw1
  8313  013D68  0EF9               	movlw	-7
  8314  013D6A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8315  013D70                     l9451:
  8316                           
  8317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8318                           ;stkvar	_c @ sp[(-20)+12]
  8319                           ;stkvar	_i @ sp[(-20)+14]
  8320  013D70  0EFA               	movlw	-6
  8321  013D72  006F FF8C  F03F    	movff	plusw1,btemp+10
  8322  013D78  0EFB               	movlw	-5
  8323  013D7A  006F FF8C  F040    	movff	plusw1,btemp+11
  8324  013D80  0EAB               	movlw	low _dbuf
  8325  013D82  243F               	addwf	(btemp+10)^0,w,c
  8326  013D84  6ED9               	movwf	fsr2l,c
  8327  013D86  0E01               	movlw	high _dbuf
  8328  013D88  2040               	addwfc	(btemp+11)^0,w,c
  8329  013D8A  6EDA               	movwf	fsr2h,c
  8330  013D8C  0EF8               	movlw	-8
  8331  013D8E  006F FF8F FFDF     	movff	plusw1,indf2
  8332                           
  8333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8334                           ;stkvar	_p @ sp[(-20)+18]
  8335  013D94  50E1               	movf	fsr1l,w,c
  8336  013D96  0FFE               	addlw	-2
  8337  013D98  6ED9               	movwf	fsr2l,c
  8338  013D9A  50E2               	movf	fsr1h,w,c
  8339  013D9C  6EDA               	movwf	fsr2h,c
  8340  013D9E  0EFF               	movlw	255
  8341  013DA0  22DA               	addwfc	fsr2h,f,c
  8342  013DA2  06DE               	decf	postinc2,f,c
  8343  013DA4  0E00               	movlw	0
  8344  013DA6  5ADD               	subwfb	postdec2,f,c
  8345                           
  8346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8347                           ;stkvar	_w @ sp[(-20)+16]
  8348  013DA8  50E1               	movf	fsr1l,w,c
  8349  013DAA  0FFC               	addlw	-4
  8350  013DAC  6ED9               	movwf	fsr2l,c
  8351  013DAE  50E2               	movf	fsr1h,w,c
  8352  013DB0  6EDA               	movwf	fsr2h,c
  8353  013DB2  0EFF               	movlw	255
  8354  013DB4  22DA               	addwfc	fsr2h,f,c
  8355  013DB6  06DE               	decf	postinc2,f,c
  8356  013DB8  0E00               	movlw	0
  8357  013DBA  5ADD               	subwfb	postdec2,f,c
  8358                           
  8359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8360  013DBC  0E04               	movlw	4
  8361  013DBE  6E40               	movwf	(btemp+11)^0,c
  8362                           
  8363                           ;stkvar	_n @ sp[(-20)+4]
  8364  013DC0  50E1               	movf	fsr1l,w,c
  8365  013DC2  0FF0               	addlw	-16
  8366  013DC4  6ED9               	movwf	fsr2l,c
  8367  013DC6  50E2               	movf	fsr1h,w,c
  8368  013DC8  6EDA               	movwf	fsr2h,c
  8369  013DCA  0EFF               	movlw	255
  8370  013DCC  22DA               	addwfc	fsr2h,f,c
  8371  013DCE  2840               	incf	(btemp+11)^0,w,c
  8372  013DD0  52DE               	movf	postinc2,f,c
  8373  013DD2  D00F               	goto	u9490
  8374  013DD4                     u9495:
  8375  013DD4  52DE               	movf	postinc2,f,c
  8376  013DD6  52DE               	movf	postinc2,f,c
  8377  013DD8  52DE               	movf	postinc2,f,c
  8378  013DDA  52DE               	movf	postinc2,f,c
  8379  013DDC  52DE               	movf	postinc2,f,c
  8380  013DDE  52DE               	movf	postinc2,f,c
  8381  013DE0  90D8               	bcf	status,0,c
  8382  013DE2  32DD               	rrcf	postdec2,f,c
  8383  013DE4  32DD               	rrcf	postdec2,f,c
  8384  013DE6  32DD               	rrcf	postdec2,f,c
  8385  013DE8  32DD               	rrcf	postdec2,f,c
  8386  013DEA  32DD               	rrcf	postdec2,f,c
  8387  013DEC  32DD               	rrcf	postdec2,f,c
  8388  013DEE  32DD               	rrcf	postdec2,f,c
  8389  013DF0  32DE               	rrcf	postinc2,f,c
  8390  013DF2                     u9490:
  8391  013DF2  2EE8               	decfsz	wreg,f,c
  8392  013DF4  D7EF               	goto	u9495
  8393  013DF6                     l9459:
  8394                           
  8395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8396                           ;stkvar	_i @ sp[(-20)+14]
  8397  013DF6  0EFB               	movlw	-5
  8398  013DF8  BEE3               	btfsc	plusw1,7,c
  8399  013DFA  D03A               	goto	u9540
  8400  013DFC  0EFB               	movlw	-5
  8401  013DFE  50E3               	movf	plusw1,w,c
  8402  013E00  E108               	bnz	u9500
  8403  013E02  0EFA               	movlw	-6
  8404  013E04  006F FF8C  F035    	movff	plusw1,btemp
  8405  013E0A  0E02               	movlw	2
  8406  013E0C  5E35               	subwf	btemp^0,f,c
  8407  013E0E  A0D8               	btfss	status,0,c
  8408  013E10  D02F               	goto	u9540
  8409  013E12                     u9500:
  8410                           
  8411                           ;stkvar	_n @ sp[(-20)+4]
  8412  013E12  0EF0               	movlw	-16
  8413  013E14  50E3               	movf	plusw1,w,c
  8414  013E16  E115               	bnz	u9511
  8415  013E18  0EF1               	movlw	-15
  8416  013E1A  50E3               	movf	plusw1,w,c
  8417  013E1C  E112               	bnz	u9511
  8418  013E1E  0EF2               	movlw	-14
  8419  013E20  50E3               	movf	plusw1,w,c
  8420  013E22  E10F               	bnz	u9511
  8421  013E24  0EF3               	movlw	-13
  8422  013E26  50E3               	movf	plusw1,w,c
  8423  013E28  E10C               	bnz	u9511
  8424  013E2A  0EF4               	movlw	-12
  8425  013E2C  50E3               	movf	plusw1,w,c
  8426  013E2E  E109               	bnz	u9511
  8427  013E30  0EF5               	movlw	-11
  8428  013E32  50E3               	movf	plusw1,w,c
  8429  013E34  E106               	bnz	u9511
  8430  013E36  0EF6               	movlw	-10
  8431  013E38  50E3               	movf	plusw1,w,c
  8432  013E3A  E103               	bnz	u9511
  8433  013E3C  0EF7               	movlw	-9
  8434  013E3E  50E3               	movf	plusw1,w,c
  8435  013E40  A4D8               	btfss	status,2,c
  8436  013E42                     u9511:
  8437  013E42  D6EB               	goto	l9427
  8438                           
  8439                           ;stkvar	_p @ sp[(-20)+18]
  8440  013E44  0EFF               	movlw	-1
  8441  013E46  BEE3               	btfsc	plusw1,7,c
  8442  013E48  D007               	goto	u9520
  8443  013E4A  0EFF               	movlw	-1
  8444  013E4C  50E3               	movf	plusw1,w,c
  8445  013E4E  E103               	bnz	u9521
  8446  013E50  0EFE               	movlw	-2
  8447  013E52  04E3               	decf	plusw1,w,c
  8448  013E54  B0D8               	btfsc	status,0,c
  8449  013E56                     u9521:
  8450  013E56  D6E1               	goto	l9427
  8451  013E58                     u9520:
  8452                           
  8453                           ;stkvar	_w @ sp[(-20)+16]
  8454  013E58  0EFD               	movlw	-3
  8455  013E5A  BEE3               	btfsc	plusw1,7,c
  8456  013E5C  D009               	goto	u9540
  8457  013E5E  0EFD               	movlw	-3
  8458  013E60  50E3               	movf	plusw1,w,c
  8459  013E62  E104               	bnz	u9530
  8460  013E64  0EFC               	movlw	-4
  8461  013E66  04E3               	decf	plusw1,w,c
  8462  013E68  A0D8               	btfss	status,0,c
  8463  013E6A  D002               	goto	u9540
  8464  013E6C                     u9530:
  8465  013E6C  B222               	btfsc	_flags^0,1,c
  8466  013E6E  D6D5               	goto	l9427
  8467  013E70                     u9540:
  8468                           
  8469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8470  013E70  A822               	btfss	_flags^0,4,c
  8471  013E72  D036               	goto	l9475
  8472                           
  8473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8474                           ;stkvar	_i @ sp[(-20)+14]
  8475  013E74  50E1               	movf	fsr1l,w,c
  8476  013E76  0FFA               	addlw	-6
  8477  013E78  6ED9               	movwf	fsr2l,c
  8478  013E7A  50E2               	movf	fsr1h,w,c
  8479  013E7C  6EDA               	movwf	fsr2h,c
  8480  013E7E  0EFF               	movlw	255
  8481  013E80  22DA               	addwfc	fsr2h,f,c
  8482  013E82  06DE               	decf	postinc2,f,c
  8483  013E84  0E00               	movlw	0
  8484  013E86  5ADD               	subwfb	postdec2,f,c
  8485                           
  8486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8487                           ;stkvar	_x @ sp[(-20)+-11]
  8488                           ;stkvar	_i @ sp[(-20)+14]
  8489  013E88  0EFA               	movlw	-6
  8490  013E8A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8491  013E90  0EFB               	movlw	-5
  8492  013E92  006F FF8C  F040    	movff	plusw1,btemp+11
  8493  013E98  0EAB               	movlw	low _dbuf
  8494  013E9A  243F               	addwf	(btemp+10)^0,w,c
  8495  013E9C  6ED9               	movwf	fsr2l,c
  8496  013E9E  0E01               	movlw	high _dbuf
  8497  013EA0  2040               	addwfc	(btemp+11)^0,w,c
  8498  013EA2  6EDA               	movwf	fsr2h,c
  8499  013EA4  0EE1               	movlw	-31
  8500  013EA6  006F FF8F FFDF     	movff	plusw1,indf2
  8501                           
  8502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8503                           ;stkvar	_i @ sp[(-20)+14]
  8504  013EAC  50E1               	movf	fsr1l,w,c
  8505  013EAE  0FFA               	addlw	-6
  8506  013EB0  6ED9               	movwf	fsr2l,c
  8507  013EB2  50E2               	movf	fsr1h,w,c
  8508  013EB4  6EDA               	movwf	fsr2h,c
  8509  013EB6  0EFF               	movlw	255
  8510  013EB8  22DA               	addwfc	fsr2h,f,c
  8511  013EBA  06DE               	decf	postinc2,f,c
  8512  013EBC  0E00               	movlw	0
  8513  013EBE  5ADD               	subwfb	postdec2,f,c
  8514                           
  8515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8516                           ;stkvar	_i @ sp[(-20)+14]
  8517  013EC0  0EFA               	movlw	-6
  8518  013EC2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8519  013EC8  0EFB               	movlw	-5
  8520  013ECA  006F FF8C  F040    	movff	plusw1,btemp+11
  8521  013ED0  0EAB               	movlw	low _dbuf
  8522  013ED2  243F               	addwf	(btemp+10)^0,w,c
  8523  013ED4  6ED9               	movwf	fsr2l,c
  8524  013ED6  0E01               	movlw	high _dbuf
  8525  013ED8  2040               	addwfc	(btemp+11)^0,w,c
  8526  013EDA  6EDA               	movwf	fsr2h,c
  8527  013EDC  0E30               	movlw	48
  8528  013EDE  6EDF               	movwf	indf2,c
  8529  013EE0                     l9475:
  8530                           
  8531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8532                           ;stkvar	_w @ sp[(-20)+16]
  8533  013EE0  0EFC               	movlw	-4
  8534  013EE2  006F FF8F FFE6     	movff	plusw1,postinc1
  8535  013EE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8536                           
  8537                           ;stkvar	_i @ sp[(-22)+14]
  8538  013EEE  0EAB               	movlw	low _dbuf
  8539  013EF0  6E3F               	movwf	(btemp+10)^0,c
  8540  013EF2  0E01               	movlw	high _dbuf
  8541  013EF4  6E40               	movwf	(btemp+11)^0,c
  8542  013EF6  0EF8               	movlw	-8
  8543  013EF8  50E3               	movf	plusw1,w,c
  8544  013EFA  263F               	addwf	(btemp+10)^0,f,c
  8545  013EFC  0EF9               	movlw	-7
  8546  013EFE  50E3               	movf	plusw1,w,c
  8547  013F00  2240               	addwfc	(btemp+11)^0,f,c
  8548  013F02  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8549  013F08  0060  F103  FFE6   	movff	btemp+11,postinc1
  8550                           
  8551                           ;stkvar	_fp @ sp[(-24)+-2]
  8552  013F0E  0EE6               	movlw	-26
  8553  013F10  006F FF8F FFE6     	movff	plusw1,postinc1
  8554  013F16  006F FF8F FFE6     	movff	plusw1,postinc1
  8555  013F1C  ECD7  F0B1         	call	_pad	;wreg free
  8556                           
  8557                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8558  013F20  0EE1               	movlw	225
  8559  013F22  26E1               	addwf	fsr1l,f,c
  8560  013F24  0EFF               	movlw	255
  8561  013F26  22E2               	addwfc	fsr1h,f,c
  8562  013F28  0012               	return		;funcret
  8563  013F2A                     __end_of_xtoa:
  8564                           	opt callstack 0
  8565                           
  8566 ;; *************** function _toupper *****************
  8567 ;; Defined at:
  8568 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  c               2  [STACK] int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  2  [STACK] int 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/1
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    7
  8589 ;; This function calls:
  8590 ;;		_islower
  8591 ;; This function is called by:
  8592 ;;		_xtoa
  8593 ;; This function uses a reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text36
  8597  017040                     __ptext36:
  8598                           	opt callstack 0
  8599  017040                     _toupper:
  8600                           	opt callstack 0
  8601                           
  8602                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8603  017040  52E6               	movf	postinc1,f,c
  8604  017042  52E6               	movf	postinc1,f,c
  8605                           
  8606                           ;stkvar	_c @ sp[(-2)+-2]
  8607                           
  8608                           ;incstack = 0
  8609  017044  0EFC               	movlw	-4
  8610  017046  50E3               	movf	plusw1,w,c
  8611  017048  0F9F               	addlw	159
  8612  01704A  6E3F               	movwf	(btemp+10)^0,c
  8613  01704C  0EFD               	movlw	-3
  8614  01704E  006F FF8C  F040    	movff	plusw1,btemp+11
  8615  017054  0EFF               	movlw	255
  8616  017056  2240               	addwfc	(btemp+11)^0,f,c
  8617  017058  5040               	movf	(btemp+11)^0,w,c
  8618  01705A  E106               	bnz	u5100
  8619  01705C  0E1A               	movlw	26
  8620  01705E  5C3F               	subwf	(btemp+10)^0,w,c
  8621  017060  B0D8               	btfsc	status,0,c
  8622  017062  D002               	goto	u5100
  8623  017064  0E01               	movlw	1
  8624  017066  D001               	goto	u5110
  8625  017068                     u5100:
  8626  017068  0E00               	movlw	0
  8627  01706A                     u5110:
  8628  01706A  6E3F               	movwf	(btemp+10)^0,c
  8629  01706C  6A40               	clrf	(btemp+11)^0,c
  8630                           
  8631                           ;stkvar	_toupper$4762 @ sp[(-2)+0]
  8632  01706E  0EFE               	movlw	-2
  8633  017070  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8634  017076  0EFF               	movlw	-1
  8635  017078  0060  F103  FFE3   	movff	btemp+11,plusw1
  8636                           
  8637                           ;stkvar	_toupper$4762 @ sp[(-2)+0]
  8638  01707E  0EFE               	movlw	-2
  8639  017080  006F FF8C  F035    	movff	plusw1,btemp
  8640  017086  0EFF               	movlw	-1
  8641  017088  50E3               	movf	plusw1,w,c
  8642  01708A  1035               	iorwf	btemp^0,w,c
  8643  01708C  B4D8               	btfsc	status,2,c
  8644  01708E  D00D               	goto	l6299
  8645                           
  8646                           ;stkvar	_c @ sp[(-2)+-2]
  8647  017090  0EFC               	movlw	-4
  8648  017092  006F FF8C  F035    	movff	plusw1,btemp
  8649  017098  0EFD               	movlw	-3
  8650  01709A  006F FF8C  F036    	movff	plusw1,btemp+1
  8651  0170A0  0E5F               	movlw	95
  8652  0170A2  1635               	andwf	btemp^0,f,c
  8653  0170A4  0E00               	movlw	0
  8654  0170A6  1636               	andwf	(btemp+1)^0,f,c
  8655  0170A8  D008               	goto	l2832
  8656  0170AA                     l6299:
  8657                           
  8658                           ;stkvar	_c @ sp[(-2)+-2]
  8659  0170AA  0EFC               	movlw	-4
  8660  0170AC  006F FF8C  F035    	movff	plusw1,btemp
  8661  0170B2  0EFD               	movlw	-3
  8662  0170B4  006F FF8C  F036    	movff	plusw1,btemp+1
  8663  0170BA                     l2832:
  8664                           
  8665                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8666  0170BA  52E5               	movf	postdec1,f,c
  8667  0170BC  52E5               	movf	postdec1,f,c
  8668  0170BE  52E5               	movf	postdec1,f,c
  8669  0170C0  52E5               	movf	postdec1,f,c
  8670  0170C2  0012               	return		;funcret
  8671  0170C4                     __end_of_toupper:
  8672                           	opt callstack 0
  8673                           
  8674 ;; *************** function _islower *****************
  8675 ;; Defined at:
  8676 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  c               2  [STACK] int 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  2  [STACK] int 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    6
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_toupper
  8701 ;; This function uses a reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text37
  8705  017B30                     __ptext37:
  8706                           	opt callstack 0
  8707  017B30                     _islower:
  8708                           	opt callstack 16
  8709                           
  8710                           ;stkvar	_c @ sp[(0)+-2]
  8711                           
  8712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8713                           ;incstack = 0
  8714  017B30  0EFE               	movlw	-2
  8715  017B32  50E3               	movf	plusw1,w,c
  8716  017B34  0F9F               	addlw	159
  8717  017B36  6E3F               	movwf	(btemp+10)^0,c
  8718  017B38  0EFF               	movlw	-1
  8719  017B3A  006F FF8C  F040    	movff	plusw1,btemp+11
  8720  017B40  0EFF               	movlw	255
  8721  017B42  2240               	addwfc	(btemp+11)^0,f,c
  8722  017B44  5040               	movf	(btemp+11)^0,w,c
  8723  017B46  E106               	bnz	u4790
  8724  017B48  0E1A               	movlw	26
  8725  017B4A  5C3F               	subwf	(btemp+10)^0,w,c
  8726  017B4C  B0D8               	btfsc	status,0,c
  8727  017B4E  D002               	goto	u4790
  8728  017B50  0E01               	movlw	1
  8729  017B52  D001               	goto	u4800
  8730  017B54                     u4790:
  8731  017B54  0E00               	movlw	0
  8732  017B56                     u4800:
  8733  017B56  6E35               	movwf	btemp^0,c
  8734  017B58  6A36               	clrf	(btemp+1)^0,c
  8735                           
  8736                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8737  017B5A  52E5               	movf	postdec1,f,c
  8738  017B5C  52E5               	movf	postdec1,f,c
  8739  017B5E  0012               	return		;funcret
  8740  017B60                     __end_of_islower:
  8741                           	opt callstack 0
  8742                           
  8743 ;; *************** function _isalpha *****************
  8744 ;; Defined at:
  8745 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  c               2  [STACK] int 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  2  [STACK] int 
  8752 ;; Registers used:
  8753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;Total ram usage:        0 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    6
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_xtoa
  8770 ;; This function uses a reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text38
  8774  0178A6                     __ptext38:
  8775                           	opt callstack 0
  8776  0178A6                     _isalpha:
  8777                           	opt callstack 17
  8778                           
  8779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8780                           ;incstack = 0
  8781  0178A6  0E9F               	movlw	159
  8782  0178A8  6E3F               	movwf	(btemp+10)^0,c
  8783  0178AA  0EFF               	movlw	255
  8784  0178AC  6E40               	movwf	(btemp+11)^0,c
  8785                           
  8786                           ;stkvar	_c @ sp[(0)+-2]
  8787  0178AE  0EFE               	movlw	-2
  8788  0178B0  006F FF8C  F03D    	movff	plusw1,btemp+8
  8789  0178B6  0EFF               	movlw	-1
  8790  0178B8  006F FF8C  F03E    	movff	plusw1,btemp+9
  8791  0178BE  0E20               	movlw	32
  8792  0178C0  123D               	iorwf	(btemp+8)^0,f,c
  8793  0178C2  0E00               	movlw	0
  8794  0178C4  123E               	iorwf	(btemp+9)^0,f,c
  8795  0178C6  503F               	movf	(btemp+10)^0,w,c
  8796  0178C8  263D               	addwf	(btemp+8)^0,f,c
  8797  0178CA  5040               	movf	(btemp+11)^0,w,c
  8798  0178CC  223E               	addwfc	(btemp+9)^0,f,c
  8799  0178CE  503E               	movf	(btemp+9)^0,w,c
  8800  0178D0  E106               	bnz	u5080
  8801  0178D2  0E1A               	movlw	26
  8802  0178D4  5C3D               	subwf	(btemp+8)^0,w,c
  8803  0178D6  B0D8               	btfsc	status,0,c
  8804  0178D8  D002               	goto	u5080
  8805  0178DA  0E01               	movlw	1
  8806  0178DC  D001               	goto	u5090
  8807  0178DE                     u5080:
  8808  0178DE  0E00               	movlw	0
  8809  0178E0                     u5090:
  8810  0178E0  6E35               	movwf	btemp^0,c
  8811  0178E2  6A36               	clrf	(btemp+1)^0,c
  8812                           
  8813                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8814  0178E4  52E5               	movf	postdec1,f,c
  8815  0178E6  52E5               	movf	postdec1,f,c
  8816  0178E8  0012               	return		;funcret
  8817  0178EA                     __end_of_isalpha:
  8818                           	opt callstack 0
  8819                           
  8820 ;; *************** function _strncmp *****************
  8821 ;; Defined at:
  8822 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  _l              2  [STACK] PTR const unsigned char 
  8825 ;;		 -> ct(3), 
  8826 ;;  _r              2  [STACK] PTR const unsigned char 
  8827 ;;		 -> STR_43(3), 
  8828 ;;  n               2  [STACK] unsigned int 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  r               2  [STACK] PTR const unsigned char 
  8831 ;;		 -> STR_43(3), 
  8832 ;;  l               2  [STACK] PTR const unsigned char 
  8833 ;;		 -> ct(3), 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  2  [STACK] int 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/4
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8847 ;;Total ram usage:        0 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    6
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_vfpfcnvrt
  8854 ;; This function uses a reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text39
  8858  015704                     __ptext39:
  8859                           	opt callstack 0
  8860  015704                     _strncmp:
  8861                           	opt callstack 0
  8862                           
  8863                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8864  015704  52E6               	movf	postinc1,f,c
  8865  015706  52E6               	movf	postinc1,f,c
  8866  015708  52E6               	movf	postinc1,f,c
  8867  01570A  52E6               	movf	postinc1,f,c
  8868                           
  8869                           ;stkvar	__l @ sp[(-4)+-2]
  8870                           
  8871                           ;incstack = 0
  8872  01570C  0EFA               	movlw	-6
  8873  01570E  006F FF8C  F03F    	movff	plusw1,btemp+10
  8874  015714  0EFB               	movlw	-5
  8875  015716  006F FF8C  F040    	movff	plusw1,btemp+11
  8876                           
  8877                           ;stkvar	_l @ sp[(-4)+2]
  8878  01571C  0EFF               	movlw	-1
  8879  01571E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8880  015724  0EFE               	movlw	-2
  8881  015726  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8882                           
  8883                           ;stkvar	__r @ sp[(-4)+-4]
  8884  01572C  0EF8               	movlw	-8
  8885  01572E  006F FF8C  F03F    	movff	plusw1,btemp+10
  8886  015734  0EF9               	movlw	-7
  8887  015736  006F FF8C  F040    	movff	plusw1,btemp+11
  8888                           
  8889                           ;stkvar	_r @ sp[(-4)+0]
  8890  01573C  0EFD               	movlw	-3
  8891  01573E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8892  015744  0EFC               	movlw	-4
  8893  015746  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8894                           
  8895                           ;stkvar	_n @ sp[(-4)+-6]
  8896  01574C  0EF6               	movlw	-10
  8897  01574E  006F FF8C  F035    	movff	plusw1,btemp
  8898  015754  0E01               	movlw	1
  8899  015756  5E35               	subwf	btemp^0,f,c
  8900  015758  0EF6               	movlw	-10
  8901  01575A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8902  015760  0EF7               	movlw	-9
  8903  015762  006F FF8C  F035    	movff	plusw1,btemp
  8904  015768  0E00               	movlw	0
  8905  01576A  5A35               	subwfb	btemp^0,f,c
  8906  01576C  0EF7               	movlw	-9
  8907  01576E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8908  015774  0EF6               	movlw	-10
  8909  015776  28E3               	incf	plusw1,w,c
  8910  015778  E13F               	bnz	l7457
  8911  01577A  0EF7               	movlw	-9
  8912  01577C  28E3               	incf	plusw1,w,c
  8913  01577E  A4D8               	btfss	status,2,c
  8914  015780  D03B               	goto	l7457
  8915  015782  0E00               	movlw	0
  8916  015784  6E35               	movwf	btemp^0,c
  8917  015786  0E00               	movlw	0
  8918  015788  6E36               	movwf	(btemp+1)^0,c
  8919  01578A  D09B               	goto	l2804
  8920  01578C                     l7455:
  8921                           
  8922                           ;stkvar	_l @ sp[(-4)+2]
  8923  01578C  0EFE               	movlw	-2
  8924  01578E  50E3               	movf	plusw1,w,c
  8925  015790  0F01               	addlw	1
  8926  015792  6E35               	movwf	btemp^0,c
  8927  015794  0EFE               	movlw	-2
  8928  015796  0060  F0D7  FFE3   	movff	btemp,plusw1
  8929  01579C  6A35               	clrf	btemp^0,c
  8930  01579E  0EFF               	movlw	-1
  8931  0157A0  50E3               	movf	plusw1,w,c
  8932  0157A2  2035               	addwfc	btemp^0,w,c
  8933  0157A4  6E35               	movwf	btemp^0,c
  8934  0157A6  0EFF               	movlw	-1
  8935  0157A8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8936                           
  8937                           ;stkvar	_r @ sp[(-4)+0]
  8938  0157AE  0EFC               	movlw	-4
  8939  0157B0  50E3               	movf	plusw1,w,c
  8940  0157B2  0F01               	addlw	1
  8941  0157B4  6E35               	movwf	btemp^0,c
  8942  0157B6  0EFC               	movlw	-4
  8943  0157B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8944  0157BE  6A35               	clrf	btemp^0,c
  8945  0157C0  0EFD               	movlw	-3
  8946  0157C2  50E3               	movf	plusw1,w,c
  8947  0157C4  2035               	addwfc	btemp^0,w,c
  8948  0157C6  6E35               	movwf	btemp^0,c
  8949  0157C8  0EFD               	movlw	-3
  8950  0157CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8951                           
  8952                           ;stkvar	_n @ sp[(-4)+-6]
  8953  0157D0  0EF6               	movlw	-10
  8954  0157D2  006F FF8C  F035    	movff	plusw1,btemp
  8955  0157D8  0E01               	movlw	1
  8956  0157DA  5E35               	subwf	btemp^0,f,c
  8957  0157DC  0EF6               	movlw	-10
  8958  0157DE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8959  0157E4  0EF7               	movlw	-9
  8960  0157E6  006F FF8C  F035    	movff	plusw1,btemp
  8961  0157EC  0E00               	movlw	0
  8962  0157EE  5A35               	subwfb	btemp^0,f,c
  8963  0157F0  0EF7               	movlw	-9
  8964  0157F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8965  0157F8                     l7457:
  8966                           
  8967                           ;stkvar	_l @ sp[(-4)+2]
  8968  0157F8  0EFE               	movlw	-2
  8969  0157FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8970  015800  0EFF               	movlw	-1
  8971  015802  006F FF8F FFDA     	movff	plusw1,fsr2h
  8972  015808  50DF               	movf	indf2,w,c
  8973  01580A  B4D8               	btfsc	status,2,c
  8974  01580C  D03B               	goto	u7280
  8975                           
  8976                           ;stkvar	_r @ sp[(-4)+0]
  8977  01580E  50E1               	movf	fsr1l,w,c
  8978  015810  0FFC               	addlw	-4
  8979  015812  6ED9               	movwf	fsr2l,c
  8980  015814  50E2               	movf	fsr1h,w,c
  8981  015816  6EDA               	movwf	fsr2h,c
  8982  015818  0EFF               	movlw	255
  8983  01581A  22DA               	addwfc	fsr2h,f,c
  8984  01581C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8985  015822  006F FF77 FFF7     	movff	postdec2,tblptrh
  8986  015828                     	if	0	;tblptru may be non-zero
  8987  015828                     	endif
  8988  015828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8989  015828  0E00               	movlw	low (__mediumconst shr (0+16))
  8990  01582A  6EF8               	movwf	tblptru,c
  8991  01582C                     	endif
  8992  01582C  0008               	tblrd		*
  8993  01582E  50F5               	movf	tablat,w,c
  8994  015830  0900               	iorlw	0
  8995  015832  B4D8               	btfsc	status,2,c
  8996  015834  D027               	goto	u7280
  8997                           
  8998                           ;stkvar	_n @ sp[(-4)+-6]
  8999  015836  0EF6               	movlw	-10
  9000  015838  006F FF8C  F035    	movff	plusw1,btemp
  9001  01583E  0EF7               	movlw	-9
  9002  015840  50E3               	movf	plusw1,w,c
  9003  015842  1035               	iorwf	btemp^0,w,c
  9004  015844  B4D8               	btfsc	status,2,c
  9005  015846  D01E               	goto	u7280
  9006                           
  9007                           ;stkvar	_l @ sp[(-4)+2]
  9008  015848  0EFE               	movlw	-2
  9009  01584A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9010  015850  0EFF               	movlw	-1
  9011  015852  006F FF8F FFDA     	movff	plusw1,fsr2h
  9012  015858  50DF               	movf	indf2,w,c
  9013  01585A  6E40               	movwf	(btemp+11)^0,c
  9014                           
  9015                           ;stkvar	_r @ sp[(-4)+0]
  9016  01585C  50E1               	movf	fsr1l,w,c
  9017  01585E  0FFC               	addlw	-4
  9018  015860  6ED9               	movwf	fsr2l,c
  9019  015862  50E2               	movf	fsr1h,w,c
  9020  015864  6EDA               	movwf	fsr2h,c
  9021  015866  0EFF               	movlw	255
  9022  015868  22DA               	addwfc	fsr2h,f,c
  9023  01586A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9024  015870  006F FF77 FFF7     	movff	postdec2,tblptrh
  9025  015876                     	if	0	;tblptru may be non-zero
  9026  015876                     	endif
  9027  015876                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9028  015876  0E00               	movlw	low (__mediumconst shr (0+16))
  9029  015878  6EF8               	movwf	tblptru,c
  9030  01587A                     	endif
  9031  01587A  0008               	tblrd		*
  9032  01587C  50F5               	movf	tablat,w,c
  9033  01587E  1840               	xorwf	(btemp+11)^0,w,c
  9034  015880  B4D8               	btfsc	status,2,c
  9035  015882  D784               	goto	l7455
  9036  015884                     u7280:
  9037                           
  9038                           ;stkvar	_l @ sp[(-4)+2]
  9039  015884  0EFE               	movlw	-2
  9040  015886  006F FF8F FFD9     	movff	plusw1,fsr2l
  9041  01588C  0EFF               	movlw	-1
  9042  01588E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9043  015894  50DF               	movf	indf2,w,c
  9044  015896  6E35               	movwf	btemp^0,c
  9045  015898  6A36               	clrf	(btemp+1)^0,c
  9046                           
  9047                           ;stkvar	_r @ sp[(-4)+0]
  9048  01589A  50E1               	movf	fsr1l,w,c
  9049  01589C  0FFC               	addlw	-4
  9050  01589E  6ED9               	movwf	fsr2l,c
  9051  0158A0  50E2               	movf	fsr1h,w,c
  9052  0158A2  6EDA               	movwf	fsr2h,c
  9053  0158A4  0EFF               	movlw	255
  9054  0158A6  22DA               	addwfc	fsr2h,f,c
  9055  0158A8  006F FF7B FFF6     	movff	postinc2,tblptrl
  9056  0158AE  006F FF77 FFF7     	movff	postdec2,tblptrh
  9057  0158B4                     	if	0	;tblptru may be non-zero
  9058  0158B4                     	endif
  9059  0158B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9060  0158B4  0E00               	movlw	low (__mediumconst shr (0+16))
  9061  0158B6  6EF8               	movwf	tblptru,c
  9062  0158B8                     	endif
  9063  0158B8  0008               	tblrd		*
  9064  0158BA  50F5               	movf	tablat,w,c
  9065  0158BC  5E35               	subwf	btemp^0,f,c
  9066  0158BE  0E00               	movlw	0
  9067  0158C0  5A36               	subwfb	(btemp+1)^0,f,c
  9068  0158C2                     l2804:
  9069                           
  9070                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9071  0158C2  0EF6               	movlw	246
  9072  0158C4  26E1               	addwf	fsr1l,f,c
  9073  0158C6  0EFF               	movlw	255
  9074  0158C8  22E2               	addwfc	fsr1h,f,c
  9075  0158CA  0012               	return		;funcret
  9076  0158CC                     __end_of_strncmp:
  9077                           	opt callstack 0
  9078                           
  9079 ;; *************** function _stoa *****************
  9080 ;; Defined at:
  9081 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9084 ;;		 -> f(6), NULL(0), 
  9085 ;;  s               2  [STACK] PTR unsigned char 
  9086 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  9087 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  9088 ;;		 -> STR_3(4), V(171), 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;  nuls            7  [STACK] unsigned char [7]
  9091 ;;  l               2  [STACK] int 
  9092 ;;  p               2  [STACK] int 
  9093 ;;  cp              2  [STACK] PTR unsigned char 
  9094 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  9095 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  9096 ;;		 -> STR_7(4), STR_3(4), V(171), 
  9097 ;;  w               2  [STACK] int 
  9098 ;;  i               2  [STACK] int 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  2  [STACK] int 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/4
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;Total ram usage:        0 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    9
  9115 ;; This function calls:
  9116 ;;		_fputc
  9117 ;;		_strlen
  9118 ;; This function is called by:
  9119 ;;		_vfpfcnvrt
  9120 ;; This function uses a reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text40
  9124  0148FC                     __ptext40:
  9125                           	opt callstack 0
  9126  0148FC                     _stoa:
  9127                           	opt callstack 0
  9128                           
  9129                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9130  0148FC  0E11               	movlw	17
  9131  0148FE  26E1               	addwf	fsr1l,f,c
  9132  014900  0E00               	movlw	0
  9133  014902  22E2               	addwfc	fsr1h,f,c
  9134                           
  9135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9136                           
  9137                           ;incstack = 0
  9138  014904  EE20  F08C         	lfsr	2,stoa@F1166
  9139                           
  9140                           ;stkvar	_nuls @ sp[(-17)+0]
  9141  014908  0E07               	movlw	7
  9142  01490A  6E35               	movwf	btemp^0,c
  9143  01490C  0EEF               	movlw	-17
  9144  01490E                     us928999:
  9145  01490E  006F FF7B FFE3     	movff	postinc2,plusw1
  9146  014914  28E8               	incf	wreg,w,c
  9147  014916  2E35               	decfsz	btemp^0,f,c
  9148  014918  D7FA               	bra	us928999
  9149                           
  9150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9151                           ;stkvar	_s @ sp[(-17)+-4]
  9152  01491A  0EEB               	movlw	-21
  9153  01491C  006F FF8C  F03F    	movff	plusw1,btemp+10
  9154  014922  0EEC               	movlw	-20
  9155  014924  006F FF8C  F040    	movff	plusw1,btemp+11
  9156                           
  9157                           ;stkvar	_cp @ sp[(-17)+11]
  9158  01492A  0EFB               	movlw	-5
  9159  01492C  0060  F103  FFE3   	movff	btemp+11,plusw1
  9160  014932  0EFA               	movlw	-6
  9161  014934  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9162                           
  9163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9164                           ;stkvar	_cp @ sp[(-17)+11]
  9165  01493A  0EFA               	movlw	-6
  9166  01493C  006F FF8C  F035    	movff	plusw1,btemp
  9167  014942  0EFB               	movlw	-5
  9168  014944  50E3               	movf	plusw1,w,c
  9169  014946  1035               	iorwf	btemp^0,w,c
  9170  014948  A4D8               	btfss	status,2,c
  9171  01494A  D00E               	goto	l9363
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9174                           ;stkvar	_nuls @ sp[(-17)+0]
  9175  01494C  0EEF               	movlw	239
  9176  01494E  24E1               	addwf	fsr1l,w,c
  9177  014950  6E3F               	movwf	(btemp+10)^0,c
  9178  014952  0EFF               	movlw	255
  9179  014954  20E2               	addwfc	fsr1h,w,c
  9180  014956  6E40               	movwf	(btemp+11)^0,c
  9181                           
  9182                           ;stkvar	_cp @ sp[(-17)+11]
  9183  014958  0EFB               	movlw	-5
  9184  01495A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9185  014960  0EFA               	movlw	-6
  9186  014962  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9187  014968                     l9363:
  9188                           
  9189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9190                           ;stkvar	_cp @ sp[(-17)+11]
  9191  014968  0EFA               	movlw	-6
  9192  01496A  006F FF8F FFE6     	movff	plusw1,postinc1
  9193  014970  006F FF8F FFE6     	movff	plusw1,postinc1
  9194  014976  EC63  F0B6         	call	_strlen	;wreg free
  9195                           
  9196                           ;stkvar	_l @ sp[(-17)+7]
  9197  01497A  0EF6               	movlw	-10
  9198  01497C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9199  014982  0EF7               	movlw	-9
  9200  014984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9201                           
  9202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9203                           ;stkvar	_p @ sp[(-17)+9]
  9204  01498A  0EF8               	movlw	-8
  9205  01498C  0060  F083  FFE3   	movff	_prec,plusw1
  9206  014992  0EF9               	movlw	-7
  9207  014994  0060  F087  FFE3   	movff	_prec+1,plusw1
  9208                           
  9209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9210                           ;stkvar	_p @ sp[(-17)+9]
  9211  01499A  0EF9               	movlw	-7
  9212  01499C  BEE3               	btfsc	plusw1,7,c
  9213  01499E  D023               	goto	l1878
  9214                           
  9215                           ;stkvar	_l @ sp[(-17)+7]
  9216                           ;stkvar	_p @ sp[(-17)+9]
  9217  0149A0  50E1               	movf	fsr1l,w,c
  9218  0149A2  0FF8               	addlw	-8
  9219  0149A4  6ED9               	movwf	fsr2l,c
  9220  0149A6  50E2               	movf	fsr1h,w,c
  9221  0149A8  6EDA               	movwf	fsr2h,c
  9222  0149AA  0EFF               	movlw	255
  9223  0149AC  22DA               	addwfc	fsr2h,f,c
  9224  0149AE  0EF6               	movlw	-10
  9225  0149B0  50E3               	movf	plusw1,w,c
  9226  0149B2  5CDE               	subwf	postinc2,w,c
  9227  0149B4  50DE               	movf	postinc2,w,c
  9228  0149B6  0A80               	xorlw	128
  9229  0149B8  6E35               	movwf	btemp^0,c
  9230  0149BA  0EF7               	movlw	-9
  9231  0149BC  50E3               	movf	plusw1,w,c
  9232  0149BE  0A80               	xorlw	128
  9233  0149C0  5835               	subwfb	btemp^0,w,c
  9234  0149C2  B0D8               	btfsc	status,0,c
  9235  0149C4  D010               	goto	l1878
  9236                           
  9237                           ;stkvar	_p @ sp[(-17)+9]
  9238                           ;stkvar	_l @ sp[(-17)+7]
  9239  0149C6  0EF8               	movlw	-8
  9240  0149C8  006F FF8C  F035    	movff	plusw1,btemp
  9241  0149CE  0EF6               	movlw	-10
  9242  0149D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9243  0149D6  0EF9               	movlw	-7
  9244  0149D8  006F FF8C  F035    	movff	plusw1,btemp
  9245  0149DE  0EF7               	movlw	-9
  9246  0149E0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9247  0149E6                     l1878:
  9248                           
  9249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9250                           ;stkvar	_l @ sp[(-17)+7]
  9251                           ;stkvar	_p @ sp[(-17)+9]
  9252  0149E6  0EF6               	movlw	-10
  9253  0149E8  006F FF8C  F035    	movff	plusw1,btemp
  9254  0149EE  0EF8               	movlw	-8
  9255  0149F0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9256  0149F6  0EF7               	movlw	-9
  9257  0149F8  006F FF8C  F035    	movff	plusw1,btemp
  9258  0149FE  0EF9               	movlw	-7
  9259  014A00  0060  F0D7  FFE3   	movff	btemp,plusw1
  9260                           
  9261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9262                           ;stkvar	_w @ sp[(-17)+13]
  9263  014A06  0EFC               	movlw	-4
  9264  014A08  0060  F07B  FFE3   	movff	_width,plusw1
  9265  014A0E  0EFD               	movlw	-3
  9266  014A10  0060  F07F  FFE3   	movff	_width+1,plusw1
  9267                           
  9268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9269  014A16  A022               	btfss	_flags^0,0,c
  9270  014A18  D01F               	goto	l9383
  9271  014A1A  D031               	goto	u9330
  9272  014A1C                     l9379:
  9273                           
  9274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9275                           ;stkvar	_fp @ sp[(-17)+-2]
  9276  014A1C  0EED               	movlw	-19
  9277  014A1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9278  014A24  006F FF8F FFE6     	movff	plusw1,postinc1
  9279  014A2A  0E20               	movlw	32
  9280  014A2C  6EE6               	movwf	postinc1,c
  9281  014A2E  0E00               	movlw	0
  9282  014A30  6EE6               	movwf	postinc1,c
  9283  014A32  ECB9  F0B0         	call	_fputc	;wreg free
  9284                           
  9285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9286                           ;stkvar	_l @ sp[(-17)+7]
  9287  014A36  0EF6               	movlw	-10
  9288  014A38  50E3               	movf	plusw1,w,c
  9289  014A3A  0F01               	addlw	1
  9290  014A3C  6E35               	movwf	btemp^0,c
  9291  014A3E  0EF6               	movlw	-10
  9292  014A40  0060  F0D7  FFE3   	movff	btemp,plusw1
  9293  014A46  6A35               	clrf	btemp^0,c
  9294  014A48  0EF7               	movlw	-9
  9295  014A4A  50E3               	movf	plusw1,w,c
  9296  014A4C  2035               	addwfc	btemp^0,w,c
  9297  014A4E  6E35               	movwf	btemp^0,c
  9298  014A50  0EF7               	movlw	-9
  9299  014A52  0060  F0D7  FFE3   	movff	btemp,plusw1
  9300  014A58                     l9383:
  9301                           
  9302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9303                           ;stkvar	_w @ sp[(-17)+13]
  9304                           ;stkvar	_l @ sp[(-17)+7]
  9305  014A58  50E1               	movf	fsr1l,w,c
  9306  014A5A  0FF6               	addlw	-10
  9307  014A5C  6ED9               	movwf	fsr2l,c
  9308  014A5E  50E2               	movf	fsr1h,w,c
  9309  014A60  6EDA               	movwf	fsr2h,c
  9310  014A62  0EFF               	movlw	255
  9311  014A64  22DA               	addwfc	fsr2h,f,c
  9312  014A66  0EFC               	movlw	-4
  9313  014A68  50E3               	movf	plusw1,w,c
  9314  014A6A  5CDE               	subwf	postinc2,w,c
  9315  014A6C  50DE               	movf	postinc2,w,c
  9316  014A6E  0A80               	xorlw	128
  9317  014A70  6E35               	movwf	btemp^0,c
  9318  014A72  0EFD               	movlw	-3
  9319  014A74  50E3               	movf	plusw1,w,c
  9320  014A76  0A80               	xorlw	128
  9321  014A78  5835               	subwfb	btemp^0,w,c
  9322  014A7A  A0D8               	btfss	status,0,c
  9323  014A7C  D7CF               	goto	l9379
  9324  014A7E                     u9330:
  9325                           
  9326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9327                           ;stkvar	_i @ sp[(-17)+15]
  9328  014A7E  0EFE               	movlw	-2
  9329  014A80  6AE3               	clrf	plusw1,c
  9330  014A82  0EFF               	movlw	-1
  9331  014A84  6AE3               	clrf	plusw1,c
  9332                           
  9333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9334  014A86  D045               	goto	l9393
  9335  014A88                     l9387:
  9336                           
  9337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9338                           ;stkvar	_fp @ sp[(-17)+-2]
  9339  014A88  0EED               	movlw	-19
  9340  014A8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9341  014A90  006F FF8F FFE6     	movff	plusw1,postinc1
  9342                           
  9343                           ;stkvar	_cp @ sp[(-19)+11]
  9344  014A96  0EF8               	movlw	-8
  9345  014A98  006F FF8F FFF6     	movff	plusw1,tblptrl
  9346  014A9E  0EF9               	movlw	-7
  9347  014AA0  006F FF8F FFF7     	movff	plusw1,tblptrh
  9348  014AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  9349  014AA8  6EF8               	movwf	tblptru,c
  9350  014AAA  0E1F               	movlw	(high __ramtop+-1)
  9351  014AAC  64F7               	cpfsgt	tblptrh,c
  9352  014AAE  D003               	bra	u9347
  9353  014AB0  0008               	tblrd		*
  9354  014AB2  50F5               	movf	tablat,w,c
  9355  014AB4  D007               	bra	u9340
  9356  014AB6                     u9347:
  9357  014AB6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9358  014ABC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9359  014AC2  50EF               	movf	indf0,w,c
  9360  014AC4                     u9340:
  9361  014AC4  6EE6               	movwf	postinc1,c
  9362  014AC6  0E00               	movlw	0
  9363  014AC8  6EE6               	movwf	postinc1,c
  9364  014ACA  ECB9  F0B0         	call	_fputc	;wreg free
  9365                           
  9366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9367                           ;stkvar	_cp @ sp[(-17)+11]
  9368  014ACE  0EFA               	movlw	-6
  9369  014AD0  50E3               	movf	plusw1,w,c
  9370  014AD2  0F01               	addlw	1
  9371  014AD4  6E35               	movwf	btemp^0,c
  9372  014AD6  0EFA               	movlw	-6
  9373  014AD8  0060  F0D7  FFE3   	movff	btemp,plusw1
  9374  014ADE  6A35               	clrf	btemp^0,c
  9375  014AE0  0EFB               	movlw	-5
  9376  014AE2  50E3               	movf	plusw1,w,c
  9377  014AE4  2035               	addwfc	btemp^0,w,c
  9378  014AE6  6E35               	movwf	btemp^0,c
  9379  014AE8  0EFB               	movlw	-5
  9380  014AEA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9381                           
  9382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9383                           ;stkvar	_i @ sp[(-17)+15]
  9384  014AF0  0EFE               	movlw	-2
  9385  014AF2  50E3               	movf	plusw1,w,c
  9386  014AF4  0F01               	addlw	1
  9387  014AF6  6E35               	movwf	btemp^0,c
  9388  014AF8  0EFE               	movlw	-2
  9389  014AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9390  014B00  6A35               	clrf	btemp^0,c
  9391  014B02  0EFF               	movlw	-1
  9392  014B04  50E3               	movf	plusw1,w,c
  9393  014B06  2035               	addwfc	btemp^0,w,c
  9394  014B08  6E35               	movwf	btemp^0,c
  9395  014B0A  0EFF               	movlw	-1
  9396  014B0C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9397  014B12                     l9393:
  9398                           
  9399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9400                           ;stkvar	_p @ sp[(-17)+9]
  9401                           ;stkvar	_i @ sp[(-17)+15]
  9402  014B12  50E1               	movf	fsr1l,w,c
  9403  014B14  0FFE               	addlw	-2
  9404  014B16  6ED9               	movwf	fsr2l,c
  9405  014B18  50E2               	movf	fsr1h,w,c
  9406  014B1A  6EDA               	movwf	fsr2h,c
  9407  014B1C  0EFF               	movlw	255
  9408  014B1E  22DA               	addwfc	fsr2h,f,c
  9409  014B20  0EF8               	movlw	-8
  9410  014B22  50E3               	movf	plusw1,w,c
  9411  014B24  5CDE               	subwf	postinc2,w,c
  9412  014B26  50DE               	movf	postinc2,w,c
  9413  014B28  0A80               	xorlw	128
  9414  014B2A  6E35               	movwf	btemp^0,c
  9415  014B2C  0EF9               	movlw	-7
  9416  014B2E  50E3               	movf	plusw1,w,c
  9417  014B30  0A80               	xorlw	128
  9418  014B32  5835               	subwfb	btemp^0,w,c
  9419  014B34  A0D8               	btfss	status,0,c
  9420  014B36  D7A8               	goto	l9387
  9421                           
  9422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9423  014B38  B022               	btfsc	_flags^0,0,c
  9424  014B3A  D01F               	goto	l9401
  9425  014B3C  D031               	goto	u9370
  9426  014B3E                     l9397:
  9427                           
  9428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9429                           ;stkvar	_fp @ sp[(-17)+-2]
  9430  014B3E  0EED               	movlw	-19
  9431  014B40  006F FF8F FFE6     	movff	plusw1,postinc1
  9432  014B46  006F FF8F FFE6     	movff	plusw1,postinc1
  9433  014B4C  0E20               	movlw	32
  9434  014B4E  6EE6               	movwf	postinc1,c
  9435  014B50  0E00               	movlw	0
  9436  014B52  6EE6               	movwf	postinc1,c
  9437  014B54  ECB9  F0B0         	call	_fputc	;wreg free
  9438                           
  9439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9440                           ;stkvar	_l @ sp[(-17)+7]
  9441  014B58  0EF6               	movlw	-10
  9442  014B5A  50E3               	movf	plusw1,w,c
  9443  014B5C  0F01               	addlw	1
  9444  014B5E  6E35               	movwf	btemp^0,c
  9445  014B60  0EF6               	movlw	-10
  9446  014B62  0060  F0D7  FFE3   	movff	btemp,plusw1
  9447  014B68  6A35               	clrf	btemp^0,c
  9448  014B6A  0EF7               	movlw	-9
  9449  014B6C  50E3               	movf	plusw1,w,c
  9450  014B6E  2035               	addwfc	btemp^0,w,c
  9451  014B70  6E35               	movwf	btemp^0,c
  9452  014B72  0EF7               	movlw	-9
  9453  014B74  0060  F0D7  FFE3   	movff	btemp,plusw1
  9454  014B7A                     l9401:
  9455                           
  9456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9457                           ;stkvar	_w @ sp[(-17)+13]
  9458                           ;stkvar	_l @ sp[(-17)+7]
  9459  014B7A  50E1               	movf	fsr1l,w,c
  9460  014B7C  0FF6               	addlw	-10
  9461  014B7E  6ED9               	movwf	fsr2l,c
  9462  014B80  50E2               	movf	fsr1h,w,c
  9463  014B82  6EDA               	movwf	fsr2h,c
  9464  014B84  0EFF               	movlw	255
  9465  014B86  22DA               	addwfc	fsr2h,f,c
  9466  014B88  0EFC               	movlw	-4
  9467  014B8A  50E3               	movf	plusw1,w,c
  9468  014B8C  5CDE               	subwf	postinc2,w,c
  9469  014B8E  50DE               	movf	postinc2,w,c
  9470  014B90  0A80               	xorlw	128
  9471  014B92  6E35               	movwf	btemp^0,c
  9472  014B94  0EFD               	movlw	-3
  9473  014B96  50E3               	movf	plusw1,w,c
  9474  014B98  0A80               	xorlw	128
  9475  014B9A  5835               	subwfb	btemp^0,w,c
  9476  014B9C  A0D8               	btfss	status,0,c
  9477  014B9E  D7CF               	goto	l9397
  9478  014BA0                     u9370:
  9479                           
  9480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9481                           ;stkvar	_l @ sp[(-17)+7]
  9482  014BA0  0EF6               	movlw	-10
  9483  014BA2  006F FF8C  F035    	movff	plusw1,btemp
  9484  014BA8  0EF7               	movlw	-9
  9485  014BAA  006F FF8C  F036    	movff	plusw1,btemp+1
  9486                           
  9487                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9488  014BB0  0EEB               	movlw	235
  9489  014BB2  26E1               	addwf	fsr1l,f,c
  9490  014BB4  0EFF               	movlw	255
  9491  014BB6  22E2               	addwfc	fsr1h,f,c
  9492  014BB8  0012               	return		;funcret
  9493  014BBA                     __end_of_stoa:
  9494                           	opt callstack 0
  9495                           
  9496 ;; *************** function _efgtoa *****************
  9497 ;; Defined at:
  9498 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9501 ;;		 -> f(6), NULL(0), 
  9502 ;;  f               4  [STACK] PTR struct _IO_FILE
  9503 ;;  c               1  [STACK] unsigned char 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  u               4  [STACK] unsigned char 
  9506 ;;  g               4  [STACK] unsigned char 
  9507 ;;  l               4  [STACK] unsigned char 
  9508 ;;  h               4  [STACK] unsigned char 
  9509 ;;  ou              4  [STACK] unsigned char 
  9510 ;;  n               2  [STACK] int 
  9511 ;;  e               2  [STACK] int 
  9512 ;;  i               2  [STACK] int 
  9513 ;;  w               2  [STACK] int 
  9514 ;;  p               2  [STACK] int 
  9515 ;;  sign            2  [STACK] int 
  9516 ;;  d               2  [STACK] int 
  9517 ;;  ne              2  [STACK] int 
  9518 ;;  m               2  [STACK] int 
  9519 ;;  pp              2  [STACK] int 
  9520 ;;  t               2  [STACK] int 
  9521 ;;  mode            1  [STACK] unsigned char 
  9522 ;;  nmode           1  [STACK] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  2  [STACK] int 
  9525 ;; Registers used:
  9526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/4
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9536 ;;Total ram usage:        0 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; Hardware stack levels required when called:   11
  9539 ;; This function calls:
  9540 ;;		___awdiv
  9541 ;;		___awmod
  9542 ;;		___fladd
  9543 ;;		___fldiv
  9544 ;;		___fleq
  9545 ;;		___flge
  9546 ;;		___flmul
  9547 ;;		___flneg
  9548 ;;		___flsub
  9549 ;;		___fltol
  9550 ;;		___fpclassifyf
  9551 ;;		_floorf
  9552 ;;		_isupper
  9553 ;;		_pad
  9554 ;;		_strcpy
  9555 ;;		_tolower
  9556 ;; This function is called by:
  9557 ;;		_vfpfcnvrt
  9558 ;; This function uses a reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text41
  9562  010000                     __ptext41:
  9563                           	opt callstack 0
  9564  010000                     _efgtoa:
  9565                           	opt callstack 0
  9566                           
  9567                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9568  010000  0E38               	movlw	56
  9569  010002  26E1               	addwf	fsr1l,f,c
  9570  010004  0E00               	movlw	0
  9571  010006  22E2               	addwfc	fsr1h,f,c
  9572                           
  9573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9574                           ;stkvar	_sign @ sp[(-56)+42]
  9575                           
  9576                           ;incstack = 0
  9577  010008  0EF2               	movlw	-14
  9578  01000A  6AE3               	clrf	plusw1,c
  9579  01000C  0EF3               	movlw	-13
  9580  01000E  6AE3               	clrf	plusw1,c
  9581                           
  9582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9583                           ;stkvar	_f @ sp[(-56)+-6]
  9584  010010  0EC2               	movlw	-62
  9585  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9586  010018  0EC3               	movlw	-61
  9587  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9588  010020  0EC4               	movlw	-60
  9589  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9590  010028  0EC5               	movlw	-59
  9591  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9592                           
  9593                           ;stkvar	_g @ sp[(-56)+16]
  9594  010030  0ED8               	movlw	-40
  9595  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9596  010038  0ED9               	movlw	-39
  9597  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9598  010040  0EDA               	movlw	-38
  9599  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9600  010048  0EDB               	movlw	-37
  9601  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9602                           
  9603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9604                           ;stkvar	_g @ sp[(-56)+16]
  9605  010050  0EDB               	movlw	-37
  9606  010052  AEE3               	btfss	plusw1,7,c
  9607  010054  D02B               	goto	l9061
  9608                           
  9609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9610  010056  0E01               	movlw	1
  9611  010058  6E3F               	movwf	(btemp+10)^0,c
  9612  01005A  0E00               	movlw	0
  9613  01005C  6E40               	movwf	(btemp+11)^0,c
  9614                           
  9615                           ;stkvar	_sign @ sp[(-56)+42]
  9616  01005E  0EF2               	movlw	-14
  9617  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9618  010066  0EF3               	movlw	-13
  9619  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9620                           
  9621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9622                           ;stkvar	_g @ sp[(-56)+16]
  9623  01006E  0ED8               	movlw	-40
  9624  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9625  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9626  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9627  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9628  010088  EC80  F0BB         	call	___flneg	;wreg free
  9629                           
  9630                           ;stkvar	_g @ sp[(-56)+16]
  9631  01008C  0ED8               	movlw	-40
  9632  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9633  010094  0ED9               	movlw	-39
  9634  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9635  01009C  0EDA               	movlw	-38
  9636  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9637  0100A4  0EDB               	movlw	-37
  9638  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9639  0100AC                     l9061:
  9640                           
  9641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9642                           ;stkvar	_n @ sp[(-56)+32]
  9643  0100AC  0EE8               	movlw	-24
  9644  0100AE  6AE3               	clrf	plusw1,c
  9645  0100B0  0EE9               	movlw	-23
  9646  0100B2  6AE3               	clrf	plusw1,c
  9647                           
  9648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9649                           ;stkvar	_w @ sp[(-56)+38]
  9650  0100B4  0EEE               	movlw	-18
  9651  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9652  0100BC  0EEF               	movlw	-17
  9653  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9654                           
  9655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9656                           ;stkvar	_sign @ sp[(-56)+42]
  9657  0100C4  0EF2               	movlw	-14
  9658  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9659  0100CC  0EF3               	movlw	-13
  9660  0100CE  50E3               	movf	plusw1,w,c
  9661  0100D0  1035               	iorwf	btemp^0,w,c
  9662  0100D2  A4D8               	btfss	status,2,c
  9663  0100D4  D002               	goto	u8780
  9664  0100D6  A422               	btfss	_flags^0,2,c
  9665  0100D8  D036               	goto	l9081
  9666  0100DA                     u8780:
  9667                           
  9668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9669                           ;stkvar	_sign @ sp[(-56)+42]
  9670  0100DA  0EF2               	movlw	-14
  9671  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9672  0100E2  0EF3               	movlw	-13
  9673  0100E4  50E3               	movf	plusw1,w,c
  9674  0100E6  1035               	iorwf	btemp^0,w,c
  9675  0100E8  A4D8               	btfss	status,2,c
  9676  0100EA  D002               	goto	l9073
  9677  0100EC  0E2B               	movlw	43
  9678  0100EE  D001               	goto	L7
  9679  0100F0                     l9073:
  9680  0100F0  0E2D               	movlw	45
  9681  0100F2                     L7:
  9682  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9683  0100F4  0E00               	movlw	0
  9684  0100F6  6E40               	movwf	(btemp+11)^0,c
  9685                           
  9686                           ;stkvar	_efgtoa$4070 @ sp[(-56)+10]
  9687  0100F8  0ED2               	movlw	-46
  9688  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9689  010100  0ED3               	movlw	-45
  9690  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9691                           
  9692                           ;stkvar	_efgtoa$4070 @ sp[(-56)+10]
  9693  010108  0ED2               	movlw	-46
  9694  01010A  006F FF8C  F1AB    	movff	plusw1,_dbuf
  9695                           
  9696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9697                           ;stkvar	_n @ sp[(-56)+32]
  9698  010110  0EE8               	movlw	-24
  9699  010112  50E3               	movf	plusw1,w,c
  9700  010114  0F01               	addlw	1
  9701  010116  6E35               	movwf	btemp^0,c
  9702  010118  0EE8               	movlw	-24
  9703  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9704  010120  6A35               	clrf	btemp^0,c
  9705  010122  0EE9               	movlw	-23
  9706  010124  50E3               	movf	plusw1,w,c
  9707  010126  2035               	addwfc	btemp^0,w,c
  9708  010128  6E35               	movwf	btemp^0,c
  9709  01012A  0EE9               	movlw	-23
  9710  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9711                           
  9712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9713                           ;stkvar	_w @ sp[(-56)+38]
  9714  010132  50E1               	movf	fsr1l,w,c
  9715  010134  0FEE               	addlw	-18
  9716  010136  6ED9               	movwf	fsr2l,c
  9717  010138  50E2               	movf	fsr1h,w,c
  9718  01013A  6EDA               	movwf	fsr2h,c
  9719  01013C  0EFF               	movlw	255
  9720  01013E  22DA               	addwfc	fsr2h,f,c
  9721  010140  06DE               	decf	postinc2,f,c
  9722  010142  0E00               	movlw	0
  9723  010144  5ADD               	subwfb	postdec2,f,c
  9724  010146                     l9081:
  9725                           
  9726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9727                           ;stkvar	_g @ sp[(-56)+16]
  9728  010146  0ED8               	movlw	-40
  9729  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9730  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9731  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9732  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9733  010160  EC46  F0AD         	call	___fpclassifyf	;wreg free
  9734  010164  0435               	decf	btemp^0,w,c
  9735  010166  1036               	iorwf	(btemp+1)^0,w,c
  9736  010168  A4D8               	btfss	status,2,c
  9737  01016A  D076               	goto	l9099
  9738  01016C  0EBF               	movlw	191
  9739  01016E  6E3F               	movwf	(btemp+10)^0,c
  9740  010170  0EFF               	movlw	255
  9741  010172  6E40               	movwf	(btemp+11)^0,c
  9742                           
  9743                           ;stkvar	_c @ sp[(-56)+-7]
  9744  010174  0EC1               	movlw	-63
  9745  010176  50E3               	movf	plusw1,w,c
  9746  010178  6E3D               	movwf	(btemp+8)^0,c
  9747  01017A  6A3E               	clrf	(btemp+9)^0,c
  9748  01017C  503F               	movf	(btemp+10)^0,w,c
  9749  01017E  263D               	addwf	(btemp+8)^0,f,c
  9750  010180  5040               	movf	(btemp+11)^0,w,c
  9751  010182  223E               	addwfc	(btemp+9)^0,f,c
  9752  010184  503E               	movf	(btemp+9)^0,w,c
  9753  010186  E106               	bnz	u8810
  9754  010188  0E1A               	movlw	26
  9755  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9756  01018C  B0D8               	btfsc	status,0,c
  9757  01018E  D002               	goto	u8810
  9758  010190  0E01               	movlw	1
  9759  010192  D001               	goto	u8820
  9760  010194                     u8810:
  9761  010194  0E00               	movlw	0
  9762  010196                     u8820:
  9763  010196  6E3F               	movwf	(btemp+10)^0,c
  9764  010198  6A40               	clrf	(btemp+11)^0,c
  9765                           
  9766                           ;stkvar	_efgtoa$4071 @ sp[(-56)+8]
  9767  01019A  0ED0               	movlw	-48
  9768  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9769  0101A2  0ED1               	movlw	-47
  9770  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9771                           
  9772                           ;stkvar	_efgtoa$4071 @ sp[(-56)+8]
  9773  0101AA  0ED0               	movlw	-48
  9774  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9775  0101B2  0ED1               	movlw	-47
  9776  0101B4  50E3               	movf	plusw1,w,c
  9777  0101B6  1035               	iorwf	btemp^0,w,c
  9778  0101B8  B4D8               	btfsc	status,2,c
  9779  0101BA  D017               	goto	l9091
  9780                           
  9781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9782  0101BC  0EE2               	movlw	low STR_33
  9783  0101BE  6EE6               	movwf	postinc1,c
  9784  0101C0  0EFF               	movlw	high STR_33
  9785  0101C2  6EE6               	movwf	postinc1,c
  9786                           
  9787                           ;stkvar	_n @ sp[(-58)+32]
  9788  0101C4  0EAB               	movlw	low _dbuf
  9789  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9790  0101C8  0E01               	movlw	high _dbuf
  9791  0101CA  6E40               	movwf	(btemp+11)^0,c
  9792  0101CC  0EE6               	movlw	-26
  9793  0101CE  50E3               	movf	plusw1,w,c
  9794  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9795  0101D2  0EE7               	movlw	-25
  9796  0101D4  50E3               	movf	plusw1,w,c
  9797  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9798  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9799  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9800  0101E4  ECE2  F0B3         	call	_strcpy	;wreg free
  9801                           
  9802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9803  0101E8  D016               	goto	l9093
  9804  0101EA                     l9091:
  9805                           
  9806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9807  0101EA  0EEA               	movlw	low STR_34
  9808  0101EC  6EE6               	movwf	postinc1,c
  9809  0101EE  0EFF               	movlw	high STR_34
  9810  0101F0  6EE6               	movwf	postinc1,c
  9811                           
  9812                           ;stkvar	_n @ sp[(-58)+32]
  9813  0101F2  0EAB               	movlw	low _dbuf
  9814  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9815  0101F6  0E01               	movlw	high _dbuf
  9816  0101F8  6E40               	movwf	(btemp+11)^0,c
  9817  0101FA  0EE6               	movlw	-26
  9818  0101FC  50E3               	movf	plusw1,w,c
  9819  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9820  010200  0EE7               	movlw	-25
  9821  010202  50E3               	movf	plusw1,w,c
  9822  010204  2240               	addwfc	(btemp+11)^0,f,c
  9823  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9824  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9825  010212  ECE2  F0B3         	call	_strcpy	;wreg free
  9826  010216                     l9093:
  9827                           
  9828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9829                           ;stkvar	_w @ sp[(-56)+38]
  9830  010216  50E1               	movf	fsr1l,w,c
  9831  010218  0FEE               	addlw	-18
  9832  01021A  6ED9               	movwf	fsr2l,c
  9833  01021C  50E2               	movf	fsr1h,w,c
  9834  01021E  6EDA               	movwf	fsr2h,c
  9835  010220  0EFF               	movlw	255
  9836  010222  22DA               	addwfc	fsr2h,f,c
  9837  010224  0EFD               	movlw	253
  9838  010226  26DE               	addwf	postinc2,f,c
  9839  010228  0EFF               	movlw	255
  9840  01022A  22DD               	addwfc	postdec2,f,c
  9841  01022C                     l9095:
  9842                           
  9843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9844                           ;stkvar	_w @ sp[(-56)+38]
  9845  01022C  0EEE               	movlw	-18
  9846  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9847  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9848  01023A  0EAB               	movlw	low _dbuf
  9849  01023C  6EE6               	movwf	postinc1,c
  9850  01023E  0E01               	movlw	high _dbuf
  9851  010240  6EE6               	movwf	postinc1,c
  9852                           
  9853                           ;stkvar	_fp @ sp[(-60)+-2]
  9854  010242  0EC2               	movlw	-62
  9855  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9856  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9857  010250  ECD7  F0B1         	call	_pad	;wreg free
  9858  010254  EF1D  F089         	goto	l1796
  9859  010258                     l9099:
  9860                           
  9861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9862                           ;stkvar	_g @ sp[(-56)+16]
  9863  010258  0ED8               	movlw	-40
  9864  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9865  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9866  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9867  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9868  010272  EC46  F0AD         	call	___fpclassifyf	;wreg free
  9869  010276  5035               	movf	btemp^0,w,c
  9870  010278  1036               	iorwf	(btemp+1)^0,w,c
  9871  01027A  A4D8               	btfss	status,2,c
  9872  01027C  D056               	goto	l9117
  9873  01027E  0EBF               	movlw	191
  9874  010280  6E3F               	movwf	(btemp+10)^0,c
  9875  010282  0EFF               	movlw	255
  9876  010284  6E40               	movwf	(btemp+11)^0,c
  9877                           
  9878                           ;stkvar	_c @ sp[(-56)+-7]
  9879  010286  0EC1               	movlw	-63
  9880  010288  50E3               	movf	plusw1,w,c
  9881  01028A  6E3D               	movwf	(btemp+8)^0,c
  9882  01028C  6A3E               	clrf	(btemp+9)^0,c
  9883  01028E  503F               	movf	(btemp+10)^0,w,c
  9884  010290  263D               	addwf	(btemp+8)^0,f,c
  9885  010292  5040               	movf	(btemp+11)^0,w,c
  9886  010294  223E               	addwfc	(btemp+9)^0,f,c
  9887  010296  503E               	movf	(btemp+9)^0,w,c
  9888  010298  E106               	bnz	u8850
  9889  01029A  0E1A               	movlw	26
  9890  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9891  01029E  B0D8               	btfsc	status,0,c
  9892  0102A0  D002               	goto	u8850
  9893  0102A2  0E01               	movlw	1
  9894  0102A4  D001               	goto	u8860
  9895  0102A6                     u8850:
  9896  0102A6  0E00               	movlw	0
  9897  0102A8                     u8860:
  9898  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9899  0102AA  6A40               	clrf	(btemp+11)^0,c
  9900                           
  9901                           ;stkvar	_efgtoa$4075 @ sp[(-56)+6]
  9902  0102AC  0ECE               	movlw	-50
  9903  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9904  0102B4  0ECF               	movlw	-49
  9905  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9906                           
  9907                           ;stkvar	_efgtoa$4075 @ sp[(-56)+6]
  9908  0102BC  0ECE               	movlw	-50
  9909  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9910  0102C4  0ECF               	movlw	-49
  9911  0102C6  50E3               	movf	plusw1,w,c
  9912  0102C8  1035               	iorwf	btemp^0,w,c
  9913  0102CA  B4D8               	btfsc	status,2,c
  9914  0102CC  D017               	goto	l9109
  9915                           
  9916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9917  0102CE  0EE6               	movlw	low STR_37
  9918  0102D0  6EE6               	movwf	postinc1,c
  9919  0102D2  0EFF               	movlw	high STR_37
  9920  0102D4  6EE6               	movwf	postinc1,c
  9921                           
  9922                           ;stkvar	_n @ sp[(-58)+32]
  9923  0102D6  0EAB               	movlw	low _dbuf
  9924  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9925  0102DA  0E01               	movlw	high _dbuf
  9926  0102DC  6E40               	movwf	(btemp+11)^0,c
  9927  0102DE  0EE6               	movlw	-26
  9928  0102E0  50E3               	movf	plusw1,w,c
  9929  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9930  0102E4  0EE7               	movlw	-25
  9931  0102E6  50E3               	movf	plusw1,w,c
  9932  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9933  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9934  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9935  0102F6  ECE2  F0B3         	call	_strcpy	;wreg free
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9938  0102FA  D78D               	goto	l9093
  9939  0102FC                     l9109:
  9940                           
  9941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9942  0102FC  0EEE               	movlw	low STR_38
  9943  0102FE  6EE6               	movwf	postinc1,c
  9944  010300  0EFF               	movlw	high STR_38
  9945  010302  6EE6               	movwf	postinc1,c
  9946                           
  9947                           ;stkvar	_n @ sp[(-58)+32]
  9948  010304  0EAB               	movlw	low _dbuf
  9949  010306  6E3F               	movwf	(btemp+10)^0,c
  9950  010308  0E01               	movlw	high _dbuf
  9951  01030A  6E40               	movwf	(btemp+11)^0,c
  9952  01030C  0EE6               	movlw	-26
  9953  01030E  50E3               	movf	plusw1,w,c
  9954  010310  263F               	addwf	(btemp+10)^0,f,c
  9955  010312  0EE7               	movlw	-25
  9956  010314  50E3               	movf	plusw1,w,c
  9957  010316  2240               	addwfc	(btemp+11)^0,f,c
  9958  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9959  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9960  010324  ECE2  F0B3         	call	_strcpy	;wreg free
  9961  010328  D776               	goto	l9093
  9962  01032A                     l9117:
  9963                           
  9964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9965  01032A  0E00               	movlw	0
  9966  01032C  6E3D               	movwf	(btemp+8)^0,c
  9967  01032E  0E00               	movlw	0
  9968  010330  6E3E               	movwf	(btemp+9)^0,c
  9969  010332  0E80               	movlw	128
  9970  010334  6E3F               	movwf	(btemp+10)^0,c
  9971  010336  0E3F               	movlw	63
  9972  010338  6E40               	movwf	(btemp+11)^0,c
  9973                           
  9974                           ;stkvar	_u @ sp[(-56)+12]
  9975  01033A  0ED4               	movlw	-44
  9976  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9977  010342  0ED5               	movlw	-43
  9978  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9979  01034A  0ED6               	movlw	-42
  9980  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9981  010352  0ED7               	movlw	-41
  9982  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9983                           
  9984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9985                           ;stkvar	_e @ sp[(-56)+34]
  9986  01035A  0EEA               	movlw	-22
  9987  01035C  6AE3               	clrf	plusw1,c
  9988  01035E  0EEB               	movlw	-21
  9989  010360  6AE3               	clrf	plusw1,c
  9990                           
  9991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9992  010362  0E00               	movlw	0
  9993  010364  6EE6               	movwf	postinc1,c
  9994  010366  0E00               	movlw	0
  9995  010368  6EE6               	movwf	postinc1,c
  9996  01036A  0E00               	movlw	0
  9997  01036C  6EE6               	movwf	postinc1,c
  9998  01036E  0E00               	movlw	0
  9999  010370  6EE6               	movwf	postinc1,c
 10000                           
 10001                           ;stkvar	_g @ sp[(-60)+16]
 10002  010372  0ED4               	movlw	-44
 10003  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10004  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10005  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10006  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10007  01038C  ECAF  F0B4         	call	___fleq	;wreg free
 10008  010390  A035               	btfss	btemp& (0+255),0,c
 10009  010392  D039               	goto	l9129
 10010  010394  D0BC               	goto	u8900
 10011  010396                     l9125:
 10012                           
 10013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10014  010396  0E00               	movlw	0
 10015  010398  6EE6               	movwf	postinc1,c
 10016  01039A  0E00               	movlw	0
 10017  01039C  6EE6               	movwf	postinc1,c
 10018  01039E  0E20               	movlw	32
 10019  0103A0  6EE6               	movwf	postinc1,c
 10020  0103A2  0E41               	movlw	65
 10021  0103A4  6EE6               	movwf	postinc1,c
 10022                           
 10023                           ;stkvar	_u @ sp[(-60)+12]
 10024  0103A6  0ED0               	movlw	-48
 10025  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10026  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10027  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10028  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10029  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10030                           
 10031                           ;stkvar	_u @ sp[(-56)+12]
 10032  0103C4  0ED4               	movlw	-44
 10033  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10034  0103CC  0ED5               	movlw	-43
 10035  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10036  0103D4  0ED6               	movlw	-42
 10037  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10038  0103DC  0ED7               	movlw	-41
 10039  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10040                           
 10041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10042                           ;stkvar	_e @ sp[(-56)+34]
 10043  0103E4  0EEA               	movlw	-22
 10044  0103E6  50E3               	movf	plusw1,w,c
 10045  0103E8  0F01               	addlw	1
 10046  0103EA  6E35               	movwf	btemp^0,c
 10047  0103EC  0EEA               	movlw	-22
 10048  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10049  0103F4  6A35               	clrf	btemp^0,c
 10050  0103F6  0EEB               	movlw	-21
 10051  0103F8  50E3               	movf	plusw1,w,c
 10052  0103FA  2035               	addwfc	btemp^0,w,c
 10053  0103FC  6E35               	movwf	btemp^0,c
 10054  0103FE  0EEB               	movlw	-21
 10055  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 10056  010406                     l9129:
 10057                           
 10058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10059  010406  0E00               	movlw	0
 10060  010408  6EE6               	movwf	postinc1,c
 10061  01040A  0E00               	movlw	0
 10062  01040C  6EE6               	movwf	postinc1,c
 10063  01040E  0E20               	movlw	32
 10064  010410  6EE6               	movwf	postinc1,c
 10065  010412  0E41               	movlw	65
 10066  010414  6EE6               	movwf	postinc1,c
 10067                           
 10068                           ;stkvar	_u @ sp[(-60)+12]
 10069  010416  0ED0               	movlw	-48
 10070  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10071  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10072  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10073  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10074  010430  ECC1  F08E         	call	___flmul	;wreg free
 10075  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 10076  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10077  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10078  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10079                           
 10080                           ;stkvar	_g @ sp[(-60)+16]
 10081  01044C  0ED4               	movlw	-44
 10082  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10083  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10084  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10085  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10086  010466  ECCA  F0AE         	call	___flge	;wreg free
 10087  01046A  A035               	btfss	btemp& (0+255),0,c
 10088  01046C  D032               	goto	l9135
 10089  01046E  D793               	goto	l9125
 10090  010470                     l9131:
 10091                           
 10092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10093  010470  0E00               	movlw	0
 10094  010472  6EE6               	movwf	postinc1,c
 10095  010474  0E00               	movlw	0
 10096  010476  6EE6               	movwf	postinc1,c
 10097  010478  0E20               	movlw	32
 10098  01047A  6EE6               	movwf	postinc1,c
 10099  01047C  0E41               	movlw	65
 10100  01047E  6EE6               	movwf	postinc1,c
 10101                           
 10102                           ;stkvar	_u @ sp[(-60)+12]
 10103  010480  0ED0               	movlw	-48
 10104  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10105  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10106  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10107  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10108  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10109                           
 10110                           ;stkvar	_u @ sp[(-56)+12]
 10111  01049E  0ED4               	movlw	-44
 10112  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10113  0104A6  0ED5               	movlw	-43
 10114  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10115  0104AE  0ED6               	movlw	-42
 10116  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10117  0104B6  0ED7               	movlw	-41
 10118  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10119                           
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10121                           ;stkvar	_e @ sp[(-56)+34]
 10122  0104BE  50E1               	movf	fsr1l,w,c
 10123  0104C0  0FEA               	addlw	-22
 10124  0104C2  6ED9               	movwf	fsr2l,c
 10125  0104C4  50E2               	movf	fsr1h,w,c
 10126  0104C6  6EDA               	movwf	fsr2h,c
 10127  0104C8  0EFF               	movlw	255
 10128  0104CA  22DA               	addwfc	fsr2h,f,c
 10129  0104CC  06DE               	decf	postinc2,f,c
 10130  0104CE  0E00               	movlw	0
 10131  0104D0  5ADD               	subwfb	postdec2,f,c
 10132  0104D2                     l9135:
 10133                           
 10134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10135                           ;stkvar	_u @ sp[(-56)+12]
 10136  0104D2  0ED4               	movlw	-44
 10137  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10138  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10139  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10140  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10141                           
 10142                           ;stkvar	_g @ sp[(-60)+16]
 10143  0104EC  0ED4               	movlw	-44
 10144  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10145  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10146  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10147  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10148  010506  ECCA  F0AE         	call	___flge	;wreg free
 10149  01050A  A035               	btfss	btemp& (0+255),0,c
 10150  01050C  D7B1               	goto	l9131
 10151  01050E                     u8900:
 10152                           
 10153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10154                           ;stkvar	_c @ sp[(-56)+-7]
 10155  01050E  0EC1               	movlw	-63
 10156  010510  50E3               	movf	plusw1,w,c
 10157  010512  6EE6               	movwf	postinc1,c
 10158  010514  0E00               	movlw	0
 10159  010516  6EE6               	movwf	postinc1,c
 10160  010518  EC62  F0B8         	call	_tolower	;wreg free
 10161                           
 10162                           ;stkvar	_mode @ sp[(-56)+54]
 10163  01051C  0EFE               	movlw	-2
 10164  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10165                           
 10166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10167                           ;stkvar	_mode @ sp[(-56)+54]
 10168                           ;stkvar	_nmode @ sp[(-56)+55]
 10169  010524  0EFE               	movlw	-2
 10170  010526  006F FF8C  F035    	movff	plusw1,btemp
 10171  01052C  0EFF               	movlw	-1
 10172  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10173                           
 10174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10175                           ;stkvar	_mode @ sp[(-56)+54]
 10176  010534  0EFE               	movlw	-2
 10177  010536  006F FF8C  F035    	movff	plusw1,btemp
 10178  01053C  0E67               	movlw	103
 10179  01053E  1835               	xorwf	btemp^0,w,c
 10180  010540  A4D8               	btfss	status,2,c
 10181  010542  D025               	goto	l9153
 10182                           
 10183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10184  010544  5020               	movf	_prec^0,w,c
 10185  010546  1021               	iorwf	(_prec+1)^0,w,c
 10186  010548  A4D8               	btfss	status,2,c
 10187  01054A  D004               	goto	l9147
 10188                           
 10189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10190  01054C  0E00               	movlw	0
 10191  01054E  6E21               	movwf	(_prec+1)^0,c
 10192  010550  0E01               	movlw	1
 10193  010552  6E20               	movwf	_prec^0,c
 10194  010554                     l9147:
 10195                           
 10196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10197  010554  BE21               	btfsc	(_prec+1)^0,7,c
 10198  010556  D005               	goto	u8930
 10199  010558  5021               	movf	(_prec+1)^0,w,c
 10200  01055A  E110               	bnz	l9151
 10201  01055C  0420               	decf	_prec^0,w,c
 10202  01055E  B0D8               	btfsc	status,0,c
 10203  010560  D00D               	goto	l9151
 10204  010562                     u8930:
 10205  010562  0E06               	movlw	6
 10206  010564  6E3F               	movwf	(btemp+10)^0,c
 10207  010566  0E00               	movlw	0
 10208  010568  6E40               	movwf	(btemp+11)^0,c
 10209                           
 10210                           ;stkvar	_p @ sp[(-56)+40]
 10211  01056A  0EF0               	movlw	-16
 10212  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10213  010572  0EF1               	movlw	-15
 10214  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 10215  01057A  D00C               	goto	l9159
 10216  01057C                     l9151:
 10217                           
 10218                           ;stkvar	_p @ sp[(-56)+40]
 10219  01057C  0EF0               	movlw	-16
 10220  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 10221  010584  0EF1               	movlw	-15
 10222  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 10223  01058C  D003               	goto	l9159
 10224  01058E                     l9153:
 10225                           
 10226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10227  01058E  AE21               	btfss	(_prec+1)^0,7,c
 10228  010590  D7F5               	goto	l9151
 10229  010592  D7E7               	goto	u8930
 10230  010594                     l9159:
 10231                           
 10232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10233                           ;stkvar	_mode @ sp[(-56)+54]
 10234  010594  0EFE               	movlw	-2
 10235  010596  006F FF8C  F035    	movff	plusw1,btemp
 10236  01059C  0E67               	movlw	103
 10237  01059E  1835               	xorwf	btemp^0,w,c
 10238  0105A0  A4D8               	btfss	status,2,c
 10239  0105A2  D02F               	goto	l9169
 10240                           
 10241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10242                           ;stkvar	_e @ sp[(-56)+34]
 10243  0105A4  0EEB               	movlw	-21
 10244  0105A6  AEE3               	btfss	plusw1,7,c
 10245  0105A8  D00E               	goto	u8960
 10246  0105AA  0EEA               	movlw	-22
 10247  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 10248  0105B2  0EFC               	movlw	252
 10249  0105B4  5E35               	subwf	btemp^0,f,c
 10250  0105B6  0EEB               	movlw	-21
 10251  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 10252  0105BE  0EFF               	movlw	255
 10253  0105C0  5A35               	subwfb	btemp^0,f,c
 10254  0105C2  A0D8               	btfss	status,0,c
 10255  0105C4  D018               	goto	l9167
 10256  0105C6                     u8960:
 10257                           
 10258                           ;stkvar	_e @ sp[(-56)+34]
 10259                           ;stkvar	_p @ sp[(-56)+40]
 10260  0105C6  0EF0               	movlw	-16
 10261  0105C8  50E3               	movf	plusw1,w,c
 10262  0105CA  0FFF               	addlw	255
 10263  0105CC  6E3F               	movwf	(btemp+10)^0,c
 10264  0105CE  0EF1               	movlw	-15
 10265  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 10266  0105D6  0EFF               	movlw	255
 10267  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 10268  0105DA  0EEA               	movlw	-22
 10269  0105DC  50E3               	movf	plusw1,w,c
 10270  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 10271  0105E0  5040               	movf	(btemp+11)^0,w,c
 10272  0105E2  0A80               	xorlw	128
 10273  0105E4  6E35               	movwf	btemp^0,c
 10274  0105E6  0EEB               	movlw	-21
 10275  0105E8  50E3               	movf	plusw1,w,c
 10276  0105EA  0A80               	xorlw	128
 10277  0105EC  5835               	subwfb	btemp^0,w,c
 10278  0105EE  A0D8               	btfss	status,0,c
 10279  0105F0  D002               	goto	l9167
 10280                           
 10281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10282  0105F2  0E66               	movlw	102
 10283  0105F4  D001               	goto	L8
 10284  0105F6                     l9167:
 10285                           
 10286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10287  0105F6  0E65               	movlw	101
 10288  0105F8                     L8:
 10289  0105F8  6E40               	movwf	(btemp+11)^0,c
 10290                           
 10291                           ;stkvar	_nmode @ sp[(-56)+55]
 10292  0105FA  0EFF               	movlw	-1
 10293  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10294  010602                     l9169:
 10295                           
 10296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10297                           ;stkvar	_p @ sp[(-56)+40]
 10298                           ;stkvar	_m @ sp[(-56)+48]
 10299  010602  0EF0               	movlw	-16
 10300  010604  006F FF8C  F035    	movff	plusw1,btemp
 10301  01060A  0EF8               	movlw	-8
 10302  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10303  010612  0EF1               	movlw	-15
 10304  010614  006F FF8C  F035    	movff	plusw1,btemp
 10305  01061A  0EF9               	movlw	-7
 10306  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10307                           
 10308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10309                           ;stkvar	_mode @ sp[(-56)+54]
 10310  010622  0EFE               	movlw	-2
 10311  010624  006F FF8C  F035    	movff	plusw1,btemp
 10312  01062A  0E67               	movlw	103
 10313  01062C  1835               	xorwf	btemp^0,w,c
 10314  01062E  A4D8               	btfss	status,2,c
 10315  010630  D00B               	goto	u9000
 10316                           
 10317                           ;stkvar	_nmode @ sp[(-56)+55]
 10318  010632  0EFF               	movlw	-1
 10319  010634  006F FF8C  F035    	movff	plusw1,btemp
 10320  01063A  0E66               	movlw	102
 10321  01063C  1835               	xorwf	btemp^0,w,c
 10322  01063E  A4D8               	btfss	status,2,c
 10323  010640  D014               	goto	l1825
 10324                           
 10325                           ;stkvar	_e @ sp[(-56)+34]
 10326  010642  0EEB               	movlw	-21
 10327  010644  AEE3               	btfss	plusw1,7,c
 10328  010646  D011               	goto	l1825
 10329  010648                     u9000:
 10330                           
 10331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10332                           ;stkvar	_m @ sp[(-56)+48]
 10333  010648  0EF8               	movlw	-8
 10334  01064A  50E3               	movf	plusw1,w,c
 10335  01064C  0F01               	addlw	1
 10336  01064E  6E35               	movwf	btemp^0,c
 10337  010650  0EF8               	movlw	-8
 10338  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10339  010658  6A35               	clrf	btemp^0,c
 10340  01065A  0EF9               	movlw	-7
 10341  01065C  50E3               	movf	plusw1,w,c
 10342  01065E  2035               	addwfc	btemp^0,w,c
 10343  010660  6E35               	movwf	btemp^0,c
 10344  010662  0EF9               	movlw	-7
 10345  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10346  01066A                     l1825:
 10347                           
 10348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10349                           ;stkvar	_nmode @ sp[(-56)+55]
 10350  01066A  0EFF               	movlw	-1
 10351  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10352  010672  0E66               	movlw	102
 10353  010674  1835               	xorwf	btemp^0,w,c
 10354  010676  A4D8               	btfss	status,2,c
 10355  010678  D03B               	goto	l9189
 10356                           
 10357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10358                           ;stkvar	_e @ sp[(-56)+34]
 10359  01067A  0EEB               	movlw	-21
 10360  01067C  AEE3               	btfss	plusw1,7,c
 10361  01067E  D01C               	goto	l9185
 10362                           
 10363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10364  010680  0E00               	movlw	0
 10365  010682  6E3D               	movwf	(btemp+8)^0,c
 10366  010684  0E00               	movlw	0
 10367  010686  6E3E               	movwf	(btemp+9)^0,c
 10368  010688  0E80               	movlw	128
 10369  01068A  6E3F               	movwf	(btemp+10)^0,c
 10370  01068C  0E3F               	movlw	63
 10371  01068E  6E40               	movwf	(btemp+11)^0,c
 10372                           
 10373                           ;stkvar	_u @ sp[(-56)+12]
 10374  010690  0ED4               	movlw	-44
 10375  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10376  010698  0ED5               	movlw	-43
 10377  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10378  0106A0  0ED6               	movlw	-42
 10379  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10380  0106A8  0ED7               	movlw	-41
 10381  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10384                           ;stkvar	_e @ sp[(-56)+34]
 10385  0106B0  0EEA               	movlw	-22
 10386  0106B2  6AE3               	clrf	plusw1,c
 10387  0106B4  0EEB               	movlw	-21
 10388  0106B6  6AE3               	clrf	plusw1,c
 10389  0106B8                     l9185:
 10390                           
 10391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10392                           ;stkvar	_mode @ sp[(-56)+54]
 10393  0106B8  0EFE               	movlw	-2
 10394  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10395  0106C0  0E67               	movlw	103
 10396  0106C2  1835               	xorwf	btemp^0,w,c
 10397  0106C4  B4D8               	btfsc	status,2,c
 10398  0106C6  D014               	goto	l9189
 10399                           
 10400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10401                           ;stkvar	_e @ sp[(-56)+34]
 10402                           ;stkvar	_m @ sp[(-56)+48]
 10403  0106C8  0EF8               	movlw	-8
 10404  0106CA  50E3               	movf	plusw1,w,c
 10405  0106CC  6E35               	movwf	btemp^0,c
 10406  0106CE  0EEA               	movlw	-22
 10407  0106D0  50E3               	movf	plusw1,w,c
 10408  0106D2  2635               	addwf	btemp^0,f,c
 10409  0106D4  0EF8               	movlw	-8
 10410  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10411  0106DC  0EF9               	movlw	-7
 10412  0106DE  50E3               	movf	plusw1,w,c
 10413  0106E0  6E35               	movwf	btemp^0,c
 10414  0106E2  0EEB               	movlw	-21
 10415  0106E4  50E3               	movf	plusw1,w,c
 10416  0106E6  2235               	addwfc	btemp^0,f,c
 10417  0106E8  0EF9               	movlw	-7
 10418  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10419  0106F0                     l9189:
 10420                           
 10421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10422                           ;stkvar	_i @ sp[(-56)+36]
 10423  0106F0  0EEC               	movlw	-20
 10424  0106F2  6AE3               	clrf	plusw1,c
 10425  0106F4  0EED               	movlw	-19
 10426  0106F6  6AE3               	clrf	plusw1,c
 10427                           
 10428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10429                           ;stkvar	_g @ sp[(-56)+16]
 10430  0106F8  0ED8               	movlw	-40
 10431  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10432  010700  0ED9               	movlw	-39
 10433  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10434  010708  0EDA               	movlw	-38
 10435  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10436  010710  0EDB               	movlw	-37
 10437  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10438                           
 10439                           ;stkvar	_h @ sp[(-56)+24]
 10440  010718  0EE0               	movlw	-32
 10441  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10442  010720  0EE1               	movlw	-31
 10443  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10444  010728  0EE2               	movlw	-30
 10445  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10446  010730  0EE3               	movlw	-29
 10447  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10448                           
 10449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10450                           ;stkvar	_u @ sp[(-56)+12]
 10451  010738  0ED4               	movlw	-44
 10452  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10453  010740  0ED5               	movlw	-43
 10454  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10455  010748  0ED6               	movlw	-42
 10456  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10457  010750  0ED7               	movlw	-41
 10458  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10459                           
 10460                           ;stkvar	_ou @ sp[(-56)+28]
 10461  010758  0EE4               	movlw	-28
 10462  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10463  010760  0EE5               	movlw	-27
 10464  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10465  010768  0EE6               	movlw	-26
 10466  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10467  010770  0EE7               	movlw	-25
 10468  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10469                           
 10470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10471  010778  D0D6               	goto	l9205
 10472  01077A                     l9195:
 10473                           
 10474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10475                           ;stkvar	_u @ sp[(-56)+12]
 10476  01077A  0ED4               	movlw	-44
 10477  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10478  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10479  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10480  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10481                           
 10482                           ;stkvar	_h @ sp[(-60)+24]
 10483  010794  0EDC               	movlw	-36
 10484  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10485  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10486  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10487  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10488  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10489  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10490  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10491  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10492  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10493  0107CA  EC52  F0A1         	call	_floorf	;wreg free
 10494                           
 10495                           ;stkvar	_l @ sp[(-56)+20]
 10496  0107CE  0EDC               	movlw	-36
 10497  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10498  0107D6  0EDD               	movlw	-35
 10499  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10500  0107DE  0EDE               	movlw	-34
 10501  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10502  0107E6  0EDF               	movlw	-33
 10503  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10504                           
 10505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10506                           ;stkvar	_l @ sp[(-56)+20]
 10507  0107EE  0EDC               	movlw	-36
 10508  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10509  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10510  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10511  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10512  010808  EC11  F0AE         	call	___fltol	;wreg free
 10513  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10514  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10515                           
 10516                           ;stkvar	_d @ sp[(-56)+44]
 10517  010818  0EF4               	movlw	-12
 10518  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10519  010820  0EF5               	movlw	-11
 10520  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10521                           
 10522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10523                           ;stkvar	_u @ sp[(-56)+12]
 10524  010828  0ED4               	movlw	-44
 10525  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10526  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10527  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10528  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10529                           
 10530                           ;stkvar	_l @ sp[(-60)+20]
 10531  010842  0ED8               	movlw	-40
 10532  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10534  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10535  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10537  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10538  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10539  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10540  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10541                           
 10542                           ;stkvar	_h @ sp[(-60)+24]
 10543  010878  0EDC               	movlw	-36
 10544  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10545  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10546  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10547  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10548  010892  ECA4  F0BB         	call	___flsub	;wreg free
 10549                           
 10550                           ;stkvar	_h @ sp[(-56)+24]
 10551  010896  0EE0               	movlw	-32
 10552  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10553  01089E  0EE1               	movlw	-31
 10554  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10555  0108A6  0EE2               	movlw	-30
 10556  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10557  0108AE  0EE3               	movlw	-29
 10558  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10559                           
 10560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10561  0108B6  0E00               	movlw	0
 10562  0108B8  6EE6               	movwf	postinc1,c
 10563  0108BA  0E00               	movlw	0
 10564  0108BC  6EE6               	movwf	postinc1,c
 10565  0108BE  0E20               	movlw	32
 10566  0108C0  6EE6               	movwf	postinc1,c
 10567  0108C2  0E41               	movlw	65
 10568  0108C4  6EE6               	movwf	postinc1,c
 10569                           
 10570                           ;stkvar	_u @ sp[(-60)+12]
 10571  0108C6  0ED0               	movlw	-48
 10572  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10573  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10574  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10575  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10576  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10577                           
 10578                           ;stkvar	_u @ sp[(-56)+12]
 10579  0108E4  0ED4               	movlw	-44
 10580  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10581  0108EC  0ED5               	movlw	-43
 10582  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10583  0108F4  0ED6               	movlw	-42
 10584  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10585  0108FC  0ED7               	movlw	-41
 10586  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10587                           
 10588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10589                           ;stkvar	_i @ sp[(-56)+36]
 10590  010904  0EEC               	movlw	-20
 10591  010906  50E3               	movf	plusw1,w,c
 10592  010908  0F01               	addlw	1
 10593  01090A  6E35               	movwf	btemp^0,c
 10594  01090C  0EEC               	movlw	-20
 10595  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10596  010914  6A35               	clrf	btemp^0,c
 10597  010916  0EED               	movlw	-19
 10598  010918  50E3               	movf	plusw1,w,c
 10599  01091A  2035               	addwfc	btemp^0,w,c
 10600  01091C  6E35               	movwf	btemp^0,c
 10601  01091E  0EED               	movlw	-19
 10602  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10603  010926                     l9205:
 10604                           
 10605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10606                           ;stkvar	_m @ sp[(-56)+48]
 10607                           ;stkvar	_i @ sp[(-56)+36]
 10608  010926  50E1               	movf	fsr1l,w,c
 10609  010928  0FEC               	addlw	-20
 10610  01092A  6ED9               	movwf	fsr2l,c
 10611  01092C  50E2               	movf	fsr1h,w,c
 10612  01092E  6EDA               	movwf	fsr2h,c
 10613  010930  0EFF               	movlw	255
 10614  010932  22DA               	addwfc	fsr2h,f,c
 10615  010934  0EF8               	movlw	-8
 10616  010936  50E3               	movf	plusw1,w,c
 10617  010938  5CDE               	subwf	postinc2,w,c
 10618  01093A  50DE               	movf	postinc2,w,c
 10619  01093C  0A80               	xorlw	128
 10620  01093E  6E35               	movwf	btemp^0,c
 10621  010940  0EF9               	movlw	-7
 10622  010942  50E3               	movf	plusw1,w,c
 10623  010944  0A80               	xorlw	128
 10624  010946  5835               	subwfb	btemp^0,w,c
 10625  010948  A0D8               	btfss	status,0,c
 10626  01094A  D717               	goto	l9195
 10627                           
 10628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10629  01094C  0E00               	movlw	0
 10630  01094E  6EE6               	movwf	postinc1,c
 10631  010950  0E00               	movlw	0
 10632  010952  6EE6               	movwf	postinc1,c
 10633  010954  0EA0               	movlw	160
 10634  010956  6EE6               	movwf	postinc1,c
 10635  010958  0E40               	movlw	64
 10636  01095A  6EE6               	movwf	postinc1,c
 10637                           
 10638                           ;stkvar	_u @ sp[(-60)+12]
 10639  01095C  0ED0               	movlw	-48
 10640  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10641  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10642  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10643  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  010976  ECC1  F08E         	call	___flmul	;wreg free
 10645                           
 10646                           ;stkvar	_l @ sp[(-56)+20]
 10647  01097A  0EDC               	movlw	-36
 10648  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10649  010982  0EDD               	movlw	-35
 10650  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10651  01098A  0EDE               	movlw	-34
 10652  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10653  010992  0EDF               	movlw	-33
 10654  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10655                           
 10656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10657                           ;stkvar	_l @ sp[(-56)+20]
 10658  01099A  0EDC               	movlw	-36
 10659  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10662  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10663                           
 10664                           ;stkvar	_h @ sp[(-60)+24]
 10665  0109B4  0EDC               	movlw	-36
 10666  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10667  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10668  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10669  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10670  0109CE  ECCA  F0AE         	call	___flge	;wreg free
 10671  0109D2  A035               	btfss	btemp& (0+255),0,c
 10672  0109D4  D021               	goto	u9070
 10673                           
 10674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10675                           ;stkvar	_l @ sp[(-56)+20]
 10676                           
 10677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10678                           
 10679                           ;stkvar	_l @ sp[(-56)+20]
 10680                           
 10681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10682  0109D6  0EDC               	movlw	-36
 10683  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10684  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10685  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10686  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10687                           
 10688                           ;stkvar	_h @ sp[(-60)+24]
 10689  0109F0  0EDC               	movlw	-36
 10690  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10691  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10692  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10693  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10694  010A0A  ECAF  F0B4         	call	___fleq	;wreg free
 10695  010A0E  A035               	btfss	btemp& (0+255),0,c
 10696  010A10  D01B               	goto	l9219
 10697                           
 10698                           ;stkvar	_d @ sp[(-56)+44]
 10699  010A12  0EF4               	movlw	-12
 10700  010A14  B0E3               	btfsc	plusw1,0,c
 10701  010A16  D018               	goto	l9219
 10702  010A18                     u9070:
 10703                           
 10704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10705  010A18  0E00               	movlw	0
 10706  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10707  010A1C  0E00               	movlw	0
 10708  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10709  010A20  0E00               	movlw	0
 10710  010A22  6E3F               	movwf	(btemp+10)^0,c
 10711  010A24  0E00               	movlw	0
 10712  010A26  6E40               	movwf	(btemp+11)^0,c
 10713                           
 10714                           ;stkvar	_l @ sp[(-56)+20]
 10715  010A28  0EDC               	movlw	-36
 10716  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10717  010A30  0EDD               	movlw	-35
 10718  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10719  010A38  0EDE               	movlw	-34
 10720  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10721  010A40  0EDF               	movlw	-33
 10722  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10723  010A48                     l9219:
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10726                           ;stkvar	_l @ sp[(-56)+20]
 10727  010A48  0EDC               	movlw	-36
 10728  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10729  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10730  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10731  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10732                           
 10733                           ;stkvar	_g @ sp[(-60)+16]
 10734  010A62  0ED4               	movlw	-44
 10735  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10736  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10737  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10738  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10739  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10740                           
 10741                           ;stkvar	_h @ sp[(-56)+24]
 10742  010A80  0EE0               	movlw	-32
 10743  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10744  010A88  0EE1               	movlw	-31
 10745  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10746  010A90  0EE2               	movlw	-30
 10747  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10748  010A98  0EE3               	movlw	-29
 10749  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10750                           
 10751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10752                           ;stkvar	_ou @ sp[(-56)+28]
 10753  010AA0  0EE4               	movlw	-28
 10754  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10755  010AA8  0EE5               	movlw	-27
 10756  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10757  010AB0  0EE6               	movlw	-26
 10758  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10759  010AB8  0EE7               	movlw	-25
 10760  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10761                           
 10762                           ;stkvar	_u @ sp[(-56)+12]
 10763  010AC0  0ED4               	movlw	-44
 10764  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10765  010AC8  0ED5               	movlw	-43
 10766  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10767  010AD0  0ED6               	movlw	-42
 10768  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10769  010AD8  0ED7               	movlw	-41
 10770  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10771                           
 10772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10773                           ;stkvar	_nmode @ sp[(-56)+55]
 10774  010AE0  0EFF               	movlw	-1
 10775  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10776  010AE8  0E65               	movlw	101
 10777  010AEA  1835               	xorwf	btemp^0,w,c
 10778  010AEC  B4D8               	btfsc	status,2,c
 10779  010AEE  D011               	goto	l9227
 10780                           
 10781                           ;stkvar	_e @ sp[(-56)+34]
 10782                           ;stkvar	_ne @ sp[(-56)+46]
 10783  010AF0  0EEA               	movlw	-22
 10784  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10785  010AF8  0EF6               	movlw	-10
 10786  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10787  010B00  0EEB               	movlw	-21
 10788  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10789  010B08  0EF7               	movlw	-9
 10790  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10791  010B10  D004               	goto	l1840
 10792  010B12                     l9227:
 10793                           
 10794                           ;stkvar	_ne @ sp[(-56)+46]
 10795  010B12  0EF6               	movlw	-10
 10796  010B14  6AE3               	clrf	plusw1,c
 10797  010B16  0EF7               	movlw	-9
 10798  010B18  6AE3               	clrf	plusw1,c
 10799  010B1A                     l1840:
 10800                           
 10801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10802                           ;stkvar	_pp @ sp[(-56)+50]
 10803  010B1A  0EFA               	movlw	-6
 10804  010B1C  6AE3               	clrf	plusw1,c
 10805  010B1E  0EFB               	movlw	-5
 10806  010B20  6AE3               	clrf	plusw1,c
 10807                           
 10808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10809                           ;stkvar	_t @ sp[(-56)+52]
 10810  010B22  0EFC               	movlw	-4
 10811  010B24  6AE3               	clrf	plusw1,c
 10812  010B26  0EFD               	movlw	-3
 10813  010B28  6AE3               	clrf	plusw1,c
 10814                           
 10815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10816                           ;stkvar	_i @ sp[(-56)+36]
 10817  010B2A  0EEC               	movlw	-20
 10818  010B2C  6AE3               	clrf	plusw1,c
 10819  010B2E  0EED               	movlw	-19
 10820  010B30  6AE3               	clrf	plusw1,c
 10821                           
 10822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10823  010B32  D1B7               	goto	l9279
 10824  010B34                     l9229:
 10825                           
 10826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10827                           ;stkvar	_u @ sp[(-56)+12]
 10828  010B34  0ED4               	movlw	-44
 10829  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10830  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10831  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10832  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10833                           
 10834                           ;stkvar	_h @ sp[(-60)+24]
 10835  010B4E  0EDC               	movlw	-36
 10836  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10837  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10838  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10839  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10840  010B68  ECB4  F096         	call	___fldiv	;wreg free
 10841  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10842  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10843  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10844  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10845  010B84  EC52  F0A1         	call	_floorf	;wreg free
 10846                           
 10847                           ;stkvar	_l @ sp[(-56)+20]
 10848  010B88  0EDC               	movlw	-36
 10849  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10850  010B90  0EDD               	movlw	-35
 10851  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10852  010B98  0EDE               	movlw	-34
 10853  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10854  010BA0  0EDF               	movlw	-33
 10855  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10856                           
 10857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10858                           ;stkvar	_l @ sp[(-56)+20]
 10859  010BA8  0EDC               	movlw	-36
 10860  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10861  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10862  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10863  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10864  010BC2  EC11  F0AE         	call	___fltol	;wreg free
 10865  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10866  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10867                           
 10868                           ;stkvar	_d @ sp[(-56)+44]
 10869  010BD2  0EF4               	movlw	-12
 10870  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10871  010BDA  0EF5               	movlw	-11
 10872  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10873                           
 10874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10875  010BE2  B822               	btfsc	_flags^0,4,c
 10876  010BE4  D026               	goto	l9243
 10877                           
 10878                           ;stkvar	_d @ sp[(-56)+44]
 10879  010BE6  0EF4               	movlw	-12
 10880  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10881  010BEE  0EF5               	movlw	-11
 10882  010BF0  50E3               	movf	plusw1,w,c
 10883  010BF2  1035               	iorwf	btemp^0,w,c
 10884  010BF4  A4D8               	btfss	status,2,c
 10885  010BF6  D01D               	goto	l9243
 10886                           
 10887                           ;stkvar	_mode @ sp[(-56)+54]
 10888  010BF8  0EFE               	movlw	-2
 10889  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10890  010C00  0E67               	movlw	103
 10891  010C02  1835               	xorwf	btemp^0,w,c
 10892  010C04  A4D8               	btfss	status,2,c
 10893  010C06  D015               	goto	l9243
 10894                           
 10895                           ;stkvar	_ne @ sp[(-56)+46]
 10896  010C08  0EF7               	movlw	-9
 10897  010C0A  AEE3               	btfss	plusw1,7,c
 10898  010C0C  D012               	goto	l9243
 10899                           
 10900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10901                           ;stkvar	_t @ sp[(-56)+52]
 10902  010C0E  0EFC               	movlw	-4
 10903  010C10  50E3               	movf	plusw1,w,c
 10904  010C12  0F01               	addlw	1
 10905  010C14  6E35               	movwf	btemp^0,c
 10906  010C16  0EFC               	movlw	-4
 10907  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10908  010C1E  6A35               	clrf	btemp^0,c
 10909  010C20  0EFD               	movlw	-3
 10910  010C22  50E3               	movf	plusw1,w,c
 10911  010C24  2035               	addwfc	btemp^0,w,c
 10912  010C26  6E35               	movwf	btemp^0,c
 10913  010C28  0EFD               	movlw	-3
 10914  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10915                           
 10916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10917  010C30  D0AF               	goto	l9271
 10918  010C32                     l9243:
 10919                           
 10920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10921                           ;stkvar	_pp @ sp[(-56)+50]
 10922  010C32  0EFA               	movlw	-6
 10923  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10924  010C3A  0EFB               	movlw	-5
 10925  010C3C  50E3               	movf	plusw1,w,c
 10926  010C3E  1035               	iorwf	btemp^0,w,c
 10927  010C40  A4D8               	btfss	status,2,c
 10928  010C42  D070               	goto	l9263
 10929                           
 10930                           ;stkvar	_ne @ sp[(-56)+46]
 10931  010C44  0EF7               	movlw	-9
 10932  010C46  AEE3               	btfss	plusw1,7,c
 10933  010C48  D06D               	goto	l9263
 10934                           
 10935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10936                           ;stkvar	_n @ sp[(-56)+32]
 10937  010C4A  0EE8               	movlw	-24
 10938  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10939  010C52  0EE9               	movlw	-23
 10940  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10941  010C5A  0EAB               	movlw	low _dbuf
 10942  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10943  010C5E  6ED9               	movwf	fsr2l,c
 10944  010C60  0E01               	movlw	high _dbuf
 10945  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10946  010C64  6EDA               	movwf	fsr2h,c
 10947  010C66  0E2E               	movlw	46
 10948  010C68  6EDF               	movwf	indf2,c
 10949                           
 10950                           ;stkvar	_n @ sp[(-56)+32]
 10951  010C6A  0EE8               	movlw	-24
 10952  010C6C  50E3               	movf	plusw1,w,c
 10953  010C6E  0F01               	addlw	1
 10954  010C70  6E35               	movwf	btemp^0,c
 10955  010C72  0EE8               	movlw	-24
 10956  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10957  010C7A  6A35               	clrf	btemp^0,c
 10958  010C7C  0EE9               	movlw	-23
 10959  010C7E  50E3               	movf	plusw1,w,c
 10960  010C80  2035               	addwfc	btemp^0,w,c
 10961  010C82  6E35               	movwf	btemp^0,c
 10962  010C84  0EE9               	movlw	-23
 10963  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10964                           
 10965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10966                           ;stkvar	_w @ sp[(-56)+38]
 10967  010C8C  50E1               	movf	fsr1l,w,c
 10968  010C8E  0FEE               	addlw	-18
 10969  010C90  6ED9               	movwf	fsr2l,c
 10970  010C92  50E2               	movf	fsr1h,w,c
 10971  010C94  6EDA               	movwf	fsr2h,c
 10972  010C96  0EFF               	movlw	255
 10973  010C98  22DA               	addwfc	fsr2h,f,c
 10974  010C9A  06DE               	decf	postinc2,f,c
 10975  010C9C  0E00               	movlw	0
 10976  010C9E  5ADD               	subwfb	postdec2,f,c
 10977                           
 10978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10979  010CA0  0E01               	movlw	1
 10980  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10981  010CA4  0E00               	movlw	0
 10982  010CA6  6E40               	movwf	(btemp+11)^0,c
 10983                           
 10984                           ;stkvar	_pp @ sp[(-56)+50]
 10985  010CA8  0EFA               	movlw	-6
 10986  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10987  010CB0  0EFB               	movlw	-5
 10988  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10989  010CB8  D035               	goto	l9263
 10990  010CBA                     l9255:
 10991                           
 10992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10993                           ;stkvar	_n @ sp[(-56)+32]
 10994  010CBA  0EE8               	movlw	-24
 10995  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10996  010CC2  0EE9               	movlw	-23
 10997  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 10998  010CCA  0EAB               	movlw	low _dbuf
 10999  010CCC  243F               	addwf	(btemp+10)^0,w,c
 11000  010CCE  6ED9               	movwf	fsr2l,c
 11001  010CD0  0E01               	movlw	high _dbuf
 11002  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 11003  010CD4  6EDA               	movwf	fsr2h,c
 11004  010CD6  0E30               	movlw	48
 11005  010CD8  6EDF               	movwf	indf2,c
 11006                           
 11007                           ;stkvar	_n @ sp[(-56)+32]
 11008  010CDA  0EE8               	movlw	-24
 11009  010CDC  50E3               	movf	plusw1,w,c
 11010  010CDE  0F01               	addlw	1
 11011  010CE0  6E35               	movwf	btemp^0,c
 11012  010CE2  0EE8               	movlw	-24
 11013  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 11014  010CEA  6A35               	clrf	btemp^0,c
 11015  010CEC  0EE9               	movlw	-23
 11016  010CEE  50E3               	movf	plusw1,w,c
 11017  010CF0  2035               	addwfc	btemp^0,w,c
 11018  010CF2  6E35               	movwf	btemp^0,c
 11019  010CF4  0EE9               	movlw	-23
 11020  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11021                           
 11022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11023                           ;stkvar	_w @ sp[(-56)+38]
 11024  010CFC  50E1               	movf	fsr1l,w,c
 11025  010CFE  0FEE               	addlw	-18
 11026  010D00  6ED9               	movwf	fsr2l,c
 11027  010D02  50E2               	movf	fsr1h,w,c
 11028  010D04  6EDA               	movwf	fsr2h,c
 11029  010D06  0EFF               	movlw	255
 11030  010D08  22DA               	addwfc	fsr2h,f,c
 11031  010D0A  06DE               	decf	postinc2,f,c
 11032  010D0C  0E00               	movlw	0
 11033  010D0E  5ADD               	subwfb	postdec2,f,c
 11034                           
 11035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11036                           ;stkvar	_t @ sp[(-56)+52]
 11037  010D10  50E1               	movf	fsr1l,w,c
 11038  010D12  0FFC               	addlw	-4
 11039  010D14  6ED9               	movwf	fsr2l,c
 11040  010D16  50E2               	movf	fsr1h,w,c
 11041  010D18  6EDA               	movwf	fsr2h,c
 11042  010D1A  0EFF               	movlw	255
 11043  010D1C  22DA               	addwfc	fsr2h,f,c
 11044  010D1E  06DE               	decf	postinc2,f,c
 11045  010D20  0E00               	movlw	0
 11046  010D22  5ADD               	subwfb	postdec2,f,c
 11047  010D24                     l9263:
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11050                           ;stkvar	_t @ sp[(-56)+52]
 11051  010D24  0EFC               	movlw	-4
 11052  010D26  006F FF8C  F035    	movff	plusw1,btemp
 11053  010D2C  0EFD               	movlw	-3
 11054  010D2E  50E3               	movf	plusw1,w,c
 11055  010D30  1035               	iorwf	btemp^0,w,c
 11056  010D32  A4D8               	btfss	status,2,c
 11057  010D34  D7C2               	goto	l9255
 11058                           
 11059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11060                           ;stkvar	_n @ sp[(-56)+32]
 11061  010D36  0EE8               	movlw	-24
 11062  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 11063  010D3E  0EE9               	movlw	-23
 11064  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 11065  010D46  0EAB               	movlw	low _dbuf
 11066  010D48  243F               	addwf	(btemp+10)^0,w,c
 11067  010D4A  6ED9               	movwf	fsr2l,c
 11068  010D4C  0E01               	movlw	high _dbuf
 11069  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 11070  010D50  6EDA               	movwf	fsr2h,c
 11071                           
 11072                           ;stkvar	_d @ sp[(-56)+44]
 11073  010D52  0EF4               	movlw	-12
 11074  010D54  50E3               	movf	plusw1,w,c
 11075  010D56  0F30               	addlw	48
 11076  010D58  6EDF               	movwf	indf2,c
 11077                           
 11078                           ;stkvar	_n @ sp[(-56)+32]
 11079  010D5A  0EE8               	movlw	-24
 11080  010D5C  50E3               	movf	plusw1,w,c
 11081  010D5E  0F01               	addlw	1
 11082  010D60  6E35               	movwf	btemp^0,c
 11083  010D62  0EE8               	movlw	-24
 11084  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 11085  010D6A  6A35               	clrf	btemp^0,c
 11086  010D6C  0EE9               	movlw	-23
 11087  010D6E  50E3               	movf	plusw1,w,c
 11088  010D70  2035               	addwfc	btemp^0,w,c
 11089  010D72  6E35               	movwf	btemp^0,c
 11090  010D74  0EE9               	movlw	-23
 11091  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 11092                           
 11093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11094                           ;stkvar	_w @ sp[(-56)+38]
 11095  010D7C  50E1               	movf	fsr1l,w,c
 11096  010D7E  0FEE               	addlw	-18
 11097  010D80  6ED9               	movwf	fsr2l,c
 11098  010D82  50E2               	movf	fsr1h,w,c
 11099  010D84  6EDA               	movwf	fsr2h,c
 11100  010D86  0EFF               	movlw	255
 11101  010D88  22DA               	addwfc	fsr2h,f,c
 11102  010D8A  06DE               	decf	postinc2,f,c
 11103  010D8C  0E00               	movlw	0
 11104  010D8E  5ADD               	subwfb	postdec2,f,c
 11105  010D90                     l9271:
 11106                           
 11107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11108                           ;stkvar	_u @ sp[(-56)+12]
 11109  010D90  0ED4               	movlw	-44
 11110  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11111  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11112  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11113  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11114                           
 11115                           ;stkvar	_l @ sp[(-60)+20]
 11116  010DAA  0ED8               	movlw	-40
 11117  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11122  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 11123  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11124  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11125  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11126                           
 11127                           ;stkvar	_h @ sp[(-60)+24]
 11128  010DE0  0EDC               	movlw	-36
 11129  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11130  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11131  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11132  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11133  010DFA  ECA4  F0BB         	call	___flsub	;wreg free
 11134                           
 11135                           ;stkvar	_h @ sp[(-56)+24]
 11136  010DFE  0EE0               	movlw	-32
 11137  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 11138  010E06  0EE1               	movlw	-31
 11139  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11140  010E0E  0EE2               	movlw	-30
 11141  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11142  010E16  0EE3               	movlw	-29
 11143  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11146  010E1E  0E00               	movlw	0
 11147  010E20  6EE6               	movwf	postinc1,c
 11148  010E22  0E00               	movlw	0
 11149  010E24  6EE6               	movwf	postinc1,c
 11150  010E26  0E20               	movlw	32
 11151  010E28  6EE6               	movwf	postinc1,c
 11152  010E2A  0E41               	movlw	65
 11153  010E2C  6EE6               	movwf	postinc1,c
 11154                           
 11155                           ;stkvar	_u @ sp[(-60)+12]
 11156  010E2E  0ED0               	movlw	-48
 11157  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11158  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11162                           
 11163                           ;stkvar	_u @ sp[(-56)+12]
 11164  010E4C  0ED4               	movlw	-44
 11165  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11166  010E54  0ED5               	movlw	-43
 11167  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11168  010E5C  0ED6               	movlw	-42
 11169  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11170  010E64  0ED7               	movlw	-41
 11171  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11172                           
 11173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11174                           ;stkvar	_ne @ sp[(-56)+46]
 11175  010E6C  50E1               	movf	fsr1l,w,c
 11176  010E6E  0FF6               	addlw	-10
 11177  010E70  6ED9               	movwf	fsr2l,c
 11178  010E72  50E2               	movf	fsr1h,w,c
 11179  010E74  6EDA               	movwf	fsr2h,c
 11180  010E76  0EFF               	movlw	255
 11181  010E78  22DA               	addwfc	fsr2h,f,c
 11182  010E7A  06DE               	decf	postinc2,f,c
 11183  010E7C  0E00               	movlw	0
 11184  010E7E  5ADD               	subwfb	postdec2,f,c
 11185                           
 11186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11187                           ;stkvar	_i @ sp[(-56)+36]
 11188  010E80  0EEC               	movlw	-20
 11189  010E82  50E3               	movf	plusw1,w,c
 11190  010E84  0F01               	addlw	1
 11191  010E86  6E35               	movwf	btemp^0,c
 11192  010E88  0EEC               	movlw	-20
 11193  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11194  010E90  6A35               	clrf	btemp^0,c
 11195  010E92  0EED               	movlw	-19
 11196  010E94  50E3               	movf	plusw1,w,c
 11197  010E96  2035               	addwfc	btemp^0,w,c
 11198  010E98  6E35               	movwf	btemp^0,c
 11199  010E9A  0EED               	movlw	-19
 11200  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11201  010EA2                     l9279:
 11202                           
 11203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11204                           ;stkvar	_m @ sp[(-56)+48]
 11205                           ;stkvar	_i @ sp[(-56)+36]
 11206  010EA2  50E1               	movf	fsr1l,w,c
 11207  010EA4  0FEC               	addlw	-20
 11208  010EA6  6ED9               	movwf	fsr2l,c
 11209  010EA8  50E2               	movf	fsr1h,w,c
 11210  010EAA  6EDA               	movwf	fsr2h,c
 11211  010EAC  0EFF               	movlw	255
 11212  010EAE  22DA               	addwfc	fsr2h,f,c
 11213  010EB0  0EF8               	movlw	-8
 11214  010EB2  50E3               	movf	plusw1,w,c
 11215  010EB4  5CDE               	subwf	postinc2,w,c
 11216  010EB6  50DE               	movf	postinc2,w,c
 11217  010EB8  0A80               	xorlw	128
 11218  010EBA  6E35               	movwf	btemp^0,c
 11219  010EBC  0EF9               	movlw	-7
 11220  010EBE  50E3               	movf	plusw1,w,c
 11221  010EC0  0A80               	xorlw	128
 11222  010EC2  5835               	subwfb	btemp^0,w,c
 11223  010EC4  B0D8               	btfsc	status,0,c
 11224  010EC6  D00E               	goto	u9170
 11225                           
 11226                           ;stkvar	_n @ sp[(-56)+32]
 11227  010EC8  0EE9               	movlw	-23
 11228  010ECA  BEE3               	btfsc	plusw1,7,c
 11229  010ECC  D633               	goto	l9229
 11230  010ECE  0EE9               	movlw	-23
 11231  010ED0  50E3               	movf	plusw1,w,c
 11232  010ED2  E108               	bnz	u9170
 11233  010ED4  0EE8               	movlw	-24
 11234  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 11235  010EDC  0E4B               	movlw	75
 11236  010EDE  5E35               	subwf	btemp^0,f,c
 11237  010EE0  A0D8               	btfss	status,0,c
 11238  010EE2  D628               	goto	l9229
 11239  010EE4                     u9170:
 11240                           
 11241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11242                           ;stkvar	_pp @ sp[(-56)+50]
 11243  010EE4  0EFA               	movlw	-6
 11244  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 11245  010EEC  0EFB               	movlw	-5
 11246  010EEE  50E3               	movf	plusw1,w,c
 11247  010EF0  1035               	iorwf	btemp^0,w,c
 11248  010EF2  B4D8               	btfsc	status,2,c
 11249  010EF4  A822               	btfss	_flags^0,4,c
 11250  010EF6  D021               	goto	l9291
 11251                           
 11252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11253                           ;stkvar	_n @ sp[(-56)+32]
 11254  010EF8  0EE8               	movlw	-24
 11255  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11256  010F00  0EE9               	movlw	-23
 11257  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 11258  010F08  0EAB               	movlw	low _dbuf
 11259  010F0A  243F               	addwf	(btemp+10)^0,w,c
 11260  010F0C  6ED9               	movwf	fsr2l,c
 11261  010F0E  0E01               	movlw	high _dbuf
 11262  010F10  2040               	addwfc	(btemp+11)^0,w,c
 11263  010F12  6EDA               	movwf	fsr2h,c
 11264  010F14  0E2E               	movlw	46
 11265  010F16  6EDF               	movwf	indf2,c
 11266                           
 11267                           ;stkvar	_n @ sp[(-56)+32]
 11268  010F18  0EE8               	movlw	-24
 11269  010F1A  50E3               	movf	plusw1,w,c
 11270  010F1C  0F01               	addlw	1
 11271  010F1E  6E35               	movwf	btemp^0,c
 11272  010F20  0EE8               	movlw	-24
 11273  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 11274  010F28  6A35               	clrf	btemp^0,c
 11275  010F2A  0EE9               	movlw	-23
 11276  010F2C  50E3               	movf	plusw1,w,c
 11277  010F2E  2035               	addwfc	btemp^0,w,c
 11278  010F30  6E35               	movwf	btemp^0,c
 11279  010F32  0EE9               	movlw	-23
 11280  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 11281  010F3A                     l9291:
 11282                           
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11284                           ;stkvar	_n @ sp[(-56)+32]
 11285  010F3A  0EE8               	movlw	-24
 11286  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11287  010F42  0EE9               	movlw	-23
 11288  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 11289  010F4A  0EAB               	movlw	low _dbuf
 11290  010F4C  243F               	addwf	(btemp+10)^0,w,c
 11291  010F4E  6ED9               	movwf	fsr2l,c
 11292  010F50  0E01               	movlw	high _dbuf
 11293  010F52  2040               	addwfc	(btemp+11)^0,w,c
 11294  010F54  6EDA               	movwf	fsr2h,c
 11295  010F56  0E00               	movlw	0
 11296  010F58  6EDF               	movwf	indf2,c
 11297                           
 11298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11299                           ;stkvar	_nmode @ sp[(-56)+55]
 11300  010F5A  0EFF               	movlw	-1
 11301  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 11302  010F62  0E65               	movlw	101
 11303  010F64  1835               	xorwf	btemp^0,w,c
 11304  010F66  A4D8               	btfss	status,2,c
 11305  010F68  EF16  F081         	goto	l9095
 11306                           
 11307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11308  010F6C  0E4F               	movlw	79
 11309  010F6E  6E3F               	movwf	(btemp+10)^0,c
 11310  010F70  0E00               	movlw	0
 11311  010F72  6E40               	movwf	(btemp+11)^0,c
 11312                           
 11313                           ;stkvar	_i @ sp[(-56)+36]
 11314  010F74  0EEC               	movlw	-20
 11315  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11316  010F7C  0EED               	movlw	-19
 11317  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11318                           
 11319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11320                           ;stkvar	_i @ sp[(-56)+36]
 11321  010F84  0EEC               	movlw	-20
 11322  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11323  010F8C  0EED               	movlw	-19
 11324  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11325  010F94  0EAB               	movlw	low _dbuf
 11326  010F96  243F               	addwf	(btemp+10)^0,w,c
 11327  010F98  6ED9               	movwf	fsr2l,c
 11328  010F9A  0E01               	movlw	high _dbuf
 11329  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11330  010F9E  6EDA               	movwf	fsr2h,c
 11331  010FA0  0E00               	movlw	0
 11332  010FA2  6EDF               	movwf	indf2,c
 11333                           
 11334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11335                           ;stkvar	_sign @ sp[(-56)+42]
 11336  010FA4  0EF2               	movlw	-14
 11337  010FA6  6AE3               	clrf	plusw1,c
 11338  010FA8  0EF3               	movlw	-13
 11339  010FAA  6AE3               	clrf	plusw1,c
 11340                           
 11341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11342                           ;stkvar	_e @ sp[(-56)+34]
 11343  010FAC  0EEB               	movlw	-21
 11344  010FAE  AEE3               	btfss	plusw1,7,c
 11345  010FB0  D012               	goto	l9305
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11348  010FB2  0E01               	movlw	1
 11349  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11350  010FB6  0E00               	movlw	0
 11351  010FB8  6E40               	movwf	(btemp+11)^0,c
 11352                           
 11353                           ;stkvar	_sign @ sp[(-56)+42]
 11354  010FBA  0EF2               	movlw	-14
 11355  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11356  010FC2  0EF3               	movlw	-13
 11357  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11358                           
 11359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11360                           ;stkvar	_e @ sp[(-56)+34]
 11361                           ;stkvar	_e @ sp[(-56)+34]
 11362  010FCA  0EEA               	movlw	-22
 11363  010FCC  6CE3               	negf	plusw1,c
 11364  010FCE  0EEB               	movlw	-21
 11365  010FD0  1EE3               	comf	plusw1,f,c
 11366  010FD2  B0D8               	btfsc	status,0,c
 11367  010FD4  2AE3               	incf	plusw1,f,c
 11368  010FD6                     l9305:
 11369                           
 11370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11371  010FD6  0E02               	movlw	2
 11372  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11373  010FDA  0E00               	movlw	0
 11374  010FDC  6E40               	movwf	(btemp+11)^0,c
 11375                           
 11376                           ;stkvar	_p @ sp[(-56)+40]
 11377  010FDE  0EF0               	movlw	-16
 11378  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11379  010FE6  0EF1               	movlw	-15
 11380  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11381                           
 11382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11383  010FEE  D051               	goto	l9317
 11384  010FF0                     l9307:
 11385                           
 11386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11387                           ;stkvar	_i @ sp[(-56)+36]
 11388  010FF0  50E1               	movf	fsr1l,w,c
 11389  010FF2  0FEC               	addlw	-20
 11390  010FF4  6ED9               	movwf	fsr2l,c
 11391  010FF6  50E2               	movf	fsr1h,w,c
 11392  010FF8  6EDA               	movwf	fsr2h,c
 11393  010FFA  0EFF               	movlw	255
 11394  010FFC  22DA               	addwfc	fsr2h,f,c
 11395  010FFE  06DE               	decf	postinc2,f,c
 11396  011000  0E00               	movlw	0
 11397  011002  5ADD               	subwfb	postdec2,f,c
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11400                           ;stkvar	_i @ sp[(-56)+36]
 11401  011004  0EEC               	movlw	-20
 11402  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11403  01100C  0EED               	movlw	-19
 11404  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11405  011014  0EAB               	movlw	low _dbuf
 11406  011016  243F               	addwf	(btemp+10)^0,w,c
 11407  011018  6ED9               	movwf	fsr2l,c
 11408  01101A  0E01               	movlw	high _dbuf
 11409  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11410  01101E  6EDA               	movwf	fsr2h,c
 11411  011020  0E0A               	movlw	10
 11412  011022  6EE6               	movwf	postinc1,c
 11413  011024  0E00               	movlw	0
 11414  011026  6EE6               	movwf	postinc1,c
 11415                           
 11416                           ;stkvar	_e @ sp[(-58)+34]
 11417  011028  0EE8               	movlw	-24
 11418  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11419  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11420  011036  EC4B  F0B1         	call	___awmod	;wreg free
 11421  01103A  5035               	movf	btemp^0,w,c
 11422  01103C  0F30               	addlw	48
 11423  01103E  6EDF               	movwf	indf2,c
 11424                           
 11425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11426  011040  0E0A               	movlw	10
 11427  011042  6EE6               	movwf	postinc1,c
 11428  011044  0E00               	movlw	0
 11429  011046  6EE6               	movwf	postinc1,c
 11430                           
 11431                           ;stkvar	_e @ sp[(-58)+34]
 11432  011048  0EE8               	movlw	-24
 11433  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11434  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11435  011056  EC7B  F0AF         	call	___awdiv	;wreg free
 11436                           
 11437                           ;stkvar	_e @ sp[(-56)+34]
 11438  01105A  0EEA               	movlw	-22
 11439  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11440  011062  0EEB               	movlw	-21
 11441  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11442                           
 11443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11444                           ;stkvar	_p @ sp[(-56)+40]
 11445  01106A  50E1               	movf	fsr1l,w,c
 11446  01106C  0FF0               	addlw	-16
 11447  01106E  6ED9               	movwf	fsr2l,c
 11448  011070  50E2               	movf	fsr1h,w,c
 11449  011072  6EDA               	movwf	fsr2h,c
 11450  011074  0EFF               	movlw	255
 11451  011076  22DA               	addwfc	fsr2h,f,c
 11452  011078  06DE               	decf	postinc2,f,c
 11453  01107A  0E00               	movlw	0
 11454  01107C  5ADD               	subwfb	postdec2,f,c
 11455                           
 11456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11457                           ;stkvar	_w @ sp[(-56)+38]
 11458  01107E  50E1               	movf	fsr1l,w,c
 11459  011080  0FEE               	addlw	-18
 11460  011082  6ED9               	movwf	fsr2l,c
 11461  011084  50E2               	movf	fsr1h,w,c
 11462  011086  6EDA               	movwf	fsr2h,c
 11463  011088  0EFF               	movlw	255
 11464  01108A  22DA               	addwfc	fsr2h,f,c
 11465  01108C  06DE               	decf	postinc2,f,c
 11466  01108E  0E00               	movlw	0
 11467  011090  5ADD               	subwfb	postdec2,f,c
 11468  011092                     l9317:
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11471                           ;stkvar	_e @ sp[(-56)+34]
 11472  011092  0EEA               	movlw	-22
 11473  011094  006F FF8C  F035    	movff	plusw1,btemp
 11474  01109A  0EEB               	movlw	-21
 11475  01109C  50E3               	movf	plusw1,w,c
 11476  01109E  1035               	iorwf	btemp^0,w,c
 11477  0110A0  A4D8               	btfss	status,2,c
 11478  0110A2  D7A6               	goto	l9307
 11479                           
 11480                           ;stkvar	_p @ sp[(-56)+40]
 11481  0110A4  0EF1               	movlw	-15
 11482  0110A6  BEE3               	btfsc	plusw1,7,c
 11483  0110A8  D007               	goto	u9230
 11484  0110AA  0EF1               	movlw	-15
 11485  0110AC  50E3               	movf	plusw1,w,c
 11486  0110AE  E1A0               	bnz	l9307
 11487  0110B0  0EF0               	movlw	-16
 11488  0110B2  04E3               	decf	plusw1,w,c
 11489  0110B4  B0D8               	btfsc	status,0,c
 11490  0110B6  D79C               	goto	l9307
 11491  0110B8                     u9230:
 11492                           
 11493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11494                           ;stkvar	_i @ sp[(-56)+36]
 11495  0110B8  50E1               	movf	fsr1l,w,c
 11496  0110BA  0FEC               	addlw	-20
 11497  0110BC  6ED9               	movwf	fsr2l,c
 11498  0110BE  50E2               	movf	fsr1h,w,c
 11499  0110C0  6EDA               	movwf	fsr2h,c
 11500  0110C2  0EFF               	movlw	255
 11501  0110C4  22DA               	addwfc	fsr2h,f,c
 11502  0110C6  06DE               	decf	postinc2,f,c
 11503  0110C8  0E00               	movlw	0
 11504  0110CA  5ADD               	subwfb	postdec2,f,c
 11505                           
 11506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11507                           ;stkvar	_sign @ sp[(-56)+42]
 11508  0110CC  0EF2               	movlw	-14
 11509  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11510  0110D4  0EF3               	movlw	-13
 11511  0110D6  50E3               	movf	plusw1,w,c
 11512  0110D8  1035               	iorwf	btemp^0,w,c
 11513  0110DA  A4D8               	btfss	status,2,c
 11514  0110DC  D002               	goto	l9327
 11515  0110DE  0E2B               	movlw	43
 11516  0110E0  D001               	goto	L9
 11517  0110E2                     l9327:
 11518  0110E2  0E2D               	movlw	45
 11519  0110E4                     L9:
 11520  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11521  0110E6  0E00               	movlw	0
 11522  0110E8  6E40               	movwf	(btemp+11)^0,c
 11523                           
 11524                           ;stkvar	_efgtoa$4079 @ sp[(-56)+4]
 11525  0110EA  0ECC               	movlw	-52
 11526  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11527  0110F2  0ECD               	movlw	-51
 11528  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11529                           
 11530                           ;stkvar	_efgtoa$4079 @ sp[(-56)+4]
 11531                           ;stkvar	_i @ sp[(-56)+36]
 11532  0110FA  0EEC               	movlw	-20
 11533  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11534  011102  0EED               	movlw	-19
 11535  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11536  01110A  0EAB               	movlw	low _dbuf
 11537  01110C  243F               	addwf	(btemp+10)^0,w,c
 11538  01110E  6ED9               	movwf	fsr2l,c
 11539  011110  0E01               	movlw	high _dbuf
 11540  011112  2040               	addwfc	(btemp+11)^0,w,c
 11541  011114  6EDA               	movwf	fsr2h,c
 11542  011116  0ECC               	movlw	-52
 11543  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11544                           
 11545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11546                           ;stkvar	_w @ sp[(-56)+38]
 11547  01111E  50E1               	movf	fsr1l,w,c
 11548  011120  0FEE               	addlw	-18
 11549  011122  6ED9               	movwf	fsr2l,c
 11550  011124  50E2               	movf	fsr1h,w,c
 11551  011126  6EDA               	movwf	fsr2h,c
 11552  011128  0EFF               	movlw	255
 11553  01112A  22DA               	addwfc	fsr2h,f,c
 11554  01112C  06DE               	decf	postinc2,f,c
 11555  01112E  0E00               	movlw	0
 11556  011130  5ADD               	subwfb	postdec2,f,c
 11557                           
 11558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11559                           ;stkvar	_i @ sp[(-56)+36]
 11560  011132  50E1               	movf	fsr1l,w,c
 11561  011134  0FEC               	addlw	-20
 11562  011136  6ED9               	movwf	fsr2l,c
 11563  011138  50E2               	movf	fsr1h,w,c
 11564  01113A  6EDA               	movwf	fsr2h,c
 11565  01113C  0EFF               	movlw	255
 11566  01113E  22DA               	addwfc	fsr2h,f,c
 11567  011140  06DE               	decf	postinc2,f,c
 11568  011142  0E00               	movlw	0
 11569  011144  5ADD               	subwfb	postdec2,f,c
 11570  011146  0EBF               	movlw	191
 11571  011148  6E3F               	movwf	(btemp+10)^0,c
 11572  01114A  0EFF               	movlw	255
 11573  01114C  6E40               	movwf	(btemp+11)^0,c
 11574                           
 11575                           ;stkvar	_c @ sp[(-56)+-7]
 11576  01114E  0EC1               	movlw	-63
 11577  011150  50E3               	movf	plusw1,w,c
 11578  011152  6E3D               	movwf	(btemp+8)^0,c
 11579  011154  6A3E               	clrf	(btemp+9)^0,c
 11580  011156  503F               	movf	(btemp+10)^0,w,c
 11581  011158  263D               	addwf	(btemp+8)^0,f,c
 11582  01115A  5040               	movf	(btemp+11)^0,w,c
 11583  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11584  01115E  503E               	movf	(btemp+9)^0,w,c
 11585  011160  E106               	bnz	u9250
 11586  011162  0E1A               	movlw	26
 11587  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11588  011166  B0D8               	btfsc	status,0,c
 11589  011168  D002               	goto	u9250
 11590  01116A  0E01               	movlw	1
 11591  01116C  D001               	goto	u9260
 11592  01116E                     u9250:
 11593  01116E  0E00               	movlw	0
 11594  011170                     u9260:
 11595  011170  6E3F               	movwf	(btemp+10)^0,c
 11596  011172  6A40               	clrf	(btemp+11)^0,c
 11597                           
 11598                           ;stkvar	_efgtoa$4081 @ sp[(-56)+0]
 11599  011174  0EC8               	movlw	-56
 11600  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11601  01117C  0EC9               	movlw	-55
 11602  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11603                           
 11604                           ;stkvar	_efgtoa$4081 @ sp[(-56)+0]
 11605  011184  0EC8               	movlw	-56
 11606  011186  006F FF8C  F035    	movff	plusw1,btemp
 11607  01118C  0EC9               	movlw	-55
 11608  01118E  50E3               	movf	plusw1,w,c
 11609  011190  1035               	iorwf	btemp^0,w,c
 11610  011192  A4D8               	btfss	status,2,c
 11611  011194  D002               	goto	l9343
 11612  011196  0E65               	movlw	101
 11613  011198  D001               	goto	L10
 11614  01119A                     l9343:
 11615  01119A  0E45               	movlw	69
 11616  01119C                     L10:
 11617  01119C  6E3F               	movwf	(btemp+10)^0,c
 11618  01119E  0E00               	movlw	0
 11619  0111A0  6E40               	movwf	(btemp+11)^0,c
 11620                           
 11621                           ;stkvar	_efgtoa$4080 @ sp[(-56)+2]
 11622  0111A2  0ECA               	movlw	-54
 11623  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11624  0111AA  0ECB               	movlw	-53
 11625  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11626                           
 11627                           ;stkvar	_efgtoa$4080 @ sp[(-56)+2]
 11628                           ;stkvar	_i @ sp[(-56)+36]
 11629  0111B2  0EEC               	movlw	-20
 11630  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11631  0111BA  0EED               	movlw	-19
 11632  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11633  0111C2  0EAB               	movlw	low _dbuf
 11634  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11635  0111C6  6ED9               	movwf	fsr2l,c
 11636  0111C8  0E01               	movlw	high _dbuf
 11637  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11638  0111CC  6EDA               	movwf	fsr2h,c
 11639  0111CE  0ECA               	movlw	-54
 11640  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11643                           ;stkvar	_w @ sp[(-56)+38]
 11644  0111D6  50E1               	movf	fsr1l,w,c
 11645  0111D8  0FEE               	addlw	-18
 11646  0111DA  6ED9               	movwf	fsr2l,c
 11647  0111DC  50E2               	movf	fsr1h,w,c
 11648  0111DE  6EDA               	movwf	fsr2h,c
 11649  0111E0  0EFF               	movlw	255
 11650  0111E2  22DA               	addwfc	fsr2h,f,c
 11651  0111E4  06DE               	decf	postinc2,f,c
 11652  0111E6  0E00               	movlw	0
 11653  0111E8  5ADD               	subwfb	postdec2,f,c
 11654                           
 11655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11656                           ;stkvar	_i @ sp[(-56)+36]
 11657  0111EA  0EEC               	movlw	-20
 11658  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11659  0111F2  0EED               	movlw	-19
 11660  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11661  0111FA  0EAB               	movlw	low _dbuf
 11662  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11663  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11664  011200  0E01               	movlw	high _dbuf
 11665  011202  2040               	addwfc	(btemp+11)^0,w,c
 11666  011204  6E3E               	movwf	(btemp+9)^0,c
 11667  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11668  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11669                           
 11670                           ;stkvar	_n @ sp[(-58)+32]
 11671  011212  0EAB               	movlw	low _dbuf
 11672  011214  6E3F               	movwf	(btemp+10)^0,c
 11673  011216  0E01               	movlw	high _dbuf
 11674  011218  6E40               	movwf	(btemp+11)^0,c
 11675  01121A  0EE6               	movlw	-26
 11676  01121C  50E3               	movf	plusw1,w,c
 11677  01121E  263F               	addwf	(btemp+10)^0,f,c
 11678  011220  0EE7               	movlw	-25
 11679  011222  50E3               	movf	plusw1,w,c
 11680  011224  2240               	addwfc	(btemp+11)^0,f,c
 11681  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11682  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11683  011232  ECE2  F0B3         	call	_strcpy	;wreg free
 11684  011236  EF16  F081         	goto	l9095
 11685  01123A                     l1796:
 11686                           
 11687                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11688  01123A  0EC1               	movlw	193
 11689  01123C  26E1               	addwf	fsr1l,f,c
 11690  01123E  0EFF               	movlw	255
 11691  011240  22E2               	addwfc	fsr1h,f,c
 11692  011242  0012               	return		;funcret
 11693  011244                     __end_of_efgtoa:
 11694                           	opt callstack 0
 11695                           
 11696 ;; *************** function _tolower *****************
 11697 ;; Defined at:
 11698 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  c               2  [STACK] int 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  2  [STACK] int 
 11705 ;; Registers used:
 11706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/4
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    7
 11719 ;; This function calls:
 11720 ;;		_isupper
 11721 ;; This function is called by:
 11722 ;;		_efgtoa
 11723 ;;		_vfpfcnvrt
 11724 ;; This function uses a reentrant model
 11725 ;;
 11726                           
 11727                           	psect	text42
 11728  0170C4                     __ptext42:
 11729                           	opt callstack 0
 11730  0170C4                     _tolower:
 11731                           	opt callstack 0
 11732                           
 11733                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11734  0170C4  52E6               	movf	postinc1,f,c
 11735  0170C6  52E6               	movf	postinc1,f,c
 11736                           
 11737                           ;stkvar	_c @ sp[(-2)+-2]
 11738                           
 11739                           ;incstack = 0
 11740  0170C8  0EFC               	movlw	-4
 11741  0170CA  50E3               	movf	plusw1,w,c
 11742  0170CC  0FBF               	addlw	191
 11743  0170CE  6E3F               	movwf	(btemp+10)^0,c
 11744  0170D0  0EFD               	movlw	-3
 11745  0170D2  006F FF8C  F040    	movff	plusw1,btemp+11
 11746  0170D8  0EFF               	movlw	255
 11747  0170DA  2240               	addwfc	(btemp+11)^0,f,c
 11748  0170DC  5040               	movf	(btemp+11)^0,w,c
 11749  0170DE  E106               	bnz	u4950
 11750  0170E0  0E1A               	movlw	26
 11751  0170E2  5C3F               	subwf	(btemp+10)^0,w,c
 11752  0170E4  B0D8               	btfsc	status,0,c
 11753  0170E6  D002               	goto	u4950
 11754  0170E8  0E01               	movlw	1
 11755  0170EA  D001               	goto	u4960
 11756  0170EC                     u4950:
 11757  0170EC  0E00               	movlw	0
 11758  0170EE                     u4960:
 11759  0170EE  6E3F               	movwf	(btemp+10)^0,c
 11760  0170F0  6A40               	clrf	(btemp+11)^0,c
 11761                           
 11762                           ;stkvar	_tolower$4747 @ sp[(-2)+0]
 11763  0170F2  0EFE               	movlw	-2
 11764  0170F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11765  0170FA  0EFF               	movlw	-1
 11766  0170FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11767                           
 11768                           ;stkvar	_tolower$4747 @ sp[(-2)+0]
 11769  017102  0EFE               	movlw	-2
 11770  017104  006F FF8C  F035    	movff	plusw1,btemp
 11771  01710A  0EFF               	movlw	-1
 11772  01710C  50E3               	movf	plusw1,w,c
 11773  01710E  1035               	iorwf	btemp^0,w,c
 11774  017110  B4D8               	btfsc	status,2,c
 11775  017112  D00D               	goto	l6243
 11776                           
 11777                           ;stkvar	_c @ sp[(-2)+-2]
 11778  017114  0EFC               	movlw	-4
 11779  017116  006F FF8C  F035    	movff	plusw1,btemp
 11780  01711C  0EFD               	movlw	-3
 11781  01711E  006F FF8C  F036    	movff	plusw1,btemp+1
 11782  017124  0E20               	movlw	32
 11783  017126  1235               	iorwf	btemp^0,f,c
 11784  017128  0E00               	movlw	0
 11785  01712A  1236               	iorwf	(btemp+1)^0,f,c
 11786  01712C  D008               	goto	l2819
 11787  01712E                     l6243:
 11788                           
 11789                           ;stkvar	_c @ sp[(-2)+-2]
 11790  01712E  0EFC               	movlw	-4
 11791  017130  006F FF8C  F035    	movff	plusw1,btemp
 11792  017136  0EFD               	movlw	-3
 11793  017138  006F FF8C  F036    	movff	plusw1,btemp+1
 11794  01713E                     l2819:
 11795                           
 11796                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11797  01713E  52E5               	movf	postdec1,f,c
 11798  017140  52E5               	movf	postdec1,f,c
 11799  017142  52E5               	movf	postdec1,f,c
 11800  017144  52E5               	movf	postdec1,f,c
 11801  017146  0012               	return		;funcret
 11802  017148                     __end_of_tolower:
 11803                           	opt callstack 0
 11804                           
 11805 ;; *************** function _isupper *****************
 11806 ;; Defined at:
 11807 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  c               2  [STACK] int 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  2  [STACK] int 
 11814 ;; Registers used:
 11815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:    6
 11828 ;; This function calls:
 11829 ;;		Nothing
 11830 ;; This function is called by:
 11831 ;;		_efgtoa
 11832 ;;		_xtoa
 11833 ;;		_vfpfcnvrt
 11834 ;;		_tolower
 11835 ;; This function uses a reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text43
 11839  017B60                     __ptext43:
 11840                           	opt callstack 0
 11841  017B60                     _isupper:
 11842                           	opt callstack 17
 11843                           
 11844                           ;stkvar	_c @ sp[(0)+-2]
 11845                           
 11846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11847                           ;incstack = 0
 11848  017B60  0EFE               	movlw	-2
 11849  017B62  50E3               	movf	plusw1,w,c
 11850  017B64  0FBF               	addlw	191
 11851  017B66  6E3F               	movwf	(btemp+10)^0,c
 11852  017B68  0EFF               	movlw	-1
 11853  017B6A  006F FF8C  F040    	movff	plusw1,btemp+11
 11854  017B70  0EFF               	movlw	255
 11855  017B72  2240               	addwfc	(btemp+11)^0,f,c
 11856  017B74  5040               	movf	(btemp+11)^0,w,c
 11857  017B76  E106               	bnz	u4350
 11858  017B78  0E1A               	movlw	26
 11859  017B7A  5C3F               	subwf	(btemp+10)^0,w,c
 11860  017B7C  B0D8               	btfsc	status,0,c
 11861  017B7E  D002               	goto	u4350
 11862  017B80  0E01               	movlw	1
 11863  017B82  D001               	goto	u4360
 11864  017B84                     u4350:
 11865  017B84  0E00               	movlw	0
 11866  017B86                     u4360:
 11867  017B86  6E35               	movwf	btemp^0,c
 11868  017B88  6A36               	clrf	(btemp+1)^0,c
 11869                           
 11870                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11871  017B8A  52E5               	movf	postdec1,f,c
 11872  017B8C  52E5               	movf	postdec1,f,c
 11873  017B8E  0012               	return		;funcret
 11874  017B90                     __end_of_isupper:
 11875                           	opt callstack 0
 11876                           
 11877 ;; *************** function _strcpy *****************
 11878 ;; Defined at:
 11879 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;  dest            2  [STACK] PTR unsigned char 
 11882 ;;		 -> dbuf(80), 
 11883 ;;  src             2  [STACK] PTR const unsigned char 
 11884 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 11885 ;;		 -> dbuf(80), 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  d               2  [STACK] PTR unsigned char 
 11888 ;;		 -> dbuf(80), 
 11889 ;;  s               2  [STACK] PTR const unsigned char 
 11890 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 11891 ;;		 -> dbuf(80), 
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  2  [STACK] PTR unsigned char 
 11894 ;; Registers used:
 11895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/4
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    6
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_efgtoa
 11912 ;; This function uses a reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text44
 11916  0167C4                     __ptext44:
 11917                           	opt callstack 0
 11918  0167C4                     _strcpy:
 11919                           	opt callstack 0
 11920                           
 11921                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11922  0167C4  52E6               	movf	postinc1,f,c
 11923  0167C6  52E6               	movf	postinc1,f,c
 11924  0167C8  52E6               	movf	postinc1,f,c
 11925  0167CA  52E6               	movf	postinc1,f,c
 11926                           
 11927                           ;stkvar	_src @ sp[(-4)+-4]
 11928                           
 11929                           ;incstack = 0
 11930  0167CC  0EF8               	movlw	-8
 11931  0167CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 11932  0167D4  0EF9               	movlw	-7
 11933  0167D6  006F FF8C  F040    	movff	plusw1,btemp+11
 11934                           
 11935                           ;stkvar	_s @ sp[(-4)+2]
 11936  0167DC  0EFF               	movlw	-1
 11937  0167DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 11938  0167E4  0EFE               	movlw	-2
 11939  0167E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11940                           
 11941                           ;stkvar	_dest @ sp[(-4)+-2]
 11942  0167EC  0EFA               	movlw	-6
 11943  0167EE  006F FF8C  F03F    	movff	plusw1,btemp+10
 11944  0167F4  0EFB               	movlw	-5
 11945  0167F6  006F FF8C  F040    	movff	plusw1,btemp+11
 11946                           
 11947                           ;stkvar	_d @ sp[(-4)+0]
 11948  0167FC  0EFD               	movlw	-3
 11949  0167FE  0060  F103  FFE3   	movff	btemp+11,plusw1
 11950  016804  0EFC               	movlw	-4
 11951  016806  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11952  01680C                     l8969:
 11953                           
 11954                           ;stkvar	_s @ sp[(-4)+2]
 11955  01680C  50E1               	movf	fsr1l,w,c
 11956  01680E  0FFE               	addlw	-2
 11957  016810  6ED9               	movwf	fsr2l,c
 11958  016812  50E2               	movf	fsr1h,w,c
 11959  016814  6EDA               	movwf	fsr2h,c
 11960  016816  0EFF               	movlw	255
 11961  016818  22DA               	addwfc	fsr2h,f,c
 11962  01681A  006F FF7C  F03F    	movff	indf2,btemp+10
 11963  016820  0E01               	movlw	1
 11964  016822  26DE               	addwf	postinc2,f,c
 11965  016824  006F FF7C  F040    	movff	indf2,btemp+11
 11966  01682A  0E00               	movlw	0
 11967  01682C  22DD               	addwfc	postdec2,f,c
 11968  01682E  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11969  016834  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11970  01683A  0E00               	movlw	low (__mediumconst shr (0+16))
 11971  01683C  6EF8               	movwf	tblptru,c
 11972                           
 11973                           ;stkvar	_d @ sp[(-4)+0]
 11974  01683E  50E1               	movf	fsr1l,w,c
 11975  016840  0FFC               	addlw	-4
 11976  016842  6ED9               	movwf	fsr2l,c
 11977  016844  50E2               	movf	fsr1h,w,c
 11978  016846  6EDA               	movwf	fsr2h,c
 11979  016848  0EFF               	movlw	255
 11980  01684A  22DA               	addwfc	fsr2h,f,c
 11981  01684C  006F FF7C  F03F    	movff	indf2,btemp+10
 11982  016852  0E01               	movlw	1
 11983  016854  26DE               	addwf	postinc2,f,c
 11984  016856  006F FF7C  F040    	movff	indf2,btemp+11
 11985  01685C  0E00               	movlw	0
 11986  01685E  22DD               	addwfc	postdec2,f,c
 11987  016860  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11988  016866  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11989  01686C  0E1F               	movlw	(high __ramtop+-1)
 11990  01686E  64F7               	cpfsgt	tblptrh,c
 11991  016870  D003               	bra	u8567
 11992  016872  0008               	tblrd		*
 11993  016874  50F5               	movf	tablat,w,c
 11994  016876  D007               	bra	u8560
 11995  016878                     u8567:
 11996  016878  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11997  01687E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11998  016884  50EF               	movf	indf0,w,c
 11999  016886                     u8560:
 12000  016886  6EDF               	movwf	indf2,c
 12001  016888  50DF               	movf	indf2,w,c
 12002  01688A  A4D8               	btfss	status,2,c
 12003  01688C  D7BF               	goto	l8969
 12004                           
 12005                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12006  01688E  0EF8               	movlw	248
 12007  016890  26E1               	addwf	fsr1l,f,c
 12008  016892  0EFF               	movlw	255
 12009  016894  22E2               	addwfc	fsr1h,f,c
 12010  016896  0012               	return		;funcret
 12011  016898                     __end_of_strcpy:
 12012                           	opt callstack 0
 12013                           
 12014 ;; *************** function _floorf *****************
 12015 ;; Defined at:
 12016 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  x               4  [STACK] float 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  u               4  [STACK] struct .
 12021 ;;  m               4  [STACK] unsigned long 
 12022 ;;  e               2  [STACK] int 
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  4  [STACK] float 
 12025 ;; Registers used:
 12026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/4
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    6
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_efgtoa
 12043 ;; This function uses a reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text45
 12047  0142A4                     __ptext45:
 12048                           	opt callstack 0
 12049  0142A4                     _floorf:
 12050                           	opt callstack 0
 12051                           
 12052                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12053  0142A4  0E0A               	movlw	10
 12054  0142A6  26E1               	addwf	fsr1l,f,c
 12055  0142A8  0E00               	movlw	0
 12056  0142AA  22E2               	addwfc	fsr1h,f,c
 12057                           
 12058                           ;incstack = 0
 12059  0142AC  0060  F31C  F03D   	movff	floorf@F524,btemp+8
 12060  0142B2  0060  F320  F03E   	movff	floorf@F524+1,btemp+9
 12061  0142B8  0060  F324  F03F   	movff	floorf@F524+2,btemp+10
 12062  0142BE  0060  F328  F040   	movff	floorf@F524+3,btemp+11
 12063                           
 12064                           ;stkvar	_u @ sp[(-10)+0]
 12065  0142C4  0EF6               	movlw	-10
 12066  0142C6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12067  0142CC  0EF7               	movlw	-9
 12068  0142CE  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12069  0142D4  0EF8               	movlw	-8
 12070  0142D6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12071  0142DC  0EF9               	movlw	-7
 12072  0142DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 12073                           
 12074                           ;stkvar	_x @ sp[(-10)+-4]
 12075  0142E4  0EF2               	movlw	-14
 12076  0142E6  006F FF8C  F03D    	movff	plusw1,btemp+8
 12077  0142EC  0EF3               	movlw	-13
 12078  0142EE  006F FF8C  F03E    	movff	plusw1,btemp+9
 12079  0142F4  0EF4               	movlw	-12
 12080  0142F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 12081  0142FC  0EF5               	movlw	-11
 12082  0142FE  006F FF8C  F040    	movff	plusw1,btemp+11
 12083                           
 12084                           ;stkvar	_u @ sp[(-10)+0]
 12085  014304  0EF6               	movlw	-10
 12086  014306  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12087  01430C  0EF7               	movlw	-9
 12088  01430E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12089  014314  0EF8               	movlw	-8
 12090  014316  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12091  01431C  0EF9               	movlw	-7
 12092  01431E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12093  014324  0E81               	movlw	129
 12094  014326  6E3F               	movwf	(btemp+10)^0,c
 12095  014328  0EFF               	movlw	255
 12096  01432A  6E40               	movwf	(btemp+11)^0,c
 12097                           
 12098                           ;stkvar	_u @ sp[(-10)+0]
 12099  01432C  0EF6               	movlw	-10
 12100  01432E  006F FF8C  F039    	movff	plusw1,btemp+4
 12101  014334  0EF7               	movlw	-9
 12102  014336  006F FF8C  F03A    	movff	plusw1,btemp+5
 12103  01433C  0EF8               	movlw	-8
 12104  01433E  006F FF8C  F03B    	movff	plusw1,btemp+6
 12105  014344  0EF9               	movlw	-7
 12106  014346  006F FF8C  F03C    	movff	plusw1,btemp+7
 12107  01434C  0E18               	movlw	24
 12108  01434E  D005               	goto	u4980
 12109  014350                     u4985:
 12110  014350  90D8               	bcf	status,0,c
 12111  014352  323C               	rrcf	(btemp+7)^0,f,c
 12112  014354  323B               	rrcf	(btemp+6)^0,f,c
 12113  014356  323A               	rrcf	(btemp+5)^0,f,c
 12114  014358  3239               	rrcf	(btemp+4)^0,f,c
 12115  01435A                     u4980:
 12116  01435A  2EE8               	decfsz	wreg,f,c
 12117  01435C  D7F9               	goto	u4985
 12118  01435E  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 12119  014364  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 12120  01436A  0EFF               	movlw	255
 12121  01436C  163D               	andwf	(btemp+8)^0,f,c
 12122  01436E  0E00               	movlw	0
 12123  014370  163E               	andwf	(btemp+9)^0,f,c
 12124  014372  503F               	movf	(btemp+10)^0,w,c
 12125  014374  263D               	addwf	(btemp+8)^0,f,c
 12126  014376  5040               	movf	(btemp+11)^0,w,c
 12127  014378  223E               	addwfc	(btemp+9)^0,f,c
 12128                           
 12129                           ;stkvar	_e @ sp[(-10)+8]
 12130  01437A  0EFE               	movlw	-2
 12131  01437C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12132  014382  0EFF               	movlw	-1
 12133  014384  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12134                           
 12135                           ;stkvar	_e @ sp[(-10)+8]
 12136  01438A  0EFF               	movlw	-1
 12137  01438C  BEE3               	btfsc	plusw1,7,c
 12138  01438E  D019               	goto	l6257
 12139  014390  0EFF               	movlw	-1
 12140  014392  50E3               	movf	plusw1,w,c
 12141  014394  E108               	bnz	u4990
 12142  014396  0EFE               	movlw	-2
 12143  014398  006F FF8C  F035    	movff	plusw1,btemp
 12144  01439E  0E17               	movlw	23
 12145  0143A0  5E35               	subwf	btemp^0,f,c
 12146  0143A2  A0D8               	btfss	status,0,c
 12147  0143A4  D00E               	goto	l6257
 12148  0143A6                     u4990:
 12149                           
 12150                           ;stkvar	_x @ sp[(-10)+-4]
 12151  0143A6  0EF2               	movlw	-14
 12152  0143A8  006F FF8C  F035    	movff	plusw1,btemp
 12153  0143AE  0EF3               	movlw	-13
 12154  0143B0  006F FF8C  F036    	movff	plusw1,btemp+1
 12155  0143B6  0EF4               	movlw	-12
 12156  0143B8  006F FF8C  F037    	movff	plusw1,btemp+2
 12157  0143BE  0EF5               	movlw	-11
 12158  0143C0  D11F               	goto	L11
 12159  0143C2                     l6257:
 12160                           
 12161                           ;stkvar	_e @ sp[(-10)+8]
 12162  0143C2  0EFF               	movlw	-1
 12163  0143C4  BEE3               	btfsc	plusw1,7,c
 12164  0143C6  D0B4               	goto	l6273
 12165                           
 12166                           ;stkvar	_e @ sp[(-10)+8]
 12167  0143C8  0EFE               	movlw	-2
 12168  0143CA  006F FF8C  F040    	movff	plusw1,btemp+11
 12169  0143D0  0EFF               	movlw	255
 12170  0143D2  6E39               	movwf	(btemp+4)^0,c
 12171  0143D4  0EFF               	movlw	255
 12172  0143D6  6E3A               	movwf	(btemp+5)^0,c
 12173  0143D8  0E7F               	movlw	127
 12174  0143DA  6E3B               	movwf	(btemp+6)^0,c
 12175  0143DC  0E00               	movlw	0
 12176  0143DE  6E3C               	movwf	(btemp+7)^0,c
 12177  0143E0                     u5015:
 12178  0143E0  6640               	tstfsz	(btemp+11)^0,c
 12179  0143E2  D001               	goto	u5016
 12180  0143E4  D007               	goto	u5017
 12181  0143E6                     u5016:
 12182  0143E6  343C               	rlcf	(btemp+7)^0,w,c
 12183  0143E8  323C               	rrcf	(btemp+7)^0,f,c
 12184  0143EA  323B               	rrcf	(btemp+6)^0,f,c
 12185  0143EC  323A               	rrcf	(btemp+5)^0,f,c
 12186  0143EE  3239               	rrcf	(btemp+4)^0,f,c
 12187  0143F0  2E40               	decfsz	(btemp+11)^0,f,c
 12188  0143F2  D7F6               	goto	u5015
 12189  0143F4                     u5017:
 12190                           
 12191                           ;stkvar	_m @ sp[(-10)+4]
 12192  0143F4  0EFA               	movlw	-6
 12193  0143F6  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 12194  0143FC  0EFB               	movlw	-5
 12195  0143FE  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 12196  014404  0EFC               	movlw	-4
 12197  014406  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12198  01440C  0EFD               	movlw	-3
 12199  01440E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12200                           
 12201                           ;stkvar	_m @ sp[(-10)+4]
 12202                           ;stkvar	_u @ sp[(-10)+0]
 12203  014414  0EF6               	movlw	-10
 12204  014416  006F FF8C  F03D    	movff	plusw1,btemp+8
 12205  01441C  0EF7               	movlw	-9
 12206  01441E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12207  014424  0EF8               	movlw	-8
 12208  014426  006F FF8C  F03F    	movff	plusw1,btemp+10
 12209  01442C  0EF9               	movlw	-7
 12210  01442E  006F FF8C  F040    	movff	plusw1,btemp+11
 12211  014434  0EFA               	movlw	-6
 12212  014436  50E3               	movf	plusw1,w,c
 12213  014438  163D               	andwf	(btemp+8)^0,f,c
 12214  01443A  0EFB               	movlw	-5
 12215  01443C  50E3               	movf	plusw1,w,c
 12216  01443E  163E               	andwf	(btemp+9)^0,f,c
 12217  014440  0EFC               	movlw	-4
 12218  014442  50E3               	movf	plusw1,w,c
 12219  014444  163F               	andwf	(btemp+10)^0,f,c
 12220  014446  0EFD               	movlw	-3
 12221  014448  50E3               	movf	plusw1,w,c
 12222  01444A  1640               	andwf	(btemp+11)^0,f,c
 12223  01444C  503D               	movf	(btemp+8)^0,w,c
 12224  01444E  103E               	iorwf	(btemp+9)^0,w,c
 12225  014450  103F               	iorwf	(btemp+10)^0,w,c
 12226  014452  1040               	iorwf	(btemp+11)^0,w,c
 12227  014454  B4D8               	btfsc	status,2,c
 12228  014456  D7A7               	goto	u4990
 12229                           
 12230                           ;stkvar	_u @ sp[(-10)+0]
 12231  014458  0EF6               	movlw	-10
 12232  01445A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12233  014460  0EF7               	movlw	-9
 12234  014462  006F FF8C  F03E    	movff	plusw1,btemp+9
 12235  014468  0EF8               	movlw	-8
 12236  01446A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12237  014470  0EF9               	movlw	-7
 12238  014472  006F FF8C  F040    	movff	plusw1,btemp+11
 12239  014478  0E20               	movlw	32
 12240  01447A  D005               	goto	u5030
 12241  01447C                     u5035:
 12242  01447C  90D8               	bcf	status,0,c
 12243  01447E  3240               	rrcf	(btemp+11)^0,f,c
 12244  014480  323F               	rrcf	(btemp+10)^0,f,c
 12245  014482  323E               	rrcf	(btemp+9)^0,f,c
 12246  014484  323D               	rrcf	(btemp+8)^0,f,c
 12247  014486                     u5030:
 12248  014486  2EE8               	decfsz	wreg,f,c
 12249  014488  D7F9               	goto	u5035
 12250  01448A  503D               	movf	(btemp+8)^0,w,c
 12251  01448C  B4D8               	btfsc	status,2,c
 12252  01448E  D028               	goto	l6271
 12253                           
 12254                           ;stkvar	_m @ sp[(-10)+4]
 12255                           ;stkvar	_u @ sp[(-10)+0]
 12256  014490  0EF6               	movlw	-10
 12257  014492  50E3               	movf	plusw1,w,c
 12258  014494  6E35               	movwf	btemp^0,c
 12259  014496  0EFA               	movlw	-6
 12260  014498  50E3               	movf	plusw1,w,c
 12261  01449A  2635               	addwf	btemp^0,f,c
 12262  01449C  0EF6               	movlw	-10
 12263  01449E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12264  0144A4  0EF7               	movlw	-9
 12265  0144A6  50E3               	movf	plusw1,w,c
 12266  0144A8  6E35               	movwf	btemp^0,c
 12267  0144AA  0EFB               	movlw	-5
 12268  0144AC  50E3               	movf	plusw1,w,c
 12269  0144AE  2235               	addwfc	btemp^0,f,c
 12270  0144B0  0EF7               	movlw	-9
 12271  0144B2  0060  F0D7  FFE3   	movff	btemp,plusw1
 12272  0144B8  0EF8               	movlw	-8
 12273  0144BA  50E3               	movf	plusw1,w,c
 12274  0144BC  6E35               	movwf	btemp^0,c
 12275  0144BE  0EFC               	movlw	-4
 12276  0144C0  50E3               	movf	plusw1,w,c
 12277  0144C2  2235               	addwfc	btemp^0,f,c
 12278  0144C4  0EF8               	movlw	-8
 12279  0144C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12280  0144CC  0EF9               	movlw	-7
 12281  0144CE  50E3               	movf	plusw1,w,c
 12282  0144D0  6E35               	movwf	btemp^0,c
 12283  0144D2  0EFD               	movlw	-3
 12284  0144D4  50E3               	movf	plusw1,w,c
 12285  0144D6  2235               	addwfc	btemp^0,f,c
 12286  0144D8  0EF9               	movlw	-7
 12287  0144DA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12288  0144E0                     l6271:
 12289                           
 12290                           ;stkvar	_m @ sp[(-10)+4]
 12291  0144E0  0EFA               	movlw	-6
 12292  0144E2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12293  0144E8  0EFB               	movlw	-5
 12294  0144EA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12295  0144F0  0EFC               	movlw	-4
 12296  0144F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12297  0144F8  0EFD               	movlw	-3
 12298  0144FA  006F FF8C  F040    	movff	plusw1,btemp+11
 12299  014500  1C3D               	comf	(btemp+8)^0,w,c
 12300  014502  6E39               	movwf	(btemp+4)^0,c
 12301  014504  1C3E               	comf	(btemp+9)^0,w,c
 12302  014506  6E3A               	movwf	(btemp+5)^0,c
 12303  014508  1C3F               	comf	(btemp+10)^0,w,c
 12304  01450A  6E3B               	movwf	(btemp+6)^0,c
 12305  01450C  1C40               	comf	(btemp+11)^0,w,c
 12306  01450E  6E3C               	movwf	(btemp+7)^0,c
 12307                           
 12308                           ;stkvar	_u @ sp[(-10)+0]
 12309  014510  50E1               	movf	fsr1l,w,c
 12310  014512  0FF6               	addlw	-10
 12311  014514  6ED9               	movwf	fsr2l,c
 12312  014516  50E2               	movf	fsr1h,w,c
 12313  014518  6EDA               	movwf	fsr2h,c
 12314  01451A  0EFF               	movlw	255
 12315  01451C  22DA               	addwfc	fsr2h,f,c
 12316  01451E  5039               	movf	(btemp+4)^0,w,c
 12317  014520  16DE               	andwf	postinc2,f,c
 12318  014522  503A               	movf	(btemp+5)^0,w,c
 12319  014524  16DE               	andwf	postinc2,f,c
 12320  014526  503B               	movf	(btemp+6)^0,w,c
 12321  014528  16DE               	andwf	postinc2,f,c
 12322  01452A  503C               	movf	(btemp+7)^0,w,c
 12323  01452C  16DE               	andwf	postinc2,f,c
 12324  01452E  D05B               	goto	l6281
 12325  014530                     l6273:
 12326                           
 12327                           ;stkvar	_u @ sp[(-10)+0]
 12328  014530  0EF6               	movlw	-10
 12329  014532  006F FF8C  F03D    	movff	plusw1,btemp+8
 12330  014538  0EF7               	movlw	-9
 12331  01453A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12332  014540  0EF8               	movlw	-8
 12333  014542  006F FF8C  F03F    	movff	plusw1,btemp+10
 12334  014548  0EF9               	movlw	-7
 12335  01454A  006F FF8C  F040    	movff	plusw1,btemp+11
 12336  014550  0E20               	movlw	32
 12337  014552  D005               	goto	u5050
 12338  014554                     u5055:
 12339  014554  90D8               	bcf	status,0,c
 12340  014556  3240               	rrcf	(btemp+11)^0,f,c
 12341  014558  323F               	rrcf	(btemp+10)^0,f,c
 12342  01455A  323E               	rrcf	(btemp+9)^0,f,c
 12343  01455C  323D               	rrcf	(btemp+8)^0,f,c
 12344  01455E                     u5050:
 12345  01455E  2EE8               	decfsz	wreg,f,c
 12346  014560  D7F9               	goto	u5055
 12347  014562  663D               	tstfsz	(btemp+8)^0,c
 12348  014564  D009               	goto	l6277
 12349                           
 12350                           ;stkvar	_u @ sp[(-10)+0]
 12351  014566  0EF6               	movlw	-10
 12352  014568  6AE3               	clrf	plusw1,c
 12353  01456A  0EF7               	movlw	-9
 12354  01456C  6AE3               	clrf	plusw1,c
 12355  01456E  0EF8               	movlw	-8
 12356  014570  6AE3               	clrf	plusw1,c
 12357  014572  0EF9               	movlw	-7
 12358  014574  6AE3               	clrf	plusw1,c
 12359  014576  D037               	goto	l6281
 12360  014578                     l6277:
 12361                           
 12362                           ;stkvar	_u @ sp[(-10)+0]
 12363  014578  0EF6               	movlw	-10
 12364  01457A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12365  014580  0EF7               	movlw	-9
 12366  014582  006F FF8C  F03E    	movff	plusw1,btemp+9
 12367  014588  0EF8               	movlw	-8
 12368  01458A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12369  014590  0EF9               	movlw	-7
 12370  014592  006F FF8C  F040    	movff	plusw1,btemp+11
 12371  014598  90D8               	bcf	status,0,c
 12372  01459A  343D               	rlcf	(btemp+8)^0,w,c
 12373  01459C  6E39               	movwf	(btemp+4)^0,c
 12374  01459E  343E               	rlcf	(btemp+9)^0,w,c
 12375  0145A0  6E3A               	movwf	(btemp+5)^0,c
 12376  0145A2  343F               	rlcf	(btemp+10)^0,w,c
 12377  0145A4  6E3B               	movwf	(btemp+6)^0,c
 12378  0145A6  3440               	rlcf	(btemp+11)^0,w,c
 12379  0145A8  6E3C               	movwf	(btemp+7)^0,c
 12380  0145AA  5039               	movf	(btemp+4)^0,w,c
 12381  0145AC  103A               	iorwf	(btemp+5)^0,w,c
 12382  0145AE  103B               	iorwf	(btemp+6)^0,w,c
 12383  0145B0  103C               	iorwf	(btemp+7)^0,w,c
 12384  0145B2  B4D8               	btfsc	status,2,c
 12385  0145B4  D018               	goto	l6281
 12386  0145B6  0E00               	movlw	0
 12387  0145B8  6E3D               	movwf	(btemp+8)^0,c
 12388  0145BA  0E00               	movlw	0
 12389  0145BC  6E3E               	movwf	(btemp+9)^0,c
 12390  0145BE  0E80               	movlw	128
 12391  0145C0  6E3F               	movwf	(btemp+10)^0,c
 12392  0145C2  0EBF               	movlw	191
 12393  0145C4  6E40               	movwf	(btemp+11)^0,c
 12394                           
 12395                           ;stkvar	_u @ sp[(-10)+0]
 12396  0145C6  0EF6               	movlw	-10
 12397  0145C8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12398  0145CE  0EF7               	movlw	-9
 12399  0145D0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12400  0145D6  0EF8               	movlw	-8
 12401  0145D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12402  0145DE  0EF9               	movlw	-7
 12403  0145E0  0060  F103  FFE3   	movff	btemp+11,plusw1
 12404  0145E6                     l6281:
 12405                           
 12406                           ;stkvar	_u @ sp[(-10)+0]
 12407  0145E6  0EF6               	movlw	-10
 12408  0145E8  006F FF8C  F035    	movff	plusw1,btemp
 12409  0145EE  0EF7               	movlw	-9
 12410  0145F0  006F FF8C  F036    	movff	plusw1,btemp+1
 12411  0145F6  0EF8               	movlw	-8
 12412  0145F8  006F FF8C  F037    	movff	plusw1,btemp+2
 12413  0145FE  0EF9               	movlw	-7
 12414  014600                     L11:
 12415  014600  006F FF8C  F038    	movff	plusw1,btemp+3
 12416                           
 12417                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12418  014606  0EF2               	movlw	242
 12419  014608  26E1               	addwf	fsr1l,f,c
 12420  01460A  0EFF               	movlw	255
 12421  01460C  22E2               	addwfc	fsr1h,f,c
 12422  01460E  0012               	return		;funcret
 12423  014610                     __end_of_floorf:
 12424                           	opt callstack 0
 12425                           
 12426 ;; *************** function ___fpclassifyf *****************
 12427 ;; Defined at:
 12428 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  x               4  [STACK] float 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  u               4  [STACK] struct .
 12433 ;;  e               2  [STACK] int 
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  2  [STACK] int 
 12436 ;; Registers used:
 12437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/4
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;Total ram usage:        0 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    6
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_efgtoa
 12454 ;; This function uses a reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text46
 12458  015A8C                     __ptext46:
 12459                           	opt callstack 0
 12460  015A8C                     ___fpclassifyf:
 12461                           	opt callstack 0
 12462                           
 12463                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12464  015A8C  0E06               	movlw	6
 12465  015A8E  26E1               	addwf	fsr1l,f,c
 12466  015A90  0E00               	movlw	0
 12467  015A92  22E2               	addwfc	fsr1h,f,c
 12468                           
 12469                           ;incstack = 0
 12470  015A94  0060  F32C  F03D   	movff	___fpclassifyf@F463,btemp+8
 12471  015A9A  0060  F330  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12472  015AA0  0060  F334  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12473  015AA6  0060  F338  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12474                           
 12475                           ;stkvar	_u @ sp[(-6)+0]
 12476  015AAC  0EFA               	movlw	-6
 12477  015AAE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12478  015AB4  0EFB               	movlw	-5
 12479  015AB6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12480  015ABC  0EFC               	movlw	-4
 12481  015ABE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12482  015AC4  0EFD               	movlw	-3
 12483  015AC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 12484                           
 12485                           ;stkvar	_x @ sp[(-6)+-4]
 12486  015ACC  0EF6               	movlw	-10
 12487  015ACE  006F FF8C  F03D    	movff	plusw1,btemp+8
 12488  015AD4  0EF7               	movlw	-9
 12489  015AD6  006F FF8C  F03E    	movff	plusw1,btemp+9
 12490  015ADC  0EF8               	movlw	-8
 12491  015ADE  006F FF8C  F03F    	movff	plusw1,btemp+10
 12492  015AE4  0EF9               	movlw	-7
 12493  015AE6  006F FF8C  F040    	movff	plusw1,btemp+11
 12494                           
 12495                           ;stkvar	_u @ sp[(-6)+0]
 12496  015AEC  0EFA               	movlw	-6
 12497  015AEE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12498  015AF4  0EFB               	movlw	-5
 12499  015AF6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12500  015AFC  0EFC               	movlw	-4
 12501  015AFE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12502  015B04  0EFD               	movlw	-3
 12503  015B06  0060  F103  FFE3   	movff	btemp+11,plusw1
 12504                           
 12505                           ;stkvar	_u @ sp[(-6)+0]
 12506  015B0C  0EFA               	movlw	-6
 12507  015B0E  006F FF8C  F03D    	movff	plusw1,btemp+8
 12508  015B14  0EFB               	movlw	-5
 12509  015B16  006F FF8C  F03E    	movff	plusw1,btemp+9
 12510  015B1C  0EFC               	movlw	-4
 12511  015B1E  006F FF8C  F03F    	movff	plusw1,btemp+10
 12512  015B24  0EFD               	movlw	-3
 12513  015B26  006F FF8C  F040    	movff	plusw1,btemp+11
 12514  015B2C  0E18               	movlw	24
 12515  015B2E  D005               	goto	u4860
 12516  015B30                     u4865:
 12517  015B30  90D8               	bcf	status,0,c
 12518  015B32  3240               	rrcf	(btemp+11)^0,f,c
 12519  015B34  323F               	rrcf	(btemp+10)^0,f,c
 12520  015B36  323E               	rrcf	(btemp+9)^0,f,c
 12521  015B38  323D               	rrcf	(btemp+8)^0,f,c
 12522  015B3A                     u4860:
 12523  015B3A  2EE8               	decfsz	wreg,f,c
 12524  015B3C  D7F9               	goto	u4865
 12525  015B3E  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12526  015B44  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12527  015B4A  0EFF               	movlw	255
 12528  015B4C  163B               	andwf	(btemp+6)^0,f,c
 12529  015B4E  0E00               	movlw	0
 12530  015B50  163C               	andwf	(btemp+7)^0,f,c
 12531                           
 12532                           ;stkvar	_e @ sp[(-6)+4]
 12533  015B52  0EFE               	movlw	-2
 12534  015B54  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12535  015B5A  0EFF               	movlw	-1
 12536  015B5C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12537                           
 12538                           ;stkvar	_e @ sp[(-6)+4]
 12539  015B62  0EFE               	movlw	-2
 12540  015B64  006F FF8C  F035    	movff	plusw1,btemp
 12541  015B6A  0EFF               	movlw	-1
 12542  015B6C  50E3               	movf	plusw1,w,c
 12543  015B6E  1035               	iorwf	btemp^0,w,c
 12544  015B70  A4D8               	btfss	status,2,c
 12545  015B72  D023               	goto	l6219
 12546                           
 12547                           ;stkvar	_u @ sp[(-6)+0]
 12548  015B74  0EFA               	movlw	-6
 12549  015B76  006F FF8C  F03D    	movff	plusw1,btemp+8
 12550  015B7C  0EFB               	movlw	-5
 12551  015B7E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12552  015B84  0EFC               	movlw	-4
 12553  015B86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12554  015B8C  0EFD               	movlw	-3
 12555  015B8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12556  015B94  90D8               	bcf	status,0,c
 12557  015B96  343D               	rlcf	(btemp+8)^0,w,c
 12558  015B98  6E39               	movwf	(btemp+4)^0,c
 12559  015B9A  343E               	rlcf	(btemp+9)^0,w,c
 12560  015B9C  6E3A               	movwf	(btemp+5)^0,c
 12561  015B9E  343F               	rlcf	(btemp+10)^0,w,c
 12562  015BA0  6E3B               	movwf	(btemp+6)^0,c
 12563  015BA2  3440               	rlcf	(btemp+11)^0,w,c
 12564  015BA4  6E3C               	movwf	(btemp+7)^0,c
 12565  015BA6  5039               	movf	(btemp+4)^0,w,c
 12566  015BA8  103A               	iorwf	(btemp+5)^0,w,c
 12567  015BAA  103B               	iorwf	(btemp+6)^0,w,c
 12568  015BAC  103C               	iorwf	(btemp+7)^0,w,c
 12569  015BAE  A4D8               	btfss	status,2,c
 12570  015BB0  D002               	goto	l6215
 12571  015BB2  0E02               	movlw	2
 12572  015BB4  D02E               	goto	L12
 12573  015BB6                     l6215:
 12574  015BB6  0E03               	movlw	3
 12575  015BB8  D02C               	goto	L12
 12576  015BBA                     l6219:
 12577                           
 12578                           ;stkvar	_e @ sp[(-6)+4]
 12579  015BBA  0EFE               	movlw	-2
 12580  015BBC  28E3               	incf	plusw1,w,c
 12581  015BBE  E128               	bnz	l6225
 12582  015BC0  0EFF               	movlw	-1
 12583  015BC2  50E3               	movf	plusw1,w,c
 12584  015BC4  A4D8               	btfss	status,2,c
 12585  015BC6  D024               	goto	l6225
 12586                           
 12587                           ;stkvar	_u @ sp[(-6)+0]
 12588  015BC8  0EFA               	movlw	-6
 12589  015BCA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12590  015BD0  0EFB               	movlw	-5
 12591  015BD2  006F FF8C  F03E    	movff	plusw1,btemp+9
 12592  015BD8  0EFC               	movlw	-4
 12593  015BDA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12594  015BE0  0EFD               	movlw	-3
 12595  015BE2  006F FF8C  F040    	movff	plusw1,btemp+11
 12596  015BE8  0E09               	movlw	9
 12597  015BEA                     u4905:
 12598  015BEA  90D8               	bcf	status,0,c
 12599  015BEC  363D               	rlcf	(btemp+8)^0,f,c
 12600  015BEE  363E               	rlcf	(btemp+9)^0,f,c
 12601  015BF0  363F               	rlcf	(btemp+10)^0,f,c
 12602  015BF2  3640               	rlcf	(btemp+11)^0,f,c
 12603  015BF4  2EE8               	decfsz	wreg,f,c
 12604  015BF6  D7F9               	goto	u4905
 12605  015BF8  503D               	movf	(btemp+8)^0,w,c
 12606  015BFA  103E               	iorwf	(btemp+9)^0,w,c
 12607  015BFC  103F               	iorwf	(btemp+10)^0,w,c
 12608  015BFE  1040               	iorwf	(btemp+11)^0,w,c
 12609  015C00  A4D8               	btfss	status,2,c
 12610  015C02  D002               	goto	u4910
 12611  015C04  0E01               	movlw	1
 12612  015C06  D001               	goto	u4920
 12613  015C08                     u4910:
 12614  015C08  0E00               	movlw	0
 12615  015C0A                     u4920:
 12616  015C0A  6E35               	movwf	btemp^0,c
 12617  015C0C  6A36               	clrf	(btemp+1)^0,c
 12618  015C0E  D004               	goto	l2655
 12619  015C10                     l6225:
 12620  015C10  0E04               	movlw	4
 12621  015C12                     L12:
 12622  015C12  6E35               	movwf	btemp^0,c
 12623  015C14  0E00               	movlw	0
 12624  015C16  6E36               	movwf	(btemp+1)^0,c
 12625  015C18                     l2655:
 12626                           
 12627                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12628  015C18  0EF6               	movlw	246
 12629  015C1A  26E1               	addwf	fsr1l,f,c
 12630  015C1C  0EFF               	movlw	255
 12631  015C1E  22E2               	addwfc	fsr1h,f,c
 12632  015C20  0012               	return		;funcret
 12633  015C22                     __end_of___fpclassifyf:
 12634                           	opt callstack 0
 12635                           
 12636 ;; *************** function ___fltol *****************
 12637 ;; Defined at:
 12638 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;  f1              4  [STACK] int 
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;  exp1            1  [STACK] unsigned char 
 12643 ;;  sign1           1  [STACK] unsigned char 
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  4  [STACK] long 
 12646 ;; Registers used:
 12647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/4
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; Hardware stack levels required when called:    6
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_efgtoa
 12664 ;; This function uses a reentrant model
 12665 ;;
 12666                           
 12667                           	psect	text47
 12668  015C22                     __ptext47:
 12669                           	opt callstack 0
 12670  015C22                     ___fltol:
 12671                           	opt callstack 0
 12672                           
 12673                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12674  015C22  52E6               	movf	postinc1,f,c
 12675  015C24  52E6               	movf	postinc1,f,c
 12676                           
 12677                           ;stkvar	_f1 @ sp[(-2)+-4]
 12678                           
 12679                           ;incstack = 0
 12680  015C26  0EFA               	movlw	-6
 12681  015C28  006F FF8C  F03D    	movff	plusw1,btemp+8
 12682  015C2E  0EFB               	movlw	-5
 12683  015C30  006F FF8C  F03E    	movff	plusw1,btemp+9
 12684  015C36  0EFC               	movlw	-4
 12685  015C38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12686  015C3E  0EFD               	movlw	-3
 12687  015C40  006F FF8C  F040    	movff	plusw1,btemp+11
 12688  015C46  0E18               	movlw	24
 12689  015C48  D005               	goto	u6070
 12690  015C4A                     u6075:
 12691  015C4A  90D8               	bcf	status,0,c
 12692  015C4C  3240               	rrcf	(btemp+11)^0,f,c
 12693  015C4E  323F               	rrcf	(btemp+10)^0,f,c
 12694  015C50  323E               	rrcf	(btemp+9)^0,f,c
 12695  015C52  323D               	rrcf	(btemp+8)^0,f,c
 12696  015C54                     u6070:
 12697  015C54  2EE8               	decfsz	wreg,f,c
 12698  015C56  D7F9               	goto	u6075
 12699                           
 12700                           ;stkvar	_exp1 @ sp[(-2)+0]
 12701  015C58  0EFE               	movlw	-2
 12702  015C5A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12703  015C60  0EFE               	movlw	-2
 12704  015C62  50E3               	movf	plusw1,w,c
 12705  015C64  A4D8               	btfss	status,2,c
 12706  015C66  D006               	goto	l6845
 12707  015C68                     u6080:
 12708  015C68  0E00               	movlw	0
 12709  015C6A  6E35               	movwf	btemp^0,c
 12710  015C6C  6A36               	clrf	(btemp+1)^0,c
 12711  015C6E  6A37               	clrf	(btemp+2)^0,c
 12712  015C70  6A38               	clrf	(btemp+3)^0,c
 12713  015C72  D08B               	goto	l2271
 12714  015C74                     l6845:
 12715                           
 12716                           ;stkvar	_f1 @ sp[(-2)+-4]
 12717  015C74  0EFA               	movlw	-6
 12718  015C76  006F FF8C  F03D    	movff	plusw1,btemp+8
 12719  015C7C  0EFB               	movlw	-5
 12720  015C7E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12721  015C84  0EFC               	movlw	-4
 12722  015C86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12723  015C8C  0EFD               	movlw	-3
 12724  015C8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12725  015C94  0E20               	movlw	32
 12726  015C96  D005               	goto	u6090
 12727  015C98                     u6095:
 12728  015C98  90D8               	bcf	status,0,c
 12729  015C9A  3240               	rrcf	(btemp+11)^0,f,c
 12730  015C9C  323F               	rrcf	(btemp+10)^0,f,c
 12731  015C9E  323E               	rrcf	(btemp+9)^0,f,c
 12732  015CA0  323D               	rrcf	(btemp+8)^0,f,c
 12733  015CA2                     u6090:
 12734  015CA2  2EE8               	decfsz	wreg,f,c
 12735  015CA4  D7F9               	goto	u6095
 12736                           
 12737                           ;stkvar	_sign1 @ sp[(-2)+1]
 12738  015CA6  0EFF               	movlw	-1
 12739  015CA8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12740                           
 12741                           ;stkvar	_f1 @ sp[(-2)+-4]
 12742  015CAE  0EFC               	movlw	-4
 12743  015CB0  8EE3               	bsf	plusw1,7,c
 12744                           
 12745                           ;stkvar	_f1 @ sp[(-2)+-4]
 12746  015CB2  50E1               	movf	fsr1l,w,c
 12747  015CB4  0FFA               	addlw	-6
 12748  015CB6  6ED9               	movwf	fsr2l,c
 12749  015CB8  50E2               	movf	fsr1h,w,c
 12750  015CBA  6EDA               	movwf	fsr2h,c
 12751  015CBC  0EFF               	movlw	255
 12752  015CBE  22DA               	addwfc	fsr2h,f,c
 12753  015CC0  0EFF               	movlw	255
 12754  015CC2  16DE               	andwf	postinc2,f,c
 12755  015CC4  0EFF               	movlw	255
 12756  015CC6  16DE               	andwf	postinc2,f,c
 12757  015CC8  0EFF               	movlw	255
 12758  015CCA  16DE               	andwf	postinc2,f,c
 12759  015CCC  0E00               	movlw	0
 12760  015CCE  16DE               	andwf	postinc2,f,c
 12761                           
 12762                           ;stkvar	_exp1 @ sp[(-2)+0]
 12763  015CD0  0EFE               	movlw	-2
 12764  015CD2  006F FF8C  F035    	movff	plusw1,btemp
 12765  015CD8  0E96               	movlw	150
 12766  015CDA  5E35               	subwf	btemp^0,f,c
 12767  015CDC  0EFE               	movlw	-2
 12768  015CDE  0060  F0D7  FFE3   	movff	btemp,plusw1
 12769                           
 12770                           ;stkvar	_exp1 @ sp[(-2)+0]
 12771  015CE4  0EFE               	movlw	-2
 12772  015CE6  AEE3               	btfss	plusw1,7,c
 12773  015CE8  D014               	goto	l6863
 12774                           
 12775                           ;stkvar	_exp1 @ sp[(-2)+0]
 12776  015CEA  0EFE               	movlw	-2
 12777  015CEC  50E3               	movf	plusw1,w,c
 12778  015CEE  0A80               	xorlw	128
 12779  015CF0  0F97               	addlw	151
 12780  015CF2  A0D8               	btfss	status,0,c
 12781  015CF4  D7B9               	goto	u6080
 12782  015CF6                     l6861:
 12783                           
 12784                           ;stkvar	_f1 @ sp[(-2)+-4]
 12785  015CF6  90D8               	bcf	status,0,c
 12786  015CF8  0EFD               	movlw	-3
 12787  015CFA  32E3               	rrcf	plusw1,f,c
 12788  015CFC  0EFC               	movlw	-4
 12789  015CFE  32E3               	rrcf	plusw1,f,c
 12790  015D00  0EFB               	movlw	-5
 12791  015D02  32E3               	rrcf	plusw1,f,c
 12792  015D04  0EFA               	movlw	-6
 12793  015D06  32E3               	rrcf	plusw1,f,c
 12794                           
 12795                           ;stkvar	_exp1 @ sp[(-2)+0]
 12796  015D08  0EFE               	movlw	-2
 12797  015D0A  2AE3               	incf	plusw1,f,c
 12798  015D0C  B4D8               	btfsc	status,2,c
 12799  015D0E  D018               	goto	u6140
 12800  015D10  D7F2               	goto	l6861
 12801  015D12                     l6863:
 12802                           
 12803                           ;stkvar	_exp1 @ sp[(-2)+0]
 12804  015D12  0EFE               	movlw	-2
 12805  015D14  006F FF8C  F035    	movff	plusw1,btemp
 12806  015D1A  0E1F               	movlw	31
 12807  015D1C  6435               	cpfsgt	btemp^0,c
 12808  015D1E  D00C               	goto	l6871
 12809  015D20  D7A3               	goto	u6080
 12810  015D22                     l6869:
 12811                           
 12812                           ;stkvar	_f1 @ sp[(-2)+-4]
 12813  015D22  90D8               	bcf	status,0,c
 12814  015D24  0EFA               	movlw	-6
 12815  015D26  36E3               	rlcf	plusw1,f,c
 12816  015D28  0EFB               	movlw	-5
 12817  015D2A  36E3               	rlcf	plusw1,f,c
 12818  015D2C  0EFC               	movlw	-4
 12819  015D2E  36E3               	rlcf	plusw1,f,c
 12820  015D30  0EFD               	movlw	-3
 12821  015D32  36E3               	rlcf	plusw1,f,c
 12822                           
 12823                           ;stkvar	_exp1 @ sp[(-2)+0]
 12824  015D34  0EFE               	movlw	-2
 12825  015D36  06E3               	decf	plusw1,f,c
 12826  015D38                     l6871:
 12827                           
 12828                           ;stkvar	_exp1 @ sp[(-2)+0]
 12829  015D38  0EFE               	movlw	-2
 12830  015D3A  50E3               	movf	plusw1,w,c
 12831  015D3C  A4D8               	btfss	status,2,c
 12832  015D3E  D7F1               	goto	l6869
 12833  015D40                     u6140:
 12834                           
 12835                           ;stkvar	_sign1 @ sp[(-2)+1]
 12836  015D40  0EFF               	movlw	-1
 12837  015D42  50E3               	movf	plusw1,w,c
 12838  015D44  B4D8               	btfsc	status,2,c
 12839  015D46  D011               	goto	u6160
 12840                           
 12841                           ;stkvar	_f1 @ sp[(-2)+-4]
 12842                           ;stkvar	_f1 @ sp[(-2)+-4]
 12843  015D48  0EFA               	movlw	-6
 12844  015D4A  6CE3               	negf	plusw1,c
 12845  015D4C  0EFB               	movlw	-5
 12846  015D4E  1EE3               	comf	plusw1,f,c
 12847  015D50  0EFC               	movlw	-4
 12848  015D52  1EE3               	comf	plusw1,f,c
 12849  015D54  0EFD               	movlw	-3
 12850  015D56  1EE3               	comf	plusw1,f,c
 12851  015D58  E308               	bnc	u6160
 12852  015D5A  0EFB               	movlw	-5
 12853  015D5C  2AE3               	incf	plusw1,f,c
 12854  015D5E  E305               	bnc	u6160
 12855  015D60  0EFC               	movlw	-4
 12856  015D62  2AE3               	incf	plusw1,f,c
 12857  015D64  E302               	bnc	u6160
 12858  015D66  0EFD               	movlw	-3
 12859  015D68  2AE3               	incf	plusw1,f,c
 12860  015D6A                     u6160:
 12861                           
 12862                           ;stkvar	_f1 @ sp[(-2)+-4]
 12863  015D6A  0EFA               	movlw	-6
 12864  015D6C  006F FF8C  F035    	movff	plusw1,btemp
 12865  015D72  0EFB               	movlw	-5
 12866  015D74  006F FF8C  F036    	movff	plusw1,btemp+1
 12867  015D7A  0EFC               	movlw	-4
 12868  015D7C  006F FF8C  F037    	movff	plusw1,btemp+2
 12869  015D82  0EFD               	movlw	-3
 12870  015D84  006F FF8C  F038    	movff	plusw1,btemp+3
 12871  015D8A                     l2271:
 12872                           
 12873                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12874  015D8A  0EFA               	movlw	250
 12875  015D8C  26E1               	addwf	fsr1l,f,c
 12876  015D8E  0EFF               	movlw	255
 12877  015D90  22E2               	addwfc	fsr1h,f,c
 12878  015D92  0012               	return		;funcret
 12879  015D94                     __end_of___fltol:
 12880                           	opt callstack 0
 12881                           
 12882 ;; *************** function ___flsub *****************
 12883 ;; Defined at:
 12884 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;  b               4  [STACK] long 
 12887 ;;  a               4  [STACK] long 
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;		None
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  4  [STACK] long 
 12892 ;; Registers used:
 12893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/4
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12903 ;;Total ram usage:        0 bytes
 12904 ;; Hardware stack levels used:    1
 12905 ;; Hardware stack levels required when called:    7
 12906 ;; This function calls:
 12907 ;;		___fladd
 12908 ;; This function is called by:
 12909 ;;		_conv_raw_result
 12910 ;;		_lp_filter
 12911 ;;		_efgtoa
 12912 ;; This function uses a reentrant model
 12913 ;;
 12914                           
 12915                           	psect	text48
 12916  017748                     __ptext48:
 12917                           	opt callstack 0
 12918  017748                     ___flsub:
 12919                           	opt callstack 16
 12920                           
 12921                           ;stkvar	_a @ sp[(0)+-8]
 12922                           
 12923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12924                           ;incstack = 0
 12925  017748  0EFB               	movlw	-5
 12926  01774A  7EE3               	btg	plusw1,7,c
 12927                           
 12928                           ;stkvar	_a @ sp[(0)+-8]
 12929  01774C  0EF8               	movlw	-8
 12930  01774E  006F FF8F FFE6     	movff	plusw1,postinc1
 12931  017754  006F FF8F FFE6     	movff	plusw1,postinc1
 12932  01775A  006F FF8F FFE6     	movff	plusw1,postinc1
 12933  017760  006F FF8F FFE6     	movff	plusw1,postinc1
 12934                           
 12935                           ;stkvar	_b @ sp[(-4)+-4]
 12936  017766  0EF8               	movlw	-8
 12937  017768  006F FF8F FFE6     	movff	plusw1,postinc1
 12938  01776E  006F FF8F FFE6     	movff	plusw1,postinc1
 12939  017774  006F FF8F FFE6     	movff	plusw1,postinc1
 12940  01777A  006F FF8F FFE6     	movff	plusw1,postinc1
 12941  017780  ECD6  F092         	call	___fladd	;wreg free
 12942                           
 12943                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12944  017784  0EF8               	movlw	248
 12945  017786  26E1               	addwf	fsr1l,f,c
 12946  017788  0EFF               	movlw	255
 12947  01778A  22E2               	addwfc	fsr1h,f,c
 12948  01778C  0012               	return		;funcret
 12949  01778E                     __end_of___flsub:
 12950                           	opt callstack 0
 12951                           
 12952 ;; *************** function ___fladd *****************
 12953 ;; Defined at:
 12954 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  b               4  [STACK] long 
 12957 ;;  a               4  [STACK] long 
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;  grs             1  [STACK] unsigned char 
 12960 ;;  bexp            1  [STACK] unsigned char 
 12961 ;;  aexp            1  [STACK] unsigned char 
 12962 ;;  signs           1  [STACK] unsigned char 
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  4  [STACK] unsigned char 
 12965 ;; Registers used:
 12966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/4
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;Total ram usage:        0 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:    6
 12979 ;; This function calls:
 12980 ;;		Nothing
 12981 ;; This function is called by:
 12982 ;;		_lp_filter
 12983 ;;		_efgtoa
 12984 ;;		___flsub
 12985 ;; This function uses a reentrant model
 12986 ;;
 12987                           
 12988                           	psect	text49
 12989  0125AC                     __ptext49:
 12990                           	opt callstack 0
 12991  0125AC                     ___fladd:
 12992                           	opt callstack 0
 12993                           
 12994                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12995  0125AC  52E6               	movf	postinc1,f,c
 12996  0125AE  52E6               	movf	postinc1,f,c
 12997  0125B0  52E6               	movf	postinc1,f,c
 12998  0125B2  52E6               	movf	postinc1,f,c
 12999                           
 13000                           ;stkvar	_b @ sp[(-4)+-4]
 13001                           
 13002                           ;incstack = 0
 13003  0125B4  0EFB               	movlw	251
 13004  0125B6  24E1               	addwf	fsr1l,w,c
 13005  0125B8  6ED9               	movwf	fsr2l,c
 13006  0125BA  0EFF               	movlw	255
 13007  0125BC  20E2               	addwfc	fsr1h,w,c
 13008  0125BE  6EDA               	movwf	fsr2h,c
 13009  0125C0  50DF               	movf	indf2,w,c
 13010  0125C2  6E40               	movwf	(btemp+11)^0,c
 13011  0125C4  0E80               	movlw	128
 13012  0125C6  1640               	andwf	(btemp+11)^0,f,c
 13013                           
 13014                           ;stkvar	_signs @ sp[(-4)+3]
 13015  0125C8  0EFF               	movlw	-1
 13016  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 13017                           
 13018                           ;stkvar	_b @ sp[(-4)+-4]
 13019  0125D0  0EFB               	movlw	251
 13020  0125D2  24E1               	addwf	fsr1l,w,c
 13021  0125D4  6ED9               	movwf	fsr2l,c
 13022  0125D6  0EFF               	movlw	255
 13023  0125D8  20E2               	addwfc	fsr1h,w,c
 13024  0125DA  6EDA               	movwf	fsr2h,c
 13025  0125DC  50DF               	movf	indf2,w,c
 13026  0125DE  6E40               	movwf	(btemp+11)^0,c
 13027  0125E0  90D8               	bcf	status,0,c
 13028  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 13029  0125E4  6E3F               	movwf	(btemp+10)^0,c
 13030                           
 13031                           ;stkvar	_bexp @ sp[(-4)+1]
 13032  0125E6  0EFD               	movlw	-3
 13033  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13034                           
 13035                           ;stkvar	_b @ sp[(-4)+-4]
 13036  0125EE  0EFA               	movlw	250
 13037  0125F0  24E1               	addwf	fsr1l,w,c
 13038  0125F2  6ED9               	movwf	fsr2l,c
 13039  0125F4  0EFF               	movlw	255
 13040  0125F6  20E2               	addwfc	fsr1h,w,c
 13041  0125F8  6EDA               	movwf	fsr2h,c
 13042  0125FA  AEDF               	btfss	indf2,7,c
 13043  0125FC  D002               	goto	l5959
 13044                           
 13045                           ;stkvar	_bexp @ sp[(-4)+1]
 13046  0125FE  0EFD               	movlw	-3
 13047  012600  80E3               	bsf	plusw1,0,c
 13048  012602                     l5959:
 13049                           
 13050                           ;stkvar	_bexp @ sp[(-4)+1]
 13051  012602  0EFD               	movlw	-3
 13052  012604  50E3               	movf	plusw1,w,c
 13053  012606  B4D8               	btfsc	status,2,c
 13054  012608  D027               	goto	l5969
 13055                           
 13056                           ;stkvar	_bexp @ sp[(-4)+1]
 13057  01260A  0EFD               	movlw	-3
 13058  01260C  28E3               	incf	plusw1,w,c
 13059  01260E  A4D8               	btfss	status,2,c
 13060  012610  D018               	goto	l5965
 13061  012612  0E00               	movlw	0
 13062  012614  6E3D               	movwf	(btemp+8)^0,c
 13063  012616  0E00               	movlw	0
 13064  012618  6E3E               	movwf	(btemp+9)^0,c
 13065  01261A  0E00               	movlw	0
 13066  01261C  6E3F               	movwf	(btemp+10)^0,c
 13067  01261E  0E00               	movlw	0
 13068  012620  6E40               	movwf	(btemp+11)^0,c
 13069                           
 13070                           ;stkvar	_b @ sp[(-4)+-4]
 13071  012622  0EF8               	movlw	-8
 13072  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13073  01262A  0EF9               	movlw	-7
 13074  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13075  012632  0EFA               	movlw	-6
 13076  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13077  01263A  0EFB               	movlw	-5
 13078  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13079  012642                     l5965:
 13080                           
 13081                           ;stkvar	_b @ sp[(-4)+-4]
 13082  012642  0EFA               	movlw	-6
 13083  012644  8EE3               	bsf	plusw1,7,c
 13084                           
 13085                           ;stkvar	_b @ sp[(-4)+-4]
 13086  012646  0EFB               	movlw	251
 13087  012648  24E1               	addwf	fsr1l,w,c
 13088  01264A  6ED9               	movwf	fsr2l,c
 13089  01264C  0EFF               	movlw	255
 13090  01264E  20E2               	addwfc	fsr1h,w,c
 13091  012650  6EDA               	movwf	fsr2h,c
 13092  012652  0E00               	movlw	0
 13093  012654  6EDF               	movwf	indf2,c
 13094  012656  D018               	goto	l5971
 13095  012658                     l5969:
 13096  012658  0E00               	movlw	0
 13097  01265A  6E3D               	movwf	(btemp+8)^0,c
 13098  01265C  0E00               	movlw	0
 13099  01265E  6E3E               	movwf	(btemp+9)^0,c
 13100  012660  0E00               	movlw	0
 13101  012662  6E3F               	movwf	(btemp+10)^0,c
 13102  012664  0E00               	movlw	0
 13103  012666  6E40               	movwf	(btemp+11)^0,c
 13104                           
 13105                           ;stkvar	_b @ sp[(-4)+-4]
 13106  012668  0EF8               	movlw	-8
 13107  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13108  012670  0EF9               	movlw	-7
 13109  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13110  012678  0EFA               	movlw	-6
 13111  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13112  012680  0EFB               	movlw	-5
 13113  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 13114  012688                     l5971:
 13115                           
 13116                           ;stkvar	_a @ sp[(-4)+-8]
 13117  012688  0EF7               	movlw	247
 13118  01268A  24E1               	addwf	fsr1l,w,c
 13119  01268C  6ED9               	movwf	fsr2l,c
 13120  01268E  0EFF               	movlw	255
 13121  012690  20E2               	addwfc	fsr1h,w,c
 13122  012692  6EDA               	movwf	fsr2h,c
 13123  012694  50DF               	movf	indf2,w,c
 13124  012696  6E40               	movwf	(btemp+11)^0,c
 13125  012698  0E80               	movlw	128
 13126  01269A  1640               	andwf	(btemp+11)^0,f,c
 13127                           
 13128                           ;stkvar	_aexp @ sp[(-4)+2]
 13129  01269C  0EFE               	movlw	-2
 13130  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13131                           
 13132                           ;stkvar	_signs @ sp[(-4)+3]
 13133                           ;stkvar	_aexp @ sp[(-4)+2]
 13134  0126A4  50E1               	movf	fsr1l,w,c
 13135  0126A6  0FFE               	addlw	-2
 13136  0126A8  6ED9               	movwf	fsr2l,c
 13137  0126AA  50E2               	movf	fsr1h,w,c
 13138  0126AC  6EDA               	movwf	fsr2h,c
 13139  0126AE  0EFF               	movlw	255
 13140  0126B0  22DA               	addwfc	fsr2h,f,c
 13141  0126B2  0EFF               	movlw	-1
 13142  0126B4  50E3               	movf	plusw1,w,c
 13143  0126B6  18DE               	xorwf	postinc2,w,c
 13144  0126B8  B4D8               	btfsc	status,2,c
 13145  0126BA  D002               	goto	l5977
 13146                           
 13147                           ;stkvar	_signs @ sp[(-4)+3]
 13148  0126BC  0EFF               	movlw	-1
 13149  0126BE  8CE3               	bsf	plusw1,6,c
 13150  0126C0                     l5977:
 13151                           
 13152                           ;stkvar	_a @ sp[(-4)+-8]
 13153  0126C0  0EF7               	movlw	247
 13154  0126C2  24E1               	addwf	fsr1l,w,c
 13155  0126C4  6ED9               	movwf	fsr2l,c
 13156  0126C6  0EFF               	movlw	255
 13157  0126C8  20E2               	addwfc	fsr1h,w,c
 13158  0126CA  6EDA               	movwf	fsr2h,c
 13159  0126CC  50DF               	movf	indf2,w,c
 13160  0126CE  6E40               	movwf	(btemp+11)^0,c
 13161  0126D0  90D8               	bcf	status,0,c
 13162  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 13163  0126D4  6E3F               	movwf	(btemp+10)^0,c
 13164                           
 13165                           ;stkvar	_aexp @ sp[(-4)+2]
 13166  0126D6  0EFE               	movlw	-2
 13167  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13168                           
 13169                           ;stkvar	_a @ sp[(-4)+-8]
 13170  0126DE  0EF6               	movlw	246
 13171  0126E0  24E1               	addwf	fsr1l,w,c
 13172  0126E2  6ED9               	movwf	fsr2l,c
 13173  0126E4  0EFF               	movlw	255
 13174  0126E6  20E2               	addwfc	fsr1h,w,c
 13175  0126E8  6EDA               	movwf	fsr2h,c
 13176  0126EA  AEDF               	btfss	indf2,7,c
 13177  0126EC  D002               	goto	l5983
 13178                           
 13179                           ;stkvar	_aexp @ sp[(-4)+2]
 13180  0126EE  0EFE               	movlw	-2
 13181  0126F0  80E3               	bsf	plusw1,0,c
 13182  0126F2                     l5983:
 13183                           
 13184                           ;stkvar	_aexp @ sp[(-4)+2]
 13185  0126F2  0EFE               	movlw	-2
 13186  0126F4  50E3               	movf	plusw1,w,c
 13187  0126F6  B4D8               	btfsc	status,2,c
 13188  0126F8  D027               	goto	l5993
 13189                           
 13190                           ;stkvar	_aexp @ sp[(-4)+2]
 13191  0126FA  0EFE               	movlw	-2
 13192  0126FC  28E3               	incf	plusw1,w,c
 13193  0126FE  A4D8               	btfss	status,2,c
 13194  012700  D018               	goto	l5989
 13195  012702  0E00               	movlw	0
 13196  012704  6E3D               	movwf	(btemp+8)^0,c
 13197  012706  0E00               	movlw	0
 13198  012708  6E3E               	movwf	(btemp+9)^0,c
 13199  01270A  0E00               	movlw	0
 13200  01270C  6E3F               	movwf	(btemp+10)^0,c
 13201  01270E  0E00               	movlw	0
 13202  012710  6E40               	movwf	(btemp+11)^0,c
 13203                           
 13204                           ;stkvar	_a @ sp[(-4)+-8]
 13205  012712  0EF4               	movlw	-12
 13206  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13207  01271A  0EF5               	movlw	-11
 13208  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13209  012722  0EF6               	movlw	-10
 13210  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13211  01272A  0EF7               	movlw	-9
 13212  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13213  012732                     l5989:
 13214                           
 13215                           ;stkvar	_a @ sp[(-4)+-8]
 13216  012732  0EF6               	movlw	-10
 13217  012734  8EE3               	bsf	plusw1,7,c
 13218                           
 13219                           ;stkvar	_a @ sp[(-4)+-8]
 13220  012736  0EF7               	movlw	247
 13221  012738  24E1               	addwf	fsr1l,w,c
 13222  01273A  6ED9               	movwf	fsr2l,c
 13223  01273C  0EFF               	movlw	255
 13224  01273E  20E2               	addwfc	fsr1h,w,c
 13225  012740  6EDA               	movwf	fsr2h,c
 13226  012742  0E00               	movlw	0
 13227  012744  6EDF               	movwf	indf2,c
 13228  012746  D018               	goto	l5995
 13229  012748                     l5993:
 13230  012748  0E00               	movlw	0
 13231  01274A  6E3D               	movwf	(btemp+8)^0,c
 13232  01274C  0E00               	movlw	0
 13233  01274E  6E3E               	movwf	(btemp+9)^0,c
 13234  012750  0E00               	movlw	0
 13235  012752  6E3F               	movwf	(btemp+10)^0,c
 13236  012754  0E00               	movlw	0
 13237  012756  6E40               	movwf	(btemp+11)^0,c
 13238                           
 13239                           ;stkvar	_a @ sp[(-4)+-8]
 13240  012758  0EF4               	movlw	-12
 13241  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13242  012760  0EF5               	movlw	-11
 13243  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13244  012768  0EF6               	movlw	-10
 13245  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13246  012770  0EF7               	movlw	-9
 13247  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 13248  012778                     l5995:
 13249                           
 13250                           ;stkvar	_bexp @ sp[(-4)+1]
 13251                           ;stkvar	_aexp @ sp[(-4)+2]
 13252  012778  50E1               	movf	fsr1l,w,c
 13253  01277A  0FFE               	addlw	-2
 13254  01277C  6ED9               	movwf	fsr2l,c
 13255  01277E  50E2               	movf	fsr1h,w,c
 13256  012780  6EDA               	movwf	fsr2h,c
 13257  012782  0EFF               	movlw	255
 13258  012784  22DA               	addwfc	fsr2h,f,c
 13259  012786  0EFD               	movlw	-3
 13260  012788  50E3               	movf	plusw1,w,c
 13261  01278A  5CDE               	subwf	postinc2,w,c
 13262  01278C  B0D8               	btfsc	status,0,c
 13263  01278E  D0A4               	goto	l6031
 13264                           
 13265                           ;stkvar	_signs @ sp[(-4)+3]
 13266  012790  0EFF               	movlw	-1
 13267  012792  ACE3               	btfss	plusw1,6,c
 13268  012794  D002               	goto	l6001
 13269                           
 13270                           ;stkvar	_signs @ sp[(-4)+3]
 13271  012796  0EFF               	movlw	-1
 13272  012798  7EE3               	btg	plusw1,7,c
 13273  01279A                     l6001:
 13274                           
 13275                           ;stkvar	_bexp @ sp[(-4)+1]
 13276                           ;stkvar	_grs @ sp[(-4)+0]
 13277  01279A  0EFD               	movlw	-3
 13278  01279C  006F FF8C  F035    	movff	plusw1,btemp
 13279  0127A2  0EFC               	movlw	-4
 13280  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13281                           
 13282                           ;stkvar	_aexp @ sp[(-4)+2]
 13283                           ;stkvar	_bexp @ sp[(-4)+1]
 13284  0127AA  0EFE               	movlw	-2
 13285  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 13286  0127B2  0EFD               	movlw	-3
 13287  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13288                           
 13289                           ;stkvar	_grs @ sp[(-4)+0]
 13290                           ;stkvar	_aexp @ sp[(-4)+2]
 13291  0127BA  0EFC               	movlw	-4
 13292  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 13293  0127C2  0EFE               	movlw	-2
 13294  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13295                           
 13296                           ;stkvar	_b @ sp[(-4)+-4]
 13297                           ;stkvar	_grs @ sp[(-4)+0]
 13298  0127CA  0EF8               	movlw	-8
 13299  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 13300  0127D2  0EFC               	movlw	-4
 13301  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13302                           
 13303                           ;stkvar	_a @ sp[(-4)+-8]
 13304                           ;stkvar	_b @ sp[(-4)+-4]
 13305  0127DA  0EF4               	movlw	-12
 13306  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 13307  0127E2  0EF8               	movlw	-8
 13308  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13309                           
 13310                           ;stkvar	_grs @ sp[(-4)+0]
 13311                           ;stkvar	_a @ sp[(-4)+-8]
 13312  0127EA  0EFC               	movlw	-4
 13313  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 13314  0127F2  0EF4               	movlw	-12
 13315  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13316                           
 13317                           ;stkvar	_b @ sp[(-4)+-4]
 13318  0127FA  0EF9               	movlw	249
 13319  0127FC  24E1               	addwf	fsr1l,w,c
 13320  0127FE  6ED9               	movwf	fsr2l,c
 13321  012800  0EFF               	movlw	255
 13322  012802  20E2               	addwfc	fsr1h,w,c
 13323  012804  6EDA               	movwf	fsr2h,c
 13324  012806  50DF               	movf	indf2,w,c
 13325  012808  6E40               	movwf	(btemp+11)^0,c
 13326                           
 13327                           ;stkvar	_grs @ sp[(-4)+0]
 13328  01280A  0EFC               	movlw	-4
 13329  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13330                           
 13331                           ;stkvar	_a @ sp[(-4)+-8]
 13332  012812  0EF5               	movlw	245
 13333  012814  24E1               	addwf	fsr1l,w,c
 13334  012816  6ED9               	movwf	fsr2l,c
 13335  012818  0EFF               	movlw	255
 13336  01281A  20E2               	addwfc	fsr1h,w,c
 13337  01281C  6EDA               	movwf	fsr2h,c
 13338                           
 13339                           ;stkvar	_b @ sp[(-4)+-4]
 13340  01281E  0EF9               	movlw	249
 13341  012820  24E1               	addwf	fsr1l,w,c
 13342  012822  6EE9               	movwf	fsr0l,c
 13343  012824  0EFF               	movlw	255
 13344  012826  20E2               	addwfc	fsr1h,w,c
 13345  012828  6EEA               	movwf	fsr0h,c
 13346  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13347                           
 13348                           ;stkvar	_grs @ sp[(-4)+0]
 13349                           ;stkvar	_a @ sp[(-4)+-8]
 13350  012830  0EF5               	movlw	245
 13351  012832  24E1               	addwf	fsr1l,w,c
 13352  012834  6ED9               	movwf	fsr2l,c
 13353  012836  0EFF               	movlw	255
 13354  012838  20E2               	addwfc	fsr1h,w,c
 13355  01283A  6EDA               	movwf	fsr2h,c
 13356  01283C  0EFC               	movlw	-4
 13357  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13358                           
 13359                           ;stkvar	_b @ sp[(-4)+-4]
 13360  012844  0EFA               	movlw	250
 13361  012846  24E1               	addwf	fsr1l,w,c
 13362  012848  6ED9               	movwf	fsr2l,c
 13363  01284A  0EFF               	movlw	255
 13364  01284C  20E2               	addwfc	fsr1h,w,c
 13365  01284E  6EDA               	movwf	fsr2h,c
 13366  012850  50DF               	movf	indf2,w,c
 13367  012852  6E40               	movwf	(btemp+11)^0,c
 13368                           
 13369                           ;stkvar	_grs @ sp[(-4)+0]
 13370  012854  0EFC               	movlw	-4
 13371  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13372                           
 13373                           ;stkvar	_a @ sp[(-4)+-8]
 13374  01285C  0EF6               	movlw	246
 13375  01285E  24E1               	addwf	fsr1l,w,c
 13376  012860  6ED9               	movwf	fsr2l,c
 13377  012862  0EFF               	movlw	255
 13378  012864  20E2               	addwfc	fsr1h,w,c
 13379  012866  6EDA               	movwf	fsr2h,c
 13380                           
 13381                           ;stkvar	_b @ sp[(-4)+-4]
 13382  012868  0EFA               	movlw	250
 13383  01286A  24E1               	addwf	fsr1l,w,c
 13384  01286C  6EE9               	movwf	fsr0l,c
 13385  01286E  0EFF               	movlw	255
 13386  012870  20E2               	addwfc	fsr1h,w,c
 13387  012872  6EEA               	movwf	fsr0h,c
 13388  012874  006F FF7F FFEF     	movff	indf2,indf0
 13389                           
 13390                           ;stkvar	_grs @ sp[(-4)+0]
 13391                           ;stkvar	_a @ sp[(-4)+-8]
 13392  01287A  0EF6               	movlw	246
 13393  01287C  24E1               	addwf	fsr1l,w,c
 13394  01287E  6ED9               	movwf	fsr2l,c
 13395  012880  0EFF               	movlw	255
 13396  012882  20E2               	addwfc	fsr1h,w,c
 13397  012884  6EDA               	movwf	fsr2h,c
 13398  012886  0EFC               	movlw	-4
 13399  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13400                           
 13401                           ;stkvar	_b @ sp[(-4)+-4]
 13402  01288E  0EFB               	movlw	251
 13403  012890  24E1               	addwf	fsr1l,w,c
 13404  012892  6ED9               	movwf	fsr2l,c
 13405  012894  0EFF               	movlw	255
 13406  012896  20E2               	addwfc	fsr1h,w,c
 13407  012898  6EDA               	movwf	fsr2h,c
 13408  01289A  50DF               	movf	indf2,w,c
 13409  01289C  6E40               	movwf	(btemp+11)^0,c
 13410                           
 13411                           ;stkvar	_grs @ sp[(-4)+0]
 13412  01289E  0EFC               	movlw	-4
 13413  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13414                           
 13415                           ;stkvar	_a @ sp[(-4)+-8]
 13416  0128A6  0EF7               	movlw	247
 13417  0128A8  24E1               	addwf	fsr1l,w,c
 13418  0128AA  6ED9               	movwf	fsr2l,c
 13419  0128AC  0EFF               	movlw	255
 13420  0128AE  20E2               	addwfc	fsr1h,w,c
 13421  0128B0  6EDA               	movwf	fsr2h,c
 13422                           
 13423                           ;stkvar	_b @ sp[(-4)+-4]
 13424  0128B2  0EFB               	movlw	251
 13425  0128B4  24E1               	addwf	fsr1l,w,c
 13426  0128B6  6EE9               	movwf	fsr0l,c
 13427  0128B8  0EFF               	movlw	255
 13428  0128BA  20E2               	addwfc	fsr1h,w,c
 13429  0128BC  6EEA               	movwf	fsr0h,c
 13430  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13431                           
 13432                           ;stkvar	_grs @ sp[(-4)+0]
 13433                           ;stkvar	_a @ sp[(-4)+-8]
 13434  0128C4  0EF7               	movlw	247
 13435  0128C6  24E1               	addwf	fsr1l,w,c
 13436  0128C8  6ED9               	movwf	fsr2l,c
 13437  0128CA  0EFF               	movlw	255
 13438  0128CC  20E2               	addwfc	fsr1h,w,c
 13439  0128CE  6EDA               	movwf	fsr2h,c
 13440  0128D0  0EFC               	movlw	-4
 13441  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13442  0128D8                     l6031:
 13443                           
 13444                           ;stkvar	_grs @ sp[(-4)+0]
 13445  0128D8  0EFC               	movlw	-4
 13446  0128DA  6AE3               	clrf	plusw1,c
 13447                           
 13448                           ;stkvar	_aexp @ sp[(-4)+2]
 13449  0128DC  0EFE               	movlw	-2
 13450  0128DE  50E3               	movf	plusw1,w,c
 13451  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13452  0128E2  6A40               	clrf	(btemp+11)^0,c
 13453                           
 13454                           ;stkvar	_bexp @ sp[(-4)+1]
 13455  0128E4  0EFD               	movlw	-3
 13456  0128E6  50E3               	movf	plusw1,w,c
 13457  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13458  0128EA  0E00               	movlw	0
 13459  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13460  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13461  0128F0  D062               	goto	l6055
 13462  0128F2  5040               	movf	(btemp+11)^0,w,c
 13463  0128F4  E104               	bnz	u4460
 13464  0128F6  0E1A               	movlw	26
 13465  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13466  0128FA  A0D8               	btfss	status,0,c
 13467  0128FC  D05C               	goto	l6055
 13468  0128FE                     u4460:
 13469                           
 13470                           ;stkvar	_b @ sp[(-4)+-4]
 13471  0128FE  0EF8               	movlw	-8
 13472  012900  50E3               	movf	plusw1,w,c
 13473  012902  E10A               	bnz	u4471
 13474  012904  0EF9               	movlw	-7
 13475  012906  50E3               	movf	plusw1,w,c
 13476  012908  E107               	bnz	u4471
 13477  01290A  0EFA               	movlw	-6
 13478  01290C  50E3               	movf	plusw1,w,c
 13479  01290E  E104               	bnz	u4471
 13480  012910  0EFB               	movlw	-5
 13481  012912  50E3               	movf	plusw1,w,c
 13482  012914  B4D8               	btfsc	status,2,c
 13483  012916  D003               	goto	u4470
 13484  012918                     u4471:
 13485  012918  6A40               	clrf	(btemp+11)^0,c
 13486  01291A  2A40               	incf	(btemp+11)^0,f,c
 13487  01291C  D001               	goto	u4488
 13488  01291E                     u4470:
 13489  01291E  6A40               	clrf	(btemp+11)^0,c
 13490  012920                     u4488:
 13491                           
 13492                           ;stkvar	_grs @ sp[(-4)+0]
 13493  012920  0EFC               	movlw	-4
 13494  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13495                           
 13496                           ;stkvar	_b @ sp[(-4)+-4]
 13497  012928  0EF8               	movlw	-8
 13498  01292A  6AE3               	clrf	plusw1,c
 13499  01292C  0EF9               	movlw	-7
 13500  01292E  6AE3               	clrf	plusw1,c
 13501  012930  0EFA               	movlw	-6
 13502  012932  6AE3               	clrf	plusw1,c
 13503  012934  0EFB               	movlw	-5
 13504  012936  6AE3               	clrf	plusw1,c
 13505                           
 13506                           ;stkvar	_aexp @ sp[(-4)+2]
 13507                           ;stkvar	_bexp @ sp[(-4)+1]
 13508  012938  0EFE               	movlw	-2
 13509  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13510  012940  0EFD               	movlw	-3
 13511  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13512  012948  D042               	goto	u4520
 13513  01294A                     l6041:
 13514                           
 13515                           ;stkvar	_grs @ sp[(-4)+0]
 13516  01294A  0EFC               	movlw	-4
 13517  01294C  A0E3               	btfss	plusw1,0,c
 13518  01294E  D00D               	goto	l6045
 13519                           
 13520                           ;stkvar	_grs @ sp[(-4)+0]
 13521  012950  0EFC               	movlw	-4
 13522  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13523  012958  90D8               	bcf	status,0,c
 13524  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13525  01295C  0E01               	movlw	1
 13526  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13527                           
 13528                           ;stkvar	_grs @ sp[(-4)+0]
 13529  012960  0EFC               	movlw	-4
 13530  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13531  012968  D009               	goto	l6047
 13532  01296A                     l6045:
 13533                           
 13534                           ;stkvar	_grs @ sp[(-4)+0]
 13535  01296A  50E1               	movf	fsr1l,w,c
 13536  01296C  0FFC               	addlw	-4
 13537  01296E  6ED9               	movwf	fsr2l,c
 13538  012970  50E2               	movf	fsr1h,w,c
 13539  012972  6EDA               	movwf	fsr2h,c
 13540  012974  0EFF               	movlw	255
 13541  012976  22DA               	addwfc	fsr2h,f,c
 13542  012978  90D8               	bcf	status,0,c
 13543  01297A  32DF               	rrcf	indf2,f,c
 13544  01297C                     l6047:
 13545                           
 13546                           ;stkvar	_b @ sp[(-4)+-4]
 13547  01297C  0EF8               	movlw	-8
 13548  01297E  A0E3               	btfss	plusw1,0,c
 13549  012980  D002               	goto	l6051
 13550                           
 13551                           ;stkvar	_grs @ sp[(-4)+0]
 13552  012982  0EFC               	movlw	-4
 13553  012984  8EE3               	bsf	plusw1,7,c
 13554  012986                     l6051:
 13555  012986  0E01               	movlw	1
 13556  012988  6E40               	movwf	(btemp+11)^0,c
 13557                           
 13558                           ;stkvar	_b @ sp[(-4)+-4]
 13559  01298A  50E1               	movf	fsr1l,w,c
 13560  01298C  0FF8               	addlw	-8
 13561  01298E  6ED9               	movwf	fsr2l,c
 13562  012990  50E2               	movf	fsr1h,w,c
 13563  012992  6EDA               	movwf	fsr2h,c
 13564  012994  0EFF               	movlw	255
 13565  012996  22DA               	addwfc	fsr2h,f,c
 13566  012998  2840               	incf	(btemp+11)^0,w,c
 13567  01299A  52DE               	movf	postinc2,f,c
 13568  01299C  D008               	goto	u4510
 13569  01299E                     u4515:
 13570  01299E  52DE               	movf	postinc2,f,c
 13571  0129A0  90D8               	bcf	status,0,c
 13572  0129A2  BEDC               	btfsc	preinc2,7,c
 13573  0129A4  80D8               	bsf	status,0,c
 13574  0129A6  32DD               	rrcf	postdec2,f,c
 13575  0129A8  32DD               	rrcf	postdec2,f,c
 13576  0129AA  32DD               	rrcf	postdec2,f,c
 13577  0129AC  32DE               	rrcf	postinc2,f,c
 13578  0129AE                     u4510:
 13579  0129AE  2EE8               	decfsz	wreg,f,c
 13580  0129B0  D7F6               	goto	u4515
 13581                           
 13582                           ;stkvar	_bexp @ sp[(-4)+1]
 13583  0129B2  0EFD               	movlw	-3
 13584  0129B4  2AE3               	incf	plusw1,f,c
 13585  0129B6                     l6055:
 13586                           
 13587                           ;stkvar	_aexp @ sp[(-4)+2]
 13588                           ;stkvar	_bexp @ sp[(-4)+1]
 13589  0129B6  50E1               	movf	fsr1l,w,c
 13590  0129B8  0FFD               	addlw	-3
 13591  0129BA  6ED9               	movwf	fsr2l,c
 13592  0129BC  50E2               	movf	fsr1h,w,c
 13593  0129BE  6EDA               	movwf	fsr2h,c
 13594  0129C0  0EFF               	movlw	255
 13595  0129C2  22DA               	addwfc	fsr2h,f,c
 13596  0129C4  0EFE               	movlw	-2
 13597  0129C6  50E3               	movf	plusw1,w,c
 13598  0129C8  5CDE               	subwf	postinc2,w,c
 13599  0129CA  A0D8               	btfss	status,0,c
 13600  0129CC  D7BE               	goto	l6041
 13601  0129CE                     u4520:
 13602                           
 13603                           ;stkvar	_signs @ sp[(-4)+3]
 13604  0129CE  0EFF               	movlw	-1
 13605  0129D0  BCE3               	btfsc	plusw1,6,c
 13606  0129D2  D066               	goto	l6083
 13607                           
 13608                           ;stkvar	_bexp @ sp[(-4)+1]
 13609  0129D4  0EFD               	movlw	-3
 13610  0129D6  50E3               	movf	plusw1,w,c
 13611  0129D8  B4D8               	btfsc	status,2,c
 13612  0129DA  D0F2               	goto	u4620
 13613                           
 13614                           ;stkvar	_a @ sp[(-4)+-8]
 13615                           ;stkvar	_b @ sp[(-4)+-4]
 13616  0129DC  0EF8               	movlw	-8
 13617  0129DE  50E3               	movf	plusw1,w,c
 13618  0129E0  6E35               	movwf	btemp^0,c
 13619  0129E2  0EF4               	movlw	-12
 13620  0129E4  50E3               	movf	plusw1,w,c
 13621  0129E6  2635               	addwf	btemp^0,f,c
 13622  0129E8  0EF8               	movlw	-8
 13623  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13624  0129F0  0EF9               	movlw	-7
 13625  0129F2  50E3               	movf	plusw1,w,c
 13626  0129F4  6E35               	movwf	btemp^0,c
 13627  0129F6  0EF5               	movlw	-11
 13628  0129F8  50E3               	movf	plusw1,w,c
 13629  0129FA  2235               	addwfc	btemp^0,f,c
 13630  0129FC  0EF9               	movlw	-7
 13631  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13632  012A04  0EFA               	movlw	-6
 13633  012A06  50E3               	movf	plusw1,w,c
 13634  012A08  6E35               	movwf	btemp^0,c
 13635  012A0A  0EF6               	movlw	-10
 13636  012A0C  50E3               	movf	plusw1,w,c
 13637  012A0E  2235               	addwfc	btemp^0,f,c
 13638  012A10  0EFA               	movlw	-6
 13639  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13640  012A18  0EFB               	movlw	-5
 13641  012A1A  50E3               	movf	plusw1,w,c
 13642  012A1C  6E35               	movwf	btemp^0,c
 13643  012A1E  0EF7               	movlw	-9
 13644  012A20  50E3               	movf	plusw1,w,c
 13645  012A22  2235               	addwfc	btemp^0,f,c
 13646  012A24  0EFB               	movlw	-5
 13647  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13648                           
 13649                           ;stkvar	_b @ sp[(-4)+-4]
 13650  012A2C  0EFB               	movlw	-5
 13651  012A2E  A0E3               	btfss	plusw1,0,c
 13652  012A30  D101               	goto	u4660
 13653                           
 13654                           ;stkvar	_grs @ sp[(-4)+0]
 13655  012A32  0EFC               	movlw	-4
 13656  012A34  A0E3               	btfss	plusw1,0,c
 13657  012A36  D00D               	goto	l6073
 13658                           
 13659                           ;stkvar	_grs @ sp[(-4)+0]
 13660  012A38  0EFC               	movlw	-4
 13661  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13662  012A40  90D8               	bcf	status,0,c
 13663  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13664  012A44  0E01               	movlw	1
 13665  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13666                           
 13667                           ;stkvar	_grs @ sp[(-4)+0]
 13668  012A48  0EFC               	movlw	-4
 13669  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13670  012A50  D009               	goto	l6075
 13671  012A52                     l6073:
 13672                           
 13673                           ;stkvar	_grs @ sp[(-4)+0]
 13674  012A52  50E1               	movf	fsr1l,w,c
 13675  012A54  0FFC               	addlw	-4
 13676  012A56  6ED9               	movwf	fsr2l,c
 13677  012A58  50E2               	movf	fsr1h,w,c
 13678  012A5A  6EDA               	movwf	fsr2h,c
 13679  012A5C  0EFF               	movlw	255
 13680  012A5E  22DA               	addwfc	fsr2h,f,c
 13681  012A60  90D8               	bcf	status,0,c
 13682  012A62  32DF               	rrcf	indf2,f,c
 13683  012A64                     l6075:
 13684                           
 13685                           ;stkvar	_b @ sp[(-4)+-4]
 13686  012A64  0EF8               	movlw	-8
 13687  012A66  A0E3               	btfss	plusw1,0,c
 13688  012A68  D002               	goto	l6079
 13689                           
 13690                           ;stkvar	_grs @ sp[(-4)+0]
 13691  012A6A  0EFC               	movlw	-4
 13692  012A6C  8EE3               	bsf	plusw1,7,c
 13693  012A6E                     l6079:
 13694  012A6E  0E01               	movlw	1
 13695  012A70  6E40               	movwf	(btemp+11)^0,c
 13696                           
 13697                           ;stkvar	_b @ sp[(-4)+-4]
 13698  012A72  50E1               	movf	fsr1l,w,c
 13699  012A74  0FF8               	addlw	-8
 13700  012A76  6ED9               	movwf	fsr2l,c
 13701  012A78  50E2               	movf	fsr1h,w,c
 13702  012A7A  6EDA               	movwf	fsr2h,c
 13703  012A7C  0EFF               	movlw	255
 13704  012A7E  22DA               	addwfc	fsr2h,f,c
 13705  012A80  2840               	incf	(btemp+11)^0,w,c
 13706  012A82  52DE               	movf	postinc2,f,c
 13707  012A84  D008               	goto	u4580
 13708  012A86                     u4585:
 13709  012A86  52DE               	movf	postinc2,f,c
 13710  012A88  90D8               	bcf	status,0,c
 13711  012A8A  BEDC               	btfsc	preinc2,7,c
 13712  012A8C  80D8               	bsf	status,0,c
 13713  012A8E  32DD               	rrcf	postdec2,f,c
 13714  012A90  32DD               	rrcf	postdec2,f,c
 13715  012A92  32DD               	rrcf	postdec2,f,c
 13716  012A94  32DE               	rrcf	postinc2,f,c
 13717  012A96                     u4580:
 13718  012A96  2EE8               	decfsz	wreg,f,c
 13719  012A98  D7F6               	goto	u4585
 13720                           
 13721                           ;stkvar	_bexp @ sp[(-4)+1]
 13722  012A9A  0EFD               	movlw	-3
 13723  012A9C  2AE3               	incf	plusw1,f,c
 13724  012A9E  D0CA               	goto	u4660
 13725  012AA0                     l6083:
 13726                           
 13727                           ;stkvar	_a @ sp[(-4)+-8]
 13728                           ;stkvar	_b @ sp[(-4)+-4]
 13729  012AA0  50E1               	movf	fsr1l,w,c
 13730  012AA2  0FF8               	addlw	-8
 13731  012AA4  6ED9               	movwf	fsr2l,c
 13732  012AA6  50E2               	movf	fsr1h,w,c
 13733  012AA8  6EDA               	movwf	fsr2h,c
 13734  012AAA  0EFF               	movlw	255
 13735  012AAC  22DA               	addwfc	fsr2h,f,c
 13736  012AAE  0EF4               	movlw	-12
 13737  012AB0  50E3               	movf	plusw1,w,c
 13738  012AB2  5CDE               	subwf	postinc2,w,c
 13739  012AB4  0EF5               	movlw	-11
 13740  012AB6  50E3               	movf	plusw1,w,c
 13741  012AB8  58DE               	subwfb	postinc2,w,c
 13742  012ABA  0EF6               	movlw	-10
 13743  012ABC  50E3               	movf	plusw1,w,c
 13744  012ABE  58DE               	subwfb	postinc2,w,c
 13745  012AC0  50DE               	movf	postinc2,w,c
 13746  012AC2  0A80               	xorlw	128
 13747  012AC4  6E35               	movwf	btemp^0,c
 13748  012AC6  0EF7               	movlw	-9
 13749  012AC8  50E3               	movf	plusw1,w,c
 13750  012ACA  0A80               	xorlw	128
 13751  012ACC  5835               	subwfb	btemp^0,w,c
 13752  012ACE  B0D8               	btfsc	status,0,c
 13753  012AD0  D053               	goto	l6095
 13754                           
 13755                           ;stkvar	_b @ sp[(-4)+-4]
 13756                           ;stkvar	_a @ sp[(-4)+-8]
 13757  012AD2  0EF4               	movlw	-12
 13758  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13759  012ADA  0EF5               	movlw	-11
 13760  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13761  012AE2  0EF6               	movlw	-10
 13762  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13763  012AEA  0EF7               	movlw	-9
 13764  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13765  012AF2  0EF8               	movlw	-8
 13766  012AF4  50E3               	movf	plusw1,w,c
 13767  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13768  012AF8  0EF9               	movlw	-7
 13769  012AFA  50E3               	movf	plusw1,w,c
 13770  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13771  012AFE  0EFA               	movlw	-6
 13772  012B00  50E3               	movf	plusw1,w,c
 13773  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13774  012B04  0EFB               	movlw	-5
 13775  012B06  50E3               	movf	plusw1,w,c
 13776  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13777  012B0A  0EFF               	movlw	255
 13778  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13779  012B0E  6E39               	movwf	(btemp+4)^0,c
 13780  012B10  0EFF               	movlw	255
 13781  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13782  012B14  6E3A               	movwf	(btemp+5)^0,c
 13783  012B16  0EFF               	movlw	255
 13784  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13785  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13786  012B1C  0EFF               	movlw	255
 13787  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13788  012B20  6E3C               	movwf	(btemp+7)^0,c
 13789                           
 13790                           ;stkvar	_b @ sp[(-4)+-4]
 13791  012B22  0EF8               	movlw	-8
 13792  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13793  012B2A  0EF9               	movlw	-7
 13794  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13795  012B32  0EFA               	movlw	-6
 13796  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13797  012B3A  0EFB               	movlw	-5
 13798  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13799                           
 13800                           ;stkvar	_signs @ sp[(-4)+3]
 13801  012B42  0EFF               	movlw	-1
 13802  012B44  7EE3               	btg	plusw1,7,c
 13803                           
 13804                           ;stkvar	_grs @ sp[(-4)+0]
 13805  012B46  0EFC               	movlw	-4
 13806  012B48  50E3               	movf	plusw1,w,c
 13807  012B4A  0800               	sublw	0
 13808  012B4C  6E40               	movwf	(btemp+11)^0,c
 13809                           
 13810                           ;stkvar	_grs @ sp[(-4)+0]
 13811  012B4E  0EFC               	movlw	-4
 13812  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13813                           
 13814                           ;stkvar	_grs @ sp[(-4)+0]
 13815  012B56  0EFC               	movlw	-4
 13816  012B58  50E3               	movf	plusw1,w,c
 13817  012B5A  A4D8               	btfss	status,2,c
 13818  012B5C  D020               	goto	l6097
 13819                           
 13820                           ;stkvar	_b @ sp[(-4)+-4]
 13821  012B5E  50E1               	movf	fsr1l,w,c
 13822  012B60  0FF8               	addlw	-8
 13823  012B62  6ED9               	movwf	fsr2l,c
 13824  012B64  50E2               	movf	fsr1h,w,c
 13825  012B66  6EDA               	movwf	fsr2h,c
 13826  012B68  0EFF               	movlw	255
 13827  012B6A  22DA               	addwfc	fsr2h,f,c
 13828  012B6C  2ADE               	incf	postinc2,f,c
 13829  012B6E  0E00               	movlw	0
 13830  012B70  22DE               	addwfc	postinc2,f,c
 13831  012B72  22DE               	addwfc	postinc2,f,c
 13832  012B74  22DE               	addwfc	postinc2,f,c
 13833  012B76  D013               	goto	l6097
 13834  012B78                     l6095:
 13835                           
 13836                           ;stkvar	_a @ sp[(-4)+-8]
 13837                           ;stkvar	_b @ sp[(-4)+-4]
 13838  012B78  50E1               	movf	fsr1l,w,c
 13839  012B7A  0FF8               	addlw	-8
 13840  012B7C  6ED9               	movwf	fsr2l,c
 13841  012B7E  50E2               	movf	fsr1h,w,c
 13842  012B80  6EDA               	movwf	fsr2h,c
 13843  012B82  0EFF               	movlw	255
 13844  012B84  22DA               	addwfc	fsr2h,f,c
 13845  012B86  0EF4               	movlw	-12
 13846  012B88  50E3               	movf	plusw1,w,c
 13847  012B8A  5EDE               	subwf	postinc2,f,c
 13848  012B8C  0EF5               	movlw	-11
 13849  012B8E  50E3               	movf	plusw1,w,c
 13850  012B90  5ADE               	subwfb	postinc2,f,c
 13851  012B92  0EF6               	movlw	-10
 13852  012B94  50E3               	movf	plusw1,w,c
 13853  012B96  5ADE               	subwfb	postinc2,f,c
 13854  012B98  0EF7               	movlw	-9
 13855  012B9A  50E3               	movf	plusw1,w,c
 13856  012B9C  5ADE               	subwfb	postinc2,f,c
 13857  012B9E                     l6097:
 13858                           
 13859                           ;stkvar	_b @ sp[(-4)+-4]
 13860  012B9E  0EF8               	movlw	-8
 13861  012BA0  50E3               	movf	plusw1,w,c
 13862  012BA2  E145               	bnz	l6119
 13863  012BA4  0EF9               	movlw	-7
 13864  012BA6  50E3               	movf	plusw1,w,c
 13865  012BA8  E142               	bnz	l6119
 13866  012BAA  0EFA               	movlw	-6
 13867  012BAC  50E3               	movf	plusw1,w,c
 13868  012BAE  E13F               	bnz	l6119
 13869  012BB0  0EFB               	movlw	-5
 13870  012BB2  50E3               	movf	plusw1,w,c
 13871  012BB4  A4D8               	btfss	status,2,c
 13872  012BB6  D03B               	goto	l6119
 13873                           
 13874                           ;stkvar	_grs @ sp[(-4)+0]
 13875  012BB8  0EFC               	movlw	-4
 13876  012BBA  50E3               	movf	plusw1,w,c
 13877  012BBC  A4D8               	btfss	status,2,c
 13878  012BBE  D037               	goto	l6119
 13879  012BC0                     u4620:
 13880  012BC0  0E00               	movlw	0
 13881  012BC2  6E35               	movwf	btemp^0,c
 13882  012BC4  0E00               	movlw	0
 13883  012BC6  6E36               	movwf	(btemp+1)^0,c
 13884  012BC8  0E00               	movlw	0
 13885  012BCA  6E37               	movwf	(btemp+2)^0,c
 13886  012BCC  0E00               	movlw	0
 13887  012BCE  6E38               	movwf	(btemp+3)^0,c
 13888  012BD0  D0C6               	goto	l2511
 13889  012BD2                     l6105:
 13890                           
 13891                           ;stkvar	_b @ sp[(-4)+-4]
 13892  012BD2  90D8               	bcf	status,0,c
 13893  012BD4  0EF8               	movlw	-8
 13894  012BD6  36E3               	rlcf	plusw1,f,c
 13895  012BD8  0EF9               	movlw	-7
 13896  012BDA  36E3               	rlcf	plusw1,f,c
 13897  012BDC  0EFA               	movlw	-6
 13898  012BDE  36E3               	rlcf	plusw1,f,c
 13899  012BE0  0EFB               	movlw	-5
 13900  012BE2  36E3               	rlcf	plusw1,f,c
 13901                           
 13902                           ;stkvar	_grs @ sp[(-4)+0]
 13903  012BE4  0EFC               	movlw	-4
 13904  012BE6  AEE3               	btfss	plusw1,7,c
 13905  012BE8  D002               	goto	l2523
 13906                           
 13907                           ;stkvar	_b @ sp[(-4)+-4]
 13908  012BEA  0EF8               	movlw	-8
 13909  012BEC  80E3               	bsf	plusw1,0,c
 13910  012BEE                     l2523:
 13911                           
 13912                           ;stkvar	_grs @ sp[(-4)+0]
 13913  012BEE  0EFC               	movlw	-4
 13914  012BF0  A0E3               	btfss	plusw1,0,c
 13915  012BF2  D00E               	goto	l6113
 13916                           
 13917                           ;stkvar	_grs @ sp[(-4)+0]
 13918  012BF4  0EFC               	movlw	-4
 13919  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13920  012BFC  90D8               	bcf	status,0,c
 13921  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13922  012C00  6E3F               	movwf	(btemp+10)^0,c
 13923  012C02  0E01               	movlw	1
 13924  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13925                           
 13926                           ;stkvar	_grs @ sp[(-4)+0]
 13927  012C06  0EFC               	movlw	-4
 13928  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13929  012C0E  D009               	goto	l6115
 13930  012C10                     l6113:
 13931                           
 13932                           ;stkvar	_grs @ sp[(-4)+0]
 13933  012C10  50E1               	movf	fsr1l,w,c
 13934  012C12  0FFC               	addlw	-4
 13935  012C14  6ED9               	movwf	fsr2l,c
 13936  012C16  50E2               	movf	fsr1h,w,c
 13937  012C18  6EDA               	movwf	fsr2h,c
 13938  012C1A  0EFF               	movlw	255
 13939  012C1C  22DA               	addwfc	fsr2h,f,c
 13940  012C1E  90D8               	bcf	status,0,c
 13941  012C20  36DF               	rlcf	indf2,f,c
 13942  012C22                     l6115:
 13943                           
 13944                           ;stkvar	_bexp @ sp[(-4)+1]
 13945  012C22  0EFD               	movlw	-3
 13946  012C24  50E3               	movf	plusw1,w,c
 13947  012C26  B4D8               	btfsc	status,2,c
 13948  012C28  D002               	goto	l6119
 13949                           
 13950                           ;stkvar	_bexp @ sp[(-4)+1]
 13951  012C2A  0EFD               	movlw	-3
 13952  012C2C  06E3               	decf	plusw1,f,c
 13953  012C2E                     l6119:
 13954                           
 13955                           ;stkvar	_b @ sp[(-4)+-4]
 13956  012C2E  0EFA               	movlw	-6
 13957  012C30  AEE3               	btfss	plusw1,7,c
 13958  012C32  D7CF               	goto	l6105
 13959  012C34                     u4660:
 13960                           
 13961                           ;stkvar	_aexp @ sp[(-4)+2]
 13962  012C34  0EFE               	movlw	-2
 13963  012C36  6AE3               	clrf	plusw1,c
 13964                           
 13965                           ;stkvar	_grs @ sp[(-4)+0]
 13966  012C38  0EFC               	movlw	-4
 13967  012C3A  AEE3               	btfss	plusw1,7,c
 13968  012C3C  D00F               	goto	l6133
 13969                           
 13970                           ;stkvar	_grs @ sp[(-4)+0]
 13971  012C3E  0EFC               	movlw	-4
 13972  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13973  012C46  0E7F               	movlw	127
 13974  012C48  1640               	andwf	(btemp+11)^0,f,c
 13975  012C4A  B4D8               	btfsc	status,2,c
 13976  012C4C  D004               	goto	l6129
 13977  012C4E                     u4680:
 13978                           
 13979                           ;stkvar	_aexp @ sp[(-4)+2]
 13980  012C4E  0EFE               	movlw	-2
 13981  012C50  6AE3               	clrf	plusw1,c
 13982  012C52  2AE3               	incf	plusw1,f,c
 13983  012C54  D003               	goto	l6133
 13984  012C56                     l6129:
 13985                           
 13986                           ;stkvar	_b @ sp[(-4)+-4]
 13987  012C56  0EF8               	movlw	-8
 13988  012C58  B0E3               	btfsc	plusw1,0,c
 13989  012C5A  D7F9               	goto	u4680
 13990  012C5C                     l6133:
 13991                           
 13992                           ;stkvar	_aexp @ sp[(-4)+2]
 13993  012C5C  0EFE               	movlw	-2
 13994  012C5E  50E3               	movf	plusw1,w,c
 13995  012C60  B4D8               	btfsc	status,2,c
 13996  012C62  D02B               	goto	l6145
 13997                           
 13998                           ;stkvar	_b @ sp[(-4)+-4]
 13999  012C64  50E1               	movf	fsr1l,w,c
 14000  012C66  0FF8               	addlw	-8
 14001  012C68  6ED9               	movwf	fsr2l,c
 14002  012C6A  50E2               	movf	fsr1h,w,c
 14003  012C6C  6EDA               	movwf	fsr2h,c
 14004  012C6E  0EFF               	movlw	255
 14005  012C70  22DA               	addwfc	fsr2h,f,c
 14006  012C72  2ADE               	incf	postinc2,f,c
 14007  012C74  0E00               	movlw	0
 14008  012C76  22DE               	addwfc	postinc2,f,c
 14009  012C78  22DE               	addwfc	postinc2,f,c
 14010  012C7A  22DE               	addwfc	postinc2,f,c
 14011                           
 14012                           ;stkvar	_b @ sp[(-4)+-4]
 14013  012C7C  0EFB               	movlw	-5
 14014  012C7E  A0E3               	btfss	plusw1,0,c
 14015  012C80  D01C               	goto	l6145
 14016  012C82  0E01               	movlw	1
 14017  012C84  6E40               	movwf	(btemp+11)^0,c
 14018                           
 14019                           ;stkvar	_b @ sp[(-4)+-4]
 14020  012C86  50E1               	movf	fsr1l,w,c
 14021  012C88  0FF8               	addlw	-8
 14022  012C8A  6ED9               	movwf	fsr2l,c
 14023  012C8C  50E2               	movf	fsr1h,w,c
 14024  012C8E  6EDA               	movwf	fsr2h,c
 14025  012C90  0EFF               	movlw	255
 14026  012C92  22DA               	addwfc	fsr2h,f,c
 14027  012C94  2840               	incf	(btemp+11)^0,w,c
 14028  012C96  52DE               	movf	postinc2,f,c
 14029  012C98  D008               	goto	u4720
 14030  012C9A                     u4725:
 14031  012C9A  52DE               	movf	postinc2,f,c
 14032  012C9C  90D8               	bcf	status,0,c
 14033  012C9E  BEDC               	btfsc	preinc2,7,c
 14034  012CA0  80D8               	bsf	status,0,c
 14035  012CA2  32DD               	rrcf	postdec2,f,c
 14036  012CA4  32DD               	rrcf	postdec2,f,c
 14037  012CA6  32DD               	rrcf	postdec2,f,c
 14038  012CA8  32DE               	rrcf	postinc2,f,c
 14039  012CAA                     u4720:
 14040  012CAA  2EE8               	decfsz	wreg,f,c
 14041  012CAC  D7F6               	goto	u4725
 14042                           
 14043                           ;stkvar	_bexp @ sp[(-4)+1]
 14044  012CAE  0EFD               	movlw	-3
 14045  012CB0  28E3               	incf	plusw1,w,c
 14046  012CB2  B4D8               	btfsc	status,2,c
 14047  012CB4  D002               	goto	l6145
 14048                           
 14049                           ;stkvar	_bexp @ sp[(-4)+1]
 14050  012CB6  0EFD               	movlw	-3
 14051  012CB8  2AE3               	incf	plusw1,f,c
 14052  012CBA                     l6145:
 14053                           
 14054                           ;stkvar	_bexp @ sp[(-4)+1]
 14055  012CBA  0EFD               	movlw	-3
 14056  012CBC  28E3               	incf	plusw1,w,c
 14057  012CBE  B4D8               	btfsc	status,2,c
 14058  012CC0  D004               	goto	u4750
 14059                           
 14060                           ;stkvar	_bexp @ sp[(-4)+1]
 14061  012CC2  0EFD               	movlw	-3
 14062  012CC4  50E3               	movf	plusw1,w,c
 14063  012CC6  A4D8               	btfss	status,2,c
 14064  012CC8  D00E               	goto	l6155
 14065  012CCA                     u4750:
 14066                           
 14067                           ;stkvar	_b @ sp[(-4)+-4]
 14068  012CCA  0EF8               	movlw	-8
 14069  012CCC  6AE3               	clrf	plusw1,c
 14070  012CCE  0EF9               	movlw	-7
 14071  012CD0  6AE3               	clrf	plusw1,c
 14072  012CD2  0EFA               	movlw	-6
 14073  012CD4  6AE3               	clrf	plusw1,c
 14074  012CD6  0EFB               	movlw	-5
 14075  012CD8  6AE3               	clrf	plusw1,c
 14076                           
 14077                           ;stkvar	_bexp @ sp[(-4)+1]
 14078  012CDA  0EFD               	movlw	-3
 14079  012CDC  50E3               	movf	plusw1,w,c
 14080  012CDE  A4D8               	btfss	status,2,c
 14081  012CE0  D002               	goto	l6155
 14082                           
 14083                           ;stkvar	_signs @ sp[(-4)+3]
 14084  012CE2  0EFF               	movlw	-1
 14085  012CE4  6AE3               	clrf	plusw1,c
 14086  012CE6                     l6155:
 14087                           
 14088                           ;stkvar	_bexp @ sp[(-4)+1]
 14089  012CE6  0EFD               	movlw	-3
 14090  012CE8  A0E3               	btfss	plusw1,0,c
 14091  012CEA  D009               	goto	l6159
 14092                           
 14093                           ;stkvar	_b @ sp[(-4)+-4]
 14094  012CEC  0EFA               	movlw	250
 14095  012CEE  24E1               	addwf	fsr1l,w,c
 14096  012CF0  6ED9               	movwf	fsr2l,c
 14097  012CF2  0EFF               	movlw	255
 14098  012CF4  20E2               	addwfc	fsr1h,w,c
 14099  012CF6  6EDA               	movwf	fsr2h,c
 14100  012CF8  0E00               	movlw	0
 14101  012CFA  8EDB               	bsf	plusw2,7,c
 14102  012CFC  D008               	goto	l6161
 14103  012CFE                     l6159:
 14104                           
 14105                           ;stkvar	_b @ sp[(-4)+-4]
 14106  012CFE  0EFA               	movlw	250
 14107  012D00  24E1               	addwf	fsr1l,w,c
 14108  012D02  6ED9               	movwf	fsr2l,c
 14109  012D04  0EFF               	movlw	255
 14110  012D06  20E2               	addwfc	fsr1h,w,c
 14111  012D08  6EDA               	movwf	fsr2h,c
 14112  012D0A  0E7F               	movlw	127
 14113  012D0C  16DF               	andwf	indf2,f,c
 14114  012D0E                     l6161:
 14115                           
 14116                           ;stkvar	_b @ sp[(-4)+-4]
 14117  012D0E  0EFB               	movlw	251
 14118  012D10  24E1               	addwf	fsr1l,w,c
 14119  012D12  6ED9               	movwf	fsr2l,c
 14120  012D14  0EFF               	movlw	255
 14121  012D16  20E2               	addwfc	fsr1h,w,c
 14122  012D18  6EDA               	movwf	fsr2h,c
 14123                           
 14124                           ;stkvar	_bexp @ sp[(-4)+1]
 14125  012D1A  0EFD               	movlw	-3
 14126  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 14127  012D22  90D8               	bcf	status,0,c
 14128  012D24  3040               	rrcf	(btemp+11)^0,w,c
 14129  012D26  6EDF               	movwf	indf2,c
 14130                           
 14131                           ;stkvar	_signs @ sp[(-4)+3]
 14132  012D28  0EFF               	movlw	-1
 14133  012D2A  AEE3               	btfss	plusw1,7,c
 14134  012D2C  D008               	goto	l6167
 14135                           
 14136                           ;stkvar	_b @ sp[(-4)+-4]
 14137  012D2E  0EFB               	movlw	251
 14138  012D30  24E1               	addwf	fsr1l,w,c
 14139  012D32  6ED9               	movwf	fsr2l,c
 14140  012D34  0EFF               	movlw	255
 14141  012D36  20E2               	addwfc	fsr1h,w,c
 14142  012D38  6EDA               	movwf	fsr2h,c
 14143  012D3A  0E00               	movlw	0
 14144  012D3C  8EDB               	bsf	plusw2,7,c
 14145  012D3E                     l6167:
 14146                           
 14147                           ;stkvar	_b @ sp[(-4)+-4]
 14148  012D3E  0EF8               	movlw	-8
 14149  012D40  006F FF8C  F035    	movff	plusw1,btemp
 14150  012D46  0EF9               	movlw	-7
 14151  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 14152  012D4E  0EFA               	movlw	-6
 14153  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 14154  012D56  0EFB               	movlw	-5
 14155  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 14156  012D5E                     l2511:
 14157                           
 14158                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14159  012D5E  0EF4               	movlw	244
 14160  012D60  26E1               	addwf	fsr1l,f,c
 14161  012D62  0EFF               	movlw	255
 14162  012D64  22E2               	addwfc	fsr1h,f,c
 14163  012D66  0012               	return		;funcret
 14164  012D68                     __end_of___fladd:
 14165                           	opt callstack 0
 14166                           
 14167 ;; *************** function ___flneg *****************
 14168 ;; Defined at:
 14169 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;  f1              4  [STACK] unsigned char 
 14172 ;; Auto vars:     Size  Location     Type
 14173 ;;		None
 14174 ;; Return value:  Size  Location     Type
 14175 ;;                  4  [STACK] unsigned char 
 14176 ;; Registers used:
 14177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14178 ;; Tracked objects:
 14179 ;;		On entry : 0/4
 14180 ;;		On exit  : 0/0
 14181 ;;		Unchanged: 0/0
 14182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;Total ram usage:        0 bytes
 14188 ;; Hardware stack levels used:    1
 14189 ;; Hardware stack levels required when called:    6
 14190 ;; This function calls:
 14191 ;;		Nothing
 14192 ;; This function is called by:
 14193 ;;		_efgtoa
 14194 ;; This function uses a reentrant model
 14195 ;;
 14196                           
 14197                           	psect	text50
 14198  017700                     __ptext50:
 14199                           	opt callstack 0
 14200  017700                     ___flneg:
 14201                           	opt callstack 17
 14202                           
 14203                           ;stkvar	_f1 @ sp[(0)+-4]
 14204                           
 14205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14206                           ;incstack = 0
 14207  017700  0EFC               	movlw	-4
 14208  017702  50E3               	movf	plusw1,w,c
 14209  017704  E10A               	bnz	u6060
 14210  017706  0EFD               	movlw	-3
 14211  017708  50E3               	movf	plusw1,w,c
 14212  01770A  E107               	bnz	u6060
 14213  01770C  0EFE               	movlw	-2
 14214  01770E  50E3               	movf	plusw1,w,c
 14215  017710  E104               	bnz	u6060
 14216  017712  0EFF               	movlw	-1
 14217  017714  50E3               	movf	plusw1,w,c
 14218  017716  B4D8               	btfsc	status,2,c
 14219  017718  D002               	goto	l6835
 14220  01771A                     u6060:
 14221                           
 14222                           ;stkvar	_f1 @ sp[(0)+-4]
 14223  01771A  0EFF               	movlw	-1
 14224  01771C  7EE3               	btg	plusw1,7,c
 14225  01771E                     l6835:
 14226                           
 14227                           ;stkvar	_f1 @ sp[(0)+-4]
 14228  01771E  0EFC               	movlw	-4
 14229  017720  006F FF8C  F035    	movff	plusw1,btemp
 14230  017726  0EFD               	movlw	-3
 14231  017728  006F FF8C  F036    	movff	plusw1,btemp+1
 14232  01772E  0EFE               	movlw	-2
 14233  017730  006F FF8C  F037    	movff	plusw1,btemp+2
 14234  017736  0EFF               	movlw	-1
 14235  017738  006F FF8C  F038    	movff	plusw1,btemp+3
 14236                           
 14237                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14238  01773E  52E5               	movf	postdec1,f,c
 14239  017740  52E5               	movf	postdec1,f,c
 14240  017742  52E5               	movf	postdec1,f,c
 14241  017744  52E5               	movf	postdec1,f,c
 14242  017746  0012               	return		;funcret
 14243  017748                     __end_of___flneg:
 14244                           	opt callstack 0
 14245                           
 14246 ;; *************** function ___flmul *****************
 14247 ;; Defined at:
 14248 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;  b               4  [STACK] unsigned char 
 14251 ;;  a               4  [STACK] unsigned char 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;  prod            4  [STACK] struct .
 14254 ;;  grs             4  [STACK] unsigned long 
 14255 ;;  temp            2  [STACK] struct .
 14256 ;;  bexp            1  [STACK] unsigned char 
 14257 ;;  aexp            1  [STACK] unsigned char 
 14258 ;;  sign            1  [STACK] unsigned char 
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  4  [STACK] unsigned char 
 14261 ;; Registers used:
 14262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/4
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;Total ram usage:        0 bytes
 14273 ;; Hardware stack levels used:    1
 14274 ;; Hardware stack levels required when called:    6
 14275 ;; This function calls:
 14276 ;;		Nothing
 14277 ;; This function is called by:
 14278 ;;		_conv_raw_result
 14279 ;;		_lp_filter
 14280 ;;		_efgtoa
 14281 ;; This function uses a reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text51
 14285  011D82                     __ptext51:
 14286                           	opt callstack 0
 14287  011D82                     ___flmul:
 14288                           	opt callstack 0
 14289                           
 14290                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14291  011D82  0E0D               	movlw	13
 14292  011D84  26E1               	addwf	fsr1l,f,c
 14293  011D86  0E00               	movlw	0
 14294  011D88  22E2               	addwfc	fsr1h,f,c
 14295                           
 14296                           ;stkvar	_b @ sp[(-13)+-4]
 14297                           
 14298                           ;incstack = 0
 14299  011D8A  0EF2               	movlw	242
 14300  011D8C  24E1               	addwf	fsr1l,w,c
 14301  011D8E  6ED9               	movwf	fsr2l,c
 14302  011D90  0EFF               	movlw	255
 14303  011D92  20E2               	addwfc	fsr1h,w,c
 14304  011D94  6EDA               	movwf	fsr2h,c
 14305  011D96  50DF               	movf	indf2,w,c
 14306  011D98  6E40               	movwf	(btemp+11)^0,c
 14307  011D9A  0E80               	movlw	128
 14308  011D9C  1640               	andwf	(btemp+11)^0,f,c
 14309                           
 14310                           ;stkvar	_sign @ sp[(-13)+12]
 14311  011D9E  0EFF               	movlw	-1
 14312  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14313                           
 14314                           ;stkvar	_b @ sp[(-13)+-4]
 14315  011DA6  0EF2               	movlw	242
 14316  011DA8  24E1               	addwf	fsr1l,w,c
 14317  011DAA  6ED9               	movwf	fsr2l,c
 14318  011DAC  0EFF               	movlw	255
 14319  011DAE  20E2               	addwfc	fsr1h,w,c
 14320  011DB0  6EDA               	movwf	fsr2h,c
 14321  011DB2  50DF               	movf	indf2,w,c
 14322  011DB4  6E40               	movwf	(btemp+11)^0,c
 14323  011DB6  90D8               	bcf	status,0,c
 14324  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14325  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14326                           
 14327                           ;stkvar	_bexp @ sp[(-13)+10]
 14328  011DBC  0EFD               	movlw	-3
 14329  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14330                           
 14331                           ;stkvar	_b @ sp[(-13)+-4]
 14332  011DC4  0EF1               	movlw	241
 14333  011DC6  24E1               	addwf	fsr1l,w,c
 14334  011DC8  6ED9               	movwf	fsr2l,c
 14335  011DCA  0EFF               	movlw	255
 14336  011DCC  20E2               	addwfc	fsr1h,w,c
 14337  011DCE  6EDA               	movwf	fsr2h,c
 14338  011DD0  AEDF               	btfss	indf2,7,c
 14339  011DD2  D002               	goto	l6551
 14340                           
 14341                           ;stkvar	_bexp @ sp[(-13)+10]
 14342  011DD4  0EFD               	movlw	-3
 14343  011DD6  80E3               	bsf	plusw1,0,c
 14344  011DD8                     l6551:
 14345                           
 14346                           ;stkvar	_bexp @ sp[(-13)+10]
 14347  011DD8  0EFD               	movlw	-3
 14348  011DDA  50E3               	movf	plusw1,w,c
 14349  011DDC  B4D8               	btfsc	status,2,c
 14350  011DDE  D01F               	goto	l6559
 14351                           
 14352                           ;stkvar	_bexp @ sp[(-13)+10]
 14353  011DE0  0EFD               	movlw	-3
 14354  011DE2  28E3               	incf	plusw1,w,c
 14355  011DE4  A4D8               	btfss	status,2,c
 14356  011DE6  D018               	goto	l6557
 14357  011DE8  0E00               	movlw	0
 14358  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14359  011DEC  0E00               	movlw	0
 14360  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14361  011DF0  0E00               	movlw	0
 14362  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14363  011DF4  0E00               	movlw	0
 14364  011DF6  6E40               	movwf	(btemp+11)^0,c
 14365                           
 14366                           ;stkvar	_b @ sp[(-13)+-4]
 14367  011DF8  0EEF               	movlw	-17
 14368  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14369  011E00  0EF0               	movlw	-16
 14370  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14371  011E08  0EF1               	movlw	-15
 14372  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14373  011E10  0EF2               	movlw	-14
 14374  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14375  011E18                     l6557:
 14376                           
 14377                           ;stkvar	_b @ sp[(-13)+-4]
 14378  011E18  0EF1               	movlw	-15
 14379  011E1A  8EE3               	bsf	plusw1,7,c
 14380  011E1C  D018               	goto	l6561
 14381  011E1E                     l6559:
 14382  011E1E  0E00               	movlw	0
 14383  011E20  6E3D               	movwf	(btemp+8)^0,c
 14384  011E22  0E00               	movlw	0
 14385  011E24  6E3E               	movwf	(btemp+9)^0,c
 14386  011E26  0E00               	movlw	0
 14387  011E28  6E3F               	movwf	(btemp+10)^0,c
 14388  011E2A  0E00               	movlw	0
 14389  011E2C  6E40               	movwf	(btemp+11)^0,c
 14390                           
 14391                           ;stkvar	_b @ sp[(-13)+-4]
 14392  011E2E  0EEF               	movlw	-17
 14393  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14394  011E36  0EF0               	movlw	-16
 14395  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14396  011E3E  0EF1               	movlw	-15
 14397  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14398  011E46  0EF2               	movlw	-14
 14399  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14400  011E4E                     l6561:
 14401                           
 14402                           ;stkvar	_a @ sp[(-13)+-8]
 14403  011E4E  0EEE               	movlw	238
 14404  011E50  24E1               	addwf	fsr1l,w,c
 14405  011E52  6ED9               	movwf	fsr2l,c
 14406  011E54  0EFF               	movlw	255
 14407  011E56  20E2               	addwfc	fsr1h,w,c
 14408  011E58  6EDA               	movwf	fsr2h,c
 14409  011E5A  50DF               	movf	indf2,w,c
 14410  011E5C  6E40               	movwf	(btemp+11)^0,c
 14411  011E5E  0E80               	movlw	128
 14412  011E60  1640               	andwf	(btemp+11)^0,f,c
 14413                           
 14414                           ;stkvar	_sign @ sp[(-13)+12]
 14415  011E62  50E1               	movf	fsr1l,w,c
 14416  011E64  0FFF               	addlw	-1
 14417  011E66  6ED9               	movwf	fsr2l,c
 14418  011E68  50E2               	movf	fsr1h,w,c
 14419  011E6A  6EDA               	movwf	fsr2h,c
 14420  011E6C  0EFF               	movlw	255
 14421  011E6E  22DA               	addwfc	fsr2h,f,c
 14422  011E70  5040               	movf	(btemp+11)^0,w,c
 14423  011E72  1ADF               	xorwf	indf2,f,c
 14424                           
 14425                           ;stkvar	_a @ sp[(-13)+-8]
 14426  011E74  0EEE               	movlw	238
 14427  011E76  24E1               	addwf	fsr1l,w,c
 14428  011E78  6ED9               	movwf	fsr2l,c
 14429  011E7A  0EFF               	movlw	255
 14430  011E7C  20E2               	addwfc	fsr1h,w,c
 14431  011E7E  6EDA               	movwf	fsr2h,c
 14432  011E80  50DF               	movf	indf2,w,c
 14433  011E82  6E40               	movwf	(btemp+11)^0,c
 14434  011E84  90D8               	bcf	status,0,c
 14435  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14436  011E88  6E3F               	movwf	(btemp+10)^0,c
 14437                           
 14438                           ;stkvar	_aexp @ sp[(-13)+11]
 14439  011E8A  0EFE               	movlw	-2
 14440  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14441                           
 14442                           ;stkvar	_a @ sp[(-13)+-8]
 14443  011E92  0EED               	movlw	237
 14444  011E94  24E1               	addwf	fsr1l,w,c
 14445  011E96  6ED9               	movwf	fsr2l,c
 14446  011E98  0EFF               	movlw	255
 14447  011E9A  20E2               	addwfc	fsr1h,w,c
 14448  011E9C  6EDA               	movwf	fsr2h,c
 14449  011E9E  AEDF               	btfss	indf2,7,c
 14450  011EA0  D002               	goto	l6569
 14451                           
 14452                           ;stkvar	_aexp @ sp[(-13)+11]
 14453  011EA2  0EFE               	movlw	-2
 14454  011EA4  80E3               	bsf	plusw1,0,c
 14455  011EA6                     l6569:
 14456                           
 14457                           ;stkvar	_aexp @ sp[(-13)+11]
 14458  011EA6  0EFE               	movlw	-2
 14459  011EA8  50E3               	movf	plusw1,w,c
 14460  011EAA  B4D8               	btfsc	status,2,c
 14461  011EAC  D01F               	goto	l6577
 14462                           
 14463                           ;stkvar	_aexp @ sp[(-13)+11]
 14464  011EAE  0EFE               	movlw	-2
 14465  011EB0  28E3               	incf	plusw1,w,c
 14466  011EB2  A4D8               	btfss	status,2,c
 14467  011EB4  D018               	goto	l6575
 14468  011EB6  0E00               	movlw	0
 14469  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14470  011EBA  0E00               	movlw	0
 14471  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14472  011EBE  0E00               	movlw	0
 14473  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14474  011EC2  0E00               	movlw	0
 14475  011EC4  6E40               	movwf	(btemp+11)^0,c
 14476                           
 14477                           ;stkvar	_a @ sp[(-13)+-8]
 14478  011EC6  0EEB               	movlw	-21
 14479  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14480  011ECE  0EEC               	movlw	-20
 14481  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14482  011ED6  0EED               	movlw	-19
 14483  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14484  011EDE  0EEE               	movlw	-18
 14485  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14486  011EE6                     l6575:
 14487                           
 14488                           ;stkvar	_a @ sp[(-13)+-8]
 14489  011EE6  0EED               	movlw	-19
 14490  011EE8  8EE3               	bsf	plusw1,7,c
 14491  011EEA  D018               	goto	l6579
 14492  011EEC                     l6577:
 14493  011EEC  0E00               	movlw	0
 14494  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14495  011EF0  0E00               	movlw	0
 14496  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14497  011EF4  0E00               	movlw	0
 14498  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14499  011EF8  0E00               	movlw	0
 14500  011EFA  6E40               	movwf	(btemp+11)^0,c
 14501                           
 14502                           ;stkvar	_a @ sp[(-13)+-8]
 14503  011EFC  0EEB               	movlw	-21
 14504  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14505  011F04  0EEC               	movlw	-20
 14506  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14507  011F0C  0EED               	movlw	-19
 14508  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14509  011F14  0EEE               	movlw	-18
 14510  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14511  011F1C                     l6579:
 14512                           
 14513                           ;stkvar	_aexp @ sp[(-13)+11]
 14514  011F1C  0EFE               	movlw	-2
 14515  011F1E  50E3               	movf	plusw1,w,c
 14516  011F20  B4D8               	btfsc	status,2,c
 14517  011F22  D004               	goto	u5690
 14518                           
 14519                           ;stkvar	_bexp @ sp[(-13)+10]
 14520  011F24  0EFD               	movlw	-3
 14521  011F26  50E3               	movf	plusw1,w,c
 14522  011F28  A4D8               	btfss	status,2,c
 14523  011F2A  D009               	goto	l6587
 14524  011F2C                     u5690:
 14525  011F2C  0E00               	movlw	0
 14526  011F2E  6E35               	movwf	btemp^0,c
 14527  011F30  0E00               	movlw	0
 14528  011F32  6E36               	movwf	(btemp+1)^0,c
 14529  011F34  0E00               	movlw	0
 14530  011F36  6E37               	movwf	(btemp+2)^0,c
 14531  011F38  0E00               	movlw	0
 14532  011F3A  6E38               	movwf	(btemp+3)^0,c
 14533  011F3C  D332               	goto	l2592
 14534  011F3E                     l6587:
 14535                           
 14536                           ;stkvar	_b @ sp[(-13)+-4]
 14537  011F3E  0EEF               	movlw	-17
 14538  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14539                           
 14540                           ;stkvar	_a @ sp[(-13)+-8]
 14541  011F46  0EED               	movlw	237
 14542  011F48  24E1               	addwf	fsr1l,w,c
 14543  011F4A  6ED9               	movwf	fsr2l,c
 14544  011F4C  0EFF               	movlw	255
 14545  011F4E  20E2               	addwfc	fsr1h,w,c
 14546  011F50  6EDA               	movwf	fsr2h,c
 14547  011F52  50DF               	movf	indf2,w,c
 14548  011F54  0240               	mulwf	(btemp+11)^0,c
 14549                           
 14550                           ;stkvar	_temp @ sp[(-13)+8]
 14551  011F56  0EFB               	movlw	-5
 14552  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14553  011F5E  0EFC               	movlw	-4
 14554  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14555                           
 14556                           ;stkvar	_temp @ sp[(-13)+8]
 14557  011F66  0EFB               	movlw	-5
 14558  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14559  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14560  011F74  6A3A               	clrf	(btemp+5)^0,c
 14561  011F76  6A3B               	clrf	(btemp+6)^0,c
 14562  011F78  6A3C               	clrf	(btemp+7)^0,c
 14563                           
 14564                           ;stkvar	_grs @ sp[(-13)+4]
 14565  011F7A  0EF7               	movlw	-9
 14566  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14567  011F82  0EF8               	movlw	-8
 14568  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14569  011F8A  0EF9               	movlw	-7
 14570  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14571  011F92  0EFA               	movlw	-6
 14572  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14573                           
 14574                           ;stkvar	_temp @ sp[(-13)+8]
 14575  011F9A  0EFC               	movlw	252
 14576  011F9C  24E1               	addwf	fsr1l,w,c
 14577  011F9E  6ED9               	movwf	fsr2l,c
 14578  011FA0  0EFF               	movlw	255
 14579  011FA2  20E2               	addwfc	fsr1h,w,c
 14580  011FA4  6EDA               	movwf	fsr2h,c
 14581  011FA6  50DF               	movf	indf2,w,c
 14582  011FA8  6E40               	movwf	(btemp+11)^0,c
 14583  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14584  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14585  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14586  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14587                           
 14588                           ;stkvar	_prod @ sp[(-13)+0]
 14589  011FB6  0EF3               	movlw	-13
 14590  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14591  011FBE  0EF4               	movlw	-12
 14592  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14593  011FC6  0EF5               	movlw	-11
 14594  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14595  011FCE  0EF6               	movlw	-10
 14596  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14597                           
 14598                           ;stkvar	_b @ sp[(-13)+-4]
 14599  011FD6  0EF0               	movlw	240
 14600  011FD8  24E1               	addwf	fsr1l,w,c
 14601  011FDA  6ED9               	movwf	fsr2l,c
 14602  011FDC  0EFF               	movlw	255
 14603  011FDE  20E2               	addwfc	fsr1h,w,c
 14604  011FE0  6EDA               	movwf	fsr2h,c
 14605  011FE2  50DF               	movf	indf2,w,c
 14606  011FE4  6E40               	movwf	(btemp+11)^0,c
 14607                           
 14608                           ;stkvar	_a @ sp[(-13)+-8]
 14609  011FE6  0EEC               	movlw	236
 14610  011FE8  24E1               	addwf	fsr1l,w,c
 14611  011FEA  6ED9               	movwf	fsr2l,c
 14612  011FEC  0EFF               	movlw	255
 14613  011FEE  20E2               	addwfc	fsr1h,w,c
 14614  011FF0  6EDA               	movwf	fsr2h,c
 14615  011FF2  50DF               	movf	indf2,w,c
 14616  011FF4  0240               	mulwf	(btemp+11)^0,c
 14617                           
 14618                           ;stkvar	_temp @ sp[(-13)+8]
 14619  011FF6  0EFB               	movlw	-5
 14620  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14621  011FFE  0EFC               	movlw	-4
 14622  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14623                           
 14624                           ;stkvar	_grs @ sp[(-13)+4]
 14625  012006  50E1               	movf	fsr1l,w,c
 14626  012008  0FF7               	addlw	-9
 14627  01200A  6ED9               	movwf	fsr2l,c
 14628  01200C  50E2               	movf	fsr1h,w,c
 14629  01200E  6EDA               	movwf	fsr2h,c
 14630  012010  0EFF               	movlw	255
 14631  012012  22DA               	addwfc	fsr2h,f,c
 14632                           
 14633                           ;stkvar	_temp @ sp[(-13)+8]
 14634  012014  0EFB               	movlw	-5
 14635  012016  50E3               	movf	plusw1,w,c
 14636  012018  26DE               	addwf	postinc2,f,c
 14637  01201A  0E00               	movlw	0
 14638  01201C  22DE               	addwfc	postinc2,f,c
 14639  01201E  22DE               	addwfc	postinc2,f,c
 14640  012020  22DE               	addwfc	postinc2,f,c
 14641                           
 14642                           ;stkvar	_prod @ sp[(-13)+0]
 14643  012022  50E1               	movf	fsr1l,w,c
 14644  012024  0FF3               	addlw	-13
 14645  012026  6ED9               	movwf	fsr2l,c
 14646  012028  50E2               	movf	fsr1h,w,c
 14647  01202A  6EDA               	movwf	fsr2h,c
 14648  01202C  0EFF               	movlw	255
 14649  01202E  22DA               	addwfc	fsr2h,f,c
 14650                           
 14651                           ;stkvar	_temp @ sp[(-13)+8]
 14652  012030  0EFC               	movlw	252
 14653  012032  24E1               	addwf	fsr1l,w,c
 14654  012034  6EE9               	movwf	fsr0l,c
 14655  012036  0EFF               	movlw	255
 14656  012038  20E2               	addwfc	fsr1h,w,c
 14657  01203A  6EEA               	movwf	fsr0h,c
 14658  01203C  50EF               	movf	indf0,w,c
 14659  01203E  26DE               	addwf	postinc2,f,c
 14660  012040  0E00               	movlw	0
 14661  012042  22DE               	addwfc	postinc2,f,c
 14662  012044  22DE               	addwfc	postinc2,f,c
 14663  012046  22DE               	addwfc	postinc2,f,c
 14664                           
 14665                           ;stkvar	_b @ sp[(-13)+-4]
 14666  012048  0EF1               	movlw	241
 14667  01204A  24E1               	addwf	fsr1l,w,c
 14668  01204C  6ED9               	movwf	fsr2l,c
 14669  01204E  0EFF               	movlw	255
 14670  012050  20E2               	addwfc	fsr1h,w,c
 14671  012052  6EDA               	movwf	fsr2h,c
 14672  012054  50DF               	movf	indf2,w,c
 14673  012056  6E40               	movwf	(btemp+11)^0,c
 14674                           
 14675                           ;stkvar	_a @ sp[(-13)+-8]
 14676  012058  0EEB               	movlw	-21
 14677  01205A  50E3               	movf	plusw1,w,c
 14678  01205C  0240               	mulwf	(btemp+11)^0,c
 14679                           
 14680                           ;stkvar	_temp @ sp[(-13)+8]
 14681  01205E  0EFB               	movlw	-5
 14682  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14683  012066  0EFC               	movlw	-4
 14684  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14685                           
 14686                           ;stkvar	_grs @ sp[(-13)+4]
 14687  01206E  50E1               	movf	fsr1l,w,c
 14688  012070  0FF7               	addlw	-9
 14689  012072  6ED9               	movwf	fsr2l,c
 14690  012074  50E2               	movf	fsr1h,w,c
 14691  012076  6EDA               	movwf	fsr2h,c
 14692  012078  0EFF               	movlw	255
 14693  01207A  22DA               	addwfc	fsr2h,f,c
 14694                           
 14695                           ;stkvar	_temp @ sp[(-13)+8]
 14696  01207C  0EFB               	movlw	-5
 14697  01207E  50E3               	movf	plusw1,w,c
 14698  012080  26DE               	addwf	postinc2,f,c
 14699  012082  0E00               	movlw	0
 14700  012084  22DE               	addwfc	postinc2,f,c
 14701  012086  22DE               	addwfc	postinc2,f,c
 14702  012088  22DE               	addwfc	postinc2,f,c
 14703                           
 14704                           ;stkvar	_prod @ sp[(-13)+0]
 14705  01208A  50E1               	movf	fsr1l,w,c
 14706  01208C  0FF3               	addlw	-13
 14707  01208E  6ED9               	movwf	fsr2l,c
 14708  012090  50E2               	movf	fsr1h,w,c
 14709  012092  6EDA               	movwf	fsr2h,c
 14710  012094  0EFF               	movlw	255
 14711  012096  22DA               	addwfc	fsr2h,f,c
 14712                           
 14713                           ;stkvar	_temp @ sp[(-13)+8]
 14714  012098  0EFC               	movlw	252
 14715  01209A  24E1               	addwf	fsr1l,w,c
 14716  01209C  6EE9               	movwf	fsr0l,c
 14717  01209E  0EFF               	movlw	255
 14718  0120A0  20E2               	addwfc	fsr1h,w,c
 14719  0120A2  6EEA               	movwf	fsr0h,c
 14720  0120A4  50EF               	movf	indf0,w,c
 14721  0120A6  26DE               	addwf	postinc2,f,c
 14722  0120A8  0E00               	movlw	0
 14723  0120AA  22DE               	addwfc	postinc2,f,c
 14724  0120AC  22DE               	addwfc	postinc2,f,c
 14725  0120AE  22DE               	addwfc	postinc2,f,c
 14726                           
 14727                           ;stkvar	_grs @ sp[(-13)+4]
 14728  0120B0  50E1               	movf	fsr1l,w,c
 14729  0120B2  0FF7               	addlw	-9
 14730  0120B4  6ED9               	movwf	fsr2l,c
 14731  0120B6  50E2               	movf	fsr1h,w,c
 14732  0120B8  6EDA               	movwf	fsr2h,c
 14733  0120BA  0EFF               	movlw	255
 14734  0120BC  22DA               	addwfc	fsr2h,f,c
 14735  0120BE  0E08               	movlw	8
 14736  0120C0                     u5705:
 14737  0120C0  90D8               	bcf	status,0,c
 14738  0120C2  36DE               	rlcf	postinc2,f,c
 14739  0120C4  36DE               	rlcf	postinc2,f,c
 14740  0120C6  36DE               	rlcf	postinc2,f,c
 14741  0120C8  36DD               	rlcf	postdec2,f,c
 14742  0120CA  52DD               	movf	postdec2,f,c
 14743  0120CC  52DD               	movf	postdec2,f,c
 14744  0120CE  2EE8               	decfsz	wreg,f,c
 14745  0120D0  D7F7               	goto	u5705
 14746                           
 14747                           ;stkvar	_b @ sp[(-13)+-4]
 14748  0120D2  0EF0               	movlw	240
 14749  0120D4  24E1               	addwf	fsr1l,w,c
 14750  0120D6  6ED9               	movwf	fsr2l,c
 14751  0120D8  0EFF               	movlw	255
 14752  0120DA  20E2               	addwfc	fsr1h,w,c
 14753  0120DC  6EDA               	movwf	fsr2h,c
 14754  0120DE  50DF               	movf	indf2,w,c
 14755  0120E0  6E40               	movwf	(btemp+11)^0,c
 14756                           
 14757                           ;stkvar	_a @ sp[(-13)+-8]
 14758  0120E2  0EEB               	movlw	-21
 14759  0120E4  50E3               	movf	plusw1,w,c
 14760  0120E6  0240               	mulwf	(btemp+11)^0,c
 14761                           
 14762                           ;stkvar	_temp @ sp[(-13)+8]
 14763  0120E8  0EFB               	movlw	-5
 14764  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14765  0120F0  0EFC               	movlw	-4
 14766  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14767                           
 14768                           ;stkvar	_temp @ sp[(-13)+8]
 14769  0120F8  0EFB               	movlw	-5
 14770  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14771  012100  0EFC               	movlw	-4
 14772  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14773                           
 14774                           ;stkvar	_grs @ sp[(-13)+4]
 14775  012108  50E1               	movf	fsr1l,w,c
 14776  01210A  0FF7               	addlw	-9
 14777  01210C  6ED9               	movwf	fsr2l,c
 14778  01210E  50E2               	movf	fsr1h,w,c
 14779  012110  6EDA               	movwf	fsr2h,c
 14780  012112  0EFF               	movlw	255
 14781  012114  22DA               	addwfc	fsr2h,f,c
 14782  012116  503F               	movf	(btemp+10)^0,w,c
 14783  012118  26DE               	addwf	postinc2,f,c
 14784  01211A  5040               	movf	(btemp+11)^0,w,c
 14785  01211C  22DE               	addwfc	postinc2,f,c
 14786  01211E  0E00               	movlw	0
 14787  012120  22DE               	addwfc	postinc2,f,c
 14788  012122  22DE               	addwfc	postinc2,f,c
 14789                           
 14790                           ;stkvar	_b @ sp[(-13)+-4]
 14791  012124  0EEF               	movlw	-17
 14792  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14793                           
 14794                           ;stkvar	_a @ sp[(-13)+-8]
 14795  01212C  0EEC               	movlw	236
 14796  01212E  24E1               	addwf	fsr1l,w,c
 14797  012130  6ED9               	movwf	fsr2l,c
 14798  012132  0EFF               	movlw	255
 14799  012134  20E2               	addwfc	fsr1h,w,c
 14800  012136  6EDA               	movwf	fsr2h,c
 14801  012138  50DF               	movf	indf2,w,c
 14802  01213A  0240               	mulwf	(btemp+11)^0,c
 14803                           
 14804                           ;stkvar	_temp @ sp[(-13)+8]
 14805  01213C  0EFB               	movlw	-5
 14806  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14807  012144  0EFC               	movlw	-4
 14808  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14809                           
 14810                           ;stkvar	_temp @ sp[(-13)+8]
 14811  01214C  0EFB               	movlw	-5
 14812  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14813  012154  0EFC               	movlw	-4
 14814  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14815                           
 14816                           ;stkvar	_grs @ sp[(-13)+4]
 14817  01215C  50E1               	movf	fsr1l,w,c
 14818  01215E  0FF7               	addlw	-9
 14819  012160  6ED9               	movwf	fsr2l,c
 14820  012162  50E2               	movf	fsr1h,w,c
 14821  012164  6EDA               	movwf	fsr2h,c
 14822  012166  0EFF               	movlw	255
 14823  012168  22DA               	addwfc	fsr2h,f,c
 14824  01216A  503F               	movf	(btemp+10)^0,w,c
 14825  01216C  26DE               	addwf	postinc2,f,c
 14826  01216E  5040               	movf	(btemp+11)^0,w,c
 14827  012170  22DE               	addwfc	postinc2,f,c
 14828  012172  0E00               	movlw	0
 14829  012174  22DE               	addwfc	postinc2,f,c
 14830  012176  22DE               	addwfc	postinc2,f,c
 14831                           
 14832                           ;stkvar	_grs @ sp[(-13)+4]
 14833  012178  50E1               	movf	fsr1l,w,c
 14834  01217A  0FF7               	addlw	-9
 14835  01217C  6ED9               	movwf	fsr2l,c
 14836  01217E  50E2               	movf	fsr1h,w,c
 14837  012180  6EDA               	movwf	fsr2h,c
 14838  012182  0EFF               	movlw	255
 14839  012184  22DA               	addwfc	fsr2h,f,c
 14840  012186  0E08               	movlw	8
 14841  012188                     u5715:
 14842  012188  90D8               	bcf	status,0,c
 14843  01218A  36DE               	rlcf	postinc2,f,c
 14844  01218C  36DE               	rlcf	postinc2,f,c
 14845  01218E  36DE               	rlcf	postinc2,f,c
 14846  012190  36DD               	rlcf	postdec2,f,c
 14847  012192  52DD               	movf	postdec2,f,c
 14848  012194  52DD               	movf	postdec2,f,c
 14849  012196  2EE8               	decfsz	wreg,f,c
 14850  012198  D7F7               	goto	u5715
 14851                           
 14852                           ;stkvar	_b @ sp[(-13)+-4]
 14853  01219A  0EEF               	movlw	-17
 14854  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14855                           
 14856                           ;stkvar	_a @ sp[(-13)+-8]
 14857  0121A2  0EEB               	movlw	-21
 14858  0121A4  50E3               	movf	plusw1,w,c
 14859  0121A6  0240               	mulwf	(btemp+11)^0,c
 14860                           
 14861                           ;stkvar	_temp @ sp[(-13)+8]
 14862  0121A8  0EFB               	movlw	-5
 14863  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14864  0121B0  0EFC               	movlw	-4
 14865  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14866                           
 14867                           ;stkvar	_temp @ sp[(-13)+8]
 14868  0121B8  0EFB               	movlw	-5
 14869  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14870  0121C0  0EFC               	movlw	-4
 14871  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14872                           
 14873                           ;stkvar	_grs @ sp[(-13)+4]
 14874  0121C8  50E1               	movf	fsr1l,w,c
 14875  0121CA  0FF7               	addlw	-9
 14876  0121CC  6ED9               	movwf	fsr2l,c
 14877  0121CE  50E2               	movf	fsr1h,w,c
 14878  0121D0  6EDA               	movwf	fsr2h,c
 14879  0121D2  0EFF               	movlw	255
 14880  0121D4  22DA               	addwfc	fsr2h,f,c
 14881  0121D6  503F               	movf	(btemp+10)^0,w,c
 14882  0121D8  26DE               	addwf	postinc2,f,c
 14883  0121DA  5040               	movf	(btemp+11)^0,w,c
 14884  0121DC  22DE               	addwfc	postinc2,f,c
 14885  0121DE  0E00               	movlw	0
 14886  0121E0  22DE               	addwfc	postinc2,f,c
 14887  0121E2  22DE               	addwfc	postinc2,f,c
 14888                           
 14889                           ;stkvar	_b @ sp[(-13)+-4]
 14890  0121E4  0EF0               	movlw	240
 14891  0121E6  24E1               	addwf	fsr1l,w,c
 14892  0121E8  6ED9               	movwf	fsr2l,c
 14893  0121EA  0EFF               	movlw	255
 14894  0121EC  20E2               	addwfc	fsr1h,w,c
 14895  0121EE  6EDA               	movwf	fsr2h,c
 14896  0121F0  50DF               	movf	indf2,w,c
 14897  0121F2  6E40               	movwf	(btemp+11)^0,c
 14898                           
 14899                           ;stkvar	_a @ sp[(-13)+-8]
 14900  0121F4  0EED               	movlw	237
 14901  0121F6  24E1               	addwf	fsr1l,w,c
 14902  0121F8  6ED9               	movwf	fsr2l,c
 14903  0121FA  0EFF               	movlw	255
 14904  0121FC  20E2               	addwfc	fsr1h,w,c
 14905  0121FE  6EDA               	movwf	fsr2h,c
 14906  012200  50DF               	movf	indf2,w,c
 14907  012202  0240               	mulwf	(btemp+11)^0,c
 14908                           
 14909                           ;stkvar	_temp @ sp[(-13)+8]
 14910  012204  0EFB               	movlw	-5
 14911  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14912  01220C  0EFC               	movlw	-4
 14913  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14914                           
 14915                           ;stkvar	_temp @ sp[(-13)+8]
 14916  012214  0EFB               	movlw	-5
 14917  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14918  01221C  0EFC               	movlw	-4
 14919  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14920                           
 14921                           ;stkvar	_prod @ sp[(-13)+0]
 14922  012224  50E1               	movf	fsr1l,w,c
 14923  012226  0FF3               	addlw	-13
 14924  012228  6ED9               	movwf	fsr2l,c
 14925  01222A  50E2               	movf	fsr1h,w,c
 14926  01222C  6EDA               	movwf	fsr2h,c
 14927  01222E  0EFF               	movlw	255
 14928  012230  22DA               	addwfc	fsr2h,f,c
 14929  012232  503F               	movf	(btemp+10)^0,w,c
 14930  012234  26DE               	addwf	postinc2,f,c
 14931  012236  5040               	movf	(btemp+11)^0,w,c
 14932  012238  22DE               	addwfc	postinc2,f,c
 14933  01223A  0E00               	movlw	0
 14934  01223C  22DE               	addwfc	postinc2,f,c
 14935  01223E  22DE               	addwfc	postinc2,f,c
 14936                           
 14937                           ;stkvar	_b @ sp[(-13)+-4]
 14938  012240  0EF1               	movlw	241
 14939  012242  24E1               	addwf	fsr1l,w,c
 14940  012244  6ED9               	movwf	fsr2l,c
 14941  012246  0EFF               	movlw	255
 14942  012248  20E2               	addwfc	fsr1h,w,c
 14943  01224A  6EDA               	movwf	fsr2h,c
 14944  01224C  50DF               	movf	indf2,w,c
 14945  01224E  6E40               	movwf	(btemp+11)^0,c
 14946                           
 14947                           ;stkvar	_a @ sp[(-13)+-8]
 14948  012250  0EEC               	movlw	236
 14949  012252  24E1               	addwf	fsr1l,w,c
 14950  012254  6ED9               	movwf	fsr2l,c
 14951  012256  0EFF               	movlw	255
 14952  012258  20E2               	addwfc	fsr1h,w,c
 14953  01225A  6EDA               	movwf	fsr2h,c
 14954  01225C  50DF               	movf	indf2,w,c
 14955  01225E  0240               	mulwf	(btemp+11)^0,c
 14956                           
 14957                           ;stkvar	_temp @ sp[(-13)+8]
 14958  012260  0EFB               	movlw	-5
 14959  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14960  012268  0EFC               	movlw	-4
 14961  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14962                           
 14963                           ;stkvar	_temp @ sp[(-13)+8]
 14964  012270  0EFB               	movlw	-5
 14965  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14966  012278  0EFC               	movlw	-4
 14967  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14968                           
 14969                           ;stkvar	_prod @ sp[(-13)+0]
 14970  012280  50E1               	movf	fsr1l,w,c
 14971  012282  0FF3               	addlw	-13
 14972  012284  6ED9               	movwf	fsr2l,c
 14973  012286  50E2               	movf	fsr1h,w,c
 14974  012288  6EDA               	movwf	fsr2h,c
 14975  01228A  0EFF               	movlw	255
 14976  01228C  22DA               	addwfc	fsr2h,f,c
 14977  01228E  503F               	movf	(btemp+10)^0,w,c
 14978  012290  26DE               	addwf	postinc2,f,c
 14979  012292  5040               	movf	(btemp+11)^0,w,c
 14980  012294  22DE               	addwfc	postinc2,f,c
 14981  012296  0E00               	movlw	0
 14982  012298  22DE               	addwfc	postinc2,f,c
 14983  01229A  22DE               	addwfc	postinc2,f,c
 14984                           
 14985                           ;stkvar	_b @ sp[(-13)+-4]
 14986  01229C  0EF1               	movlw	241
 14987  01229E  24E1               	addwf	fsr1l,w,c
 14988  0122A0  6ED9               	movwf	fsr2l,c
 14989  0122A2  0EFF               	movlw	255
 14990  0122A4  20E2               	addwfc	fsr1h,w,c
 14991  0122A6  6EDA               	movwf	fsr2h,c
 14992  0122A8  50DF               	movf	indf2,w,c
 14993  0122AA  6E40               	movwf	(btemp+11)^0,c
 14994                           
 14995                           ;stkvar	_a @ sp[(-13)+-8]
 14996  0122AC  0EED               	movlw	237
 14997  0122AE  24E1               	addwf	fsr1l,w,c
 14998  0122B0  6ED9               	movwf	fsr2l,c
 14999  0122B2  0EFF               	movlw	255
 15000  0122B4  20E2               	addwfc	fsr1h,w,c
 15001  0122B6  6EDA               	movwf	fsr2h,c
 15002  0122B8  50DF               	movf	indf2,w,c
 15003  0122BA  0240               	mulwf	(btemp+11)^0,c
 15004                           
 15005                           ;stkvar	_temp @ sp[(-13)+8]
 15006  0122BC  0EFB               	movlw	-5
 15007  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15008  0122C4  0EFC               	movlw	-4
 15009  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15010                           
 15011                           ;stkvar	_temp @ sp[(-13)+8]
 15012  0122CC  0EFB               	movlw	-5
 15013  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 15014  0122D4  0EFC               	movlw	-4
 15015  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 15016  0122DC  503F               	movf	(btemp+10)^0,w,c
 15017  0122DE  6E39               	movwf	(btemp+4)^0,c
 15018  0122E0  5040               	movf	(btemp+11)^0,w,c
 15019  0122E2  6E3A               	movwf	(btemp+5)^0,c
 15020  0122E4  6A3B               	clrf	(btemp+6)^0,c
 15021  0122E6  6A3C               	clrf	(btemp+7)^0,c
 15022  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 15023  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 15024  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 15025  0122FA  6A39               	clrf	(btemp+4)^0,c
 15026                           
 15027                           ;stkvar	_prod @ sp[(-13)+0]
 15028  0122FC  50E1               	movf	fsr1l,w,c
 15029  0122FE  0FF3               	addlw	-13
 15030  012300  6ED9               	movwf	fsr2l,c
 15031  012302  50E2               	movf	fsr1h,w,c
 15032  012304  6EDA               	movwf	fsr2h,c
 15033  012306  0EFF               	movlw	255
 15034  012308  22DA               	addwfc	fsr2h,f,c
 15035  01230A  5039               	movf	(btemp+4)^0,w,c
 15036  01230C  26DE               	addwf	postinc2,f,c
 15037  01230E  503A               	movf	(btemp+5)^0,w,c
 15038  012310  22DE               	addwfc	postinc2,f,c
 15039  012312  503B               	movf	(btemp+6)^0,w,c
 15040  012314  22DE               	addwfc	postinc2,f,c
 15041  012316  503C               	movf	(btemp+7)^0,w,c
 15042  012318  22DE               	addwfc	postinc2,f,c
 15043                           
 15044                           ;stkvar	_prod @ sp[(-13)+0]
 15045  01231A  50E1               	movf	fsr1l,w,c
 15046  01231C  0FF3               	addlw	-13
 15047  01231E  6ED9               	movwf	fsr2l,c
 15048  012320  50E2               	movf	fsr1h,w,c
 15049  012322  6EDA               	movwf	fsr2h,c
 15050  012324  0EFF               	movlw	255
 15051  012326  22DA               	addwfc	fsr2h,f,c
 15052                           
 15053                           ;stkvar	_grs @ sp[(-13)+4]
 15054  012328  0EFA               	movlw	250
 15055  01232A  24E1               	addwf	fsr1l,w,c
 15056  01232C  6EE9               	movwf	fsr0l,c
 15057  01232E  0EFF               	movlw	255
 15058  012330  20E2               	addwfc	fsr1h,w,c
 15059  012332  6EEA               	movwf	fsr0h,c
 15060  012334  50EF               	movf	indf0,w,c
 15061  012336  26DE               	addwf	postinc2,f,c
 15062  012338  0E00               	movlw	0
 15063  01233A  22DE               	addwfc	postinc2,f,c
 15064  01233C  22DE               	addwfc	postinc2,f,c
 15065  01233E  22DE               	addwfc	postinc2,f,c
 15066                           
 15067                           ;stkvar	_grs @ sp[(-13)+4]
 15068  012340  50E1               	movf	fsr1l,w,c
 15069  012342  0FF7               	addlw	-9
 15070  012344  6ED9               	movwf	fsr2l,c
 15071  012346  50E2               	movf	fsr1h,w,c
 15072  012348  6EDA               	movwf	fsr2h,c
 15073  01234A  0EFF               	movlw	255
 15074  01234C  22DA               	addwfc	fsr2h,f,c
 15075  01234E  0E08               	movlw	8
 15076  012350                     u5725:
 15077  012350  90D8               	bcf	status,0,c
 15078  012352  36DE               	rlcf	postinc2,f,c
 15079  012354  36DE               	rlcf	postinc2,f,c
 15080  012356  36DE               	rlcf	postinc2,f,c
 15081  012358  36DD               	rlcf	postdec2,f,c
 15082  01235A  52DD               	movf	postdec2,f,c
 15083  01235C  52DD               	movf	postdec2,f,c
 15084  01235E  2EE8               	decfsz	wreg,f,c
 15085  012360  D7F7               	goto	u5725
 15086  012362  0E82               	movlw	130
 15087  012364  6E3F               	movwf	(btemp+10)^0,c
 15088  012366  0EFF               	movlw	255
 15089  012368  6E40               	movwf	(btemp+11)^0,c
 15090                           
 15091                           ;stkvar	_bexp @ sp[(-13)+10]
 15092  01236A  0EFD               	movlw	-3
 15093  01236C  50E3               	movf	plusw1,w,c
 15094  01236E  6E3D               	movwf	(btemp+8)^0,c
 15095  012370  6A3E               	clrf	(btemp+9)^0,c
 15096                           
 15097                           ;stkvar	_aexp @ sp[(-13)+11]
 15098  012372  0EFE               	movlw	-2
 15099  012374  50E3               	movf	plusw1,w,c
 15100  012376  263D               	addwf	(btemp+8)^0,f,c
 15101  012378  0E00               	movlw	0
 15102  01237A  223E               	addwfc	(btemp+9)^0,f,c
 15103  01237C  503F               	movf	(btemp+10)^0,w,c
 15104  01237E  263D               	addwf	(btemp+8)^0,f,c
 15105  012380  5040               	movf	(btemp+11)^0,w,c
 15106  012382  223E               	addwfc	(btemp+9)^0,f,c
 15107                           
 15108                           ;stkvar	_temp @ sp[(-13)+8]
 15109  012384  0EFB               	movlw	-5
 15110  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15111  01238C  0EFC               	movlw	-4
 15112  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15113  012394  D021               	goto	l6649
 15114  012396                     l6639:
 15115                           
 15116                           ;stkvar	_prod @ sp[(-13)+0]
 15117  012396  90D8               	bcf	status,0,c
 15118  012398  0EF3               	movlw	-13
 15119  01239A  36E3               	rlcf	plusw1,f,c
 15120  01239C  0EF4               	movlw	-12
 15121  01239E  36E3               	rlcf	plusw1,f,c
 15122  0123A0  0EF5               	movlw	-11
 15123  0123A2  36E3               	rlcf	plusw1,f,c
 15124  0123A4  0EF6               	movlw	-10
 15125  0123A6  36E3               	rlcf	plusw1,f,c
 15126                           
 15127                           ;stkvar	_grs @ sp[(-13)+4]
 15128  0123A8  0EFA               	movlw	-6
 15129  0123AA  AEE3               	btfss	plusw1,7,c
 15130  0123AC  D002               	goto	l6645
 15131                           
 15132                           ;stkvar	_prod @ sp[(-13)+0]
 15133  0123AE  0EF3               	movlw	-13
 15134  0123B0  80E3               	bsf	plusw1,0,c
 15135  0123B2                     l6645:
 15136                           
 15137                           ;stkvar	_grs @ sp[(-13)+4]
 15138  0123B2  90D8               	bcf	status,0,c
 15139  0123B4  0EF7               	movlw	-9
 15140  0123B6  36E3               	rlcf	plusw1,f,c
 15141  0123B8  0EF8               	movlw	-8
 15142  0123BA  36E3               	rlcf	plusw1,f,c
 15143  0123BC  0EF9               	movlw	-7
 15144  0123BE  36E3               	rlcf	plusw1,f,c
 15145  0123C0  0EFA               	movlw	-6
 15146  0123C2  36E3               	rlcf	plusw1,f,c
 15147                           
 15148                           ;stkvar	_temp @ sp[(-13)+8]
 15149  0123C4  50E1               	movf	fsr1l,w,c
 15150  0123C6  0FFB               	addlw	-5
 15151  0123C8  6ED9               	movwf	fsr2l,c
 15152  0123CA  50E2               	movf	fsr1h,w,c
 15153  0123CC  6EDA               	movwf	fsr2h,c
 15154  0123CE  0EFF               	movlw	255
 15155  0123D0  22DA               	addwfc	fsr2h,f,c
 15156  0123D2  06DE               	decf	postinc2,f,c
 15157  0123D4  0E00               	movlw	0
 15158  0123D6  5ADD               	subwfb	postdec2,f,c
 15159  0123D8                     l6649:
 15160                           
 15161                           ;stkvar	_prod @ sp[(-13)+0]
 15162  0123D8  0EF5               	movlw	-11
 15163  0123DA  AEE3               	btfss	plusw1,7,c
 15164  0123DC  D7DC               	goto	l6639
 15165                           
 15166                           ;stkvar	_aexp @ sp[(-13)+11]
 15167  0123DE  0EFE               	movlw	-2
 15168  0123E0  6AE3               	clrf	plusw1,c
 15169                           
 15170                           ;stkvar	_grs @ sp[(-13)+4]
 15171  0123E2  0EFA               	movlw	-6
 15172  0123E4  AEE3               	btfss	plusw1,7,c
 15173  0123E6  D020               	goto	l6663
 15174                           
 15175                           ;stkvar	_grs @ sp[(-13)+4]
 15176  0123E8  50E1               	movf	fsr1l,w,c
 15177  0123EA  0FF7               	addlw	-9
 15178  0123EC  6ED9               	movwf	fsr2l,c
 15179  0123EE  50E2               	movf	fsr1h,w,c
 15180  0123F0  6EDA               	movwf	fsr2h,c
 15181  0123F2  0EFF               	movlw	255
 15182  0123F4  22DA               	addwfc	fsr2h,f,c
 15183  0123F6  0EFF               	movlw	255
 15184  0123F8  14DE               	andwf	postinc2,w,c
 15185  0123FA  6E3D               	movwf	(btemp+8)^0,c
 15186  0123FC  0EFF               	movlw	255
 15187  0123FE  14DE               	andwf	postinc2,w,c
 15188  012400  6E3E               	movwf	(btemp+9)^0,c
 15189  012402  0EFF               	movlw	255
 15190  012404  14DE               	andwf	postinc2,w,c
 15191  012406  6E3F               	movwf	(btemp+10)^0,c
 15192  012408  0E7F               	movlw	127
 15193  01240A  14DE               	andwf	postinc2,w,c
 15194  01240C  6E40               	movwf	(btemp+11)^0,c
 15195  01240E  503D               	movf	(btemp+8)^0,w,c
 15196  012410  103E               	iorwf	(btemp+9)^0,w,c
 15197  012412  103F               	iorwf	(btemp+10)^0,w,c
 15198  012414  1040               	iorwf	(btemp+11)^0,w,c
 15199  012416  B4D8               	btfsc	status,2,c
 15200  012418  D004               	goto	l6659
 15201  01241A                     u5760:
 15202                           
 15203                           ;stkvar	_aexp @ sp[(-13)+11]
 15204  01241A  0EFE               	movlw	-2
 15205  01241C  6AE3               	clrf	plusw1,c
 15206  01241E  2AE3               	incf	plusw1,f,c
 15207  012420  D003               	goto	l6663
 15208  012422                     l6659:
 15209                           
 15210                           ;stkvar	_prod @ sp[(-13)+0]
 15211  012422  0EF3               	movlw	-13
 15212  012424  B0E3               	btfsc	plusw1,0,c
 15213  012426  D7F9               	goto	u5760
 15214  012428                     l6663:
 15215                           
 15216                           ;stkvar	_aexp @ sp[(-13)+11]
 15217  012428  0EFE               	movlw	-2
 15218  01242A  50E3               	movf	plusw1,w,c
 15219  01242C  B4D8               	btfsc	status,2,c
 15220  01242E  D036               	goto	l6673
 15221                           
 15222                           ;stkvar	_prod @ sp[(-13)+0]
 15223  012430  50E1               	movf	fsr1l,w,c
 15224  012432  0FF3               	addlw	-13
 15225  012434  6ED9               	movwf	fsr2l,c
 15226  012436  50E2               	movf	fsr1h,w,c
 15227  012438  6EDA               	movwf	fsr2h,c
 15228  01243A  0EFF               	movlw	255
 15229  01243C  22DA               	addwfc	fsr2h,f,c
 15230  01243E  2ADE               	incf	postinc2,f,c
 15231  012440  0E00               	movlw	0
 15232  012442  22DE               	addwfc	postinc2,f,c
 15233  012444  22DE               	addwfc	postinc2,f,c
 15234  012446  22DE               	addwfc	postinc2,f,c
 15235                           
 15236                           ;stkvar	_prod @ sp[(-13)+0]
 15237  012448  0EF6               	movlw	-10
 15238  01244A  A0E3               	btfss	plusw1,0,c
 15239  01244C  D027               	goto	l6673
 15240  01244E  0E01               	movlw	1
 15241  012450  6E40               	movwf	(btemp+11)^0,c
 15242                           
 15243                           ;stkvar	_prod @ sp[(-13)+0]
 15244  012452  50E1               	movf	fsr1l,w,c
 15245  012454  0FF3               	addlw	-13
 15246  012456  6ED9               	movwf	fsr2l,c
 15247  012458  50E2               	movf	fsr1h,w,c
 15248  01245A  6EDA               	movwf	fsr2h,c
 15249  01245C  0EFF               	movlw	255
 15250  01245E  22DA               	addwfc	fsr2h,f,c
 15251  012460  2840               	incf	(btemp+11)^0,w,c
 15252  012462  52DE               	movf	postinc2,f,c
 15253  012464  D008               	goto	u5800
 15254  012466                     u5805:
 15255  012466  52DE               	movf	postinc2,f,c
 15256  012468  90D8               	bcf	status,0,c
 15257  01246A  BEDC               	btfsc	preinc2,7,c
 15258  01246C  80D8               	bsf	status,0,c
 15259  01246E  32DD               	rrcf	postdec2,f,c
 15260  012470  32DD               	rrcf	postdec2,f,c
 15261  012472  32DD               	rrcf	postdec2,f,c
 15262  012474  32DE               	rrcf	postinc2,f,c
 15263  012476                     u5800:
 15264  012476  2EE8               	decfsz	wreg,f,c
 15265  012478  D7F6               	goto	u5805
 15266                           
 15267                           ;stkvar	_temp @ sp[(-13)+8]
 15268  01247A  0EFB               	movlw	-5
 15269  01247C  50E3               	movf	plusw1,w,c
 15270  01247E  0F01               	addlw	1
 15271  012480  6E35               	movwf	btemp^0,c
 15272  012482  0EFB               	movlw	-5
 15273  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 15274  01248A  6A35               	clrf	btemp^0,c
 15275  01248C  0EFC               	movlw	-4
 15276  01248E  50E3               	movf	plusw1,w,c
 15277  012490  2035               	addwfc	btemp^0,w,c
 15278  012492  6E35               	movwf	btemp^0,c
 15279  012494  0EFC               	movlw	-4
 15280  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 15281  01249C                     l6673:
 15282                           
 15283                           ;stkvar	_temp @ sp[(-13)+8]
 15284  01249C  0EFC               	movlw	-4
 15285  01249E  BEE3               	btfsc	plusw1,7,c
 15286  0124A0  D020               	goto	l6677
 15287  0124A2  0EFC               	movlw	-4
 15288  0124A4  50E3               	movf	plusw1,w,c
 15289  0124A6  E104               	bnz	u5810
 15290  0124A8  0EFB               	movlw	-5
 15291  0124AA  28E3               	incf	plusw1,w,c
 15292  0124AC  A0D8               	btfss	status,0,c
 15293  0124AE  D019               	goto	l6677
 15294  0124B0                     u5810:
 15295  0124B0  0E00               	movlw	0
 15296  0124B2  6E3D               	movwf	(btemp+8)^0,c
 15297  0124B4  0E00               	movlw	0
 15298  0124B6  6E3E               	movwf	(btemp+9)^0,c
 15299  0124B8  0E80               	movlw	128
 15300  0124BA  6E3F               	movwf	(btemp+10)^0,c
 15301  0124BC  0E7F               	movlw	127
 15302  0124BE  6E40               	movwf	(btemp+11)^0,c
 15303                           
 15304                           ;stkvar	_prod @ sp[(-13)+0]
 15305  0124C0  0EF3               	movlw	-13
 15306  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15307  0124C8  0EF4               	movlw	-12
 15308  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15309  0124D0  0EF5               	movlw	-11
 15310  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15311  0124D8  0EF6               	movlw	-10
 15312  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15313  0124E0  D044               	goto	l6693
 15314  0124E2                     l6677:
 15315                           
 15316                           ;stkvar	_temp @ sp[(-13)+8]
 15317  0124E2  0EFC               	movlw	-4
 15318  0124E4  BEE3               	btfsc	plusw1,7,c
 15319  0124E6  D007               	goto	u5820
 15320  0124E8  0EFC               	movlw	-4
 15321  0124EA  50E3               	movf	plusw1,w,c
 15322  0124EC  E10F               	bnz	l6683
 15323  0124EE  0EFB               	movlw	-5
 15324  0124F0  04E3               	decf	plusw1,w,c
 15325  0124F2  B0D8               	btfsc	status,0,c
 15326  0124F4  D00B               	goto	l6683
 15327  0124F6                     u5820:
 15328                           
 15329                           ;stkvar	_prod @ sp[(-13)+0]
 15330  0124F6  0EF3               	movlw	-13
 15331  0124F8  6AE3               	clrf	plusw1,c
 15332  0124FA  0EF4               	movlw	-12
 15333  0124FC  6AE3               	clrf	plusw1,c
 15334  0124FE  0EF5               	movlw	-11
 15335  012500  6AE3               	clrf	plusw1,c
 15336  012502  0EF6               	movlw	-10
 15337  012504  6AE3               	clrf	plusw1,c
 15338                           
 15339                           ;stkvar	_sign @ sp[(-13)+12]
 15340  012506  0EFF               	movlw	-1
 15341  012508  6AE3               	clrf	plusw1,c
 15342  01250A  D02F               	goto	l6693
 15343  01250C                     l6683:
 15344                           
 15345                           ;stkvar	_temp @ sp[(-13)+8]
 15346                           ;stkvar	_bexp @ sp[(-13)+10]
 15347  01250C  0EFB               	movlw	-5
 15348  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15349  012514  0EFD               	movlw	-3
 15350  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15351                           
 15352                           ;stkvar	_prod @ sp[(-13)+0]
 15353  01251C  50E1               	movf	fsr1l,w,c
 15354  01251E  0FF3               	addlw	-13
 15355  012520  6ED9               	movwf	fsr2l,c
 15356  012522  50E2               	movf	fsr1h,w,c
 15357  012524  6EDA               	movwf	fsr2h,c
 15358  012526  0EFF               	movlw	255
 15359  012528  22DA               	addwfc	fsr2h,f,c
 15360  01252A  0EFF               	movlw	255
 15361  01252C  16DE               	andwf	postinc2,f,c
 15362  01252E  0EFF               	movlw	255
 15363  012530  16DE               	andwf	postinc2,f,c
 15364  012532  0E7F               	movlw	127
 15365  012534  16DE               	andwf	postinc2,f,c
 15366  012536  0E00               	movlw	0
 15367  012538  16DE               	andwf	postinc2,f,c
 15368                           
 15369                           ;stkvar	_bexp @ sp[(-13)+10]
 15370  01253A  0EFD               	movlw	-3
 15371  01253C  A0E3               	btfss	plusw1,0,c
 15372  01253E  D008               	goto	l6691
 15373                           
 15374                           ;stkvar	_prod @ sp[(-13)+0]
 15375  012540  0EF5               	movlw	245
 15376  012542  24E1               	addwf	fsr1l,w,c
 15377  012544  6ED9               	movwf	fsr2l,c
 15378  012546  0EFF               	movlw	255
 15379  012548  20E2               	addwfc	fsr1h,w,c
 15380  01254A  6EDA               	movwf	fsr2h,c
 15381  01254C  0E00               	movlw	0
 15382  01254E  8EDB               	bsf	plusw2,7,c
 15383  012550                     l6691:
 15384                           
 15385                           ;stkvar	_prod @ sp[(-13)+0]
 15386  012550  0EF6               	movlw	246
 15387  012552  24E1               	addwf	fsr1l,w,c
 15388  012554  6ED9               	movwf	fsr2l,c
 15389  012556  0EFF               	movlw	255
 15390  012558  20E2               	addwfc	fsr1h,w,c
 15391  01255A  6EDA               	movwf	fsr2h,c
 15392                           
 15393                           ;stkvar	_bexp @ sp[(-13)+10]
 15394  01255C  0EFD               	movlw	-3
 15395  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15396  012564  90D8               	bcf	status,0,c
 15397  012566  3040               	rrcf	(btemp+11)^0,w,c
 15398  012568  6EDF               	movwf	indf2,c
 15399  01256A                     l6693:
 15400                           
 15401                           ;stkvar	_sign @ sp[(-13)+12]
 15402  01256A  0EFF               	movlw	-1
 15403  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15404                           
 15405                           ;stkvar	_prod @ sp[(-13)+0]
 15406  012572  0EF6               	movlw	246
 15407  012574  24E1               	addwf	fsr1l,w,c
 15408  012576  6ED9               	movwf	fsr2l,c
 15409  012578  0EFF               	movlw	255
 15410  01257A  20E2               	addwfc	fsr1h,w,c
 15411  01257C  6EDA               	movwf	fsr2h,c
 15412  01257E  5040               	movf	(btemp+11)^0,w,c
 15413  012580  12DF               	iorwf	indf2,f,c
 15414                           
 15415                           ;stkvar	_prod @ sp[(-13)+0]
 15416  012582  0EF3               	movlw	-13
 15417  012584  006F FF8C  F035    	movff	plusw1,btemp
 15418  01258A  0EF4               	movlw	-12
 15419  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15420  012592  0EF5               	movlw	-11
 15421  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15422  01259A  0EF6               	movlw	-10
 15423  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15424  0125A2                     l2592:
 15425                           
 15426                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15427  0125A2  0EEB               	movlw	235
 15428  0125A4  26E1               	addwf	fsr1l,f,c
 15429  0125A6  0EFF               	movlw	255
 15430  0125A8  22E2               	addwfc	fsr1h,f,c
 15431  0125AA  0012               	return		;funcret
 15432  0125AC                     __end_of___flmul:
 15433                           	opt callstack 0
 15434                           
 15435 ;; *************** function ___flge *****************
 15436 ;; Defined at:
 15437 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15438 ;; Parameters:    Size  Location     Type
 15439 ;;  ff1             4  [STACK] unsigned char 
 15440 ;;  ff2             4  [STACK] unsigned char 
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;		None
 15443 ;; Return value:  Size  Location     Type
 15444 ;;		None               void
 15445 ;; Registers used:
 15446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15447 ;; Tracked objects:
 15448 ;;		On entry : 0/4
 15449 ;;		On exit  : 0/0
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;Total ram usage:        0 bytes
 15457 ;; Hardware stack levels used:    1
 15458 ;; Hardware stack levels required when called:    6
 15459 ;; This function calls:
 15460 ;;		Nothing
 15461 ;; This function is called by:
 15462 ;;		_efgtoa
 15463 ;; This function uses a reentrant model
 15464 ;;
 15465                           
 15466                           	psect	text52
 15467  015D94                     __ptext52:
 15468                           	opt callstack 0
 15469  015D94                     ___flge:
 15470                           	opt callstack 17
 15471                           
 15472                           ;stkvar	_ff1 @ sp[(0)+-4]
 15473                           
 15474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15475                           ;incstack = 0
 15476  015D94  50E1               	movf	fsr1l,w,c
 15477  015D96  0FFC               	addlw	-4
 15478  015D98  6ED9               	movwf	fsr2l,c
 15479  015D9A  50E2               	movf	fsr1h,w,c
 15480  015D9C  6EDA               	movwf	fsr2h,c
 15481  015D9E  0EFF               	movlw	255
 15482  015DA0  22DA               	addwfc	fsr2h,f,c
 15483  015DA2  0E00               	movlw	0
 15484  015DA4  14DE               	andwf	postinc2,w,c
 15485  015DA6  6E3D               	movwf	(btemp+8)^0,c
 15486  015DA8  0E00               	movlw	0
 15487  015DAA  14DE               	andwf	postinc2,w,c
 15488  015DAC  6E3E               	movwf	(btemp+9)^0,c
 15489  015DAE  0E80               	movlw	128
 15490  015DB0  14DE               	andwf	postinc2,w,c
 15491  015DB2  6E3F               	movwf	(btemp+10)^0,c
 15492  015DB4  0E7F               	movlw	127
 15493  015DB6  14DE               	andwf	postinc2,w,c
 15494  015DB8  6E40               	movwf	(btemp+11)^0,c
 15495  015DBA  503D               	movf	(btemp+8)^0,w,c
 15496  015DBC  103E               	iorwf	(btemp+9)^0,w,c
 15497  015DBE  103F               	iorwf	(btemp+10)^0,w,c
 15498  015DC0  1040               	iorwf	(btemp+11)^0,w,c
 15499  015DC2  A4D8               	btfss	status,2,c
 15500  015DC4  D008               	goto	l6809
 15501                           
 15502                           ;stkvar	_ff1 @ sp[(0)+-4]
 15503  015DC6  0EFC               	movlw	-4
 15504  015DC8  6AE3               	clrf	plusw1,c
 15505  015DCA  0EFD               	movlw	-3
 15506  015DCC  6AE3               	clrf	plusw1,c
 15507  015DCE  0EFE               	movlw	-2
 15508  015DD0  6AE3               	clrf	plusw1,c
 15509  015DD2  0EFF               	movlw	-1
 15510  015DD4  6AE3               	clrf	plusw1,c
 15511  015DD6                     l6809:
 15512                           
 15513                           ;stkvar	_ff2 @ sp[(0)+-8]
 15514  015DD6  50E1               	movf	fsr1l,w,c
 15515  015DD8  0FF8               	addlw	-8
 15516  015DDA  6ED9               	movwf	fsr2l,c
 15517  015DDC  50E2               	movf	fsr1h,w,c
 15518  015DDE  6EDA               	movwf	fsr2h,c
 15519  015DE0  0EFF               	movlw	255
 15520  015DE2  22DA               	addwfc	fsr2h,f,c
 15521  015DE4  0E00               	movlw	0
 15522  015DE6  14DE               	andwf	postinc2,w,c
 15523  015DE8  6E3D               	movwf	(btemp+8)^0,c
 15524  015DEA  0E00               	movlw	0
 15525  015DEC  14DE               	andwf	postinc2,w,c
 15526  015DEE  6E3E               	movwf	(btemp+9)^0,c
 15527  015DF0  0E80               	movlw	128
 15528  015DF2  14DE               	andwf	postinc2,w,c
 15529  015DF4  6E3F               	movwf	(btemp+10)^0,c
 15530  015DF6  0E7F               	movlw	127
 15531  015DF8  14DE               	andwf	postinc2,w,c
 15532  015DFA  6E40               	movwf	(btemp+11)^0,c
 15533  015DFC  503D               	movf	(btemp+8)^0,w,c
 15534  015DFE  103E               	iorwf	(btemp+9)^0,w,c
 15535  015E00  103F               	iorwf	(btemp+10)^0,w,c
 15536  015E02  1040               	iorwf	(btemp+11)^0,w,c
 15537  015E04  A4D8               	btfss	status,2,c
 15538  015E06  D008               	goto	l2237
 15539                           
 15540                           ;stkvar	_ff2 @ sp[(0)+-8]
 15541  015E08  0EF8               	movlw	-8
 15542  015E0A  6AE3               	clrf	plusw1,c
 15543  015E0C  0EF9               	movlw	-7
 15544  015E0E  6AE3               	clrf	plusw1,c
 15545  015E10  0EFA               	movlw	-6
 15546  015E12  6AE3               	clrf	plusw1,c
 15547  015E14  0EFB               	movlw	-5
 15548  015E16  6AE3               	clrf	plusw1,c
 15549  015E18                     l2237:
 15550                           
 15551                           ;stkvar	_ff1 @ sp[(0)+-4]
 15552  015E18  0EFF               	movlw	-1
 15553  015E1A  AEE3               	btfss	plusw1,7,c
 15554  015E1C  D024               	goto	l6815
 15555                           
 15556                           ;stkvar	_ff1 @ sp[(0)+-4]
 15557  015E1E  0E00               	movlw	0
 15558  015E20  6E3D               	movwf	(btemp+8)^0,c
 15559  015E22  0E00               	movlw	0
 15560  015E24  6E3E               	movwf	(btemp+9)^0,c
 15561  015E26  0E00               	movlw	0
 15562  015E28  6E3F               	movwf	(btemp+10)^0,c
 15563  015E2A  0E80               	movlw	128
 15564  015E2C  6E40               	movwf	(btemp+11)^0,c
 15565  015E2E  0EFC               	movlw	-4
 15566  015E30  50E3               	movf	plusw1,w,c
 15567  015E32  5E3D               	subwf	(btemp+8)^0,f,c
 15568  015E34  0EFD               	movlw	-3
 15569  015E36  50E3               	movf	plusw1,w,c
 15570  015E38  5A3E               	subwfb	(btemp+9)^0,f,c
 15571  015E3A  0EFE               	movlw	-2
 15572  015E3C  50E3               	movf	plusw1,w,c
 15573  015E3E  5A3F               	subwfb	(btemp+10)^0,f,c
 15574  015E40  0EFF               	movlw	-1
 15575  015E42  50E3               	movf	plusw1,w,c
 15576  015E44  5A40               	subwfb	(btemp+11)^0,f,c
 15577                           
 15578                           ;stkvar	_ff1 @ sp[(0)+-4]
 15579  015E46  0EFC               	movlw	-4
 15580  015E48  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15581  015E4E  0EFD               	movlw	-3
 15582  015E50  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15583  015E56  0EFE               	movlw	-2
 15584  015E58  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15585  015E5E  0EFF               	movlw	-1
 15586  015E60  0060  F103  FFE3   	movff	btemp+11,plusw1
 15587  015E66                     l6815:
 15588                           
 15589                           ;stkvar	_ff2 @ sp[(0)+-8]
 15590  015E66  0EFB               	movlw	-5
 15591  015E68  AEE3               	btfss	plusw1,7,c
 15592  015E6A  D024               	goto	l6819
 15593                           
 15594                           ;stkvar	_ff2 @ sp[(0)+-8]
 15595  015E6C  0E00               	movlw	0
 15596  015E6E  6E3D               	movwf	(btemp+8)^0,c
 15597  015E70  0E00               	movlw	0
 15598  015E72  6E3E               	movwf	(btemp+9)^0,c
 15599  015E74  0E00               	movlw	0
 15600  015E76  6E3F               	movwf	(btemp+10)^0,c
 15601  015E78  0E80               	movlw	128
 15602  015E7A  6E40               	movwf	(btemp+11)^0,c
 15603  015E7C  0EF8               	movlw	-8
 15604  015E7E  50E3               	movf	plusw1,w,c
 15605  015E80  5E3D               	subwf	(btemp+8)^0,f,c
 15606  015E82  0EF9               	movlw	-7
 15607  015E84  50E3               	movf	plusw1,w,c
 15608  015E86  5A3E               	subwfb	(btemp+9)^0,f,c
 15609  015E88  0EFA               	movlw	-6
 15610  015E8A  50E3               	movf	plusw1,w,c
 15611  015E8C  5A3F               	subwfb	(btemp+10)^0,f,c
 15612  015E8E  0EFB               	movlw	-5
 15613  015E90  50E3               	movf	plusw1,w,c
 15614  015E92  5A40               	subwfb	(btemp+11)^0,f,c
 15615                           
 15616                           ;stkvar	_ff2 @ sp[(0)+-8]
 15617  015E94  0EF8               	movlw	-8
 15618  015E96  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15619  015E9C  0EF9               	movlw	-7
 15620  015E9E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15621  015EA4  0EFA               	movlw	-6
 15622  015EA6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15623  015EAC  0EFB               	movlw	-5
 15624  015EAE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15625  015EB4                     l6819:
 15626                           
 15627                           ;stkvar	_ff1 @ sp[(0)+-4]
 15628  015EB4  0EFF               	movlw	-1
 15629  015EB6  7EE3               	btg	plusw1,7,c
 15630                           
 15631                           ;stkvar	_ff2 @ sp[(0)+-8]
 15632  015EB8  0EFB               	movlw	-5
 15633  015EBA  7EE3               	btg	plusw1,7,c
 15634                           
 15635                           ;stkvar	_ff2 @ sp[(0)+-8]
 15636                           ;stkvar	_ff1 @ sp[(0)+-4]
 15637  015EBC  50E1               	movf	fsr1l,w,c
 15638  015EBE  0FFC               	addlw	-4
 15639  015EC0  6ED9               	movwf	fsr2l,c
 15640  015EC2  50E2               	movf	fsr1h,w,c
 15641  015EC4  6EDA               	movwf	fsr2h,c
 15642  015EC6  0EFF               	movlw	255
 15643  015EC8  22DA               	addwfc	fsr2h,f,c
 15644  015ECA  0EF8               	movlw	-8
 15645  015ECC  50E3               	movf	plusw1,w,c
 15646  015ECE  5CDE               	subwf	postinc2,w,c
 15647  015ED0  0EF9               	movlw	-7
 15648  015ED2  50E3               	movf	plusw1,w,c
 15649  015ED4  58DE               	subwfb	postinc2,w,c
 15650  015ED6  0EFA               	movlw	-6
 15651  015ED8  50E3               	movf	plusw1,w,c
 15652  015EDA  58DE               	subwfb	postinc2,w,c
 15653  015EDC  0EFB               	movlw	-5
 15654  015EDE  50E3               	movf	plusw1,w,c
 15655  015EE0  58DE               	subwfb	postinc2,w,c
 15656  015EE2  B0D8               	btfsc	status,0,c
 15657  015EE4  D002               	goto	l6827
 15658  015EE6  9035               	bcf	btemp& (0+255),0,c
 15659  015EE8  D001               	goto	l2244
 15660  015EEA                     l6827:
 15661  015EEA  8035               	bsf	btemp& (0+255),0,c
 15662  015EEC                     l2244:
 15663                           
 15664                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15665  015EEC  0EF8               	movlw	248
 15666  015EEE  26E1               	addwf	fsr1l,f,c
 15667  015EF0  0EFF               	movlw	255
 15668  015EF2  22E2               	addwfc	fsr1h,f,c
 15669  015EF4  0012               	return		;funcret
 15670  015EF6                     __end_of___flge:
 15671                           	opt callstack 0
 15672                           
 15673 ;; *************** function ___fleq *****************
 15674 ;; Defined at:
 15675 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;  ff1             4  [STACK] unsigned char 
 15678 ;;  ff2             4  [STACK] unsigned char 
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;		None
 15681 ;; Return value:  Size  Location     Type
 15682 ;;		None               void
 15683 ;; Registers used:
 15684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/4
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15694 ;;Total ram usage:        0 bytes
 15695 ;; Hardware stack levels used:    1
 15696 ;; Hardware stack levels required when called:    6
 15697 ;; This function calls:
 15698 ;;		Nothing
 15699 ;; This function is called by:
 15700 ;;		_efgtoa
 15701 ;; This function uses a reentrant model
 15702 ;;
 15703                           
 15704                           	psect	text53
 15705  01695E                     __ptext53:
 15706                           	opt callstack 0
 15707  01695E                     ___fleq:
 15708                           	opt callstack 17
 15709                           
 15710                           ;stkvar	_ff1 @ sp[(0)+-4]
 15711                           
 15712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15713                           ;incstack = 0
 15714  01695E  50E1               	movf	fsr1l,w,c
 15715  016960  0FFC               	addlw	-4
 15716  016962  6ED9               	movwf	fsr2l,c
 15717  016964  50E2               	movf	fsr1h,w,c
 15718  016966  6EDA               	movwf	fsr2h,c
 15719  016968  0EFF               	movlw	255
 15720  01696A  22DA               	addwfc	fsr2h,f,c
 15721  01696C  0E00               	movlw	0
 15722  01696E  14DE               	andwf	postinc2,w,c
 15723  016970  6E3D               	movwf	(btemp+8)^0,c
 15724  016972  0E00               	movlw	0
 15725  016974  14DE               	andwf	postinc2,w,c
 15726  016976  6E3E               	movwf	(btemp+9)^0,c
 15727  016978  0E80               	movlw	128
 15728  01697A  14DE               	andwf	postinc2,w,c
 15729  01697C  6E3F               	movwf	(btemp+10)^0,c
 15730  01697E  0E7F               	movlw	127
 15731  016980  14DE               	andwf	postinc2,w,c
 15732  016982  6E40               	movwf	(btemp+11)^0,c
 15733  016984  503D               	movf	(btemp+8)^0,w,c
 15734  016986  103E               	iorwf	(btemp+9)^0,w,c
 15735  016988  103F               	iorwf	(btemp+10)^0,w,c
 15736  01698A  1040               	iorwf	(btemp+11)^0,w,c
 15737  01698C  A4D8               	btfss	status,2,c
 15738  01698E  D008               	goto	l6793
 15739                           
 15740                           ;stkvar	_ff1 @ sp[(0)+-4]
 15741  016990  0EFC               	movlw	-4
 15742  016992  6AE3               	clrf	plusw1,c
 15743  016994  0EFD               	movlw	-3
 15744  016996  6AE3               	clrf	plusw1,c
 15745  016998  0EFE               	movlw	-2
 15746  01699A  6AE3               	clrf	plusw1,c
 15747  01699C  0EFF               	movlw	-1
 15748  01699E  6AE3               	clrf	plusw1,c
 15749  0169A0                     l6793:
 15750                           
 15751                           ;stkvar	_ff2 @ sp[(0)+-8]
 15752  0169A0  50E1               	movf	fsr1l,w,c
 15753  0169A2  0FF8               	addlw	-8
 15754  0169A4  6ED9               	movwf	fsr2l,c
 15755  0169A6  50E2               	movf	fsr1h,w,c
 15756  0169A8  6EDA               	movwf	fsr2h,c
 15757  0169AA  0EFF               	movlw	255
 15758  0169AC  22DA               	addwfc	fsr2h,f,c
 15759  0169AE  0E00               	movlw	0
 15760  0169B0  14DE               	andwf	postinc2,w,c
 15761  0169B2  6E3D               	movwf	(btemp+8)^0,c
 15762  0169B4  0E00               	movlw	0
 15763  0169B6  14DE               	andwf	postinc2,w,c
 15764  0169B8  6E3E               	movwf	(btemp+9)^0,c
 15765  0169BA  0E80               	movlw	128
 15766  0169BC  14DE               	andwf	postinc2,w,c
 15767  0169BE  6E3F               	movwf	(btemp+10)^0,c
 15768  0169C0  0E7F               	movlw	127
 15769  0169C2  14DE               	andwf	postinc2,w,c
 15770  0169C4  6E40               	movwf	(btemp+11)^0,c
 15771  0169C6  503D               	movf	(btemp+8)^0,w,c
 15772  0169C8  103E               	iorwf	(btemp+9)^0,w,c
 15773  0169CA  103F               	iorwf	(btemp+10)^0,w,c
 15774  0169CC  1040               	iorwf	(btemp+11)^0,w,c
 15775  0169CE  A4D8               	btfss	status,2,c
 15776  0169D0  D008               	goto	l6797
 15777                           
 15778                           ;stkvar	_ff2 @ sp[(0)+-8]
 15779  0169D2  0EF8               	movlw	-8
 15780  0169D4  6AE3               	clrf	plusw1,c
 15781  0169D6  0EF9               	movlw	-7
 15782  0169D8  6AE3               	clrf	plusw1,c
 15783  0169DA  0EFA               	movlw	-6
 15784  0169DC  6AE3               	clrf	plusw1,c
 15785  0169DE  0EFB               	movlw	-5
 15786  0169E0  6AE3               	clrf	plusw1,c
 15787  0169E2                     l6797:
 15788                           
 15789                           ;stkvar	_ff2 @ sp[(0)+-8]
 15790                           ;stkvar	_ff1 @ sp[(0)+-4]
 15791  0169E2  50E1               	movf	fsr1l,w,c
 15792  0169E4  0FFC               	addlw	-4
 15793  0169E6  6ED9               	movwf	fsr2l,c
 15794  0169E8  50E2               	movf	fsr1h,w,c
 15795  0169EA  6EDA               	movwf	fsr2h,c
 15796  0169EC  0EFF               	movlw	255
 15797  0169EE  22DA               	addwfc	fsr2h,f,c
 15798  0169F0  0EF8               	movlw	-8
 15799  0169F2  50E3               	movf	plusw1,w,c
 15800  0169F4  18DE               	xorwf	postinc2,w,c
 15801  0169F6  E10D               	bnz	u6000
 15802  0169F8  0EF9               	movlw	-7
 15803  0169FA  50E3               	movf	plusw1,w,c
 15804  0169FC  18DE               	xorwf	postinc2,w,c
 15805  0169FE  E109               	bnz	u6000
 15806  016A00  0EFA               	movlw	-6
 15807  016A02  50E3               	movf	plusw1,w,c
 15808  016A04  18DE               	xorwf	postinc2,w,c
 15809  016A06  E105               	bnz	u6000
 15810  016A08  0EFB               	movlw	-5
 15811  016A0A  50E3               	movf	plusw1,w,c
 15812  016A0C  18DE               	xorwf	postinc2,w,c
 15813  016A0E  B4D8               	btfsc	status,2,c
 15814  016A10  D002               	goto	l6801
 15815  016A12                     u6000:
 15816  016A12  9035               	bcf	btemp& (0+255),0,c
 15817  016A14  D001               	goto	l2233
 15818  016A16                     l6801:
 15819  016A16  8035               	bsf	btemp& (0+255),0,c
 15820  016A18                     l2233:
 15821                           
 15822                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15823  016A18  0EF8               	movlw	248
 15824  016A1A  26E1               	addwf	fsr1l,f,c
 15825  016A1C  0EFF               	movlw	255
 15826  016A1E  22E2               	addwfc	fsr1h,f,c
 15827  016A20  0012               	return		;funcret
 15828  016A22                     __end_of___fleq:
 15829                           	opt callstack 0
 15830                           
 15831 ;; *************** function ___fldiv *****************
 15832 ;; Defined at:
 15833 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;  b               4  [STACK] unsigned char 
 15836 ;;  a               4  [STACK] unsigned char 
 15837 ;; Auto vars:     Size  Location     Type
 15838 ;;  grs             4  [STACK] unsigned long 
 15839 ;;  rem             4  [STACK] unsigned long 
 15840 ;;  new_exp         2  [STACK] short 
 15841 ;;  aexp            1  [STACK] unsigned char 
 15842 ;;  bexp            1  [STACK] unsigned char 
 15843 ;;  sign            1  [STACK] unsigned char 
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  4  [STACK] unsigned char 
 15846 ;; Registers used:
 15847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/4
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15857 ;;Total ram usage:        0 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; Hardware stack levels required when called:    6
 15860 ;; This function calls:
 15861 ;;		Nothing
 15862 ;; This function is called by:
 15863 ;;		_conv_raw_result
 15864 ;;		_efgtoa
 15865 ;; This function uses a reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text54
 15869  012D68                     __ptext54:
 15870                           	opt callstack 0
 15871  012D68                     ___fldiv:
 15872                           	opt callstack 0
 15873                           
 15874                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15875  012D68  0E0D               	movlw	13
 15876  012D6A  26E1               	addwf	fsr1l,f,c
 15877  012D6C  0E00               	movlw	0
 15878  012D6E  22E2               	addwfc	fsr1h,f,c
 15879                           
 15880                           ;stkvar	_b @ sp[(-13)+-4]
 15881                           
 15882                           ;incstack = 0
 15883  012D70  0EF2               	movlw	242
 15884  012D72  24E1               	addwf	fsr1l,w,c
 15885  012D74  6ED9               	movwf	fsr2l,c
 15886  012D76  0EFF               	movlw	255
 15887  012D78  20E2               	addwfc	fsr1h,w,c
 15888  012D7A  6EDA               	movwf	fsr2h,c
 15889  012D7C  50DF               	movf	indf2,w,c
 15890  012D7E  6E40               	movwf	(btemp+11)^0,c
 15891  012D80  0E80               	movlw	128
 15892  012D82  1640               	andwf	(btemp+11)^0,f,c
 15893                           
 15894                           ;stkvar	_sign @ sp[(-13)+12]
 15895  012D84  0EFF               	movlw	-1
 15896  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 15897                           
 15898                           ;stkvar	_b @ sp[(-13)+-4]
 15899  012D8C  0EF2               	movlw	242
 15900  012D8E  24E1               	addwf	fsr1l,w,c
 15901  012D90  6ED9               	movwf	fsr2l,c
 15902  012D92  0EFF               	movlw	255
 15903  012D94  20E2               	addwfc	fsr1h,w,c
 15904  012D96  6EDA               	movwf	fsr2h,c
 15905  012D98  50DF               	movf	indf2,w,c
 15906  012D9A  6E40               	movwf	(btemp+11)^0,c
 15907  012D9C  90D8               	bcf	status,0,c
 15908  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 15909  012DA0  6E3F               	movwf	(btemp+10)^0,c
 15910                           
 15911                           ;stkvar	_bexp @ sp[(-13)+11]
 15912  012DA2  0EFE               	movlw	-2
 15913  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15914                           
 15915                           ;stkvar	_b @ sp[(-13)+-4]
 15916  012DAA  0EF1               	movlw	241
 15917  012DAC  24E1               	addwf	fsr1l,w,c
 15918  012DAE  6ED9               	movwf	fsr2l,c
 15919  012DB0  0EFF               	movlw	255
 15920  012DB2  20E2               	addwfc	fsr1h,w,c
 15921  012DB4  6EDA               	movwf	fsr2h,c
 15922  012DB6  AEDF               	btfss	indf2,7,c
 15923  012DB8  D002               	goto	l6395
 15924                           
 15925                           ;stkvar	_bexp @ sp[(-13)+11]
 15926  012DBA  0EFE               	movlw	-2
 15927  012DBC  80E3               	bsf	plusw1,0,c
 15928  012DBE                     l6395:
 15929                           
 15930                           ;stkvar	_bexp @ sp[(-13)+11]
 15931  012DBE  0EFE               	movlw	-2
 15932  012DC0  50E3               	movf	plusw1,w,c
 15933  012DC2  B4D8               	btfsc	status,2,c
 15934  012DC4  D027               	goto	l6405
 15935                           
 15936                           ;stkvar	_bexp @ sp[(-13)+11]
 15937  012DC6  0EFE               	movlw	-2
 15938  012DC8  28E3               	incf	plusw1,w,c
 15939  012DCA  A4D8               	btfss	status,2,c
 15940  012DCC  D018               	goto	l6401
 15941  012DCE  0E00               	movlw	0
 15942  012DD0  6E3D               	movwf	(btemp+8)^0,c
 15943  012DD2  0E00               	movlw	0
 15944  012DD4  6E3E               	movwf	(btemp+9)^0,c
 15945  012DD6  0E00               	movlw	0
 15946  012DD8  6E3F               	movwf	(btemp+10)^0,c
 15947  012DDA  0E00               	movlw	0
 15948  012DDC  6E40               	movwf	(btemp+11)^0,c
 15949                           
 15950                           ;stkvar	_b @ sp[(-13)+-4]
 15951  012DDE  0EEF               	movlw	-17
 15952  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15953  012DE6  0EF0               	movlw	-16
 15954  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15955  012DEE  0EF1               	movlw	-15
 15956  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15957  012DF6  0EF2               	movlw	-14
 15958  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15959  012DFE                     l6401:
 15960                           
 15961                           ;stkvar	_b @ sp[(-13)+-4]
 15962  012DFE  0EF1               	movlw	-15
 15963  012E00  8EE3               	bsf	plusw1,7,c
 15964                           
 15965                           ;stkvar	_b @ sp[(-13)+-4]
 15966  012E02  0EF2               	movlw	242
 15967  012E04  24E1               	addwf	fsr1l,w,c
 15968  012E06  6ED9               	movwf	fsr2l,c
 15969  012E08  0EFF               	movlw	255
 15970  012E0A  20E2               	addwfc	fsr1h,w,c
 15971  012E0C  6EDA               	movwf	fsr2h,c
 15972  012E0E  0E00               	movlw	0
 15973  012E10  6EDF               	movwf	indf2,c
 15974  012E12  D018               	goto	l6407
 15975  012E14                     l6405:
 15976  012E14  0E00               	movlw	0
 15977  012E16  6E3D               	movwf	(btemp+8)^0,c
 15978  012E18  0E00               	movlw	0
 15979  012E1A  6E3E               	movwf	(btemp+9)^0,c
 15980  012E1C  0E00               	movlw	0
 15981  012E1E  6E3F               	movwf	(btemp+10)^0,c
 15982  012E20  0E00               	movlw	0
 15983  012E22  6E40               	movwf	(btemp+11)^0,c
 15984                           
 15985                           ;stkvar	_b @ sp[(-13)+-4]
 15986  012E24  0EEF               	movlw	-17
 15987  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15988  012E2C  0EF0               	movlw	-16
 15989  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15990  012E34  0EF1               	movlw	-15
 15991  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15992  012E3C  0EF2               	movlw	-14
 15993  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15994  012E44                     l6407:
 15995                           
 15996                           ;stkvar	_a @ sp[(-13)+-8]
 15997  012E44  0EEE               	movlw	238
 15998  012E46  24E1               	addwf	fsr1l,w,c
 15999  012E48  6ED9               	movwf	fsr2l,c
 16000  012E4A  0EFF               	movlw	255
 16001  012E4C  20E2               	addwfc	fsr1h,w,c
 16002  012E4E  6EDA               	movwf	fsr2h,c
 16003  012E50  50DF               	movf	indf2,w,c
 16004  012E52  6E40               	movwf	(btemp+11)^0,c
 16005  012E54  0E80               	movlw	128
 16006  012E56  1640               	andwf	(btemp+11)^0,f,c
 16007                           
 16008                           ;stkvar	_sign @ sp[(-13)+12]
 16009  012E58  50E1               	movf	fsr1l,w,c
 16010  012E5A  0FFF               	addlw	-1
 16011  012E5C  6ED9               	movwf	fsr2l,c
 16012  012E5E  50E2               	movf	fsr1h,w,c
 16013  012E60  6EDA               	movwf	fsr2h,c
 16014  012E62  0EFF               	movlw	255
 16015  012E64  22DA               	addwfc	fsr2h,f,c
 16016  012E66  5040               	movf	(btemp+11)^0,w,c
 16017  012E68  1ADF               	xorwf	indf2,f,c
 16018                           
 16019                           ;stkvar	_a @ sp[(-13)+-8]
 16020  012E6A  0EEE               	movlw	238
 16021  012E6C  24E1               	addwf	fsr1l,w,c
 16022  012E6E  6ED9               	movwf	fsr2l,c
 16023  012E70  0EFF               	movlw	255
 16024  012E72  20E2               	addwfc	fsr1h,w,c
 16025  012E74  6EDA               	movwf	fsr2h,c
 16026  012E76  50DF               	movf	indf2,w,c
 16027  012E78  6E40               	movwf	(btemp+11)^0,c
 16028  012E7A  90D8               	bcf	status,0,c
 16029  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 16030  012E7E  6E3F               	movwf	(btemp+10)^0,c
 16031                           
 16032                           ;stkvar	_aexp @ sp[(-13)+10]
 16033  012E80  0EFD               	movlw	-3
 16034  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16035                           
 16036                           ;stkvar	_a @ sp[(-13)+-8]
 16037  012E88  0EED               	movlw	237
 16038  012E8A  24E1               	addwf	fsr1l,w,c
 16039  012E8C  6ED9               	movwf	fsr2l,c
 16040  012E8E  0EFF               	movlw	255
 16041  012E90  20E2               	addwfc	fsr1h,w,c
 16042  012E92  6EDA               	movwf	fsr2h,c
 16043  012E94  AEDF               	btfss	indf2,7,c
 16044  012E96  D002               	goto	l6415
 16045                           
 16046                           ;stkvar	_aexp @ sp[(-13)+10]
 16047  012E98  0EFD               	movlw	-3
 16048  012E9A  80E3               	bsf	plusw1,0,c
 16049  012E9C                     l6415:
 16050                           
 16051                           ;stkvar	_aexp @ sp[(-13)+10]
 16052  012E9C  0EFD               	movlw	-3
 16053  012E9E  50E3               	movf	plusw1,w,c
 16054  012EA0  B4D8               	btfsc	status,2,c
 16055  012EA2  D027               	goto	l6425
 16056                           
 16057                           ;stkvar	_aexp @ sp[(-13)+10]
 16058  012EA4  0EFD               	movlw	-3
 16059  012EA6  28E3               	incf	plusw1,w,c
 16060  012EA8  A4D8               	btfss	status,2,c
 16061  012EAA  D018               	goto	l6421
 16062  012EAC  0E00               	movlw	0
 16063  012EAE  6E3D               	movwf	(btemp+8)^0,c
 16064  012EB0  0E00               	movlw	0
 16065  012EB2  6E3E               	movwf	(btemp+9)^0,c
 16066  012EB4  0E00               	movlw	0
 16067  012EB6  6E3F               	movwf	(btemp+10)^0,c
 16068  012EB8  0E00               	movlw	0
 16069  012EBA  6E40               	movwf	(btemp+11)^0,c
 16070                           
 16071                           ;stkvar	_a @ sp[(-13)+-8]
 16072  012EBC  0EEB               	movlw	-21
 16073  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16074  012EC4  0EEC               	movlw	-20
 16075  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16076  012ECC  0EED               	movlw	-19
 16077  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16078  012ED4  0EEE               	movlw	-18
 16079  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 16080  012EDC                     l6421:
 16081                           
 16082                           ;stkvar	_a @ sp[(-13)+-8]
 16083  012EDC  0EED               	movlw	-19
 16084  012EDE  8EE3               	bsf	plusw1,7,c
 16085                           
 16086                           ;stkvar	_a @ sp[(-13)+-8]
 16087  012EE0  0EEE               	movlw	238
 16088  012EE2  24E1               	addwf	fsr1l,w,c
 16089  012EE4  6ED9               	movwf	fsr2l,c
 16090  012EE6  0EFF               	movlw	255
 16091  012EE8  20E2               	addwfc	fsr1h,w,c
 16092  012EEA  6EDA               	movwf	fsr2h,c
 16093  012EEC  0E00               	movlw	0
 16094  012EEE  6EDF               	movwf	indf2,c
 16095  012EF0  D018               	goto	l6427
 16096  012EF2                     l6425:
 16097  012EF2  0E00               	movlw	0
 16098  012EF4  6E3D               	movwf	(btemp+8)^0,c
 16099  012EF6  0E00               	movlw	0
 16100  012EF8  6E3E               	movwf	(btemp+9)^0,c
 16101  012EFA  0E00               	movlw	0
 16102  012EFC  6E3F               	movwf	(btemp+10)^0,c
 16103  012EFE  0E00               	movlw	0
 16104  012F00  6E40               	movwf	(btemp+11)^0,c
 16105                           
 16106                           ;stkvar	_a @ sp[(-13)+-8]
 16107  012F02  0EEB               	movlw	-21
 16108  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16109  012F0A  0EEC               	movlw	-20
 16110  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16111  012F12  0EED               	movlw	-19
 16112  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16113  012F1A  0EEE               	movlw	-18
 16114  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 16115  012F22                     l6427:
 16116                           
 16117                           ;stkvar	_a @ sp[(-13)+-8]
 16118  012F22  0EEB               	movlw	-21
 16119  012F24  50E3               	movf	plusw1,w,c
 16120  012F26  E139               	bnz	l6439
 16121  012F28  0EEC               	movlw	-20
 16122  012F2A  50E3               	movf	plusw1,w,c
 16123  012F2C  E136               	bnz	l6439
 16124  012F2E  0EED               	movlw	-19
 16125  012F30  50E3               	movf	plusw1,w,c
 16126  012F32  E133               	bnz	l6439
 16127  012F34  0EEE               	movlw	-18
 16128  012F36  50E3               	movf	plusw1,w,c
 16129  012F38  A4D8               	btfss	status,2,c
 16130  012F3A  D02F               	goto	l6439
 16131                           
 16132                           ;stkvar	_b @ sp[(-13)+-4]
 16133  012F3C  0EEF               	movlw	-17
 16134  012F3E  6AE3               	clrf	plusw1,c
 16135  012F40  0EF0               	movlw	-16
 16136  012F42  6AE3               	clrf	plusw1,c
 16137  012F44  0EF1               	movlw	-15
 16138  012F46  6AE3               	clrf	plusw1,c
 16139  012F48  0EF2               	movlw	-14
 16140  012F4A  6AE3               	clrf	plusw1,c
 16141                           
 16142                           ;stkvar	_b @ sp[(-13)+-4]
 16143  012F4C  0EF1               	movlw	241
 16144  012F4E  24E1               	addwf	fsr1l,w,c
 16145  012F50  6ED9               	movwf	fsr2l,c
 16146  012F52  0EFF               	movlw	255
 16147  012F54  20E2               	addwfc	fsr1h,w,c
 16148  012F56  6EDA               	movwf	fsr2h,c
 16149  012F58  0E80               	movlw	128
 16150  012F5A  12DE               	iorwf	postinc2,f,c
 16151  012F5C  0E7F               	movlw	127
 16152  012F5E  12DD               	iorwf	postdec2,f,c
 16153  012F60                     l6433:
 16154                           
 16155                           ;stkvar	_sign @ sp[(-13)+12]
 16156  012F60  0EFF               	movlw	-1
 16157  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 16158                           
 16159                           ;stkvar	_b @ sp[(-13)+-4]
 16160  012F68  0EF2               	movlw	242
 16161  012F6A  24E1               	addwf	fsr1l,w,c
 16162  012F6C  6ED9               	movwf	fsr2l,c
 16163  012F6E  0EFF               	movlw	255
 16164  012F70  20E2               	addwfc	fsr1h,w,c
 16165  012F72  6EDA               	movwf	fsr2h,c
 16166  012F74  5040               	movf	(btemp+11)^0,w,c
 16167  012F76  12DF               	iorwf	indf2,f,c
 16168                           
 16169                           ;stkvar	_b @ sp[(-13)+-4]
 16170  012F78  0EEF               	movlw	-17
 16171  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 16172  012F80  0EF0               	movlw	-16
 16173  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 16174  012F88  0EF1               	movlw	-15
 16175  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 16176  012F90  0EF2               	movlw	-14
 16177  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 16178  012F98  D19F               	goto	l2556
 16179  012F9A                     l6439:
 16180                           
 16181                           ;stkvar	_bexp @ sp[(-13)+11]
 16182  012F9A  0EFE               	movlw	-2
 16183  012F9C  50E3               	movf	plusw1,w,c
 16184  012F9E  A4D8               	btfss	status,2,c
 16185  012FA0  D009               	goto	l6447
 16186  012FA2  0E00               	movlw	0
 16187  012FA4  6E35               	movwf	btemp^0,c
 16188  012FA6  0E00               	movlw	0
 16189  012FA8  6E36               	movwf	(btemp+1)^0,c
 16190  012FAA  0E00               	movlw	0
 16191  012FAC  6E37               	movwf	(btemp+2)^0,c
 16192  012FAE  0E00               	movlw	0
 16193  012FB0  6E38               	movwf	(btemp+3)^0,c
 16194  012FB2  D192               	goto	l2556
 16195  012FB4                     l6447:
 16196                           
 16197                           ;stkvar	_bexp @ sp[(-13)+11]
 16198  012FB4  0EFE               	movlw	-2
 16199  012FB6  50E3               	movf	plusw1,w,c
 16200  012FB8  6E3F               	movwf	(btemp+10)^0,c
 16201  012FBA  6A40               	clrf	(btemp+11)^0,c
 16202                           
 16203                           ;stkvar	_aexp @ sp[(-13)+10]
 16204  012FBC  0EFD               	movlw	-3
 16205  012FBE  50E3               	movf	plusw1,w,c
 16206  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 16207  012FC2  0E00               	movlw	0
 16208  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 16209  012FC6  0E7F               	movlw	127
 16210  012FC8  263F               	addwf	(btemp+10)^0,f,c
 16211  012FCA  0E00               	movlw	0
 16212  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 16213                           
 16214                           ;stkvar	_new_exp @ sp[(-13)+8]
 16215  012FCE  0EFB               	movlw	-5
 16216  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16217  012FD6  0EFC               	movlw	-4
 16218  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 16219                           
 16220                           ;stkvar	_b @ sp[(-13)+-4]
 16221  012FDE  0EEF               	movlw	-17
 16222  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 16223  012FE6  0EF0               	movlw	-16
 16224  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 16225  012FEE  0EF1               	movlw	-15
 16226  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16227  012FF6  0EF2               	movlw	-14
 16228  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 16229                           
 16230                           ;stkvar	_rem @ sp[(-13)+4]
 16231  012FFE  0EF7               	movlw	-9
 16232  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16233  013006  0EF8               	movlw	-8
 16234  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16235  01300E  0EF9               	movlw	-7
 16236  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16237  013016  0EFA               	movlw	-6
 16238  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 16239                           
 16240                           ;stkvar	_b @ sp[(-13)+-4]
 16241  01301E  0EEF               	movlw	-17
 16242  013020  6AE3               	clrf	plusw1,c
 16243  013022  0EF0               	movlw	-16
 16244  013024  6AE3               	clrf	plusw1,c
 16245  013026  0EF1               	movlw	-15
 16246  013028  6AE3               	clrf	plusw1,c
 16247  01302A  0EF2               	movlw	-14
 16248  01302C  6AE3               	clrf	plusw1,c
 16249                           
 16250                           ;stkvar	_grs @ sp[(-13)+0]
 16251  01302E  0EF3               	movlw	-13
 16252  013030  6AE3               	clrf	plusw1,c
 16253  013032  0EF4               	movlw	-12
 16254  013034  6AE3               	clrf	plusw1,c
 16255  013036  0EF5               	movlw	-11
 16256  013038  6AE3               	clrf	plusw1,c
 16257  01303A  0EF6               	movlw	-10
 16258  01303C  6AE3               	clrf	plusw1,c
 16259                           
 16260                           ;stkvar	_aexp @ sp[(-13)+10]
 16261  01303E  0EFD               	movlw	-3
 16262  013040  6AE3               	clrf	plusw1,c
 16263  013042  D050               	goto	l6475
 16264  013044                     l6457:
 16265                           
 16266                           ;stkvar	_aexp @ sp[(-13)+10]
 16267  013044  0EFD               	movlw	-3
 16268  013046  50E3               	movf	plusw1,w,c
 16269  013048  B4D8               	btfsc	status,2,c
 16270  01304A  D020               	goto	l6467
 16271                           
 16272                           ;stkvar	_rem @ sp[(-13)+4]
 16273  01304C  90D8               	bcf	status,0,c
 16274  01304E  0EF7               	movlw	-9
 16275  013050  36E3               	rlcf	plusw1,f,c
 16276  013052  0EF8               	movlw	-8
 16277  013054  36E3               	rlcf	plusw1,f,c
 16278  013056  0EF9               	movlw	-7
 16279  013058  36E3               	rlcf	plusw1,f,c
 16280  01305A  0EFA               	movlw	-6
 16281  01305C  36E3               	rlcf	plusw1,f,c
 16282                           
 16283                           ;stkvar	_b @ sp[(-13)+-4]
 16284  01305E  90D8               	bcf	status,0,c
 16285  013060  0EEF               	movlw	-17
 16286  013062  36E3               	rlcf	plusw1,f,c
 16287  013064  0EF0               	movlw	-16
 16288  013066  36E3               	rlcf	plusw1,f,c
 16289  013068  0EF1               	movlw	-15
 16290  01306A  36E3               	rlcf	plusw1,f,c
 16291  01306C  0EF2               	movlw	-14
 16292  01306E  36E3               	rlcf	plusw1,f,c
 16293                           
 16294                           ;stkvar	_grs @ sp[(-13)+0]
 16295  013070  0EF6               	movlw	-10
 16296  013072  AEE3               	btfss	plusw1,7,c
 16297  013074  D002               	goto	l6465
 16298                           
 16299                           ;stkvar	_b @ sp[(-13)+-4]
 16300  013076  0EEF               	movlw	-17
 16301  013078  80E3               	bsf	plusw1,0,c
 16302  01307A                     l6465:
 16303                           
 16304                           ;stkvar	_grs @ sp[(-13)+0]
 16305  01307A  90D8               	bcf	status,0,c
 16306  01307C  0EF3               	movlw	-13
 16307  01307E  36E3               	rlcf	plusw1,f,c
 16308  013080  0EF4               	movlw	-12
 16309  013082  36E3               	rlcf	plusw1,f,c
 16310  013084  0EF5               	movlw	-11
 16311  013086  36E3               	rlcf	plusw1,f,c
 16312  013088  0EF6               	movlw	-10
 16313  01308A  36E3               	rlcf	plusw1,f,c
 16314  01308C                     l6467:
 16315                           
 16316                           ;stkvar	_a @ sp[(-13)+-8]
 16317                           ;stkvar	_rem @ sp[(-13)+4]
 16318  01308C  50E1               	movf	fsr1l,w,c
 16319  01308E  0FF7               	addlw	-9
 16320  013090  6ED9               	movwf	fsr2l,c
 16321  013092  50E2               	movf	fsr1h,w,c
 16322  013094  6EDA               	movwf	fsr2h,c
 16323  013096  0EFF               	movlw	255
 16324  013098  22DA               	addwfc	fsr2h,f,c
 16325  01309A  0EEB               	movlw	-21
 16326  01309C  50E3               	movf	plusw1,w,c
 16327  01309E  5CDE               	subwf	postinc2,w,c
 16328  0130A0  0EEC               	movlw	-20
 16329  0130A2  50E3               	movf	plusw1,w,c
 16330  0130A4  58DE               	subwfb	postinc2,w,c
 16331  0130A6  0EED               	movlw	-19
 16332  0130A8  50E3               	movf	plusw1,w,c
 16333  0130AA  58DE               	subwfb	postinc2,w,c
 16334  0130AC  0EEE               	movlw	-18
 16335  0130AE  50E3               	movf	plusw1,w,c
 16336  0130B0  58DE               	subwfb	postinc2,w,c
 16337  0130B2  A0D8               	btfss	status,0,c
 16338  0130B4  D015               	goto	l6473
 16339                           
 16340                           ;stkvar	_grs @ sp[(-13)+0]
 16341  0130B6  0EF6               	movlw	-10
 16342  0130B8  8CE3               	bsf	plusw1,6,c
 16343                           
 16344                           ;stkvar	_a @ sp[(-13)+-8]
 16345                           ;stkvar	_rem @ sp[(-13)+4]
 16346  0130BA  50E1               	movf	fsr1l,w,c
 16347  0130BC  0FF7               	addlw	-9
 16348  0130BE  6ED9               	movwf	fsr2l,c
 16349  0130C0  50E2               	movf	fsr1h,w,c
 16350  0130C2  6EDA               	movwf	fsr2h,c
 16351  0130C4  0EFF               	movlw	255
 16352  0130C6  22DA               	addwfc	fsr2h,f,c
 16353  0130C8  0EEB               	movlw	-21
 16354  0130CA  50E3               	movf	plusw1,w,c
 16355  0130CC  5EDE               	subwf	postinc2,f,c
 16356  0130CE  0EEC               	movlw	-20
 16357  0130D0  50E3               	movf	plusw1,w,c
 16358  0130D2  5ADE               	subwfb	postinc2,f,c
 16359  0130D4  0EED               	movlw	-19
 16360  0130D6  50E3               	movf	plusw1,w,c
 16361  0130D8  5ADE               	subwfb	postinc2,f,c
 16362  0130DA  0EEE               	movlw	-18
 16363  0130DC  50E3               	movf	plusw1,w,c
 16364  0130DE  5ADE               	subwfb	postinc2,f,c
 16365  0130E0                     l6473:
 16366                           
 16367                           ;stkvar	_aexp @ sp[(-13)+10]
 16368  0130E0  0EFD               	movlw	-3
 16369  0130E2  2AE3               	incf	plusw1,f,c
 16370  0130E4                     l6475:
 16371                           
 16372                           ;stkvar	_aexp @ sp[(-13)+10]
 16373  0130E4  0EFD               	movlw	-3
 16374  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 16375  0130EC  0E19               	movlw	25
 16376  0130EE  6435               	cpfsgt	btemp^0,c
 16377  0130F0  D7A9               	goto	l6457
 16378                           
 16379                           ;stkvar	_rem @ sp[(-13)+4]
 16380  0130F2  0EF7               	movlw	-9
 16381  0130F4  50E3               	movf	plusw1,w,c
 16382  0130F6  E10A               	bnz	u5500
 16383  0130F8  0EF8               	movlw	-8
 16384  0130FA  50E3               	movf	plusw1,w,c
 16385  0130FC  E107               	bnz	u5500
 16386  0130FE  0EF9               	movlw	-7
 16387  013100  50E3               	movf	plusw1,w,c
 16388  013102  E104               	bnz	u5500
 16389  013104  0EFA               	movlw	-6
 16390  013106  50E3               	movf	plusw1,w,c
 16391  013108  B4D8               	btfsc	status,2,c
 16392  01310A  D024               	goto	l6491
 16393  01310C                     u5500:
 16394                           
 16395                           ;stkvar	_grs @ sp[(-13)+0]
 16396  01310C  0EF3               	movlw	-13
 16397  01310E  80E3               	bsf	plusw1,0,c
 16398  013110  D021               	goto	l6491
 16399  013112                     l6481:
 16400                           
 16401                           ;stkvar	_b @ sp[(-13)+-4]
 16402  013112  90D8               	bcf	status,0,c
 16403  013114  0EEF               	movlw	-17
 16404  013116  36E3               	rlcf	plusw1,f,c
 16405  013118  0EF0               	movlw	-16
 16406  01311A  36E3               	rlcf	plusw1,f,c
 16407  01311C  0EF1               	movlw	-15
 16408  01311E  36E3               	rlcf	plusw1,f,c
 16409  013120  0EF2               	movlw	-14
 16410  013122  36E3               	rlcf	plusw1,f,c
 16411                           
 16412                           ;stkvar	_grs @ sp[(-13)+0]
 16413  013124  0EF6               	movlw	-10
 16414  013126  AEE3               	btfss	plusw1,7,c
 16415  013128  D002               	goto	l6487
 16416                           
 16417                           ;stkvar	_b @ sp[(-13)+-4]
 16418  01312A  0EEF               	movlw	-17
 16419  01312C  80E3               	bsf	plusw1,0,c
 16420  01312E                     l6487:
 16421                           
 16422                           ;stkvar	_grs @ sp[(-13)+0]
 16423  01312E  90D8               	bcf	status,0,c
 16424  013130  0EF3               	movlw	-13
 16425  013132  36E3               	rlcf	plusw1,f,c
 16426  013134  0EF4               	movlw	-12
 16427  013136  36E3               	rlcf	plusw1,f,c
 16428  013138  0EF5               	movlw	-11
 16429  01313A  36E3               	rlcf	plusw1,f,c
 16430  01313C  0EF6               	movlw	-10
 16431  01313E  36E3               	rlcf	plusw1,f,c
 16432                           
 16433                           ;stkvar	_new_exp @ sp[(-13)+8]
 16434  013140  50E1               	movf	fsr1l,w,c
 16435  013142  0FFB               	addlw	-5
 16436  013144  6ED9               	movwf	fsr2l,c
 16437  013146  50E2               	movf	fsr1h,w,c
 16438  013148  6EDA               	movwf	fsr2h,c
 16439  01314A  0EFF               	movlw	255
 16440  01314C  22DA               	addwfc	fsr2h,f,c
 16441  01314E  06DE               	decf	postinc2,f,c
 16442  013150  0E00               	movlw	0
 16443  013152  5ADD               	subwfb	postdec2,f,c
 16444  013154                     l6491:
 16445                           
 16446                           ;stkvar	_b @ sp[(-13)+-4]
 16447  013154  0EF1               	movlw	-15
 16448  013156  AEE3               	btfss	plusw1,7,c
 16449  013158  D7DC               	goto	l6481
 16450                           
 16451                           ;stkvar	_aexp @ sp[(-13)+10]
 16452  01315A  0EFD               	movlw	-3
 16453  01315C  6AE3               	clrf	plusw1,c
 16454                           
 16455                           ;stkvar	_grs @ sp[(-13)+0]
 16456  01315E  0EF6               	movlw	-10
 16457  013160  AEE3               	btfss	plusw1,7,c
 16458  013162  D020               	goto	l6505
 16459                           
 16460                           ;stkvar	_grs @ sp[(-13)+0]
 16461  013164  50E1               	movf	fsr1l,w,c
 16462  013166  0FF3               	addlw	-13
 16463  013168  6ED9               	movwf	fsr2l,c
 16464  01316A  50E2               	movf	fsr1h,w,c
 16465  01316C  6EDA               	movwf	fsr2h,c
 16466  01316E  0EFF               	movlw	255
 16467  013170  22DA               	addwfc	fsr2h,f,c
 16468  013172  0EFF               	movlw	255
 16469  013174  14DE               	andwf	postinc2,w,c
 16470  013176  6E3D               	movwf	(btemp+8)^0,c
 16471  013178  0EFF               	movlw	255
 16472  01317A  14DE               	andwf	postinc2,w,c
 16473  01317C  6E3E               	movwf	(btemp+9)^0,c
 16474  01317E  0EFF               	movlw	255
 16475  013180  14DE               	andwf	postinc2,w,c
 16476  013182  6E3F               	movwf	(btemp+10)^0,c
 16477  013184  0E7F               	movlw	127
 16478  013186  14DE               	andwf	postinc2,w,c
 16479  013188  6E40               	movwf	(btemp+11)^0,c
 16480  01318A  503D               	movf	(btemp+8)^0,w,c
 16481  01318C  103E               	iorwf	(btemp+9)^0,w,c
 16482  01318E  103F               	iorwf	(btemp+10)^0,w,c
 16483  013190  1040               	iorwf	(btemp+11)^0,w,c
 16484  013192  B4D8               	btfsc	status,2,c
 16485  013194  D004               	goto	l6501
 16486  013196                     u5540:
 16487                           
 16488                           ;stkvar	_aexp @ sp[(-13)+10]
 16489  013196  0EFD               	movlw	-3
 16490  013198  6AE3               	clrf	plusw1,c
 16491  01319A  2AE3               	incf	plusw1,f,c
 16492  01319C  D003               	goto	l6505
 16493  01319E                     l6501:
 16494                           
 16495                           ;stkvar	_b @ sp[(-13)+-4]
 16496  01319E  0EEF               	movlw	-17
 16497  0131A0  B0E3               	btfsc	plusw1,0,c
 16498  0131A2  D7F9               	goto	u5540
 16499  0131A4                     l6505:
 16500                           
 16501                           ;stkvar	_aexp @ sp[(-13)+10]
 16502  0131A4  0EFD               	movlw	-3
 16503  0131A6  50E3               	movf	plusw1,w,c
 16504  0131A8  B4D8               	btfsc	status,2,c
 16505  0131AA  D036               	goto	l6515
 16506                           
 16507                           ;stkvar	_b @ sp[(-13)+-4]
 16508  0131AC  50E1               	movf	fsr1l,w,c
 16509  0131AE  0FEF               	addlw	-17
 16510  0131B0  6ED9               	movwf	fsr2l,c
 16511  0131B2  50E2               	movf	fsr1h,w,c
 16512  0131B4  6EDA               	movwf	fsr2h,c
 16513  0131B6  0EFF               	movlw	255
 16514  0131B8  22DA               	addwfc	fsr2h,f,c
 16515  0131BA  2ADE               	incf	postinc2,f,c
 16516  0131BC  0E00               	movlw	0
 16517  0131BE  22DE               	addwfc	postinc2,f,c
 16518  0131C0  22DE               	addwfc	postinc2,f,c
 16519  0131C2  22DE               	addwfc	postinc2,f,c
 16520                           
 16521                           ;stkvar	_b @ sp[(-13)+-4]
 16522  0131C4  0EF2               	movlw	-14
 16523  0131C6  A0E3               	btfss	plusw1,0,c
 16524  0131C8  D027               	goto	l6515
 16525  0131CA  0E01               	movlw	1
 16526  0131CC  6E40               	movwf	(btemp+11)^0,c
 16527                           
 16528                           ;stkvar	_b @ sp[(-13)+-4]
 16529  0131CE  50E1               	movf	fsr1l,w,c
 16530  0131D0  0FEF               	addlw	-17
 16531  0131D2  6ED9               	movwf	fsr2l,c
 16532  0131D4  50E2               	movf	fsr1h,w,c
 16533  0131D6  6EDA               	movwf	fsr2h,c
 16534  0131D8  0EFF               	movlw	255
 16535  0131DA  22DA               	addwfc	fsr2h,f,c
 16536  0131DC  2840               	incf	(btemp+11)^0,w,c
 16537  0131DE  52DE               	movf	postinc2,f,c
 16538  0131E0  D008               	goto	u5580
 16539  0131E2                     u5585:
 16540  0131E2  52DE               	movf	postinc2,f,c
 16541  0131E4  90D8               	bcf	status,0,c
 16542  0131E6  BEDC               	btfsc	preinc2,7,c
 16543  0131E8  80D8               	bsf	status,0,c
 16544  0131EA  32DD               	rrcf	postdec2,f,c
 16545  0131EC  32DD               	rrcf	postdec2,f,c
 16546  0131EE  32DD               	rrcf	postdec2,f,c
 16547  0131F0  32DE               	rrcf	postinc2,f,c
 16548  0131F2                     u5580:
 16549  0131F2  2EE8               	decfsz	wreg,f,c
 16550  0131F4  D7F6               	goto	u5585
 16551                           
 16552                           ;stkvar	_new_exp @ sp[(-13)+8]
 16553  0131F6  0EFB               	movlw	-5
 16554  0131F8  50E3               	movf	plusw1,w,c
 16555  0131FA  0F01               	addlw	1
 16556  0131FC  6E35               	movwf	btemp^0,c
 16557  0131FE  0EFB               	movlw	-5
 16558  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 16559  013206  6A35               	clrf	btemp^0,c
 16560  013208  0EFC               	movlw	-4
 16561  01320A  50E3               	movf	plusw1,w,c
 16562  01320C  2035               	addwfc	btemp^0,w,c
 16563  01320E  6E35               	movwf	btemp^0,c
 16564  013210  0EFC               	movlw	-4
 16565  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 16566  013218                     l6515:
 16567                           
 16568                           ;stkvar	_new_exp @ sp[(-13)+8]
 16569  013218  0EFC               	movlw	-4
 16570  01321A  BEE3               	btfsc	plusw1,7,c
 16571  01321C  D01B               	goto	l6521
 16572  01321E  0EFC               	movlw	-4
 16573  013220  50E3               	movf	plusw1,w,c
 16574  013222  E104               	bnz	u5590
 16575  013224  0EFB               	movlw	-5
 16576  013226  28E3               	incf	plusw1,w,c
 16577  013228  A0D8               	btfss	status,0,c
 16578  01322A  D014               	goto	l6521
 16579  01322C                     u5590:
 16580  01322C  0EFF               	movlw	255
 16581  01322E  6E3F               	movwf	(btemp+10)^0,c
 16582  013230  0E00               	movlw	0
 16583  013232  6E40               	movwf	(btemp+11)^0,c
 16584                           
 16585                           ;stkvar	_new_exp @ sp[(-13)+8]
 16586  013234  0EFB               	movlw	-5
 16587  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16588  01323C  0EFC               	movlw	-4
 16589  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16590                           
 16591                           ;stkvar	_b @ sp[(-13)+-4]
 16592  013244  0EEF               	movlw	-17
 16593  013246  6AE3               	clrf	plusw1,c
 16594  013248  0EF0               	movlw	-16
 16595  01324A  6AE3               	clrf	plusw1,c
 16596  01324C  0EF1               	movlw	-15
 16597  01324E  6AE3               	clrf	plusw1,c
 16598  013250  0EF2               	movlw	-14
 16599  013252  6AE3               	clrf	plusw1,c
 16600  013254                     l6521:
 16601                           
 16602                           ;stkvar	_new_exp @ sp[(-13)+8]
 16603  013254  0EFC               	movlw	-4
 16604  013256  BEE3               	btfsc	plusw1,7,c
 16605  013258  D007               	goto	u5600
 16606  01325A  0EFC               	movlw	-4
 16607  01325C  50E3               	movf	plusw1,w,c
 16608  01325E  E112               	bnz	l6527
 16609  013260  0EFB               	movlw	-5
 16610  013262  04E3               	decf	plusw1,w,c
 16611  013264  B0D8               	btfsc	status,0,c
 16612  013266  D00E               	goto	l6527
 16613  013268                     u5600:
 16614                           
 16615                           ;stkvar	_new_exp @ sp[(-13)+8]
 16616  013268  0EFB               	movlw	-5
 16617  01326A  6AE3               	clrf	plusw1,c
 16618  01326C  0EFC               	movlw	-4
 16619  01326E  6AE3               	clrf	plusw1,c
 16620                           
 16621                           ;stkvar	_b @ sp[(-13)+-4]
 16622  013270  0EEF               	movlw	-17
 16623  013272  6AE3               	clrf	plusw1,c
 16624  013274  0EF0               	movlw	-16
 16625  013276  6AE3               	clrf	plusw1,c
 16626  013278  0EF1               	movlw	-15
 16627  01327A  6AE3               	clrf	plusw1,c
 16628  01327C  0EF2               	movlw	-14
 16629  01327E  6AE3               	clrf	plusw1,c
 16630                           
 16631                           ;stkvar	_sign @ sp[(-13)+12]
 16632  013280  0EFF               	movlw	-1
 16633  013282  6AE3               	clrf	plusw1,c
 16634  013284                     l6527:
 16635                           
 16636                           ;stkvar	_new_exp @ sp[(-13)+8]
 16637                           ;stkvar	_bexp @ sp[(-13)+11]
 16638  013284  0EFB               	movlw	-5
 16639  013286  006F FF8C  F035    	movff	plusw1,btemp
 16640  01328C  0EFE               	movlw	-2
 16641  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 16642                           
 16643                           ;stkvar	_bexp @ sp[(-13)+11]
 16644  013294  0EFE               	movlw	-2
 16645  013296  A0E3               	btfss	plusw1,0,c
 16646  013298  D009               	goto	l6533
 16647                           
 16648                           ;stkvar	_b @ sp[(-13)+-4]
 16649  01329A  0EF1               	movlw	241
 16650  01329C  24E1               	addwf	fsr1l,w,c
 16651  01329E  6ED9               	movwf	fsr2l,c
 16652  0132A0  0EFF               	movlw	255
 16653  0132A2  20E2               	addwfc	fsr1h,w,c
 16654  0132A4  6EDA               	movwf	fsr2h,c
 16655  0132A6  0E00               	movlw	0
 16656  0132A8  8EDB               	bsf	plusw2,7,c
 16657  0132AA  D008               	goto	l6535
 16658  0132AC                     l6533:
 16659                           
 16660                           ;stkvar	_b @ sp[(-13)+-4]
 16661  0132AC  0EF1               	movlw	241
 16662  0132AE  24E1               	addwf	fsr1l,w,c
 16663  0132B0  6ED9               	movwf	fsr2l,c
 16664  0132B2  0EFF               	movlw	255
 16665  0132B4  20E2               	addwfc	fsr1h,w,c
 16666  0132B6  6EDA               	movwf	fsr2h,c
 16667  0132B8  0E7F               	movlw	127
 16668  0132BA  16DF               	andwf	indf2,f,c
 16669  0132BC                     l6535:
 16670                           
 16671                           ;stkvar	_b @ sp[(-13)+-4]
 16672  0132BC  0EF2               	movlw	242
 16673  0132BE  24E1               	addwf	fsr1l,w,c
 16674  0132C0  6ED9               	movwf	fsr2l,c
 16675  0132C2  0EFF               	movlw	255
 16676  0132C4  20E2               	addwfc	fsr1h,w,c
 16677  0132C6  6EDA               	movwf	fsr2h,c
 16678                           
 16679                           ;stkvar	_bexp @ sp[(-13)+11]
 16680  0132C8  0EFE               	movlw	-2
 16681  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 16682  0132D0  90D8               	bcf	status,0,c
 16683  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 16684  0132D4  6EDF               	movwf	indf2,c
 16685  0132D6  D644               	goto	l6433
 16686  0132D8                     l2556:
 16687                           
 16688                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16689  0132D8  0EEB               	movlw	235
 16690  0132DA  26E1               	addwf	fsr1l,f,c
 16691  0132DC  0EFF               	movlw	255
 16692  0132DE  22E2               	addwfc	fsr1h,f,c
 16693  0132E0  0012               	return		;funcret
 16694  0132E2                     __end_of___fldiv:
 16695                           	opt callstack 0
 16696                           
 16697 ;; *************** function ___awmod *****************
 16698 ;; Defined at:
 16699 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;  dividend        2  [STACK] int 
 16702 ;;  divisor         2  [STACK] int 
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;  sign            1  [STACK] unsigned char 
 16705 ;;  counter         1  [STACK] unsigned char 
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  2  [STACK] int 
 16708 ;; Registers used:
 16709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/4
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16719 ;;Total ram usage:        0 bytes
 16720 ;; Hardware stack levels used:    1
 16721 ;; Hardware stack levels required when called:    6
 16722 ;; This function calls:
 16723 ;;		Nothing
 16724 ;; This function is called by:
 16725 ;;		_efgtoa
 16726 ;; This function uses a reentrant model
 16727 ;;
 16728                           
 16729                           	psect	text55
 16730  016296                     __ptext55:
 16731                           	opt callstack 0
 16732  016296                     ___awmod:
 16733                           	opt callstack 0
 16734                           
 16735                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16736  016296  52E6               	movf	postinc1,f,c
 16737  016298  52E6               	movf	postinc1,f,c
 16738                           
 16739                           ;stkvar	_sign @ sp[(-2)+0]
 16740                           
 16741                           ;incstack = 0
 16742  01629A  0EFE               	movlw	-2
 16743  01629C  6AE3               	clrf	plusw1,c
 16744                           
 16745                           ;stkvar	_dividend @ sp[(-2)+-2]
 16746  01629E  0EFD               	movlw	-3
 16747  0162A0  AEE3               	btfss	plusw1,7,c
 16748  0162A2  D009               	goto	l6759
 16749                           
 16750                           ;stkvar	_dividend @ sp[(-2)+-2]
 16751                           ;stkvar	_dividend @ sp[(-2)+-2]
 16752  0162A4  0EFC               	movlw	-4
 16753  0162A6  6CE3               	negf	plusw1,c
 16754  0162A8  0EFD               	movlw	-3
 16755  0162AA  1EE3               	comf	plusw1,f,c
 16756  0162AC  B0D8               	btfsc	status,0,c
 16757  0162AE  2AE3               	incf	plusw1,f,c
 16758                           
 16759                           ;stkvar	_sign @ sp[(-2)+0]
 16760  0162B0  0EFE               	movlw	-2
 16761  0162B2  6AE3               	clrf	plusw1,c
 16762  0162B4  2AE3               	incf	plusw1,f,c
 16763  0162B6                     l6759:
 16764                           
 16765                           ;stkvar	_divisor @ sp[(-2)+-4]
 16766  0162B6  0EFB               	movlw	-5
 16767  0162B8  AEE3               	btfss	plusw1,7,c
 16768  0162BA  D006               	goto	l6763
 16769                           
 16770                           ;stkvar	_divisor @ sp[(-2)+-4]
 16771                           ;stkvar	_divisor @ sp[(-2)+-4]
 16772  0162BC  0EFA               	movlw	-6
 16773  0162BE  6CE3               	negf	plusw1,c
 16774  0162C0  0EFB               	movlw	-5
 16775  0162C2  1EE3               	comf	plusw1,f,c
 16776  0162C4  B0D8               	btfsc	status,0,c
 16777  0162C6  2AE3               	incf	plusw1,f,c
 16778  0162C8                     l6763:
 16779                           
 16780                           ;stkvar	_divisor @ sp[(-2)+-4]
 16781  0162C8  0EFA               	movlw	-6
 16782  0162CA  006F FF8C  F035    	movff	plusw1,btemp
 16783  0162D0  0EFB               	movlw	-5
 16784  0162D2  50E3               	movf	plusw1,w,c
 16785  0162D4  1035               	iorwf	btemp^0,w,c
 16786  0162D6  B4D8               	btfsc	status,2,c
 16787  0162D8  D053               	goto	u5960
 16788                           
 16789                           ;stkvar	_counter @ sp[(-2)+1]
 16790  0162DA  0EFF               	movlw	-1
 16791  0162DC  6AE3               	clrf	plusw1,c
 16792  0162DE  D012               	goto	L13
 16793  0162E0                     l6767:
 16794                           
 16795                           ;stkvar	_divisor @ sp[(-2)+-4]
 16796  0162E0  0EFA               	movlw	-6
 16797  0162E2  50E3               	movf	plusw1,w,c
 16798  0162E4  90D8               	bcf	status,0,c
 16799  0162E6  34E8               	rlcf	wreg,w,c
 16800  0162E8  6E35               	movwf	btemp^0,c
 16801  0162EA  0EFA               	movlw	-6
 16802  0162EC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16803  0162F2  0EFB               	movlw	-5
 16804  0162F4  50E3               	movf	plusw1,w,c
 16805  0162F6  34E8               	rlcf	wreg,w,c
 16806  0162F8  6E35               	movwf	btemp^0,c
 16807  0162FA  0EFB               	movlw	-5
 16808  0162FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16809                           
 16810                           ;stkvar	_counter @ sp[(-2)+1]
 16811  016302  0EFF               	movlw	-1
 16812  016304                     L13:
 16813  016304  2AE3               	incf	plusw1,f,c
 16814                           
 16815                           ;stkvar	_divisor @ sp[(-2)+-4]
 16816  016306  0EFB               	movlw	-5
 16817  016308  AEE3               	btfss	plusw1,7,c
 16818  01630A  D7EA               	goto	l6767
 16819  01630C                     u5940:
 16820                           
 16821                           ;stkvar	_divisor @ sp[(-2)+-4]
 16822  01630C  0EFA               	movlw	-6
 16823  01630E  006F FF8C  F03F    	movff	plusw1,btemp+10
 16824  016314  0EFB               	movlw	-5
 16825  016316  006F FF8C  F040    	movff	plusw1,btemp+11
 16826                           
 16827                           ;stkvar	_dividend @ sp[(-2)+-2]
 16828  01631C  0EFC               	movlw	-4
 16829  01631E  006F FF8C  F03D    	movff	plusw1,btemp+8
 16830  016324  0EFD               	movlw	-3
 16831  016326  006F FF8C  F03E    	movff	plusw1,btemp+9
 16832  01632C  503F               	movf	(btemp+10)^0,w,c
 16833  01632E  5C3D               	subwf	(btemp+8)^0,w,c
 16834  016330  5040               	movf	(btemp+11)^0,w,c
 16835  016332  583E               	subwfb	(btemp+9)^0,w,c
 16836  016334  A0D8               	btfss	status,0,c
 16837  016336  D014               	goto	l6777
 16838                           
 16839                           ;stkvar	_divisor @ sp[(-2)+-4]
 16840                           ;stkvar	_dividend @ sp[(-2)+-2]
 16841  016338  0EFC               	movlw	-4
 16842  01633A  50E3               	movf	plusw1,w,c
 16843  01633C  6E35               	movwf	btemp^0,c
 16844  01633E  0EFA               	movlw	-6
 16845  016340  50E3               	movf	plusw1,w,c
 16846  016342  5E35               	subwf	btemp^0,f,c
 16847  016344  0EFC               	movlw	-4
 16848  016346  0060  F0D7  FFE3   	movff	btemp,plusw1
 16849  01634C  0EFD               	movlw	-3
 16850  01634E  50E3               	movf	plusw1,w,c
 16851  016350  6E35               	movwf	btemp^0,c
 16852  016352  0EFB               	movlw	-5
 16853  016354  50E3               	movf	plusw1,w,c
 16854  016356  5A35               	subwfb	btemp^0,f,c
 16855  016358  0EFD               	movlw	-3
 16856  01635A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16857  016360                     l6777:
 16858                           
 16859                           ;stkvar	_divisor @ sp[(-2)+-4]
 16860  016360  90D8               	bcf	status,0,c
 16861  016362  0EFB               	movlw	-5
 16862  016364  32E3               	rrcf	plusw1,f,c
 16863  016366  0EFA               	movlw	-6
 16864  016368  32E3               	rrcf	plusw1,f,c
 16865                           
 16866                           ;stkvar	_counter @ sp[(-2)+1]
 16867  01636A  0EFF               	movlw	-1
 16868  01636C  50E3               	movf	plusw1,w,c
 16869  01636E  6E35               	movwf	btemp^0,c
 16870  016370  0E01               	movlw	1
 16871  016372  5E35               	subwf	btemp^0,f,c
 16872  016374  0EFF               	movlw	-1
 16873  016376  0060  F0D7  FFE3   	movff	btemp,plusw1
 16874  01637C  A4D8               	btfss	status,2,c
 16875  01637E  D7C6               	goto	u5940
 16876  016380                     u5960:
 16877                           
 16878                           ;stkvar	_sign @ sp[(-2)+0]
 16879  016380  0EFE               	movlw	-2
 16880  016382  50E3               	movf	plusw1,w,c
 16881  016384  B4D8               	btfsc	status,2,c
 16882  016386  D006               	goto	l6785
 16883                           
 16884                           ;stkvar	_dividend @ sp[(-2)+-2]
 16885                           ;stkvar	_dividend @ sp[(-2)+-2]
 16886  016388  0EFC               	movlw	-4
 16887  01638A  6CE3               	negf	plusw1,c
 16888  01638C  0EFD               	movlw	-3
 16889  01638E  1EE3               	comf	plusw1,f,c
 16890  016390  B0D8               	btfsc	status,0,c
 16891  016392  2AE3               	incf	plusw1,f,c
 16892  016394                     l6785:
 16893                           
 16894                           ;stkvar	_dividend @ sp[(-2)+-2]
 16895  016394  0EFC               	movlw	-4
 16896  016396  006F FF8C  F035    	movff	plusw1,btemp
 16897  01639C  0EFD               	movlw	-3
 16898  01639E  006F FF8C  F036    	movff	plusw1,btemp+1
 16899                           
 16900                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16901  0163A4  0EFA               	movlw	250
 16902  0163A6  26E1               	addwf	fsr1l,f,c
 16903  0163A8  0EFF               	movlw	255
 16904  0163AA  22E2               	addwfc	fsr1h,f,c
 16905  0163AC  0012               	return		;funcret
 16906  0163AE                     __end_of___awmod:
 16907                           	opt callstack 0
 16908                           
 16909 ;; *************** function ___awdiv *****************
 16910 ;; Defined at:
 16911 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  dividend        2  [STACK] int 
 16914 ;;  divisor         2  [STACK] int 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;  quotient        2  [STACK] int 
 16917 ;;  sign            1  [STACK] unsigned char 
 16918 ;;  counter         1  [STACK] unsigned char 
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  2  [STACK] int 
 16921 ;; Registers used:
 16922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16923 ;; Tracked objects:
 16924 ;;		On entry : 0/4
 16925 ;;		On exit  : 0/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16932 ;;Total ram usage:        0 bytes
 16933 ;; Hardware stack levels used:    1
 16934 ;; Hardware stack levels required when called:    6
 16935 ;; This function calls:
 16936 ;;		Nothing
 16937 ;; This function is called by:
 16938 ;;		_efgtoa
 16939 ;; This function uses a reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text56
 16943  015EF6                     __ptext56:
 16944                           	opt callstack 0
 16945  015EF6                     ___awdiv:
 16946                           	opt callstack 0
 16947                           
 16948                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16949  015EF6  52E6               	movf	postinc1,f,c
 16950  015EF8  52E6               	movf	postinc1,f,c
 16951  015EFA  52E6               	movf	postinc1,f,c
 16952  015EFC  52E6               	movf	postinc1,f,c
 16953                           
 16954                           ;stkvar	_sign @ sp[(-4)+2]
 16955                           
 16956                           ;incstack = 0
 16957  015EFE  0EFE               	movlw	-2
 16958  015F00  6AE3               	clrf	plusw1,c
 16959                           
 16960                           ;stkvar	_divisor @ sp[(-4)+-4]
 16961  015F02  0EF9               	movlw	-7
 16962  015F04  AEE3               	btfss	plusw1,7,c
 16963  015F06  D009               	goto	l6713
 16964                           
 16965                           ;stkvar	_divisor @ sp[(-4)+-4]
 16966                           ;stkvar	_divisor @ sp[(-4)+-4]
 16967  015F08  0EF8               	movlw	-8
 16968  015F0A  6CE3               	negf	plusw1,c
 16969  015F0C  0EF9               	movlw	-7
 16970  015F0E  1EE3               	comf	plusw1,f,c
 16971  015F10  B0D8               	btfsc	status,0,c
 16972  015F12  2AE3               	incf	plusw1,f,c
 16973                           
 16974                           ;stkvar	_sign @ sp[(-4)+2]
 16975  015F14  0EFE               	movlw	-2
 16976  015F16  6AE3               	clrf	plusw1,c
 16977  015F18  2AE3               	incf	plusw1,f,c
 16978  015F1A                     l6713:
 16979                           
 16980                           ;stkvar	_dividend @ sp[(-4)+-2]
 16981  015F1A  0EFB               	movlw	-5
 16982  015F1C  AEE3               	btfss	plusw1,7,c
 16983  015F1E  D008               	goto	l6719
 16984                           
 16985                           ;stkvar	_dividend @ sp[(-4)+-2]
 16986                           ;stkvar	_dividend @ sp[(-4)+-2]
 16987  015F20  0EFA               	movlw	-6
 16988  015F22  6CE3               	negf	plusw1,c
 16989  015F24  0EFB               	movlw	-5
 16990  015F26  1EE3               	comf	plusw1,f,c
 16991  015F28  B0D8               	btfsc	status,0,c
 16992  015F2A  2AE3               	incf	plusw1,f,c
 16993                           
 16994                           ;stkvar	_sign @ sp[(-4)+2]
 16995  015F2C  0EFE               	movlw	-2
 16996  015F2E  70E3               	btg	plusw1,0,c
 16997  015F30                     l6719:
 16998                           
 16999                           ;stkvar	_quotient @ sp[(-4)+0]
 17000  015F30  0EFC               	movlw	-4
 17001  015F32  6AE3               	clrf	plusw1,c
 17002  015F34  0EFD               	movlw	-3
 17003  015F36  6AE3               	clrf	plusw1,c
 17004                           
 17005                           ;stkvar	_divisor @ sp[(-4)+-4]
 17006  015F38  0EF8               	movlw	-8
 17007  015F3A  006F FF8C  F035    	movff	plusw1,btemp
 17008  015F40  0EF9               	movlw	-7
 17009  015F42  50E3               	movf	plusw1,w,c
 17010  015F44  1035               	iorwf	btemp^0,w,c
 17011  015F46  B4D8               	btfsc	status,2,c
 17012  015F48  D066               	goto	u5890
 17013                           
 17014                           ;stkvar	_counter @ sp[(-4)+3]
 17015  015F4A  0EFF               	movlw	-1
 17016  015F4C  6AE3               	clrf	plusw1,c
 17017  015F4E  D012               	goto	L14
 17018  015F50                     l6725:
 17019                           
 17020                           ;stkvar	_divisor @ sp[(-4)+-4]
 17021  015F50  0EF8               	movlw	-8
 17022  015F52  50E3               	movf	plusw1,w,c
 17023  015F54  90D8               	bcf	status,0,c
 17024  015F56  34E8               	rlcf	wreg,w,c
 17025  015F58  6E35               	movwf	btemp^0,c
 17026  015F5A  0EF8               	movlw	-8
 17027  015F5C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17028  015F62  0EF9               	movlw	-7
 17029  015F64  50E3               	movf	plusw1,w,c
 17030  015F66  34E8               	rlcf	wreg,w,c
 17031  015F68  6E35               	movwf	btemp^0,c
 17032  015F6A  0EF9               	movlw	-7
 17033  015F6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17034                           
 17035                           ;stkvar	_counter @ sp[(-4)+3]
 17036  015F72  0EFF               	movlw	-1
 17037  015F74                     L14:
 17038  015F74  2AE3               	incf	plusw1,f,c
 17039                           
 17040                           ;stkvar	_divisor @ sp[(-4)+-4]
 17041  015F76  0EF9               	movlw	-7
 17042  015F78  AEE3               	btfss	plusw1,7,c
 17043  015F7A  D7EA               	goto	l6725
 17044  015F7C                     u5870:
 17045                           
 17046                           ;stkvar	_quotient @ sp[(-4)+0]
 17047  015F7C  0EFC               	movlw	-4
 17048  015F7E  50E3               	movf	plusw1,w,c
 17049  015F80  90D8               	bcf	status,0,c
 17050  015F82  34E8               	rlcf	wreg,w,c
 17051  015F84  6E35               	movwf	btemp^0,c
 17052  015F86  0EFC               	movlw	-4
 17053  015F88  0060  F0D7  FFE3   	movff	btemp,plusw1
 17054  015F8E  0EFD               	movlw	-3
 17055  015F90  50E3               	movf	plusw1,w,c
 17056  015F92  34E8               	rlcf	wreg,w,c
 17057  015F94  6E35               	movwf	btemp^0,c
 17058  015F96  0EFD               	movlw	-3
 17059  015F98  0060  F0D7  FFE3   	movff	btemp,plusw1
 17060                           
 17061                           ;stkvar	_divisor @ sp[(-4)+-4]
 17062  015F9E  0EF8               	movlw	-8
 17063  015FA0  006F FF8C  F03F    	movff	plusw1,btemp+10
 17064  015FA6  0EF9               	movlw	-7
 17065  015FA8  006F FF8C  F040    	movff	plusw1,btemp+11
 17066                           
 17067                           ;stkvar	_dividend @ sp[(-4)+-2]
 17068  015FAE  0EFA               	movlw	-6
 17069  015FB0  006F FF8C  F03D    	movff	plusw1,btemp+8
 17070  015FB6  0EFB               	movlw	-5
 17071  015FB8  006F FF8C  F03E    	movff	plusw1,btemp+9
 17072  015FBE  503F               	movf	(btemp+10)^0,w,c
 17073  015FC0  5C3D               	subwf	(btemp+8)^0,w,c
 17074  015FC2  5040               	movf	(btemp+11)^0,w,c
 17075  015FC4  583E               	subwfb	(btemp+9)^0,w,c
 17076  015FC6  A0D8               	btfss	status,0,c
 17077  015FC8  D016               	goto	l6739
 17078                           
 17079                           ;stkvar	_divisor @ sp[(-4)+-4]
 17080                           ;stkvar	_dividend @ sp[(-4)+-2]
 17081  015FCA  0EFA               	movlw	-6
 17082  015FCC  50E3               	movf	plusw1,w,c
 17083  015FCE  6E35               	movwf	btemp^0,c
 17084  015FD0  0EF8               	movlw	-8
 17085  015FD2  50E3               	movf	plusw1,w,c
 17086  015FD4  5E35               	subwf	btemp^0,f,c
 17087  015FD6  0EFA               	movlw	-6
 17088  015FD8  0060  F0D7  FFE3   	movff	btemp,plusw1
 17089  015FDE  0EFB               	movlw	-5
 17090  015FE0  50E3               	movf	plusw1,w,c
 17091  015FE2  6E35               	movwf	btemp^0,c
 17092  015FE4  0EF9               	movlw	-7
 17093  015FE6  50E3               	movf	plusw1,w,c
 17094  015FE8  5A35               	subwfb	btemp^0,f,c
 17095  015FEA  0EFB               	movlw	-5
 17096  015FEC  0060  F0D7  FFE3   	movff	btemp,plusw1
 17097                           
 17098                           ;stkvar	_quotient @ sp[(-4)+0]
 17099  015FF2  0EFC               	movlw	-4
 17100  015FF4  80E3               	bsf	plusw1,0,c
 17101  015FF6                     l6739:
 17102                           
 17103                           ;stkvar	_divisor @ sp[(-4)+-4]
 17104  015FF6  90D8               	bcf	status,0,c
 17105  015FF8  0EF9               	movlw	-7
 17106  015FFA  32E3               	rrcf	plusw1,f,c
 17107  015FFC  0EF8               	movlw	-8
 17108  015FFE  32E3               	rrcf	plusw1,f,c
 17109                           
 17110                           ;stkvar	_counter @ sp[(-4)+3]
 17111  016000  0EFF               	movlw	-1
 17112  016002  50E3               	movf	plusw1,w,c
 17113  016004  6E35               	movwf	btemp^0,c
 17114  016006  0E01               	movlw	1
 17115  016008  5E35               	subwf	btemp^0,f,c
 17116  01600A  0EFF               	movlw	-1
 17117  01600C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17118  016012  A4D8               	btfss	status,2,c
 17119  016014  D7B3               	goto	u5870
 17120  016016                     u5890:
 17121                           
 17122                           ;stkvar	_sign @ sp[(-4)+2]
 17123  016016  0EFE               	movlw	-2
 17124  016018  50E3               	movf	plusw1,w,c
 17125  01601A  B4D8               	btfsc	status,2,c
 17126  01601C  D006               	goto	l6747
 17127                           
 17128                           ;stkvar	_quotient @ sp[(-4)+0]
 17129                           ;stkvar	_quotient @ sp[(-4)+0]
 17130  01601E  0EFC               	movlw	-4
 17131  016020  6CE3               	negf	plusw1,c
 17132  016022  0EFD               	movlw	-3
 17133  016024  1EE3               	comf	plusw1,f,c
 17134  016026  B0D8               	btfsc	status,0,c
 17135  016028  2AE3               	incf	plusw1,f,c
 17136  01602A                     l6747:
 17137                           
 17138                           ;stkvar	_quotient @ sp[(-4)+0]
 17139  01602A  0EFC               	movlw	-4
 17140  01602C  006F FF8C  F035    	movff	plusw1,btemp
 17141  016032  0EFD               	movlw	-3
 17142  016034  006F FF8C  F036    	movff	plusw1,btemp+1
 17143                           
 17144                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17145  01603A  0EF8               	movlw	248
 17146  01603C  26E1               	addwf	fsr1l,f,c
 17147  01603E  0EFF               	movlw	255
 17148  016040  22E2               	addwfc	fsr1h,f,c
 17149  016042  0012               	return		;funcret
 17150  016044                     __end_of___awdiv:
 17151                           	opt callstack 0
 17152                           
 17153 ;; *************** function _dtoa *****************
 17154 ;; Defined at:
 17155 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17158 ;;		 -> f(6), NULL(0), 
 17159 ;;  d               8  [STACK] long long 
 17160 ;; Auto vars:     Size  Location     Type
 17161 ;;  n               8  [STACK] long long 
 17162 ;;  i               2  [STACK] int 
 17163 ;;  s               2  [STACK] int 
 17164 ;;  w               2  [STACK] int 
 17165 ;;  p               2  [STACK] int 
 17166 ;; Return value:  Size  Location     Type
 17167 ;;                  2  [STACK] int 
 17168 ;; Registers used:
 17169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17170 ;; Tracked objects:
 17171 ;;		On entry : 0/4
 17172 ;;		On exit  : 0/0
 17173 ;;		Unchanged: 0/0
 17174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17179 ;;Total ram usage:        0 bytes
 17180 ;; Hardware stack levels used:    1
 17181 ;; Hardware stack levels required when called:   11
 17182 ;; This function calls:
 17183 ;;		___aodiv
 17184 ;;		___aomod
 17185 ;;		_abs
 17186 ;;		_pad
 17187 ;; This function is called by:
 17188 ;;		_vfpfcnvrt
 17189 ;; This function uses a reentrant model
 17190 ;;
 17191                           
 17192                           	psect	text57
 17193  0132E2                     __ptext57:
 17194                           	opt callstack 0
 17195  0132E2                     _dtoa:
 17196                           	opt callstack 0
 17197                           
 17198                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17199  0132E2  0E12               	movlw	18
 17200  0132E4  26E1               	addwf	fsr1l,f,c
 17201  0132E6  0E00               	movlw	0
 17202  0132E8  22E2               	addwfc	fsr1h,f,c
 17203                           
 17204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17205                           ;stkvar	_d @ sp[(-18)+-10]
 17206                           
 17207                           ;incstack = 0
 17208  0132EA  0EE4               	movlw	228
 17209  0132EC  24E1               	addwf	fsr1l,w,c
 17210  0132EE  6ED9               	movwf	fsr2l,c
 17211  0132F0  0EFF               	movlw	255
 17212  0132F2  20E2               	addwfc	fsr1h,w,c
 17213  0132F4  6EDA               	movwf	fsr2h,c
 17214                           
 17215                           ;stkvar	_n @ sp[(-18)+2]
 17216  0132F6  0E08               	movlw	8
 17217  0132F8  6E35               	movwf	btemp^0,c
 17218  0132FA  0EF0               	movlw	-16
 17219  0132FC                     us859999:
 17220  0132FC  006F FF7B FFE3     	movff	postinc2,plusw1
 17221  013302  28E8               	incf	wreg,w,c
 17222  013304  2E35               	decfsz	btemp^0,f,c
 17223  013306  D7FA               	bra	us859999
 17224                           
 17225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17226                           ;stkvar	_n @ sp[(-18)+2]
 17227  013308  0EF7               	movlw	-9
 17228  01330A  AEE3               	btfss	plusw1,7,c
 17229  01330C  D002               	goto	u8600
 17230  01330E  0E01               	movlw	1
 17231  013310  D001               	goto	u8610
 17232  013312                     u8600:
 17233  013312  0E00               	movlw	0
 17234  013314                     u8610:
 17235  013314  6E3F               	movwf	(btemp+10)^0,c
 17236  013316  6A40               	clrf	(btemp+11)^0,c
 17237                           
 17238                           ;stkvar	_s @ sp[(-18)+12]
 17239  013318  0EFA               	movlw	-6
 17240  01331A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17241  013320  0EFB               	movlw	-5
 17242  013322  0060  F103  FFE3   	movff	btemp+11,plusw1
 17243                           
 17244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17245                           ;stkvar	_s @ sp[(-18)+12]
 17246  013328  0EFA               	movlw	-6
 17247  01332A  006F FF8C  F035    	movff	plusw1,btemp
 17248  013330  0EFB               	movlw	-5
 17249  013332  50E3               	movf	plusw1,w,c
 17250  013334  1035               	iorwf	btemp^0,w,c
 17251  013336  B4D8               	btfsc	status,2,c
 17252  013338  D025               	goto	u8630
 17253                           
 17254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17255                           ;stkvar	_n @ sp[(-18)+2]
 17256                           ;stkvar	_n @ sp[(-18)+2]
 17257  01333A  0EF0               	movlw	-16
 17258  01333C  6CE3               	negf	plusw1,c
 17259  01333E  0EF1               	movlw	-15
 17260  013340  1EE3               	comf	plusw1,f,c
 17261  013342  0EF2               	movlw	-14
 17262  013344  1EE3               	comf	plusw1,f,c
 17263  013346  0EF3               	movlw	-13
 17264  013348  1EE3               	comf	plusw1,f,c
 17265  01334A  0EF4               	movlw	-12
 17266  01334C  1EE3               	comf	plusw1,f,c
 17267  01334E  0EF5               	movlw	-11
 17268  013350  1EE3               	comf	plusw1,f,c
 17269  013352  0EF6               	movlw	-10
 17270  013354  1EE3               	comf	plusw1,f,c
 17271  013356  0EF7               	movlw	-9
 17272  013358  1EE3               	comf	plusw1,f,c
 17273  01335A  E314               	bnc	u8630
 17274  01335C  0EF1               	movlw	-15
 17275  01335E  2AE3               	incf	plusw1,f,c
 17276  013360  E311               	bnc	u8630
 17277  013362  0EF2               	movlw	-14
 17278  013364  2AE3               	incf	plusw1,f,c
 17279  013366  E30E               	bnc	u8630
 17280  013368  0EF3               	movlw	-13
 17281  01336A  2AE3               	incf	plusw1,f,c
 17282  01336C  E30B               	bnc	u8630
 17283  01336E  0EF4               	movlw	-12
 17284  013370  2AE3               	incf	plusw1,f,c
 17285  013372  E308               	bnc	u8630
 17286  013374  0EF5               	movlw	-11
 17287  013376  2AE3               	incf	plusw1,f,c
 17288  013378  E305               	bnc	u8630
 17289  01337A  0EF6               	movlw	-10
 17290  01337C  2AE3               	incf	plusw1,f,c
 17291  01337E  E302               	bnc	u8630
 17292  013380  0EF7               	movlw	-9
 17293  013382  2AE3               	incf	plusw1,f,c
 17294  013384                     u8630:
 17295                           
 17296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17297  013384  AE21               	btfss	(_prec+1)^0,7,c
 17298                           
 17299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17300  013386  9222               	bcf	_flags^0,1,c
 17301                           
 17302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17303  013388  BE21               	btfsc	(_prec+1)^0,7,c
 17304  01338A  D005               	goto	u8650
 17305  01338C  5021               	movf	(_prec+1)^0,w,c
 17306  01338E  E110               	bnz	l9001
 17307  013390  0420               	decf	_prec^0,w,c
 17308  013392  B0D8               	btfsc	status,0,c
 17309  013394  D00D               	goto	l9001
 17310  013396                     u8650:
 17311  013396  0E01               	movlw	1
 17312  013398  6E3F               	movwf	(btemp+10)^0,c
 17313  01339A  0E00               	movlw	0
 17314  01339C  6E40               	movwf	(btemp+11)^0,c
 17315                           
 17316                           ;stkvar	_p @ sp[(-18)+16]
 17317  01339E  0EFE               	movlw	-2
 17318  0133A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17319  0133A6  0EFF               	movlw	-1
 17320  0133A8  0060  F103  FFE3   	movff	btemp+11,plusw1
 17321  0133AE  D008               	goto	l1760
 17322  0133B0                     l9001:
 17323                           
 17324                           ;stkvar	_p @ sp[(-18)+16]
 17325  0133B0  0EFE               	movlw	-2
 17326  0133B2  0060  F083  FFE3   	movff	_prec,plusw1
 17327  0133B8  0EFF               	movlw	-1
 17328  0133BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 17329  0133C0                     l1760:
 17330                           
 17331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17332                           ;stkvar	_w @ sp[(-18)+14]
 17333  0133C0  0EFC               	movlw	-4
 17334  0133C2  0060  F07B  FFE3   	movff	_width,plusw1
 17335  0133C8  0EFD               	movlw	-3
 17336  0133CA  0060  F07F  FFE3   	movff	_width+1,plusw1
 17337                           
 17338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17339                           ;stkvar	_s @ sp[(-18)+12]
 17340  0133D0  0EFA               	movlw	-6
 17341  0133D2  006F FF8C  F035    	movff	plusw1,btemp
 17342  0133D8  0EFB               	movlw	-5
 17343  0133DA  50E3               	movf	plusw1,w,c
 17344  0133DC  1035               	iorwf	btemp^0,w,c
 17345  0133DE  A4D8               	btfss	status,2,c
 17346  0133E0  D002               	goto	u8670
 17347  0133E2  A422               	btfss	_flags^0,2,c
 17348  0133E4  D00A               	goto	l9009
 17349  0133E6                     u8670:
 17350                           
 17351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17352                           ;stkvar	_w @ sp[(-18)+14]
 17353  0133E6  50E1               	movf	fsr1l,w,c
 17354  0133E8  0FFC               	addlw	-4
 17355  0133EA  6ED9               	movwf	fsr2l,c
 17356  0133EC  50E2               	movf	fsr1h,w,c
 17357  0133EE  6EDA               	movwf	fsr2h,c
 17358  0133F0  0EFF               	movlw	255
 17359  0133F2  22DA               	addwfc	fsr2h,f,c
 17360  0133F4  06DE               	decf	postinc2,f,c
 17361  0133F6  0E00               	movlw	0
 17362  0133F8  5ADD               	subwfb	postdec2,f,c
 17363  0133FA                     l9009:
 17364                           
 17365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17366  0133FA  0E4F               	movlw	79
 17367  0133FC  6E3F               	movwf	(btemp+10)^0,c
 17368  0133FE  0E00               	movlw	0
 17369  013400  6E40               	movwf	(btemp+11)^0,c
 17370                           
 17371                           ;stkvar	_i @ sp[(-18)+10]
 17372  013402  0EF8               	movlw	-8
 17373  013404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17374  01340A  0EF9               	movlw	-7
 17375  01340C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17376                           
 17377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17378  013412  0101               	movlb	1	; () banked
 17379  013414  6BFA               	clrf	(_dbuf+79)& (0+255),b
 17380                           
 17381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17382  013416  D109               	goto	l9023
 17383  013418                     l9013:
 17384                           
 17385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17386                           ;stkvar	_i @ sp[(-18)+10]
 17387  013418  50E1               	movf	fsr1l,w,c
 17388  01341A  0FF8               	addlw	-8
 17389  01341C  6ED9               	movwf	fsr2l,c
 17390  01341E  50E2               	movf	fsr1h,w,c
 17391  013420  6EDA               	movwf	fsr2h,c
 17392  013422  0EFF               	movlw	255
 17393  013424  22DA               	addwfc	fsr2h,f,c
 17394  013426  06DE               	decf	postinc2,f,c
 17395  013428  0E00               	movlw	0
 17396  01342A  5ADD               	subwfb	postdec2,f,c
 17397                           
 17398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17399  01342C  0E0A               	movlw	10
 17400  01342E  6EE6               	movwf	postinc1,c
 17401  013430  0E00               	movlw	0
 17402  013432  6EE6               	movwf	postinc1,c
 17403  013434  0E00               	movlw	0
 17404  013436  6EE6               	movwf	postinc1,c
 17405  013438  0E00               	movlw	0
 17406  01343A  6EE6               	movwf	postinc1,c
 17407  01343C  0E00               	movlw	0
 17408  01343E  6EE6               	movwf	postinc1,c
 17409  013440  0E00               	movlw	0
 17410  013442  6EE6               	movwf	postinc1,c
 17411  013444  0E00               	movlw	0
 17412  013446  6EE6               	movwf	postinc1,c
 17413  013448  0E00               	movlw	0
 17414  01344A  6EE6               	movwf	postinc1,c
 17415                           
 17416                           ;stkvar	_n @ sp[(-26)+2]
 17417  01344C  50E1               	movf	fsr1l,w,c
 17418  01344E  0FE8               	addlw	-24
 17419  013450  6ED9               	movwf	fsr2l,c
 17420  013452  50E2               	movf	fsr1h,w,c
 17421  013454  6EDA               	movwf	fsr2h,c
 17422  013456  0EFF               	movlw	255
 17423  013458  22DA               	addwfc	fsr2h,f,c
 17424  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 17425  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 17426  013466  006F FF7B FFE6     	movff	postinc2,postinc1
 17427  01346C  006F FF7B FFE6     	movff	postinc2,postinc1
 17428  013472  006F FF7B FFE6     	movff	postinc2,postinc1
 17429  013478  006F FF7B FFE6     	movff	postinc2,postinc1
 17430  01347E  006F FF7B FFE6     	movff	postinc2,postinc1
 17431  013484  006F FF7B FFE6     	movff	postinc2,postinc1
 17432  01348A  EC57  F0A8         	call	___aomod	;wreg free
 17433  01348E  52E5               	movf	postdec1,f,c
 17434  013490  006F FF9C  F04C    	movff	indf1,btemp+23
 17435  013496  52E5               	movf	postdec1,f,c
 17436  013498  006F FF9C  F04B    	movff	indf1,btemp+22
 17437  01349E  52E5               	movf	postdec1,f,c
 17438  0134A0  006F FF9C  F04A    	movff	indf1,btemp+21
 17439  0134A6  52E5               	movf	postdec1,f,c
 17440  0134A8  006F FF9C  F049    	movff	indf1,btemp+20
 17441  0134AE  52E5               	movf	postdec1,f,c
 17442  0134B0  006F FF9C  F048    	movff	indf1,btemp+19
 17443  0134B6  52E5               	movf	postdec1,f,c
 17444  0134B8  006F FF9C  F047    	movff	indf1,btemp+18
 17445  0134BE  52E5               	movf	postdec1,f,c
 17446  0134C0  006F FF9C  F046    	movff	indf1,btemp+17
 17447  0134C6  52E5               	movf	postdec1,f,c
 17448  0134C8  006F FF9C  F045    	movff	indf1,btemp+16
 17449  0134CE  0EF8               	movlw	248
 17450  0134D0  26E1               	addwf	fsr1l,f,c
 17451  0134D2  0EFF               	movlw	255
 17452  0134D4  22E2               	addwfc	fsr1h,f,c
 17453  0134D6  0060  F114  F03F   	movff	btemp+16,btemp+10
 17454  0134DC  0060  F118  F040   	movff	btemp+17,btemp+11
 17455  0134E2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17456  0134E8  0060  F103  FFE6   	movff	btemp+11,postinc1
 17457  0134EE  ECC7  F0BB         	call	_abs	;wreg free
 17458  0134F2  0E30               	movlw	48
 17459  0134F4  2635               	addwf	btemp^0,f,c
 17460                           
 17461                           ;stkvar	_i @ sp[(-18)+10]
 17462  0134F6  0EF8               	movlw	-8
 17463  0134F8  006F FF8C  F03F    	movff	plusw1,btemp+10
 17464  0134FE  0EF9               	movlw	-7
 17465  013500  006F FF8C  F040    	movff	plusw1,btemp+11
 17466  013506  0EAB               	movlw	low _dbuf
 17467  013508  243F               	addwf	(btemp+10)^0,w,c
 17468  01350A  6ED9               	movwf	fsr2l,c
 17469  01350C  0E01               	movlw	high _dbuf
 17470  01350E  2040               	addwfc	(btemp+11)^0,w,c
 17471  013510  6EDA               	movwf	fsr2h,c
 17472  013512  0060  F0D7  FFDF   	movff	btemp,indf2
 17473                           
 17474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17475                           ;stkvar	_p @ sp[(-18)+16]
 17476  013518  50E1               	movf	fsr1l,w,c
 17477  01351A  0FFE               	addlw	-2
 17478  01351C  6ED9               	movwf	fsr2l,c
 17479  01351E  50E2               	movf	fsr1h,w,c
 17480  013520  6EDA               	movwf	fsr2h,c
 17481  013522  0EFF               	movlw	255
 17482  013524  22DA               	addwfc	fsr2h,f,c
 17483  013526  06DE               	decf	postinc2,f,c
 17484  013528  0E00               	movlw	0
 17485  01352A  5ADD               	subwfb	postdec2,f,c
 17486                           
 17487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17488                           ;stkvar	_w @ sp[(-18)+14]
 17489  01352C  50E1               	movf	fsr1l,w,c
 17490  01352E  0FFC               	addlw	-4
 17491  013530  6ED9               	movwf	fsr2l,c
 17492  013532  50E2               	movf	fsr1h,w,c
 17493  013534  6EDA               	movwf	fsr2h,c
 17494  013536  0EFF               	movlw	255
 17495  013538  22DA               	addwfc	fsr2h,f,c
 17496  01353A  06DE               	decf	postinc2,f,c
 17497  01353C  0E00               	movlw	0
 17498  01353E  5ADD               	subwfb	postdec2,f,c
 17499                           
 17500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17501  013540  0E0A               	movlw	10
 17502  013542  6EE6               	movwf	postinc1,c
 17503  013544  0E00               	movlw	0
 17504  013546  6EE6               	movwf	postinc1,c
 17505  013548  0E00               	movlw	0
 17506  01354A  6EE6               	movwf	postinc1,c
 17507  01354C  0E00               	movlw	0
 17508  01354E  6EE6               	movwf	postinc1,c
 17509  013550  0E00               	movlw	0
 17510  013552  6EE6               	movwf	postinc1,c
 17511  013554  0E00               	movlw	0
 17512  013556  6EE6               	movwf	postinc1,c
 17513  013558  0E00               	movlw	0
 17514  01355A  6EE6               	movwf	postinc1,c
 17515  01355C  0E00               	movlw	0
 17516  01355E  6EE6               	movwf	postinc1,c
 17517                           
 17518                           ;stkvar	_n @ sp[(-26)+2]
 17519  013560  50E1               	movf	fsr1l,w,c
 17520  013562  0FE8               	addlw	-24
 17521  013564  6ED9               	movwf	fsr2l,c
 17522  013566  50E2               	movf	fsr1h,w,c
 17523  013568  6EDA               	movwf	fsr2h,c
 17524  01356A  0EFF               	movlw	255
 17525  01356C  22DA               	addwfc	fsr2h,f,c
 17526  01356E  006F FF7B FFE6     	movff	postinc2,postinc1
 17527  013574  006F FF7B FFE6     	movff	postinc2,postinc1
 17528  01357A  006F FF7B FFE6     	movff	postinc2,postinc1
 17529  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 17530  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 17531  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 17532  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 17533  013598  006F FF7B FFE6     	movff	postinc2,postinc1
 17534  01359E  ECDD  F0A5         	call	___aodiv	;wreg free
 17535  0135A2  52E5               	movf	postdec1,f,c
 17536  0135A4  006F FF9C  F04C    	movff	indf1,btemp+23
 17537  0135AA  52E5               	movf	postdec1,f,c
 17538  0135AC  006F FF9C  F04B    	movff	indf1,btemp+22
 17539  0135B2  52E5               	movf	postdec1,f,c
 17540  0135B4  006F FF9C  F04A    	movff	indf1,btemp+21
 17541  0135BA  52E5               	movf	postdec1,f,c
 17542  0135BC  006F FF9C  F049    	movff	indf1,btemp+20
 17543  0135C2  52E5               	movf	postdec1,f,c
 17544  0135C4  006F FF9C  F048    	movff	indf1,btemp+19
 17545  0135CA  52E5               	movf	postdec1,f,c
 17546  0135CC  006F FF9C  F047    	movff	indf1,btemp+18
 17547  0135D2  52E5               	movf	postdec1,f,c
 17548  0135D4  006F FF9C  F046    	movff	indf1,btemp+17
 17549  0135DA  52E5               	movf	postdec1,f,c
 17550  0135DC  006F FF9C  F045    	movff	indf1,btemp+16
 17551  0135E2  0EF8               	movlw	248
 17552  0135E4  26E1               	addwf	fsr1l,f,c
 17553  0135E6  0EFF               	movlw	255
 17554  0135E8  22E2               	addwfc	fsr1h,f,c
 17555                           
 17556                           ;stkvar	_n @ sp[(-18)+2]
 17557  0135EA  0EF0               	movlw	-16
 17558  0135EC  0060  F117  FFE3   	movff	btemp+16,plusw1
 17559  0135F2  0EF1               	movlw	-15
 17560  0135F4  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17561  0135FA  0EF2               	movlw	-14
 17562  0135FC  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17563  013602  0EF3               	movlw	-13
 17564  013604  0060  F123  FFE3   	movff	btemp+19,plusw1
 17565  01360A  0EF4               	movlw	-12
 17566  01360C  0060  F127  FFE3   	movff	btemp+20,plusw1
 17567  013612  0EF5               	movlw	-11
 17568  013614  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17569  01361A  0EF6               	movlw	-10
 17570  01361C  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17571  013622  0EF7               	movlw	-9
 17572  013624  0060  F133  FFE3   	movff	btemp+23,plusw1
 17573  01362A                     l9023:
 17574                           
 17575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17576                           ;stkvar	_i @ sp[(-18)+10]
 17577  01362A  0EF9               	movlw	-7
 17578  01362C  BEE3               	btfsc	plusw1,7,c
 17579  01362E  D036               	goto	u8720
 17580  013630  0EF9               	movlw	-7
 17581  013632  50E3               	movf	plusw1,w,c
 17582  013634  E104               	bnz	u8680
 17583  013636  0EF8               	movlw	-8
 17584  013638  04E3               	decf	plusw1,w,c
 17585  01363A  A0D8               	btfss	status,0,c
 17586  01363C  D02F               	goto	u8720
 17587  01363E                     u8680:
 17588                           
 17589                           ;stkvar	_n @ sp[(-18)+2]
 17590  01363E  0EF0               	movlw	-16
 17591  013640  50E3               	movf	plusw1,w,c
 17592  013642  E115               	bnz	u8691
 17593  013644  0EF1               	movlw	-15
 17594  013646  50E3               	movf	plusw1,w,c
 17595  013648  E112               	bnz	u8691
 17596  01364A  0EF2               	movlw	-14
 17597  01364C  50E3               	movf	plusw1,w,c
 17598  01364E  E10F               	bnz	u8691
 17599  013650  0EF3               	movlw	-13
 17600  013652  50E3               	movf	plusw1,w,c
 17601  013654  E10C               	bnz	u8691
 17602  013656  0EF4               	movlw	-12
 17603  013658  50E3               	movf	plusw1,w,c
 17604  01365A  E109               	bnz	u8691
 17605  01365C  0EF5               	movlw	-11
 17606  01365E  50E3               	movf	plusw1,w,c
 17607  013660  E106               	bnz	u8691
 17608  013662  0EF6               	movlw	-10
 17609  013664  50E3               	movf	plusw1,w,c
 17610  013666  E103               	bnz	u8691
 17611  013668  0EF7               	movlw	-9
 17612  01366A  50E3               	movf	plusw1,w,c
 17613  01366C  A4D8               	btfss	status,2,c
 17614  01366E                     u8691:
 17615  01366E  D6D4               	goto	l9013
 17616                           
 17617                           ;stkvar	_p @ sp[(-18)+16]
 17618  013670  0EFF               	movlw	-1
 17619  013672  BEE3               	btfsc	plusw1,7,c
 17620  013674  D007               	goto	u8700
 17621  013676  0EFF               	movlw	-1
 17622  013678  50E3               	movf	plusw1,w,c
 17623  01367A  E103               	bnz	u8701
 17624  01367C  0EFE               	movlw	-2
 17625  01367E  04E3               	decf	plusw1,w,c
 17626  013680  B0D8               	btfsc	status,0,c
 17627  013682                     u8701:
 17628  013682  D6CA               	goto	l9013
 17629  013684                     u8700:
 17630                           
 17631                           ;stkvar	_w @ sp[(-18)+14]
 17632  013684  0EFD               	movlw	-3
 17633  013686  BEE3               	btfsc	plusw1,7,c
 17634  013688  D009               	goto	u8720
 17635  01368A  0EFD               	movlw	-3
 17636  01368C  50E3               	movf	plusw1,w,c
 17637  01368E  E104               	bnz	u8710
 17638  013690  0EFC               	movlw	-4
 17639  013692  04E3               	decf	plusw1,w,c
 17640  013694  A0D8               	btfss	status,0,c
 17641  013696  D002               	goto	u8720
 17642  013698                     u8710:
 17643  013698  B222               	btfsc	_flags^0,1,c
 17644  01369A  D6BE               	goto	l9013
 17645  01369C                     u8720:
 17646                           
 17647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17648                           ;stkvar	_s @ sp[(-18)+12]
 17649  01369C  0EFA               	movlw	-6
 17650  01369E  006F FF8C  F035    	movff	plusw1,btemp
 17651  0136A4  0EFB               	movlw	-5
 17652  0136A6  50E3               	movf	plusw1,w,c
 17653  0136A8  1035               	iorwf	btemp^0,w,c
 17654  0136AA  A4D8               	btfss	status,2,c
 17655  0136AC  D002               	goto	u8740
 17656  0136AE  A422               	btfss	_flags^0,2,c
 17657  0136B0  D033               	goto	l9047
 17658  0136B2                     u8740:
 17659                           
 17660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17661                           ;stkvar	_i @ sp[(-18)+10]
 17662  0136B2  50E1               	movf	fsr1l,w,c
 17663  0136B4  0FF8               	addlw	-8
 17664  0136B6  6ED9               	movwf	fsr2l,c
 17665  0136B8  50E2               	movf	fsr1h,w,c
 17666  0136BA  6EDA               	movwf	fsr2h,c
 17667  0136BC  0EFF               	movlw	255
 17668  0136BE  22DA               	addwfc	fsr2h,f,c
 17669  0136C0  06DE               	decf	postinc2,f,c
 17670  0136C2  0E00               	movlw	0
 17671  0136C4  5ADD               	subwfb	postdec2,f,c
 17672                           
 17673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17674                           ;stkvar	_s @ sp[(-18)+12]
 17675  0136C6  0EFA               	movlw	-6
 17676  0136C8  006F FF8C  F035    	movff	plusw1,btemp
 17677  0136CE  0EFB               	movlw	-5
 17678  0136D0  50E3               	movf	plusw1,w,c
 17679  0136D2  1035               	iorwf	btemp^0,w,c
 17680  0136D4  A4D8               	btfss	status,2,c
 17681  0136D6  D002               	goto	l9043
 17682  0136D8  0E2B               	movlw	43
 17683  0136DA  D001               	goto	L15
 17684  0136DC                     l9043:
 17685  0136DC  0E2D               	movlw	45
 17686  0136DE                     L15:
 17687  0136DE  6E3F               	movwf	(btemp+10)^0,c
 17688  0136E0  0E00               	movlw	0
 17689  0136E2  6E40               	movwf	(btemp+11)^0,c
 17690                           
 17691                           ;stkvar	_dtoa$4047 @ sp[(-18)+0]
 17692  0136E4  0EEE               	movlw	-18
 17693  0136E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17694  0136EC  0EEF               	movlw	-17
 17695  0136EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17696                           
 17697                           ;stkvar	_dtoa$4047 @ sp[(-18)+0]
 17698                           ;stkvar	_i @ sp[(-18)+10]
 17699  0136F4  0EF8               	movlw	-8
 17700  0136F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 17701  0136FC  0EF9               	movlw	-7
 17702  0136FE  006F FF8C  F040    	movff	plusw1,btemp+11
 17703  013704  0EAB               	movlw	low _dbuf
 17704  013706  243F               	addwf	(btemp+10)^0,w,c
 17705  013708  6ED9               	movwf	fsr2l,c
 17706  01370A  0E01               	movlw	high _dbuf
 17707  01370C  2040               	addwfc	(btemp+11)^0,w,c
 17708  01370E  6EDA               	movwf	fsr2h,c
 17709  013710  0EEE               	movlw	-18
 17710  013712  006F FF8F FFDF     	movff	plusw1,indf2
 17711  013718                     l9047:
 17712                           
 17713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17714                           ;stkvar	_w @ sp[(-18)+14]
 17715  013718  0EFC               	movlw	-4
 17716  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 17717  013720  006F FF8F FFE6     	movff	plusw1,postinc1
 17718                           
 17719                           ;stkvar	_i @ sp[(-20)+10]
 17720  013726  0EAB               	movlw	low _dbuf
 17721  013728  6E3F               	movwf	(btemp+10)^0,c
 17722  01372A  0E01               	movlw	high _dbuf
 17723  01372C  6E40               	movwf	(btemp+11)^0,c
 17724  01372E  0EF6               	movlw	-10
 17725  013730  50E3               	movf	plusw1,w,c
 17726  013732  263F               	addwf	(btemp+10)^0,f,c
 17727  013734  0EF7               	movlw	-9
 17728  013736  50E3               	movf	plusw1,w,c
 17729  013738  2240               	addwfc	(btemp+11)^0,f,c
 17730  01373A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17731  013740  0060  F103  FFE6   	movff	btemp+11,postinc1
 17732                           
 17733                           ;stkvar	_fp @ sp[(-22)+-2]
 17734  013746  0EE8               	movlw	-24
 17735  013748  006F FF8F FFE6     	movff	plusw1,postinc1
 17736  01374E  006F FF8F FFE6     	movff	plusw1,postinc1
 17737  013754  ECD7  F0B1         	call	_pad	;wreg free
 17738                           
 17739                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17740  013758  0EE4               	movlw	228
 17741  01375A  26E1               	addwf	fsr1l,f,c
 17742  01375C  0EFF               	movlw	255
 17743  01375E  22E2               	addwfc	fsr1h,f,c
 17744  013760  0012               	return		;funcret
 17745  013762                     __end_of_dtoa:
 17746                           	opt callstack 0
 17747                           
 17748 ;; *************** function _abs *****************
 17749 ;; Defined at:
 17750 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;  a               2  [STACK] int 
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  2  [STACK] int 
 17757 ;; Registers used:
 17758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17759 ;; Tracked objects:
 17760 ;;		On entry : 0/1
 17761 ;;		On exit  : 0/0
 17762 ;;		Unchanged: 0/0
 17763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used:    1
 17770 ;; Hardware stack levels required when called:    6
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_dtoa
 17775 ;; This function uses a reentrant model
 17776 ;;
 17777                           
 17778                           	psect	text58
 17779  01778E                     __ptext58:
 17780                           	opt callstack 0
 17781  01778E                     _abs:
 17782                           	opt callstack 17
 17783                           
 17784                           ;stkvar	_a @ sp[(0)+-2]
 17785                           
 17786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17787                           ;incstack = 0
 17788  01778E  0EFF               	movlw	-1
 17789  017790  BEE3               	btfsc	plusw1,7,c
 17790  017792  D007               	goto	u4850
 17791  017794  0EFF               	movlw	-1
 17792  017796  50E3               	movf	plusw1,w,c
 17793  017798  E112               	bnz	l6201
 17794  01779A  0EFE               	movlw	-2
 17795  01779C  04E3               	decf	plusw1,w,c
 17796  01779E  B0D8               	btfsc	status,0,c
 17797  0177A0  D00E               	goto	l6201
 17798  0177A2                     u4850:
 17799                           
 17800                           ;stkvar	_a @ sp[(0)+-2]
 17801  0177A2  0EFE               	movlw	-2
 17802  0177A4  006F FF8C  F035    	movff	plusw1,btemp
 17803  0177AA  1E35               	comf	btemp^0,f,c
 17804  0177AC  0EFF               	movlw	-1
 17805  0177AE  006F FF8C  F036    	movff	plusw1,btemp+1
 17806  0177B4  1E36               	comf	(btemp+1)^0,f,c
 17807  0177B6  2A35               	incf	btemp^0,f,c
 17808  0177B8  B4D8               	btfsc	status,2,c
 17809  0177BA  2A36               	incf	(btemp+1)^0,f,c
 17810  0177BC  D008               	goto	l2663
 17811  0177BE                     l6201:
 17812                           
 17813                           ;stkvar	_a @ sp[(0)+-2]
 17814  0177BE  0EFE               	movlw	-2
 17815  0177C0  006F FF8C  F035    	movff	plusw1,btemp
 17816  0177C6  0EFF               	movlw	-1
 17817  0177C8  006F FF8C  F036    	movff	plusw1,btemp+1
 17818  0177CE                     l2663:
 17819                           
 17820                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17821  0177CE  52E5               	movf	postdec1,f,c
 17822  0177D0  52E5               	movf	postdec1,f,c
 17823  0177D2  0012               	return		;funcret
 17824  0177D4                     __end_of_abs:
 17825                           	opt callstack 0
 17826                           
 17827 ;; *************** function ___aomod *****************
 17828 ;; Defined at:
 17829 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;  dividend        8  [STACK] long long 
 17832 ;;  divisor         8  [STACK] long long 
 17833 ;; Auto vars:     Size  Location     Type
 17834 ;;  sign            1  [STACK] unsigned char 
 17835 ;;  counter         1  [STACK] unsigned char 
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  8  [STACK] long long 
 17838 ;; Registers used:
 17839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/1
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17849 ;;Total ram usage:        0 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    6
 17852 ;; This function calls:
 17853 ;;		Nothing
 17854 ;; This function is called by:
 17855 ;;		_dtoa
 17856 ;; This function uses a reentrant model
 17857 ;;
 17858                           
 17859                           	psect	text59
 17860  0150AE                     __ptext59:
 17861                           	opt callstack 0
 17862  0150AE                     ___aomod:
 17863                           	opt callstack 0
 17864                           
 17865                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17866  0150AE  52E6               	movf	postinc1,f,c
 17867  0150B0  52E6               	movf	postinc1,f,c
 17868                           
 17869                           ;stkvar	_sign @ sp[(-2)+0]
 17870                           
 17871                           ;incstack = 0
 17872  0150B2  0EFE               	movlw	-2
 17873  0150B4  6AE3               	clrf	plusw1,c
 17874                           
 17875                           ;stkvar	_dividend @ sp[(-2)+-8]
 17876  0150B6  0EFD               	movlw	-3
 17877  0150B8  AEE3               	btfss	plusw1,7,c
 17878  0150BA  D028               	goto	l6359
 17879                           
 17880                           ;stkvar	_dividend @ sp[(-2)+-8]
 17881                           ;stkvar	_dividend @ sp[(-2)+-8]
 17882  0150BC  0EF6               	movlw	-10
 17883  0150BE  6CE3               	negf	plusw1,c
 17884  0150C0  0EF7               	movlw	-9
 17885  0150C2  1EE3               	comf	plusw1,f,c
 17886  0150C4  0EF8               	movlw	-8
 17887  0150C6  1EE3               	comf	plusw1,f,c
 17888  0150C8  0EF9               	movlw	-7
 17889  0150CA  1EE3               	comf	plusw1,f,c
 17890  0150CC  0EFA               	movlw	-6
 17891  0150CE  1EE3               	comf	plusw1,f,c
 17892  0150D0  0EFB               	movlw	-5
 17893  0150D2  1EE3               	comf	plusw1,f,c
 17894  0150D4  0EFC               	movlw	-4
 17895  0150D6  1EE3               	comf	plusw1,f,c
 17896  0150D8  0EFD               	movlw	-3
 17897  0150DA  1EE3               	comf	plusw1,f,c
 17898  0150DC  E314               	bnc	u5280
 17899  0150DE  0EF7               	movlw	-9
 17900  0150E0  2AE3               	incf	plusw1,f,c
 17901  0150E2  E311               	bnc	u5280
 17902  0150E4  0EF8               	movlw	-8
 17903  0150E6  2AE3               	incf	plusw1,f,c
 17904  0150E8  E30E               	bnc	u5280
 17905  0150EA  0EF9               	movlw	-7
 17906  0150EC  2AE3               	incf	plusw1,f,c
 17907  0150EE  E30B               	bnc	u5280
 17908  0150F0  0EFA               	movlw	-6
 17909  0150F2  2AE3               	incf	plusw1,f,c
 17910  0150F4  E308               	bnc	u5280
 17911  0150F6  0EFB               	movlw	-5
 17912  0150F8  2AE3               	incf	plusw1,f,c
 17913  0150FA  E305               	bnc	u5280
 17914  0150FC  0EFC               	movlw	-4
 17915  0150FE  2AE3               	incf	plusw1,f,c
 17916  015100  E302               	bnc	u5280
 17917  015102  0EFD               	movlw	-3
 17918  015104  2AE3               	incf	plusw1,f,c
 17919  015106                     u5280:
 17920                           
 17921                           ;stkvar	_sign @ sp[(-2)+0]
 17922  015106  0EFE               	movlw	-2
 17923  015108  6AE3               	clrf	plusw1,c
 17924  01510A  2AE3               	incf	plusw1,f,c
 17925  01510C                     l6359:
 17926                           
 17927                           ;stkvar	_divisor @ sp[(-2)+-16]
 17928  01510C  0EF5               	movlw	-11
 17929  01510E  AEE3               	btfss	plusw1,7,c
 17930  015110  D025               	goto	u5300
 17931                           
 17932                           ;stkvar	_divisor @ sp[(-2)+-16]
 17933                           ;stkvar	_divisor @ sp[(-2)+-16]
 17934  015112  0EEE               	movlw	-18
 17935  015114  6CE3               	negf	plusw1,c
 17936  015116  0EEF               	movlw	-17
 17937  015118  1EE3               	comf	plusw1,f,c
 17938  01511A  0EF0               	movlw	-16
 17939  01511C  1EE3               	comf	plusw1,f,c
 17940  01511E  0EF1               	movlw	-15
 17941  015120  1EE3               	comf	plusw1,f,c
 17942  015122  0EF2               	movlw	-14
 17943  015124  1EE3               	comf	plusw1,f,c
 17944  015126  0EF3               	movlw	-13
 17945  015128  1EE3               	comf	plusw1,f,c
 17946  01512A  0EF4               	movlw	-12
 17947  01512C  1EE3               	comf	plusw1,f,c
 17948  01512E  0EF5               	movlw	-11
 17949  015130  1EE3               	comf	plusw1,f,c
 17950  015132  E314               	bnc	u5300
 17951  015134  0EEF               	movlw	-17
 17952  015136  2AE3               	incf	plusw1,f,c
 17953  015138  E311               	bnc	u5300
 17954  01513A  0EF0               	movlw	-16
 17955  01513C  2AE3               	incf	plusw1,f,c
 17956  01513E  E30E               	bnc	u5300
 17957  015140  0EF1               	movlw	-15
 17958  015142  2AE3               	incf	plusw1,f,c
 17959  015144  E30B               	bnc	u5300
 17960  015146  0EF2               	movlw	-14
 17961  015148  2AE3               	incf	plusw1,f,c
 17962  01514A  E308               	bnc	u5300
 17963  01514C  0EF3               	movlw	-13
 17964  01514E  2AE3               	incf	plusw1,f,c
 17965  015150  E305               	bnc	u5300
 17966  015152  0EF4               	movlw	-12
 17967  015154  2AE3               	incf	plusw1,f,c
 17968  015156  E302               	bnc	u5300
 17969  015158  0EF5               	movlw	-11
 17970  01515A  2AE3               	incf	plusw1,f,c
 17971  01515C                     u5300:
 17972                           
 17973                           ;stkvar	_divisor @ sp[(-2)+-16]
 17974  01515C  0EEE               	movlw	-18
 17975  01515E  50E3               	movf	plusw1,w,c
 17976  015160  E116               	bnz	u5310
 17977  015162  0EEF               	movlw	-17
 17978  015164  50E3               	movf	plusw1,w,c
 17979  015166  E113               	bnz	u5310
 17980  015168  0EF0               	movlw	-16
 17981  01516A  50E3               	movf	plusw1,w,c
 17982  01516C  E110               	bnz	u5310
 17983  01516E  0EF1               	movlw	-15
 17984  015170  50E3               	movf	plusw1,w,c
 17985  015172  E10D               	bnz	u5310
 17986  015174  0EF2               	movlw	-14
 17987  015176  50E3               	movf	plusw1,w,c
 17988  015178  E10A               	bnz	u5310
 17989  01517A  0EF3               	movlw	-13
 17990  01517C  50E3               	movf	plusw1,w,c
 17991  01517E  E107               	bnz	u5310
 17992  015180  0EF4               	movlw	-12
 17993  015182  50E3               	movf	plusw1,w,c
 17994  015184  E104               	bnz	u5310
 17995  015186  0EF5               	movlw	-11
 17996  015188  50E3               	movf	plusw1,w,c
 17997  01518A  B4D8               	btfsc	status,2,c
 17998  01518C  D075               	goto	u5340
 17999  01518E                     u5310:
 18000                           
 18001                           ;stkvar	_counter @ sp[(-2)+1]
 18002  01518E  0EFF               	movlw	-1
 18003  015190  6AE3               	clrf	plusw1,c
 18004  015192  D012               	goto	L16
 18005  015194                     l6367:
 18006                           
 18007                           ;stkvar	_divisor @ sp[(-2)+-16]
 18008  015194  90D8               	bcf	status,0,c
 18009  015196  0EEE               	movlw	-18
 18010  015198  36E3               	rlcf	plusw1,f,c
 18011  01519A  0EEF               	movlw	-17
 18012  01519C  36E3               	rlcf	plusw1,f,c
 18013  01519E  0EF0               	movlw	-16
 18014  0151A0  36E3               	rlcf	plusw1,f,c
 18015  0151A2  0EF1               	movlw	-15
 18016  0151A4  36E3               	rlcf	plusw1,f,c
 18017  0151A6  0EF2               	movlw	-14
 18018  0151A8  36E3               	rlcf	plusw1,f,c
 18019  0151AA  0EF3               	movlw	-13
 18020  0151AC  36E3               	rlcf	plusw1,f,c
 18021  0151AE  0EF4               	movlw	-12
 18022  0151B0  36E3               	rlcf	plusw1,f,c
 18023  0151B2  0EF5               	movlw	-11
 18024  0151B4  36E3               	rlcf	plusw1,f,c
 18025                           
 18026                           ;stkvar	_counter @ sp[(-2)+1]
 18027  0151B6  0EFF               	movlw	-1
 18028  0151B8                     L16:
 18029  0151B8  2AE3               	incf	plusw1,f,c
 18030                           
 18031                           ;stkvar	_divisor @ sp[(-2)+-16]
 18032  0151BA  0EF5               	movlw	-11
 18033  0151BC  AEE3               	btfss	plusw1,7,c
 18034  0151BE  D7EA               	goto	l6367
 18035  0151C0                     u5320:
 18036                           
 18037                           ;stkvar	_divisor @ sp[(-2)+-16]
 18038                           ;stkvar	_dividend @ sp[(-2)+-8]
 18039  0151C0  50E1               	movf	fsr1l,w,c
 18040  0151C2  0FF6               	addlw	-10
 18041  0151C4  6ED9               	movwf	fsr2l,c
 18042  0151C6  50E2               	movf	fsr1h,w,c
 18043  0151C8  6EDA               	movwf	fsr2h,c
 18044  0151CA  0EFF               	movlw	255
 18045  0151CC  22DA               	addwfc	fsr2h,f,c
 18046  0151CE  0EEE               	movlw	-18
 18047  0151D0  50E3               	movf	plusw1,w,c
 18048  0151D2  5CDE               	subwf	postinc2,w,c
 18049  0151D4  0EEF               	movlw	-17
 18050  0151D6  50E3               	movf	plusw1,w,c
 18051  0151D8  58DE               	subwfb	postinc2,w,c
 18052  0151DA  0EF0               	movlw	-16
 18053  0151DC  50E3               	movf	plusw1,w,c
 18054  0151DE  58DE               	subwfb	postinc2,w,c
 18055  0151E0  0EF1               	movlw	-15
 18056  0151E2  50E3               	movf	plusw1,w,c
 18057  0151E4  58DE               	subwfb	postinc2,w,c
 18058  0151E6  0EF2               	movlw	-14
 18059  0151E8  50E3               	movf	plusw1,w,c
 18060  0151EA  58DE               	subwfb	postinc2,w,c
 18061  0151EC  0EF3               	movlw	-13
 18062  0151EE  50E3               	movf	plusw1,w,c
 18063  0151F0  58DE               	subwfb	postinc2,w,c
 18064  0151F2  0EF4               	movlw	-12
 18065  0151F4  50E3               	movf	plusw1,w,c
 18066  0151F6  58DE               	subwfb	postinc2,w,c
 18067  0151F8  0EF5               	movlw	-11
 18068  0151FA  50E3               	movf	plusw1,w,c
 18069  0151FC  58DE               	subwfb	postinc2,w,c
 18070  0151FE  A0D8               	btfss	status,0,c
 18071  015200  D01F               	goto	l6375
 18072                           
 18073                           ;stkvar	_divisor @ sp[(-2)+-16]
 18074                           ;stkvar	_dividend @ sp[(-2)+-8]
 18075  015202  50E1               	movf	fsr1l,w,c
 18076  015204  0FF6               	addlw	-10
 18077  015206  6ED9               	movwf	fsr2l,c
 18078  015208  50E2               	movf	fsr1h,w,c
 18079  01520A  6EDA               	movwf	fsr2h,c
 18080  01520C  0EFF               	movlw	255
 18081  01520E  22DA               	addwfc	fsr2h,f,c
 18082  015210  0EEE               	movlw	-18
 18083  015212  50E3               	movf	plusw1,w,c
 18084  015214  5EDE               	subwf	postinc2,f,c
 18085  015216  0EEF               	movlw	-17
 18086  015218  50E3               	movf	plusw1,w,c
 18087  01521A  5ADE               	subwfb	postinc2,f,c
 18088  01521C  0EF0               	movlw	-16
 18089  01521E  50E3               	movf	plusw1,w,c
 18090  015220  5ADE               	subwfb	postinc2,f,c
 18091  015222  0EF1               	movlw	-15
 18092  015224  50E3               	movf	plusw1,w,c
 18093  015226  5ADE               	subwfb	postinc2,f,c
 18094  015228  0EF2               	movlw	-14
 18095  01522A  50E3               	movf	plusw1,w,c
 18096  01522C  5ADE               	subwfb	postinc2,f,c
 18097  01522E  0EF3               	movlw	-13
 18098  015230  50E3               	movf	plusw1,w,c
 18099  015232  5ADE               	subwfb	postinc2,f,c
 18100  015234  0EF4               	movlw	-12
 18101  015236  50E3               	movf	plusw1,w,c
 18102  015238  5ADE               	subwfb	postinc2,f,c
 18103  01523A  0EF5               	movlw	-11
 18104  01523C  50E3               	movf	plusw1,w,c
 18105  01523E  5ADE               	subwfb	postinc2,f,c
 18106  015240                     l6375:
 18107                           
 18108                           ;stkvar	_divisor @ sp[(-2)+-16]
 18109  015240  90D8               	bcf	status,0,c
 18110  015242  0EF5               	movlw	-11
 18111  015244  32E3               	rrcf	plusw1,f,c
 18112  015246  0EF4               	movlw	-12
 18113  015248  32E3               	rrcf	plusw1,f,c
 18114  01524A  0EF3               	movlw	-13
 18115  01524C  32E3               	rrcf	plusw1,f,c
 18116  01524E  0EF2               	movlw	-14
 18117  015250  32E3               	rrcf	plusw1,f,c
 18118  015252  0EF1               	movlw	-15
 18119  015254  32E3               	rrcf	plusw1,f,c
 18120  015256  0EF0               	movlw	-16
 18121  015258  32E3               	rrcf	plusw1,f,c
 18122  01525A  0EEF               	movlw	-17
 18123  01525C  32E3               	rrcf	plusw1,f,c
 18124  01525E  0EEE               	movlw	-18
 18125  015260  32E3               	rrcf	plusw1,f,c
 18126                           
 18127                           ;stkvar	_counter @ sp[(-2)+1]
 18128  015262  0EFF               	movlw	-1
 18129  015264  50E3               	movf	plusw1,w,c
 18130  015266  6E35               	movwf	btemp^0,c
 18131  015268  0E01               	movlw	1
 18132  01526A  5E35               	subwf	btemp^0,f,c
 18133  01526C  0EFF               	movlw	-1
 18134  01526E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18135  015274  A4D8               	btfss	status,2,c
 18136  015276  D7A4               	goto	u5320
 18137  015278                     u5340:
 18138                           
 18139                           ;stkvar	_sign @ sp[(-2)+0]
 18140  015278  0EFE               	movlw	-2
 18141  01527A  50E3               	movf	plusw1,w,c
 18142  01527C  B4D8               	btfsc	status,2,c
 18143  01527E  D025               	goto	u5360
 18144                           
 18145                           ;stkvar	_dividend @ sp[(-2)+-8]
 18146                           ;stkvar	_dividend @ sp[(-2)+-8]
 18147  015280  0EF6               	movlw	-10
 18148  015282  6CE3               	negf	plusw1,c
 18149  015284  0EF7               	movlw	-9
 18150  015286  1EE3               	comf	plusw1,f,c
 18151  015288  0EF8               	movlw	-8
 18152  01528A  1EE3               	comf	plusw1,f,c
 18153  01528C  0EF9               	movlw	-7
 18154  01528E  1EE3               	comf	plusw1,f,c
 18155  015290  0EFA               	movlw	-6
 18156  015292  1EE3               	comf	plusw1,f,c
 18157  015294  0EFB               	movlw	-5
 18158  015296  1EE3               	comf	plusw1,f,c
 18159  015298  0EFC               	movlw	-4
 18160  01529A  1EE3               	comf	plusw1,f,c
 18161  01529C  0EFD               	movlw	-3
 18162  01529E  1EE3               	comf	plusw1,f,c
 18163  0152A0  E314               	bnc	u5360
 18164  0152A2  0EF7               	movlw	-9
 18165  0152A4  2AE3               	incf	plusw1,f,c
 18166  0152A6  E311               	bnc	u5360
 18167  0152A8  0EF8               	movlw	-8
 18168  0152AA  2AE3               	incf	plusw1,f,c
 18169  0152AC  E30E               	bnc	u5360
 18170  0152AE  0EF9               	movlw	-7
 18171  0152B0  2AE3               	incf	plusw1,f,c
 18172  0152B2  E30B               	bnc	u5360
 18173  0152B4  0EFA               	movlw	-6
 18174  0152B6  2AE3               	incf	plusw1,f,c
 18175  0152B8  E308               	bnc	u5360
 18176  0152BA  0EFB               	movlw	-5
 18177  0152BC  2AE3               	incf	plusw1,f,c
 18178  0152BE  E305               	bnc	u5360
 18179  0152C0  0EFC               	movlw	-4
 18180  0152C2  2AE3               	incf	plusw1,f,c
 18181  0152C4  E302               	bnc	u5360
 18182  0152C6  0EFD               	movlw	-3
 18183  0152C8  2AE3               	incf	plusw1,f,c
 18184  0152CA                     u5360:
 18185                           
 18186                           ;stkvar	_dividend @ sp[(-2)+-8]
 18187  0152CA  0EF6               	movlw	246
 18188  0152CC  24E1               	addwf	fsr1l,w,c
 18189  0152CE  6ED9               	movwf	fsr2l,c
 18190  0152D0  0EFF               	movlw	255
 18191  0152D2  20E2               	addwfc	fsr1h,w,c
 18192  0152D4  6EDA               	movwf	fsr2h,c
 18193                           
 18194                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18195  0152D6  0E08               	movlw	8
 18196  0152D8  6E35               	movwf	btemp^0,c
 18197  0152DA  0EF6               	movlw	-10
 18198  0152DC                     us537999:
 18199  0152DC  006F FF7B FFE3     	movff	postinc2,plusw1
 18200  0152E2  28E8               	incf	wreg,w,c
 18201  0152E4  2E35               	decfsz	btemp^0,f,c
 18202  0152E6  D7FA               	bra	us537999
 18203                           
 18204                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18205  0152E8  52E5               	movf	postdec1,f,c
 18206  0152EA  52E5               	movf	postdec1,f,c
 18207  0152EC  0012               	return		;funcret
 18208  0152EE                     __end_of___aomod:
 18209                           	opt callstack 0
 18210                           
 18211 ;; *************** function ___aodiv *****************
 18212 ;; Defined at:
 18213 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18214 ;; Parameters:    Size  Location     Type
 18215 ;;  dividend        8  [STACK] long long 
 18216 ;;  divisor         8  [STACK] long long 
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;  quotient        8  [STACK] long long 
 18219 ;;  sign            1  [STACK] unsigned char 
 18220 ;;  counter         1  [STACK] unsigned char 
 18221 ;; Return value:  Size  Location     Type
 18222 ;;                  8  [STACK] long long 
 18223 ;; Registers used:
 18224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18225 ;; Tracked objects:
 18226 ;;		On entry : 0/1
 18227 ;;		On exit  : 0/0
 18228 ;;		Unchanged: 0/0
 18229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18234 ;;Total ram usage:        0 bytes
 18235 ;; Hardware stack levels used:    1
 18236 ;; Hardware stack levels required when called:    6
 18237 ;; This function calls:
 18238 ;;		Nothing
 18239 ;; This function is called by:
 18240 ;;		_dtoa
 18241 ;; This function uses a reentrant model
 18242 ;;
 18243                           
 18244                           	psect	text60
 18245  014BBA                     __ptext60:
 18246                           	opt callstack 0
 18247  014BBA                     ___aodiv:
 18248                           	opt callstack 0
 18249                           
 18250                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18251  014BBA  0E0A               	movlw	10
 18252  014BBC  26E1               	addwf	fsr1l,f,c
 18253  014BBE  0E00               	movlw	0
 18254  014BC0  22E2               	addwfc	fsr1h,f,c
 18255                           
 18256                           ;stkvar	_sign @ sp[(-10)+8]
 18257                           
 18258                           ;incstack = 0
 18259  014BC2  0EFE               	movlw	-2
 18260  014BC4  6AE3               	clrf	plusw1,c
 18261                           
 18262                           ;stkvar	_divisor @ sp[(-10)+-16]
 18263  014BC6  0EED               	movlw	-19
 18264  014BC8  AEE3               	btfss	plusw1,7,c
 18265  014BCA  D028               	goto	l6315
 18266                           
 18267                           ;stkvar	_divisor @ sp[(-10)+-16]
 18268                           ;stkvar	_divisor @ sp[(-10)+-16]
 18269  014BCC  0EE6               	movlw	-26
 18270  014BCE  6CE3               	negf	plusw1,c
 18271  014BD0  0EE7               	movlw	-25
 18272  014BD2  1EE3               	comf	plusw1,f,c
 18273  014BD4  0EE8               	movlw	-24
 18274  014BD6  1EE3               	comf	plusw1,f,c
 18275  014BD8  0EE9               	movlw	-23
 18276  014BDA  1EE3               	comf	plusw1,f,c
 18277  014BDC  0EEA               	movlw	-22
 18278  014BDE  1EE3               	comf	plusw1,f,c
 18279  014BE0  0EEB               	movlw	-21
 18280  014BE2  1EE3               	comf	plusw1,f,c
 18281  014BE4  0EEC               	movlw	-20
 18282  014BE6  1EE3               	comf	plusw1,f,c
 18283  014BE8  0EED               	movlw	-19
 18284  014BEA  1EE3               	comf	plusw1,f,c
 18285  014BEC  E314               	bnc	u5160
 18286  014BEE  0EE7               	movlw	-25
 18287  014BF0  2AE3               	incf	plusw1,f,c
 18288  014BF2  E311               	bnc	u5160
 18289  014BF4  0EE8               	movlw	-24
 18290  014BF6  2AE3               	incf	plusw1,f,c
 18291  014BF8  E30E               	bnc	u5160
 18292  014BFA  0EE9               	movlw	-23
 18293  014BFC  2AE3               	incf	plusw1,f,c
 18294  014BFE  E30B               	bnc	u5160
 18295  014C00  0EEA               	movlw	-22
 18296  014C02  2AE3               	incf	plusw1,f,c
 18297  014C04  E308               	bnc	u5160
 18298  014C06  0EEB               	movlw	-21
 18299  014C08  2AE3               	incf	plusw1,f,c
 18300  014C0A  E305               	bnc	u5160
 18301  014C0C  0EEC               	movlw	-20
 18302  014C0E  2AE3               	incf	plusw1,f,c
 18303  014C10  E302               	bnc	u5160
 18304  014C12  0EED               	movlw	-19
 18305  014C14  2AE3               	incf	plusw1,f,c
 18306  014C16                     u5160:
 18307                           
 18308                           ;stkvar	_sign @ sp[(-10)+8]
 18309  014C16  0EFE               	movlw	-2
 18310  014C18  6AE3               	clrf	plusw1,c
 18311  014C1A  2AE3               	incf	plusw1,f,c
 18312  014C1C                     l6315:
 18313                           
 18314                           ;stkvar	_dividend @ sp[(-10)+-8]
 18315  014C1C  0EF5               	movlw	-11
 18316  014C1E  AEE3               	btfss	plusw1,7,c
 18317  014C20  D027               	goto	l6321
 18318                           
 18319                           ;stkvar	_dividend @ sp[(-10)+-8]
 18320                           ;stkvar	_dividend @ sp[(-10)+-8]
 18321  014C22  0EEE               	movlw	-18
 18322  014C24  6CE3               	negf	plusw1,c
 18323  014C26  0EEF               	movlw	-17
 18324  014C28  1EE3               	comf	plusw1,f,c
 18325  014C2A  0EF0               	movlw	-16
 18326  014C2C  1EE3               	comf	plusw1,f,c
 18327  014C2E  0EF1               	movlw	-15
 18328  014C30  1EE3               	comf	plusw1,f,c
 18329  014C32  0EF2               	movlw	-14
 18330  014C34  1EE3               	comf	plusw1,f,c
 18331  014C36  0EF3               	movlw	-13
 18332  014C38  1EE3               	comf	plusw1,f,c
 18333  014C3A  0EF4               	movlw	-12
 18334  014C3C  1EE3               	comf	plusw1,f,c
 18335  014C3E  0EF5               	movlw	-11
 18336  014C40  1EE3               	comf	plusw1,f,c
 18337  014C42  E314               	bnc	u5180
 18338  014C44  0EEF               	movlw	-17
 18339  014C46  2AE3               	incf	plusw1,f,c
 18340  014C48  E311               	bnc	u5180
 18341  014C4A  0EF0               	movlw	-16
 18342  014C4C  2AE3               	incf	plusw1,f,c
 18343  014C4E  E30E               	bnc	u5180
 18344  014C50  0EF1               	movlw	-15
 18345  014C52  2AE3               	incf	plusw1,f,c
 18346  014C54  E30B               	bnc	u5180
 18347  014C56  0EF2               	movlw	-14
 18348  014C58  2AE3               	incf	plusw1,f,c
 18349  014C5A  E308               	bnc	u5180
 18350  014C5C  0EF3               	movlw	-13
 18351  014C5E  2AE3               	incf	plusw1,f,c
 18352  014C60  E305               	bnc	u5180
 18353  014C62  0EF4               	movlw	-12
 18354  014C64  2AE3               	incf	plusw1,f,c
 18355  014C66  E302               	bnc	u5180
 18356  014C68  0EF5               	movlw	-11
 18357  014C6A  2AE3               	incf	plusw1,f,c
 18358  014C6C                     u5180:
 18359                           
 18360                           ;stkvar	_sign @ sp[(-10)+8]
 18361  014C6C  0EFE               	movlw	-2
 18362  014C6E  70E3               	btg	plusw1,0,c
 18363  014C70                     l6321:
 18364                           
 18365                           ;stkvar	_quotient @ sp[(-10)+0]
 18366  014C70  0E07               	movlw	7
 18367  014C72  6E35               	movwf	btemp^0,c
 18368  014C74  0EF6               	movlw	-10
 18369  014C76                     u5191:
 18370  014C76  6AE3               	clrf	plusw1,c
 18371  014C78  2AE8               	incf	wreg,f,c
 18372  014C7A  0635               	decf	btemp^0,f,c
 18373  014C7C  E2FC               	bc	u5191
 18374                           
 18375                           ;stkvar	_divisor @ sp[(-10)+-16]
 18376  014C7E  0EE6               	movlw	-26
 18377  014C80  50E3               	movf	plusw1,w,c
 18378  014C82  E116               	bnz	u5200
 18379  014C84  0EE7               	movlw	-25
 18380  014C86  50E3               	movf	plusw1,w,c
 18381  014C88  E113               	bnz	u5200
 18382  014C8A  0EE8               	movlw	-24
 18383  014C8C  50E3               	movf	plusw1,w,c
 18384  014C8E  E110               	bnz	u5200
 18385  014C90  0EE9               	movlw	-23
 18386  014C92  50E3               	movf	plusw1,w,c
 18387  014C94  E10D               	bnz	u5200
 18388  014C96  0EEA               	movlw	-22
 18389  014C98  50E3               	movf	plusw1,w,c
 18390  014C9A  E10A               	bnz	u5200
 18391  014C9C  0EEB               	movlw	-21
 18392  014C9E  50E3               	movf	plusw1,w,c
 18393  014CA0  E107               	bnz	u5200
 18394  014CA2  0EEC               	movlw	-20
 18395  014CA4  50E3               	movf	plusw1,w,c
 18396  014CA6  E104               	bnz	u5200
 18397  014CA8  0EED               	movlw	-19
 18398  014CAA  50E3               	movf	plusw1,w,c
 18399  014CAC  B4D8               	btfsc	status,2,c
 18400  014CAE  D088               	goto	u5230
 18401  014CB0                     u5200:
 18402                           
 18403                           ;stkvar	_counter @ sp[(-10)+9]
 18404  014CB0  0EFF               	movlw	-1
 18405  014CB2  6AE3               	clrf	plusw1,c
 18406  014CB4  D012               	goto	L17
 18407  014CB6                     l6327:
 18408                           
 18409                           ;stkvar	_divisor @ sp[(-10)+-16]
 18410  014CB6  90D8               	bcf	status,0,c
 18411  014CB8  0EE6               	movlw	-26
 18412  014CBA  36E3               	rlcf	plusw1,f,c
 18413  014CBC  0EE7               	movlw	-25
 18414  014CBE  36E3               	rlcf	plusw1,f,c
 18415  014CC0  0EE8               	movlw	-24
 18416  014CC2  36E3               	rlcf	plusw1,f,c
 18417  014CC4  0EE9               	movlw	-23
 18418  014CC6  36E3               	rlcf	plusw1,f,c
 18419  014CC8  0EEA               	movlw	-22
 18420  014CCA  36E3               	rlcf	plusw1,f,c
 18421  014CCC  0EEB               	movlw	-21
 18422  014CCE  36E3               	rlcf	plusw1,f,c
 18423  014CD0  0EEC               	movlw	-20
 18424  014CD2  36E3               	rlcf	plusw1,f,c
 18425  014CD4  0EED               	movlw	-19
 18426  014CD6  36E3               	rlcf	plusw1,f,c
 18427                           
 18428                           ;stkvar	_counter @ sp[(-10)+9]
 18429  014CD8  0EFF               	movlw	-1
 18430  014CDA                     L17:
 18431  014CDA  2AE3               	incf	plusw1,f,c
 18432                           
 18433                           ;stkvar	_divisor @ sp[(-10)+-16]
 18434  014CDC  0EED               	movlw	-19
 18435  014CDE  AEE3               	btfss	plusw1,7,c
 18436  014CE0  D7EA               	goto	l6327
 18437  014CE2                     u5210:
 18438                           
 18439                           ;stkvar	_quotient @ sp[(-10)+0]
 18440  014CE2  90D8               	bcf	status,0,c
 18441  014CE4  0EF6               	movlw	-10
 18442  014CE6  36E3               	rlcf	plusw1,f,c
 18443  014CE8  0EF7               	movlw	-9
 18444  014CEA  36E3               	rlcf	plusw1,f,c
 18445  014CEC  0EF8               	movlw	-8
 18446  014CEE  36E3               	rlcf	plusw1,f,c
 18447  014CF0  0EF9               	movlw	-7
 18448  014CF2  36E3               	rlcf	plusw1,f,c
 18449  014CF4  0EFA               	movlw	-6
 18450  014CF6  36E3               	rlcf	plusw1,f,c
 18451  014CF8  0EFB               	movlw	-5
 18452  014CFA  36E3               	rlcf	plusw1,f,c
 18453  014CFC  0EFC               	movlw	-4
 18454  014CFE  36E3               	rlcf	plusw1,f,c
 18455  014D00  0EFD               	movlw	-3
 18456  014D02  36E3               	rlcf	plusw1,f,c
 18457                           
 18458                           ;stkvar	_divisor @ sp[(-10)+-16]
 18459                           ;stkvar	_dividend @ sp[(-10)+-8]
 18460  014D04  50E1               	movf	fsr1l,w,c
 18461  014D06  0FEE               	addlw	-18
 18462  014D08  6ED9               	movwf	fsr2l,c
 18463  014D0A  50E2               	movf	fsr1h,w,c
 18464  014D0C  6EDA               	movwf	fsr2h,c
 18465  014D0E  0EFF               	movlw	255
 18466  014D10  22DA               	addwfc	fsr2h,f,c
 18467  014D12  0EE6               	movlw	-26
 18468  014D14  50E3               	movf	plusw1,w,c
 18469  014D16  5CDE               	subwf	postinc2,w,c
 18470  014D18  0EE7               	movlw	-25
 18471  014D1A  50E3               	movf	plusw1,w,c
 18472  014D1C  58DE               	subwfb	postinc2,w,c
 18473  014D1E  0EE8               	movlw	-24
 18474  014D20  50E3               	movf	plusw1,w,c
 18475  014D22  58DE               	subwfb	postinc2,w,c
 18476  014D24  0EE9               	movlw	-23
 18477  014D26  50E3               	movf	plusw1,w,c
 18478  014D28  58DE               	subwfb	postinc2,w,c
 18479  014D2A  0EEA               	movlw	-22
 18480  014D2C  50E3               	movf	plusw1,w,c
 18481  014D2E  58DE               	subwfb	postinc2,w,c
 18482  014D30  0EEB               	movlw	-21
 18483  014D32  50E3               	movf	plusw1,w,c
 18484  014D34  58DE               	subwfb	postinc2,w,c
 18485  014D36  0EEC               	movlw	-20
 18486  014D38  50E3               	movf	plusw1,w,c
 18487  014D3A  58DE               	subwfb	postinc2,w,c
 18488  014D3C  0EED               	movlw	-19
 18489  014D3E  50E3               	movf	plusw1,w,c
 18490  014D40  58DE               	subwfb	postinc2,w,c
 18491  014D42  A0D8               	btfss	status,0,c
 18492  014D44  D021               	goto	l6339
 18493                           
 18494                           ;stkvar	_divisor @ sp[(-10)+-16]
 18495                           ;stkvar	_dividend @ sp[(-10)+-8]
 18496  014D46  50E1               	movf	fsr1l,w,c
 18497  014D48  0FEE               	addlw	-18
 18498  014D4A  6ED9               	movwf	fsr2l,c
 18499  014D4C  50E2               	movf	fsr1h,w,c
 18500  014D4E  6EDA               	movwf	fsr2h,c
 18501  014D50  0EFF               	movlw	255
 18502  014D52  22DA               	addwfc	fsr2h,f,c
 18503  014D54  0EE6               	movlw	-26
 18504  014D56  50E3               	movf	plusw1,w,c
 18505  014D58  5EDE               	subwf	postinc2,f,c
 18506  014D5A  0EE7               	movlw	-25
 18507  014D5C  50E3               	movf	plusw1,w,c
 18508  014D5E  5ADE               	subwfb	postinc2,f,c
 18509  014D60  0EE8               	movlw	-24
 18510  014D62  50E3               	movf	plusw1,w,c
 18511  014D64  5ADE               	subwfb	postinc2,f,c
 18512  014D66  0EE9               	movlw	-23
 18513  014D68  50E3               	movf	plusw1,w,c
 18514  014D6A  5ADE               	subwfb	postinc2,f,c
 18515  014D6C  0EEA               	movlw	-22
 18516  014D6E  50E3               	movf	plusw1,w,c
 18517  014D70  5ADE               	subwfb	postinc2,f,c
 18518  014D72  0EEB               	movlw	-21
 18519  014D74  50E3               	movf	plusw1,w,c
 18520  014D76  5ADE               	subwfb	postinc2,f,c
 18521  014D78  0EEC               	movlw	-20
 18522  014D7A  50E3               	movf	plusw1,w,c
 18523  014D7C  5ADE               	subwfb	postinc2,f,c
 18524  014D7E  0EED               	movlw	-19
 18525  014D80  50E3               	movf	plusw1,w,c
 18526  014D82  5ADE               	subwfb	postinc2,f,c
 18527                           
 18528                           ;stkvar	_quotient @ sp[(-10)+0]
 18529  014D84  0EF6               	movlw	-10
 18530  014D86  80E3               	bsf	plusw1,0,c
 18531  014D88                     l6339:
 18532                           
 18533                           ;stkvar	_divisor @ sp[(-10)+-16]
 18534  014D88  90D8               	bcf	status,0,c
 18535  014D8A  0EED               	movlw	-19
 18536  014D8C  32E3               	rrcf	plusw1,f,c
 18537  014D8E  0EEC               	movlw	-20
 18538  014D90  32E3               	rrcf	plusw1,f,c
 18539  014D92  0EEB               	movlw	-21
 18540  014D94  32E3               	rrcf	plusw1,f,c
 18541  014D96  0EEA               	movlw	-22
 18542  014D98  32E3               	rrcf	plusw1,f,c
 18543  014D9A  0EE9               	movlw	-23
 18544  014D9C  32E3               	rrcf	plusw1,f,c
 18545  014D9E  0EE8               	movlw	-24
 18546  014DA0  32E3               	rrcf	plusw1,f,c
 18547  014DA2  0EE7               	movlw	-25
 18548  014DA4  32E3               	rrcf	plusw1,f,c
 18549  014DA6  0EE6               	movlw	-26
 18550  014DA8  32E3               	rrcf	plusw1,f,c
 18551                           
 18552                           ;stkvar	_counter @ sp[(-10)+9]
 18553  014DAA  0EFF               	movlw	-1
 18554  014DAC  50E3               	movf	plusw1,w,c
 18555  014DAE  6E35               	movwf	btemp^0,c
 18556  014DB0  0E01               	movlw	1
 18557  014DB2  5E35               	subwf	btemp^0,f,c
 18558  014DB4  0EFF               	movlw	-1
 18559  014DB6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18560  014DBC  A4D8               	btfss	status,2,c
 18561  014DBE  D791               	goto	u5210
 18562  014DC0                     u5230:
 18563                           
 18564                           ;stkvar	_sign @ sp[(-10)+8]
 18565  014DC0  0EFE               	movlw	-2
 18566  014DC2  50E3               	movf	plusw1,w,c
 18567  014DC4  B4D8               	btfsc	status,2,c
 18568  014DC6  D025               	goto	u5250
 18569                           
 18570                           ;stkvar	_quotient @ sp[(-10)+0]
 18571                           ;stkvar	_quotient @ sp[(-10)+0]
 18572  014DC8  0EF6               	movlw	-10
 18573  014DCA  6CE3               	negf	plusw1,c
 18574  014DCC  0EF7               	movlw	-9
 18575  014DCE  1EE3               	comf	plusw1,f,c
 18576  014DD0  0EF8               	movlw	-8
 18577  014DD2  1EE3               	comf	plusw1,f,c
 18578  014DD4  0EF9               	movlw	-7
 18579  014DD6  1EE3               	comf	plusw1,f,c
 18580  014DD8  0EFA               	movlw	-6
 18581  014DDA  1EE3               	comf	plusw1,f,c
 18582  014DDC  0EFB               	movlw	-5
 18583  014DDE  1EE3               	comf	plusw1,f,c
 18584  014DE0  0EFC               	movlw	-4
 18585  014DE2  1EE3               	comf	plusw1,f,c
 18586  014DE4  0EFD               	movlw	-3
 18587  014DE6  1EE3               	comf	plusw1,f,c
 18588  014DE8  E314               	bnc	u5250
 18589  014DEA  0EF7               	movlw	-9
 18590  014DEC  2AE3               	incf	plusw1,f,c
 18591  014DEE  E311               	bnc	u5250
 18592  014DF0  0EF8               	movlw	-8
 18593  014DF2  2AE3               	incf	plusw1,f,c
 18594  014DF4  E30E               	bnc	u5250
 18595  014DF6  0EF9               	movlw	-7
 18596  014DF8  2AE3               	incf	plusw1,f,c
 18597  014DFA  E30B               	bnc	u5250
 18598  014DFC  0EFA               	movlw	-6
 18599  014DFE  2AE3               	incf	plusw1,f,c
 18600  014E00  E308               	bnc	u5250
 18601  014E02  0EFB               	movlw	-5
 18602  014E04  2AE3               	incf	plusw1,f,c
 18603  014E06  E305               	bnc	u5250
 18604  014E08  0EFC               	movlw	-4
 18605  014E0A  2AE3               	incf	plusw1,f,c
 18606  014E0C  E302               	bnc	u5250
 18607  014E0E  0EFD               	movlw	-3
 18608  014E10  2AE3               	incf	plusw1,f,c
 18609  014E12                     u5250:
 18610                           
 18611                           ;stkvar	_quotient @ sp[(-10)+0]
 18612  014E12  0EF6               	movlw	246
 18613  014E14  24E1               	addwf	fsr1l,w,c
 18614  014E16  6ED9               	movwf	fsr2l,c
 18615  014E18  0EFF               	movlw	255
 18616  014E1A  20E2               	addwfc	fsr1h,w,c
 18617  014E1C  6EDA               	movwf	fsr2h,c
 18618                           
 18619                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18620  014E1E  0E08               	movlw	8
 18621  014E20  6E35               	movwf	btemp^0,c
 18622  014E22  0EEE               	movlw	-18
 18623  014E24                     us526999:
 18624  014E24  006F FF7B FFE3     	movff	postinc2,plusw1
 18625  014E2A  28E8               	incf	wreg,w,c
 18626  014E2C  2E35               	decfsz	btemp^0,f,c
 18627  014E2E  D7FA               	bra	us526999
 18628                           
 18629                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18630  014E30  0EF6               	movlw	246
 18631  014E32  26E1               	addwf	fsr1l,f,c
 18632  014E34  0EFF               	movlw	255
 18633  014E36  22E2               	addwfc	fsr1h,f,c
 18634  014E38  0012               	return		;funcret
 18635  014E3A                     __end_of___aodiv:
 18636                           	opt callstack 0
 18637                           
 18638 ;; *************** function _ctoa *****************
 18639 ;; Defined at:
 18640 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18643 ;;		 -> f(6), NULL(0), 
 18644 ;;  c               1  [STACK] unsigned char 
 18645 ;; Auto vars:     Size  Location     Type
 18646 ;;  w               2  [STACK] int 
 18647 ;;  l               2    0        int 
 18648 ;; Return value:  Size  Location     Type
 18649 ;;                  2  [STACK] int 
 18650 ;; Registers used:
 18651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18652 ;; Tracked objects:
 18653 ;;		On entry : 0/4
 18654 ;;		On exit  : 0/0
 18655 ;;		Unchanged: 0/0
 18656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18661 ;;Total ram usage:        0 bytes
 18662 ;; Hardware stack levels used:    1
 18663 ;; Hardware stack levels required when called:   11
 18664 ;; This function calls:
 18665 ;;		_pad
 18666 ;; This function is called by:
 18667 ;;		_vfpfcnvrt
 18668 ;; This function uses a reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text61
 18672  016FB8                     __ptext61:
 18673                           	opt callstack 0
 18674  016FB8                     _ctoa:
 18675                           	opt callstack 0
 18676                           
 18677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18678  016FB8  52E6               	movf	postinc1,f,c
 18679  016FBA  52E6               	movf	postinc1,f,c
 18680                           
 18681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18682                           
 18683                           ;incstack = 0
 18684  016FBC  501E               	movf	_width^0,w,c
 18685  016FBE  101F               	iorwf	(_width+1)^0,w,c
 18686  016FC0  A4D8               	btfss	status,2,c
 18687  016FC2  D009               	goto	l8975
 18688                           
 18689                           ;stkvar	_w @ sp[(-2)+0]
 18690  016FC4  0EFE               	movlw	-2
 18691  016FC6  0060  F07B  FFE3   	movff	_width,plusw1
 18692  016FCC  0EFF               	movlw	-1
 18693  016FCE  0060  F07F  FFE3   	movff	_width+1,plusw1
 18694  016FD4  D016               	goto	l8977
 18695  016FD6                     l8975:
 18696  016FD6  0EFF               	movlw	255
 18697  016FD8  6E3F               	movwf	(btemp+10)^0,c
 18698  016FDA  0EFF               	movlw	255
 18699  016FDC  6E40               	movwf	(btemp+11)^0,c
 18700  016FDE  0060  F078  F03D   	movff	_width,btemp+8
 18701  016FE4  0060  F07C  F03E   	movff	_width+1,btemp+9
 18702  016FEA  503F               	movf	(btemp+10)^0,w,c
 18703  016FEC  263D               	addwf	(btemp+8)^0,f,c
 18704  016FEE  5040               	movf	(btemp+11)^0,w,c
 18705  016FF0  223E               	addwfc	(btemp+9)^0,f,c
 18706                           
 18707                           ;stkvar	_w @ sp[(-2)+0]
 18708  016FF2  0EFE               	movlw	-2
 18709  016FF4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18710  016FFA  0EFF               	movlw	-1
 18711  016FFC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18712  017002                     l8977:
 18713                           
 18714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18715                           ;stkvar	_c @ sp[(-2)+-3]
 18716  017002  0EFB               	movlw	-5
 18717  017004  006F FF8C  F1AB    	movff	plusw1,_dbuf
 18718                           
 18719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18720  01700A  0101               	movlb	1	; () banked
 18721  01700C  6BAC               	clrf	(_dbuf+1)& (0+255),b
 18722                           
 18723                           ; BSR set to: 1
 18724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18725                           ;stkvar	_w @ sp[(-2)+0]
 18726  01700E  0EFE               	movlw	-2
 18727  017010  006F FF8F FFE6     	movff	plusw1,postinc1
 18728  017016  006F FF8F FFE6     	movff	plusw1,postinc1
 18729  01701C  0EAB               	movlw	low _dbuf
 18730  01701E  6EE6               	movwf	postinc1,c
 18731  017020  0E01               	movlw	high _dbuf
 18732  017022  6EE6               	movwf	postinc1,c
 18733                           
 18734                           ;stkvar	_fp @ sp[(-6)+-2]
 18735  017024  0EF8               	movlw	-8
 18736  017026  006F FF8F FFE6     	movff	plusw1,postinc1
 18737  01702C  006F FF8F FFE6     	movff	plusw1,postinc1
 18738  017032  ECD7  F0B1         	call	_pad	;wreg free
 18739                           
 18740                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18741  017036  0EFB               	movlw	251
 18742  017038  26E1               	addwf	fsr1l,f,c
 18743  01703A  0EFF               	movlw	255
 18744  01703C  22E2               	addwfc	fsr1h,f,c
 18745  01703E  0012               	return		;funcret
 18746  017040                     __end_of_ctoa:
 18747                           	opt callstack 0
 18748                           
 18749 ;; *************** function _pad *****************
 18750 ;; Defined at:
 18751 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18754 ;;		 -> f(6), NULL(0), 
 18755 ;;  buf             2  [STACK] PTR unsigned char 
 18756 ;;		 -> dbuf(80), 
 18757 ;;  p               2  [STACK] int 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  w               2  [STACK] int 
 18760 ;;  i               2  [STACK] int 
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  2  [STACK] int 
 18763 ;; Registers used:
 18764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18765 ;; Tracked objects:
 18766 ;;		On entry : 0/1
 18767 ;;		On exit  : 0/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18774 ;;Total ram usage:        0 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:   10
 18777 ;; This function calls:
 18778 ;;		_fputc
 18779 ;;		_fputs
 18780 ;;		_strlen
 18781 ;; This function is called by:
 18782 ;;		_ctoa
 18783 ;;		_dtoa
 18784 ;;		_efgtoa
 18785 ;;		_xtoa
 18786 ;; This function uses a reentrant model
 18787 ;;
 18788                           
 18789                           	psect	text62
 18790  0163AE                     __ptext62:
 18791                           	opt callstack 0
 18792  0163AE                     _pad:
 18793                           	opt callstack 0
 18794                           
 18795                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18796  0163AE  52E6               	movf	postinc1,f,c
 18797  0163B0  52E6               	movf	postinc1,f,c
 18798  0163B2  52E6               	movf	postinc1,f,c
 18799  0163B4  52E6               	movf	postinc1,f,c
 18800                           
 18801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18802                           
 18803                           ;incstack = 0
 18804  0163B6  A022               	btfss	_flags^0,0,c
 18805  0163B8  D010               	goto	l8949
 18806                           
 18807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18808                           ;stkvar	_fp @ sp[(-4)+-2]
 18809  0163BA  0EFA               	movlw	-6
 18810  0163BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18811  0163C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18812                           
 18813                           ;stkvar	_buf @ sp[(-6)+-4]
 18814  0163C8  0EF6               	movlw	-10
 18815  0163CA  006F FF8F FFE6     	movff	plusw1,postinc1
 18816  0163D0  006F FF8F FFE6     	movff	plusw1,postinc1
 18817  0163D6  ECB4  F0B6         	call	_fputs	;wreg free
 18818  0163DA                     l8949:
 18819                           
 18820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18821                           ;stkvar	_p @ sp[(-4)+-6]
 18822  0163DA  0EF7               	movlw	-9
 18823  0163DC  BEE3               	btfsc	plusw1,7,c
 18824  0163DE  D011               	goto	l8953
 18825                           
 18826                           ;stkvar	_p @ sp[(-4)+-6]
 18827                           ;stkvar	_w @ sp[(-4)+0]
 18828  0163E0  0EF6               	movlw	-10
 18829  0163E2  006F FF8C  F035    	movff	plusw1,btemp
 18830  0163E8  0EFC               	movlw	-4
 18831  0163EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18832  0163F0  0EF7               	movlw	-9
 18833  0163F2  006F FF8C  F035    	movff	plusw1,btemp
 18834  0163F8  0EFD               	movlw	-3
 18835  0163FA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18836  016400  D004               	goto	l1740
 18837  016402                     l8953:
 18838                           
 18839                           ;stkvar	_w @ sp[(-4)+0]
 18840  016402  0EFC               	movlw	-4
 18841  016404  6AE3               	clrf	plusw1,c
 18842  016406  0EFD               	movlw	-3
 18843  016408  6AE3               	clrf	plusw1,c
 18844  01640A                     l1740:
 18845                           
 18846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18847                           ;stkvar	_i @ sp[(-4)+2]
 18848  01640A  0EFE               	movlw	-2
 18849  01640C  6AE3               	clrf	plusw1,c
 18850  01640E  0EFF               	movlw	-1
 18851  016410  6AE3               	clrf	plusw1,c
 18852                           
 18853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18854  016412  D01E               	goto	l8959
 18855  016414                     l8955:
 18856                           
 18857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18858                           ;stkvar	_fp @ sp[(-4)+-2]
 18859  016414  0EFA               	movlw	-6
 18860  016416  006F FF8F FFE6     	movff	plusw1,postinc1
 18861  01641C  006F FF8F FFE6     	movff	plusw1,postinc1
 18862  016422  0E20               	movlw	32
 18863  016424  6EE6               	movwf	postinc1,c
 18864  016426  0E00               	movlw	0
 18865  016428  6EE6               	movwf	postinc1,c
 18866  01642A  ECB9  F0B0         	call	_fputc	;wreg free
 18867                           
 18868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18869                           ;stkvar	_i @ sp[(-4)+2]
 18870  01642E  0EFE               	movlw	-2
 18871  016430  50E3               	movf	plusw1,w,c
 18872  016432  0F01               	addlw	1
 18873  016434  6E35               	movwf	btemp^0,c
 18874  016436  0EFE               	movlw	-2
 18875  016438  0060  F0D7  FFE3   	movff	btemp,plusw1
 18876  01643E  6A35               	clrf	btemp^0,c
 18877  016440  0EFF               	movlw	-1
 18878  016442  50E3               	movf	plusw1,w,c
 18879  016444  2035               	addwfc	btemp^0,w,c
 18880  016446  6E35               	movwf	btemp^0,c
 18881  016448  0EFF               	movlw	-1
 18882  01644A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18883  016450                     l8959:
 18884                           
 18885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18886                           ;stkvar	_w @ sp[(-4)+0]
 18887                           ;stkvar	_i @ sp[(-4)+2]
 18888  016450  50E1               	movf	fsr1l,w,c
 18889  016452  0FFE               	addlw	-2
 18890  016454  6ED9               	movwf	fsr2l,c
 18891  016456  50E2               	movf	fsr1h,w,c
 18892  016458  6EDA               	movwf	fsr2h,c
 18893  01645A  0EFF               	movlw	255
 18894  01645C  22DA               	addwfc	fsr2h,f,c
 18895  01645E  0EFC               	movlw	-4
 18896  016460  50E3               	movf	plusw1,w,c
 18897  016462  5CDE               	subwf	postinc2,w,c
 18898  016464  50DE               	movf	postinc2,w,c
 18899  016466  0A80               	xorlw	128
 18900  016468  6E35               	movwf	btemp^0,c
 18901  01646A  0EFD               	movlw	-3
 18902  01646C  50E3               	movf	plusw1,w,c
 18903  01646E  0A80               	xorlw	128
 18904  016470  5835               	subwfb	btemp^0,w,c
 18905  016472  A0D8               	btfss	status,0,c
 18906  016474  D7CF               	goto	l8955
 18907                           
 18908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18909  016476  B022               	btfsc	_flags^0,0,c
 18910  016478  D010               	goto	l8963
 18911                           
 18912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18913                           ;stkvar	_fp @ sp[(-4)+-2]
 18914  01647A  0EFA               	movlw	-6
 18915  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 18916  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 18917                           
 18918                           ;stkvar	_buf @ sp[(-6)+-4]
 18919  016488  0EF6               	movlw	-10
 18920  01648A  006F FF8F FFE6     	movff	plusw1,postinc1
 18921  016490  006F FF8F FFE6     	movff	plusw1,postinc1
 18922  016496  ECB4  F0B6         	call	_fputs	;wreg free
 18923  01649A                     l8963:
 18924                           
 18925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18926                           ;stkvar	_w @ sp[(-4)+0]
 18927                           ;stkvar	_buf @ sp[(-4)+-4]
 18928  01649A  0EF8               	movlw	-8
 18929  01649C  006F FF8F FFE6     	movff	plusw1,postinc1
 18930  0164A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18931  0164A8  EC63  F0B6         	call	_strlen	;wreg free
 18932  0164AC  0EFC               	movlw	-4
 18933  0164AE  50E3               	movf	plusw1,w,c
 18934  0164B0  2635               	addwf	btemp^0,f,c
 18935  0164B2  0EFD               	movlw	-3
 18936  0164B4  50E3               	movf	plusw1,w,c
 18937  0164B6  2236               	addwfc	(btemp+1)^0,f,c
 18938                           
 18939                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18940  0164B8  0EF6               	movlw	246
 18941  0164BA  26E1               	addwf	fsr1l,f,c
 18942  0164BC  0EFF               	movlw	255
 18943  0164BE  22E2               	addwfc	fsr1h,f,c
 18944  0164C0  0012               	return		;funcret
 18945  0164C2                     __end_of_pad:
 18946                           	opt callstack 0
 18947                           
 18948 ;; *************** function _strlen *****************
 18949 ;; Defined at:
 18950 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;  s               2  [STACK] PTR const unsigned char 
 18953 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18954 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18955 ;;		 -> T(144), STR_7(4), STR_3(4), V(171), 
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;  a               2  [STACK] PTR const unsigned char 
 18958 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18959 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18960 ;;		 -> T(144), STR_7(4), STR_3(4), V(171), 
 18961 ;; Return value:  Size  Location     Type
 18962 ;;                  2  [STACK] unsigned int 
 18963 ;; Registers used:
 18964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18965 ;; Tracked objects:
 18966 ;;		On entry : 0/0
 18967 ;;		On exit  : 0/0
 18968 ;;		Unchanged: 0/0
 18969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18974 ;;Total ram usage:        0 bytes
 18975 ;; Hardware stack levels used:    1
 18976 ;; Hardware stack levels required when called:    6
 18977 ;; This function calls:
 18978 ;;		Nothing
 18979 ;; This function is called by:
 18980 ;;		_eaDogM_WriteString
 18981 ;;		_pad
 18982 ;;		_stoa
 18983 ;; This function uses a reentrant model
 18984 ;;
 18985                           
 18986                           	psect	text63
 18987  016CC6                     __ptext63:
 18988                           	opt callstack 0
 18989  016CC6                     _strlen:
 18990                           	opt callstack 0
 18991                           
 18992                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18993  016CC6  52E6               	movf	postinc1,f,c
 18994  016CC8  52E6               	movf	postinc1,f,c
 18995                           
 18996                           ;stkvar	_s @ sp[(-2)+-2]
 18997                           
 18998                           ;incstack = 0
 18999  016CCA  0EFC               	movlw	-4
 19000  016CCC  006F FF8C  F03F    	movff	plusw1,btemp+10
 19001  016CD2  0EFD               	movlw	-3
 19002  016CD4  006F FF8C  F040    	movff	plusw1,btemp+11
 19003                           
 19004                           ;stkvar	_a @ sp[(-2)+0]
 19005  016CDA  0EFF               	movlw	-1
 19006  016CDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19007  016CE2  0EFE               	movlw	-2
 19008  016CE4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19009  016CEA  D011               	goto	l5933
 19010  016CEC                     l5931:
 19011                           
 19012                           ;stkvar	_s @ sp[(-2)+-2]
 19013  016CEC  0EFC               	movlw	-4
 19014  016CEE  50E3               	movf	plusw1,w,c
 19015  016CF0  0F01               	addlw	1
 19016  016CF2  6E35               	movwf	btemp^0,c
 19017  016CF4  0EFC               	movlw	-4
 19018  016CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19019  016CFC  6A35               	clrf	btemp^0,c
 19020  016CFE  0EFD               	movlw	-3
 19021  016D00  50E3               	movf	plusw1,w,c
 19022  016D02  2035               	addwfc	btemp^0,w,c
 19023  016D04  6E35               	movwf	btemp^0,c
 19024  016D06  0EFD               	movlw	-3
 19025  016D08  0060  F0D7  FFE3   	movff	btemp,plusw1
 19026  016D0E                     l5933:
 19027                           
 19028                           ;stkvar	_s @ sp[(-2)+-2]
 19029  016D0E  0EFC               	movlw	-4
 19030  016D10  006F FF8F FFF6     	movff	plusw1,tblptrl
 19031  016D16  0EFD               	movlw	-3
 19032  016D18  006F FF8F FFF7     	movff	plusw1,tblptrh
 19033  016D1E  0E00               	movlw	low (__mediumconst shr (0+16))
 19034  016D20  6EF8               	movwf	tblptru,c
 19035  016D22  0E1F               	movlw	(high __ramtop+-1)
 19036  016D24  64F7               	cpfsgt	tblptrh,c
 19037  016D26  D003               	bra	u4327
 19038  016D28  0008               	tblrd		*
 19039  016D2A  50F5               	movf	tablat,w,c
 19040  016D2C  D007               	bra	u4320
 19041  016D2E                     u4327:
 19042  016D2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19043  016D34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19044  016D3A  50EF               	movf	indf0,w,c
 19045  016D3C                     u4320:
 19046  016D3C  0900               	iorlw	0
 19047  016D3E  A4D8               	btfss	status,2,c
 19048  016D40  D7D5               	goto	l5931
 19049                           
 19050                           ;stkvar	_a @ sp[(-2)+0]
 19051                           ;stkvar	_s @ sp[(-2)+-2]
 19052  016D42  0EFC               	movlw	-4
 19053  016D44  006F FF8C  F035    	movff	plusw1,btemp
 19054  016D4A  0EFD               	movlw	-3
 19055  016D4C  006F FF8C  F036    	movff	plusw1,btemp+1
 19056  016D52  0EFE               	movlw	-2
 19057  016D54  50E3               	movf	plusw1,w,c
 19058  016D56  5E35               	subwf	btemp^0,f,c
 19059  016D58  0EFF               	movlw	-1
 19060  016D5A  50E3               	movf	plusw1,w,c
 19061  016D5C  5A36               	subwfb	(btemp+1)^0,f,c
 19062                           
 19063                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19064  016D5E  52E5               	movf	postdec1,f,c
 19065  016D60  52E5               	movf	postdec1,f,c
 19066  016D62  52E5               	movf	postdec1,f,c
 19067  016D64  52E5               	movf	postdec1,f,c
 19068  016D66  0012               	return		;funcret
 19069  016D68                     __end_of_strlen:
 19070                           	opt callstack 0
 19071                           
 19072 ;; *************** function _fputs *****************
 19073 ;; Defined at:
 19074 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;  s               2  [STACK] PTR const unsigned char 
 19077 ;;		 -> dbuf(80), 
 19078 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19079 ;;		 -> f(6), NULL(0), 
 19080 ;; Auto vars:     Size  Location     Type
 19081 ;;  i               2  [STACK] int 
 19082 ;;  c               1  [STACK] unsigned char 
 19083 ;; Return value:  Size  Location     Type
 19084 ;;                  2  [STACK] int 
 19085 ;; Registers used:
 19086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19087 ;; Tracked objects:
 19088 ;;		On entry : 0/1
 19089 ;;		On exit  : 0/0
 19090 ;;		Unchanged: 0/0
 19091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19096 ;;Total ram usage:        0 bytes
 19097 ;; Hardware stack levels used:    1
 19098 ;; Hardware stack levels required when called:    9
 19099 ;; This function calls:
 19100 ;;		_fputc
 19101 ;; This function is called by:
 19102 ;;		_pad
 19103 ;; This function uses a reentrant model
 19104 ;;
 19105                           
 19106                           	psect	text64
 19107  016D68                     __ptext64:
 19108                           	opt callstack 0
 19109  016D68                     _fputs:
 19110                           	opt callstack 0
 19111                           
 19112                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19113  016D68  52E6               	movf	postinc1,f,c
 19114  016D6A  52E6               	movf	postinc1,f,c
 19115  016D6C  52E6               	movf	postinc1,f,c
 19116                           
 19117                           ;stkvar	_i @ sp[(-3)+0]
 19118                           
 19119                           ;incstack = 0
 19120  016D6E  0EFD               	movlw	-3
 19121  016D70  6AE3               	clrf	plusw1,c
 19122  016D72  0EFE               	movlw	-2
 19123  016D74  6AE3               	clrf	plusw1,c
 19124  016D76  D01F               	goto	l8943
 19125  016D78                     l8939:
 19126                           
 19127                           ;stkvar	_fp @ sp[(-3)+-4]
 19128  016D78  0EF9               	movlw	-7
 19129  016D7A  006F FF8F FFE6     	movff	plusw1,postinc1
 19130  016D80  006F FF8F FFE6     	movff	plusw1,postinc1
 19131                           
 19132                           ;stkvar	_c @ sp[(-5)+2]
 19133  016D86  0EFD               	movlw	-3
 19134  016D88  50E3               	movf	plusw1,w,c
 19135  016D8A  6EE6               	movwf	postinc1,c
 19136  016D8C  0E00               	movlw	0
 19137  016D8E  6EE6               	movwf	postinc1,c
 19138  016D90  ECB9  F0B0         	call	_fputc	;wreg free
 19139                           
 19140                           ;stkvar	_i @ sp[(-3)+0]
 19141  016D94  0EFD               	movlw	-3
 19142  016D96  50E3               	movf	plusw1,w,c
 19143  016D98  0F01               	addlw	1
 19144  016D9A  6E35               	movwf	btemp^0,c
 19145  016D9C  0EFD               	movlw	-3
 19146  016D9E  0060  F0D7  FFE3   	movff	btemp,plusw1
 19147  016DA4  6A35               	clrf	btemp^0,c
 19148  016DA6  0EFE               	movlw	-2
 19149  016DA8  50E3               	movf	plusw1,w,c
 19150  016DAA  2035               	addwfc	btemp^0,w,c
 19151  016DAC  6E35               	movwf	btemp^0,c
 19152  016DAE  0EFE               	movlw	-2
 19153  016DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 19154  016DB6                     l8943:
 19155                           
 19156                           ;stkvar	_i @ sp[(-3)+0]
 19157  016DB6  0EFD               	movlw	-3
 19158  016DB8  006F FF8C  F03F    	movff	plusw1,btemp+10
 19159  016DBE  0EFE               	movlw	-2
 19160  016DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 19161                           
 19162                           ;stkvar	_s @ sp[(-3)+-2]
 19163  016DC6  0EFB               	movlw	-5
 19164  016DC8  006F FF8C  F03D    	movff	plusw1,btemp+8
 19165  016DCE  0EFC               	movlw	-4
 19166  016DD0  006F FF8C  F03E    	movff	plusw1,btemp+9
 19167  016DD6  503F               	movf	(btemp+10)^0,w,c
 19168  016DD8  243D               	addwf	(btemp+8)^0,w,c
 19169  016DDA  6ED9               	movwf	fsr2l,c
 19170  016DDC  5040               	movf	(btemp+11)^0,w,c
 19171  016DDE  203E               	addwfc	(btemp+9)^0,w,c
 19172  016DE0  6EDA               	movwf	fsr2h,c
 19173  016DE2  50DF               	movf	indf2,w,c
 19174  016DE4  6E40               	movwf	(btemp+11)^0,c
 19175                           
 19176                           ;stkvar	_c @ sp[(-3)+2]
 19177  016DE6  0EFF               	movlw	-1
 19178  016DE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 19179  016DEE  0EFF               	movlw	-1
 19180  016DF0  50E3               	movf	plusw1,w,c
 19181  016DF2  A4D8               	btfss	status,2,c
 19182  016DF4  D7C1               	goto	l8939
 19183                           
 19184                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19185  016DF6  0EF9               	movlw	249
 19186  016DF8  26E1               	addwf	fsr1l,f,c
 19187  016DFA  0EFF               	movlw	255
 19188  016DFC  22E2               	addwfc	fsr1h,f,c
 19189  016DFE  0012               	return		;funcret
 19190  016E00                     __end_of_fputs:
 19191                           	opt callstack 0
 19192                           
 19193 ;; *************** function _fputc *****************
 19194 ;; Defined at:
 19195 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19196 ;; Parameters:    Size  Location     Type
 19197 ;;  c               2  [STACK] int 
 19198 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19199 ;;		 -> f(6), NULL(0), 
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  2  [STACK] int 
 19204 ;; Registers used:
 19205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19206 ;; Tracked objects:
 19207 ;;		On entry : 0/4
 19208 ;;		On exit  : 0/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19215 ;;Total ram usage:        0 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; Hardware stack levels required when called:    8
 19218 ;; This function calls:
 19219 ;;		_putch
 19220 ;; This function is called by:
 19221 ;;		_pad
 19222 ;;		_stoa
 19223 ;;		_vfpfcnvrt
 19224 ;;		_fputs
 19225 ;; This function uses a reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text65
 19229  016172                     __ptext65:
 19230                           	opt callstack 0
 19231  016172                     _fputc:
 19232                           	opt callstack 13
 19233                           
 19234                           ;stkvar	_fp @ sp[(0)+-4]
 19235                           
 19236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19237                           ;incstack = 0
 19238  016172  0EFC               	movlw	-4
 19239  016174  006F FF8C  F035    	movff	plusw1,btemp
 19240  01617A  0EFD               	movlw	-3
 19241  01617C  50E3               	movf	plusw1,w,c
 19242  01617E  1035               	iorwf	btemp^0,w,c
 19243  016180  B4D8               	btfsc	status,2,c
 19244  016182  D009               	goto	u8480
 19245                           
 19246                           ;stkvar	_fp @ sp[(0)+-4]
 19247  016184  0EFC               	movlw	-4
 19248  016186  006F FF8C  F035    	movff	plusw1,btemp
 19249  01618C  0EFD               	movlw	-3
 19250  01618E  50E3               	movf	plusw1,w,c
 19251  016190  1035               	iorwf	btemp^0,w,c
 19252  016192  A4D8               	btfss	status,2,c
 19253  016194  D006               	goto	l8927
 19254  016196                     u8480:
 19255                           
 19256                           ;stkvar	_c @ sp[(0)+-2]
 19257  016196  0EFE               	movlw	-2
 19258  016198  50E3               	movf	plusw1,w,c
 19259  01619A  6EE6               	movwf	postinc1,c
 19260  01619C  EC58  F0C0         	call	_putch	;wreg free
 19261  0161A0  D075               	goto	l2758
 19262  0161A2                     l8927:
 19263                           
 19264                           ;stkvar	_fp @ sp[(0)+-4]
 19265  0161A2  0EFC               	movlw	-4
 19266  0161A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 19267  0161AA  0EFD               	movlw	-3
 19268  0161AC  006F FF8C  F040    	movff	plusw1,btemp+11
 19269  0161B2  0E04               	movlw	4
 19270  0161B4  243F               	addwf	(btemp+10)^0,w,c
 19271  0161B6  6ED9               	movwf	fsr2l,c
 19272  0161B8  0E00               	movlw	0
 19273  0161BA  2040               	addwfc	(btemp+11)^0,w,c
 19274  0161BC  6EDA               	movwf	fsr2h,c
 19275  0161BE  50DE               	movf	postinc2,w,c
 19276  0161C0  10DE               	iorwf	postinc2,w,c
 19277  0161C2  B4D8               	btfsc	status,2,c
 19278  0161C4  D026               	goto	u8500
 19279                           
 19280                           ;stkvar	_fp @ sp[(0)+-4]
 19281  0161C6  0EFC               	movlw	-4
 19282  0161C8  006F FF8C  F03F    	movff	plusw1,btemp+10
 19283  0161CE  0EFD               	movlw	-3
 19284  0161D0  006F FF8C  F040    	movff	plusw1,btemp+11
 19285  0161D6  0E04               	movlw	4
 19286  0161D8  243F               	addwf	(btemp+10)^0,w,c
 19287  0161DA  6ED9               	movwf	fsr2l,c
 19288  0161DC  0E00               	movlw	0
 19289  0161DE  2040               	addwfc	(btemp+11)^0,w,c
 19290  0161E0  6EDA               	movwf	fsr2h,c
 19291                           
 19292                           ;stkvar	_fp @ sp[(0)+-4]
 19293  0161E2  0EFC               	movlw	-4
 19294  0161E4  006F FF8C  F03F    	movff	plusw1,btemp+10
 19295  0161EA  0EFD               	movlw	-3
 19296  0161EC  006F FF8C  F040    	movff	plusw1,btemp+11
 19297  0161F2  0E02               	movlw	2
 19298  0161F4  243F               	addwf	(btemp+10)^0,w,c
 19299  0161F6  6EE9               	movwf	fsr0l,c
 19300  0161F8  0E00               	movlw	0
 19301  0161FA  2040               	addwfc	(btemp+11)^0,w,c
 19302  0161FC  6EEA               	movwf	fsr0h,c
 19303  0161FE  50DE               	movf	postinc2,w,c
 19304  016200  5CEE               	subwf	postinc0,w,c
 19305  016202  50EE               	movf	postinc0,w,c
 19306  016204  0A80               	xorlw	128
 19307  016206  6E35               	movwf	btemp^0,c
 19308  016208  50DE               	movf	postinc2,w,c
 19309  01620A  0A80               	xorlw	128
 19310  01620C  5835               	subwfb	btemp^0,w,c
 19311  01620E  B0D8               	btfsc	status,0,c
 19312  016210  D03D               	goto	l2758
 19313  016212                     u8500:
 19314                           
 19315                           ;stkvar	_c @ sp[(0)+-2]
 19316                           ;stkvar	_fp @ sp[(0)+-4]
 19317  016212  0EFC               	movlw	-4
 19318  016214  006F FF8C  F03F    	movff	plusw1,btemp+10
 19319  01621A  0EFD               	movlw	-3
 19320  01621C  006F FF8C  F040    	movff	plusw1,btemp+11
 19321  016222  0E02               	movlw	2
 19322  016224  243F               	addwf	(btemp+10)^0,w,c
 19323  016226  6ED9               	movwf	fsr2l,c
 19324  016228  0E00               	movlw	0
 19325  01622A  2040               	addwfc	(btemp+11)^0,w,c
 19326  01622C  6EDA               	movwf	fsr2h,c
 19327  01622E  006F FF78  F03F    	movff	postinc2,btemp+10
 19328  016234  006F FF74  F040    	movff	postdec2,btemp+11
 19329                           
 19330                           ;stkvar	_fp @ sp[(0)+-4]
 19331  01623A  0EFC               	movlw	-4
 19332  01623C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19333  016242  0EFD               	movlw	-3
 19334  016244  006F FF8F FFDA     	movff	plusw1,fsr2h
 19335  01624A  006F FF78  F03D    	movff	postinc2,btemp+8
 19336  016250  006F FF74  F03E    	movff	postdec2,btemp+9
 19337  016256  503F               	movf	(btemp+10)^0,w,c
 19338  016258  243D               	addwf	(btemp+8)^0,w,c
 19339  01625A  6ED9               	movwf	fsr2l,c
 19340  01625C  5040               	movf	(btemp+11)^0,w,c
 19341  01625E  203E               	addwfc	(btemp+9)^0,w,c
 19342  016260  6EDA               	movwf	fsr2h,c
 19343  016262  0EFE               	movlw	-2
 19344  016264  006F FF8F FFDF     	movff	plusw1,indf2
 19345                           
 19346                           ;stkvar	_fp @ sp[(0)+-4]
 19347  01626A  0EFC               	movlw	-4
 19348  01626C  006F FF8C  F03F    	movff	plusw1,btemp+10
 19349  016272  0EFD               	movlw	-3
 19350  016274  006F FF8C  F040    	movff	plusw1,btemp+11
 19351  01627A  0E02               	movlw	2
 19352  01627C  243F               	addwf	(btemp+10)^0,w,c
 19353  01627E  6ED9               	movwf	fsr2l,c
 19354  016280  0E00               	movlw	0
 19355  016282  2040               	addwfc	(btemp+11)^0,w,c
 19356  016284  6EDA               	movwf	fsr2h,c
 19357  016286  2ADE               	incf	postinc2,f,c
 19358  016288  0E00               	movlw	0
 19359  01628A  22DD               	addwfc	postdec2,f,c
 19360  01628C                     l2758:
 19361                           
 19362                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19363  01628C  52E5               	movf	postdec1,f,c
 19364  01628E  52E5               	movf	postdec1,f,c
 19365  016290  52E5               	movf	postdec1,f,c
 19366  016292  52E5               	movf	postdec1,f,c
 19367  016294  0012               	return		;funcret
 19368  016296                     __end_of_fputc:
 19369                           	opt callstack 0
 19370                           
 19371 ;; *************** function _putch *****************
 19372 ;; Defined at:
 19373 ;;		line 155 in file "eadog.c"
 19374 ;; Parameters:    Size  Location     Type
 19375 ;;  c               1  [STACK] unsigned char 
 19376 ;; Auto vars:     Size  Location     Type
 19377 ;;		None
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1  [STACK] void 
 19380 ;; Registers used:
 19381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/4
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19391 ;;Total ram usage:        0 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:    7
 19394 ;; This function calls:
 19395 ;;		_ringBufS_put_dma
 19396 ;; This function is called by:
 19397 ;;		_fputc
 19398 ;; This function uses a reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text66
 19402  0180B0                     __ptext66:
 19403                           	opt callstack 0
 19404  0180B0                     _putch:
 19405                           	opt callstack 13
 19406                           
 19407                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19408                           ;stkvar	_c @ sp[(0)+-1]
 19409                           
 19410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19411                           ;incstack = 0
 19412  0180B0  0EFF               	movlw	-1
 19413  0180B2  50E3               	movf	plusw1,w,c
 19414  0180B4  6EE6               	movwf	postinc1,c
 19415  0180B6  0060  F307  FFE6   	movff	_spi_link+6,postinc1
 19416  0180BC  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
 19417  0180C2  EC67  F0B5         	call	_ringBufS_put_dma	;wreg free
 19418                           
 19419                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19420  0180C6  52E5               	movf	postdec1,f,c
 19421  0180C8  0012               	return		;funcret
 19422  0180CA                     __end_of_putch:
 19423                           	opt callstack 0
 19424                           
 19425 ;; *************** function _ringBufS_put_dma *****************
 19426 ;; Defined at:
 19427 ;;		line 67 in file "ringbufs.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19430 ;;		 -> ring_buf1(67), 
 19431 ;;  c               1  [STACK] const unsigned char 
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;		None
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  1  [STACK] void 
 19436 ;; Registers used:
 19437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/4
 19440 ;;		On exit  : 0/0
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;Total ram usage:        0 bytes
 19448 ;; Hardware stack levels used:    1
 19449 ;; Hardware stack levels required when called:    6
 19450 ;; This function calls:
 19451 ;;		Nothing
 19452 ;; This function is called by:
 19453 ;;		_putch
 19454 ;; This function uses a reentrant model
 19455 ;;
 19456                           
 19457                           	psect	text67
 19458  016ACE                     __ptext67:
 19459                           	opt callstack 0
 19460  016ACE                     _ringBufS_put_dma:
 19461                           	opt callstack 13
 19462                           
 19463                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19464                           ;stkvar	__this @ sp[(0)+-2]
 19465                           
 19466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19467                           ;incstack = 0
 19468  016ACE  0EFE               	movlw	-2
 19469  016AD0  006F FF8C  F03F    	movff	plusw1,btemp+10
 19470  016AD6  0EFF               	movlw	-1
 19471  016AD8  006F FF8C  F040    	movff	plusw1,btemp+11
 19472  016ADE  0E42               	movlw	66
 19473  016AE0  243F               	addwf	(btemp+10)^0,w,c
 19474  016AE2  6ED9               	movwf	fsr2l,c
 19475  016AE4  0E00               	movlw	0
 19476  016AE6  2040               	addwfc	(btemp+11)^0,w,c
 19477  016AE8  6EDA               	movwf	fsr2h,c
 19478  016AEA  0E40               	movlw	64
 19479  016AEC  60DF               	cpfslt	indf2,c
 19480  016AEE  D040               	goto	l1462
 19481                           
 19482                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19483                           ;stkvar	_c @ sp[(0)+-3]
 19484                           ;stkvar	__this @ sp[(0)+-2]
 19485  016AF0  0EFE               	movlw	-2
 19486  016AF2  006F FF8C  F03F    	movff	plusw1,btemp+10
 19487  016AF8  0EFF               	movlw	-1
 19488  016AFA  006F FF8C  F040    	movff	plusw1,btemp+11
 19489  016B00  0E40               	movlw	64
 19490  016B02  243F               	addwf	(btemp+10)^0,w,c
 19491  016B04  6ED9               	movwf	fsr2l,c
 19492  016B06  0E00               	movlw	0
 19493  016B08  2040               	addwfc	(btemp+11)^0,w,c
 19494  016B0A  6EDA               	movwf	fsr2h,c
 19495  016B0C  50DF               	movf	indf2,w,c
 19496  016B0E  6E40               	movwf	(btemp+11)^0,c
 19497                           
 19498                           ;stkvar	__this @ sp[(0)+-2]
 19499  016B10  0EFE               	movlw	-2
 19500  016B12  006F FF8C  F03D    	movff	plusw1,btemp+8
 19501  016B18  0EFF               	movlw	-1
 19502  016B1A  006F FF8C  F03E    	movff	plusw1,btemp+9
 19503  016B20  5040               	movf	(btemp+11)^0,w,c
 19504  016B22  243D               	addwf	(btemp+8)^0,w,c
 19505  016B24  6ED9               	movwf	fsr2l,c
 19506  016B26  0E00               	movlw	0
 19507  016B28  203E               	addwfc	(btemp+9)^0,w,c
 19508  016B2A  6EDA               	movwf	fsr2h,c
 19509  016B2C  0EFD               	movlw	-3
 19510  016B2E  006F FF8F FFDF     	movff	plusw1,indf2
 19511                           
 19512                           ;ringbufs.c: 71:   ++_this->head;
 19513                           ;stkvar	__this @ sp[(0)+-2]
 19514  016B34  0EFE               	movlw	-2
 19515  016B36  006F FF8C  F03F    	movff	plusw1,btemp+10
 19516  016B3C  0EFF               	movlw	-1
 19517  016B3E  006F FF8C  F040    	movff	plusw1,btemp+11
 19518  016B44  0E40               	movlw	64
 19519  016B46  243F               	addwf	(btemp+10)^0,w,c
 19520  016B48  6ED9               	movwf	fsr2l,c
 19521  016B4A  0E00               	movlw	0
 19522  016B4C  2040               	addwfc	(btemp+11)^0,w,c
 19523  016B4E  6EDA               	movwf	fsr2h,c
 19524  016B50  2ADF               	incf	indf2,f,c
 19525                           
 19526                           ;ringbufs.c: 72:   ++_this->count;
 19527                           ;stkvar	__this @ sp[(0)+-2]
 19528  016B52  0EFE               	movlw	-2
 19529  016B54  006F FF8C  F03F    	movff	plusw1,btemp+10
 19530  016B5A  0EFF               	movlw	-1
 19531  016B5C  006F FF8C  F040    	movff	plusw1,btemp+11
 19532  016B62  0E42               	movlw	66
 19533  016B64  243F               	addwf	(btemp+10)^0,w,c
 19534  016B66  6ED9               	movwf	fsr2l,c
 19535  016B68  0E00               	movlw	0
 19536  016B6A  2040               	addwfc	(btemp+11)^0,w,c
 19537  016B6C  6EDA               	movwf	fsr2h,c
 19538  016B6E  2ADF               	incf	indf2,f,c
 19539  016B70                     l1462:
 19540                           
 19541                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19542  016B70  52E5               	movf	postdec1,f,c
 19543  016B72  52E5               	movf	postdec1,f,c
 19544  016B74  52E5               	movf	postdec1,f,c
 19545  016B76  0012               	return		;funcret
 19546  016B78                     __end_of_ringBufS_put_dma:
 19547                           	opt callstack 0
 19548                           
 19549 ;; *************** function _atoi *****************
 19550 ;; Defined at:
 19551 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19552 ;; Parameters:    Size  Location     Type
 19553 ;;  s               2  [STACK] PTR const unsigned char 
 19554 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19555 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19556 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19557 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19558 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19559 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19560 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19561 ;; Auto vars:     Size  Location     Type
 19562 ;;  n               2  [STACK] int 
 19563 ;;  neg             2  [STACK] int 
 19564 ;; Return value:  Size  Location     Type
 19565 ;;                  2  [STACK] int 
 19566 ;; Registers used:
 19567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19568 ;; Tracked objects:
 19569 ;;		On entry : 0/4
 19570 ;;		On exit  : 0/0
 19571 ;;		Unchanged: 0/0
 19572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19577 ;;Total ram usage:        0 bytes
 19578 ;; Hardware stack levels used:    1
 19579 ;; Hardware stack levels required when called:    7
 19580 ;; This function calls:
 19581 ;;		_isdigit
 19582 ;;		_isspace
 19583 ;; This function is called by:
 19584 ;;		_vfpfcnvrt
 19585 ;; This function uses a reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text68
 19589  014E3A                     __ptext68:
 19590                           	opt callstack 0
 19591  014E3A                     _atoi:
 19592                           	opt callstack 0
 19593                           
 19594                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19595  014E3A  0E09               	movlw	9
 19596  014E3C  26E1               	addwf	fsr1l,f,c
 19597  014E3E  0E00               	movlw	0
 19598  014E40  22E2               	addwfc	fsr1h,f,c
 19599                           
 19600                           ;stkvar	_n @ sp[(-9)+5]
 19601                           
 19602                           ;incstack = 0
 19603  014E42  0EFC               	movlw	-4
 19604  014E44  6AE3               	clrf	plusw1,c
 19605  014E46  0EFD               	movlw	-3
 19606  014E48  6AE3               	clrf	plusw1,c
 19607                           
 19608                           ;stkvar	_neg @ sp[(-9)+7]
 19609  014E4A  0EFE               	movlw	-2
 19610  014E4C  6AE3               	clrf	plusw1,c
 19611  014E4E  0EFF               	movlw	-1
 19612  014E50  6AE3               	clrf	plusw1,c
 19613  014E52  D011               	goto	l7405
 19614  014E54                     l7403:
 19615                           
 19616                           ;stkvar	_s @ sp[(-9)+-2]
 19617  014E54  0EF5               	movlw	-11
 19618  014E56  50E3               	movf	plusw1,w,c
 19619  014E58  0F01               	addlw	1
 19620  014E5A  6E35               	movwf	btemp^0,c
 19621  014E5C  0EF5               	movlw	-11
 19622  014E5E  0060  F0D7  FFE3   	movff	btemp,plusw1
 19623  014E64  6A35               	clrf	btemp^0,c
 19624  014E66  0EF6               	movlw	-10
 19625  014E68  50E3               	movf	plusw1,w,c
 19626  014E6A  2035               	addwfc	btemp^0,w,c
 19627  014E6C  6E35               	movwf	btemp^0,c
 19628  014E6E  0EF6               	movlw	-10
 19629  014E70  0060  F0D7  FFE3   	movff	btemp,plusw1
 19630  014E76                     l7405:
 19631                           
 19632                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19633  014E76  0EFB               	movlw	-5
 19634  014E78  6AE3               	clrf	plusw1,c
 19635  014E7A  2AE3               	incf	plusw1,f,c
 19636                           
 19637                           ;stkvar	_s @ sp[(-9)+-2]
 19638  014E7C  50E1               	movf	fsr1l,w,c
 19639  014E7E  0FF5               	addlw	-11
 19640  014E80  6ED9               	movwf	fsr2l,c
 19641  014E82  50E2               	movf	fsr1h,w,c
 19642  014E84  6EDA               	movwf	fsr2h,c
 19643  014E86  0EFF               	movlw	255
 19644  014E88  22DA               	addwfc	fsr2h,f,c
 19645  014E8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19646  014E90  006F FF77 FFF7     	movff	postdec2,tblptrh
 19647  014E96                     	if	0	;tblptru may be non-zero
 19648  014E96                     	endif
 19649  014E96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19650  014E96  0E00               	movlw	low (__mediumconst shr (0+16))
 19651  014E98  6EF8               	movwf	tblptru,c
 19652  014E9A                     	endif
 19653  014E9A  0008               	tblrd		*
 19654  014E9C  50F5               	movf	tablat,w,c
 19655  014E9E  0A20               	xorlw	32
 19656  014EA0  B4D8               	btfsc	status,2,c
 19657  014EA2  D023               	goto	l7413
 19658  014EA4  0EF7               	movlw	247
 19659  014EA6  6E3F               	movwf	(btemp+10)^0,c
 19660  014EA8  0EFF               	movlw	255
 19661  014EAA  6E40               	movwf	(btemp+11)^0,c
 19662                           
 19663                           ;stkvar	_s @ sp[(-9)+-2]
 19664  014EAC  50E1               	movf	fsr1l,w,c
 19665  014EAE  0FF5               	addlw	-11
 19666  014EB0  6ED9               	movwf	fsr2l,c
 19667  014EB2  50E2               	movf	fsr1h,w,c
 19668  014EB4  6EDA               	movwf	fsr2h,c
 19669  014EB6  0EFF               	movlw	255
 19670  014EB8  22DA               	addwfc	fsr2h,f,c
 19671  014EBA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19672  014EC0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19673  014EC6                     	if	0	;tblptru may be non-zero
 19674  014EC6                     	endif
 19675  014EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19676  014EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 19677  014EC8  6EF8               	movwf	tblptru,c
 19678  014ECA                     	endif
 19679  014ECA  0008               	tblrd		*
 19680  014ECC  50F5               	movf	tablat,w,c
 19681  014ECE  6E3D               	movwf	(btemp+8)^0,c
 19682  014ED0  6A3E               	clrf	(btemp+9)^0,c
 19683  014ED2  503F               	movf	(btemp+10)^0,w,c
 19684  014ED4  263D               	addwf	(btemp+8)^0,f,c
 19685  014ED6  5040               	movf	(btemp+11)^0,w,c
 19686  014ED8  223E               	addwfc	(btemp+9)^0,f,c
 19687  014EDA  503E               	movf	(btemp+9)^0,w,c
 19688  014EDC  E104               	bnz	u7180
 19689  014EDE  0E05               	movlw	5
 19690  014EE0  5C3D               	subwf	(btemp+8)^0,w,c
 19691  014EE2  A0D8               	btfss	status,0,c
 19692  014EE4  D002               	goto	l7413
 19693  014EE6                     u7180:
 19694                           
 19695                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19696  014EE6  0EFB               	movlw	-5
 19697  014EE8  6AE3               	clrf	plusw1,c
 19698  014EEA                     l7413:
 19699                           
 19700                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19701  014EEA  0EFB               	movlw	-5
 19702  014EEC  50E3               	movf	plusw1,w,c
 19703  014EEE  6E3F               	movwf	(btemp+10)^0,c
 19704  014EF0  6A40               	clrf	(btemp+11)^0,c
 19705                           
 19706                           ;stkvar	_atoi$4598 @ sp[(-9)+2]
 19707  014EF2  0EF9               	movlw	-7
 19708  014EF4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19709  014EFA  0EFA               	movlw	-6
 19710  014EFC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19711                           
 19712                           ;stkvar	_atoi$4598 @ sp[(-9)+2]
 19713  014F02  0EF9               	movlw	-7
 19714  014F04  006F FF8C  F035    	movff	plusw1,btemp
 19715  014F0A  0EFA               	movlw	-6
 19716  014F0C  50E3               	movf	plusw1,w,c
 19717  014F0E  1035               	iorwf	btemp^0,w,c
 19718  014F10  B4D8               	btfsc	status,2,c
 19719  014F12  D01F               	goto	l7423
 19720  014F14  D79F               	goto	l7403
 19721  014F16                     l7419:
 19722  014F16  0E01               	movlw	1
 19723  014F18  6E3F               	movwf	(btemp+10)^0,c
 19724  014F1A  0E00               	movlw	0
 19725  014F1C  6E40               	movwf	(btemp+11)^0,c
 19726                           
 19727                           ;stkvar	_neg @ sp[(-9)+7]
 19728  014F1E  0EFE               	movlw	-2
 19729  014F20  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19730  014F26  0EFF               	movlw	-1
 19731  014F28  0060  F103  FFE3   	movff	btemp+11,plusw1
 19732  014F2E                     l7421:
 19733                           
 19734                           ;stkvar	_s @ sp[(-9)+-2]
 19735  014F2E  0EF5               	movlw	-11
 19736  014F30  50E3               	movf	plusw1,w,c
 19737  014F32  0F01               	addlw	1
 19738  014F34  6E35               	movwf	btemp^0,c
 19739  014F36  0EF5               	movlw	-11
 19740  014F38  0060  F0D7  FFE3   	movff	btemp,plusw1
 19741  014F3E  6A35               	clrf	btemp^0,c
 19742  014F40  0EF6               	movlw	-10
 19743  014F42  50E3               	movf	plusw1,w,c
 19744  014F44  2035               	addwfc	btemp^0,w,c
 19745  014F46  6E35               	movwf	btemp^0,c
 19746  014F48  0EF6               	movlw	-10
 19747  014F4A  0060  F0D7  FFE3   	movff	btemp,plusw1
 19748  014F50  D053               	goto	l7429
 19749  014F52                     l7423:
 19750                           
 19751                           ;stkvar	_s @ sp[(-9)+-2]
 19752  014F52  50E1               	movf	fsr1l,w,c
 19753  014F54  0FF5               	addlw	-11
 19754  014F56  6ED9               	movwf	fsr2l,c
 19755  014F58  50E2               	movf	fsr1h,w,c
 19756  014F5A  6EDA               	movwf	fsr2h,c
 19757  014F5C  0EFF               	movlw	255
 19758  014F5E  22DA               	addwfc	fsr2h,f,c
 19759  014F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 19760  014F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 19761  014F6C                     	if	0	;tblptru may be non-zero
 19762  014F6C                     	endif
 19763  014F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19764  014F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 19765  014F6E  6EF8               	movwf	tblptru,c
 19766  014F70                     	endif
 19767  014F70  0008               	tblrd		*
 19768  014F72  50F5               	movf	tablat,w,c
 19769  014F74  6E3F               	movwf	(btemp+10)^0,c
 19770  014F76  6A40               	clrf	(btemp+11)^0,c
 19771                           
 19772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19773                           ; Switch size 1, requested type "simple"
 19774                           ; Number of cases is 1, Range of values is 0 to 0
 19775                           ; switch strategies available:
 19776                           ; Name         Instructions Cycles
 19777                           ; simple_byte            4     3 (average)
 19778                           ;	Chosen strategy is simple_byte
 19779  014F78  5040               	movf	(btemp+11)^0,w,c
 19780  014F7A  0A00               	xorlw	0	; case 0
 19781  014F7C  A4D8               	btfss	status,2,c
 19782  014F7E  D03C               	goto	l7429
 19783                           
 19784                           ; Switch size 1, requested type "simple"
 19785                           ; Number of cases is 2, Range of values is 43 to 45
 19786                           ; switch strategies available:
 19787                           ; Name         Instructions Cycles
 19788                           ; simple_byte            7     4 (average)
 19789                           ;	Chosen strategy is simple_byte
 19790  014F80  503F               	movf	(btemp+10)^0,w,c
 19791  014F82  0A2B               	xorlw	43	; case 43
 19792  014F84  B4D8               	btfsc	status,2,c
 19793  014F86  D7D3               	goto	l7421
 19794  014F88  0A06               	xorlw	6	; case 45
 19795  014F8A  B4D8               	btfsc	status,2,c
 19796  014F8C  D7C4               	goto	l7419
 19797  014F8E  D034               	goto	l7429
 19798  014F90                     l7425:
 19799                           
 19800                           ;stkvar	_n @ sp[(-9)+5]
 19801  014F90  0EFC               	movlw	-4
 19802  014F92  006F FF8C  F03F    	movff	plusw1,btemp+10
 19803  014F98  0EFD               	movlw	-3
 19804  014F9A  006F FF8C  F040    	movff	plusw1,btemp+11
 19805  014FA0  0E0A               	movlw	10
 19806  014FA2  023F               	mulwf	(btemp+10)^0,c
 19807  014FA4  006F FFCC  F03D    	movff	prodl,btemp+8
 19808  014FAA  006F FFD0  F03E    	movff	prodh,btemp+9
 19809  014FB0  0240               	mulwf	(btemp+11)^0,c
 19810  014FB2  50F3               	movf	prodl,w,c
 19811  014FB4  263E               	addwf	(btemp+9)^0,f,c
 19812                           
 19813                           ;stkvar	_s @ sp[(-9)+-2]
 19814  014FB6  50E1               	movf	fsr1l,w,c
 19815  014FB8  0FF5               	addlw	-11
 19816  014FBA  6ED9               	movwf	fsr2l,c
 19817  014FBC  50E2               	movf	fsr1h,w,c
 19818  014FBE  6EDA               	movwf	fsr2h,c
 19819  014FC0  0EFF               	movlw	255
 19820  014FC2  22DA               	addwfc	fsr2h,f,c
 19821  014FC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19822  014FCA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19823  014FD0                     	if	0	;tblptru may be non-zero
 19824  014FD0                     	endif
 19825  014FD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19826  014FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 19827  014FD2  6EF8               	movwf	tblptru,c
 19828  014FD4                     	endif
 19829  014FD4  0008               	tblrd		*
 19830  014FD6  50F5               	movf	tablat,w,c
 19831  014FD8  5E3D               	subwf	(btemp+8)^0,f,c
 19832  014FDA  0E00               	movlw	0
 19833  014FDC  5A3E               	subwfb	(btemp+9)^0,f,c
 19834  014FDE  0E30               	movlw	48
 19835  014FE0  263D               	addwf	(btemp+8)^0,f,c
 19836  014FE2  0E00               	movlw	0
 19837  014FE4  223E               	addwfc	(btemp+9)^0,f,c
 19838                           
 19839                           ;stkvar	_n @ sp[(-9)+5]
 19840  014FE6  0EFC               	movlw	-4
 19841  014FE8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19842  014FEE  0EFD               	movlw	-3
 19843  014FF0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19844  014FF6  D79B               	goto	l7421
 19845  014FF8                     l7429:
 19846  014FF8  0ED0               	movlw	208
 19847  014FFA  6E3F               	movwf	(btemp+10)^0,c
 19848  014FFC  0EFF               	movlw	255
 19849  014FFE  6E40               	movwf	(btemp+11)^0,c
 19850                           
 19851                           ;stkvar	_s @ sp[(-9)+-2]
 19852  015000  50E1               	movf	fsr1l,w,c
 19853  015002  0FF5               	addlw	-11
 19854  015004  6ED9               	movwf	fsr2l,c
 19855  015006  50E2               	movf	fsr1h,w,c
 19856  015008  6EDA               	movwf	fsr2h,c
 19857  01500A  0EFF               	movlw	255
 19858  01500C  22DA               	addwfc	fsr2h,f,c
 19859  01500E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19860  015014  006F FF77 FFF7     	movff	postdec2,tblptrh
 19861  01501A                     	if	0	;tblptru may be non-zero
 19862  01501A                     	endif
 19863  01501A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19864  01501A  0E00               	movlw	low (__mediumconst shr (0+16))
 19865  01501C  6EF8               	movwf	tblptru,c
 19866  01501E                     	endif
 19867  01501E  0008               	tblrd		*
 19868  015020  50F5               	movf	tablat,w,c
 19869  015022  6E3D               	movwf	(btemp+8)^0,c
 19870  015024  6A3E               	clrf	(btemp+9)^0,c
 19871  015026  503F               	movf	(btemp+10)^0,w,c
 19872  015028  263D               	addwf	(btemp+8)^0,f,c
 19873  01502A  5040               	movf	(btemp+11)^0,w,c
 19874  01502C  223E               	addwfc	(btemp+9)^0,f,c
 19875  01502E  503E               	movf	(btemp+9)^0,w,c
 19876  015030  E106               	bnz	u7200
 19877  015032  0E0A               	movlw	10
 19878  015034  5C3D               	subwf	(btemp+8)^0,w,c
 19879  015036  B0D8               	btfsc	status,0,c
 19880  015038  D002               	goto	u7200
 19881  01503A  0E01               	movlw	1
 19882  01503C  D001               	goto	u7210
 19883  01503E                     u7200:
 19884  01503E  0E00               	movlw	0
 19885  015040                     u7210:
 19886  015040  6E3F               	movwf	(btemp+10)^0,c
 19887  015042  6A40               	clrf	(btemp+11)^0,c
 19888                           
 19889                           ;stkvar	_atoi$4600 @ sp[(-9)+0]
 19890  015044  0EF7               	movlw	-9
 19891  015046  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19892  01504C  0EF8               	movlw	-8
 19893  01504E  0060  F103  FFE3   	movff	btemp+11,plusw1
 19894                           
 19895                           ;stkvar	_atoi$4600 @ sp[(-9)+0]
 19896  015054  0EF7               	movlw	-9
 19897  015056  006F FF8C  F035    	movff	plusw1,btemp
 19898  01505C  0EF8               	movlw	-8
 19899  01505E  50E3               	movf	plusw1,w,c
 19900  015060  1035               	iorwf	btemp^0,w,c
 19901  015062  A4D8               	btfss	status,2,c
 19902  015064  D795               	goto	l7425
 19903                           
 19904                           ;stkvar	_neg @ sp[(-9)+7]
 19905  015066  0EFE               	movlw	-2
 19906  015068  006F FF8C  F035    	movff	plusw1,btemp
 19907  01506E  0EFF               	movlw	-1
 19908  015070  50E3               	movf	plusw1,w,c
 19909  015072  1035               	iorwf	btemp^0,w,c
 19910  015074  A4D8               	btfss	status,2,c
 19911  015076  D00E               	goto	l7439
 19912                           
 19913                           ;stkvar	_n @ sp[(-9)+5]
 19914  015078  0EFC               	movlw	-4
 19915  01507A  006F FF8C  F035    	movff	plusw1,btemp
 19916  015080  1E35               	comf	btemp^0,f,c
 19917  015082  0EFD               	movlw	-3
 19918  015084  006F FF8C  F036    	movff	plusw1,btemp+1
 19919  01508A  1E36               	comf	(btemp+1)^0,f,c
 19920  01508C  2A35               	incf	btemp^0,f,c
 19921  01508E  B4D8               	btfsc	status,2,c
 19922  015090  2A36               	incf	(btemp+1)^0,f,c
 19923  015092  D008               	goto	l2694
 19924  015094                     l7439:
 19925                           
 19926                           ;stkvar	_n @ sp[(-9)+5]
 19927  015094  0EFC               	movlw	-4
 19928  015096  006F FF8C  F035    	movff	plusw1,btemp
 19929  01509C  0EFD               	movlw	-3
 19930  01509E  006F FF8C  F036    	movff	plusw1,btemp+1
 19931  0150A4                     l2694:
 19932                           
 19933                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19934  0150A4  0EF5               	movlw	245
 19935  0150A6  26E1               	addwf	fsr1l,f,c
 19936  0150A8  0EFF               	movlw	255
 19937  0150AA  22E2               	addwfc	fsr1h,f,c
 19938  0150AC  0012               	return		;funcret
 19939  0150AE                     __end_of_atoi:
 19940                           	opt callstack 0
 19941                           
 19942 ;; *************** function _isspace *****************
 19943 ;; Defined at:
 19944 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19945 ;; Parameters:    Size  Location     Type
 19946 ;;  c               2  [STACK] int 
 19947 ;; Auto vars:     Size  Location     Type
 19948 ;;		None
 19949 ;; Return value:  Size  Location     Type
 19950 ;;                  2  [STACK] int 
 19951 ;; Registers used:
 19952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19953 ;; Tracked objects:
 19954 ;;		On entry : 0/0
 19955 ;;		On exit  : 0/0
 19956 ;;		Unchanged: 0/0
 19957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19962 ;;Total ram usage:        0 bytes
 19963 ;; Hardware stack levels used:    1
 19964 ;; Hardware stack levels required when called:    6
 19965 ;; This function calls:
 19966 ;;		Nothing
 19967 ;; This function is called by:
 19968 ;;		_atoi
 19969 ;; This function uses a reentrant model
 19970 ;;
 19971                           
 19972                           	psect	text69
 19973  0176AE                     __ptext69:
 19974                           	opt callstack 0
 19975  0176AE                     _isspace:
 19976                           	opt callstack 0
 19977                           
 19978                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19979  0176AE  52E6               	movf	postinc1,f,c
 19980                           
 19981                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 19982                           
 19983                           ;incstack = 0
 19984  0176B0  0EFF               	movlw	-1
 19985  0176B2  6AE3               	clrf	plusw1,c
 19986  0176B4  2AE3               	incf	plusw1,f,c
 19987                           
 19988                           ;stkvar	_c @ sp[(-1)+-2]
 19989  0176B6  0EFD               	movlw	-3
 19990  0176B8  006F FF8C  F035    	movff	plusw1,btemp
 19991  0176BE  0E20               	movlw	32
 19992  0176C0  1835               	xorwf	btemp^0,w,c
 19993  0176C2  E104               	bnz	u6170
 19994  0176C4  0EFE               	movlw	-2
 19995  0176C6  50E3               	movf	plusw1,w,c
 19996  0176C8  B4D8               	btfsc	status,2,c
 19997  0176CA  D012               	goto	l6889
 19998  0176CC                     u6170:
 19999                           
 20000                           ;stkvar	_c @ sp[(-1)+-2]
 20001  0176CC  0EFD               	movlw	-3
 20002  0176CE  50E3               	movf	plusw1,w,c
 20003  0176D0  0FF7               	addlw	247
 20004  0176D2  6E3F               	movwf	(btemp+10)^0,c
 20005  0176D4  0EFE               	movlw	-2
 20006  0176D6  006F FF8C  F040    	movff	plusw1,btemp+11
 20007  0176DC  0EFF               	movlw	255
 20008  0176DE  2240               	addwfc	(btemp+11)^0,f,c
 20009  0176E0  5040               	movf	(btemp+11)^0,w,c
 20010  0176E2  E104               	bnz	u6180
 20011  0176E4  0E05               	movlw	5
 20012  0176E6  5C3F               	subwf	(btemp+10)^0,w,c
 20013  0176E8  A0D8               	btfss	status,0,c
 20014  0176EA  D002               	goto	l6889
 20015  0176EC                     u6180:
 20016                           
 20017                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 20018  0176EC  0EFF               	movlw	-1
 20019  0176EE  6AE3               	clrf	plusw1,c
 20020  0176F0                     l6889:
 20021                           
 20022                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 20023  0176F0  0EFF               	movlw	-1
 20024  0176F2  50E3               	movf	plusw1,w,c
 20025  0176F4  6E35               	movwf	btemp^0,c
 20026  0176F6  6A36               	clrf	(btemp+1)^0,c
 20027                           
 20028                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20029  0176F8  52E5               	movf	postdec1,f,c
 20030  0176FA  52E5               	movf	postdec1,f,c
 20031  0176FC  52E5               	movf	postdec1,f,c
 20032  0176FE  0012               	return		;funcret
 20033  017700                     __end_of_isspace:
 20034                           	opt callstack 0
 20035                           
 20036 ;; *************** function _isdigit *****************
 20037 ;; Defined at:
 20038 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20039 ;; Parameters:    Size  Location     Type
 20040 ;;  c               2  [STACK] int 
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;		None
 20043 ;; Return value:  Size  Location     Type
 20044 ;;                  2  [STACK] int 
 20045 ;; Registers used:
 20046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20056 ;;Total ram usage:        0 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:    6
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_vfpfcnvrt
 20063 ;;		_atoi
 20064 ;; This function uses a reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text70
 20068  017B90                     __ptext70:
 20069                           	opt callstack 0
 20070  017B90                     _isdigit:
 20071                           	opt callstack 18
 20072                           
 20073                           ;stkvar	_c @ sp[(0)+-2]
 20074                           
 20075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20076                           ;incstack = 0
 20077  017B90  0EFE               	movlw	-2
 20078  017B92  50E3               	movf	plusw1,w,c
 20079  017B94  0FD0               	addlw	208
 20080  017B96  6E3F               	movwf	(btemp+10)^0,c
 20081  017B98  0EFF               	movlw	-1
 20082  017B9A  006F FF8C  F040    	movff	plusw1,btemp+11
 20083  017BA0  0EFF               	movlw	255
 20084  017BA2  2240               	addwfc	(btemp+11)^0,f,c
 20085  017BA4  5040               	movf	(btemp+11)^0,w,c
 20086  017BA6  E106               	bnz	u5130
 20087  017BA8  0E0A               	movlw	10
 20088  017BAA  5C3F               	subwf	(btemp+10)^0,w,c
 20089  017BAC  B0D8               	btfsc	status,0,c
 20090  017BAE  D002               	goto	u5130
 20091  017BB0  0E01               	movlw	1
 20092  017BB2  D001               	goto	u5140
 20093  017BB4                     u5130:
 20094  017BB4  0E00               	movlw	0
 20095  017BB6                     u5140:
 20096  017BB6  6E35               	movwf	btemp^0,c
 20097  017BB8  6A36               	clrf	(btemp+1)^0,c
 20098                           
 20099                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20100  017BBA  52E5               	movf	postdec1,f,c
 20101  017BBC  52E5               	movf	postdec1,f,c
 20102  017BBE  0012               	return		;funcret
 20103  017BC0                     __end_of_isdigit:
 20104                           	opt callstack 0
 20105                           
 20106 ;; *************** function _set_vterm *****************
 20107 ;; Defined at:
 20108 ;;		line 104 in file "mconfig.c"
 20109 ;; Parameters:    Size  Location     Type
 20110 ;;  vterm           1  [STACK] unsigned char 
 20111 ;; Auto vars:     Size  Location     Type
 20112 ;;		None
 20113 ;; Return value:  Size  Location     Type
 20114 ;;                  1  [STACK] unsigned char 
 20115 ;; Registers used:
 20116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20117 ;; Tracked objects:
 20118 ;;		On entry : 0/0
 20119 ;;		On exit  : 3F/4
 20120 ;;		Unchanged: 0/0
 20121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;Total ram usage:        0 bytes
 20127 ;; Hardware stack levels used:    1
 20128 ;; Hardware stack levels required when called:    6
 20129 ;; This function calls:
 20130 ;;		Nothing
 20131 ;; This function is called by:
 20132 ;;		_main
 20133 ;;		_check_help
 20134 ;; This function uses a reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text71
 20138  018094                     __ptext71:
 20139                           	opt callstack 0
 20140  018094                     _set_vterm:
 20141                           	opt callstack 24
 20142                           
 20143                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 20144                           ;stkvar	_vterm @ sp[(0)+-1]
 20145                           
 20146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20147                           ;incstack = 0
 20148  018094  0EFF               	movlw	-1
 20149  018096  006F FF8C  F040    	movff	plusw1,btemp+11
 20150  01809C  0E03               	movlw	3
 20151  01809E  1640               	andwf	(btemp+11)^0,f,c
 20152  0180A0  0104               	movlb	4	; () banked
 20153  0180A2  51D8               	movf	(_D+216)& (0+255),w,b
 20154  0180A4  1840               	xorwf	(btemp+11)^0,w,c
 20155  0180A6  0BFE               	andlw	-2
 20156  0180A8  1840               	xorwf	(btemp+11)^0,w,c
 20157  0180AA  6FD8               	movwf	(_D+216)& (0+255),b
 20158                           
 20159                           ; BSR set to: 4
 20160                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20161  0180AC  52E5               	movf	postdec1,f,c
 20162  0180AE  0012               	return		;funcret
 20163  0180B0                     __end_of_set_vterm:
 20164                           	opt callstack 0
 20165                           
 20166 ;; *************** function _set_temp_display_help *****************
 20167 ;; Defined at:
 20168 ;;		line 208 in file "mconfig.c"
 20169 ;; Parameters:    Size  Location     Type
 20170 ;;  new_response    1  [STACK] const enum E16501
 20171 ;; Auto vars:     Size  Location     Type
 20172 ;;		None
 20173 ;; Return value:  Size  Location     Type
 20174 ;;                  1  [STACK] enum E16501
 20175 ;; Registers used:
 20176 ;;		wreg, fsr1l, fsr1h
 20177 ;; Tracked objects:
 20178 ;;		On entry : 0/4
 20179 ;;		On exit  : 3F/1
 20180 ;;		Unchanged: 0/0
 20181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20186 ;;Total ram usage:        0 bytes
 20187 ;; Hardware stack levels used:    1
 20188 ;; Hardware stack levels required when called:    6
 20189 ;; This function calls:
 20190 ;;		Nothing
 20191 ;; This function is called by:
 20192 ;;		_check_help
 20193 ;; This function uses a reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text72
 20197  018196                     __ptext72:
 20198                           	opt callstack 0
 20199  018196                     _set_temp_display_help:
 20200                           	opt callstack 23
 20201                           
 20202                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20203                           
 20204                           ; BSR set to: 4
 20205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20206                           ;incstack = 0
 20207  018196  0101               	movlb	1	; () banked
 20208  018198  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20209                           
 20210                           ; BSR set to: 1
 20211                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20212                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20213  01819A  0EFF               	movlw	-1
 20214  01819C  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20215                           
 20216                           ; BSR set to: 1
 20217                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20218  0181A2  52E5               	movf	postdec1,f,c
 20219  0181A4  0012               	return		;funcret
 20220  0181A6                     __end_of_set_temp_display_help:
 20221                           	opt callstack 0
 20222                           
 20223 ;; *************** function _set_display_info *****************
 20224 ;; Defined at:
 20225 ;;		line 197 in file "mconfig.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;  new_response    1  [STACK] const enum E16501
 20228 ;; Auto vars:     Size  Location     Type
 20229 ;;		None
 20230 ;; Return value:  Size  Location     Type
 20231 ;;                  1  [STACK] enum E16986
 20232 ;; Registers used:
 20233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20234 ;; Tracked objects:
 20235 ;;		On entry : 0/4
 20236 ;;		On exit  : 0/0
 20237 ;;		Unchanged: 0/0
 20238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20243 ;;Total ram usage:        0 bytes
 20244 ;; Hardware stack levels used:    1
 20245 ;; Hardware stack levels required when called:    7
 20246 ;; This function calls:
 20247 ;;		_TimerDone
 20248 ;; This function is called by:
 20249 ;;		_main
 20250 ;;		_check_help
 20251 ;; This function uses a reentrant model
 20252 ;;
 20253                           
 20254                           	psect	text73
 20255  018000                     __ptext73:
 20256                           	opt callstack 0
 20257  018000                     _set_display_info:
 20258                           	opt callstack 23
 20259                           
 20260                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20261                           
 20262                           ; BSR set to: 1
 20263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20264                           ;incstack = 0
 20265  018000  0E07               	movlw	7
 20266  018002  6EE6               	movwf	postinc1,c
 20267  018004  EC8B  F0BF         	call	_TimerDone	;wreg free
 20268  018008  5035               	movf	btemp^0,w,c
 20269  01800A  B4D8               	btfsc	status,2,c
 20270  01800C  D006               	goto	l1599
 20271                           
 20272                           ;mconfig.c: 202:   old_info = V.response.info;
 20273  01800E  0101               	movlb	1	; () banked
 20274  018010  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20275                           
 20276                           ; BSR set to: 1
 20277                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20278                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20279  018012  0EFF               	movlw	-1
 20280  018014  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20281  01801A                     l1599:
 20282                           
 20283                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20284  01801A  52E5               	movf	postdec1,f,c
 20285  01801C  0012               	return		;funcret
 20286  01801E                     __end_of_set_display_info:
 20287                           	opt callstack 0
 20288                           
 20289 ;; *************** function _mode_lamp_dim *****************
 20290 ;; Defined at:
 20291 ;;		line 13 in file "mconfig.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;  level           2  [STACK] const unsigned short 
 20294 ;; Auto vars:     Size  Location     Type
 20295 ;;		None
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1  [STACK] void 
 20298 ;; Registers used:
 20299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/1
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20309 ;;Total ram usage:        0 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:    7
 20312 ;; This function calls:
 20313 ;;		_PWM8_LoadDutyValue
 20314 ;; This function is called by:
 20315 ;;		_main
 20316 ;;		_check_help
 20317 ;; This function uses a reentrant model
 20318 ;;
 20319                           
 20320                           	psect	text74
 20321  0180FE                     __ptext74:
 20322                           	opt callstack 0
 20323  0180FE                     _mode_lamp_dim:
 20324                           	opt callstack 23
 20325                           
 20326                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20327                           ;stkvar	_level @ sp[(0)+-2]
 20328                           
 20329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20330                           ;incstack = 0
 20331  0180FE  0EFE               	movlw	-2
 20332  018100  006F FF8F FFE6     	movff	plusw1,postinc1
 20333  018106  006F FF8F FFE6     	movff	plusw1,postinc1
 20334  01810C  EC97  F0BC         	call	_PWM8_LoadDutyValue	;wreg free
 20335                           
 20336                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20337  018110  52E5               	movf	postdec1,f,c
 20338  018112  52E5               	movf	postdec1,f,c
 20339  018114  0012               	return		;funcret
 20340  018116                     __end_of_mode_lamp_dim:
 20341                           	opt callstack 0
 20342                           
 20343 ;; *************** function _mode_lamp_bright *****************
 20344 ;; Defined at:
 20345 ;;		line 18 in file "mconfig.c"
 20346 ;; Parameters:    Size  Location     Type
 20347 ;;		None
 20348 ;; Auto vars:     Size  Location     Type
 20349 ;;		None
 20350 ;; Return value:  Size  Location     Type
 20351 ;;                  1  [STACK] void 
 20352 ;; Registers used:
 20353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20354 ;; Tracked objects:
 20355 ;;		On entry : 0/1
 20356 ;;		On exit  : 0/0
 20357 ;;		Unchanged: 0/0
 20358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20363 ;;Total ram usage:        0 bytes
 20364 ;; Hardware stack levels used:    1
 20365 ;; Hardware stack levels required when called:    7
 20366 ;; This function calls:
 20367 ;;		_PWM8_LoadDutyValue
 20368 ;; This function is called by:
 20369 ;;		_check_help
 20370 ;; This function uses a reentrant model
 20371 ;;
 20372                           
 20373                           	psect	text75
 20374  0181B4                     __ptext75:
 20375                           	opt callstack 0
 20376  0181B4                     _mode_lamp_bright:
 20377                           	opt callstack 22
 20378                           
 20379                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20380                           
 20381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20382                           ;incstack = 0
 20383  0181B4  0E2C               	movlw	44
 20384  0181B6  6EE6               	movwf	postinc1,c
 20385  0181B8  0E01               	movlw	1
 20386  0181BA  6EE6               	movwf	postinc1,c
 20387  0181BC  EC97  F0BC         	call	_PWM8_LoadDutyValue	;wreg free
 20388                           
 20389                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20390  0181C0  0012               	return		;funcret
 20391  0181C2                     __end_of_mode_lamp_bright:
 20392                           	opt callstack 0
 20393                           
 20394 ;; *************** function _PWM8_LoadDutyValue *****************
 20395 ;; Defined at:
 20396 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;  dutyValue       2  [STACK] unsigned short 
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;		None
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1  [STACK] void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/1
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20414 ;;Total ram usage:        0 bytes
 20415 ;; Hardware stack levels used:    1
 20416 ;; Hardware stack levels required when called:    6
 20417 ;; This function calls:
 20418 ;;		Nothing
 20419 ;; This function is called by:
 20420 ;;		_mode_lamp_dim
 20421 ;;		_mode_lamp_bright
 20422 ;; This function uses a reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text76
 20426  01792E                     __ptext76:
 20427                           	opt callstack 0
 20428  01792E                     _PWM8_LoadDutyValue:
 20429                           	opt callstack 23
 20430                           
 20431                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20432                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20433                           
 20434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20435                           ;incstack = 0
 20436  01792E  0EFE               	movlw	-2
 20437  017930  006F FF8C  F03F    	movff	plusw1,btemp+10
 20438  017936  0EFF               	movlw	-1
 20439  017938  006F FF8C  F040    	movff	plusw1,btemp+11
 20440  01793E  90D8               	bcf	status,0,c
 20441  017940  3240               	rrcf	(btemp+11)^0,f,c
 20442  017942  323F               	rrcf	(btemp+10)^0,f,c
 20443  017944  90D8               	bcf	status,0,c
 20444  017946  3240               	rrcf	(btemp+11)^0,f,c
 20445  017948  323F               	rrcf	(btemp+10)^0,f,c
 20446  01794A  503F               	movf	(btemp+10)^0,w,c
 20447  01794C  6E61               	movwf	97,c	;volatile
 20448                           
 20449                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20450                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20451  01794E  0EFE               	movlw	-2
 20452  017950  006F FF8C  F040    	movff	plusw1,btemp+11
 20453  017956  0E03               	movlw	3
 20454  017958  1640               	andwf	(btemp+11)^0,f,c
 20455  01795A  0E06               	movlw	6
 20456  01795C  6E35               	movwf	btemp^0,c
 20457  01795E                     u7665:
 20458  01795E  90D8               	bcf	status,0,c
 20459  017960  3640               	rlcf	(btemp+11)^0,f,c
 20460  017962  2E35               	decfsz	btemp^0,f,c
 20461  017964  D7FC               	goto	u7665
 20462  017966  5040               	movf	(btemp+11)^0,w,c
 20463  017968  6E60               	movwf	96,c	;volatile
 20464                           
 20465                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20466  01796A  52E5               	movf	postdec1,f,c
 20467  01796C  52E5               	movf	postdec1,f,c
 20468  01796E  0012               	return		;funcret
 20469  017970                     __end_of_PWM8_LoadDutyValue:
 20470                           	opt callstack 0
 20471                           
 20472 ;; *************** function _help_button *****************
 20473 ;; Defined at:
 20474 ;;		line 26 in file "mconfig.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;		None
 20477 ;; Auto vars:     Size  Location     Type
 20478 ;;		None
 20479 ;; Return value:  Size  Location     Type
 20480 ;;                  1  [STACK] _Bool 
 20481 ;; Registers used:
 20482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20483 ;; Tracked objects:
 20484 ;;		On entry : 0/1
 20485 ;;		On exit  : 0/0
 20486 ;;		Unchanged: 0/0
 20487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20492 ;;Total ram usage:        0 bytes
 20493 ;; Hardware stack levels used:    1
 20494 ;; Hardware stack levels required when called:    7
 20495 ;; This function calls:
 20496 ;;		_StartTimer
 20497 ;;		_TimerDone
 20498 ;; This function is called by:
 20499 ;;		_check_help
 20500 ;; This function uses a reentrant model
 20501 ;;
 20502                           
 20503                           	psect	text77
 20504  0179EC                     __ptext77:
 20505                           	opt callstack 0
 20506  0179EC                     _help_button:
 20507                           	opt callstack 22
 20508                           
 20509                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20510                           
 20511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20512                           ;incstack = 0
 20513  0179EC  B0CB               	btfsc	203,0,c	;volatile
 20514  0179EE  D00C               	goto	l1542
 20515                           
 20516                           ;mconfig.c: 29:   V.help = 1;
 20517  0179F0  0101               	movlb	1	; () banked
 20518  0179F2  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20519                           
 20520                           ; BSR set to: 1
 20521                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20522  0179F4  0E08               	movlw	8
 20523  0179F6  6EE6               	movwf	postinc1,c
 20524  0179F8  EC8B  F0BF         	call	_TimerDone	;wreg free
 20525  0179FC  5035               	movf	btemp^0,w,c
 20526  0179FE  B4D8               	btfsc	status,2,c
 20527  017A00  D003               	goto	l1542
 20528                           
 20529                           ;mconfig.c: 31:    return 1;
 20530  017A02  0E01               	movlw	1
 20531  017A04  6E35               	movwf	btemp^0,c
 20532  017A06  0012               	return	
 20533  017A08                     l1542:
 20534                           
 20535                           ;mconfig.c: 34:  if (!V.help)
 20536  017A08  0101               	movlb	1	; () banked
 20537  017A0A  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20538  017A0C  D008               	goto	l8329
 20539                           
 20540                           ; BSR set to: 1
 20541                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20542  017A0E  0E2C               	movlw	44
 20543  017A10  6EE6               	movwf	postinc1,c
 20544  017A12  0E01               	movlw	1
 20545  017A14  6EE6               	movwf	postinc1,c
 20546  017A16  0E08               	movlw	8
 20547  017A18  6EE6               	movwf	postinc1,c
 20548  017A1A  ECD8  F0BC         	call	_StartTimer	;wreg free
 20549  017A1E                     l8329:
 20550                           
 20551                           ;mconfig.c: 37:  return 0;
 20552  017A1E  0E00               	movlw	0
 20553  017A20  6E35               	movwf	btemp^0,c
 20554                           
 20555                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20556  017A22  0012               	return		;funcret
 20557  017A24                     __end_of_help_button:
 20558                           	opt callstack 0
 20559                           
 20560 ;; *************** function _TimerDone *****************
 20561 ;; Defined at:
 20562 ;;		line 20 in file "timers.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  timer           1  [STACK] const unsigned char 
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1  [STACK] _Bool 
 20569 ;; Registers used:
 20570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/4
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;Total ram usage:        0 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    6
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_main
 20587 ;;		_WaitMs
 20588 ;;		_help_button
 20589 ;;		_check_help
 20590 ;;		_set_display_info
 20591 ;; This function uses a reentrant model
 20592 ;;
 20593                           
 20594                           	psect	text78
 20595  017F16                     __ptext78:
 20596                           	opt callstack 0
 20597  017F16                     _TimerDone:
 20598                           	opt callstack 23
 20599                           
 20600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20601                           ;incstack = 0
 20602  017F16  0004               	clrwdt		;# 
 20603                           
 20604                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20605                           ;stkvar	_timer @ sp[(0)+-1]
 20606  017F18  0EFF               	movlw	-1
 20607  017F1A  50E3               	movf	plusw1,w,c
 20608  017F1C  0D02               	mullw	2
 20609  017F1E  50F3               	movf	243,w,c
 20610  017F20  0FA3               	addlw	low _tickCount
 20611  017F22  6ED9               	movwf	fsr2l,c
 20612  017F24  6ADA               	clrf	fsr2h,c
 20613  017F26  50DE               	movf	postinc2,w,c
 20614  017F28  10DE               	iorwf	postinc2,w,c
 20615  017F2A  A4D8               	btfss	status,2,c
 20616  017F2C  D002               	goto	l7725
 20617                           
 20618                           ;timers.c: 24:   return 1;
 20619  017F2E  0E01               	movlw	1
 20620  017F30  D001               	goto	L18
 20621  017F32                     l7725:
 20622                           
 20623                           ;timers.c: 26:  return 0;
 20624  017F32  0E00               	movlw	0
 20625  017F34                     L18:
 20626  017F34  6E35               	movwf	btemp^0,c
 20627                           
 20628                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20629  017F36  52E5               	movf	postdec1,f,c
 20630  017F38  0012               	return		;funcret
 20631  017F3A                     __end_of_TimerDone:
 20632                           	opt callstack 0
 20633                           
 20634 ;; *************** function _StartTimer *****************
 20635 ;; Defined at:
 20636 ;;		line 12 in file "timers.c"
 20637 ;; Parameters:    Size  Location     Type
 20638 ;;  timer           1  [STACK] const unsigned char 
 20639 ;;  count           2  [STACK] const unsigned short 
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;		None
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  1  [STACK] void 
 20644 ;; Registers used:
 20645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/4
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20655 ;;Total ram usage:        0 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; Hardware stack levels required when called:    6
 20658 ;; This function calls:
 20659 ;;		Nothing
 20660 ;; This function is called by:
 20661 ;;		_main
 20662 ;;		_WaitMs
 20663 ;;		_help_button
 20664 ;;		_check_help
 20665 ;; This function uses a reentrant model
 20666 ;;
 20667                           
 20668                           	psect	text79
 20669  0179B0                     __ptext79:
 20670                           	opt callstack 0
 20671  0179B0                     _StartTimer:
 20672                           	opt callstack 21
 20673                           
 20674                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20675                           ;stkvar	_count @ sp[(0)+-3]
 20676                           
 20677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20678                           ;incstack = 0
 20679  0179B0  0EFD               	movlw	-3
 20680  0179B2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20681  0179B8  0EFE               	movlw	-2
 20682  0179BA  006F FF8C  F040    	movff	plusw1,btemp+11
 20683  0179C0  90D8               	bcf	status,0,c
 20684  0179C2  343F               	rlcf	(btemp+10)^0,w,c
 20685  0179C4  6E3D               	movwf	(btemp+8)^0,c
 20686  0179C6  3440               	rlcf	(btemp+11)^0,w,c
 20687  0179C8  6E3E               	movwf	(btemp+9)^0,c
 20688                           
 20689                           ;stkvar	_timer @ sp[(0)+-1]
 20690  0179CA  0EFF               	movlw	-1
 20691  0179CC  50E3               	movf	plusw1,w,c
 20692  0179CE  0D02               	mullw	2
 20693  0179D0  50F3               	movf	243,w,c
 20694  0179D2  0FA3               	addlw	low _tickCount
 20695  0179D4  6ED9               	movwf	fsr2l,c
 20696  0179D6  6ADA               	clrf	fsr2h,c
 20697  0179D8  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20698  0179DE  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20699                           
 20700                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20701  0179E4  52E5               	movf	postdec1,f,c
 20702  0179E6  52E5               	movf	postdec1,f,c
 20703  0179E8  52E5               	movf	postdec1,f,c
 20704  0179EA  0012               	return		;funcret
 20705  0179EC                     __end_of_StartTimer:
 20706                           	opt callstack 0
 20707                           
 20708 ;; *************** function _display_info *****************
 20709 ;; Defined at:
 20710 ;;		line 187 in file "mconfig.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;		None
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;		None
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  1  [STACK] enum E16501
 20717 ;; Registers used:
 20718 ;;		btemp
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/1
 20721 ;;		On exit  : 0/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;Total ram usage:        0 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:    6
 20731 ;; This function calls:
 20732 ;;		Nothing
 20733 ;; This function is called by:
 20734 ;;		_check_help
 20735 ;; This function uses a reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text80
 20739  01821E                     __ptext80:
 20740                           	opt callstack 0
 20741  01821E                     _display_info:
 20742                           	opt callstack 23
 20743                           
 20744                           ;mconfig.c: 189:  return V.response.info;
 20745                           
 20746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20747                           ;incstack = 0
 20748  01821E  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 20749                           
 20750                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20751  018224  0012               	return		;funcret
 20752  018226                     __end_of_display_info:
 20753                           	opt callstack 0
 20754                           
 20755 ;; *************** function _display_help *****************
 20756 ;; Defined at:
 20757 ;;		line 192 in file "mconfig.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;		None
 20760 ;; Auto vars:     Size  Location     Type
 20761 ;;		None
 20762 ;; Return value:  Size  Location     Type
 20763 ;;                  1  [STACK] enum E16501
 20764 ;; Registers used:
 20765 ;;		btemp
 20766 ;; Tracked objects:
 20767 ;;		On entry : 3F/1
 20768 ;;		On exit  : 0/0
 20769 ;;		Unchanged: 0/0
 20770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20775 ;;Total ram usage:        0 bytes
 20776 ;; Hardware stack levels used:    1
 20777 ;; Hardware stack levels required when called:    6
 20778 ;; This function calls:
 20779 ;;		Nothing
 20780 ;; This function is called by:
 20781 ;;		_check_help
 20782 ;; This function uses a reentrant model
 20783 ;;
 20784                           
 20785                           	psect	text81
 20786  018226                     __ptext81:
 20787                           	opt callstack 0
 20788  018226                     _display_help:
 20789                           	opt callstack 23
 20790                           
 20791                           ;mconfig.c: 194:  return V.response.help_temp;
 20792                           
 20793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20794                           ;incstack = 0
 20795  018226  0060  F690  F035   	movff	_V+164,btemp	;volatile
 20796                           
 20797                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20798  01822C  0012               	return		;funcret
 20799  01822E                     __end_of_display_help:
 20800                           	opt callstack 0
 20801                           
 20802 ;; *************** function _check_adc_scan *****************
 20803 ;; Defined at:
 20804 ;;		line 51 in file "daq.c"
 20805 ;; Parameters:    Size  Location     Type
 20806 ;;		None
 20807 ;; Auto vars:     Size  Location     Type
 20808 ;;		None
 20809 ;; Return value:  Size  Location     Type
 20810 ;;                  1  [STACK] _Bool 
 20811 ;; Registers used:
 20812 ;;		btemp
 20813 ;; Tracked objects:
 20814 ;;		On entry : 0/4
 20815 ;;		On exit  : 0/0
 20816 ;;		Unchanged: 0/0
 20817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20822 ;;Total ram usage:        0 bytes
 20823 ;; Hardware stack levels used:    1
 20824 ;; Hardware stack levels required when called:    6
 20825 ;; This function calls:
 20826 ;;		Nothing
 20827 ;; This function is called by:
 20828 ;;		_main
 20829 ;; This function uses a reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text82
 20833  01822E                     __ptext82:
 20834                           	opt callstack 0
 20835  01822E                     _check_adc_scan:
 20836                           	opt callstack 24
 20837                           
 20838                           ;daq.c: 53:  return R.done;
 20839                           
 20840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20841                           ;incstack = 0
 20842  01822E  0060  F22C  F035   	movff	_R+43,btemp	;volatile
 20843                           
 20844                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20845  018234  0012               	return		;funcret
 20846  018236                     __end_of_check_adc_scan:
 20847                           	opt callstack 0
 20848                           
 20849 ;; *************** function _SYSTEM_Initialize *****************
 20850 ;; Defined at:
 20851 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1  [STACK] void 
 20858 ;; Registers used:
 20859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 3F/3C
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20869 ;;Total ram usage:        0 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    8
 20872 ;; This function calls:
 20873 ;;		_ADCC_Initialize
 20874 ;;		_CLKREF_Initialize
 20875 ;;		_DMA1_Initialize
 20876 ;;		_DMA2_Initialize
 20877 ;;		_EXT_INT_Initialize
 20878 ;;		_FVR_Initialize
 20879 ;;		_INTERRUPT_Initialize
 20880 ;;		_OSCILLATOR_Initialize
 20881 ;;		_PIN_MANAGER_Initialize
 20882 ;;		_PMD_Initialize
 20883 ;;		_PWM8_Initialize
 20884 ;;		_SPI1_Initialize
 20885 ;;		_TMR2_Initialize
 20886 ;;		_TMR5_Initialize
 20887 ;;		_TMR6_Initialize
 20888 ;;		_UART1_Initialize
 20889 ;;		_UART2_Initialize
 20890 ;; This function is called by:
 20891 ;;		_main
 20892 ;; This function uses a reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text83
 20896  0177D4                     __ptext83:
 20897                           	opt callstack 0
 20898  0177D4                     _SYSTEM_Initialize:
 20899                           	opt callstack 22
 20900                           
 20901                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20902                           
 20903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20904                           ;incstack = 0
 20905  0177D4  EC7E  F0B9         	call	_INTERRUPT_Initialize	;wreg free
 20906                           
 20907                           ; BSR set to: 57
 20908                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20909  0177D8  ECB8  F0C0         	call	_PMD_Initialize	;wreg free
 20910                           
 20911                           ; BSR set to: 57
 20912                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20913  0177DC  EC94  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20914                           
 20915                           ; BSR set to: 58
 20916                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20917  0177E0  ECAD  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 20918                           
 20919                           ; BSR set to: 57
 20920                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20921  0177E4  EC1B  F0C1         	call	_FVR_Initialize	;wreg free
 20922                           
 20923                           ; BSR set to: 62
 20924                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20925  0177E8  EC16  F0B9         	call	_ADCC_Initialize	;wreg free
 20926                           
 20927                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20928  0177EC  ECA2  F0C0         	call	_PWM8_Initialize	;wreg free
 20929                           
 20930                           ; BSR set to: 63
 20931                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20932  0177F0  EC8B  F0C0         	call	_TMR2_Initialize	;wreg free
 20933                           
 20934                           ; BSR set to: 57
 20935                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20936  0177F4  EC7E  F0BD         	call	_EXT_INT_Initialize	;wreg free
 20937                           
 20938                           ; BSR set to: 57
 20939                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20940  0177F8  EC23  F0BE         	call	_TMR6_Initialize	;wreg free
 20941                           
 20942                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20943  0177FC  EC0D  F0BC         	call	_TMR5_Initialize	;wreg free
 20944                           
 20945                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20946  017800  ECE3  F0B9         	call	_UART1_Initialize	;wreg free
 20947                           
 20948                           ; BSR set to: 57
 20949                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20950  017804  EC77  F0BA         	call	_UART2_Initialize	;wreg free
 20951                           
 20952                           ; BSR set to: 57
 20953                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20954  017808  EC97  F0C0         	call	_SPI1_Initialize	;wreg free
 20955                           
 20956                           ; BSR set to: 61
 20957                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20958  01780C  EC01  F0BB         	call	_DMA2_Initialize	;wreg free
 20959                           
 20960                           ; BSR set to: 59
 20961                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20962  017810  ECE1  F0B8         	call	_DMA1_Initialize	;wreg free
 20963                           
 20964                           ; BSR set to: 59
 20965                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20966  017814  ECF9  F0C0         	call	_CLKREF_Initialize	;wreg free
 20967                           
 20968                           ; BSR set to: 60
 20969                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20970  017818  0012               	return		;funcret
 20971  01781A                     __end_of_SYSTEM_Initialize:
 20972                           	opt callstack 0
 20973                           
 20974 ;; *************** function _UART2_Initialize *****************
 20975 ;; Defined at:
 20976 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;		None
 20979 ;; Auto vars:     Size  Location     Type
 20980 ;;		None
 20981 ;; Return value:  Size  Location     Type
 20982 ;;                  1  [STACK] void 
 20983 ;; Registers used:
 20984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20985 ;; Tracked objects:
 20986 ;;		On entry : 3F/39
 20987 ;;		On exit  : 3F/39
 20988 ;;		Unchanged: 0/0
 20989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20994 ;;Total ram usage:        0 bytes
 20995 ;; Hardware stack levels used:    1
 20996 ;; Hardware stack levels required when called:    7
 20997 ;; This function calls:
 20998 ;;		_UART2_SetRxInterruptHandler
 20999 ;;		_UART2_SetTxInterruptHandler
 21000 ;; This function is called by:
 21001 ;;		_SYSTEM_Initialize
 21002 ;; This function uses a reentrant model
 21003 ;;
 21004                           
 21005                           	psect	text84
 21006  0174EE                     __ptext84:
 21007                           	opt callstack 0
 21008  0174EE                     _UART2_Initialize:
 21009                           	opt callstack 22
 21010                           
 21011                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21012                           
 21013                           ; BSR set to: 60
 21014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21015                           ;incstack = 0
 21016  0174EE  0139               	movlb	57	; () banked
 21017  0174F0  9596               	bcf	150,2,b	;volatile
 21018                           
 21019                           ; BSR set to: 57
 21020                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21021  0174F2  0E5A               	movlw	low _UART2_Receive_ISR
 21022  0174F4  6EE6               	movwf	postinc1,c
 21023  0174F6  0E80               	movlw	high _UART2_Receive_ISR
 21024  0174F8  6EE6               	movwf	postinc1,c
 21025  0174FA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21026  0174FC  6EE6               	movwf	postinc1,c
 21027  0174FE  EC88  F0BE         	call	_UART2_SetRxInterruptHandler	;wreg free
 21028                           
 21029                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21030  017502  0139               	movlb	57	; () banked
 21031  017504  9796               	bcf	150,3,b	;volatile
 21032                           
 21033                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21034  017506  0E1A               	movlw	low _UART2_Transmit_ISR
 21035  017508  6EE6               	movwf	postinc1,c
 21036  01750A  0E7C               	movlw	high _UART2_Transmit_ISR
 21037  01750C  6EE6               	movwf	postinc1,c
 21038  01750E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21039  017510  6EE6               	movwf	postinc1,c
 21040  017512  EC74  F0BE         	call	_UART2_SetTxInterruptHandler	;wreg free
 21041                           
 21042                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21043  017516  013D               	movlb	61	; () banked
 21044  017518  6BD4               	clrf	212,b	;volatile
 21045                           
 21046                           ; BSR set to: 61
 21047                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21048  01751A  6BD6               	clrf	214,b	;volatile
 21049                           
 21050                           ; BSR set to: 61
 21051                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21052  01751C  6BD8               	clrf	216,b	;volatile
 21053                           
 21054                           ; BSR set to: 61
 21055                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21056  01751E  0EB0               	movlw	176
 21057  017520  6FDA               	movwf	218,b	;volatile
 21058                           
 21059                           ; BSR set to: 61
 21060                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21061  017522  0E80               	movlw	128
 21062  017524  6FDB               	movwf	219,b	;volatile
 21063                           
 21064                           ; BSR set to: 61
 21065                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21066  017526  6BDC               	clrf	220,b	;volatile
 21067                           
 21068                           ; BSR set to: 61
 21069                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21070  017528  0E82               	movlw	130
 21071  01752A  6FDD               	movwf	221,b	;volatile
 21072                           
 21073                           ; BSR set to: 61
 21074                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21075  01752C  0E06               	movlw	6
 21076  01752E  6FDE               	movwf	222,b	;volatile
 21077                           
 21078                           ; BSR set to: 61
 21079                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21080  017530  6BDF               	clrf	223,b	;volatile
 21081                           
 21082                           ; BSR set to: 61
 21083                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21084  017532  6BE0               	clrf	224,b	;volatile
 21085                           
 21086                           ; BSR set to: 61
 21087                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21088  017534  6BE1               	clrf	225,b	;volatile
 21089                           
 21090                           ; BSR set to: 61
 21091                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21092  017536  6BE2               	clrf	226,b	;volatile
 21093                           
 21094                           ; BSR set to: 61
 21095                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21096  017538  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 21097                           
 21098                           ; BSR set to: 61
 21099                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21100  01753A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 21101                           
 21102                           ; BSR set to: 61
 21103                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21104  01753C  0E40               	movlw	64
 21105  01753E  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21106                           
 21107                           ; BSR set to: 61
 21108                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21109  017540  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 21110                           
 21111                           ; BSR set to: 61
 21112                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21113  017542  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 21114                           
 21115                           ; BSR set to: 61
 21116                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21117  017544  6A29               	clrf	_uart2RxCount^0,c	;volatile
 21118                           
 21119                           ; BSR set to: 61
 21120                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21121  017546  0139               	movlb	57	; () banked
 21122  017548  8596               	bsf	150,2,b	;volatile
 21123                           
 21124                           ; BSR set to: 57
 21125                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21126  01754A  0012               	return		;funcret
 21127  01754C                     __end_of_UART2_Initialize:
 21128                           	opt callstack 0
 21129                           
 21130 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21131 ;; Defined at:
 21132 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21133 ;; Parameters:    Size  Location     Type
 21134 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21135 ;;		 -> UART2_Transmit_ISR(1), 
 21136 ;; Auto vars:     Size  Location     Type
 21137 ;;		None
 21138 ;; Return value:  Size  Location     Type
 21139 ;;                  1  [STACK] void 
 21140 ;; Registers used:
 21141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21142 ;; Tracked objects:
 21143 ;;		On entry : 3F/39
 21144 ;;		On exit  : 0/0
 21145 ;;		Unchanged: 0/0
 21146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;Total ram usage:        0 bytes
 21152 ;; Hardware stack levels used:    1
 21153 ;; Hardware stack levels required when called:    6
 21154 ;; This function calls:
 21155 ;;		Nothing
 21156 ;; This function is called by:
 21157 ;;		_UART2_Initialize
 21158 ;; This function uses a reentrant model
 21159 ;;
 21160                           
 21161                           	psect	text85
 21162  017CE8                     __ptext85:
 21163                           	opt callstack 0
 21164  017CE8                     _UART2_SetTxInterruptHandler:
 21165                           	opt callstack 22
 21166                           
 21167                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21168                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21169                           
 21170                           ; BSR set to: 57
 21171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21172                           ;incstack = 0
 21173  017CE8  50E1               	movf	fsr1l,w,c
 21174  017CEA  0FFD               	addlw	-3
 21175  017CEC  6ED9               	movwf	fsr2l,c
 21176  017CEE  50E2               	movf	fsr1h,w,c
 21177  017CF0  6EDA               	movwf	fsr2h,c
 21178  017CF2  0EFF               	movlw	255
 21179  017CF4  22DA               	addwfc	fsr2h,f,c
 21180  017CF6  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 21181  017CFC  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 21182  017D02  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 21183                           
 21184                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21185  017D08  52E5               	movf	postdec1,f,c
 21186  017D0A  52E5               	movf	postdec1,f,c
 21187  017D0C  52E5               	movf	postdec1,f,c
 21188  017D0E  0012               	return		;funcret
 21189  017D10                     __end_of_UART2_SetTxInterruptHandler:
 21190                           	opt callstack 0
 21191                           
 21192 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21193 ;; Defined at:
 21194 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21195 ;; Parameters:    Size  Location     Type
 21196 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21197 ;;		 -> UART2_Receive_ISR(1), 
 21198 ;; Auto vars:     Size  Location     Type
 21199 ;;		None
 21200 ;; Return value:  Size  Location     Type
 21201 ;;                  1  [STACK] void 
 21202 ;; Registers used:
 21203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21204 ;; Tracked objects:
 21205 ;;		On entry : 3F/39
 21206 ;;		On exit  : 0/0
 21207 ;;		Unchanged: 0/0
 21208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;Total ram usage:        0 bytes
 21214 ;; Hardware stack levels used:    1
 21215 ;; Hardware stack levels required when called:    6
 21216 ;; This function calls:
 21217 ;;		Nothing
 21218 ;; This function is called by:
 21219 ;;		_UART2_Initialize
 21220 ;; This function uses a reentrant model
 21221 ;;
 21222                           
 21223                           	psect	text86
 21224  017D10                     __ptext86:
 21225                           	opt callstack 0
 21226  017D10                     _UART2_SetRxInterruptHandler:
 21227                           	opt callstack 22
 21228                           
 21229                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21230                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21231                           
 21232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21233                           ;incstack = 0
 21234  017D10  50E1               	movf	fsr1l,w,c
 21235  017D12  0FFD               	addlw	-3
 21236  017D14  6ED9               	movwf	fsr2l,c
 21237  017D16  50E2               	movf	fsr1h,w,c
 21238  017D18  6EDA               	movwf	fsr2h,c
 21239  017D1A  0EFF               	movlw	255
 21240  017D1C  22DA               	addwfc	fsr2h,f,c
 21241  017D1E  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 21242  017D24  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 21243  017D2A  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 21244                           
 21245                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21246  017D30  52E5               	movf	postdec1,f,c
 21247  017D32  52E5               	movf	postdec1,f,c
 21248  017D34  52E5               	movf	postdec1,f,c
 21249  017D36  0012               	return		;funcret
 21250  017D38                     __end_of_UART2_SetRxInterruptHandler:
 21251                           	opt callstack 0
 21252                           
 21253 ;; *************** function _UART1_Initialize *****************
 21254 ;; Defined at:
 21255 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21256 ;; Parameters:    Size  Location     Type
 21257 ;;		None
 21258 ;; Auto vars:     Size  Location     Type
 21259 ;;		None
 21260 ;; Return value:  Size  Location     Type
 21261 ;;                  1  [STACK] void 
 21262 ;; Registers used:
 21263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21264 ;; Tracked objects:
 21265 ;;		On entry : 0/39
 21266 ;;		On exit  : 3F/39
 21267 ;;		Unchanged: 0/0
 21268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21273 ;;Total ram usage:        0 bytes
 21274 ;; Hardware stack levels used:    1
 21275 ;; Hardware stack levels required when called:    7
 21276 ;; This function calls:
 21277 ;;		_UART1_SetRxInterruptHandler
 21278 ;;		_UART1_SetTxInterruptHandler
 21279 ;; This function is called by:
 21280 ;;		_SYSTEM_Initialize
 21281 ;; This function uses a reentrant model
 21282 ;;
 21283                           
 21284                           	psect	text87
 21285  0173C6                     __ptext87:
 21286                           	opt callstack 0
 21287  0173C6                     _UART1_Initialize:
 21288                           	opt callstack 22
 21289                           
 21290                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21291                           
 21292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21293                           ;incstack = 0
 21294  0173C6  0139               	movlb	57	; () banked
 21295  0173C8  9793               	bcf	147,3,b	;volatile
 21296                           
 21297                           ; BSR set to: 57
 21298                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21299  0173CA  0E3C               	movlw	low _UART1_Receive_ISR
 21300  0173CC  6EE6               	movwf	postinc1,c
 21301  0173CE  0E80               	movlw	high _UART1_Receive_ISR
 21302  0173D0  6EE6               	movwf	postinc1,c
 21303  0173D2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21304  0173D4  6EE6               	movwf	postinc1,c
 21305  0173D6  ECB0  F0BE         	call	_UART1_SetRxInterruptHandler	;wreg free
 21306                           
 21307                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21308  0173DA  0139               	movlb	57	; () banked
 21309  0173DC  9993               	bcf	147,4,b	;volatile
 21310                           
 21311                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21312  0173DE  0EEE               	movlw	low _UART1_Transmit_ISR
 21313  0173E0  6EE6               	movwf	postinc1,c
 21314  0173E2  0E7B               	movlw	high _UART1_Transmit_ISR
 21315  0173E4  6EE6               	movwf	postinc1,c
 21316  0173E6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21317  0173E8  6EE6               	movwf	postinc1,c
 21318  0173EA  EC9C  F0BE         	call	_UART1_SetTxInterruptHandler	;wreg free
 21319                           
 21320                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21321  0173EE  013D               	movlb	61	; () banked
 21322  0173F0  6BEC               	clrf	236,b	;volatile
 21323                           
 21324                           ; BSR set to: 61
 21325                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21326  0173F2  6BED               	clrf	237,b	;volatile
 21327                           
 21328                           ; BSR set to: 61
 21329                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21330  0173F4  6BEE               	clrf	238,b	;volatile
 21331                           
 21332                           ; BSR set to: 61
 21333                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21334  0173F6  6BEF               	clrf	239,b	;volatile
 21335                           
 21336                           ; BSR set to: 61
 21337                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21338  0173F8  6BF0               	clrf	240,b	;volatile
 21339                           
 21340                           ; BSR set to: 61
 21341                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21342  0173FA  6BF1               	clrf	241,b	;volatile
 21343                           
 21344                           ; BSR set to: 61
 21345                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21346  0173FC  0EB0               	movlw	176
 21347  0173FE  6FF2               	movwf	242,b	;volatile
 21348                           
 21349                           ; BSR set to: 61
 21350                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21351  017400  0E80               	movlw	128
 21352  017402  6FF3               	movwf	243,b	;volatile
 21353                           
 21354                           ; BSR set to: 61
 21355                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21356  017404  6BF4               	clrf	244,b	;volatile
 21357                           
 21358                           ; BSR set to: 61
 21359                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21360  017406  0E82               	movlw	130
 21361  017408  6FF5               	movwf	245,b	;volatile
 21362                           
 21363                           ; BSR set to: 61
 21364                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21365  01740A  0E06               	movlw	6
 21366  01740C  6FF6               	movwf	246,b	;volatile
 21367                           
 21368                           ; BSR set to: 61
 21369                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21370  01740E  6BF7               	clrf	247,b	;volatile
 21371                           
 21372                           ; BSR set to: 61
 21373                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21374  017410  6BF8               	clrf	248,b	;volatile
 21375                           
 21376                           ; BSR set to: 61
 21377                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21378  017412  6BF9               	clrf	249,b	;volatile
 21379                           
 21380                           ; BSR set to: 61
 21381                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21382  017414  6BFA               	clrf	250,b	;volatile
 21383                           
 21384                           ; BSR set to: 61
 21385                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21386  017416  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21387                           
 21388                           ; BSR set to: 61
 21389                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21390  017418  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21391                           
 21392                           ; BSR set to: 61
 21393                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21394  01741A  0E40               	movlw	64
 21395  01741C  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21396                           
 21397                           ; BSR set to: 61
 21398                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21399  01741E  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21400                           
 21401                           ; BSR set to: 61
 21402                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21403  017420  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21404                           
 21405                           ; BSR set to: 61
 21406                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21407  017422  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21408                           
 21409                           ; BSR set to: 61
 21410                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21411  017424  0139               	movlb	57	; () banked
 21412  017426  8793               	bsf	147,3,b	;volatile
 21413                           
 21414                           ; BSR set to: 57
 21415                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21416  017428  0012               	return		;funcret
 21417  01742A                     __end_of_UART1_Initialize:
 21418                           	opt callstack 0
 21419                           
 21420 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21421 ;; Defined at:
 21422 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21425 ;;		 -> UART1_Transmit_ISR(1), 
 21426 ;; Auto vars:     Size  Location     Type
 21427 ;;		None
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1  [STACK] void 
 21430 ;; Registers used:
 21431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21432 ;; Tracked objects:
 21433 ;;		On entry : 3F/39
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21441 ;;Total ram usage:        0 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:    6
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		_UART1_Initialize
 21448 ;; This function uses a reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text88
 21452  017D38                     __ptext88:
 21453                           	opt callstack 0
 21454  017D38                     _UART1_SetTxInterruptHandler:
 21455                           	opt callstack 22
 21456                           
 21457                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21458                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21459                           
 21460                           ; BSR set to: 57
 21461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21462                           ;incstack = 0
 21463  017D38  50E1               	movf	fsr1l,w,c
 21464  017D3A  0FFD               	addlw	-3
 21465  017D3C  6ED9               	movwf	fsr2l,c
 21466  017D3E  50E2               	movf	fsr1h,w,c
 21467  017D40  6EDA               	movwf	fsr2h,c
 21468  017D42  0EFF               	movlw	255
 21469  017D44  22DA               	addwfc	fsr2h,f,c
 21470  017D46  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21471  017D4C  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21472  017D52  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21473                           
 21474                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21475  017D58  52E5               	movf	postdec1,f,c
 21476  017D5A  52E5               	movf	postdec1,f,c
 21477  017D5C  52E5               	movf	postdec1,f,c
 21478  017D5E  0012               	return		;funcret
 21479  017D60                     __end_of_UART1_SetTxInterruptHandler:
 21480                           	opt callstack 0
 21481                           
 21482 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21483 ;; Defined at:
 21484 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21485 ;; Parameters:    Size  Location     Type
 21486 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21487 ;;		 -> UART1_Receive_ISR(1), 
 21488 ;; Auto vars:     Size  Location     Type
 21489 ;;		None
 21490 ;; Return value:  Size  Location     Type
 21491 ;;                  1  [STACK] void 
 21492 ;; Registers used:
 21493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21494 ;; Tracked objects:
 21495 ;;		On entry : 3F/39
 21496 ;;		On exit  : 0/0
 21497 ;;		Unchanged: 0/0
 21498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21503 ;;Total ram usage:        0 bytes
 21504 ;; Hardware stack levels used:    1
 21505 ;; Hardware stack levels required when called:    6
 21506 ;; This function calls:
 21507 ;;		Nothing
 21508 ;; This function is called by:
 21509 ;;		_UART1_Initialize
 21510 ;; This function uses a reentrant model
 21511 ;;
 21512                           
 21513                           	psect	text89
 21514  017D60                     __ptext89:
 21515                           	opt callstack 0
 21516  017D60                     _UART1_SetRxInterruptHandler:
 21517                           	opt callstack 22
 21518                           
 21519                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21520                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21521                           
 21522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21523                           ;incstack = 0
 21524  017D60  50E1               	movf	fsr1l,w,c
 21525  017D62  0FFD               	addlw	-3
 21526  017D64  6ED9               	movwf	fsr2l,c
 21527  017D66  50E2               	movf	fsr1h,w,c
 21528  017D68  6EDA               	movwf	fsr2h,c
 21529  017D6A  0EFF               	movlw	255
 21530  017D6C  22DA               	addwfc	fsr2h,f,c
 21531  017D6E  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21532  017D74  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21533  017D7A  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21534                           
 21535                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21536  017D80  52E5               	movf	postdec1,f,c
 21537  017D82  52E5               	movf	postdec1,f,c
 21538  017D84  52E5               	movf	postdec1,f,c
 21539  017D86  0012               	return		;funcret
 21540  017D88                     __end_of_UART1_SetRxInterruptHandler:
 21541                           	opt callstack 0
 21542                           
 21543 ;; *************** function _TMR6_Initialize *****************
 21544 ;; Defined at:
 21545 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21546 ;; Parameters:    Size  Location     Type
 21547 ;;		None
 21548 ;; Auto vars:     Size  Location     Type
 21549 ;;		None
 21550 ;; Return value:  Size  Location     Type
 21551 ;;                  1  [STACK] void 
 21552 ;; Registers used:
 21553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21554 ;; Tracked objects:
 21555 ;;		On entry : 3F/39
 21556 ;;		On exit  : 0/0
 21557 ;;		Unchanged: 0/0
 21558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21563 ;;Total ram usage:        0 bytes
 21564 ;; Hardware stack levels used:    1
 21565 ;; Hardware stack levels required when called:    7
 21566 ;; This function calls:
 21567 ;;		_TMR6_SetInterruptHandler
 21568 ;; This function is called by:
 21569 ;;		_SYSTEM_Initialize
 21570 ;; This function uses a reentrant model
 21571 ;;
 21572                           
 21573                           	psect	text90
 21574  017C46                     __ptext90:
 21575                           	opt callstack 0
 21576  017C46                     _TMR6_Initialize:
 21577                           	opt callstack 22
 21578                           
 21579                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21580                           
 21581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21582                           ;incstack = 0
 21583  017C46  0E01               	movlw	1
 21584  017C48  6E96               	movwf	150,c	;volatile
 21585                           
 21586                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21587  017C4A  6A95               	clrf	149,c	;volatile
 21588                           
 21589                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21590  017C4C  6A97               	clrf	151,c	;volatile
 21591                           
 21592                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21593  017C4E  0E7C               	movlw	124
 21594  017C50  6E93               	movwf	147,c	;volatile
 21595                           
 21596                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21597  017C52  6A92               	clrf	146,c	;volatile
 21598                           
 21599                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21600  017C54  0139               	movlb	57	; () banked
 21601  017C56  91A9               	bcf	169,0,b	;volatile
 21602                           
 21603                           ; BSR set to: 57
 21604                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21605  017C58  8199               	bsf	153,0,b	;volatile
 21606                           
 21607                           ; BSR set to: 57
 21608                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21609  017C5A  0E60               	movlw	low _TMR6_DefaultInterruptHandler
 21610  017C5C  6EE6               	movwf	postinc1,c
 21611  017C5E  0E78               	movlw	high _TMR6_DefaultInterruptHandler
 21612  017C60  6EE6               	movwf	postinc1,c
 21613  017C62  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21614  017C64  6EE6               	movwf	postinc1,c
 21615  017C66  ECC4  F0BE         	call	_TMR6_SetInterruptHandler	;wreg free
 21616                           
 21617                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21618  017C6A  0EE0               	movlw	224
 21619  017C6C  6E94               	movwf	148,c	;volatile
 21620                           
 21621                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21622  017C6E  0012               	return		;funcret
 21623  017C70                     __end_of_TMR6_Initialize:
 21624                           	opt callstack 0
 21625                           
 21626 ;; *************** function _TMR6_SetInterruptHandler *****************
 21627 ;; Defined at:
 21628 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21631 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21632 ;; Auto vars:     Size  Location     Type
 21633 ;;		None
 21634 ;; Return value:  Size  Location     Type
 21635 ;;                  1  [STACK] void 
 21636 ;; Registers used:
 21637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21638 ;; Tracked objects:
 21639 ;;		On entry : 3F/39
 21640 ;;		On exit  : 0/0
 21641 ;;		Unchanged: 0/0
 21642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21647 ;;Total ram usage:        0 bytes
 21648 ;; Hardware stack levels used:    1
 21649 ;; Hardware stack levels required when called:    6
 21650 ;; This function calls:
 21651 ;;		Nothing
 21652 ;; This function is called by:
 21653 ;;		_TMR6_Initialize
 21654 ;; This function uses a reentrant model
 21655 ;;
 21656                           
 21657                           	psect	text91
 21658  017D88                     __ptext91:
 21659                           	opt callstack 0
 21660  017D88                     _TMR6_SetInterruptHandler:
 21661                           	opt callstack 22
 21662                           
 21663                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21664                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21665                           
 21666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21667                           ;incstack = 0
 21668  017D88  50E1               	movf	fsr1l,w,c
 21669  017D8A  0FFD               	addlw	-3
 21670  017D8C  6ED9               	movwf	fsr2l,c
 21671  017D8E  50E2               	movf	fsr1h,w,c
 21672  017D90  6EDA               	movwf	fsr2h,c
 21673  017D92  0EFF               	movlw	255
 21674  017D94  22DA               	addwfc	fsr2h,f,c
 21675  017D96  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21676  017D9C  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21677  017DA2  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21678                           
 21679                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21680  017DA8  52E5               	movf	postdec1,f,c
 21681  017DAA  52E5               	movf	postdec1,f,c
 21682  017DAC  52E5               	movf	postdec1,f,c
 21683  017DAE  0012               	return		;funcret
 21684  017DB0                     __end_of_TMR6_SetInterruptHandler:
 21685                           	opt callstack 0
 21686                           
 21687 ;; *************** function _TMR5_Initialize *****************
 21688 ;; Defined at:
 21689 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21690 ;; Parameters:    Size  Location     Type
 21691 ;;		None
 21692 ;; Auto vars:     Size  Location     Type
 21693 ;;		None
 21694 ;; Return value:  Size  Location     Type
 21695 ;;                  1  [STACK] void 
 21696 ;; Registers used:
 21697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21698 ;; Tracked objects:
 21699 ;;		On entry : 0/39
 21700 ;;		On exit  : 0/0
 21701 ;;		Unchanged: 0/0
 21702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21707 ;;Total ram usage:        0 bytes
 21708 ;; Hardware stack levels used:    1
 21709 ;; Hardware stack levels required when called:    7
 21710 ;; This function calls:
 21711 ;;		_TMR5_SetInterruptHandler
 21712 ;; This function is called by:
 21713 ;;		_SYSTEM_Initialize
 21714 ;; This function uses a reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text92
 21718  01781A                     __ptext92:
 21719                           	opt callstack 0
 21720  01781A                     _TMR5_Initialize:
 21721                           	opt callstack 22
 21722                           
 21723                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21724                           
 21725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21726                           ;incstack = 0
 21727  01781A  6A9B               	clrf	155,c	;volatile
 21728                           
 21729                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21730  01781C  6A9C               	clrf	156,c	;volatile
 21731                           
 21732                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21733  01781E  0E01               	movlw	1
 21734  017820  6E9D               	movwf	157,c	;volatile
 21735                           
 21736                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21737  017822  0E63               	movlw	99
 21738  017824  6E99               	movwf	153,c	;volatile
 21739                           
 21740                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21741  017826  0EC0               	movlw	192
 21742  017828  6E98               	movwf	152,c	;volatile
 21743                           
 21744                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21745  01782A  5098               	movf	152,w,c	;volatile
 21746  01782C  006F FE64  F035    	movff	16281,btemp	;volatile
 21747  017832  6A36               	clrf	(btemp+1)^0,c
 21748  017834  0060  F0D4  F036   	movff	btemp,btemp+1
 21749  01783A  6A35               	clrf	btemp^0,c
 21750  01783C  1035               	iorwf	btemp^0,w,c
 21751  01783E  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21752  017840  5036               	movf	(btemp+1)^0,w,c
 21753  017842  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21754                           
 21755                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21756  017844  0139               	movlb	57	; () banked
 21757  017846  9DA8               	bcf	168,6,b	;volatile
 21758                           
 21759                           ; BSR set to: 57
 21760                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21761  017848  8D98               	bsf	152,6,b	;volatile
 21762                           
 21763                           ; BSR set to: 57
 21764                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21765  01784A  0ECA               	movlw	low _TMR5_DefaultInterruptHandler
 21766  01784C  6EE6               	movwf	postinc1,c
 21767  01784E  0E80               	movlw	high _TMR5_DefaultInterruptHandler
 21768  017850  6EE6               	movwf	postinc1,c
 21769  017852  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21770  017854  6EE6               	movwf	postinc1,c
 21771  017856  ECD8  F0BE         	call	_TMR5_SetInterruptHandler	;wreg free
 21772                           
 21773                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21774  01785A  0E31               	movlw	49
 21775  01785C  6E9A               	movwf	154,c	;volatile
 21776                           
 21777                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21778  01785E  0012               	return		;funcret
 21779  017860                     __end_of_TMR5_Initialize:
 21780                           	opt callstack 0
 21781                           
 21782 ;; *************** function _TMR5_SetInterruptHandler *****************
 21783 ;; Defined at:
 21784 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21785 ;; Parameters:    Size  Location     Type
 21786 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21787 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21788 ;; Auto vars:     Size  Location     Type
 21789 ;;		None
 21790 ;; Return value:  Size  Location     Type
 21791 ;;                  1  [STACK] void 
 21792 ;; Registers used:
 21793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21794 ;; Tracked objects:
 21795 ;;		On entry : 3F/39
 21796 ;;		On exit  : 0/0
 21797 ;;		Unchanged: 0/0
 21798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;Total ram usage:        0 bytes
 21804 ;; Hardware stack levels used:    1
 21805 ;; Hardware stack levels required when called:    6
 21806 ;; This function calls:
 21807 ;;		Nothing
 21808 ;; This function is called by:
 21809 ;;		_TMR5_Initialize
 21810 ;; This function uses a reentrant model
 21811 ;;
 21812                           
 21813                           	psect	text93
 21814  017DB0                     __ptext93:
 21815                           	opt callstack 0
 21816  017DB0                     _TMR5_SetInterruptHandler:
 21817                           	opt callstack 22
 21818                           
 21819                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21820                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21821                           
 21822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21823                           ;incstack = 0
 21824  017DB0  50E1               	movf	fsr1l,w,c
 21825  017DB2  0FFD               	addlw	-3
 21826  017DB4  6ED9               	movwf	fsr2l,c
 21827  017DB6  50E2               	movf	fsr1h,w,c
 21828  017DB8  6EDA               	movwf	fsr2h,c
 21829  017DBA  0EFF               	movlw	255
 21830  017DBC  22DA               	addwfc	fsr2h,f,c
 21831  017DBE  006F FF78  F0D3    	movff	postinc2,_TMR5_InterruptHandler
 21832  017DC4  006F FF78  F0D4    	movff	postinc2,_TMR5_InterruptHandler+1
 21833  017DCA  006F FF74  F0D5    	movff	postdec2,_TMR5_InterruptHandler+2
 21834                           
 21835                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21836  017DD0  52E5               	movf	postdec1,f,c
 21837  017DD2  52E5               	movf	postdec1,f,c
 21838  017DD4  52E5               	movf	postdec1,f,c
 21839  017DD6  0012               	return		;funcret
 21840  017DD8                     __end_of_TMR5_SetInterruptHandler:
 21841                           	opt callstack 0
 21842                           
 21843 ;; *************** function _TMR2_Initialize *****************
 21844 ;; Defined at:
 21845 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21846 ;; Parameters:    Size  Location     Type
 21847 ;;		None
 21848 ;; Auto vars:     Size  Location     Type
 21849 ;;		None
 21850 ;; Return value:  Size  Location     Type
 21851 ;;                  1  [STACK] void 
 21852 ;; Registers used:
 21853 ;;		wreg, status,2
 21854 ;; Tracked objects:
 21855 ;;		On entry : 3F/3F
 21856 ;;		On exit  : 3F/39
 21857 ;;		Unchanged: 0/0
 21858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;Total ram usage:        0 bytes
 21864 ;; Hardware stack levels used:    1
 21865 ;; Hardware stack levels required when called:    6
 21866 ;; This function calls:
 21867 ;;		Nothing
 21868 ;; This function is called by:
 21869 ;;		_SYSTEM_Initialize
 21870 ;; This function uses a reentrant model
 21871 ;;
 21872                           
 21873                           	psect	text94
 21874  018116                     __ptext94:
 21875                           	opt callstack 0
 21876  018116                     _TMR2_Initialize:
 21877                           	opt callstack 23
 21878                           
 21879                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21880                           
 21881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21882                           ;incstack = 0
 21883  018116  0E01               	movlw	1
 21884  018118  6EAE               	movwf	174,c	;volatile
 21885                           
 21886                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21887  01811A  6AAD               	clrf	173,c	;volatile
 21888                           
 21889                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21890  01811C  6AAF               	clrf	175,c	;volatile
 21891                           
 21892                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21893  01811E  0E63               	movlw	99
 21894  018120  6EAB               	movwf	171,c	;volatile
 21895                           
 21896                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21897  018122  6AAA               	clrf	170,c	;volatile
 21898                           
 21899                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21900  018124  0139               	movlb	57	; () banked
 21901  018126  95A4               	bcf	164,2,b	;volatile
 21902                           
 21903                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21904  018128  0EC0               	movlw	192
 21905  01812A  6EAC               	movwf	172,c	;volatile
 21906                           
 21907                           ; BSR set to: 57
 21908                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21909  01812C  0012               	return		;funcret
 21910  01812E                     __end_of_TMR2_Initialize:
 21911                           	opt callstack 0
 21912                           
 21913 ;; *************** function _SPI1_Initialize *****************
 21914 ;; Defined at:
 21915 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21916 ;; Parameters:    Size  Location     Type
 21917 ;;		None
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;		None
 21920 ;; Return value:  Size  Location     Type
 21921 ;;                  1  [STACK] void 
 21922 ;; Registers used:
 21923 ;;		wreg, status,2
 21924 ;; Tracked objects:
 21925 ;;		On entry : 3F/39
 21926 ;;		On exit  : 3F/3D
 21927 ;;		Unchanged: 0/0
 21928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21933 ;;Total ram usage:        0 bytes
 21934 ;; Hardware stack levels used:    1
 21935 ;; Hardware stack levels required when called:    6
 21936 ;; This function calls:
 21937 ;;		Nothing
 21938 ;; This function is called by:
 21939 ;;		_SYSTEM_Initialize
 21940 ;; This function uses a reentrant model
 21941 ;;
 21942                           
 21943                           	psect	text95
 21944  01812E                     __ptext95:
 21945                           	opt callstack 0
 21946  01812E                     _SPI1_Initialize:
 21947                           	opt callstack 23
 21948                           
 21949                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21950                           
 21951                           ; BSR set to: 57
 21952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21953                           ;incstack = 0
 21954  01812E  0E40               	movlw	64
 21955  018130  013D               	movlb	61	; () banked
 21956  018132  6F15               	movwf	21,b	;volatile
 21957                           
 21958                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21959  018134  0E03               	movlw	3
 21960  018136  6F16               	movwf	22,b	;volatile
 21961                           
 21962                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21963  018138  0E4F               	movlw	79
 21964  01813A  6F19               	movwf	25,b	;volatile
 21965                           
 21966                           ; BSR set to: 61
 21967                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21968  01813C  6B1C               	clrf	28,b	;volatile
 21969                           
 21970                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21971  01813E  0E83               	movlw	131
 21972  018140  6F14               	movwf	20,b	;volatile
 21973                           
 21974                           ; BSR set to: 61
 21975                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21976  018142  0012               	return		;funcret
 21977  018144                     __end_of_SPI1_Initialize:
 21978                           	opt callstack 0
 21979                           
 21980 ;; *************** function _PWM8_Initialize *****************
 21981 ;; Defined at:
 21982 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21983 ;; Parameters:    Size  Location     Type
 21984 ;;		None
 21985 ;; Auto vars:     Size  Location     Type
 21986 ;;		None
 21987 ;; Return value:  Size  Location     Type
 21988 ;;                  1  [STACK] void 
 21989 ;; Registers used:
 21990 ;;		wreg, status,2
 21991 ;; Tracked objects:
 21992 ;;		On entry : 0/3E
 21993 ;;		On exit  : 3F/3F
 21994 ;;		Unchanged: 0/0
 21995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22000 ;;Total ram usage:        0 bytes
 22001 ;; Hardware stack levels used:    1
 22002 ;; Hardware stack levels required when called:    6
 22003 ;; This function calls:
 22004 ;;		Nothing
 22005 ;; This function is called by:
 22006 ;;		_SYSTEM_Initialize
 22007 ;; This function uses a reentrant model
 22008 ;;
 22009                           
 22010                           	psect	text96
 22011  018144                     __ptext96:
 22012                           	opt callstack 0
 22013  018144                     _PWM8_Initialize:
 22014                           	opt callstack 23
 22015                           
 22016                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22017                           
 22018                           ; BSR set to: 61
 22019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22020                           ;incstack = 0
 22021  018144  0E80               	movlw	128
 22022  018146  6E62               	movwf	98,c	;volatile
 22023                           
 22024                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22025  018148  6A61               	clrf	97,c	;volatile
 22026                           
 22027                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22028  01814A  0E40               	movlw	64
 22029  01814C  6E60               	movwf	96,c	;volatile
 22030                           
 22031                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22032  01814E  013F               	movlb	63	; () banked
 22033  018150  515F               	movf	95,w,b	;volatile
 22034  018152  0B3F               	andlw	-193
 22035  018154  0940               	iorlw	64
 22036  018156  6F5F               	movwf	95,b	;volatile
 22037                           
 22038                           ; BSR set to: 63
 22039                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22040  018158  0012               	return		;funcret
 22041  01815A                     __end_of_PWM8_Initialize:
 22042                           	opt callstack 0
 22043                           
 22044 ;; *************** function _PMD_Initialize *****************
 22045 ;; Defined at:
 22046 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22047 ;; Parameters:    Size  Location     Type
 22048 ;;		None
 22049 ;; Auto vars:     Size  Location     Type
 22050 ;;		None
 22051 ;; Return value:  Size  Location     Type
 22052 ;;                  1  [STACK] void 
 22053 ;; Registers used:
 22054 ;;		None
 22055 ;; Tracked objects:
 22056 ;;		On entry : 3F/39
 22057 ;;		On exit  : 3F/39
 22058 ;;		Unchanged: 0/0
 22059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22064 ;;Total ram usage:        0 bytes
 22065 ;; Hardware stack levels used:    1
 22066 ;; Hardware stack levels required when called:    6
 22067 ;; This function calls:
 22068 ;;		Nothing
 22069 ;; This function is called by:
 22070 ;;		_SYSTEM_Initialize
 22071 ;; This function uses a reentrant model
 22072 ;;
 22073                           
 22074                           	psect	text97
 22075  018170                     __ptext97:
 22076                           	opt callstack 0
 22077  018170                     _PMD_Initialize:
 22078                           	opt callstack 23
 22079                           
 22080                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22081                           
 22082                           ; BSR set to: 63
 22083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22084                           ;incstack = 0
 22085  018170  0139               	movlb	57	; () banked
 22086  018172  6BC0               	clrf	192,b	;volatile
 22087                           
 22088                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22089  018174  6BC1               	clrf	193,b	;volatile
 22090                           
 22091                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22092  018176  6BC2               	clrf	194,b	;volatile
 22093                           
 22094                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22095  018178  6BC3               	clrf	195,b	;volatile
 22096                           
 22097                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22098  01817A  6BC4               	clrf	196,b	;volatile
 22099                           
 22100                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22101  01817C  6BC5               	clrf	197,b	;volatile
 22102                           
 22103                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22104  01817E  6BC6               	clrf	198,b	;volatile
 22105                           
 22106                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22107  018180  6BC7               	clrf	199,b	;volatile
 22108                           
 22109                           ; BSR set to: 57
 22110                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22111  018182  0012               	return		;funcret
 22112  018184                     __end_of_PMD_Initialize:
 22113                           	opt callstack 0
 22114                           
 22115 ;; *************** function _PIN_MANAGER_Initialize *****************
 22116 ;; Defined at:
 22117 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22118 ;; Parameters:    Size  Location     Type
 22119 ;;		None
 22120 ;; Auto vars:     Size  Location     Type
 22121 ;;		None
 22122 ;; Return value:  Size  Location     Type
 22123 ;;                  1  [STACK] void 
 22124 ;; Registers used:
 22125 ;;		wreg, status,2
 22126 ;; Tracked objects:
 22127 ;;		On entry : 3F/39
 22128 ;;		On exit  : 3F/3A
 22129 ;;		Unchanged: 0/0
 22130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22135 ;;Total ram usage:        0 bytes
 22136 ;; Hardware stack levels used:    1
 22137 ;; Hardware stack levels required when called:    6
 22138 ;; This function calls:
 22139 ;;		Nothing
 22140 ;; This function is called by:
 22141 ;;		_SYSTEM_Initialize
 22142 ;; This function uses a reentrant model
 22143 ;;
 22144                           
 22145                           	psect	text98
 22146  016F28                     __ptext98:
 22147                           	opt callstack 0
 22148  016F28                     _PIN_MANAGER_Initialize:
 22149                           	opt callstack 23
 22150                           
 22151                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22152                           
 22153                           ; BSR set to: 57
 22154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22155                           ;incstack = 0
 22156  016F28  0E07               	movlw	7
 22157  016F2A  6EBE               	movwf	190,c	;volatile
 22158                           
 22159                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 22160  016F2C  6ABD               	clrf	189,c	;volatile
 22161                           
 22162                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22163  016F2E  6ABA               	clrf	186,c	;volatile
 22164                           
 22165                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22166  016F30  6ABF               	clrf	191,c	;volatile
 22167                           
 22168                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22169  016F32  6ABB               	clrf	187,c	;volatile
 22170                           
 22171                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22172  016F34  0E07               	movlw	7
 22173  016F36  6EBC               	movwf	188,c	;volatile
 22174                           
 22175                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22176  016F38  6AC6               	clrf	198,c	;volatile
 22177                           
 22178                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22179  016F3A  0E0F               	movlw	15
 22180  016F3C  6EC7               	movwf	199,c	;volatile
 22181                           
 22182                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22183  016F3E  68C2               	setf	194,c	;volatile
 22184                           
 22185                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22186  016F40  0EBF               	movlw	191
 22187  016F42  6EC3               	movwf	195,c	;volatile
 22188                           
 22189                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22190  016F44  0E90               	movlw	144
 22191  016F46  6EC4               	movwf	196,c	;volatile
 22192                           
 22193                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22194  016F48  0E0C               	movlw	12
 22195  016F4A  6EC5               	movwf	197,c	;volatile
 22196                           
 22197                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22198  016F4C  013A               	movlb	58	; () banked
 22199  016F4E  6B70               	clrf	112,b	;volatile
 22200                           
 22201                           ; BSR set to: 58
 22202                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22203  016F50  6B60               	clrf	96,b	;volatile
 22204                           
 22205                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22206  016F52  0E3C               	movlw	60
 22207  016F54  6F50               	movwf	80,b	;volatile
 22208                           
 22209                           ; BSR set to: 58
 22210                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22211  016F56  6B80               	clrf	128,b	;volatile
 22212                           
 22213                           ; BSR set to: 58
 22214                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22215  016F58  6B90               	clrf	144,b	;volatile
 22216                           
 22217                           ; BSR set to: 58
 22218                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22219  016F5A  6940               	setf	64,b	;volatile
 22220                           
 22221                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22222  016F5C  0E0C               	movlw	12
 22223  016F5E  6F71               	movwf	113,b	;volatile
 22224                           
 22225                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22226  016F60  0E0F               	movlw	15
 22227  016F62  6F91               	movwf	145,b	;volatile
 22228                           
 22229                           ; BSR set to: 58
 22230                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22231  016F64  6B81               	clrf	129,b	;volatile
 22232                           
 22233                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 22234  016F66  0E87               	movlw	135
 22235  016F68  6F51               	movwf	81,b	;volatile
 22236                           
 22237                           ; BSR set to: 58
 22238                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22239  016F6A  6B41               	clrf	65,b	;volatile
 22240                           
 22241                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22242  016F6C  0E97               	movlw	151
 22243  016F6E  6F61               	movwf	97,b	;volatile
 22244                           
 22245                           ; BSR set to: 58
 22246                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22247  016F70  6B82               	clrf	130,b	;volatile
 22248                           
 22249                           ; BSR set to: 58
 22250                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22251  016F72  6B92               	clrf	146,b	;volatile
 22252                           
 22253                           ; BSR set to: 58
 22254                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22255  016F74  6B42               	clrf	66,b	;volatile
 22256                           
 22257                           ; BSR set to: 58
 22258                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22259  016F76  6B52               	clrf	82,b	;volatile
 22260                           
 22261                           ; BSR set to: 58
 22262                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22263  016F78  6B62               	clrf	98,b	;volatile
 22264                           
 22265                           ; BSR set to: 58
 22266                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22267  016F7A  6B72               	clrf	114,b	;volatile
 22268                           
 22269                           ; BSR set to: 58
 22270                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22271  016F7C  6943               	setf	67,b	;volatile
 22272                           
 22273                           ; BSR set to: 58
 22274                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22275  016F7E  6953               	setf	83,b	;volatile
 22276                           
 22277                           ; BSR set to: 58
 22278                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22279  016F80  6963               	setf	99,b	;volatile
 22280                           
 22281                           ; BSR set to: 58
 22282                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22283  016F82  6973               	setf	115,b	;volatile
 22284                           
 22285                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22286  016F84  0E07               	movlw	7
 22287  016F86  6F83               	movwf	131,b	;volatile
 22288                           
 22289                           ; BSR set to: 58
 22290                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22291  016F88  6993               	setf	147,b	;volatile
 22292                           
 22293                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22294  016F8A  0E0F               	movlw	15
 22295  016F8C  6FE8               	movwf	232,b	;volatile
 22296                           
 22297                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22298  016F8E  0E13               	movlw	19
 22299  016F90  6FDE               	movwf	222,b	;volatile
 22300                           
 22301                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22302  016F92  0E16               	movlw	22
 22303  016F94  6F0E               	movwf	14,b	;volatile
 22304                           
 22305                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22306  016F96  0E1E               	movlw	30
 22307  016F98  6F13               	movwf	19,b	;volatile
 22308                           
 22309                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22310  016F9A  0E08               	movlw	8
 22311  016F9C  6FC0               	movwf	192,b	;volatile
 22312                           
 22313                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22314  016F9E  0E10               	movlw	16
 22315  016FA0  6F19               	movwf	25,b	;volatile
 22316                           
 22317                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22318  016FA2  0E09               	movlw	9
 22319  016FA4  6FC1               	movwf	193,b	;volatile
 22320                           
 22321                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22322  016FA6  0E1F               	movlw	31
 22323  016FA8  6F15               	movwf	21,b	;volatile
 22324                           
 22325                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22326  016FAA  0E13               	movlw	19
 22327  016FAC  6F16               	movwf	22,b	;volatile
 22328                           
 22329                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22330  016FAE  0E17               	movlw	23
 22331  016FB0  6FE5               	movwf	229,b	;volatile
 22332                           
 22333                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22334  016FB2  0E14               	movlw	20
 22335  016FB4  6FDF               	movwf	223,b	;volatile
 22336                           
 22337                           ; BSR set to: 58
 22338                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22339  016FB6  0012               	return		;funcret
 22340  016FB8                     __end_of_PIN_MANAGER_Initialize:
 22341                           	opt callstack 0
 22342                           
 22343 ;; *************** function _OSCILLATOR_Initialize *****************
 22344 ;; Defined at:
 22345 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22346 ;; Parameters:    Size  Location     Type
 22347 ;;		None
 22348 ;; Auto vars:     Size  Location     Type
 22349 ;;		None
 22350 ;; Return value:  Size  Location     Type
 22351 ;;                  1  [STACK] void 
 22352 ;; Registers used:
 22353 ;;		wreg, status,2
 22354 ;; Tracked objects:
 22355 ;;		On entry : 3F/3A
 22356 ;;		On exit  : 3F/39
 22357 ;;		Unchanged: 0/0
 22358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;Total ram usage:        0 bytes
 22364 ;; Hardware stack levels used:    1
 22365 ;; Hardware stack levels required when called:    6
 22366 ;; This function calls:
 22367 ;;		Nothing
 22368 ;; This function is called by:
 22369 ;;		_SYSTEM_Initialize
 22370 ;; This function uses a reentrant model
 22371 ;;
 22372                           
 22373                           	psect	text99
 22374  01815A                     __ptext99:
 22375                           	opt callstack 0
 22376  01815A                     _OSCILLATOR_Initialize:
 22377                           	opt callstack 23
 22378                           
 22379                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22380                           
 22381                           ; BSR set to: 58
 22382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22383                           ;incstack = 0
 22384  01815A  0E20               	movlw	32
 22385  01815C  0139               	movlb	57	; () banked
 22386  01815E  6FD9               	movwf	217,b	;volatile
 22387                           
 22388                           ; BSR set to: 57
 22389                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22390  018160  6BDB               	clrf	219,b	;volatile
 22391                           
 22392                           ; BSR set to: 57
 22393                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22394  018162  6BDD               	clrf	221,b	;volatile
 22395                           
 22396                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22397  018164  0E02               	movlw	2
 22398  018166  6FDF               	movwf	223,b	;volatile
 22399                           
 22400                           ; BSR set to: 57
 22401                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22402  018168  6BDE               	clrf	222,b	;volatile
 22403  01816A                     l171:
 22404                           
 22405                           ; BSR set to: 57
 22406                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22407  01816A  B1DC               	btfsc	220,0,b	;volatile
 22408  01816C  0012               	return	
 22409  01816E  D7FD               	goto	l171
 22410  018170                     __end_of_OSCILLATOR_Initialize:
 22411                           	opt callstack 0
 22412                           
 22413 ;; *************** function _INTERRUPT_Initialize *****************
 22414 ;; Defined at:
 22415 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22416 ;; Parameters:    Size  Location     Type
 22417 ;;		None
 22418 ;; Auto vars:     Size  Location     Type
 22419 ;;  state           1  [STACK] _Bool 
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  1  [STACK] void 
 22422 ;; Registers used:
 22423 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/0
 22426 ;;		On exit  : 3F/39
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;Total ram usage:        0 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:    6
 22436 ;; This function calls:
 22437 ;;		Nothing
 22438 ;; This function is called by:
 22439 ;;		_SYSTEM_Initialize
 22440 ;; This function uses a reentrant model
 22441 ;;
 22442                           
 22443                           	psect	text100
 22444  0172FC                     __ptext100:
 22445                           	opt callstack 0
 22446  0172FC                     _INTERRUPT_Initialize:
 22447                           	opt callstack 0
 22448                           
 22449                           ; BSR set to: 57
 22450                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22451  0172FC  52E6               	movf	postinc1,f,c
 22452                           
 22453                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22454                           
 22455                           ;incstack = 0
 22456  0172FE  8AD2               	bsf	210,5,c	;volatile
 22457                           
 22458                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22459  017300  AED2               	btfss	16338,7,c	;volatile
 22460  017302  D003               	goto	u7780
 22461  017304  6A40               	clrf	(btemp+11)^0,c
 22462  017306  2A40               	incf	(btemp+11)^0,f,c
 22463  017308  D001               	goto	u7798
 22464  01730A                     u7780:
 22465  01730A  6A40               	clrf	(btemp+11)^0,c
 22466  01730C                     u7798:
 22467                           
 22468                           ;stkvar	_state @ sp[(-1)+0]
 22469  01730C  0EFF               	movlw	-1
 22470  01730E  0060  F103  FFE3   	movff	btemp+11,plusw1
 22471                           
 22472                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22473  017314  9ED2               	bcf	16338,7,c	;volatile
 22474                           
 22475                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22476  017316  0E55               	movlw	85
 22477  017318  6ED4               	movwf	212,c	;volatile
 22478                           
 22479                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22480  01731A  0EAA               	movlw	170
 22481  01731C  6ED4               	movwf	212,c	;volatile
 22482                           
 22483                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22484  01731E  90D4               	bcf	212,0,c	;volatile
 22485                           
 22486                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22487  017320  0138               	movlb	56	; () banked
 22488  017322  6B9F               	clrf	159,b	;volatile
 22489                           
 22490                           ; BSR set to: 56
 22491                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22492  017324  6B9E               	clrf	158,b	;volatile
 22493                           
 22494                           ; BSR set to: 56
 22495                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22496  017326  0E08               	movlw	8
 22497  017328  6F9D               	movwf	157,b	;volatile
 22498                           
 22499                           ; BSR set to: 56
 22500                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22501  01732A  0E55               	movlw	85
 22502  01732C  6ED4               	movwf	212,c	;volatile
 22503                           
 22504                           ; BSR set to: 56
 22505                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22506  01732E  0EAA               	movlw	170
 22507  017330  6ED4               	movwf	212,c	;volatile
 22508                           
 22509                           ; BSR set to: 56
 22510                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22511  017332  80D4               	bsf	212,0,c	;volatile
 22512                           
 22513                           ; BSR set to: 56
 22514                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22515                           ;stkvar	_state @ sp[(-1)+0]
 22516  017334  0EFF               	movlw	-1
 22517  017336  B0E3               	btfsc	plusw1,0,c
 22518  017338  D002               	bra	u7805
 22519  01733A  9ED2               	bcf	16338,7,c	;volatile
 22520  01733C  D001               	bra	u7806
 22521  01733E                     u7805:
 22522  01733E  8ED2               	bsf	16338,7,c	;volatile
 22523  017340                     u7806:
 22524                           
 22525                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22526  017340  0139               	movlb	57	; () banked
 22527  017342  8782               	bsf	130,3,b	;volatile
 22528                           
 22529                           ; BSR set to: 57
 22530                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22531  017344  8382               	bsf	130,1,b	;volatile
 22532                           
 22533                           ; BSR set to: 57
 22534                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22535  017346  8182               	bsf	130,0,b	;volatile
 22536                           
 22537                           ; BSR set to: 57
 22538                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22539  017348  8582               	bsf	130,2,b	;volatile
 22540                           
 22541                           ; BSR set to: 57
 22542                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22543  01734A  8786               	bsf	134,3,b	;volatile
 22544                           
 22545                           ; BSR set to: 57
 22546                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22547  01734C  8586               	bsf	134,2,b	;volatile
 22548                           
 22549                           ; BSR set to: 57
 22550                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22551  01734E  8983               	bsf	131,4,b	;volatile
 22552                           
 22553                           ; BSR set to: 57
 22554                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22555  017350  8783               	bsf	131,3,b	;volatile
 22556                           
 22557                           ; BSR set to: 57
 22558                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22559  017352  8181               	bsf	129,0,b	;volatile
 22560                           
 22561                           ; BSR set to: 57
 22562                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22563  017354  8185               	bsf	133,0,b	;volatile
 22564                           
 22565                           ; BSR set to: 57
 22566                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22567  017356  8189               	bsf	137,0,b	;volatile
 22568                           
 22569                           ; BSR set to: 57
 22570                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22571  017358  9D88               	bcf	136,6,b	;volatile
 22572                           
 22573                           ; BSR set to: 57
 22574                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22575  01735A  8581               	bsf	129,2,b	;volatile
 22576                           
 22577                           ; BSR set to: 57
 22578                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22579  01735C  8781               	bsf	129,3,b	;volatile
 22580                           
 22581                           ; BSR set to: 57
 22582                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22583  01735E  52E5               	movf	postdec1,f,c
 22584  017360  0012               	return		;funcret
 22585  017362                     __end_of_INTERRUPT_Initialize:
 22586                           	opt callstack 0
 22587                           
 22588 ;; *************** function _FVR_Initialize *****************
 22589 ;; Defined at:
 22590 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22591 ;; Parameters:    Size  Location     Type
 22592 ;;		None
 22593 ;; Auto vars:     Size  Location     Type
 22594 ;;		None
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  1  [STACK] void 
 22597 ;; Registers used:
 22598 ;;		wreg, status,2
 22599 ;; Tracked objects:
 22600 ;;		On entry : 3F/39
 22601 ;;		On exit  : 3F/3E
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;Total ram usage:        0 bytes
 22609 ;; Hardware stack levels used:    1
 22610 ;; Hardware stack levels required when called:    6
 22611 ;; This function calls:
 22612 ;;		Nothing
 22613 ;; This function is called by:
 22614 ;;		_SYSTEM_Initialize
 22615 ;; This function uses a reentrant model
 22616 ;;
 22617                           
 22618                           	psect	text101
 22619  018236                     __ptext101:
 22620                           	opt callstack 0
 22621  018236                     _FVR_Initialize:
 22622                           	opt callstack 23
 22623                           
 22624                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22625                           
 22626                           ; BSR set to: 57
 22627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22628                           ;incstack = 0
 22629  018236  0EAF               	movlw	175
 22630  018238  013E               	movlb	62	; () banked
 22631  01823A  6FC1               	movwf	193,b	;volatile
 22632                           
 22633                           ; BSR set to: 62
 22634                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22635  01823C  0012               	return		;funcret
 22636  01823E                     __end_of_FVR_Initialize:
 22637                           	opt callstack 0
 22638                           
 22639 ;; *************** function _EXT_INT_Initialize *****************
 22640 ;; Defined at:
 22641 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22642 ;; Parameters:    Size  Location     Type
 22643 ;;		None
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;		None
 22646 ;; Return value:  Size  Location     Type
 22647 ;;                  1  [STACK] void 
 22648 ;; Registers used:
 22649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22650 ;; Tracked objects:
 22651 ;;		On entry : 3F/39
 22652 ;;		On exit  : 3F/39
 22653 ;;		Unchanged: 0/0
 22654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;Total ram usage:        0 bytes
 22660 ;; Hardware stack levels used:    1
 22661 ;; Hardware stack levels required when called:    7
 22662 ;; This function calls:
 22663 ;;		_INT0_SetInterruptHandler
 22664 ;;		_INT1_SetInterruptHandler
 22665 ;; This function is called by:
 22666 ;;		_SYSTEM_Initialize
 22667 ;; This function uses a reentrant model
 22668 ;;
 22669                           
 22670                           	psect	text102
 22671  017AFC                     __ptext102:
 22672                           	opt callstack 0
 22673  017AFC                     _EXT_INT_Initialize:
 22674                           	opt callstack 22
 22675                           
 22676                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22677                           
 22678                           ; BSR set to: 62
 22679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22680                           ;incstack = 0
 22681  017AFC  0139               	movlb	57	; () banked
 22682  017AFE  91A1               	bcf	161,0,b	;volatile
 22683                           
 22684                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22685  017B00  90D2               	bcf	210,0,c	;volatile
 22686                           
 22687                           ; BSR set to: 57
 22688                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22689  017B02  0E56               	movlw	low _INT0_DefaultInterruptHandler
 22690  017B04  6EE6               	movwf	postinc1,c
 22691  017B06  0E82               	movlw	high _INT0_DefaultInterruptHandler
 22692  017B08  6EE6               	movwf	postinc1,c
 22693  017B0A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22694  017B0C  6EE6               	movwf	postinc1,c
 22695  017B0E  EC00  F0BF         	call	_INT0_SetInterruptHandler	;wreg free
 22696                           
 22697                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22698  017B12  0139               	movlb	57	; () banked
 22699  017B14  8191               	bsf	145,0,b	;volatile
 22700                           
 22701                           ; BSR set to: 57
 22702                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22703  017B16  91A5               	bcf	165,0,b	;volatile
 22704                           
 22705                           ; BSR set to: 57
 22706                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22707  017B18  92D2               	bcf	210,1,c	;volatile
 22708                           
 22709                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22710  017B1A  0E58               	movlw	low _INT1_DefaultInterruptHandler
 22711  017B1C  6EE6               	movwf	postinc1,c
 22712  017B1E  0E82               	movlw	high _INT1_DefaultInterruptHandler
 22713  017B20  6EE6               	movwf	postinc1,c
 22714  017B22  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22715  017B24  6EE6               	movwf	postinc1,c
 22716  017B26  ECEC  F0BE         	call	_INT1_SetInterruptHandler	;wreg free
 22717                           
 22718                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22719  017B2A  0139               	movlb	57	; () banked
 22720  017B2C  8195               	bsf	149,0,b	;volatile
 22721                           
 22722                           ; BSR set to: 57
 22723                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22724  017B2E  0012               	return		;funcret
 22725  017B30                     __end_of_EXT_INT_Initialize:
 22726                           	opt callstack 0
 22727                           
 22728 ;; *************** function _INT1_SetInterruptHandler *****************
 22729 ;; Defined at:
 22730 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22731 ;; Parameters:    Size  Location     Type
 22732 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22733 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22734 ;; Auto vars:     Size  Location     Type
 22735 ;;		None
 22736 ;; Return value:  Size  Location     Type
 22737 ;;                  1  [STACK] void 
 22738 ;; Registers used:
 22739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22740 ;; Tracked objects:
 22741 ;;		On entry : 3F/39
 22742 ;;		On exit  : 0/0
 22743 ;;		Unchanged: 0/0
 22744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;Total ram usage:        0 bytes
 22750 ;; Hardware stack levels used:    1
 22751 ;; Hardware stack levels required when called:    6
 22752 ;; This function calls:
 22753 ;;		Nothing
 22754 ;; This function is called by:
 22755 ;;		_EXT_INT_Initialize
 22756 ;; This function uses a reentrant model
 22757 ;;
 22758                           
 22759                           	psect	text103
 22760  017DD8                     __ptext103:
 22761                           	opt callstack 0
 22762  017DD8                     _INT1_SetInterruptHandler:
 22763                           	opt callstack 22
 22764                           
 22765                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22766                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22767                           
 22768                           ; BSR set to: 57
 22769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22770                           ;incstack = 0
 22771  017DD8  50E1               	movf	fsr1l,w,c
 22772  017DDA  0FFD               	addlw	-3
 22773  017DDC  6ED9               	movwf	fsr2l,c
 22774  017DDE  50E2               	movf	fsr1h,w,c
 22775  017DE0  6EDA               	movwf	fsr2h,c
 22776  017DE2  0EFF               	movlw	255
 22777  017DE4  22DA               	addwfc	fsr2h,f,c
 22778  017DE6  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22779  017DEC  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22780  017DF2  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22781                           
 22782                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22783  017DF8  52E5               	movf	postdec1,f,c
 22784  017DFA  52E5               	movf	postdec1,f,c
 22785  017DFC  52E5               	movf	postdec1,f,c
 22786  017DFE  0012               	return		;funcret
 22787  017E00                     __end_of_INT1_SetInterruptHandler:
 22788                           	opt callstack 0
 22789                           
 22790 ;; *************** function _INT0_SetInterruptHandler *****************
 22791 ;; Defined at:
 22792 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22793 ;; Parameters:    Size  Location     Type
 22794 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22795 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;		None
 22798 ;; Return value:  Size  Location     Type
 22799 ;;                  1  [STACK] void 
 22800 ;; Registers used:
 22801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22802 ;; Tracked objects:
 22803 ;;		On entry : 3F/39
 22804 ;;		On exit  : 0/0
 22805 ;;		Unchanged: 0/0
 22806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22811 ;;Total ram usage:        0 bytes
 22812 ;; Hardware stack levels used:    1
 22813 ;; Hardware stack levels required when called:    6
 22814 ;; This function calls:
 22815 ;;		Nothing
 22816 ;; This function is called by:
 22817 ;;		_EXT_INT_Initialize
 22818 ;; This function uses a reentrant model
 22819 ;;
 22820                           
 22821                           	psect	text104
 22822  017E00                     __ptext104:
 22823                           	opt callstack 0
 22824  017E00                     _INT0_SetInterruptHandler:
 22825                           	opt callstack 22
 22826                           
 22827                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22828                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22829                           
 22830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22831                           ;incstack = 0
 22832  017E00  50E1               	movf	fsr1l,w,c
 22833  017E02  0FFD               	addlw	-3
 22834  017E04  6ED9               	movwf	fsr2l,c
 22835  017E06  50E2               	movf	fsr1h,w,c
 22836  017E08  6EDA               	movwf	fsr2h,c
 22837  017E0A  0EFF               	movlw	255
 22838  017E0C  22DA               	addwfc	fsr2h,f,c
 22839  017E0E  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22840  017E14  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22841  017E1A  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22842                           
 22843                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22844  017E20  52E5               	movf	postdec1,f,c
 22845  017E22  52E5               	movf	postdec1,f,c
 22846  017E24  52E5               	movf	postdec1,f,c
 22847  017E26  0012               	return		;funcret
 22848  017E28                     __end_of_INT0_SetInterruptHandler:
 22849                           	opt callstack 0
 22850                           
 22851 ;; *************** function _DMA2_Initialize *****************
 22852 ;; Defined at:
 22853 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;		None
 22856 ;; Auto vars:     Size  Location     Type
 22857 ;;		None
 22858 ;; Return value:  Size  Location     Type
 22859 ;;                  1  [STACK] void 
 22860 ;; Registers used:
 22861 ;;		wreg, status,2
 22862 ;; Tracked objects:
 22863 ;;		On entry : 3F/3D
 22864 ;;		On exit  : 3F/3B
 22865 ;;		Unchanged: 0/0
 22866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22871 ;;Total ram usage:        0 bytes
 22872 ;; Hardware stack levels used:    1
 22873 ;; Hardware stack levels required when called:    6
 22874 ;; This function calls:
 22875 ;;		Nothing
 22876 ;; This function is called by:
 22877 ;;		_SYSTEM_Initialize
 22878 ;; This function uses a reentrant model
 22879 ;;
 22880                           
 22881                           	psect	text105
 22882  017602                     __ptext105:
 22883                           	opt callstack 0
 22884  017602                     _DMA2_Initialize:
 22885                           	opt callstack 23
 22886                           
 22887                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22888                           
 22889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22890                           ;incstack = 0
 22891  017602  0E00               	movlw	0
 22892  017604  013B               	movlb	59	; () banked
 22893  017606  6FD9               	movwf	217,b	;volatile
 22894  017608  0E10               	movlw	16
 22895  01760A  6FDA               	movwf	218,b	;volatile
 22896  01760C  0E00               	movlw	0
 22897  01760E  6FDB               	movwf	219,b	;volatile
 22898                           
 22899                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22900  017610  0E3F               	movlw	63
 22901  017612  6FD1               	movwf	209,b	;volatile
 22902  017614  0EBB               	movlw	187
 22903  017616  6FD0               	movwf	208,b	;volatile
 22904                           
 22905                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22906  017618  0E03               	movlw	3
 22907  01761A  6FDD               	movwf	221,b	;volatile
 22908                           
 22909                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22910  01761C  0E00               	movlw	0
 22911  01761E  6FD8               	movwf	216,b	;volatile
 22912  017620  0E01               	movlw	1
 22913  017622  6FD7               	movwf	215,b	;volatile
 22914                           
 22915                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22916  017624  0E00               	movlw	0
 22917  017626  6FCF               	movwf	207,b	;volatile
 22918  017628  0E01               	movlw	1
 22919  01762A  6FCE               	movwf	206,b	;volatile
 22920                           
 22921                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22922  01762C  0E46               	movlw	70
 22923  01762E  6FDF               	movwf	223,b	;volatile
 22924                           
 22925                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22926  017630  0E3D               	movlw	61
 22927  017632  6FDE               	movwf	222,b	;volatile
 22928                           
 22929                           ; BSR set to: 59
 22930                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22931  017634  0139               	movlb	57	; () banked
 22932  017636  97A5               	bcf	165,3,b	;volatile
 22933                           
 22934                           ; BSR set to: 57
 22935                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22936  017638  95A5               	bcf	165,2,b	;volatile
 22937                           
 22938                           ; BSR set to: 57
 22939                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22940  01763A  9BA5               	bcf	165,5,b	;volatile
 22941                           
 22942                           ; BSR set to: 57
 22943                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22944  01763C  99A5               	bcf	165,4,b	;volatile
 22945                           
 22946                           ; BSR set to: 57
 22947                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22948  01763E  9795               	bcf	149,3,b	;volatile
 22949                           
 22950                           ; BSR set to: 57
 22951                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22952  017640  9595               	bcf	149,2,b	;volatile
 22953                           
 22954                           ; BSR set to: 57
 22955                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22956  017642  9B95               	bcf	149,5,b	;volatile
 22957                           
 22958                           ; BSR set to: 57
 22959                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22960  017644  9995               	bcf	149,4,b	;volatile
 22961  017646  9ED2               	bcf	16338,7,c	;# 
 22962  017648  0139               	banksel	14831	;# 
 22963  01764A  0E55               	movlw	85	;# 
 22964  01764C  6FEF               	movwf	14831,b	;# 
 22965  01764E  0EAA               	movlw	170	;# 
 22966  017650  6FEF               	movwf	14831,b	;# 
 22967  017652  81EF               	bsf	14831,0,b	;# 
 22968  017654  8ED2               	bsf	16338,7,c	;# 
 22969                           
 22970                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22971  017656  013B               	movlb	59	; () banked
 22972  017658  6BDC               	clrf	220,b	;volatile
 22973                           
 22974                           ; BSR set to: 59
 22975                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22976  01765A  0012               	return		;funcret
 22977  01765C                     __end_of_DMA2_Initialize:
 22978                           	opt callstack 0
 22979                           
 22980 ;; *************** function _DMA1_Initialize *****************
 22981 ;; Defined at:
 22982 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;		None
 22985 ;; Auto vars:     Size  Location     Type
 22986 ;;		None
 22987 ;; Return value:  Size  Location     Type
 22988 ;;                  1  [STACK] void 
 22989 ;; Registers used:
 22990 ;;		wreg, status,2
 22991 ;; Tracked objects:
 22992 ;;		On entry : 3F/3B
 22993 ;;		On exit  : 3F/3B
 22994 ;;		Unchanged: 0/0
 22995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;Total ram usage:        0 bytes
 23001 ;; Hardware stack levels used:    1
 23002 ;; Hardware stack levels required when called:    6
 23003 ;; This function calls:
 23004 ;;		Nothing
 23005 ;; This function is called by:
 23006 ;;		_SYSTEM_Initialize
 23007 ;; This function uses a reentrant model
 23008 ;;
 23009                           
 23010                           	psect	text106
 23011  0171C2                     __ptext106:
 23012                           	opt callstack 0
 23013  0171C2                     _DMA1_Initialize:
 23014                           	opt callstack 23
 23015                           
 23016                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23017                           
 23018                           ; BSR set to: 59
 23019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23020                           ;incstack = 0
 23021  0171C2  0E00               	movlw	0
 23022  0171C4  013B               	movlb	59	; () banked
 23023  0171C6  6FF9               	movwf	249,b	;volatile
 23024  0171C8  0E10               	movlw	16
 23025  0171CA  6FFA               	movwf	250,b	;volatile
 23026  0171CC  0E00               	movlw	0
 23027  0171CE  6FFB               	movwf	251,b	;volatile
 23028                           
 23029                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23030  0171D0  0E3D               	movlw	61
 23031  0171D2  6FF1               	movwf	241,b	;volatile
 23032  0171D4  0E11               	movlw	17
 23033  0171D6  6FF0               	movwf	240,b	;volatile
 23034                           
 23035                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23036  0171D8  0E03               	movlw	3
 23037  0171DA  6FFD               	movwf	253,b	;volatile
 23038                           
 23039                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23040  0171DC  0E00               	movlw	0
 23041  0171DE  6FF8               	movwf	248,b	;volatile
 23042  0171E0  0E01               	movlw	1
 23043  0171E2  6FF7               	movwf	247,b	;volatile
 23044                           
 23045                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23046  0171E4  0E00               	movlw	0
 23047  0171E6  6FEF               	movwf	239,b	;volatile
 23048  0171E8  0E01               	movlw	1
 23049  0171EA  6FEE               	movwf	238,b	;volatile
 23050                           
 23051                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23052  0171EC  0E15               	movlw	21
 23053  0171EE  6FFF               	movwf	255,b	;volatile
 23054                           
 23055                           ; BSR set to: 59
 23056                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23057  0171F0  6BFE               	clrf	254,b	;volatile
 23058                           
 23059                           ; BSR set to: 59
 23060                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23061  0171F2  0139               	movlb	57	; () banked
 23062  0171F4  93A2               	bcf	162,1,b	;volatile
 23063                           
 23064                           ; BSR set to: 57
 23065                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23066  0171F6  91A2               	bcf	162,0,b	;volatile
 23067                           
 23068                           ; BSR set to: 57
 23069                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23070  0171F8  97A2               	bcf	162,3,b	;volatile
 23071                           
 23072                           ; BSR set to: 57
 23073                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23074  0171FA  95A2               	bcf	162,2,b	;volatile
 23075                           
 23076                           ; BSR set to: 57
 23077                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23078  0171FC  8392               	bsf	146,1,b	;volatile
 23079                           
 23080                           ; BSR set to: 57
 23081                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23082  0171FE  8192               	bsf	146,0,b	;volatile
 23083                           
 23084                           ; BSR set to: 57
 23085                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23086  017200  8792               	bsf	146,3,b	;volatile
 23087                           
 23088                           ; BSR set to: 57
 23089                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23090  017202  8592               	bsf	146,2,b	;volatile
 23091                           
 23092                           ; BSR set to: 57
 23093                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23094  017204  6BF1               	clrf	241,b	;volatile
 23095                           
 23096                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23097  017206  0E01               	movlw	1
 23098  017208  6FF2               	movwf	242,b	;volatile
 23099                           
 23100                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23101  01720A  0E04               	movlw	4
 23102  01720C  6FF3               	movwf	243,b	;volatile
 23103                           
 23104                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23105  01720E  0E02               	movlw	2
 23106  017210  6FF4               	movwf	244,b	;volatile
 23107                           
 23108                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23109  017212  0E03               	movlw	3
 23110  017214  6FF7               	movwf	247,b	;volatile
 23111  017216  9ED2               	bcf	16338,7,c	;# 
 23112  017218  0139               	banksel	14831	;# 
 23113  01721A  0E55               	movlw	85	;# 
 23114  01721C  6FEF               	movwf	14831,b	;# 
 23115  01721E  0EAA               	movlw	170	;# 
 23116  017220  6FEF               	movwf	14831,b	;# 
 23117  017222  81EF               	bsf	14831,0,b	;# 
 23118  017224  8ED2               	bsf	16338,7,c	;# 
 23119                           
 23120                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23121  017226  013B               	movlb	59	; () banked
 23122  017228  6BFC               	clrf	252,b	;volatile
 23123                           
 23124                           ; BSR set to: 59
 23125                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23126  01722A  0012               	return		;funcret
 23127  01722C                     __end_of_DMA1_Initialize:
 23128                           	opt callstack 0
 23129                           
 23130 ;; *************** function _CLKREF_Initialize *****************
 23131 ;; Defined at:
 23132 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23133 ;; Parameters:    Size  Location     Type
 23134 ;;		None
 23135 ;; Auto vars:     Size  Location     Type
 23136 ;;		None
 23137 ;; Return value:  Size  Location     Type
 23138 ;;                  1  [STACK] void 
 23139 ;; Registers used:
 23140 ;;		wreg, status,2
 23141 ;; Tracked objects:
 23142 ;;		On entry : 3F/3B
 23143 ;;		On exit  : 3F/3C
 23144 ;;		Unchanged: 0/0
 23145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23150 ;;Total ram usage:        0 bytes
 23151 ;; Hardware stack levels used:    1
 23152 ;; Hardware stack levels required when called:    6
 23153 ;; This function calls:
 23154 ;;		Nothing
 23155 ;; This function is called by:
 23156 ;;		_SYSTEM_Initialize
 23157 ;; This function uses a reentrant model
 23158 ;;
 23159                           
 23160                           	psect	text107
 23161  0181F2                     __ptext107:
 23162                           	opt callstack 0
 23163  0181F2                     _CLKREF_Initialize:
 23164                           	opt callstack 23
 23165                           
 23166                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23167                           
 23168                           ; BSR set to: 59
 23169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23170                           ;incstack = 0
 23171  0181F2  013C               	movlb	60	; () banked
 23172  0181F4  6BE6               	clrf	230,b	;volatile
 23173                           
 23174                           ; BSR set to: 60
 23175                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23176  0181F6  0E94               	movlw	148
 23177  0181F8  6FE5               	movwf	229,b	;volatile
 23178                           
 23179                           ; BSR set to: 60
 23180                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23181  0181FA  0012               	return		;funcret
 23182  0181FC                     __end_of_CLKREF_Initialize:
 23183                           	opt callstack 0
 23184                           
 23185 ;; *************** function _ADCC_Initialize *****************
 23186 ;; Defined at:
 23187 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23188 ;; Parameters:    Size  Location     Type
 23189 ;;		None
 23190 ;; Auto vars:     Size  Location     Type
 23191 ;;		None
 23192 ;; Return value:  Size  Location     Type
 23193 ;;                  1  [STACK] void 
 23194 ;; Registers used:
 23195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23196 ;; Tracked objects:
 23197 ;;		On entry : 3F/3E
 23198 ;;		On exit  : 0/0
 23199 ;;		Unchanged: 0/0
 23200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23205 ;;Total ram usage:        0 bytes
 23206 ;; Hardware stack levels used:    1
 23207 ;; Hardware stack levels required when called:    7
 23208 ;; This function calls:
 23209 ;;		_ADCC_SetADIInterruptHandler
 23210 ;;		_ADCC_SetADTIInterruptHandler
 23211 ;; This function is called by:
 23212 ;;		_SYSTEM_Initialize
 23213 ;; This function uses a reentrant model
 23214 ;;
 23215                           
 23216                           	psect	text108
 23217  01722C                     __ptext108:
 23218                           	opt callstack 0
 23219  01722C                     _ADCC_Initialize:
 23220                           	opt callstack 22
 23221                           
 23222                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23223                           
 23224                           ; BSR set to: 60
 23225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23226                           ;incstack = 0
 23227  01722C  013E               	movlb	62	; () banked
 23228  01722E  6BDE               	clrf	222,b	;volatile
 23229                           
 23230                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23231  017230  6BDF               	clrf	223,b	;volatile
 23232                           
 23233                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23234  017232  6BE0               	clrf	224,b	;volatile
 23235                           
 23236                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23237  017234  6BE1               	clrf	225,b	;volatile
 23238                           
 23239                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23240  017236  6BE4               	clrf	228,b	;volatile
 23241                           
 23242                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23243  017238  6BE5               	clrf	229,b	;volatile
 23244                           
 23245                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23246  01723A  6BEA               	clrf	234,b	;volatile
 23247                           
 23248                           ; BSR set to: 62
 23249                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23250  01723C  0E40               	movlw	64
 23251  01723E  6FEC               	movwf	236,b	;volatile
 23252                           
 23253                           ; BSR set to: 62
 23254                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23255  017240  6BF1               	clrf	241,b	;volatile
 23256                           
 23257                           ; BSR set to: 62
 23258                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 23259  017242  6BF3               	clrf	243,b	;volatile
 23260                           
 23261                           ; BSR set to: 62
 23262                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23263  017244  6BF4               	clrf	244,b	;volatile
 23264                           
 23265                           ; BSR set to: 62
 23266                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23267  017246  6BF5               	clrf	245,b	;volatile
 23268                           
 23269                           ; BSR set to: 62
 23270                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23271  017248  6BF6               	clrf	246,b	;volatile
 23272                           
 23273                           ; BSR set to: 62
 23274                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23275  01724A  6BF7               	clrf	247,b	;volatile
 23276                           
 23277                           ; BSR set to: 62
 23278                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23279  01724C  6BF9               	clrf	249,b	;volatile
 23280                           
 23281                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 23282  01724E  0E6B               	movlw	107
 23283  017250  6FFA               	movwf	250,b	;volatile
 23284                           
 23285                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23286  017252  0E27               	movlw	39
 23287  017254  6FFB               	movwf	251,b	;volatile
 23288                           
 23289                           ; BSR set to: 62
 23290                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23291  017256  6BFC               	clrf	252,b	;volatile
 23292                           
 23293                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23294  017258  0E02               	movlw	2
 23295  01725A  6FFD               	movwf	253,b	;volatile
 23296                           
 23297                           ; BSR set to: 62
 23298                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23299  01725C  6BFE               	clrf	254,b	;volatile
 23300                           
 23301                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 23302  01725E  0E02               	movlw	2
 23303  017260  6FFF               	movwf	255,b	;volatile
 23304                           
 23305                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 23306  017262  0E94               	movlw	148
 23307  017264  6FF8               	movwf	248,b	;volatile
 23308                           
 23309                           ; BSR set to: 62
 23310                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23311  017266  0139               	movlb	57	; () banked
 23312  017268  95A1               	bcf	161,2,b	;volatile
 23313                           
 23314                           ; BSR set to: 57
 23315                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23316  01726A  8591               	bsf	145,2,b	;volatile
 23317                           
 23318                           ; BSR set to: 57
 23319                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23320  01726C  0E5A               	movlw	low _ADCC_DefaultInterruptHandler
 23321  01726E  6EE6               	movwf	postinc1,c
 23322  017270  0E82               	movlw	high _ADCC_DefaultInterruptHandler
 23323  017272  6EE6               	movwf	postinc1,c
 23324  017274  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23325  017276  6EE6               	movwf	postinc1,c
 23326  017278  EC28  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23327                           
 23328                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23329  01727C  0139               	movlb	57	; () banked
 23330  01727E  97A1               	bcf	161,3,b	;volatile
 23331                           
 23332                           ; BSR set to: 57
 23333                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23334  017280  8791               	bsf	145,3,b	;volatile
 23335                           
 23336                           ; BSR set to: 57
 23337                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23338  017282  0E5A               	movlw	low _ADCC_DefaultInterruptHandler
 23339  017284  6EE6               	movwf	postinc1,c
 23340  017286  0E82               	movlw	high _ADCC_DefaultInterruptHandler
 23341  017288  6EE6               	movwf	postinc1,c
 23342  01728A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23343  01728C  6EE6               	movwf	postinc1,c
 23344  01728E  EC14  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23345                           
 23346                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23347  017292  0012               	return		;funcret
 23348  017294                     __end_of_ADCC_Initialize:
 23349                           	opt callstack 0
 23350                           
 23351 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23352 ;; Defined at:
 23353 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23354 ;; Parameters:    Size  Location     Type
 23355 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23356 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23357 ;; Auto vars:     Size  Location     Type
 23358 ;;		None
 23359 ;; Return value:  Size  Location     Type
 23360 ;;                  1  [STACK] void 
 23361 ;; Registers used:
 23362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23363 ;; Tracked objects:
 23364 ;;		On entry : 0/0
 23365 ;;		On exit  : 0/0
 23366 ;;		Unchanged: 0/0
 23367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23372 ;;Total ram usage:        0 bytes
 23373 ;; Hardware stack levels used:    1
 23374 ;; Hardware stack levels required when called:    6
 23375 ;; This function calls:
 23376 ;;		Nothing
 23377 ;; This function is called by:
 23378 ;;		_ADCC_Initialize
 23379 ;;		_start_adc_scan
 23380 ;; This function uses a reentrant model
 23381 ;;
 23382                           
 23383                           	psect	text109
 23384  017E28                     __ptext109:
 23385                           	opt callstack 0
 23386  017E28                     _ADCC_SetADTIInterruptHandler:
 23387                           	opt callstack 23
 23388                           
 23389                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23390                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23391                           
 23392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23393                           ;incstack = 0
 23394  017E28  50E1               	movf	fsr1l,w,c
 23395  017E2A  0FFD               	addlw	-3
 23396  017E2C  6ED9               	movwf	fsr2l,c
 23397  017E2E  50E2               	movf	fsr1h,w,c
 23398  017E30  6EDA               	movwf	fsr2h,c
 23399  017E32  0EFF               	movlw	255
 23400  017E34  22DA               	addwfc	fsr2h,f,c
 23401  017E36  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23402  017E3C  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23403  017E42  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23404                           
 23405                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23406  017E48  52E5               	movf	postdec1,f,c
 23407  017E4A  52E5               	movf	postdec1,f,c
 23408  017E4C  52E5               	movf	postdec1,f,c
 23409  017E4E  0012               	return		;funcret
 23410  017E50                     __end_of_ADCC_SetADTIInterruptHandler:
 23411                           	opt callstack 0
 23412                           
 23413 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23414 ;; Defined at:
 23415 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23416 ;; Parameters:    Size  Location     Type
 23417 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23418 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23419 ;; Auto vars:     Size  Location     Type
 23420 ;;		None
 23421 ;; Return value:  Size  Location     Type
 23422 ;;                  1  [STACK] void 
 23423 ;; Registers used:
 23424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23425 ;; Tracked objects:
 23426 ;;		On entry : 6/0
 23427 ;;		On exit  : 0/0
 23428 ;;		Unchanged: 0/0
 23429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23434 ;;Total ram usage:        0 bytes
 23435 ;; Hardware stack levels used:    1
 23436 ;; Hardware stack levels required when called:    6
 23437 ;; This function calls:
 23438 ;;		Nothing
 23439 ;; This function is called by:
 23440 ;;		_ADCC_Initialize
 23441 ;;		_start_adc_scan
 23442 ;; This function uses a reentrant model
 23443 ;;
 23444                           
 23445                           	psect	text110
 23446  017E50                     __ptext110:
 23447                           	opt callstack 0
 23448  017E50                     _ADCC_SetADIInterruptHandler:
 23449                           	opt callstack 23
 23450                           
 23451                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23452                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23453                           
 23454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23455                           ;incstack = 0
 23456  017E50  50E1               	movf	fsr1l,w,c
 23457  017E52  0FFD               	addlw	-3
 23458  017E54  6ED9               	movwf	fsr2l,c
 23459  017E56  50E2               	movf	fsr1h,w,c
 23460  017E58  6EDA               	movwf	fsr2h,c
 23461  017E5A  0EFF               	movlw	255
 23462  017E5C  22DA               	addwfc	fsr2h,f,c
 23463  017E5E  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23464  017E64  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23465  017E6A  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23466                           
 23467                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23468  017E70  52E5               	movf	postdec1,f,c
 23469  017E72  52E5               	movf	postdec1,f,c
 23470  017E74  52E5               	movf	postdec1,f,c
 23471  017E76  0012               	return		;funcret
 23472  017E78                     __end_of_ADCC_SetADIInterruptHandler:
 23473                           	opt callstack 0
 23474                           
 23475 ;; *************** function _TMR5_ISR *****************
 23476 ;; Defined at:
 23477 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23478 ;; Parameters:    Size  Location     Type
 23479 ;;		None
 23480 ;; Auto vars:     Size  Location     Type
 23481 ;;		None
 23482 ;; Return value:  Size  Location     Type
 23483 ;;                  1    wreg      void 
 23484 ;; Registers used:
 23485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23486 ;; Tracked objects:
 23487 ;;		On entry : 0/0
 23488 ;;		On exit  : 0/0
 23489 ;;		Unchanged: 0/0
 23490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;Total ram usage:        4 bytes
 23496 ;; Hardware stack levels used:    1
 23497 ;; Hardware stack levels required when called:    5
 23498 ;; This function calls:
 23499 ;;		_TMR5_CallBack
 23500 ;;		_TMR5_WriteTimer
 23501 ;; This function is called by:
 23502 ;;		Interrupt level 1
 23503 ;; This function uses a non-reentrant model
 23504 ;;
 23505                           
 23506                           	psect	text111
 23507  01754C                     __ptext111:
 23508                           	opt callstack 0
 23509  01754C                     _TMR5_ISR:
 23510                           	opt callstack 12
 23511                           
 23512                           ;incstack = 0
 23513  01754C  006F FF60  F0E1    	movff	status,??_TMR5_ISR+2
 23514  017552  0060  F100  F0E2   	movff	btemp+11,??_TMR5_ISR+3
 23515  017558  EE15  F3AB         	lfsr	1,___intlo_sp
 23516                           
 23517                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23518  01755C  0139               	movlb	57	; () banked
 23519  01755E  9DA8               	bcf	168,6,b	;volatile
 23520                           
 23521                           ; BSR set to: 57
 23522                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23523  017560  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23524  017566  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23525  01756C  ECB8  F0BC         	call	_TMR5_WriteTimer	;wreg free
 23526                           
 23527                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23528  017570  0101               	movlb	1	; () banked
 23529  017572  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 23530  017574  0100               	movlb	0	; () banked
 23531  017576  6FDF               	movwf	??_TMR5_ISR& (0+255),b
 23532  017578  6BE0               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23533  01757A  0E05               	movlw	5
 23534  01757C  27DF               	addwf	??_TMR5_ISR& (0+255),f,b
 23535  01757E  0E00               	movlw	0
 23536  017580  23E0               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23537  017582  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23538  017584  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23539  017586  51DF               	movf	??_TMR5_ISR& (0+255),w,b
 23540  017588  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23541  01758A  51E0               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23542  01758C  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23543  01758E  A0D8               	btfss	status,0,c
 23544  017590  D004               	goto	i1l1045
 23545                           
 23546                           ; BSR set to: 0
 23547                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23548  017592  EC9D  F0BF         	call	_TMR5_CallBack	;wreg free
 23549                           
 23550                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23551  017596  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23552  017598  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23553  01759A                     i1l1045:
 23554  01759A  0060  F388  F040   	movff	??_TMR5_ISR+3,btemp+11
 23555  0175A0  0060  F387  FFD8   	movff	??_TMR5_ISR+2,status
 23556  0175A6  0011               	retfie		f
 23557  0175A8                     __end_of_TMR5_ISR:
 23558                           	opt callstack 0
 23559                           
 23560 ;; *************** function _TMR5_WriteTimer *****************
 23561 ;; Defined at:
 23562 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;  timerVal        2  [STACK] unsigned short 
 23565 ;; Auto vars:     Size  Location     Type
 23566 ;;		None
 23567 ;; Return value:  Size  Location     Type
 23568 ;;                  1  [STACK] void 
 23569 ;; Registers used:
 23570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23571 ;; Tracked objects:
 23572 ;;		On entry : 3F/39
 23573 ;;		On exit  : 0/0
 23574 ;;		Unchanged: 0/0
 23575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;Total ram usage:        0 bytes
 23581 ;; Hardware stack levels used:    1
 23582 ;; Hardware stack levels required when called:    3
 23583 ;; This function calls:
 23584 ;;		Nothing
 23585 ;; This function is called by:
 23586 ;;		_TMR5_ISR
 23587 ;; This function uses a reentrant model
 23588 ;;
 23589                           
 23590                           	psect	text112
 23591  017970                     __ptext112:
 23592                           	opt callstack 0
 23593  017970                     _TMR5_WriteTimer:
 23594                           	opt callstack 13
 23595                           
 23596                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23597                           
 23598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23599                           ;incstack = 0
 23600  017970  A49A               	btfss	154,2,c	;volatile
 23601  017972  D00F               	goto	l8535
 23602                           
 23603                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23604  017974  909A               	bcf	154,0,c	;volatile
 23605                           
 23606                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23607                           ;stkvar	_timerVal @ sp[(0)+-2]
 23608  017976  0EFF               	movlw	255
 23609  017978  24E1               	addwf	fsr1l,w,c
 23610  01797A  6ED9               	movwf	fsr2l,c
 23611  01797C  0EFF               	movlw	255
 23612  01797E  20E2               	addwfc	fsr1h,w,c
 23613  017980  6EDA               	movwf	fsr2h,c
 23614  017982  50DF               	movf	indf2,w,c
 23615  017984  6E99               	movwf	153,c	;volatile
 23616                           
 23617                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23618                           ;stkvar	_timerVal @ sp[(0)+-2]
 23619  017986  0EFE               	movlw	-2
 23620  017988  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23621                           
 23622                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23623  01798E  809A               	bsf	154,0,c	;volatile
 23624                           
 23625                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23626  017990  D00C               	goto	l1028
 23627  017992                     l8535:
 23628                           
 23629                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23630                           ;stkvar	_timerVal @ sp[(0)+-2]
 23631  017992  0EFF               	movlw	255
 23632  017994  24E1               	addwf	fsr1l,w,c
 23633  017996  6ED9               	movwf	fsr2l,c
 23634  017998  0EFF               	movlw	255
 23635  01799A  20E2               	addwfc	fsr1h,w,c
 23636  01799C  6EDA               	movwf	fsr2h,c
 23637  01799E  50DF               	movf	indf2,w,c
 23638  0179A0  6E99               	movwf	153,c	;volatile
 23639                           
 23640                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23641                           ;stkvar	_timerVal @ sp[(0)+-2]
 23642  0179A2  0EFE               	movlw	-2
 23643  0179A4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23644  0179AA                     l1028:
 23645                           
 23646                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23647  0179AA  52E5               	movf	postdec1,f,c
 23648  0179AC  52E5               	movf	postdec1,f,c
 23649  0179AE  0012               	return		;funcret
 23650  0179B0                     __end_of_TMR5_WriteTimer:
 23651                           	opt callstack 0
 23652                           
 23653 ;; *************** function _TMR5_CallBack *****************
 23654 ;; Defined at:
 23655 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23656 ;; Parameters:    Size  Location     Type
 23657 ;;		None
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;		None
 23660 ;; Return value:  Size  Location     Type
 23661 ;;                  1  [STACK] void 
 23662 ;; Registers used:
 23663 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23664 ;; Tracked objects:
 23665 ;;		On entry : 3F/0
 23666 ;;		On exit  : 0/0
 23667 ;;		Unchanged: 0/0
 23668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;Total ram usage:        0 bytes
 23674 ;; Hardware stack levels used:    1
 23675 ;; Hardware stack levels required when called:    4
 23676 ;; This function calls:
 23677 ;;		Absolute function
 23678 ;;		_TMR5_DefaultInterruptHandler
 23679 ;; This function is called by:
 23680 ;;		_TMR5_ISR
 23681 ;; This function uses a reentrant model
 23682 ;;
 23683                           
 23684                           	psect	text113
 23685  017F3A                     __ptext113:
 23686                           	opt callstack 0
 23687  017F3A                     _TMR5_CallBack:
 23688                           	opt callstack 12
 23689                           
 23690                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23691                           
 23692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23693                           ;incstack = 0
 23694  017F3A  0100               	movlb	0	; () banked
 23695  017F3C  51D3               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23696  017F3E  11D4               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23697  017F40  11D5               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23698  017F42  B4D8               	btfsc	status,2,c
 23699  017F44  0012               	return	
 23700                           
 23701                           ; BSR set to: 0
 23702                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23703  017F46  D801               	call	u812_28
 23704  017F48  0012               	return	
 23705  017F4A                     u812_28:
 23706  017F4A  0005               	push	
 23707  017F4C  6EFA               	movwf	pclath,c
 23708  017F4E  51D3               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23709  017F50  6EFD               	movwf	tosl,c
 23710  017F52  51D4               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23711  017F54  6EFE               	movwf	tosh,c
 23712  017F56  51D5               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23713  017F58  6EFF               	movwf	tosu,c
 23714  017F5A  50FA               	movf	pclath,w,c
 23715  017F5C  0012               	return		;indir
 23716  017F5E                     __end_of_TMR5_CallBack:
 23717                           	opt callstack 0
 23718                           
 23719 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23720 ;; Defined at:
 23721 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;		None
 23724 ;; Auto vars:     Size  Location     Type
 23725 ;;		None
 23726 ;; Return value:  Size  Location     Type
 23727 ;;                  1  [STACK] void 
 23728 ;; Registers used:
 23729 ;;		wreg, status,2, status,0, btemp+11
 23730 ;; Tracked objects:
 23731 ;;		On entry : 3F/0
 23732 ;;		On exit  : 0/0
 23733 ;;		Unchanged: 0/0
 23734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23739 ;;Total ram usage:        0 bytes
 23740 ;; Hardware stack levels used:    1
 23741 ;; Hardware stack levels required when called:    3
 23742 ;; This function calls:
 23743 ;;		Nothing
 23744 ;; This function is called by:
 23745 ;;		_TMR5_Initialize
 23746 ;;		_TMR5_CallBack
 23747 ;; This function uses a reentrant model
 23748 ;;
 23749                           
 23750                           	psect	text114
 23751  0180CA                     __ptext114:
 23752                           	opt callstack 0
 23753  0180CA                     _TMR5_DefaultInterruptHandler:
 23754                           	opt callstack 12
 23755                           
 23756                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23757                           
 23758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23759                           ;incstack = 0
 23760  0180CA  A0BE               	btfss	190,0,c	;volatile
 23761  0180CC  D002               	goto	u784_20
 23762  0180CE  0E01               	movlw	1
 23763  0180D0  D001               	goto	u784_26
 23764  0180D2                     u784_20:
 23765  0180D2  0E00               	movlw	0
 23766  0180D4                     u784_26:
 23767  0180D4  0AFF               	xorlw	255
 23768  0180D6  6E40               	movwf	(btemp+11)^0,c
 23769  0180D8  50BE               	movf	190,w,c	;volatile
 23770  0180DA  1840               	xorwf	(btemp+11)^0,w,c
 23771  0180DC  0BFE               	andlw	-2
 23772  0180DE  1840               	xorwf	(btemp+11)^0,w,c
 23773  0180E0  6EBE               	movwf	190,c	;volatile
 23774                           
 23775                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23776  0180E2  0012               	return		;funcret
 23777  0180E4                     __end_of_TMR5_DefaultInterruptHandler:
 23778                           	opt callstack 0
 23779                           
 23780 ;; *************** function _INT0_ISR *****************
 23781 ;; Defined at:
 23782 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;		None
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;                  1    wreg      void 
 23789 ;; Registers used:
 23790 ;;		wreg, status,2, status,0, pclath, tosl
 23791 ;; Tracked objects:
 23792 ;;		On entry : 0/0
 23793 ;;		On exit  : 0/0
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23800 ;;Total ram usage:        0 bytes
 23801 ;; Hardware stack levels used:    1
 23802 ;; Hardware stack levels required when called:    2
 23803 ;; This function calls:
 23804 ;;		_INT0_CallBack
 23805 ;; This function is called by:
 23806 ;;		Interrupt level 2
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           
 23810                           	psect	text115
 23811  0181C4                     __ptext115:
 23812                           	opt callstack 0
 23813  0181C4                     _INT0_ISR:
 23814                           	opt callstack 12
 23815                           
 23816                           ;incstack = 0
 23817  0181C4  EE13  F356         	lfsr	1,___inthi_sp
 23818                           
 23819                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23820  0181C8  0139               	movlb	57	; () banked
 23821  0181CA  91A1               	bcf	161,0,b	;volatile
 23822                           
 23823                           ; BSR set to: 57
 23824                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23825  0181CC  ECAF  F0BF         	call	_INT0_CallBack	;wreg free
 23826  0181D0  0011               	retfie		f
 23827  0181D2                     __end_of_INT0_ISR:
 23828                           	opt callstack 0
 23829                           
 23830 ;; *************** function _INT0_CallBack *****************
 23831 ;; Defined at:
 23832 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;		None
 23835 ;; Auto vars:     Size  Location     Type
 23836 ;;		None
 23837 ;; Return value:  Size  Location     Type
 23838 ;;                  1  [STACK] void 
 23839 ;; Registers used:
 23840 ;;		wreg, status,2, status,0, pclath, tosl
 23841 ;; Tracked objects:
 23842 ;;		On entry : 3F/39
 23843 ;;		On exit  : 0/0
 23844 ;;		Unchanged: 0/0
 23845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;Total ram usage:        0 bytes
 23851 ;; Hardware stack levels used:    1
 23852 ;; Hardware stack levels required when called:    1
 23853 ;; This function calls:
 23854 ;;		Absolute function
 23855 ;;		_INT0_DefaultInterruptHandler
 23856 ;; This function is called by:
 23857 ;;		_INT0_ISR
 23858 ;; This function uses a reentrant model
 23859 ;;
 23860                           
 23861                           	psect	text116
 23862  017F5E                     __ptext116:
 23863                           	opt callstack 0
 23864  017F5E                     _INT0_CallBack:
 23865                           	opt callstack 12
 23866                           
 23867                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23868                           
 23869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23870                           ;incstack = 0
 23871  017F5E  5019               	movf	_INT0_InterruptHandler^0,w,c
 23872  017F60  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23873  017F62  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23874  017F64  B4D8               	btfsc	status,2,c
 23875  017F66  0012               	return	
 23876                           
 23877                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23878  017F68  D801               	call	u377_48
 23879  017F6A  0012               	return	
 23880  017F6C                     u377_48:
 23881  017F6C  0005               	push	
 23882  017F6E  6EFA               	movwf	pclath,c
 23883  017F70  5019               	movf	_INT0_InterruptHandler^0,w,c
 23884  017F72  6EFD               	movwf	tosl,c
 23885  017F74  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23886  017F76  6EFE               	movwf	tosh,c
 23887  017F78  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23888  017F7A  6EFF               	movwf	tosu,c
 23889  017F7C  50FA               	movf	pclath,w,c
 23890  017F7E  0012               	return		;indir
 23891  017F80                     __end_of_INT0_CallBack:
 23892                           	opt callstack 0
 23893                           
 23894 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23895 ;; Defined at:
 23896 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;		None
 23899 ;; Auto vars:     Size  Location     Type
 23900 ;;		None
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1  [STACK] void 
 23903 ;; Registers used:
 23904 ;;		None
 23905 ;; Tracked objects:
 23906 ;;		On entry : 0/39
 23907 ;;		On exit  : 0/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23914 ;;Total ram usage:        0 bytes
 23915 ;; Hardware stack levels used:    1
 23916 ;; This function calls:
 23917 ;;		Nothing
 23918 ;; This function is called by:
 23919 ;;		_EXT_INT_Initialize
 23920 ;;		_INT0_CallBack
 23921 ;; This function uses a reentrant model
 23922 ;;
 23923                           
 23924                           	psect	text117
 23925  018256                     __ptext117:
 23926                           	opt callstack 0
 23927  018256                     _INT0_DefaultInterruptHandler:
 23928                           	opt callstack 12
 23929                           
 23930                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23931                           
 23932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23933                           ;incstack = 0
 23934  018256  0012               	return		;funcret
 23935  018258                     __end_of_INT0_DefaultInterruptHandler:
 23936                           	opt callstack 0
 23937                           
 23938 ;; *************** function _INT1_ISR *****************
 23939 ;; Defined at:
 23940 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23941 ;; Parameters:    Size  Location     Type
 23942 ;;		None
 23943 ;; Auto vars:     Size  Location     Type
 23944 ;;		None
 23945 ;; Return value:  Size  Location     Type
 23946 ;;                  1    wreg      void 
 23947 ;; Registers used:
 23948 ;;		wreg, status,2, status,0, pclath, tosl
 23949 ;; Tracked objects:
 23950 ;;		On entry : 0/0
 23951 ;;		On exit  : 0/0
 23952 ;;		Unchanged: 0/0
 23953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23958 ;;Total ram usage:        0 bytes
 23959 ;; Hardware stack levels used:    1
 23960 ;; Hardware stack levels required when called:    2
 23961 ;; This function calls:
 23962 ;;		_INT1_CallBack
 23963 ;; This function is called by:
 23964 ;;		Interrupt level 2
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           	psect	text118
 23969  0181D4                     __ptext118:
 23970                           	opt callstack 0
 23971  0181D4                     _INT1_ISR:
 23972                           	opt callstack 12
 23973                           
 23974                           ;incstack = 0
 23975  0181D4  EE13  F356         	lfsr	1,___inthi_sp
 23976                           
 23977                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23978  0181D8  0139               	movlb	57	; () banked
 23979  0181DA  91A5               	bcf	165,0,b	;volatile
 23980                           
 23981                           ; BSR set to: 57
 23982                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23983  0181DC  ECC0  F0BF         	call	_INT1_CallBack	;wreg free
 23984  0181E0  0011               	retfie		f
 23985  0181E2                     __end_of_INT1_ISR:
 23986                           	opt callstack 0
 23987                           
 23988 ;; *************** function _INT1_CallBack *****************
 23989 ;; Defined at:
 23990 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23991 ;; Parameters:    Size  Location     Type
 23992 ;;		None
 23993 ;; Auto vars:     Size  Location     Type
 23994 ;;		None
 23995 ;; Return value:  Size  Location     Type
 23996 ;;                  1  [STACK] void 
 23997 ;; Registers used:
 23998 ;;		wreg, status,2, status,0, pclath, tosl
 23999 ;; Tracked objects:
 24000 ;;		On entry : 3F/39
 24001 ;;		On exit  : 0/0
 24002 ;;		Unchanged: 0/0
 24003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24008 ;;Total ram usage:        0 bytes
 24009 ;; Hardware stack levels used:    1
 24010 ;; Hardware stack levels required when called:    1
 24011 ;; This function calls:
 24012 ;;		Absolute function
 24013 ;;		_INT1_DefaultInterruptHandler
 24014 ;; This function is called by:
 24015 ;;		_INT1_ISR
 24016 ;; This function uses a reentrant model
 24017 ;;
 24018                           
 24019                           	psect	text119
 24020  017F80                     __ptext119:
 24021                           	opt callstack 0
 24022  017F80                     _INT1_CallBack:
 24023                           	opt callstack 12
 24024                           
 24025                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 24026                           
 24027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24028                           ;incstack = 0
 24029  017F80  5016               	movf	_INT1_InterruptHandler^0,w,c
 24030  017F82  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24031  017F84  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24032  017F86  B4D8               	btfsc	status,2,c
 24033  017F88  0012               	return	
 24034                           
 24035                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 24036  017F8A  D801               	call	u379_48
 24037  017F8C  0012               	return	
 24038  017F8E                     u379_48:
 24039  017F8E  0005               	push	
 24040  017F90  6EFA               	movwf	pclath,c
 24041  017F92  5016               	movf	_INT1_InterruptHandler^0,w,c
 24042  017F94  6EFD               	movwf	tosl,c
 24043  017F96  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24044  017F98  6EFE               	movwf	tosh,c
 24045  017F9A  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24046  017F9C  6EFF               	movwf	tosu,c
 24047  017F9E  50FA               	movf	pclath,w,c
 24048  017FA0  0012               	return		;indir
 24049  017FA2                     __end_of_INT1_CallBack:
 24050                           	opt callstack 0
 24051                           
 24052 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24053 ;; Defined at:
 24054 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 24055 ;; Parameters:    Size  Location     Type
 24056 ;;		None
 24057 ;; Auto vars:     Size  Location     Type
 24058 ;;		None
 24059 ;; Return value:  Size  Location     Type
 24060 ;;                  1  [STACK] void 
 24061 ;; Registers used:
 24062 ;;		None
 24063 ;; Tracked objects:
 24064 ;;		On entry : 0/39
 24065 ;;		On exit  : 0/0
 24066 ;;		Unchanged: 0/0
 24067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24072 ;;Total ram usage:        0 bytes
 24073 ;; Hardware stack levels used:    1
 24074 ;; This function calls:
 24075 ;;		Nothing
 24076 ;; This function is called by:
 24077 ;;		_EXT_INT_Initialize
 24078 ;;		_INT1_CallBack
 24079 ;; This function uses a reentrant model
 24080 ;;
 24081                           
 24082                           	psect	text120
 24083  018258                     __ptext120:
 24084                           	opt callstack 0
 24085  018258                     _INT1_DefaultInterruptHandler:
 24086                           	opt callstack 12
 24087                           
 24088                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24089                           
 24090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24091                           ;incstack = 0
 24092  018258  0012               	return		;funcret
 24093  01825A                     __end_of_INT1_DefaultInterruptHandler:
 24094                           	opt callstack 0
 24095                           
 24096 ;; *************** function _Default_ISR *****************
 24097 ;; Defined at:
 24098 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;		None
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  1    wreg      void 
 24105 ;; Registers used:
 24106 ;;		None
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24116 ;;Total ram usage:        0 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; This function calls:
 24119 ;;		Nothing
 24120 ;; This function is called by:
 24121 ;;		Interrupt level 2
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125                           	psect	text121
 24126  018250                     __ptext121:
 24127                           	opt callstack 0
 24128  018250                     _Default_ISR:
 24129                           	opt callstack 14
 24130                           
 24131                           ;incstack = 0
 24132  018250  EE13  F356         	lfsr	1,___inthi_sp
 24133  018254  0011               	retfie		f
 24134  018256                     __end_of_Default_ISR:
 24135                           	opt callstack 0
 24136                           
 24137 ;; *************** function _ADCC_ISR *****************
 24138 ;; Defined at:
 24139 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;		None
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;		None
 24144 ;; Return value:  Size  Location     Type
 24145 ;;                  1    wreg      void 
 24146 ;; Registers used:
 24147 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24148 ;; Tracked objects:
 24149 ;;		On entry : 0/0
 24150 ;;		On exit  : 0/0
 24151 ;;		Unchanged: 0/0
 24152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;Total ram usage:        1 bytes
 24158 ;; Hardware stack levels used:    1
 24159 ;; Hardware stack levels required when called:    1
 24160 ;; This function calls:
 24161 ;;		Absolute function
 24162 ;;		_ADCC_DefaultInterruptHandler
 24163 ;;		_adc_int_handler
 24164 ;; This function is called by:
 24165 ;;		Interrupt level 2
 24166 ;; This function uses a non-reentrant model
 24167 ;;
 24168                           
 24169                           	psect	text122
 24170  017A24                     __ptext122:
 24171                           	opt callstack 0
 24172  017A24                     _ADCC_ISR:
 24173                           	opt callstack 13
 24174                           
 24175                           ;incstack = 0
 24176  017A24  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 24177  017A2A  EE13  F356         	lfsr	1,___inthi_sp
 24178                           
 24179                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24180  017A2E  0139               	movlb	57	; () banked
 24181  017A30  95A1               	bcf	161,2,b	;volatile
 24182                           
 24183                           ; BSR set to: 57
 24184                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24185  017A32  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24186  017A34  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24187  017A36  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24188  017A38  B4D8               	btfsc	status,2,c
 24189  017A3A  D00C               	goto	i2u407_49
 24190                           
 24191                           ; BSR set to: 57
 24192                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24193  017A3C  D801               	call	i2u407_48
 24194  017A3E  D00A               	goto	i2u407_49
 24195  017A40                     i2u407_48:
 24196  017A40  0005               	push	
 24197  017A42  6EFA               	movwf	pclath,c
 24198  017A44  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24199  017A46  6EFD               	movwf	tosl,c
 24200  017A48  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24201  017A4A  6EFE               	movwf	tosh,c
 24202  017A4C  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24203  017A4E  6EFF               	movwf	tosu,c
 24204  017A50  50FA               	movf	pclath,w,c
 24205  017A52  0012               	return		;indir
 24206  017A54                     i2u407_49:
 24207  017A54  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 24208  017A5A  0011               	retfie		f
 24209  017A5C                     __end_of_ADCC_ISR:
 24210                           	opt callstack 0
 24211                           
 24212 ;; *************** function _adc_int_t_handler *****************
 24213 ;; Defined at:
 24214 ;;		line 117 in file "daq.c"
 24215 ;; Parameters:    Size  Location     Type
 24216 ;;		None
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;		None
 24219 ;; Return value:  Size  Location     Type
 24220 ;;                  1  [STACK] void 
 24221 ;; Registers used:
 24222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24223 ;; Tracked objects:
 24224 ;;		On entry : 3F/39
 24225 ;;		On exit  : 1/0
 24226 ;;		Unchanged: 0/0
 24227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;Total ram usage:        0 bytes
 24233 ;; Hardware stack levels used:    1
 24234 ;; Hardware stack levels required when called:    1
 24235 ;; This function calls:
 24236 ;;		_ADCC_StartConversion
 24237 ;; This function is called by:
 24238 ;;		_start_adc_scan
 24239 ;;		_ADCC_ThresholdISR
 24240 ;; This function uses a reentrant model
 24241 ;;
 24242                           
 24243                           	psect	text123
 24244  016E00                     __ptext123:
 24245                           	opt callstack 0
 24246  016E00                     _adc_int_t_handler:
 24247                           	opt callstack 12
 24248                           
 24249                           ;daq.c: 122:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 24250                           
 24251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24252                           ;incstack = 0
 24253  016E00  013E               	movlb	62	; () banked
 24254  016E02  51E6               	movf	230,w,b	;volatile
 24255  016E04  006F FB9C  F035    	movff	16103,btemp	;volatile
 24256  016E0A  6A36               	clrf	(btemp+1)^0,c
 24257  016E0C  0060  F0D4  F036   	movff	btemp,btemp+1
 24258  016E12  6A35               	clrf	btemp^0,c
 24259  016E14  2635               	addwf	btemp^0,f,c
 24260  016E16  0E00               	movlw	0
 24261  016E18  2236               	addwfc	(btemp+1)^0,f,c
 24262  016E1A  0100               	movlb	0	; () banked
 24263  016E1C  5188               	movf	(_R+40)& (0+255),w,b	;volatile
 24264  016E1E  0D02               	mullw	2
 24265  016E20  50F3               	movf	243,w,c
 24266  016E22  0F60               	addlw	low _R
 24267  016E24  6ED9               	movwf	fsr2l,c
 24268  016E26  6ADA               	clrf	fsr2h,c
 24269  016E28  0060  F0D7  FFDE   	movff	btemp,postinc2
 24270  016E2E  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 24271  016E34                     l8687:
 24272                           
 24273                           ;daq.c: 124:   if (++R.scan_index > 0XD) {
 24274  016E34  0100               	movlb	0	; () banked
 24275  016E36  2B88               	incf	(_R+40)& (0+255),f,b	;volatile
 24276  016E38  0E0D               	movlw	13
 24277  016E3A  6588               	cpfsgt	(_R+40)& (0+255),b	;volatile
 24278  016E3C  D004               	goto	l8695
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;daq.c: 125:    R.done = 1;
 24282  016E3E  0E01               	movlw	1
 24283  016E40  6F8B               	movwf	(_R+43)& (0+255),b	;volatile
 24284                           
 24285                           ; BSR set to: 0
 24286  016E42  92BE               	bcf	190,1,c	;volatile
 24287  016E44  0012               	return	
 24288  016E46                     l8695:
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;daq.c: 129:  } while (!((R.scan_select >> R.scan_index) &0x1));
 24292  016E46  0060  F220  F040   	movff	_R+40,btemp+11	;volatile
 24293  016E4C  EE20  F089         	lfsr	2,_R+41	;volatile
 24294  016E50  006F FF78  F03D    	movff	postinc2,btemp+8
 24295  016E56  006F FF74  F03E    	movff	postdec2,btemp+9
 24296  016E5C  2A40               	incf	(btemp+11)^0,f,c
 24297  016E5E  D003               	goto	u824_44
 24298  016E60                     u824_45:
 24299  016E60  90D8               	bcf	status,0,c
 24300  016E62  323E               	rrcf	(btemp+9)^0,f,c
 24301  016E64  323D               	rrcf	(btemp+8)^0,f,c
 24302  016E66                     u824_44:
 24303  016E66  2E40               	decfsz	(btemp+11)^0,f,c
 24304  016E68  D7FB               	goto	u824_45
 24305  016E6A  A03D               	btfss	(btemp+8)^0,0,c
 24306  016E6C  D7E3               	goto	l8687
 24307                           
 24308                           ;daq.c: 130:  ADCC_StartConversion(R.scan_index & 0xf);
 24309  016E6E  0100               	movlb	0	; () banked
 24310  016E70  5188               	movf	(_R+40)& (0+255),w,b	;volatile
 24311  016E72  0B0F               	andlw	15
 24312  016E74  6EE6               	movwf	postinc1,c
 24313  016E76  ECC2  F0C0         	call	_ADCC_StartConversion	;wreg free
 24314                           
 24315                           ; BSR set to: 62
 24316  016E7A  A2BE               	btfss	190,1,c	;volatile
 24317  016E7C  D002               	goto	u826_40
 24318  016E7E  0E01               	movlw	1
 24319  016E80  D001               	goto	u826_46
 24320  016E82                     u826_40:
 24321  016E82  0E00               	movlw	0
 24322  016E84                     u826_46:
 24323  016E84  0AFF               	xorlw	255
 24324  016E86  6E40               	movwf	(btemp+11)^0,c
 24325  016E88  4640               	rlncf	(btemp+11)^0,f,c
 24326  016E8A  50BE               	movf	190,w,c	;volatile
 24327  016E8C  1840               	xorwf	(btemp+11)^0,w,c
 24328  016E8E  0BFD               	andlw	-3
 24329  016E90  1840               	xorwf	(btemp+11)^0,w,c
 24330  016E92  6EBE               	movwf	190,c	;volatile
 24331                           
 24332                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24333  016E94  0012               	return		;funcret
 24334  016E96                     __end_of_adc_int_t_handler:
 24335                           	opt callstack 0
 24336                           
 24337 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24338 ;; Defined at:
 24339 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24340 ;; Parameters:    Size  Location     Type
 24341 ;;		None
 24342 ;; Auto vars:     Size  Location     Type
 24343 ;;		None
 24344 ;; Return value:  Size  Location     Type
 24345 ;;                  1  [STACK] void 
 24346 ;; Registers used:
 24347 ;;		None
 24348 ;; Tracked objects:
 24349 ;;		On entry : 3F/39
 24350 ;;		On exit  : 0/0
 24351 ;;		Unchanged: 0/0
 24352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;Total ram usage:        0 bytes
 24358 ;; Hardware stack levels used:    1
 24359 ;; This function calls:
 24360 ;;		Nothing
 24361 ;; This function is called by:
 24362 ;;		_ADCC_Initialize
 24363 ;;		_ADCC_ISR
 24364 ;;		_ADCC_ThresholdISR
 24365 ;; This function uses a reentrant model
 24366 ;;
 24367                           
 24368                           	psect	text124
 24369  01825A                     __ptext124:
 24370                           	opt callstack 0
 24371  01825A                     _ADCC_DefaultInterruptHandler:
 24372                           	opt callstack 13
 24373                           
 24374                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24375                           
 24376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24377                           ;incstack = 0
 24378  01825A  0012               	return		;funcret
 24379  01825C                     __end_of_ADCC_DefaultInterruptHandler:
 24380                           	opt callstack 0
 24381                           
 24382 ;; *************** function _adc_int_handler *****************
 24383 ;; Defined at:
 24384 ;;		line 109 in file "daq.c"
 24385 ;; Parameters:    Size  Location     Type
 24386 ;;		None
 24387 ;; Auto vars:     Size  Location     Type
 24388 ;;		None
 24389 ;; Return value:  Size  Location     Type
 24390 ;;                  1  [STACK] void 
 24391 ;; Registers used:
 24392 ;;		wreg, status,2, status,0, btemp+11
 24393 ;; Tracked objects:
 24394 ;;		On entry : 3F/39
 24395 ;;		On exit  : 0/0
 24396 ;;		Unchanged: 0/0
 24397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;Total ram usage:        0 bytes
 24403 ;; Hardware stack levels used:    1
 24404 ;; This function calls:
 24405 ;;		Nothing
 24406 ;; This function is called by:
 24407 ;;		_start_adc_scan
 24408 ;;		_ADCC_ISR
 24409 ;; This function uses a reentrant model
 24410 ;;
 24411                           
 24412                           	psect	text125
 24413  01801E                     __ptext125:
 24414                           	opt callstack 0
 24415  01801E                     _adc_int_handler:
 24416                           	opt callstack 13
 24417                           
 24418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24419                           ;incstack = 0
 24420                           ;daq.c: 111:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24421  01801E  A4BE               	btfss	190,2,c	;volatile
 24422  018020  D002               	goto	u401_40
 24423  018022  0E01               	movlw	1
 24424  018024  D001               	goto	u401_46
 24425  018026                     u401_40:
 24426  018026  0E00               	movlw	0
 24427  018028                     u401_46:
 24428  018028  0AFF               	xorlw	255
 24429  01802A  6E40               	movwf	(btemp+11)^0,c
 24430  01802C  4640               	rlncf	(btemp+11)^0,f,c
 24431  01802E  4640               	rlncf	(btemp+11)^0,f,c
 24432  018030  50BE               	movf	190,w,c	;volatile
 24433  018032  1840               	xorwf	(btemp+11)^0,w,c
 24434  018034  0BFB               	andlw	-5
 24435  018036  1840               	xorwf	(btemp+11)^0,w,c
 24436  018038  6EBE               	movwf	190,c	;volatile
 24437                           
 24438                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24439  01803A  0012               	return		;funcret
 24440  01803C                     __end_of_adc_int_handler:
 24441                           	opt callstack 0
 24442                           
 24443 ;; *************** function _ADCC_ThresholdISR *****************
 24444 ;; Defined at:
 24445 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24446 ;; Parameters:    Size  Location     Type
 24447 ;;		None
 24448 ;; Auto vars:     Size  Location     Type
 24449 ;;		None
 24450 ;; Return value:  Size  Location     Type
 24451 ;;                  1    wreg      void 
 24452 ;; Registers used:
 24453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24454 ;; Tracked objects:
 24455 ;;		On entry : 0/0
 24456 ;;		On exit  : 0/0
 24457 ;;		Unchanged: 0/0
 24458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24461 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24462 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24463 ;;Total ram usage:        5 bytes
 24464 ;; Hardware stack levels used:    1
 24465 ;; Hardware stack levels required when called:    2
 24466 ;; This function calls:
 24467 ;;		Absolute function
 24468 ;;		_ADCC_DefaultInterruptHandler
 24469 ;;		_adc_int_t_handler
 24470 ;; This function is called by:
 24471 ;;		Interrupt level 2
 24472 ;; This function uses a non-reentrant model
 24473 ;;
 24474                           
 24475                           	psect	text126
 24476  017294                     __ptext126:
 24477                           	opt callstack 0
 24478  017294                     _ADCC_ThresholdISR:
 24479                           	opt callstack 12
 24480                           
 24481                           ;incstack = 0
 24482  017294  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24483  01729A  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24484  0172A0  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24485  0172A6  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24486  0172AC  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24487  0172B2  EE13  F356         	lfsr	1,___inthi_sp
 24488                           
 24489                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24490  0172B6  0139               	movlb	57	; () banked
 24491  0172B8  97A1               	bcf	161,3,b	;volatile
 24492                           
 24493                           ; BSR set to: 57
 24494                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24495  0172BA  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24496  0172BC  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24497  0172BE  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24498  0172C0  B4D8               	btfsc	status,2,c
 24499  0172C2  D00C               	goto	i2u828_49
 24500                           
 24501                           ; BSR set to: 57
 24502                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24503  0172C4  D801               	call	i2u828_48
 24504  0172C6  D00A               	goto	i2u828_49
 24505  0172C8                     i2u828_48:
 24506  0172C8  0005               	push	
 24507  0172CA  6EFA               	movwf	pclath,c
 24508  0172CC  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24509  0172CE  6EFD               	movwf	tosl,c
 24510  0172D0  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24511  0172D2  6EFE               	movwf	tosh,c
 24512  0172D4  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24513  0172D6  6EFF               	movwf	tosu,c
 24514  0172D8  50FA               	movf	pclath,w,c
 24515  0172DA  0012               	return		;indir
 24516  0172DC                     i2u828_49:
 24517  0172DC  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24518  0172E2  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24519  0172E8  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24520  0172EE  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24521  0172F4  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24522  0172FA  0011               	retfie		f
 24523  0172FC                     __end_of_ADCC_ThresholdISR:
 24524                           	opt callstack 0
 24525                           
 24526 ;; *************** function _UART1_tx_vect_isr *****************
 24527 ;; Defined at:
 24528 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24529 ;; Parameters:    Size  Location     Type
 24530 ;;		None
 24531 ;; Auto vars:     Size  Location     Type
 24532 ;;		None
 24533 ;; Return value:  Size  Location     Type
 24534 ;;                  1    wreg      void 
 24535 ;; Registers used:
 24536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24537 ;; Tracked objects:
 24538 ;;		On entry : 0/0
 24539 ;;		On exit  : 0/0
 24540 ;;		Unchanged: 0/0
 24541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24546 ;;Total ram usage:        0 bytes
 24547 ;; Hardware stack levels used:    1
 24548 ;; Hardware stack levels required when called:    1
 24549 ;; This function calls:
 24550 ;;		Absolute function
 24551 ;;		_UART1_Transmit_ISR
 24552 ;; This function is called by:
 24553 ;;		Interrupt level 2
 24554 ;; This function uses a non-reentrant model
 24555 ;;
 24556                           
 24557                           	psect	text127
 24558  017E78                     __ptext127:
 24559                           	opt callstack 0
 24560  017E78                     _UART1_tx_vect_isr:
 24561                           	opt callstack 13
 24562                           
 24563                           ;incstack = 0
 24564  017E78  EE13  F356         	lfsr	1,___inthi_sp
 24565                           
 24566                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24567  017E7C  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24568  017E7E  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24569  017E80  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24570  017E82  B4D8               	btfsc	status,2,c
 24571  017E84  0011               	retfie		f
 24572                           
 24573                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24574  017E86  D801               	call	i2u1000_48
 24575  017E88  0011               	retfie		f
 24576  017E8A                     i2u1000_48:
 24577  017E8A  0005               	push	
 24578  017E8C  6EFA               	movwf	pclath,c
 24579  017E8E  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24580  017E90  6EFD               	movwf	tosl,c
 24581  017E92  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24582  017E94  6EFE               	movwf	tosh,c
 24583  017E96  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24584  017E98  6EFF               	movwf	tosu,c
 24585  017E9A  50FA               	movf	pclath,w,c
 24586  017E9C  0012               	return		;indir
 24587  017E9E                     __end_of_UART1_tx_vect_isr:
 24588                           	opt callstack 0
 24589                           
 24590 ;; *************** function _UART1_Transmit_ISR *****************
 24591 ;; Defined at:
 24592 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24593 ;; Parameters:    Size  Location     Type
 24594 ;;		None
 24595 ;; Auto vars:     Size  Location     Type
 24596 ;;		None
 24597 ;; Return value:  Size  Location     Type
 24598 ;;                  1  [STACK] void 
 24599 ;; Registers used:
 24600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24601 ;; Tracked objects:
 24602 ;;		On entry : 0/0
 24603 ;;		On exit  : 3B/39
 24604 ;;		Unchanged: 0/0
 24605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24610 ;;Total ram usage:        0 bytes
 24611 ;; Hardware stack levels used:    1
 24612 ;; This function calls:
 24613 ;;		Nothing
 24614 ;; This function is called by:
 24615 ;;		_UART1_Initialize
 24616 ;;		_UART1_tx_vect_isr
 24617 ;; This function uses a reentrant model
 24618 ;;
 24619                           
 24620                           	psect	text128
 24621  017BEE                     __ptext128:
 24622                           	opt callstack 0
 24623  017BEE                     _UART1_Transmit_ISR:
 24624                           	opt callstack 13
 24625                           
 24626                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24627                           
 24628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24629                           ;incstack = 0
 24630  017BEE  0E40               	movlw	64
 24631  017BF0  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24632  017BF2  D010               	goto	l581
 24633                           
 24634                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24635  017BF4  0EAC               	movlw	low _uart1TxBuffer
 24636  017BF6  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24637  017BF8  6ED9               	movwf	fsr2l,c
 24638  017BFA  6ADA               	clrf	fsr2h,c
 24639  017BFC  0E02               	movlw	high _uart1TxBuffer
 24640  017BFE  22DA               	addwfc	fsr2h,f,c
 24641  017C00  50DF               	movf	indf2,w,c
 24642  017C02  013D               	movlb	61	; () banked
 24643  017C04  6FEA               	movwf	234,b	;volatile
 24644                           
 24645                           ; BSR set to: 61
 24646  017C06  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24647                           
 24648                           ; BSR set to: 61
 24649                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24650  017C08  0E3F               	movlw	63
 24651  017C0A  6433               	cpfsgt	_uart1TxTail^0,c
 24652  017C0C  D001               	goto	l8487
 24653                           
 24654                           ; BSR set to: 61
 24655                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24656  017C0E  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24657  017C10                     l8487:
 24658                           
 24659                           ; BSR set to: 61
 24660                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24661  017C10  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24662                           
 24663                           ;mcc_generated_files/uart1.c: 222:  } else {
 24664  017C12  0012               	return	
 24665  017C14                     l581:
 24666                           
 24667                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24668  017C14  0139               	movlb	57	; () banked
 24669  017C16  9993               	bcf	147,4,b	;volatile
 24670                           
 24671                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24672  017C18  0012               	return		;funcret
 24673  017C1A                     __end_of_UART1_Transmit_ISR:
 24674                           	opt callstack 0
 24675                           
 24676 ;; *************** function _UART1_rx_vect_isr *****************
 24677 ;; Defined at:
 24678 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24679 ;; Parameters:    Size  Location     Type
 24680 ;;		None
 24681 ;; Auto vars:     Size  Location     Type
 24682 ;;		None
 24683 ;; Return value:  Size  Location     Type
 24684 ;;                  1    wreg      void 
 24685 ;; Registers used:
 24686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24687 ;; Tracked objects:
 24688 ;;		On entry : 0/0
 24689 ;;		On exit  : 0/0
 24690 ;;		Unchanged: 0/0
 24691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;Total ram usage:        0 bytes
 24697 ;; Hardware stack levels used:    1
 24698 ;; Hardware stack levels required when called:    1
 24699 ;; This function calls:
 24700 ;;		Absolute function
 24701 ;;		_UART1_Receive_ISR
 24702 ;; This function is called by:
 24703 ;;		Interrupt level 2
 24704 ;; This function uses a non-reentrant model
 24705 ;;
 24706                           
 24707                           	psect	text129
 24708  017EA0                     __ptext129:
 24709                           	opt callstack 0
 24710  017EA0                     _UART1_rx_vect_isr:
 24711                           	opt callstack 13
 24712                           
 24713                           ;incstack = 0
 24714  017EA0  EE13  F356         	lfsr	1,___inthi_sp
 24715                           
 24716                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24717  017EA4  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24718  017EA6  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24719  017EA8  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24720  017EAA  B4D8               	btfsc	status,2,c
 24721  017EAC  0011               	retfie		f
 24722                           
 24723                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24724  017EAE  D801               	call	i2u1002_48
 24725  017EB0  0011               	retfie		f
 24726  017EB2                     i2u1002_48:
 24727  017EB2  0005               	push	
 24728  017EB4  6EFA               	movwf	pclath,c
 24729  017EB6  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24730  017EB8  6EFD               	movwf	tosl,c
 24731  017EBA  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24732  017EBC  6EFE               	movwf	tosh,c
 24733  017EBE  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24734  017EC0  6EFF               	movwf	tosu,c
 24735  017EC2  50FA               	movf	pclath,w,c
 24736  017EC4  0012               	return		;indir
 24737  017EC6                     __end_of_UART1_rx_vect_isr:
 24738                           	opt callstack 0
 24739                           
 24740 ;; *************** function _UART1_Receive_ISR *****************
 24741 ;; Defined at:
 24742 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24743 ;; Parameters:    Size  Location     Type
 24744 ;;		None
 24745 ;; Auto vars:     Size  Location     Type
 24746 ;;		None
 24747 ;; Return value:  Size  Location     Type
 24748 ;;                  1  [STACK] void 
 24749 ;; Registers used:
 24750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24751 ;; Tracked objects:
 24752 ;;		On entry : 0/0
 24753 ;;		On exit  : 0/0
 24754 ;;		Unchanged: 0/0
 24755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;Total ram usage:        0 bytes
 24761 ;; Hardware stack levels used:    1
 24762 ;; This function calls:
 24763 ;;		Nothing
 24764 ;; This function is called by:
 24765 ;;		_UART1_Initialize
 24766 ;;		_UART1_rx_vect_isr
 24767 ;; This function uses a reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text130
 24771  01803C                     __ptext130:
 24772                           	opt callstack 0
 24773  01803C                     _UART1_Receive_ISR:
 24774                           	opt callstack 13
 24775                           
 24776                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24777                           
 24778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24779                           ;incstack = 0
 24780  01803C  0E00               	movlw	low _uart1RxBuffer
 24781  01803E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24782  018040  6ED9               	movwf	fsr2l,c
 24783  018042  6ADA               	clrf	fsr2h,c
 24784  018044  0E05               	movlw	high _uart1RxBuffer
 24785  018046  22DA               	addwfc	fsr2h,f,c
 24786  018048  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24787  01804E  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24788                           
 24789                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24790  018050  2831               	incf	_uart1RxHead^0,w,c
 24791  018052  B4D8               	btfsc	status,2,c
 24792                           
 24793                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24794  018054  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24795                           
 24796                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24797  018056  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24798                           
 24799                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24800  018058  0012               	return		;funcret
 24801  01805A                     __end_of_UART1_Receive_ISR:
 24802                           	opt callstack 0
 24803                           
 24804 ;; *************** function _UART2_tx_vect_isr *****************
 24805 ;; Defined at:
 24806 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24807 ;; Parameters:    Size  Location     Type
 24808 ;;		None
 24809 ;; Auto vars:     Size  Location     Type
 24810 ;;		None
 24811 ;; Return value:  Size  Location     Type
 24812 ;;                  1    wreg      void 
 24813 ;; Registers used:
 24814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24815 ;; Tracked objects:
 24816 ;;		On entry : 0/0
 24817 ;;		On exit  : 0/0
 24818 ;;		Unchanged: 0/0
 24819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24824 ;;Total ram usage:        0 bytes
 24825 ;; Hardware stack levels used:    1
 24826 ;; Hardware stack levels required when called:    1
 24827 ;; This function calls:
 24828 ;;		Absolute function
 24829 ;;		_UART2_Transmit_ISR
 24830 ;; This function is called by:
 24831 ;;		Interrupt level 2
 24832 ;; This function uses a non-reentrant model
 24833 ;;
 24834                           
 24835                           	psect	text131
 24836  017EC8                     __ptext131:
 24837                           	opt callstack 0
 24838  017EC8                     _UART2_tx_vect_isr:
 24839                           	opt callstack 13
 24840                           
 24841                           ;incstack = 0
 24842  017EC8  EE13  F356         	lfsr	1,___inthi_sp
 24843                           
 24844                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24845  017ECC  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24846  017ECE  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24847  017ED0  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24848  017ED2  B4D8               	btfsc	status,2,c
 24849  017ED4  0011               	retfie		f
 24850                           
 24851                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24852  017ED6  D801               	call	i2u1004_48
 24853  017ED8  0011               	retfie		f
 24854  017EDA                     i2u1004_48:
 24855  017EDA  0005               	push	
 24856  017EDC  6EFA               	movwf	pclath,c
 24857  017EDE  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24858  017EE0  6EFD               	movwf	tosl,c
 24859  017EE2  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24860  017EE4  6EFE               	movwf	tosh,c
 24861  017EE6  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24862  017EE8  6EFF               	movwf	tosu,c
 24863  017EEA  50FA               	movf	pclath,w,c
 24864  017EEC  0012               	return		;indir
 24865  017EEE                     __end_of_UART2_tx_vect_isr:
 24866                           	opt callstack 0
 24867                           
 24868 ;; *************** function _UART2_Transmit_ISR *****************
 24869 ;; Defined at:
 24870 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24871 ;; Parameters:    Size  Location     Type
 24872 ;;		None
 24873 ;; Auto vars:     Size  Location     Type
 24874 ;;		None
 24875 ;; Return value:  Size  Location     Type
 24876 ;;                  1  [STACK] void 
 24877 ;; Registers used:
 24878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24879 ;; Tracked objects:
 24880 ;;		On entry : 0/0
 24881 ;;		On exit  : 3B/39
 24882 ;;		Unchanged: 0/0
 24883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24888 ;;Total ram usage:        0 bytes
 24889 ;; Hardware stack levels used:    1
 24890 ;; This function calls:
 24891 ;;		Nothing
 24892 ;; This function is called by:
 24893 ;;		_UART2_Initialize
 24894 ;;		_UART2_tx_vect_isr
 24895 ;; This function uses a reentrant model
 24896 ;;
 24897                           
 24898                           	psect	text132
 24899  017C1A                     __ptext132:
 24900                           	opt callstack 0
 24901  017C1A                     _UART2_Transmit_ISR:
 24902                           	opt callstack 13
 24903                           
 24904                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24905                           
 24906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24907                           ;incstack = 0
 24908  017C1A  0E40               	movlw	64
 24909  017C1C  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24910  017C1E  D010               	goto	l701
 24911                           
 24912                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24913  017C20  0E00               	movlw	low _uart2TxBuffer
 24914  017C22  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24915  017C24  6ED9               	movwf	fsr2l,c
 24916  017C26  6ADA               	clrf	fsr2h,c
 24917  017C28  0E03               	movlw	high _uart2TxBuffer
 24918  017C2A  22DA               	addwfc	fsr2h,f,c
 24919  017C2C  50DF               	movf	indf2,w,c
 24920  017C2E  013D               	movlb	61	; () banked
 24921  017C30  6FD2               	movwf	210,b	;volatile
 24922                           
 24923                           ; BSR set to: 61
 24924  017C32  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24925                           
 24926                           ; BSR set to: 61
 24927                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24928  017C34  0E3F               	movlw	63
 24929  017C36  642D               	cpfsgt	_uart2TxTail^0,c
 24930  017C38  D001               	goto	l8509
 24931                           
 24932                           ; BSR set to: 61
 24933                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24934  017C3A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24935  017C3C                     l8509:
 24936                           
 24937                           ; BSR set to: 61
 24938                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24939  017C3C  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24940                           
 24941                           ;mcc_generated_files/uart2.c: 224:     }
 24942  017C3E  0012               	return	
 24943  017C40                     l701:
 24944                           
 24945                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24946  017C40  0139               	movlb	57	; () banked
 24947  017C42  9796               	bcf	150,3,b	;volatile
 24948                           
 24949                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24950  017C44  0012               	return		;funcret
 24951  017C46                     __end_of_UART2_Transmit_ISR:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _UART2_rx_vect_isr *****************
 24955 ;; Defined at:
 24956 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;		None
 24959 ;; Auto vars:     Size  Location     Type
 24960 ;;		None
 24961 ;; Return value:  Size  Location     Type
 24962 ;;                  1    wreg      void 
 24963 ;; Registers used:
 24964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24965 ;; Tracked objects:
 24966 ;;		On entry : 0/0
 24967 ;;		On exit  : 0/0
 24968 ;;		Unchanged: 0/0
 24969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;Total ram usage:        0 bytes
 24975 ;; Hardware stack levels used:    1
 24976 ;; Hardware stack levels required when called:    1
 24977 ;; This function calls:
 24978 ;;		Absolute function
 24979 ;;		_UART2_Receive_ISR
 24980 ;; This function is called by:
 24981 ;;		Interrupt level 2
 24982 ;; This function uses a non-reentrant model
 24983 ;;
 24984                           
 24985                           	psect	text133
 24986  017EF0                     __ptext133:
 24987                           	opt callstack 0
 24988  017EF0                     _UART2_rx_vect_isr:
 24989                           	opt callstack 13
 24990                           
 24991                           ;incstack = 0
 24992  017EF0  EE13  F356         	lfsr	1,___inthi_sp
 24993                           
 24994                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24995  017EF4  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24996  017EF6  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24997  017EF8  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24998  017EFA  B4D8               	btfsc	status,2,c
 24999  017EFC  0011               	retfie		f
 25000                           
 25001                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25002  017EFE  D801               	call	i2u1006_48
 25003  017F00  0011               	retfie		f
 25004  017F02                     i2u1006_48:
 25005  017F02  0005               	push	
 25006  017F04  6EFA               	movwf	pclath,c
 25007  017F06  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 25008  017F08  6EFD               	movwf	tosl,c
 25009  017F0A  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25010  017F0C  6EFE               	movwf	tosh,c
 25011  017F0E  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25012  017F10  6EFF               	movwf	tosu,c
 25013  017F12  50FA               	movf	pclath,w,c
 25014  017F14  0012               	return		;indir
 25015  017F16                     __end_of_UART2_rx_vect_isr:
 25016                           	opt callstack 0
 25017                           
 25018 ;; *************** function _UART2_Receive_ISR *****************
 25019 ;; Defined at:
 25020 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25021 ;; Parameters:    Size  Location     Type
 25022 ;;		None
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;		None
 25025 ;; Return value:  Size  Location     Type
 25026 ;;                  1  [STACK] void 
 25027 ;; Registers used:
 25028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25029 ;; Tracked objects:
 25030 ;;		On entry : 0/0
 25031 ;;		On exit  : 0/0
 25032 ;;		Unchanged: 0/0
 25033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25038 ;;Total ram usage:        0 bytes
 25039 ;; Hardware stack levels used:    1
 25040 ;; This function calls:
 25041 ;;		Nothing
 25042 ;; This function is called by:
 25043 ;;		_UART2_Initialize
 25044 ;;		_UART2_rx_vect_isr
 25045 ;; This function uses a reentrant model
 25046 ;;
 25047                           
 25048                           	psect	text134
 25049  01805A                     __ptext134:
 25050                           	opt callstack 0
 25051  01805A                     _UART2_Receive_ISR:
 25052                           	opt callstack 13
 25053                           
 25054                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25055                           
 25056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25057                           ;incstack = 0
 25058  01805A  0E00               	movlw	low _uart2RxBuffer
 25059  01805C  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 25060  01805E  6ED9               	movwf	fsr2l,c
 25061  018060  6ADA               	clrf	fsr2h,c
 25062  018062  0E06               	movlw	high _uart2RxBuffer
 25063  018064  22DA               	addwfc	fsr2h,f,c
 25064  018066  006F F743 FFDF     	movff	15824,indf2	;volatile
 25065  01806C  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 25066                           
 25067                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25068  01806E  282B               	incf	_uart2RxHead^0,w,c
 25069  018070  B4D8               	btfsc	status,2,c
 25070                           
 25071                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25072  018072  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 25073                           
 25074                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25075  018074  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 25076                           
 25077                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25078  018076  0012               	return		;funcret
 25079  018078                     __end_of_UART2_Receive_ISR:
 25080                           	opt callstack 0
 25081                           
 25082 ;; *************** function _TMR6_ISR *****************
 25083 ;; Defined at:
 25084 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;		None
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;		None
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  1    wreg      void 
 25091 ;; Registers used:
 25092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25093 ;; Tracked objects:
 25094 ;;		On entry : 0/0
 25095 ;;		On exit  : 0/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;Total ram usage:        1 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:    2
 25105 ;; This function calls:
 25106 ;;		_TMR6_CallBack
 25107 ;; This function is called by:
 25108 ;;		Interrupt level 2
 25109 ;; This function uses a non-reentrant model
 25110 ;;
 25111                           
 25112                           	psect	text135
 25113  0180E4                     __ptext135:
 25114                           	opt callstack 0
 25115  0180E4                     _TMR6_ISR:
 25116                           	opt callstack 12
 25117                           
 25118                           ;incstack = 0
 25119  0180E4  0060  F0D4  F0DE   	movff	btemp,??_TMR6_ISR
 25120  0180EA  EE13  F356         	lfsr	1,___inthi_sp
 25121                           
 25122                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25123  0180EE  0139               	movlb	57	; () banked
 25124  0180F0  91A9               	bcf	169,0,b	;volatile
 25125                           
 25126                           ; BSR set to: 57
 25127                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25128  0180F2  ECD1  F0BF         	call	_TMR6_CallBack	;wreg free
 25129  0180F6  0060  F378  F035   	movff	??_TMR6_ISR,btemp
 25130  0180FC  0011               	retfie		f
 25131  0180FE                     __end_of_TMR6_ISR:
 25132                           	opt callstack 0
 25133                           
 25134 ;; *************** function _TMR6_CallBack *****************
 25135 ;; Defined at:
 25136 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25137 ;; Parameters:    Size  Location     Type
 25138 ;;		None
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;		None
 25141 ;; Return value:  Size  Location     Type
 25142 ;;                  1  [STACK] void 
 25143 ;; Registers used:
 25144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25145 ;; Tracked objects:
 25146 ;;		On entry : 3F/39
 25147 ;;		On exit  : 0/0
 25148 ;;		Unchanged: 0/0
 25149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25154 ;;Total ram usage:        0 bytes
 25155 ;; Hardware stack levels used:    1
 25156 ;; Hardware stack levels required when called:    1
 25157 ;; This function calls:
 25158 ;;		Absolute function
 25159 ;;		_TMR6_DefaultInterruptHandler
 25160 ;; This function is called by:
 25161 ;;		_TMR6_ISR
 25162 ;; This function uses a reentrant model
 25163 ;;
 25164                           
 25165                           	psect	text136
 25166  017FA2                     __ptext136:
 25167                           	opt callstack 0
 25168  017FA2                     _TMR6_CallBack:
 25169                           	opt callstack 12
 25170                           
 25171                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25172                           
 25173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25174                           ;incstack = 0
 25175  017FA2  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25176  017FA4  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 25177  017FA6  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 25178  017FA8  B4D8               	btfsc	status,2,c
 25179  017FAA  0012               	return	
 25180                           
 25181                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25182  017FAC  D801               	call	u809_48
 25183  017FAE  0012               	return	
 25184  017FB0                     u809_48:
 25185  017FB0  0005               	push	
 25186  017FB2  6EFA               	movwf	pclath,c
 25187  017FB4  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25188  017FB6  6EFD               	movwf	tosl,c
 25189  017FB8  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 25190  017FBA  6EFE               	movwf	tosh,c
 25191  017FBC  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 25192  017FBE  6EFF               	movwf	tosu,c
 25193  017FC0  50FA               	movf	pclath,w,c
 25194  017FC2  0012               	return		;indir
 25195  017FC4                     __end_of_TMR6_CallBack:
 25196                           	opt callstack 0
 25197                           
 25198 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25199 ;; Defined at:
 25200 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;  i               1  [STACK] unsigned char 
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  1  [STACK] void 
 25207 ;; Registers used:
 25208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/39
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; This function calls:
 25221 ;;		Nothing
 25222 ;; This function is called by:
 25223 ;;		_TMR6_Initialize
 25224 ;;		_TMR6_CallBack
 25225 ;; This function uses a reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text137
 25229  017860                     __ptext137:
 25230                           	opt callstack 0
 25231  017860                     _TMR6_DefaultInterruptHandler:
 25232                           	opt callstack 0
 25233                           
 25234                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25235  017860  52E6               	movf	postinc1,f,c
 25236                           
 25237                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25238                           ;stkvar	_i @ sp[(-1)+0]
 25239                           
 25240                           ;incstack = 0
 25241  017862  0EFF               	movlw	-1
 25242  017864  6AE3               	clrf	plusw1,c
 25243  017866                     l8253:
 25244                           
 25245                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25246                           ;stkvar	_i @ sp[(-1)+0]
 25247  017866  0EFF               	movlw	-1
 25248  017868  50E3               	movf	plusw1,w,c
 25249  01786A  0D02               	mullw	2
 25250  01786C  50F3               	movf	243,w,c
 25251  01786E  0FA3               	addlw	low _tickCount
 25252  017870  6ED9               	movwf	fsr2l,c
 25253  017872  6ADA               	clrf	fsr2h,c
 25254  017874  50DE               	movf	postinc2,w,c
 25255  017876  10DE               	iorwf	postinc2,w,c
 25256  017878  B4D8               	btfsc	status,2,c
 25257  01787A  D00A               	goto	l8257
 25258                           
 25259                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25260                           ;stkvar	_i @ sp[(-1)+0]
 25261  01787C  0EFF               	movlw	-1
 25262  01787E  50E3               	movf	plusw1,w,c
 25263  017880  0D02               	mullw	2
 25264  017882  50F3               	movf	243,w,c
 25265  017884  0FA3               	addlw	low _tickCount
 25266  017886  6ED9               	movwf	fsr2l,c
 25267  017888  6ADA               	clrf	fsr2h,c
 25268  01788A  06DE               	decf	postinc2,f,c
 25269  01788C  0E00               	movlw	0
 25270  01788E  5ADD               	subwfb	postdec2,f,c
 25271  017890                     l8257:
 25272                           
 25273                           ;mcc_generated_files/tmr6.c: 207:  }
 25274                           ;stkvar	_i @ sp[(-1)+0]
 25275  017890  0EFF               	movlw	-1
 25276  017892  2AE3               	incf	plusw1,f,c
 25277                           
 25278                           ;stkvar	_i @ sp[(-1)+0]
 25279  017894  0EFF               	movlw	-1
 25280  017896  006F FF8C  F035    	movff	plusw1,btemp
 25281  01789C  0E0B               	movlw	11
 25282  01789E  6435               	cpfsgt	btemp^0,c
 25283  0178A0  D7E2               	goto	l8253
 25284                           
 25285                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25286  0178A2  52E5               	movf	postdec1,f,c
 25287  0178A4  0012               	return		;funcret
 25288  0178A6                     __end_of_TMR6_DefaultInterruptHandler:
 25289                           	opt callstack 0
 25290                           
 25291 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25292 ;; Defined at:
 25293 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25294 ;; Parameters:    Size  Location     Type
 25295 ;;		None
 25296 ;; Auto vars:     Size  Location     Type
 25297 ;;		None
 25298 ;; Return value:  Size  Location     Type
 25299 ;;                  1    wreg      void 
 25300 ;; Registers used:
 25301 ;;		None
 25302 ;; Tracked objects:
 25303 ;;		On entry : 0/0
 25304 ;;		On exit  : 3F/0
 25305 ;;		Unchanged: 0/0
 25306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;Total ram usage:        0 bytes
 25312 ;; Hardware stack levels used:    1
 25313 ;; This function calls:
 25314 ;;		Nothing
 25315 ;; This function is called by:
 25316 ;;		Interrupt level 2
 25317 ;; This function uses a non-reentrant model
 25318 ;;
 25319                           
 25320                           	psect	text138
 25321  0181E4                     __ptext138:
 25322                           	opt callstack 0
 25323  0181E4                     _DMA1_DMASCNT_ISR:
 25324                           	opt callstack 14
 25325                           
 25326                           ;incstack = 0
 25327  0181E4  EE13  F356         	lfsr	1,___inthi_sp
 25328                           
 25329                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25330  0181E8  0139               	movlb	57	; () banked
 25331  0181EA  91A2               	bcf	162,0,b	;volatile
 25332                           
 25333                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25334  0181EC  0100               	movlb	0	; () banked
 25335  0181EE  97BB               	bcf	_spi_link& (0+255),3,b	;volatile
 25336                           
 25337                           ; BSR set to: 0
 25338  0181F0  0011               	retfie		f
 25339  0181F2                     __end_of_DMA1_DMASCNT_ISR:
 25340                           	opt callstack 0
 25341                           
 25342 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25343 ;; Defined at:
 25344 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;		None
 25347 ;; Auto vars:     Size  Location     Type
 25348 ;;		None
 25349 ;; Return value:  Size  Location     Type
 25350 ;;                  1    wreg      void 
 25351 ;; Registers used:
 25352 ;;		None
 25353 ;; Tracked objects:
 25354 ;;		On entry : 0/0
 25355 ;;		On exit  : 3F/39
 25356 ;;		Unchanged: 0/0
 25357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25362 ;;Total ram usage:        0 bytes
 25363 ;; Hardware stack levels used:    1
 25364 ;; This function calls:
 25365 ;;		Nothing
 25366 ;; This function is called by:
 25367 ;;		Interrupt level 2
 25368 ;; This function uses a non-reentrant model
 25369 ;;
 25370                           
 25371                           	psect	text139
 25372  0181FC                     __ptext139:
 25373                           	opt callstack 0
 25374  0181FC                     _DMA1_DMADCNT_ISR:
 25375                           	opt callstack 14
 25376                           
 25377                           ; BSR set to: 0
 25378                           ;incstack = 0
 25379  0181FC  EE13  F356         	lfsr	1,___inthi_sp
 25380                           
 25381                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25382  018200  0139               	movlb	57	; () banked
 25383  018202  93A2               	bcf	162,1,b	;volatile
 25384                           
 25385                           ; BSR set to: 57
 25386  018204  0011               	retfie		f
 25387  018206                     __end_of_DMA1_DMADCNT_ISR:
 25388                           	opt callstack 0
 25389                           
 25390 ;; *************** function _DMA1_DMAA_ISR *****************
 25391 ;; Defined at:
 25392 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25393 ;; Parameters:    Size  Location     Type
 25394 ;;		None
 25395 ;; Auto vars:     Size  Location     Type
 25396 ;;		None
 25397 ;; Return value:  Size  Location     Type
 25398 ;;                  1    wreg      void 
 25399 ;; Registers used:
 25400 ;;		None
 25401 ;; Tracked objects:
 25402 ;;		On entry : 0/0
 25403 ;;		On exit  : 3F/39
 25404 ;;		Unchanged: 0/0
 25405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;Total ram usage:        0 bytes
 25411 ;; Hardware stack levels used:    1
 25412 ;; This function calls:
 25413 ;;		Nothing
 25414 ;; This function is called by:
 25415 ;;		Interrupt level 2
 25416 ;; This function uses a non-reentrant model
 25417 ;;
 25418                           
 25419                           	psect	text140
 25420  018208                     __ptext140:
 25421                           	opt callstack 0
 25422  018208                     _DMA1_DMAA_ISR:
 25423                           	opt callstack 14
 25424                           
 25425                           ; BSR set to: 57
 25426                           ;incstack = 0
 25427  018208  EE13  F356         	lfsr	1,___inthi_sp
 25428                           
 25429                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25430  01820C  0139               	movlb	57	; () banked
 25431  01820E  97A2               	bcf	162,3,b	;volatile
 25432                           
 25433                           ; BSR set to: 57
 25434  018210  0011               	retfie		f
 25435  018212                     __end_of_DMA1_DMAA_ISR:
 25436                           	opt callstack 0
 25437                           
 25438 ;; *************** function _DMA1_DMAOR_ISR *****************
 25439 ;; Defined at:
 25440 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25441 ;; Parameters:    Size  Location     Type
 25442 ;;		None
 25443 ;; Auto vars:     Size  Location     Type
 25444 ;;		None
 25445 ;; Return value:  Size  Location     Type
 25446 ;;                  1    wreg      void 
 25447 ;; Registers used:
 25448 ;;		None
 25449 ;; Tracked objects:
 25450 ;;		On entry : 0/0
 25451 ;;		On exit  : 3F/39
 25452 ;;		Unchanged: 0/0
 25453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25458 ;;Total ram usage:        0 bytes
 25459 ;; Hardware stack levels used:    1
 25460 ;; This function calls:
 25461 ;;		Nothing
 25462 ;; This function is called by:
 25463 ;;		Interrupt level 2
 25464 ;; This function uses a non-reentrant model
 25465 ;;
 25466                           
 25467                           	psect	text141
 25468  018214                     __ptext141:
 25469                           	opt callstack 0
 25470  018214                     _DMA1_DMAOR_ISR:
 25471                           	opt callstack 14
 25472                           
 25473                           ; BSR set to: 57
 25474                           ;incstack = 0
 25475  018214  EE13  F356         	lfsr	1,___inthi_sp
 25476                           
 25477                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25478  018218  0139               	movlb	57	; () banked
 25479  01821A  95A2               	bcf	162,2,b	;volatile
 25480                           
 25481                           ; BSR set to: 57
 25482  01821C  0011               	retfie		f
 25483  01821E                     __end_of_DMA1_DMAOR_ISR:
 25484                           	opt callstack 0
 25485                           
 25486                           ;
 25487                           ; Interrupt Vector Table @ 0x8
 25488                           ;
 25489                           
 25490                           	psect	ivt0x8
 25491  000008                     __pivt0x8:
 25492                           	opt callstack 0
 25493  000008                     ivt0x8_base:
 25494                           	opt callstack 0
 25495                           
 25496                           ; Vector 0 : SWINT
 25497  000008  6094               	dw	_Default_ISR shr (0+2)
 25498                           
 25499                           ; Vector 1 : HLVD
 25500  00000A  6094               	dw	_Default_ISR shr (0+2)
 25501                           
 25502                           ; Vector 2 : OSF
 25503  00000C  6094               	dw	_Default_ISR shr (0+2)
 25504                           
 25505                           ; Vector 3 : CSW
 25506  00000E  6094               	dw	_Default_ISR shr (0+2)
 25507                           
 25508                           ; Vector 4 : NVM
 25509  000010  6094               	dw	_Default_ISR shr (0+2)
 25510                           
 25511                           ; Vector 5 : SCAN
 25512  000012  6094               	dw	_Default_ISR shr (0+2)
 25513                           
 25514                           ; Vector 6 : CRC
 25515  000014  6094               	dw	_Default_ISR shr (0+2)
 25516                           
 25517                           ; Vector 7 : IOC
 25518  000016  6094               	dw	_Default_ISR shr (0+2)
 25519                           
 25520                           ; Vector 8 : INT0
 25521  000018  6071               	dw	_INT0_ISR shr (0+2)
 25522                           
 25523                           ; Vector 9 : ZCD
 25524  00001A  6094               	dw	_Default_ISR shr (0+2)
 25525                           
 25526                           ; Vector 10 : AD
 25527  00001C  5E89               	dw	_ADCC_ISR shr (0+2)
 25528                           
 25529                           ; Vector 11 : ADT
 25530  00001E  5CA5               	dw	_ADCC_ThresholdISR shr (0+2)
 25531                           
 25532                           ; Vector 12 : CMP1
 25533  000020  6094               	dw	_Default_ISR shr (0+2)
 25534                           
 25535                           ; Vector 13 : SMT1
 25536  000022  6094               	dw	_Default_ISR shr (0+2)
 25537                           
 25538                           ; Vector 14 : SMT1PRA
 25539  000024  6094               	dw	_Default_ISR shr (0+2)
 25540                           
 25541                           ; Vector 15 : SMT1PRW
 25542  000026  6094               	dw	_Default_ISR shr (0+2)
 25543                           
 25544                           ; Vector 16 : DMA1SCNT
 25545  000028  6079               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25546                           
 25547                           ; Vector 17 : DMA1DCNT
 25548  00002A  607F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25549                           
 25550                           ; Vector 18 : DMA1OR
 25551  00002C  6085               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25552                           
 25553                           ; Vector 19 : DMA1A
 25554  00002E  6082               	dw	_DMA1_DMAA_ISR shr (0+2)
 25555                           
 25556                           ; Vector 20 : SPI1RX
 25557  000030  6094               	dw	_Default_ISR shr (0+2)
 25558                           
 25559                           ; Vector 21 : SPI1TX
 25560  000032  6094               	dw	_Default_ISR shr (0+2)
 25561                           
 25562                           ; Vector 22 : SPI1
 25563  000034  6094               	dw	_Default_ISR shr (0+2)
 25564                           
 25565                           ; Vector 23 : I2C1RX
 25566  000036  6094               	dw	_Default_ISR shr (0+2)
 25567                           
 25568                           ; Vector 24 : I2C1TX
 25569  000038  6094               	dw	_Default_ISR shr (0+2)
 25570                           
 25571                           ; Vector 25 : I2C1
 25572  00003A  6094               	dw	_Default_ISR shr (0+2)
 25573                           
 25574                           ; Vector 26 : I2C1E
 25575  00003C  6094               	dw	_Default_ISR shr (0+2)
 25576                           
 25577                           ; Vector 27 : U1RX
 25578  00003E  5FA8               	dw	_UART1_rx_vect_isr shr (0+2)
 25579                           
 25580                           ; Vector 28 : U1TX
 25581  000040  5F9E               	dw	_UART1_tx_vect_isr shr (0+2)
 25582                           
 25583                           ; Vector 29 : U1E
 25584  000042  6094               	dw	_Default_ISR shr (0+2)
 25585                           
 25586                           ; Vector 30 : U1
 25587  000044  6094               	dw	_Default_ISR shr (0+2)
 25588                           
 25589                           ; Vector 31 : TMR0
 25590  000046  6094               	dw	_Default_ISR shr (0+2)
 25591                           
 25592                           ; Vector 32 : TMR1
 25593  000048  6094               	dw	_Default_ISR shr (0+2)
 25594                           
 25595                           ; Vector 33 : TMR1G
 25596  00004A  6094               	dw	_Default_ISR shr (0+2)
 25597                           
 25598                           ; Vector 34 : TMR2
 25599  00004C  6094               	dw	_Default_ISR shr (0+2)
 25600                           
 25601                           ; Vector 35 : CCP1
 25602  00004E  6094               	dw	_Default_ISR shr (0+2)
 25603                           
 25604                           ; Vector 36 : Undefined
 25605  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25606                           
 25607                           ; Vector 37 : NCO1
 25608  000052  6094               	dw	_Default_ISR shr (0+2)
 25609                           
 25610                           ; Vector 38 : CWG1
 25611  000054  6094               	dw	_Default_ISR shr (0+2)
 25612                           
 25613                           ; Vector 39 : CLC1
 25614  000056  6094               	dw	_Default_ISR shr (0+2)
 25615                           
 25616                           ; Vector 40 : INT1
 25617  000058  6075               	dw	_INT1_ISR shr (0+2)
 25618                           
 25619                           ; Vector 41 : CMP2
 25620  00005A  6094               	dw	_Default_ISR shr (0+2)
 25621                           
 25622                           ; Vector 42 : DMA2SCNT
 25623  00005C  6094               	dw	_Default_ISR shr (0+2)
 25624                           
 25625                           ; Vector 43 : DMA2DCNT
 25626  00005E  6094               	dw	_Default_ISR shr (0+2)
 25627                           
 25628                           ; Vector 44 : DMA2OR
 25629  000060  6094               	dw	_Default_ISR shr (0+2)
 25630                           
 25631                           ; Vector 45 : DMA2A
 25632  000062  6094               	dw	_Default_ISR shr (0+2)
 25633                           
 25634                           ; Vector 46 : I2C2RX
 25635  000064  6094               	dw	_Default_ISR shr (0+2)
 25636                           
 25637                           ; Vector 47 : I2C2TX
 25638  000066  6094               	dw	_Default_ISR shr (0+2)
 25639                           
 25640                           ; Vector 48 : I2C2
 25641  000068  6094               	dw	_Default_ISR shr (0+2)
 25642                           
 25643                           ; Vector 49 : I2C2E
 25644  00006A  6094               	dw	_Default_ISR shr (0+2)
 25645                           
 25646                           ; Vector 50 : U2RX
 25647  00006C  5FBC               	dw	_UART2_rx_vect_isr shr (0+2)
 25648                           
 25649                           ; Vector 51 : U2TX
 25650  00006E  5FB2               	dw	_UART2_tx_vect_isr shr (0+2)
 25651                           
 25652                           ; Vector 52 : U2E
 25653  000070  6094               	dw	_Default_ISR shr (0+2)
 25654                           
 25655                           ; Vector 53 : U2
 25656  000072  6094               	dw	_Default_ISR shr (0+2)
 25657                           
 25658                           ; Vector 54 : TMR3
 25659  000074  6094               	dw	_Default_ISR shr (0+2)
 25660                           
 25661                           ; Vector 55 : TMR3G
 25662  000076  6094               	dw	_Default_ISR shr (0+2)
 25663                           
 25664                           ; Vector 56 : TMR4
 25665  000078  6094               	dw	_Default_ISR shr (0+2)
 25666                           
 25667                           ; Vector 57 : CCP2
 25668  00007A  6094               	dw	_Default_ISR shr (0+2)
 25669                           
 25670                           ; Vector 58 : Undefined
 25671  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25672                           
 25673                           ; Vector 59 : CWG2
 25674  00007E  6094               	dw	_Default_ISR shr (0+2)
 25675                           
 25676                           ; Vector 60 : CLC2
 25677  000080  6094               	dw	_Default_ISR shr (0+2)
 25678                           
 25679                           ; Vector 61 : INT2
 25680  000082  6094               	dw	_Default_ISR shr (0+2)
 25681                           
 25682                           ; Vector 62 : Undefined
 25683  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25684                           
 25685                           ; Vector 63 : Undefined
 25686  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25687                           
 25688                           ; Vector 64 : Undefined
 25689  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25690                           
 25691                           ; Vector 65 : Undefined
 25692  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25693                           
 25694                           ; Vector 66 : Undefined
 25695  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25696                           
 25697                           ; Vector 67 : Undefined
 25698  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25699                           
 25700                           ; Vector 68 : Undefined
 25701  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25702                           
 25703                           ; Vector 69 : Undefined
 25704  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25705                           
 25706                           ; Vector 70 : TMR5
 25707  000094  5D53               	dw	_TMR5_ISR shr (0+2)
 25708                           
 25709                           ; Vector 71 : TMR5G
 25710  000096  6094               	dw	_Default_ISR shr (0+2)
 25711                           
 25712                           ; Vector 72 : TMR6
 25713  000098  6039               	dw	_TMR6_ISR shr (0+2)
 25714                           
 25715                           ; Vector 73 : CCP3
 25716  00009A  6094               	dw	_Default_ISR shr (0+2)
 25717                           
 25718                           ; Vector 74 : CWG3
 25719  00009C  6094               	dw	_Default_ISR shr (0+2)
 25720                           
 25721                           ; Vector 75 : CLC3
 25722  00009E  6094               	dw	_Default_ISR shr (0+2)
 25723                           
 25724                           ; Vector 76 : Undefined
 25725  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25726                           
 25727                           ; Vector 77 : Undefined
 25728  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25729                           
 25730                           ; Vector 78 : Undefined
 25731  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25732                           
 25733                           ; Vector 79 : Undefined
 25734  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25735                           
 25736                           ; Vector 80 : CCP4
 25737  0000A8  6094               	dw	_Default_ISR shr (0+2)
 25738                           
 25739                           ; Vector 81 : CLC4
 25740  0000AA  6094               	dw	_Default_ISR shr (0+2)
 25741  0000AC                     ivt0x8_undefint:
 25742                           	opt callstack 0
 25743  0000AC  00FF               	reset	
 25744                           
 25745                           	psect	text142
 25746  000000                     __ptext142:
 25747                           	opt callstack 0
 25748                           
 25749                           	psect	param0
 25750  0000                     
 25751                           	psect	temp
 25752  000035                     btemp:
 25753                           	opt callstack 0
 25754  000035                     	ds	32
 25755  0000                     wtemp0	set	btemp
 25756  0000                     wtemp1	set	btemp+2
 25757  0000                     wtemp2	set	btemp+4
 25758  0000                     wtemp3	set	btemp+6
 25759  0000                     wtemp4	set	btemp+8
 25760  0000                     wtemp5	set	btemp+10
 25761  0000                     wtemp8	set	btemp+1
 25762  0000                     ttemp0	set	btemp
 25763  0000                     ttemp1	set	btemp+3
 25764  0000                     ttemp2	set	btemp+6
 25765  0000                     ttemp3	set	btemp+9
 25766  0000                     ttemp5	set	btemp+1
 25767  0000                     ttemp6	set	btemp+4
 25768  0000                     ttemp7	set	btemp+8
 25769  0000                     ltemp0	set	btemp
 25770  0000                     ltemp1	set	btemp+4
 25771  0000                     ltemp2	set	btemp+8
 25772  0000                     lltemp0	set	btemp
 25773  0000                     lltemp1	set	btemp+8
 25774  0000                     lltemp2	set	btemp+16
 25775  0000                     lltemp3	set	btemp+24
 25776                           tosu	equ	0x3FFF
 25777                           tosh	equ	0x3FFE
 25778                           tosl	equ	0x3FFD
 25779                           stkptr	equ	0x3FFC
 25780                           pclatu	equ	0x3FFB
 25781                           pclath	equ	0x3FFA
 25782                           pcl	equ	0x3FF9
 25783                           tblptru	equ	0x3FF8
 25784                           tblptrh	equ	0x3FF7
 25785                           tblptrl	equ	0x3FF6
 25786                           tablat	equ	0x3FF5
 25787                           prodh	equ	0x3FF4
 25788                           prodl	equ	0x3FF3
 25789                           indf0	equ	0x3FEF
 25790                           postinc0	equ	0x3FEE
 25791                           postdec0	equ	0x3FED
 25792                           preinc0	equ	0x3FEC
 25793                           plusw0	equ	0x3FEB
 25794                           fsr0h	equ	0x3FEA
 25795                           fsr0l	equ	0x3FE9
 25796                           wreg	equ	0x3FE8
 25797                           indf1	equ	0x3FE7
 25798                           postinc1	equ	0x3FE6
 25799                           postdec1	equ	0x3FE5
 25800                           preinc1	equ	0x3FE4
 25801                           plusw1	equ	0x3FE3
 25802                           fsr1h	equ	0x3FE2
 25803                           fsr1l	equ	0x3FE1
 25804                           bsr	equ	0x3FE0
 25805                           indf2	equ	0x3FDF
 25806                           postinc2	equ	0x3FDE
 25807                           postdec2	equ	0x3FDD
 25808                           preinc2	equ	0x3FDC
 25809                           plusw2	equ	0x3FDB
 25810                           fsr2h	equ	0x3FDA
 25811                           fsr2l	equ	0x3FD9
 25812                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        238
    BSS         1353
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     131
    BANK1           256      0     251
    BANK2           256      0     236
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_32(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4666_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[171]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[171]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291102
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10863
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5116
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      83       5       81.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     642      58        0.0%
DATA                 0      0     642       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov  8 22:52:22 2019

                    _SPI1_Exchange8bit 7FC4               __end_of_set_display_info 801E  
                                    _C 0200                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0100       __end_of_TMR5_SetInterruptHandler 7DD8  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 823E                            __CFG_LVP$ON 000000  
                                  l171 816A                                    l701 7C40  
                                  l581 7C14                                    l835 7FD2  
                                  _GIE 01FE97                                    _abs 778E  
                                  _pad 63AE                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 8116                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7F5E                     _UART1_Transmit_ISR 7BEE  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7F80  
                         __CFG_ZCD$OFF 000000                                   l1028 79AA  
                                 l1240 3F6E                                   l1326 75B2  
                                 l2233 6A18                                   l1249 411A  
                                 l2244 5EEC                                   l2237 5E18  
                                 l1542 7A08                                   l1462 6B70  
                                 l2511 2D5E                                   l2271 5D8A  
                                 l1551 53A0                                   l1481 7A74  
                                 l1466 6F20                                   l2523 2BEE  
                                 l1555 54FC                                   l1740 640A  
                                 l1559 65CC                                   l1760 33C0  
                                 l1840 0B1A                                   l2632 56FA  
                                 l6001 279A                                   l1825 066A  
                                 l1649 3B6A                                   l2556 32D8  
                                 l2804 58C2                                   l1685 5A82  
                 _ADCC_StartConversion 8184                                   l1599 801A  
                                 l2663 77CE                                   l6031 28D8  
                                 l2655 5C18                                   l2592 25A2  
                                 l2832 70BA                                   l6201 77BE  
                                 l6113 2C10                                   l6105 2BD2  
                                 l6041 294A                                   l6115 2C22  
                                 l6051 2986                                   l2819 713E  
                                 l1796 123A                                   l6133 2C5C  
                                 l6045 296A                                   l1949 1D78  
                                 l2694 50A4                                   l2758 628C  
                                 l1878 49E6                                   l6119 2C2E  
                                 l6047 297C                                   l6055 29B6  
                                 l6215 5BB6                                   l6321 4C70  
                                 l6401 2DFE                                   l6161 2D0E  
                                 l6145 2CBA                                   l6129 2C56  
                                 l6073 2A52                                   l6225 5C10  
                                 l6315 4C1C                                   l6155 2CE6  
                                 l6075 2A64                                   l6083 2AA0  
                                 l6219 5BBA                                   l6243 712E  
                                 l1899 3BB4                                   l6501 319E  
                                 l6421 2EDC                                   l6405 2E14  
                                 l6327 4CB6                                   l6415 2E9C  
                                 l6407 2E44                                   l6167 2D3E  
                                 l6159 2CFE                                   l6095 2B78  
                                 l6079 2A6E                                   l6271 44E0  
                                 l9001 33B0                                   l6521 3254  
                                 l6505 31A4                                   l6433 2F60  
                                 l6425 2EF2                                   l6097 2B9E  
                                 l6281 45E6                                   l6273 4530  
                                 l6257 43C2                                   l7403 4E54  
                                 l6339 4D88                                   l6515 3218  
                                 l6427 2F22                                   l7421 4F2E  
                                 l7413 4EEA                                   l7405 4E76  
                                 l9013 3418                                   l6533 32AC  
                                 l6277 4578                                   l7423 4F52  
                                 l6375 5240                                   l6367 5194  
                                 l6359 510C                                   l9023 362A  
                                 l6535 32BC                                   l6527 3284  
                                 l6447 2FB4                                   l6439 2F9A  
                                 l6551 1DD8                                   l7425 4F90  
                                 l9009 33FA                                   l6713 5F1A  
                                 l6481 3112                                   l6473 30E0  
                                 l6465 307A                                   l6457 3044  
                                 l6801 6A16                                   l6561 1E4E  
                                 l8401 3B38                                   l7419 4F16  
                                 l5931 6CEC                                   l9043 36DC  
                                 l6491 3154                                   l6467 308C  
                                 l6475 30E4                                   l6395 2DBE  
                                 l9131 0470                                   l6299 70AA  
                                 l8253 7866                                   l7429 4FF8  
                                 l5933 6D0E                                   l6725 5F50  
                                 l6645 23B2                                   l6557 1E18  
                                 l9205 0926                                   l9125 0396  
                                 l9109 02FC                                   l9117 032A  
                                 l9061 00AC                                   l7439 5094  
                                 l9047 3718                                   l6719 5F30  
                                 l6487 312E                                   l6815 5E66  
                                 l6663 2428                                   l6639 2396  
                                 l6575 1EE6                                   l6559 1E1E  
                                 l9151 057C                                   l9135 04D2  
                                 l7455 578C                                   l8257 7890  
                                 l8329 7A1E                                   l6809 5DD6  
                                 l6673 249C                                   l6649 23D8  
                                 l6577 1EEC                                   l6569 1EA6  
                                 l9305 0FD6                                   l9153 058E  
                                 l9129 0406                                   l9073 00F0  
                                 l9081 0146                                   l9401 4B7A  
                                 l7457 57F8                                   l8409 3B4A  
                                 l8433 5930                                   l8425 5904  
                                 l6747 602A                                   l6739 5FF6  
                                 l6763 62C8                                   l6827 5EEA  
                                 l6819 5EB4                                   l6691 2550  
                                 l6683 250C                                   l6659 2422  
                                 l6587 1F3E                                   l6579 1F1C  
                                 l6835 771E                                   l5971 2688  
                                 l9307 0FF0                                   l9243 0C32  
                                 l9227 0B12                                   l9219 0A48  
                                 l9147 0554                                   l9091 01EA  
                                 l8509 7C3C                                   l7725 7F32  
                                 l6693 256A                                   l6677 24E2  
                                 l5965 2642                                   l6861 5CF6  
                                 l6845 5C74                                   l9317 1092  
                                 l9229 0B34                                   l9093 0216  
                                 l9421 3BDE                                   l9501 1376  
                                 l7805 7A7E                                   l8437 5948  
                                 l8535 7992                                   l6767 62E0  
                                 l6759 62B6                                   l5983 26F2  
                                 l5959 2602                                   l6871 5D38  
                                 l6863 5D12                                   l9343 119A  
                                 l9327 10E2                                   l9255 0CBA  
                                 l9263 0D24                                   l9271 0D90  
                                 l9167 05F6                                   l9159 0594  
                                 l9095 022C                                   l9415 3BA4  
                                 l8391 3A00                                   l8383 39CE  
                                 l8631 714E                                   l6785 6394  
                                 l6777 6360                                   l6793 69A0  
                                 l5993 2748                                   l5977 26C0  
                                 l5969 2658                                   l9185 06B8  
                                 l9169 0602                                   l9521 14E2  
                                 l8369 3792                                   l5995 2778  
                                 l9291 0F3A                                   l9195 077A  
                                 l9099 0258                                   l9363 4968  
                                 l9451 3D70                                   l9435 3C7A  
                                 l9427 3C1A                                   l9603 1B2A  
                                 l9523 14F8                                   l7851 55B6  
                                 l7843 554A                                   l8395 3A9C  
                                 l8379 38D2                                   l6797 69E2  
                                 l5989 2732                                   l6869 5D22  
                                 l9189 06F0                                   l7853 55C4  
                                 l8487 7C10                                   l9279 0EA2  
                                 l9383 4A58                                   l9623 1D00  
                                 l9519 14A8                                   l7863 5626  
                                 l7855 55DA                                   l6889 76F0  
                                 l9393 4B12                                   l9617 1CA6  
                                 l9561 1830                                   l9633 1D24  
                                 l7865 5644                                   l7857 55F8  
                                 l9387 4A88                                   l9379 4A1C  
                                 l9475 3EE0                                   l9459 3DF6  
                                 l9627 1D04                                   l9539 165C  
                                 l7875 5678                                   l7867 565A  
                                 l9397 4B3E                                   l9573 191C  
                                 l9549 16F2                                   l9661 4766  
                                 l9901 5498                                   l7885 56DA  
                                 l8695 6E46                                   l8687 6E34  
                                 l8927 61A2                                   l8943 6DB6  
                                 l9655 46A8                                   l8953 6402  
                                 l9593 1A7C                                   l9569 18E8  
                                 l9497 1326                                   l8939 6D78  
                                 l8963 649A                                   l8955 6414  
                                 l9499 1360                                   l9675 487E  
                                 l9667 47D0                                   l9739 6C78  
                                 l8949 63DA                                   l9773 64E4  
                                 l8959 6450                                   l8975 6FD6  
                                 l9687 6BA2                                   STR_1 FF76  
                                 STR_2 FFA7                                   l8977 7002  
                                 l8969 680C                                   l9689 6BE2  
                                 STR_3 FFF2                                   STR_4 FF65  
                                 l9971 3F58                                   STR_5 FF87  
                                 STR_6 FFA7                                   STR_7 FFF2  
                                 STR_8 FF54                                   l9975 3F76  
                                 STR_9 FFB6                                   l9889 5370  
                                 l9977 3F88                                   l9969 3F50  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 _T2PR 003FAB                                   u5100 7068  
                                 u5030 4486                                   u5110 706A  
                                 u5015 43E0                                   u4320 6D3C  
                                 u5200 4CB0                                   u6000 6A12  
                                 u5016 43E6                                   u5017 43F4  
                                 u5130 7BB4                                   u5210 4CE2  
                                 u5050 455E                                   u5035 447C  
                                 u5140 7BB6                                   u5300 515C  
                                 u5230 4DC0                                   u5310 518E  
                                 u4510 29AE                                   u4350 7B84  
                                 u4327 6D2E                                   u5055 4554  
                                 u5160 4C16                                   u5320 51C0  
                                 u4520 29CE                                   u4360 7B86  
                                 u5080 78DE                                   u5250 4E12  
                                 u5090 78E0                                   _T6PR 003F93  
                                 u4515 299E                                   u5180 4C6C  
                                 u5340 5278                                   u5500 310C  
                                 u6060 771A                                   u4620 2BC0  
                                 u4460 28FE                                   u6140 5D40  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4470 291E                                   u6070 5C54  
                                 _PMD2 0039C2                                   u5191 4C76  
                                 u4471 2918                                   _PMD3 0039C3  
                                 u7200 503E                                   u5360 52CA  
                                 u5280 5106                                   u5600 3268  
                                 u4720 2CAA                                   u6160 5D6A  
                                 u6080 5C68                                   u4800 7B56  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u6170 76CC                                   u7210 5040  
                                 u6090 5CA2                                   _PMD6 0039C6  
                                 u6075 5C4A                                   _PMD7 0039C7  
                                 u6180 76EC                                   u5540 3196  
                                 u4660 2C34                                   u4580 2A96  
                                 u4725 2C9A                                   u4750 2CCA  
                                 u4910 5C08                                   u6095 5C98  
                                 u5800 2476                                   u4680 2C4E  
                                 u4488 2920                                   u4920 5C0A  
                                 u9000 0648                                   u5705 20C0  
                                 u4585 2A86                                   u4905 5BEA  
                                 u4850 77A2                                   u5810 24B0  
                                 u5715 2188                                   u7180 4EE6  
                                 u5580 31F2                                   u5820 24F6  
                                 u4860 5B3A                                   u5805 2466  
                                 u5725 2350                                   u5590 322C  
                                 u4950 70EC                                   u4790 7B54  
                                 u5760 241A                                   u4960 70EE  
                                 u7280 5884                                   u5585 31E2  
                                 u4865 5B30                                   u5690 1F2C  
                                 u8500 6212                                   u5940 630C  
                                 u4980 435A                                   u5870 5F7C  
                                 u4990 43A6                                   u9230 10B8  
                                 u9070 0A18                                   u8600 3312  
                                 u5960 6380                                   u4985 4350  
                                 u8610 3314                                   u5890 6016  
                                 u9250 116E                                   u9170 0EE4  
                                 u9330 4A7E                                   u8700 3684  
                                 u9260 1170                                   u9340 4AC4  
                                 u9500 3E12                                   u9420 3C72  
                                 u7740 566E                                   u7805 733E  
                                 u8701 3682                                   u7806 7340  
                                 u8710 3698                                   u8630 3384  
                                 u9430 3CC6                                   u9511 3E42  
                                 u8480 6196                                   u8720 369C  
                                 u8560 6886                                   u9520 3E58  
                                 u9440 3CC8                                   u9600 13C0  
                                 u7665 795E                                   u9521 3E56  
                                 u8650 3396                                   u8810 0194  
                                 u9370 4BA0                                   u9530 3E6C  
                                 u9610 13E6                                   u7914 377C  
                                 u9347 4AB6                                   u7915 3776  
                                 u7780 730A                                   u8740 36B2  
                                 u8900 050E                                   u8820 0196  
                                 u9540 3E70                                   u9460 3D26  
                                 u8670 33E6                                   u9470 3D28  
                                 u9390 3B8A                                   u9710 1746  
                                 u7934 37AC                                   u8567 6878  
                                 u7935 37A6                                   u8680 363E  
                                 u9640 1540                                   u8930 0562  
                                 u8850 02A6                                   u9490 3DF2  
                                 u9650 1542                                   u7954 37CE  
                                 _PLLR 01CEE0                                   u8691 366E  
                                 u7955 37C8                                   u8860 02A8  
                                 u8780 00DA                                   u9740 19D6  
                                 u9660 1568                                   u7798 730C  
                                 u9750 19D8                                   u9590 13BE  
                                 u7974 39E8                                   u7990 58E2  
                                 u9495 3DD4                                   u7975 39E2  
                                 u8960 05C6                                   u9850 48F2  
                                 u9790 1B7E                                   u9880 6C58  
                                 u9970 54E8                                   u9980 54EA  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 7A5C                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AB                                   _atoi 4E3A  
                                 _ctoa 6FB8                                   _main 3F2A  
                                 _dtoa 32E2                                   _nanf 742A  
                                 _seed 00D6                                   _prec 0020  
                                 _nout 001C                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 48FC                                   btemp 0035  
                                 _xtoa 3B70                 __end_of_check_adc_scan 8236  
                        ___fpclassifyf 5A8C                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0026              __end_of_SPI1_Exchange8bit 7FE2  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 7EA0  
                         ___param_bank 000000                     ?_UART1_rx_vect_isr 0055  
                     __end_of_INT0_ISR 81D2                       __end_of_INT1_ISR 81E2  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 6B78  
        __end_of_OSCILLATOR_Initialize 8170                                  l10031 417A  
                                l10017 411E                                  l10019 4146  
                                l10039 419E                                  l10047 425E  
                                l10059 4292                                  PRLOCK 0039EF  
                      __end_of___aodiv 4E3A                                  _ADCAP 003EF5  
                                _ADACT 003EFE                        __end_of___fladd 2D68  
                                _ADCLK 003EFF                        __end_of___aomod 52EE  
                                _ADPCH 003EF1                        __end_of___fldiv 32E2  
                                _ADREF 003EFD                        __end_of___awdiv 6044  
                      __end_of___flneg 7748                                  STR_10 FFB6  
                                STR_11 FFFC                                  STR_12 FFF9  
                                STR_20 FF98                                  STR_21 FF98  
                                STR_22 FF98                                  STR_14 FFC3  
                                STR_15 FFD9                                  STR_23 FF03  
                                STR_32 FF2D                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_41 FFF6  
                                STR_33 FFE2                                  STR_25 FF41  
                        __CFG_WDTE$OFF 000000                                  STR_34 FFEA  
                                STR_18 FFCF                                  STR_26 FF1B  
                                STR_19 FFCF                                  STR_43 FFF6  
                      __end_of___awmod 63AE                                  STR_37 FFE6  
                                STR_38 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 778E  
                      __end_of___fltol 5D94                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00DE                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 8250  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 7E78                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 75A8                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 80FE                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 6172  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 78EA  
                                _fputs 6D68                        __end_of_isdigit 7BC0  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 7AC8                                  _width 001E  
                                _putch 80B0                        __end_of_islower 7B60  
                      __end_of_isspace 7700               _INT1_SetInterruptHandler 7DD8  
                      __end_of_isupper 7B90                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 7D88  
          _UART1_SetRxInterruptHandler 7D60                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 66DA                        __end_of_tolower 7148  
                      __end_of_strncmp 58CC                        __end_of_toupper 70C4  
                  ??_UART1_tx_vect_isr 00DE              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 7EC6               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 781A                  __end_of_ringBufS_init 7CE8  
                      __initialization 6898                      _UART2_rx_vect_isr 7EF0  
                         __end_of_atoi 50AE                           __end_of_ctoa 7040  
                         __end_of_main 42A4                           __end_of_dtoa 3762  
                         __end_of_nanf 748C                           __end_of_stoa 4BBA  
                         __end_of_xtoa 3F2A                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0055                __end_of_TMR2_Initialize 812E  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 7DB0  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 00DE  
            __end_of_UART1_tx_vect_isr 7E9E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 7C46                        _PWM8_Initialize 8144  
                     _UART1_Initialize 73C6                      _UART2_tx_vect_isr 7EC8  
                   _UART2_Transmit_ISR 7C1A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                       _start_adc_scan 7362                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 792E                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0055  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RC3PPS 003A13  
                               _RD1PPS 003A19                                 _RB6PPS 003A0E  
                               i1l1045 759A                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                         __CFG_WDTCCS$SC 000000  
                               u401_40 8026                                 u401_46 8028  
                               _FVRCON 003EC1                       _mode_lamp_bright 81B4  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u377_48 7F6C  
                               u379_48 7F8E                                 _OSCFRQ 0039DF  
                               u812_28 7F4A                                 u824_44 6E66  
                               u824_45 6E60                                 u809_48 7FB0  
                               u826_40 6E82                                 u826_46 6E84  
                               u784_20 80D2                                 u784_26 80D4  
                     __end_of___xxtofl 5704               __end_of_send_lcd_cmd_dma 76AE  
                  ??_UART2_tx_vect_isr 00DE              __end_of_UART2_rx_vect_isr 7F16  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 81F2  
                     _UART2_Initialize 74EE                                 _WaitMs 7A5C  
                      _conv_raw_result 3762                           _CCPTMRS1bits 003F5F  
 __size_of_ADCC_SetADIInterruptHandler 0028                                 ___flge 5D94  
                               ___fleq 695E                      _ADCC_ThresholdISR 7294  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 6E96  
                               _efgtoa 0000                                 _floorf 42A4  
                   ?_ADCC_ThresholdISR 0055                                 _memset 4610  
                 __size_of_help_button 0038                                 clear_0 68E4  
                               clear_1 68F8                                 clear_2 690A  
                               clear_3 6916                                 clear_4 6922  
                               clear_5 692E                                 clear_6 693A  
                               clear_7 6946                                 _printf 748C  
                   _eaDogM_WriteString 6C20                                 _strcpy 67C4  
                            ?_ADCC_ISR 0055                                 _strlen 6CC6  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 722C  
                       _PMD_Initialize 8170              __end_of_UART2_tx_vect_isr 7EEE  
                               lltemp0 0035                                 lltemp1 003D  
                               lltemp2 0045                                 lltemp3 004D  
                  ??_ADCC_ThresholdISR 0056                 __end_of_start_adc_scan 73C6  
                         __mediumconst FE72                                 preinc2 003FDC  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 7602  
                     __end_of_vfprintf 6C20                             _StartTimer 79B0  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 7860  
                    _SYSTEM_Initialize 77D4                             __accesstop 0060  
              __end_of__initialization 6958                              ?_INT0_ISR 0055  
                            ?_INT1_ISR 0055                   __end_of_display_help 822E  
                 __end_of_display_info 8226              __end_of_CLKREF_Initialize 81FC  
                        ___rparam_used 000000             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 7970                  _set_temp_display_help 8196  
            __end_of_ADCC_ThresholdISR 72FC                 __end_of_ringBufS_flush 6F28  
                       __pcstackCOMRAM 0055                             ___inthi_sp 0F56  
                           ___intlo_sp 17AB                           __pidataBANK0 78EA  
                         __pidataBANK1 6A22                              ?_TMR5_ISR 0055  
                            ?_TMR6_ISR 0055                         ivt0x8_undefint 00AC  
                        __end_of_fputc 6296                          __end_of_fputs 6E00  
                        __end_of_srand 7AFC                  __end_of_TMR5_CallBack 7F5E  
                        __end_of_putch 80CA                __end_of_PWM8_Initialize 815A  
              __end_of_TMR6_Initialize 7C70                      _adc_int_t_handler 6E00  
               __end_of_PMD_Initialize 8184                             ??_ADCC_ISR 0055  
                __end_of_TMR6_CallBack 7FC4            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 8208  
                       _clear_adc_scan 823E                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 781A  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 00A3                             __pbssBANK1 01AB  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 52EE  
              __end_of_conv_raw_result 3B70                  _INT0_InterruptHandler 0019  
                           ??_INT0_ISR 0055                             ??_INT1_ISR 0055  
                    __end_of_TimerDone 7F3A                       _DMA1_DMADCNT_ISR 81FC  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                   __size_of_lp_filter 01C0                  __end_of_wait_lcd_done 8094  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 7DB0  
              __end_of_ADCC_Initialize 7294                             ??_TMR5_ISR 00DF  
            __end_of_adc_int_t_handler 6E96                             ??_TMR6_ISR 00DE  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7E50  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 7E28                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 803C  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 8244                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 81E4                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 79B0  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 80FE  
                              __Lparam 0000               __end_of_UART1_Initialize 742A  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4BBA  
                              ___fladd 25AC                                ___aomod 50AE  
                              ___fldiv 2D68                                ___awdiv 5EF6  
                              ___flneg 7700                                ___awmod 6296  
                              ___flmul 1D82                                ___flsub 7748  
                              ___fltol 5C22              __end_of_UART1_Receive_ISR 805A  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 67C4                                __pcinit 6898  
             __end_of_mode_lamp_bright 81C2                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 81A6  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 3F2A                                __ptext1 7362  
                              __ptext2 8184                                __ptext3 7AC8  
                              __ptext4 66DA                                __ptext5 7C70  
                              __ptext6 7C98                                __ptext7 7FC4  
                              __ptext8 7CC0                                __ptext9 81A6  
                    _UART2_Receive_ISR 805A                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                  _OSCILLATOR_Initialize 815A  
                              us526999 4E24                           __size_of_abs 0046  
                              us537999 52DC                           __size_of_pad 0114  
                              _isalpha 78A6                                _isdigit 7B90  
                              us941999 3BF0                                us928999 490E  
                              _mode_sw 0028                                us859999 32FC  
                    __end_of_lp_filter 5A8C                                _islower 7B30  
                              _isspace 76AE                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 754C  
                              _isupper 7B60             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 65D0                                _tolower 70C4  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 5704                                _toupper 7040  
                 end_of_initialization 6958              __size_of_convert_adc_data 007A  
  __end_of_UART1_SetTxInterruptHandler 7D60            _UART1_SetTxInterruptHandler 7D38  
                            i2u1000_48 7E8A    __end_of_UART2_SetRxInterruptHandler 7D38  
          _UART2_SetRxInterruptHandler 7D10                              i2u1002_48 7EB2  
                            i2u1004_48 7EDA                              i2u1006_48 7F02  
                    __end_of_set_vterm 80B0                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 8250  
            __end_of_UART2_Receive_ISR 8078                         wdtdelay@dcount 00CF  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00DF  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 7D88                           _display_help 8226  
                _TMR5_InterruptHandler 00D3                           _display_info 821E  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 7E78            _ADCC_SetADIInterruptHandler 7E50  
                           _update_lcd 64C2                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 71C2  
                      _SPI1_Initialize 812E                  __end_of_get_vterm_ptr 7BEE  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7A92           __end_of_INTERRUPT_Initialize 7362  
                           _vterm_dump 6044                         __end_of___flge 5EF6  
                       __end_of___fleq 6A22   __end_of_INT0_DefaultInterruptHandler 8258  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 8256  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 7602  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 4610            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 00C7                         __end_of_memset 48FC  
                       __end_of_printf 74EE               __end_of_DMA1_DMADCNT_ISR 8206  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 7F80  
                       __end_of_strcpy 6898                         __end_of_strlen 6D68  
                  start_initialization 6898   __end_of_TMR5_DefaultInterruptHandler 80E4  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 80CA  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 77D4  
                __end_of_INT1_CallBack 7FA2              __size_of_set_display_info 001E  
                          __end_of_pad 64C2                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 7CC0          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 5C22                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 02AC               __end_of_DMA1_DMASCNT_ISR 81F2  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 8214  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 7F16  
                        _ringBufS_init 7CC0                            __pdataBANK0 0060  
                          __pdataBANK1 0100             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 7B30                    __end_of_help_button 7A24  
      __end_of_eaDogM_WriteStringAtPos 7AC8                __end_of_DMA1_Initialize 722C  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 7E28  
                        __pcstackBANK0 00DE               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 8144  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03                       _convert_adc_data 7148  
            __size_of_ringBufS_put_dma 00AA                           _init_display 66DA  
               __end_of_DMA1_DMAOR_ISR 821E                 __size_of_TMR5_CallBack 0024  
                _TMR6_InterruptHandler 0001                 __size_of_TMR6_CallBack 0022  
              __end_of_DMA2_Initialize 765C                 _PIN_MANAGER_Initialize 6F28  
                 __end_of_wait_lcd_set 824A                          __pmediumconst FE72  
                            __ptext100 72FC                              __ptext101 8236  
                            __ptext110 7E50                              __ptext102 7AFC  
                            __ptext111 754C                              __ptext103 7DD8  
                            __ptext120 8258                              __ptext112 7970  
                            __ptext104 7E00                              __ptext121 8250  
                            __ptext113 7F3A                              __ptext105 7602  
                            __ptext130 803C                              __ptext122 7A24  
                            __ptext114 80CA                              __ptext106 71C2  
                            __ptext131 7EC8                              __ptext123 6E00  
                            __ptext115 81C4                              __ptext107 81F2  
                            __ptext140 8208                              __ptext132 7C1A  
                            __ptext124 825A                              __ptext116 7F5E  
                            __ptext108 722C                              __ptext141 8214  
                            __ptext133 7EF0                              __ptext125 801E  
                            __ptext117 8256                              __ptext109 7E28  
                            __ptext142 0000                              __ptext134 805A  
                            __ptext126 7294                              __ptext118 81D4  
                            __ptext135 80E4                              __ptext127 7E78  
                            __ptext119 7F80                              __ptext136 7FA2  
                            __ptext128 7BEE                              __ptext137 7860  
                            __ptext129 7EA0                              __ptext138 81E4  
                            __ptext139 81FC                     __end_of_StartTimer 79EC  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 7A24                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                              _lp_filter 58CC  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 72FC                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 81C4  
                             _INT1_ISR 81D4                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00A3                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u407_48 7A40  
                             i2u407_49 7A54                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9                               i2u828_48 72C8  
                             i2u828_49 72DC               __size_of_TMR5_Initialize 0046  
                            _set_vterm 8094                    __size_of_update_lcd 010E  
                          _help_button 79EC             __end_of_UART1_Transmit_ISR 7C1A  
                             _TMR5_ISR 754C                               _TMR6_ISR 80E4  
                            _port_data 0093                              _vfpfcnvrt 1244  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 7F3A  
                           _ADCON0bits 003EF8                     __end_of_check_help 5500  
                            _start_lcd 824A                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 7FA2  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 8000               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 68AC                              copy_data1 68CE  
             _INT0_SetInterruptHandler 7E00                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 7D10  
          _UART2_SetTxInterruptHandler 7CE8                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000               __size_of_conv_raw_result 040E  
                        _wait_lcd_done 8078                           _send_lcd_cmd 7C98  
                     __size_of___aodiv 0280                       __size_of___fladd 07BC  
                     __size_of___aomod 0240                        _adc_int_handler 801E  
                     __size_of___fldiv 057A                       __size_of___awdiv 014E  
                     __size_of___flneg 0048                       __size_of___awmod 0118  
                     __size_of___flmul 082A                       __size_of___flsub 0046  
                     __size_of___fltol 0172                  __end_of_DMA1_DMAA_ISR 8212  
                   ___fpclassifyf@F463 00CB   __size_of_UART1_SetRxInterruptHandler 0028  
                      lp_filter@smooth 026C                               ___xxtofl 5500  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 0068  
          __end_of_eaDogM_WriteCommand 81B4                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00DF                               __ptext10 7148  
                             __ptext11 58CC                               __ptext20 7BC0  
                             __ptext12 3762                               __ptext21 7A5C  
                             __ptext13 742A                               __ptext30 6E96  
                             __ptext22 64C2                               __ptext14 7FE2  
                             __ptext31 4610                               __ptext23 7A92  
                             __ptext15 5500                               __ptext40 48FC  
                             __ptext32 748C                               __ptext24 765C  
                             __ptext16 823E                               __ptext41 0000  
                             __ptext33 6B78                               __ptext25 8078  
                             __ptext17 52EE                               __ptext50 7700  
                             __ptext42 70C4                               __ptext34 1244  
                             __ptext26 75A8                               __ptext18 6044  
                             __ptext51 1D82                               __ptext43 7B60  
                             __ptext35 3B70                               __ptext27 6C20  
                             __ptext19 65D0                               __ptext60 4BBA  
                             __ptext52 5D94                               __ptext44 67C4  
                             __ptext36 7040                               __ptext28 8244  
                             __ptext61 6FB8                               __ptext53 695E  
                             __ptext45 42A4                               __ptext37 7B30  
                             __ptext29 824A                               __ptext70 7B90  
                             __ptext62 63AE                               __ptext54 2D68  
                             __ptext46 5A8C                               __ptext38 78A6  
                             __ptext71 8094                               __ptext63 6CC6  
                             __ptext55 6296                               __ptext47 5C22  
                             __ptext39 5704                               __ptext80 821E  
                             __ptext72 8196                               __ptext64 6D68  
                             __ptext56 5EF6                               __ptext48 7748  
                             __ptext81 8226                               __ptext73 8000  
                             __ptext65 6172                               __ptext57 32E2  
                             __ptext49 25AC                               __ptext90 7C46  
                             __ptext82 822E                               __ptext74 80FE  
                             __ptext66 80B0                               __ptext58 778E  
                             __ptext91 7D88                               __ptext83 77D4  
                             __ptext75 81B4                               __ptext67 6ACE  
                             __ptext59 50AE                               __ptext92 781A  
                             __ptext84 74EE                               __ptext76 792E  
                             __ptext68 4E3A                               __ptext93 7DB0  
                             __ptext85 7CE8                               __ptext77 79EC  
                             __ptext69 76AE                               __ptext94 8116  
                             __ptext86 7D10                               __ptext78 7F16  
                             __ptext95 812E                               __ptext87 73C6  
                             __ptext79 79B0                               __ptext96 8144  
                             __ptext88 7D38                               __ptext97 8170  
                             __ptext89 7D60                               __ptext98 6F28  
                             __ptext99 815A                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 6ACE                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 037A  
                        __size_of_dtoa 0480                          __size_of_nanf 0062  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 03BA                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0055                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0007  
                            stoa@F1166 008C                     ??_DMA1_DMASCNT_ISR 00DF  
         __end_of_ADCC_StartConversion 8196                               _spi_link 00BB  
                             _wdtdelay 75A8             __end_of_UART2_Transmit_ISR 7C46  
                             _vfprintf 6B78               __end_of_convert_adc_data 71C2  
           __end_of_PWM8_LoadDutyValue 7970   __end_of_INT1_DefaultInterruptHandler 825A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 8258  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 7FE2                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 8244  
                   _EXT_INT_Initialize 7AFC   __end_of_TMR6_DefaultInterruptHandler 78A6  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 7860  
 __end_of_ADCC_DefaultInterruptHandler 825C  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 825A                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7C70  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 81A6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 6CC6  
                __end_of_mode_lamp_dim 8116                __end_of_adc_int_handler 803C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 65D0                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 8236                 __end_of_get_raw_result 8000  
                     _send_lcd_cmd_dma 765C                 __size_of___fpclassifyf 0196  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 7E00  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00DF  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 7C98  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 8256  
       __end_of_PIN_MANAGER_Initialize 6FB8              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 6172                _eaDogM_WriteStringAtPos 7A92  
                        _get_vterm_ptr 7BC0                         _check_adc_scan 822E  
            __size_of_UART2_Initialize 005E  
