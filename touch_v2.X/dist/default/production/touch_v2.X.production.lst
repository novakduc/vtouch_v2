

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul  6 23:45:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    11                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    28                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	text0,global,reloc=2,class=CODE,delta=1
    32                           	psect	text1,global,reloc=2,class=CODE,delta=1
    33                           	psect	text2,global,reloc=2,class=CODE,delta=1
    34                           	psect	text3,global,reloc=2,class=CODE,delta=1
    35                           	psect	text4,global,reloc=2,class=CODE,delta=1
    36                           	psect	text5,global,reloc=2,class=CODE,delta=1
    37                           	psect	text6,global,reloc=2,class=CODE,delta=1
    38                           	psect	text7,global,reloc=2,class=CODE,delta=1
    39                           	psect	text8,global,reloc=2,class=CODE,delta=1
    40                           	psect	text9,global,reloc=2,class=CODE,delta=1
    41                           	psect	text10,global,reloc=2,class=CODE,delta=1
    42                           	psect	text11,global,reloc=2,class=CODE,delta=1
    43                           	psect	text12,global,reloc=2,class=CODE,delta=1
    44                           	psect	text13,global,reloc=2,class=CODE,delta=1
    45                           	psect	text14,global,reloc=2,class=CODE,delta=1
    46                           	psect	text15,global,reloc=2,class=CODE,delta=1
    47                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text17,global,reloc=2,class=CODE,delta=1
    49                           	psect	text18,global,reloc=2,class=CODE,delta=1
    50                           	psect	text19,global,reloc=2,class=CODE,delta=1
    51                           	psect	text20,global,reloc=2,class=CODE,delta=1
    52                           	psect	text21,global,reloc=2,class=CODE,delta=1
    53                           	psect	text22,global,reloc=2,class=CODE,delta=1
    54                           	psect	text23,global,reloc=2,class=CODE,delta=1
    55                           	psect	text24,global,reloc=2,class=CODE,delta=1
    56                           	psect	text25,global,reloc=2,class=CODE,delta=1
    57                           	psect	text26,global,reloc=2,class=CODE,delta=1
    58                           	psect	text27,global,reloc=2,class=CODE,delta=1
    59                           	psect	text28,global,reloc=2,class=CODE,delta=1
    60                           	psect	text29,global,reloc=2,class=CODE,delta=1
    61                           	psect	text30,global,reloc=2,class=CODE,delta=1
    62                           	psect	text31,global,reloc=2,class=CODE,delta=1
    63                           	psect	text32,global,reloc=2,class=CODE,delta=1
    64                           	psect	text33,global,reloc=2,class=CODE,delta=1
    65                           	psect	text34,global,reloc=2,class=CODE,delta=1
    66                           	psect	text35,global,reloc=2,class=CODE,delta=1
    67                           	psect	text36,global,reloc=2,class=CODE,delta=1
    68                           	psect	text37,global,reloc=2,class=CODE,delta=1
    69                           	psect	text38,global,reloc=2,class=CODE,delta=1
    70                           	psect	text39,global,reloc=2,class=CODE,delta=1
    71                           	psect	text40,global,reloc=2,class=CODE,delta=1
    72                           	psect	text41,global,reloc=2,class=CODE,delta=1
    73                           	psect	text42,global,reloc=2,class=CODE,delta=1
    74                           	psect	text43,global,reloc=2,class=CODE,delta=1
    75                           	psect	text44,global,reloc=2,class=CODE,delta=1
    76                           	psect	text45,global,reloc=2,class=CODE,delta=1
    77                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text49,global,reloc=2,class=CODE,delta=1
    81                           	psect	text50,global,reloc=2,class=CODE,delta=1
    82                           	psect	text51,global,reloc=2,class=CODE,delta=1
    83                           	psect	text52,global,reloc=2,class=CODE,delta=1
    84                           	psect	text53,global,reloc=2,class=CODE,delta=1
    85                           	psect	text54,global,reloc=2,class=CODE,delta=1
    86                           	psect	text55,global,reloc=2,class=CODE,delta=1
    87                           	psect	text56,global,reloc=2,class=CODE,delta=1
    88                           	psect	text57,global,reloc=2,class=CODE,delta=1
    89                           	psect	text58,global,reloc=2,class=CODE,delta=1
    90                           	psect	text59,global,reloc=2,class=CODE,delta=1
    91                           	psect	text60,global,reloc=2,class=CODE,delta=1
    92                           	psect	text61,global,reloc=2,class=CODE,delta=1
    93                           	psect	text62,global,reloc=2,class=CODE,delta=1
    94                           	psect	text63,global,reloc=2,class=CODE,delta=1
    95                           	psect	text64,global,reloc=2,class=CODE,delta=1
    96                           	psect	text65,global,reloc=2,class=CODE,delta=1
    97                           	psect	text66,global,reloc=2,class=CODE,delta=1
    98                           	psect	text67,global,reloc=2,class=CODE,delta=1
    99                           	psect	text68,global,reloc=2,class=CODE,delta=1
   100                           	psect	text69,global,reloc=2,class=CODE,delta=1
   101                           	psect	text70,global,reloc=2,class=CODE,delta=1
   102                           	psect	text71,global,reloc=2,class=CODE,delta=1
   103                           	psect	text72,global,reloc=2,class=CODE,delta=1
   104                           	psect	text73,global,reloc=2,class=CODE,delta=1
   105                           	psect	text74,global,reloc=2,class=CODE,delta=1
   106                           	psect	text75,global,reloc=2,class=CODE,delta=1
   107                           	psect	text76,global,reloc=2,class=CODE,delta=1
   108                           	psect	text77,global,reloc=2,class=CODE,delta=1
   109                           	psect	text78,global,reloc=2,class=CODE,delta=1
   110                           	psect	text79,global,reloc=2,class=CODE,delta=1
   111                           	psect	text80,global,reloc=2,class=CODE,delta=1
   112                           	psect	text81,global,reloc=2,class=CODE,delta=1
   113                           	psect	text82,global,reloc=2,class=CODE,delta=1
   114                           	psect	text83,global,reloc=2,class=CODE,delta=1
   115                           	psect	text84,global,reloc=2,class=CODE,delta=1
   116                           	psect	text85,global,reloc=2,class=CODE,delta=1
   117                           	psect	text86,global,reloc=2,class=CODE,delta=1
   118                           	psect	text87,global,reloc=2,class=CODE,delta=1
   119                           	psect	text88,global,reloc=2,class=CODE,delta=1
   120                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text92,global,reloc=2,class=CODE,delta=1
   124                           	psect	text93,global,reloc=2,class=CODE,delta=1
   125                           	psect	text94,global,reloc=2,class=CODE,delta=1
   126                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text100,global,reloc=2,class=CODE,delta=1
   132                           	psect	text101,global,reloc=2,class=CODE,delta=1
   133                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text105,global,reloc=2,class=CODE,delta=1
   137                           	psect	text106,global,reloc=2,class=CODE,delta=1
   138                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text110,global,reloc=2,class=CODE,delta=1
   142                           	psect	text111,global,reloc=2,class=CODE,delta=1
   143                           	psect	text112,global,reloc=2,class=CODE,delta=1
   144                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text114,global,reloc=4,class=CODE,delta=1
   146                           	psect	text115,global,reloc=2,class=CODE,delta=1
   147                           	psect	text116,global,reloc=2,class=CODE,delta=1
   148                           	psect	text117,global,reloc=4,class=CODE,delta=1
   149                           	psect	text118,global,reloc=2,class=CODE,delta=1
   150                           	psect	text119,global,reloc=2,class=CODE,delta=1
   151                           	psect	text120,global,reloc=4,class=CODE,delta=1
   152                           	psect	text121,global,reloc=2,class=CODE,delta=1
   153                           	psect	text122,global,reloc=2,class=CODE,delta=1
   154                           	psect	text123,global,reloc=4,class=CODE,delta=1
   155                           	psect	text124,global,reloc=4,class=CODE,delta=1
   156                           	psect	text125,global,reloc=2,class=CODE,delta=1
   157                           	psect	text126,global,reloc=4,class=CODE,delta=1
   158                           	psect	text127,global,reloc=2,class=CODE,delta=1
   159                           	psect	text128,global,reloc=4,class=CODE,delta=1
   160                           	psect	text129,global,reloc=2,class=CODE,delta=1
   161                           	psect	text130,global,reloc=4,class=CODE,delta=1
   162                           	psect	text131,global,reloc=2,class=CODE,delta=1
   163                           	psect	text132,global,reloc=4,class=CODE,delta=1
   164                           	psect	text133,global,reloc=2,class=CODE,delta=1
   165                           	psect	text134,global,reloc=4,class=CODE,delta=1
   166                           	psect	text135,global,reloc=2,class=CODE,delta=1
   167                           	psect	text136,global,reloc=2,class=CODE,delta=1
   168                           	psect	text137,global,reloc=4,class=CODE,delta=1
   169                           	psect	text138,global,reloc=4,class=CODE,delta=1
   170                           	psect	text139,global,reloc=4,class=CODE,delta=1
   171                           	psect	text140,global,reloc=4,class=CODE,delta=1
   172                           	psect	text141,global,reloc=4,class=CODE,delta=1
   173                           	psect	text142,global,reloc=2,class=CODE,delta=1
   174                           	psect	text143,global,reloc=2,class=CODE,delta=1
   175                           	psect	text144,global,reloc=2,class=CODE,delta=1
   176                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   177                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   178                           	psect	text145,global,reloc=2,class=CODE,delta=1
   179                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   180                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   181  0000                     
   182                           ; Version 2.05
   183                           ; Generated 20/12/2018 GMT
   184                           ; 
   185                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   186                           ; All rights reserved.
   187                           ; 
   188                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   189                           ; 
   190                           ; Redistribution and use in source and binary forms, with or without modification, are
   191                           ; permitted provided that the following conditions are met:
   192                           ; 
   193                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   194                           ;        conditions and the following disclaimer.
   195                           ; 
   196                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   197                           ;        of conditions and the following disclaimer in the documentation and/or other
   198                           ;        materials provided with the distribution.
   199                           ; 
   200                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   201                           ;        software without specific prior written permission.
   202                           ; 
   203                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   204                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   205                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   206                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   207                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   208                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   209                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   210                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   211                           ; 
   212                           ; 
   213                           ; Code-generator required, PIC18F57K42 Definitions
   214                           ; 
   215                           ; SFR Addresses
   216  0000                     
   217 ;;_s	offset	0
   218 ;;_mode	offset	2
   219 ;;_rxData	offset	0
   220 ;;_t_link	offset=-2 (param)
   221 ;;_k	offset	0
   222 ;;_checksum	offset	2
   223 ;;_i	offset	4
   224 ;;_byte_block	offset=-2 (param)
   225 ;;_length	offset=-3 (param)
   226 ;;_fake	offset=-4 (param)
   227 ;;_s_uart	offset=-5 (param)
   228 ;;_i	offset	0
   229 ;;_sum	offset	2
   230 ;;_byte_block	offset=-2 (param)
   231 ;;_byte_count	offset=-4 (param)
   232 ;;_bufData	offset=-1 (param)
   233 ;;_txData	offset=-1 (param)
   234 ;;_bufData	offset=-1 (param)
   235 ;;_i	offset	0
   236 ;;_stream	offset=-6 (param)
   237 ;;_function	offset=-7 (param)
   238 ;;_sid	offset=-1 (param)
   239 ;;_block	offset=-1 (param)
   240 ;;_sid	offset=-2 (param)
   241 ;;_s	offset=-2 (param)
   242 ;;_rxData	offset	0
   243 ;;_r_link	offset=-2 (param)
   244 ;;_txData	offset=-1 (param)
   245 ;;_rxData	offset	0
   246 ;;_m_link	offset=-2 (param)
   247 ;;_stream	offset=-1 (param)
   248 ;;_function	offset=-2 (param)
   249 ;;_msg_data	offset	0
   250 ;;_stream	offset=-1 (param)
   251 ;;_function	offset=-2 (param)
   252 ;;_dtime	offset=-4 (param)
   253 ;;_i	offset	0
   254 ;;_stream	offset=-1 (param)
   255 ;;_function	offset=-2 (param)
   256 ;;_dtime	offset=-4 (param)
   257 ;;_msg_data	offset=-6 (param)
   258 ;;_GIEBitValue	offset	0
   259 ;;_bAdd	offset=-2 (param)
   260 ;;_bData	offset=-3 (param)
   261 ;;_byte_block	offset=-1 (param)
   262 ;;_clear	offset=-2 (param)
   263 ;;_readValue	offset	0
   264 ;;_readValue	offset	0
   265 ;;_cmd	offset=-1 (param)
   266 ;;_cmd	offset=-1 (param)
   267 ;;_data	offset=-1 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_cmd	offset=-1 (param)
   270 ;;_numMilliseconds	offset=-2 (param)
   271 ;;_vterm	offset=-1 (param)
   272 ;;_new_response_info	offset=-1 (param)
   273 ;;_new_response_info	offset=-1 (param)
   274 ;;_level	offset=-2 (param)
   275 ;;_dutyValue	offset=-2 (param)
   276 ;;_timer	offset=-1 (param)
   277 ;;_count	offset=-3 (param)
   278 ;;_InterruptHandler	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_state	offset	0
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_r	offset=-1 (param)
   290 ;;_c	offset=-2 (param)
   291 ;;_strPtr	offset=-4 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_r	offset=-1 (param)
   294 ;;_c	offset=-2 (param)
   295 ;;_strPtr	offset=-4 (param)
   296 ;;_strPtr	offset=-1 (param)
   297 ;;_delay	offset=-4 (param)
   298 ;;_strPtr	offset=-2 (param)
   299 ;;__this	offset=-2 (param)
   300 ;;_clearBuffer	offset=-3 (param)
   301 ;;_s	offset	0
   302 ;;_k	offset	2
   303 ;;_dest	offset=-2 (param)
   304 ;;_c	offset=-4 (param)
   305 ;;_n	offset=-6 (param)
   306 ;;_ap	offset	0
   307 ;;_fmt	offset=-3 (param)
   308 ;;_f	offset	0
   309 ;;_ap	offset	6
   310 ;;_s	offset=-3 (param)
   311 ;;_fmt	offset=-5 (param)
   312 ;;_cfmt	offset	0
   313 ;;_fp	offset=-2 (param)
   314 ;;_fmt	offset=-4 (param)
   315 ;;_ap	offset=-6 (param)
   316 ;;_llu	offset	0
   317 ;;_ll	offset	8
   318 ;;_cp	offset	16
   319 ;;_c	offset	18
   320 ;;_fp	offset=-2 (param)
   321 ;;_fmt	offset=-4 (param)
   322 ;;_ap	offset=-6 (param)
   323 ;;_xtoa$5312	offset	0
   324 ;;_xtoa$5311	offset	2
   325 ;;_n	offset	4
   326 ;;_c	offset	12
   327 ;;_i	offset	14
   328 ;;_w	offset	16
   329 ;;_p	offset	18
   330 ;;_fp	offset=-2 (param)
   331 ;;_d	offset=-10 (param)
   332 ;;_x	offset=-11 (param)
   333 ;;_toupper$5896	offset	0
   334 ;;_c	offset=-2 (param)
   335 ;;_c	offset=-2 (param)
   336 ;;_c	offset=-2 (param)
   337 ;;_c	offset=-2 (param)
   338 ;;_r	offset	0
   339 ;;_l	offset	2
   340 ;;__l	offset=-2 (param)
   341 ;;__r	offset=-4 (param)
   342 ;;_n	offset=-6 (param)
   343 ;;_nuls	offset	0
   344 ;;_l	offset	7
   345 ;;_p	offset	9
   346 ;;_cp	offset	11
   347 ;;_w	offset	13
   348 ;;_i	offset	15
   349 ;;_fp	offset=-2 (param)
   350 ;;_s	offset=-4 (param)
   351 ;;_dtoa$5291	offset	0
   352 ;;_n	offset	2
   353 ;;_i	offset	10
   354 ;;_s	offset	12
   355 ;;_w	offset	14
   356 ;;_p	offset	16
   357 ;;_fp	offset=-2 (param)
   358 ;;_d	offset=-10 (param)
   359 ;;_a	offset=-2 (param)
   360 ;;_sign	offset	0
   361 ;;_counter	offset	1
   362 ;;_dividend	offset=-8 (param)
   363 ;;_divisor	offset=-16 (param)
   364 ;;_quotient	offset	0
   365 ;;_sign	offset	8
   366 ;;_counter	offset	9
   367 ;;_dividend	offset=-8 (param)
   368 ;;_divisor	offset=-16 (param)
   369 ;;_w	offset	0
   370 ;;_fp	offset=-2 (param)
   371 ;;_c	offset=-3 (param)
   372 ;;_w	offset	0
   373 ;;_i	offset	2
   374 ;;_fp	offset=-2 (param)
   375 ;;_buf	offset=-4 (param)
   376 ;;_p	offset=-6 (param)
   377 ;;_a	offset	0
   378 ;;_s	offset=-2 (param)
   379 ;;_i	offset	0
   380 ;;_c	offset	2
   381 ;;_s	offset=-2 (param)
   382 ;;_fp	offset=-4 (param)
   383 ;;_c	offset=-2 (param)
   384 ;;_fp	offset=-4 (param)
   385 ;;_c	offset=-1 (param)
   386 ;;__this	offset=-2 (param)
   387 ;;_c	offset=-3 (param)
   388 ;;_line	offset=-1 (param)
   389 ;;_vterm	offset=-2 (param)
   390 ;;_timer	offset=-1 (param)
   391 ;;_i	offset	0
   392 ;;_timerVal	offset=-2 (param)
   393                           
   394                           	psect	idataCOMRAM
   395  01737E                     __pidataCOMRAM:
   396                           	opt callstack 0
   397                           
   398                           ;initializer for secs_II_monitor_message@store6_11
   399  01737E  01                 	db	1
   400                           
   401                           ;initializer for secs_II_monitor_message@store1_13
   402  01737F  01                 	db	1
   403                           
   404                           ;initializer for secs_II_monitor_message@store1_1
   405  017380  01                 	db	1
   406                           
   407                           ;initializer for r_protocol@d
   408  017381  01                 	db	1
   409                           
   410                           ;initializer for r_protocol@retry
   411  017382  03                 	db	3
   412                           
   413                           	psect	idataBIGRAM
   414  013BBC                     __pidataBIGRAM:
   415                           	opt callstack 0
   416                           
   417                           ;initializer for _V
   418  013BBC  00                 	db	0
   419  013BBD  00                 	db	0
   420  013BBE  00                 	db	0
   421  013BBF  00                 	db	0
   422  013BC0  00                 	db	0
   423  013BC1  00                 	db	0
   424  013BC2  00                 	db	0
   425  013BC3  00                 	db	0
   426  013BC4  00                 	db	0
   427  013BC5  00                 	db	0
   428  013BC6  00                 	db	0
   429  013BC7  00                 	db	0
   430  013BC8  00                 	db	0
   431  013BC9  00                 	db	0
   432  013BCA  00                 	db	0
   433  013BCB  00                 	db	0
   434  013BCC  00                 	db	0
   435  013BCD  00                 	db	0
   436  013BCE  00                 	db	0
   437  013BCF  00                 	db	0
   438  013BD0  00                 	db	0
   439  013BD1  00                 	db	0
   440  013BD2  00                 	db	0
   441  013BD3  00                 	db	0
   442  013BD4  00                 	db	0
   443  013BD5  00                 	db	0
   444  013BD6  00                 	db	0
   445  013BD7  00                 	db	0
   446  013BD8  00                 	db	0
   447  013BD9  00                 	db	0
   448  013BDA  00                 	db	0
   449  013BDB  00                 	db	0
   450  013BDC  00                 	db	0
   451  013BDD  00                 	db	0
   452  013BDE  00                 	db	0
   453  013BDF  00                 	db	0
   454  013BE0  00                 	db	0
   455  013BE1  00                 	db	0
   456  013BE2  00                 	db	0
   457  013BE3  00                 	db	0
   458  013BE4  00                 	db	0
   459  013BE5  00                 	db	0
   460  013BE6  00                 	db	0
   461  013BE7  00                 	db	0
   462  013BE8  00                 	db	0
   463  013BE9  00                 	db	0
   464  013BEA  00                 	db	0
   465  013BEB  00                 	db	0
   466  013BEC  00                 	db	0
   467  013BED  00                 	db	0
   468  013BEE  00                 	db	0
   469  013BEF  00                 	db	0
   470  013BF0  00                 	db	0
   471  013BF1  00                 	db	0
   472  013BF2  00                 	db	0
   473  013BF3  00                 	db	0
   474  013BF4  00                 	db	0
   475  013BF5  00                 	db	0
   476  013BF6  00                 	db	0
   477  013BF7  00                 	db	0
   478  013BF8  00                 	db	0
   479  013BF9  00                 	db	0
   480  013BFA  00                 	db	0
   481  013BFB  00                 	db	0
   482  013BFC  00                 	db	0
   483  013BFD  00                 	db	0
   484  013BFE  00                 	db	0
   485  013BFF  00                 	db	0
   486  013C00  00                 	db	0
   487  013C01  00                 	db	0
   488  013C02  00                 	db	0
   489  013C03  00                 	db	0
   490  013C04  00                 	db	0
   491  013C05  00                 	db	0
   492  013C06  00                 	db	0
   493  013C07  00                 	db	0
   494  013C08  00                 	db	0
   495  013C09  00                 	db	0
   496  013C0A  00                 	db	0
   497  013C0B  00                 	db	0
   498  013C0C  00                 	db	0
   499  013C0D  00                 	db	0
   500  013C0E  00                 	db	0
   501  013C0F  00                 	db	0
   502  013C10  00                 	db	0
   503  013C11  00                 	db	0
   504  013C12  00                 	db	0
   505  013C13  00                 	db	0
   506  013C14  00                 	db	0
   507  013C15  00                 	db	0
   508  013C16  00                 	db	0
   509  013C17  00                 	db	0
   510  013C18  00                 	db	0
   511  013C19  00                 	db	0
   512  013C1A  00                 	db	0
   513  013C1B  00                 	db	0
   514  013C1C  00                 	db	0
   515  013C1D  00                 	db	0
   516  013C1E  00                 	db	0
   517  013C1F  00                 	db	0
   518  013C20  00                 	db	0
   519  013C21  00                 	db	0
   520  013C22  00                 	db	0
   521  013C23  00                 	db	0
   522  013C24  00                 	db	0
   523  013C25  00                 	db	0
   524  013C26  00                 	db	0
   525  013C27  00                 	db	0
   526  013C28  00                 	db	0
   527  013C29  00                 	db	0
   528  013C2A  00                 	db	0
   529  013C2B  00                 	db	0
   530  013C2C  00                 	db	0
   531  013C2D  00                 	db	0
   532  013C2E  00                 	db	0
   533  013C2F  00                 	db	0
   534  013C30  00                 	db	0
   535  013C31  00                 	db	0
   536  013C32  00                 	db	0
   537  013C33  00                 	db	0
   538  013C34  00                 	db	0
   539  013C35  00                 	db	0
   540  013C36  00                 	db	0
   541  013C37  00                 	db	0
   542  013C38  00                 	db	0
   543  013C39  00                 	db	0
   544  013C3A  00                 	db	0
   545  013C3B  00                 	db	0
   546  013C3C  00                 	db	0
   547  013C3D  00                 	db	0
   548  013C3E  00                 	db	0
   549  013C3F  00                 	db	0
   550  013C40  00                 	db	0
   551  013C41  00                 	db	0
   552  013C42  00                 	db	0
   553  013C43  00                 	db	0
   554  013C44  00                 	db	0
   555  013C45  00                 	db	0
   556  013C46  00                 	db	0
   557  013C47  00                 	db	0
   558  013C48  00                 	db	0
   559  013C49  00                 	db	0
   560  013C4A  00                 	db	0
   561  013C4B  00                 	db	0
   562  013C4C  00                 	db	0
   563  013C4D  00                 	db	0
   564  013C4E  00                 	db	0
   565  013C4F  00                 	db	0
   566  013C50  00                 	db	0
   567  013C51  00                 	db	0
   568  013C52  00                 	db	0
   569  013C53  00                 	db	0
   570  013C54  00                 	db	0
   571  013C55  00                 	db	0
   572  013C56  00                 	db	0
   573  013C57  00                 	db	0
   574  013C58  00                 	db	0
   575  013C59  00                 	db	0
   576  013C5A  00                 	db	0
   577  013C5B  00                 	db	0
   578  013C5C  00                 	db	0
   579  013C5D  00                 	db	0
   580  013C5E  00                 	db	0
   581  013C5F  00                 	db	0
   582  013C60  00                 	db	0
   583  013C61  00                 	db	0
   584  013C62  00                 	db	0
   585  013C63  00                 	db	0
   586  013C64  00                 	db	0
   587  013C65  00                 	db	0
   588  013C66  00                 	db	0
   589  013C67  00                 	db	0
   590  013C68  00                 	db	0
   591  013C69  00                 	db	0
   592  013C6A  00                 	db	0
   593  013C6B  00                 	db	0
   594  013C6C  00                 	db	0
   595  013C6D  00                 	db	0
   596  013C6E  00                 	db	0
   597  013C6F  00                 	db	0
   598  013C70  00                 	db	0
   599  013C71  00                 	db	0
   600  013C72  00                 	db	0
   601  013C73  00                 	db	0
   602  013C74  00                 	db	0
   603  013C75  00                 	db	0
   604  013C76  00                 	db	0
   605  013C77  00                 	db	0
   606  013C78  00                 	db	0
   607  013C79  00                 	db	0
   608  013C7A  00                 	db	0
   609  013C7B  00                 	db	0
   610  013C7C  00                 	db	0
   611  013C7D  00                 	db	0
   612  013C7E  00                 	db	0
   613  013C7F  00                 	db	0
   614  013C80  00                 	db	0
   615  013C81  00                 	db	0
   616  013C82  00                 	db	0
   617  013C83  00                 	db	0
   618  013C84  00                 	db	0
   619  013C85  00                 	db	0
   620  013C86  00                 	db	0
   621  013C87  00                 	db	0
   622  013C88  00                 	db	0
   623  013C89  00                 	db	0
   624  013C8A  00                 	db	0
   625  013C8B  00                 	db	0
   626  013C8C  00                 	db	0
   627  013C8D  00                 	db	0
   628  013C8E  00                 	db	0
   629  013C8F  00                 	db	0
   630  013C90  00                 	db	0
   631  013C91  00                 	db	0
   632  013C92  00                 	db	0
   633  013C93  00                 	db	0
   634  013C94  00                 	db	0
   635  013C95  00                 	db	0
   636  013C96  00                 	db	0
   637  013C97  00                 	db	0
   638  013C98  00                 	db	0
   639  013C99  00                 	db	0
   640  013C9A  00                 	db	0
   641  013C9B  00                 	db	0
   642  013C9C  00                 	db	0
   643  013C9D  00                 	db	0
   644  013C9E  00                 	db	0
   645  013C9F  00                 	db	0
   646  013CA0  00                 	db	0
   647  013CA1  00                 	db	0
   648  013CA2  00                 	db	0
   649  013CA3  00                 	db	0
   650  013CA4  00                 	db	0
   651  013CA5  00                 	db	0
   652  013CA6  00                 	db	0
   653  013CA7  00                 	db	0
   654  013CA8  00                 	db	0
   655  013CA9  00                 	db	0
   656  013CAA  00                 	db	0
   657  013CAB  00                 	db	0
   658  013CAC  00                 	db	0
   659  013CAD  00                 	db	0
   660  013CAE  00                 	db	0
   661  013CAF  00                 	db	0
   662  013CB0  00                 	db	0
   663  013CB1  00                 	db	0
   664  013CB2  00                 	db	0
   665  013CB3  00                 	db	0
   666  013CB4  00                 	db	0
   667  013CB5  00                 	db	0
   668  013CB6  00                 	db	0
   669  013CB7  00                 	db	0
   670  013CB8  00                 	db	0
   671  013CB9  00                 	db	0
   672  013CBA  00                 	db	0
   673  013CBB  00                 	db	0
   674  013CBC  00                 	db	0
   675  013CBD  00                 	db	0
   676  013CBE  00                 	db	0
   677  013CBF  00                 	db	0
   678  013CC0  00                 	db	0
   679  013CC1  00                 	db	0
   680  013CC2  00                 	db	0
   681  013CC3  00                 	db	0
   682  013CC4  00                 	db	0
   683  013CC5  00                 	db	0
   684  013CC6  00                 	db	0
   685  013CC7  00                 	db	0
   686  013CC8  00                 	db	0
   687  013CC9  00                 	db	0
   688  013CCA  00                 	db	0
   689  013CCB  00                 	db	0
   690  013CCC  00                 	db	0
   691  013CCD  00                 	db	0
   692  013CCE  00                 	db	0
   693  013CCF  00                 	db	0
   694  013CD0  00                 	db	0
   695  013CD1  00                 	db	0
   696  013CD2  00                 	db	0
   697  013CD3  00                 	db	0
   698  013CD4  00                 	db	0
   699  013CD5  00                 	db	0
   700  013CD6  00                 	db	0
   701  013CD7  00                 	db	0
   702  013CD8  00                 	db	0
   703  013CD9  00                 	db	0
   704  013CDA  00                 	db	0
   705  013CDB  00                 	db	0
   706  013CDC  00                 	db	0
   707  013CDD  00                 	db	0
   708  013CDE  00                 	db	0
   709  013CDF  00                 	db	0
   710  013CE0  00                 	db	0
   711  013CE1  00                 	db	0
   712  013CE2  00                 	db	0
   713  013CE3  0000               	dw	0
   714  013CE5  0000               	dw	0
   715  013CE7  0000               	dw	0
   716  013CE9  0000               	dw	0
   717  013CEB  0000               	dw	0
   718  013CED  0000               	dw	0
   719  013CEF  00                 	db	0
   720  013CF0  00                 	db	0
   721  013CF1  0A                 	db	10
   722  013CF2  0A                 	db	10
   723  013CF3  14                 	db	20
   724  013CF4  00                 	db	0
   725  013CF5  00                 	db	0
   726  013CF6  00                 	db	0
   727  013CF7  0000               	dw	0
   728  013CF9  0000               	dw	0
   729  013CFB  0000               	dw	0
   730  013CFD  0000               	dw	0
   731  013CFF  0000               	dw	0
   732  013D01  0000               	dw	0
   733  013D03  0000               	dw	0
   734  013D05  0000               	dw	0
   735  013D07  00                 	db	0
   736  013D08  00                 	db	0
   737  013D09  00                 	db	0
   738  013D0A  00                 	db	0
   739  013D0B  00                 	db	0
   740  013D0C  00                 	db	0
   741  013D0D  00                 	db	0
   742  013D0E  00                 	db	0
   743  013D0F  00                 	db	0
   744  013D10  00                 	db	0
   745  013D11  00                 	db	0
   746  013D12  00                 	db	0
   747  013D13  00                 	db	0
   748  013D14  00                 	db	0
   749  013D15  00                 	db	0
   750  013D16  00                 	db	0
   751  013D17  00                 	db	0
   752  013D18  00                 	db	0
   753  013D19  00                 	db	0
   754  013D1A  00                 	db	0
   755  013D1B  00                 	db	0
   756  013D1C  00                 	db	0
   757  013D1D  00                 	db	0
   758  013D1E  00                 	db	0
   759  013D1F  00                 	db	0
   760  013D20  00                 	db	0
   761  013D21  00                 	db	0
   762  013D22  00                 	db	0
   763  013D23  00                 	db	0
   764  013D24  00                 	db	0
   765  013D25  00                 	db	0
   766  013D26  00                 	db	0
   767  013D27  00                 	db	0
   768  013D28  00                 	db	0
   769  013D29  00                 	db	0
   770  013D2A  00                 	db	0
   771  013D2B  00                 	db	0
   772  013D2C  00                 	db	0
   773  013D2D  00                 	db	0
   774  013D2E  00                 	db	0
   775  013D2F  00                 	db	0
   776  013D30  00                 	db	0
   777  013D31  0000               	dw	0
   778  013D33  0000               	dw	0
   779  013D35  0000               	dw	0
   780  013D37  01                 	db	1
   781  013D38  00                 	db	0
   782  013D39  01                 	db	1
   783  013D3A  00                 	db	0
   784  013D3B  2D                 	db	45
   785                           
   786                           ;initializer for _H254
   787  013D3C  2019               	dw	8217
   788  013D3E  57                 	db	87
   789  013D3F  19                 	db	25
   790  013D40  00                 	db	0
   791  013D41  00                 	db	0
   792  013D42  00                 	db	0
   793  013D43  00                 	db	0
   794  013D44  00                 	db	0
   795  013D45  00                 	db	0
   796  013D46  00                 	db	0
   797  013D47  00                 	db	0
   798  013D48  00                 	db	0
   799  013D49  00                 	db	0
   800  013D4A  00                 	db	0
   801  013D4B  00                 	db	0
   802  013D4C  00                 	db	0
   803  013D4D  00                 	db	0
   804  013D4E  00                 	db	0
   805  013D4F  00                 	db	0
   806  013D50  00                 	db	0
   807  013D51  00                 	db	0
   808  013D52  00                 	db	0
   809  013D53  00                 	db	0
   810  013D54  00                 	db	0
   811  013D55  00                 	db	0
   812  013D56  00                 	db	0
   813  013D57  00                 	db	0
   814  013D58  00                 	db	0
   815  013D59  00                 	db	0
   816  013D5A  00                 	db	0
   817  013D5B  00                 	db	0
   818  013D5C  00                 	db	0
   819  013D5D  00                 	db	0
   820  013D5E  00                 	db	0
   821  013D5F  00                 	db	0
   822  013D60  00                 	db	0
   823  013D61  00                 	db	0
   824  013D62  00                 	db	0
   825  013D63  00                 	db	0
   826  013D64  00                 	db	0
   827  013D65  00                 	db	0
   828  013D66  00                 	db	0
   829  013D67  00                 	db	0
   830  013D68  00                 	db	0
   831  013D69  00                 	db	0
   832  013D6A  00                 	db	0
   833  013D6B  00                 	db	0
   834  013D6C  00                 	db	0
   835  013D6D  00                 	db	0
   836  013D6E  00                 	db	0
   837  013D6F  00                 	db	0
   838  013D70  00                 	db	0
   839  013D71  00                 	db	0
   840  013D72  00                 	db	0
   841  013D73  00                 	db	0
   842  013D74  00                 	db	0
   843  013D75  00                 	db	0
   844  013D76  00                 	db	0
   845  013D77  00                 	db	0
   846  013D78  00                 	db	0
   847  013D79  00                 	db	0
   848  013D7A  00                 	db	0
   849  013D7B  00                 	db	0
   850  013D7C  00                 	db	0
   851  013D7D  00                 	db	0
   852  013D7E  00                 	db	0
   853  013D7F  00                 	db	0
   854  013D80  00                 	db	0
   855  013D81  00                 	db	0
   856  013D82  00                 	db	0
   857  013D83  00                 	db	0
   858  013D84  00                 	db	0
   859  013D85  00                 	db	0
   860  013D86  00                 	db	0
   861  013D87  00                 	db	0
   862  013D88  00                 	db	0
   863  013D89  00                 	db	0
   864  013D8A  00                 	db	0
   865  013D8B  00                 	db	0
   866  013D8C  00                 	db	0
   867  013D8D  00                 	db	0
   868  013D8E  00                 	db	0
   869  013D8F  00                 	db	0
   870  013D90  00                 	db	0
   871  013D91  00                 	db	0
   872  013D92  00                 	db	0
   873  013D93  00                 	db	0
   874  013D94  00                 	db	0
   875  013D95  00                 	db	0
   876  013D96  00                 	db	0
   877  013D97  00                 	db	0
   878  013D98  00                 	db	0
   879  013D99  00                 	db	0
   880  013D9A  00                 	db	0
   881  013D9B  00                 	db	0
   882  013D9C  00                 	db	0
   883  013D9D  00                 	db	0
   884  013D9E  00                 	db	0
   885  013D9F  00                 	db	0
   886  013DA0  00                 	db	0
   887  013DA1  00                 	db	0
   888  013DA2  00                 	db	0
   889  013DA3  00                 	db	0
   890  013DA4  00                 	db	0
   891  013DA5  00                 	db	0
   892  013DA6  00                 	db	0
   893  013DA7  00                 	db	0
   894  013DA8  00                 	db	0
   895  013DA9  00                 	db	0
   896  013DAA  00                 	db	0
   897  013DAB  00                 	db	0
   898  013DAC  00                 	db	0
   899  013DAD  00                 	db	0
   900  013DAE  00                 	db	0
   901  013DAF  00                 	db	0
   902  013DB0  00                 	db	0
   903  013DB1  00                 	db	0
   904  013DB2  00                 	db	0
   905  013DB3  00                 	db	0
   906  013DB4  00                 	db	0
   907  013DB5  00                 	db	0
   908  013DB6  00                 	db	0
   909  013DB7  00                 	db	0
   910  013DB8  00                 	db	0
   911  013DB9  00                 	db	0
   912  013DBA  00                 	db	0
   913  013DBB  00                 	db	0
   914  013DBC  00                 	db	0
   915  013DBD  00                 	db	0
   916  013DBE  00                 	db	0
   917  013DBF  00                 	db	0
   918  013DC0  00                 	db	0
   919  013DC1  00                 	db	0
   920  013DC2  00                 	db	0
   921  013DC3  00                 	db	0
   922  013DC4  00                 	db	0
   923  013DC5  00                 	db	0
   924  013DC6  00                 	db	0
   925  013DC7  00                 	db	0
   926  013DC8  00                 	db	0
   927  013DC9  00                 	db	0
   928  013DCA  00                 	db	0
   929  013DCB  00                 	db	0
   930  013DCC  00                 	db	0
   931  013DCD  00                 	db	0
   932  013DCE  00                 	db	0
   933  013DCF  00                 	db	0
   934  013DD0  00                 	db	0
   935  013DD1  00                 	db	0
   936  013DD2  00                 	db	0
   937  013DD3  00                 	db	0
   938  013DD4  00                 	db	0
   939  013DD5  00                 	db	0
   940  013DD6  00                 	db	0
   941  013DD7  00                 	db	0
   942  013DD8  00                 	db	0
   943  013DD9  00                 	db	0
   944  013DDA  00                 	db	0
   945  013DDB  00                 	db	0
   946  013DDC  00                 	db	0
   947  013DDD  00                 	db	0
   948  013DDE  00                 	db	0
   949  013DDF  00                 	db	0
   950  013DE0  00                 	db	0
   951  013DE1  00                 	db	0
   952  013DE2  00                 	db	0
   953  013DE3  00                 	db	0
   954  013DE4  00                 	db	0
   955  013DE5  00                 	db	0
   956  013DE6  00                 	db	0
   957  013DE7  00                 	db	0
   958  013DE8  00                 	db	0
   959  013DE9  00                 	db	0
   960  013DEA  00                 	db	0
   961  013DEB  00                 	db	0
   962  013DEC  00                 	db	0
   963  013DED  00                 	db	0
   964  013DEE  00                 	db	0
   965  013DEF  00                 	db	0
   966  013DF0  00                 	db	0
   967  013DF1  00                 	db	0
   968  013DF2  00                 	db	0
   969  013DF3  00                 	db	0
   970  013DF4  00                 	db	0
   971  013DF5  00                 	db	0
   972  013DF6  00                 	db	0
   973  013DF7  00                 	db	0
   974  013DF8  00                 	db	0
   975  013DF9  00                 	db	0
   976  013DFA  00                 	db	0
   977  013DFB  00                 	db	0
   978  013DFC  00                 	db	0
   979  013DFD  00                 	db	0
   980  013DFE  00                 	db	0
   981  013DFF  00                 	db	0
   982  013E00  00                 	db	0
   983  013E01  00                 	db	0
   984  013E02  00                 	db	0
   985  013E03  00                 	db	0
   986  013E04  00                 	db	0
   987  013E05  00                 	db	0
   988  013E06  00                 	db	0
   989  013E07  00                 	db	0
   990  013E08  00                 	db	0
   991  013E09  00                 	db	0
   992  013E0A  00                 	db	0
   993  013E0B  00                 	db	0
   994  013E0C  00                 	db	0
   995  013E0D  00                 	db	0
   996  013E0E  00                 	db	0
   997  013E0F  00                 	db	0
   998  013E10  00                 	db	0
   999  013E11  00                 	db	0
  1000  013E12  00                 	db	0
  1001  013E13  00                 	db	0
  1002  013E14  00                 	db	0
  1003  013E15  00                 	db	0
  1004  013E16  00                 	db	0
  1005  013E17  00                 	db	0
  1006  013E18  00                 	db	0
  1007  013E19  00                 	db	0
  1008  013E1A  00                 	db	0
  1009  013E1B  00                 	db	0
  1010  013E1C  00                 	db	0
  1011  013E1D  00                 	db	0
  1012  013E1E  00                 	db	0
  1013  013E1F  00                 	db	0
  1014  013E20  00                 	db	0
  1015  013E21  00                 	db	0
  1016  013E22  00                 	db	0
  1017  013E23  00                 	db	0
  1018  013E24  00                 	db	0
  1019  013E25  00                 	db	0
  1020  013E26  00                 	db	0
  1021  013E27  00                 	db	0
  1022  013E28  00                 	db	0
  1023  013E29  00                 	db	0
  1024  013E2A  00                 	db	0
  1025  013E2B  00                 	db	0
  1026  013E2C  00                 	db	0
  1027  013E2D  00                 	db	0
  1028  013E2E  00                 	db	0
  1029  013E2F  00                 	db	0
  1030  013E30  00                 	db	0
  1031  013E31  00                 	db	0
  1032  013E32  0001               	dw	1
  1033  013E34  0000               	dw	0
  1034  013E36  01                 	db	1
  1035  013E37  80                 	db	128
  1036  013E38  03                 	db	3
  1037  013E39  8A                 	db	138
  1038  013E3A  EF                 	db	239
  1039  013E3B  80                 	db	128
  1040  013E3C  FE                 	db	254
  1041                           
  1042                           	psect	idataBANK0
  1043  016C78                     __pidataBANK0:
  1044                           	opt callstack 0
  1045                           
  1046                           ;initializer for stoa@F1144
  1047  016C78  28                 	db	40
  1048  016C79  6E                 	db	110
  1049  016C7A  75                 	db	117
  1050  016C7B  6C                 	db	108
  1051  016C7C  6C                 	db	108
  1052  016C7D  29                 	db	41
  1053  016C7E  00                 	db	0
  1054                           
  1055                           ;initializer for _H33
  1056  016C7F  0000               	dw	0
  1057  016C81  01                 	db	1
  1058  016C82  01                 	db	1
  1059  016C83  A5                 	db	165
  1060  016C84  4B                 	db	75
  1061  016C85  43                 	db	67
  1062  016C86  4F                 	db	79
  1063  016C87  4C                 	db	76
  1064  016C88  44                 	db	68
  1065  016C89  41                 	db	65
  1066  016C8A  4F                 	db	79
  1067  016C8B  4C                 	db	76
  1068  016C8C  08                 	db	8
  1069  016C8D  41                 	db	65
  1070  016C8E  02                 	db	2
  1071  016C8F  01                 	db	1
  1072  016C90  01                 	db	1
  1073  016C91  01                 	db	1
  1074  016C92  37                 	db	55
  1075  016C93  31                 	db	49
  1076  016C94  02                 	db	2
  1077  016C95  41                 	db	65
  1078  016C96  02                 	db	2
  1079  016C97  01                 	db	1
  1080  016C98  0001               	dw	1
  1081  016C9A  0000               	dw	0
  1082  016C9C  01                 	db	1
  1083  016C9D  80                 	db	128
  1084  016C9E  29                 	db	41
  1085  016C9F  82                 	db	130
  1086  016CA0  00                 	db	0
  1087  016CA1  00                 	db	0
  1088  016CA2  21                 	db	33
  1089                           
  1090                           	psect	idataBANK1
  1091  015AF2                     __pidataBANK1:
  1092                           	opt callstack 0
  1093                           
  1094                           ;initializer for _H10
  1095  015AF2  0000               	dw	0
  1096  015AF4  0001               	dw	1
  1097  015AF6  0000               	dw	0
  1098  015AF8  01                 	db	1
  1099  015AF9  80                 	db	128
  1100  015AFA  01                 	db	1
  1101  015AFB  81                 	db	129
  1102  015AFC  00                 	db	0
  1103  015AFD  00                 	db	0
  1104  015AFE  0A                 	db	10
  1105  015AFF  0000               	dw	0
  1106  015B01  00                 	db	0
  1107  015B02  00                 	db	0
  1108  015B03  00                 	db	0
  1109  015B04  00                 	db	0
  1110  015B05  00                 	db	0
  1111  015B06  00                 	db	0
  1112  015B07  00                 	db	0
  1113  015B08  00                 	db	0
  1114  015B09  00                 	db	0
  1115  015B0A  00                 	db	0
  1116  015B0B  0A                 	db	10
  1117  015B0C  0000               	dw	0
  1118  015B0E  0001               	dw	1
  1119  015B10  0000               	dw	0
  1120  015B12  01                 	db	1
  1121  015B13  80                 	db	128
  1122  015B14  00                 	db	0
  1123  015B15  01                 	db	1
  1124  015B16  00                 	db	0
  1125  015B17  00                 	db	0
  1126  015B18  0A                 	db	10
  1127  015B19  0000               	dw	0
  1128  015B1B  0001               	dw	1
  1129  015B1D  0000               	dw	0
  1130  015B1F  01                 	db	1
  1131  015B20  80                 	db	128
  1132  015B21  01                 	db	1
  1133  015B22  81                 	db	129
  1134  015B23  00                 	db	0
  1135  015B24  80                 	db	128
  1136  015B25  0A                 	db	10
  1137  015B26  0000               	dw	0
  1138  015B28  0001               	dw	1
  1139  015B2A  0000               	dw	0
  1140  015B2C  01                 	db	1
  1141  015B2D  80                 	db	128
  1142  015B2E  11                 	db	17
  1143  015B2F  82                 	db	130
  1144  015B30  00                 	db	0
  1145  015B31  00                 	db	0
  1146  015B32  0A                 	db	10
  1147  015B33  0000               	dw	0
  1148  015B35  0001               	dw	1
  1149  015B37  0000               	dw	0
  1150  015B39  01                 	db	1
  1151  015B3A  80                 	db	128
  1152  015B3B  0F                 	db	15
  1153  015B3C  81                 	db	129
  1154  015B3D  00                 	db	0
  1155  015B3E  00                 	db	0
  1156  015B3F  0A                 	db	10
  1157  015B40  0000               	dw	0
  1158  015B42  0001               	dw	1
  1159  015B44  0000               	dw	0
  1160  015B46  01                 	db	1
  1161  015B47  80                 	db	128
  1162  015B48  11                 	db	17
  1163  015B49  81                 	db	129
  1164  015B4A  00                 	db	0
  1165  015B4B  00                 	db	0
  1166  015B4C  0A                 	db	10
  1167                           
  1168                           ;initializer for _H13
  1169  015B4D  0000               	dw	0
  1170  015B4F  00                 	db	0
  1171  015B50  01                 	db	1
  1172  015B51  21                 	db	33
  1173  015B52  0001               	dw	1
  1174  015B54  0000               	dw	0
  1175  015B56  01                 	db	1
  1176  015B57  80                 	db	128
  1177  015B58  0C                 	db	12
  1178  015B59  06                 	db	6
  1179  015B5A  00                 	db	0
  1180  015B5B  00                 	db	0
  1181  015B5C  0D                 	db	13
  1182  015B5D  0000               	dw	0
  1183  015B5F  00                 	db	0
  1184  015B60  01                 	db	1
  1185  015B61  21                 	db	33
  1186  015B62  0001               	dw	1
  1187  015B64  0000               	dw	0
  1188  015B66  01                 	db	1
  1189  015B67  80                 	db	128
  1190  015B68  02                 	db	2
  1191  015B69  0A                 	db	10
  1192  015B6A  00                 	db	0
  1193  015B6B  00                 	db	0
  1194  015B6C  0D                 	db	13
  1195  015B6D  0000               	dw	0
  1196  015B6F  00                 	db	0
  1197  015B70  01                 	db	1
  1198  015B71  21                 	db	33
  1199  015B72  0001               	dw	1
  1200  015B74  0000               	dw	0
  1201  015B76  01                 	db	1
  1202  015B77  80                 	db	128
  1203  015B78  02                 	db	2
  1204  015B79  05                 	db	5
  1205  015B7A  00                 	db	0
  1206  015B7B  00                 	db	0
  1207  015B7C  0D                 	db	13
  1208  015B7D  0000               	dw	0
  1209  015B7F  FF                 	db	255
  1210  015B80  01                 	db	1
  1211  015B81  21                 	db	33
  1212  015B82  0001               	dw	1
  1213  015B84  0000               	dw	0
  1214  015B86  01                 	db	1
  1215  015B87  80                 	db	128
  1216  015B88  1A                 	db	26
  1217  015B89  02                 	db	2
  1218  015B8A  00                 	db	0
  1219  015B8B  00                 	db	0
  1220  015B8C  0D                 	db	13
  1221                           
  1222                           ;initializer for _H17
  1223  015B8D  0000               	dw	0
  1224  015B8F  00                 	db	0
  1225  015B90  01                 	db	1
  1226  015B91  00                 	db	0
  1227  015B92  01                 	db	1
  1228  015B93  21                 	db	33
  1229  015B94  02                 	db	2
  1230  015B95  01                 	db	1
  1231  015B96  0001               	dw	1
  1232  015B98  0000               	dw	0
  1233  015B9A  01                 	db	1
  1234  015B9B  80                 	db	128
  1235  015B9C  0E                 	db	14
  1236  015B9D  01                 	db	1
  1237  015B9E  00                 	db	0
  1238  015B9F  00                 	db	0
  1239  015BA0  11                 	db	17
  1240                           
  1241                           ;initializer for _H14
  1242  015BA1  0000               	dw	0
  1243  015BA3  00                 	db	0
  1244  015BA4  41                 	db	65
  1245  015BA5  11                 	db	17
  1246  015BA6  01                 	db	1
  1247  015BA7  0001               	dw	1
  1248  015BA9  0000               	dw	0
  1249  015BAB  01                 	db	1
  1250  015BAC  80                 	db	128
  1251  015BAD  04                 	db	4
  1252  015BAE  01                 	db	1
  1253  015BAF  00                 	db	0
  1254  015BB0  00                 	db	0
  1255  015BB1  0E                 	db	14
  1256                           
  1257                           ;initializer for _port_data
  1258  015BB2  FF                 	db	255
  1259  015BB3  00                 	db	0
  1260  015BB4  FF                 	db	255
  1261  015BB5  00                 	db	0
  1262  015BB6  FF                 	db	255
  1263  015BB7  00                 	db	0
  1264  015BB8  FF                 	db	255
  1265  015BB9  00                 	db	0
  1266  015BBA  FF                 	db	255
  1267  015BBB  00                 	db	0
  1268  015BBC  FF                 	db	255
  1269  015BBD  00                 	db	0
  1270  015BBE  FF                 	db	255
  1271  015BBF  00                 	db	0
  1272  015BC0  FF                 	db	255
  1273  015BC1  00                 	db	0
  1274                           
  1275                           	psect	idataBANK2
  1276  016A88                     __pidataBANK2:
  1277                           	opt callstack 0
  1278                           
  1279                           ;initializer for _H12
  1280  016A88  0000               	dw	0
  1281  016A8A  00                 	db	0
  1282  016A8B  01                 	db	1
  1283  016A8C  0001               	dw	1
  1284  016A8E  0000               	dw	0
  1285  016A90  01                 	db	1
  1286  016A91  80                 	db	128
  1287  016A92  02                 	db	2
  1288  016A93  01                 	db	1
  1289  016A94  00                 	db	0
  1290  016A95  00                 	db	0
  1291  016A96  0C                 	db	12
  1292  016A97  0000               	dw	0
  1293  016A99  00                 	db	0
  1294  016A9A  01                 	db	1
  1295  016A9B  0001               	dw	1
  1296  016A9D  0000               	dw	0
  1297  016A9F  01                 	db	1
  1298  016AA0  80                 	db	128
  1299  016AA1  0D                 	db	13
  1300  016AA2  81                 	db	129
  1301  016AA3  00                 	db	0
  1302  016AA4  00                 	db	0
  1303  016AA5  0C                 	db	12
  1304                           
  1305                           ;initializer for _H26
  1306  016AA6  0000               	dw	0
  1307  016AA8  30                 	db	48
  1308  016AA9  31                 	db	49
  1309  016AAA  30                 	db	48
  1310  016AAB  39                 	db	57
  1311  016AAC  31                 	db	49
  1312  016AAD  31                 	db	49
  1313  016AAE  30                 	db	48
  1314  016AAF  38                 	db	56
  1315  016AB0  34                 	db	52
  1316  016AB1  36                 	db	54
  1317  016AB2  30                 	db	48
  1318  016AB3  30                 	db	48
  1319  016AB4  30                 	db	48
  1320  016AB5  30                 	db	48
  1321  016AB6  0E                 	db	14
  1322  016AB7  41                 	db	65
  1323  016AB8  0001               	dw	1
  1324  016ABA  0000               	dw	0
  1325  016ABC  01                 	db	1
  1326  016ABD  80                 	db	128
  1327  016ABE  12                 	db	18
  1328  016ABF  02                 	db	2
  1329  016AC0  00                 	db	0
  1330  016AC1  00                 	db	0
  1331  016AC2  1A                 	db	26
  1332                           
  1333                           	psect	idataBANK3
  1334  016228                     __pidataBANK3:
  1335                           	opt callstack 0
  1336                           
  1337                           ;initializer for _H53
  1338  016228  0000               	dw	0
  1339  01622A  4B                 	db	75
  1340  01622B  4F                 	db	79
  1341  01622C  4F                 	db	79
  1342  01622D  52                 	db	82
  1343  01622E  42                 	db	66
  1344  01622F  42                 	db	66
  1345  016230  42                 	db	66
  1346  016231  42                 	db	66
  1347  016232  34                 	db	52
  1348  016233  33                 	db	51
  1349  016234  32                 	db	50
  1350  016235  31                 	db	49
  1351  016236  44                 	db	68
  1352  016237  45                 	db	69
  1353  016238  32                 	db	50
  1354  016239  31                 	db	49
  1355  01623A  53                 	db	83
  1356  01623B  4B                 	db	75
  1357  01623C  4F                 	db	79
  1358  01623D  4F                 	db	79
  1359  01623E  52                 	db	82
  1360  01623F  42                 	db	66
  1361  016240  42                 	db	66
  1362  016241  42                 	db	66
  1363  016242  42                 	db	66
  1364  016243  34                 	db	52
  1365  016244  30                 	db	48
  1366  016245  30                 	db	48
  1367  016246  33                 	db	51
  1368  016247  32                 	db	50
  1369  016248  31                 	db	49
  1370  016249  44                 	db	68
  1371  01624A  45                 	db	69
  1372  01624B  52                 	db	82
  1373  01624C  46                 	db	70
  1374  01624D  23                 	db	35
  1375  01624E  01                 	db	1
  1376  01624F  41                 	db	65
  1377  016250  01                 	db	1
  1378  016251  01                 	db	1
  1379  016252  21                 	db	33
  1380  016253  02                 	db	2
  1381  016254  01                 	db	1
  1382  016255  0001               	dw	1
  1383  016257  0000               	dw	0
  1384  016259  01                 	db	1
  1385  01625A  80                 	db	128
  1386  01625B  03                 	db	3
  1387  01625C  8A                 	db	138
  1388  01625D  00                 	db	0
  1389  01625E  00                 	db	0
  1390  01625F  35                 	db	53
  1391  016260  0000               	dw	0
  1392  016262  00                 	db	0
  1393  016263  4F                 	db	79
  1394  016264  4B                 	db	75
  1395  016265  4F                 	db	79
  1396  016266  4F                 	db	79
  1397  016267  52                 	db	82
  1398  016268  42                 	db	66
  1399  016269  42                 	db	66
  1400  01626A  42                 	db	66
  1401  01626B  42                 	db	66
  1402  01626C  34                 	db	52
  1403  01626D  33                 	db	51
  1404  01626E  32                 	db	50
  1405  01626F  31                 	db	49
  1406  016270  44                 	db	68
  1407  016271  45                 	db	69
  1408  016272  32                 	db	50
  1409  016273  31                 	db	49
  1410  016274  53                 	db	83
  1411  016275  4B                 	db	75
  1412  016276  52                 	db	82
  1413  016277  42                 	db	66
  1414  016278  18                 	db	24
  1415  016279  01                 	db	1
  1416  01627A  41                 	db	65
  1417  01627B  00                 	db	0
  1418  01627C  33                 	db	51
  1419  01627D  32                 	db	50
  1420  01627E  31                 	db	49
  1421  01627F  44                 	db	68
  1422  016280  45                 	db	69
  1423  016281  52                 	db	82
  1424  016282  46                 	db	70
  1425  016283  07                 	db	7
  1426  016284  01                 	db	1
  1427  016285  41                 	db	65
  1428  016286  02                 	db	2
  1429  016287  01                 	db	1
  1430  016288  01                 	db	1
  1431  016289  01                 	db	1
  1432  01628A  21                 	db	33
  1433  01628B  02                 	db	2
  1434  01628C  01                 	db	1
  1435  01628D  0001               	dw	1
  1436  01628F  0000               	dw	0
  1437  016291  01                 	db	1
  1438  016292  80                 	db	128
  1439  016293  05                 	db	5
  1440  016294  8A                 	db	138
  1441  016295  00                 	db	0
  1442  016296  00                 	db	0
  1443  016297  35                 	db	53
  1444                           
  1445                           	psect	idataBANK6
  1446  015730                     __pidataBANK6:
  1447                           	opt callstack 0
  1448                           
  1449                           ;initializer for _T
  1450  015730  63                 	db	99
  1451  015731  6F                 	db	111
  1452  015732  6D                 	db	109
  1453  015733  6D                 	db	109
  1454  015734  61                 	db	97
  1455  015735  6E                 	db	110
  1456  015736  64                 	db	100
  1457  015737  73                 	db	115
  1458  015738  20                 	db	32
  1459  015739  31                 	db	49
  1460  01573A  00                 	db	0
  1461  01573B  00                 	db	0
  1462  01573C  00                 	db	0
  1463  01573D  00                 	db	0
  1464  01573E  00                 	db	0
  1465  01573F  00                 	db	0
  1466  015740  00                 	db	0
  1467  015741  00                 	db	0
  1468  015742  00                 	db	0
  1469  015743  00                 	db	0
  1470  015744  00                 	db	0
  1471  015745  00                 	db	0
  1472  015746  00                 	db	0
  1473  015747  00                 	db	0
  1474  015748  00                 	db	0
  1475  015749  00                 	db	0
  1476  01574A  00                 	db	0
  1477  01574B  00                 	db	0
  1478  01574C  00                 	db	0
  1479  01574D  00                 	db	0
  1480  01574E  00                 	db	0
  1481  01574F  00                 	db	0
  1482  015750  64                 	db	100
  1483  015751  69                 	db	105
  1484  015752  73                 	db	115
  1485  015753  70                 	db	112
  1486  015754  6C                 	db	108
  1487  015755  61                 	db	97
  1488  015756  79                 	db	121
  1489  015757  73                 	db	115
  1490  015758  20                 	db	32
  1491  015759  31                 	db	49
  1492  01575A  00                 	db	0
  1493  01575B  00                 	db	0
  1494  01575C  00                 	db	0
  1495  01575D  00                 	db	0
  1496  01575E  00                 	db	0
  1497  01575F  00                 	db	0
  1498  015760  00                 	db	0
  1499  015761  00                 	db	0
  1500  015762  00                 	db	0
  1501  015763  00                 	db	0
  1502  015764  00                 	db	0
  1503  015765  00                 	db	0
  1504  015766  00                 	db	0
  1505  015767  00                 	db	0
  1506  015768  00                 	db	0
  1507  015769  00                 	db	0
  1508  01576A  00                 	db	0
  1509  01576B  00                 	db	0
  1510  01576C  00                 	db	0
  1511  01576D  00                 	db	0
  1512  01576E  00                 	db	0
  1513  01576F  00                 	db	0
  1514  015770  63                 	db	99
  1515  015771  6F                 	db	111
  1516  015772  6D                 	db	109
  1517  015773  6D                 	db	109
  1518  015774  61                 	db	97
  1519  015775  6E                 	db	110
  1520  015776  64                 	db	100
  1521  015777  73                 	db	115
  1522  015778  20                 	db	32
  1523  015779  32                 	db	50
  1524  01577A  00                 	db	0
  1525  01577B  00                 	db	0
  1526  01577C  00                 	db	0
  1527  01577D  00                 	db	0
  1528  01577E  00                 	db	0
  1529  01577F  00                 	db	0
  1530  015780  00                 	db	0
  1531  015781  00                 	db	0
  1532  015782  00                 	db	0
  1533  015783  00                 	db	0
  1534  015784  00                 	db	0
  1535  015785  00                 	db	0
  1536  015786  00                 	db	0
  1537  015787  00                 	db	0
  1538  015788  00                 	db	0
  1539  015789  00                 	db	0
  1540  01578A  00                 	db	0
  1541  01578B  00                 	db	0
  1542  01578C  00                 	db	0
  1543  01578D  00                 	db	0
  1544  01578E  00                 	db	0
  1545  01578F  00                 	db	0
  1546  015790  64                 	db	100
  1547  015791  69                 	db	105
  1548  015792  73                 	db	115
  1549  015793  70                 	db	112
  1550  015794  6C                 	db	108
  1551  015795  61                 	db	97
  1552  015796  79                 	db	121
  1553  015797  73                 	db	115
  1554  015798  20                 	db	32
  1555  015799  32                 	db	50
  1556  01579A  00                 	db	0
  1557  01579B  00                 	db	0
  1558  01579C  00                 	db	0
  1559  01579D  00                 	db	0
  1560  01579E  00                 	db	0
  1561  01579F  00                 	db	0
  1562  0157A0  00                 	db	0
  1563  0157A1  00                 	db	0
  1564  0157A2  00                 	db	0
  1565  0157A3  00                 	db	0
  1566  0157A4  00                 	db	0
  1567  0157A5  00                 	db	0
  1568  0157A6  00                 	db	0
  1569  0157A7  00                 	db	0
  1570  0157A8  00                 	db	0
  1571  0157A9  00                 	db	0
  1572  0157AA  00                 	db	0
  1573  0157AB  00                 	db	0
  1574  0157AC  00                 	db	0
  1575  0157AD  00                 	db	0
  1576  0157AE  00                 	db	0
  1577  0157AF  00                 	db	0
  1578  0157B0  63                 	db	99
  1579  0157B1  6F                 	db	111
  1580  0157B2  6D                 	db	109
  1581  0157B3  6D                 	db	109
  1582  0157B4  61                 	db	97
  1583  0157B5  6E                 	db	110
  1584  0157B6  64                 	db	100
  1585  0157B7  73                 	db	115
  1586  0157B8  20                 	db	32
  1587  0157B9  33                 	db	51
  1588  0157BA  00                 	db	0
  1589  0157BB  00                 	db	0
  1590  0157BC  00                 	db	0
  1591  0157BD  00                 	db	0
  1592  0157BE  00                 	db	0
  1593  0157BF  00                 	db	0
  1594  0157C0  00                 	db	0
  1595  0157C1  00                 	db	0
  1596  0157C2  00                 	db	0
  1597  0157C3  00                 	db	0
  1598  0157C4  00                 	db	0
  1599  0157C5  00                 	db	0
  1600  0157C6  00                 	db	0
  1601  0157C7  00                 	db	0
  1602  0157C8  00                 	db	0
  1603  0157C9  00                 	db	0
  1604  0157CA  00                 	db	0
  1605  0157CB  00                 	db	0
  1606  0157CC  00                 	db	0
  1607  0157CD  00                 	db	0
  1608  0157CE  00                 	db	0
  1609  0157CF  00                 	db	0
  1610  0157D0  64                 	db	100
  1611  0157D1  69                 	db	105
  1612  0157D2  73                 	db	115
  1613  0157D3  70                 	db	112
  1614  0157D4  6C                 	db	108
  1615  0157D5  61                 	db	97
  1616  0157D6  79                 	db	121
  1617  0157D7  73                 	db	115
  1618  0157D8  20                 	db	32
  1619  0157D9  33                 	db	51
  1620  0157DA  00                 	db	0
  1621  0157DB  00                 	db	0
  1622  0157DC  00                 	db	0
  1623  0157DD  00                 	db	0
  1624  0157DE  00                 	db	0
  1625  0157DF  00                 	db	0
  1626  0157E0  00                 	db	0
  1627  0157E1  00                 	db	0
  1628  0157E2  00                 	db	0
  1629  0157E3  00                 	db	0
  1630  0157E4  00                 	db	0
  1631  0157E5  00                 	db	0
  1632  0157E6  00                 	db	0
  1633  0157E7  00                 	db	0
  1634  0157E8  00                 	db	0
  1635  0157E9  00                 	db	0
  1636  0157EA  00                 	db	0
  1637  0157EB  00                 	db	0
  1638  0157EC  00                 	db	0
  1639  0157ED  00                 	db	0
  1640  0157EE  00                 	db	0
  1641  0157EF  00                 	db	0
  1642  0157F0  63                 	db	99
  1643  0157F1  6F                 	db	111
  1644  0157F2  6D                 	db	109
  1645  0157F3  6D                 	db	109
  1646  0157F4  61                 	db	97
  1647  0157F5  6E                 	db	110
  1648  0157F6  64                 	db	100
  1649  0157F7  73                 	db	115
  1650  0157F8  20                 	db	32
  1651  0157F9  34                 	db	52
  1652  0157FA  00                 	db	0
  1653  0157FB  00                 	db	0
  1654  0157FC  00                 	db	0
  1655  0157FD  00                 	db	0
  1656  0157FE  00                 	db	0
  1657  0157FF  00                 	db	0
  1658  015800  00                 	db	0
  1659  015801  00                 	db	0
  1660  015802  00                 	db	0
  1661  015803  00                 	db	0
  1662  015804  00                 	db	0
  1663  015805  00                 	db	0
  1664  015806  00                 	db	0
  1665  015807  00                 	db	0
  1666  015808  00                 	db	0
  1667  015809  00                 	db	0
  1668  01580A  00                 	db	0
  1669  01580B  00                 	db	0
  1670  01580C  00                 	db	0
  1671  01580D  00                 	db	0
  1672  01580E  00                 	db	0
  1673  01580F  00                 	db	0
  1674  015810  64                 	db	100
  1675  015811  69                 	db	105
  1676  015812  73                 	db	115
  1677  015813  70                 	db	112
  1678  015814  6C                 	db	108
  1679  015815  61                 	db	97
  1680  015816  79                 	db	121
  1681  015817  73                 	db	115
  1682  015818  20                 	db	32
  1683  015819  34                 	db	52
  1684  01581A  00                 	db	0
  1685  01581B  00                 	db	0
  1686  01581C  00                 	db	0
  1687  01581D  00                 	db	0
  1688  01581E  00                 	db	0
  1689  01581F  00                 	db	0
  1690  015820  00                 	db	0
  1691  015821  00                 	db	0
  1692  015822  00                 	db	0
  1693  015823  00                 	db	0
  1694  015824  00                 	db	0
  1695  015825  00                 	db	0
  1696  015826  00                 	db	0
  1697  015827  00                 	db	0
  1698  015828  00                 	db	0
  1699  015829  00                 	db	0
  1700  01582A  00                 	db	0
  1701  01582B  00                 	db	0
  1702  01582C  00                 	db	0
  1703  01582D  00                 	db	0
  1704  01582E  00                 	db	0
  1705  01582F  00                 	db	0
  1706                           
  1707                           	psect	mediumconst
  1708  00FC4E                     __pmediumconst:
  1709                           	opt callstack 0
  1710  00FC4E  00                 	db	0
  1711  00FC4F                     _HC33:
  1712                           	opt callstack 0
  1713  00FC4F  0000               	dw	0
  1714  00FC51  01                 	db	1
  1715  00FC52  01                 	db	1
  1716  00FC53  A5                 	db	165
  1717  00FC54  4B                 	db	75
  1718  00FC55  43                 	db	67
  1719  00FC56  4F                 	db	79
  1720  00FC57  4C                 	db	76
  1721  00FC58  44                 	db	68
  1722  00FC59  41                 	db	65
  1723  00FC5A  4F                 	db	79
  1724  00FC5B  4C                 	db	76
  1725  00FC5C  08                 	db	8
  1726  00FC5D  41                 	db	65
  1727  00FC5E  02                 	db	2
  1728  00FC5F  01                 	db	1
  1729  00FC60  01                 	db	1
  1730  00FC61  01                 	db	1
  1731  00FC62  37                 	db	55
  1732  00FC63  31                 	db	49
  1733  00FC64  02                 	db	2
  1734  00FC65  41                 	db	65
  1735  00FC66  02                 	db	2
  1736  00FC67  01                 	db	1
  1737  00FC68  0001               	dw	1
  1738  00FC6A  0000               	dw	0
  1739  00FC6C  01                 	db	1
  1740  00FC6D  80                 	db	128
  1741  00FC6E  29                 	db	41
  1742  00FC6F  82                 	db	130
  1743  00FC70  00                 	db	0
  1744  00FC71  00                 	db	0
  1745  00FC72  21                 	db	33
  1746  00FC73  0000               	dw	0
  1747  00FC75  01                 	db	1
  1748  00FC76  01                 	db	1
  1749  00FC77  A5                 	db	165
  1750  00FC78  4B                 	db	75
  1751  00FC79  43                 	db	67
  1752  00FC7A  4F                 	db	79
  1753  00FC7B  4C                 	db	76
  1754  00FC7C  44                 	db	68
  1755  00FC7D  41                 	db	65
  1756  00FC7E  4F                 	db	79
  1757  00FC7F  4C                 	db	76
  1758  00FC80  08                 	db	8
  1759  00FC81  41                 	db	65
  1760  00FC82  02                 	db	2
  1761  00FC83  01                 	db	1
  1762  00FC84  01                 	db	1
  1763  00FC85  01                 	db	1
  1764  00FC86  32                 	db	50
  1765  00FC87  31                 	db	49
  1766  00FC88  02                 	db	2
  1767  00FC89  41                 	db	65
  1768  00FC8A  02                 	db	2
  1769  00FC8B  01                 	db	1
  1770  00FC8C  0001               	dw	1
  1771  00FC8E  0000               	dw	0
  1772  00FC90  01                 	db	1
  1773  00FC91  80                 	db	128
  1774  00FC92  29                 	db	41
  1775  00FC93  82                 	db	130
  1776  00FC94  00                 	db	0
  1777  00FC95  00                 	db	0
  1778  00FC96  21                 	db	33
  1779  00FC97                     __end_of_HC33:
  1780                           	opt callstack 0
  1781  0000                     _IVTADL	set	14493
  1782  0000                     _IVTADH	set	14494
  1783  0000                     _IVTADU	set	14495
  1784  0000                     _PIR4bits	set	14756
  1785  0000                     _PIE8bits	set	14744
  1786  0000                     _PIR8bits	set	14760
  1787  0000                     _NVMCON2	set	14822
  1788  0000                     _NVMDAT	set	14819
  1789  0000                     _NVMADRL	set	14816
  1790  0000                     _NVMADRH	set	14817
  1791  0000                     _NVMCON1bits	set	14821
  1792  0000                     _SCANPR	set	14839
  1793  0000                     _DMA2PR	set	14836
  1794  0000                     _DMA1PR	set	14835
  1795  0000                     _MAINPR	set	14834
  1796  0000                     _ISRPR	set	14833
  1797  0000                     _PIE2bits	set	14738
  1798  0000                     _PIR2bits	set	14754
  1799  0000                     _PIE9bits	set	14745
  1800  0000                     _PIR9bits	set	14761
  1801  0000                     _PIE6bits	set	14742
  1802  0000                     _PIE3bits	set	14739
  1803  0000                     _PMD7	set	14791
  1804  0000                     _PMD6	set	14790
  1805  0000                     _PMD5	set	14789
  1806  0000                     _PMD4	set	14788
  1807  0000                     _PMD3	set	14787
  1808  0000                     _PMD2	set	14786
  1809  0000                     _PMD1	set	14785
  1810  0000                     _PMD0	set	14784
  1811  0000                     _OSCTUNE	set	14814
  1812  0000                     _OSCFRQ	set	14815
  1813  0000                     _OSCEN	set	14813
  1814  0000                     _OSCCON3	set	14811
  1815  0000                     _OSCCON1	set	14809
  1816  0000                     _IPR8bits	set	14728
  1817  0000                     _IPR9bits	set	14729
  1818  0000                     _IPR7bits	set	14727
  1819  0000                     _IPR5bits	set	14725
  1820  0000                     _IPR1bits	set	14721
  1821  0000                     _IPR3bits	set	14723
  1822  0000                     _IPR6bits	set	14726
  1823  0000                     _IPR2bits	set	14722
  1824  0000                     _PIE7bits	set	14743
  1825  0000                     _PIE5bits	set	14741
  1826  0000                     _PIE1bits	set	14737
  1827  0000                     _PIR7bits	set	14759
  1828  0000                     _PIR5bits	set	14757
  1829  0000                     _PIR1bits	set	14753
  1830  0000                     _PLLR	set	118496
  1831  0000                     _SPI1SDIPPS	set	15071
  1832  0000                     _RC6PPS	set	14870
  1833  0000                     _RC5PPS	set	14869
  1834  0000                     _RD1PPS	set	14873
  1835  0000                     _RA6PPS	set	14854
  1836  0000                     _RA5PPS	set	14853
  1837  0000                     _RA4PPS	set	14852
  1838  0000                     _SPI1SCKPPS	set	15070
  1839  0000                     _U1RXPPS	set	15077
  1840  0000                     _INT1PPS	set	15041
  1841  0000                     _INT2PPS	set	15042
  1842  0000                     _INT0PPS	set	15040
  1843  0000                     _RC3PPS	set	14867
  1844  0000                     _RB6PPS	set	14862
  1845  0000                     _U2RXPPS	set	15080
  1846  0000                     _SLRCONF	set	14995
  1847  0000                     _SLRCONE	set	14979
  1848  0000                     _SLRCOND	set	14963
  1849  0000                     _SLRCONC	set	14947
  1850  0000                     _SLRCONB	set	14931
  1851  0000                     _SLRCONA	set	14915
  1852  0000                     _ODCOND	set	14962
  1853  0000                     _ODCONC	set	14946
  1854  0000                     _ODCONB	set	14930
  1855  0000                     _ODCONA	set	14914
  1856  0000                     _ODCONF	set	14994
  1857  0000                     _ODCONE	set	14978
  1858  0000                     _WPUC	set	14945
  1859  0000                     _WPUA	set	14913
  1860  0000                     _WPUB	set	14929
  1861  0000                     _WPUE	set	14977
  1862  0000                     _WPUF	set	14993
  1863  0000                     _WPUD	set	14961
  1864  0000                     _ANSELA	set	14912
  1865  0000                     _ANSELF	set	14992
  1866  0000                     _ANSELE	set	14976
  1867  0000                     _ANSELB	set	14928
  1868  0000                     _ANSELC	set	14944
  1869  0000                     _ANSELD	set	14960
  1870  0000                     _DMA2SSA	set	15321
  1871  0000                     _DMA1SSA	set	15353
  1872  0000                     _DMA2DSZ	set	15310
  1873  0000                     _DMA2SSZ	set	15319
  1874  0000                     _DMA2DSA	set	15312
  1875  0000                     _DMA1DSZ	set	15342
  1876  0000                     _DMA1SSZ	set	15351
  1877  0000                     _DMA1DSA	set	15344
  1878  0000                     _DMA1CON0bits	set	15356
  1879  0000                     _DMA1CON1bits	set	15357
  1880  0000                     _DMA2CON0	set	15324
  1881  0000                     _DMA2AIRQ	set	15326
  1882  0000                     _DMA2SIRQ	set	15327
  1883  0000                     _DMA2CON1	set	15325
  1884  0000                     _DMA1CON0	set	15356
  1885  0000                     _DMA1AIRQ	set	15358
  1886  0000                     _DMA1SIRQ	set	15359
  1887  0000                     _DMA1CON1	set	15357
  1888  0000                     _CLC1CON	set	15476
  1889  0000                     _CLC1GLS3	set	15485
  1890  0000                     _CLC1GLS2	set	15484
  1891  0000                     _CLC1GLS1	set	15483
  1892  0000                     _CLC1GLS0	set	15482
  1893  0000                     _CLC1SEL3	set	15481
  1894  0000                     _CLC1SEL2	set	15480
  1895  0000                     _CLC1SEL1	set	15479
  1896  0000                     _CLC1SEL0	set	15478
  1897  0000                     _CLC1POL	set	15477
  1898  0000                     _CLKRCON	set	15589
  1899  0000                     _CLKRCLK	set	15590
  1900  0000                     _MD1CARL	set	15613
  1901  0000                     _MD1CARH	set	15614
  1902  0000                     _MD1SRC	set	15612
  1903  0000                     _MD1CON1bits	set	15611
  1904  0000                     _MD1CON0bits	set	15610
  1905  0000                     _SPI1INTFbits	set	15642
  1906  0000                     _SPI1RXB	set	15632
  1907  0000                     _SPI1TXB	set	15633
  1908  0000                     _SPI1TCNTL	set	15634
  1909  0000                     _SPI1CON0	set	15636
  1910  0000                     _SPI1CLK	set	15644
  1911  0000                     _SPI1BAUD	set	15641
  1912  0000                     _SPI1CON2	set	15638
  1913  0000                     _SPI1CON1	set	15637
  1914  0000                     _U2RXB	set	15824
  1915  0000                     _U2TXB	set	15826
  1916  0000                     _U2ERRIE	set	15842
  1917  0000                     _U2ERRIR	set	15841
  1918  0000                     _U2UIR	set	15840
  1919  0000                     _U2FIFO	set	15839
  1920  0000                     _U2BRGH	set	15838
  1921  0000                     _U2BRGL	set	15837
  1922  0000                     _U2CON2	set	15836
  1923  0000                     _U2CON1	set	15835
  1924  0000                     _U2CON0	set	15834
  1925  0000                     _U2P3L	set	15832
  1926  0000                     _U2P2L	set	15830
  1927  0000                     _U2P1L	set	15828
  1928  0000                     _U1RXB	set	15848
  1929  0000                     _U1TXB	set	15850
  1930  0000                     _U1ERRIE	set	15866
  1931  0000                     _U1ERRIR	set	15865
  1932  0000                     _U1UIR	set	15864
  1933  0000                     _U1FIFO	set	15863
  1934  0000                     _U1BRGH	set	15862
  1935  0000                     _U1BRGL	set	15861
  1936  0000                     _U1CON2	set	15860
  1937  0000                     _U1CON1	set	15859
  1938  0000                     _U1CON0	set	15858
  1939  0000                     _U1P3H	set	15857
  1940  0000                     _U1P3L	set	15856
  1941  0000                     _U1P2H	set	15855
  1942  0000                     _U1P2L	set	15854
  1943  0000                     _U1P1H	set	15853
  1944  0000                     _U1P1L	set	15852
  1945  0000                     _ADCON0	set	16120
  1946  0000                     _ADCLK	set	16127
  1947  0000                     _ADACT	set	16126
  1948  0000                     _ADREF	set	16125
  1949  0000                     _ADSTAT	set	16124
  1950  0000                     _ADCON3	set	16123
  1951  0000                     _ADCON2	set	16122
  1952  0000                     _ADCON1	set	16121
  1953  0000                     _ADPREH	set	16119
  1954  0000                     _ADPREL	set	16118
  1955  0000                     _ADCAP	set	16117
  1956  0000                     _ADACQH	set	16116
  1957  0000                     _ADACQL	set	16115
  1958  0000                     _ADPCH	set	16113
  1959  0000                     _ADRPT	set	16108
  1960  0000                     _ADACCU	set	16106
  1961  0000                     _ADSTPTH	set	16101
  1962  0000                     _ADSTPTL	set	16100
  1963  0000                     _ADUTHH	set	16097
  1964  0000                     _ADUTHL	set	16096
  1965  0000                     _ADLTHH	set	16095
  1966  0000                     _ADLTHL	set	16094
  1967  0000                     _CCPTMRS1bits	set	16223
  1968  0000                     _NCO1CONbits	set	16190
  1969  0000                     _NCO1INCL	set	16187
  1970  0000                     _NCO1INCH	set	16188
  1971  0000                     _NCO1INCU	set	16189
  1972  0000                     _NCO1ACCL	set	16184
  1973  0000                     _NCO1ACCH	set	16185
  1974  0000                     _NCO1ACCU	set	16186
  1975  0000                     _NCO1CLK	set	16191
  1976  0000                     _NCO1CON	set	16190
  1977  0000                     _LATBbits	set	16315
  1978  0000                     _LATCbits	set	16316
  1979  0000                     _LATFbits	set	16319
  1980  0000                     _LATDbits	set	16317
  1981  0000                     _PORTBbits	set	16331
  1982  0000                     _T2CON	set	16300
  1983  0000                     _T2TMR	set	16298
  1984  0000                     _T2PR	set	16299
  1985  0000                     _T2RST	set	16303
  1986  0000                     _T2HLT	set	16301
  1987  0000                     _T2CLKCON	set	16302
  1988  0000                     _PWM8DCL	set	16224
  1989  0000                     _PWM8DCH	set	16225
  1990  0000                     _PWM8CON	set	16226
  1991  0000                     _T5CONbits	set	16282
  1992  0000                     _T5CON	set	16282
  1993  0000                     _TMR5L	set	16280
  1994  0000                     _TMR5H	set	16281
  1995  0000                     _T5CLK	set	16285
  1996  0000                     _T5GATE	set	16284
  1997  0000                     _T5GCON	set	16283
  1998  0000                     _T6CON	set	16276
  1999  0000                     _T6TMR	set	16274
  2000  0000                     _T6PR	set	16275
  2001  0000                     _T6RST	set	16279
  2002  0000                     _T6HLT	set	16277
  2003  0000                     _T6CLKCON	set	16278
  2004  0000                     _LATEbits	set	16318
  2005  0000                     _TRISD	set	16325
  2006  0000                     _TRISC	set	16324
  2007  0000                     _TRISB	set	16323
  2008  0000                     _TRISA	set	16322
  2009  0000                     _TRISF	set	16327
  2010  0000                     _TRISE	set	16326
  2011  0000                     _LATC	set	16316
  2012  0000                     _LATB	set	16315
  2013  0000                     _LATF	set	16319
  2014  0000                     _LATA	set	16314
  2015  0000                     _LATD	set	16317
  2016  0000                     _LATE	set	16318
  2017  0000                     _IVTLOCKbits	set	16340
  2018  0000                     _IVTLOCK	set	16340
  2019  0000                     _INTCON0bits	set	16338
  2020  0000                     _GIE	set	130711
  2021  00FC97                     STR_29:
  2022  00FC97  52                 	db	82	;'R'
  2023  00FC98  25                 	db	37
  2024  00FC99  64                 	db	100	;'d'
  2025  00FC9A  20                 	db	32
  2026  00FC9B  25                 	db	37
  2027  00FC9C  64                 	db	100	;'d'
  2028  00FC9D  2C                 	db	44
  2029  00FC9E  20                 	db	32
  2030  00FC9F  54                 	db	84	;'T'
  2031  00FCA0  25                 	db	37
  2032  00FCA1  64                 	db	100	;'d'
  2033  00FCA2  20                 	db	32
  2034  00FCA3  25                 	db	37
  2035  00FCA4  64                 	db	100	;'d'
  2036  00FCA5  20                 	db	32
  2037  00FCA6  43                 	db	67	;'C'
  2038  00FCA7  25                 	db	37
  2039  00FCA8  64                 	db	100	;'d'
  2040  00FCA9  20                 	db	32
  2041  00FCAA  20                 	db	32
  2042  00FCAB  46                 	db	70	;'F'
  2043  00FCAC  47                 	db	71	;'G'
  2044  00FCAD  42                 	db	66	;'B'
  2045  00FCAE  40                 	db	64	;'@'
  2046  00FCAF  4D                 	db	77	;'M'
  2047  00FCB0  43                 	db	67	;'C'
  2048  00FCB1  48                 	db	72	;'H'
  2049  00FCB2  50                 	db	80	;'P'
  2050  00FCB3  20                 	db	32
  2051  00FCB4  25                 	db	37
  2052  00FCB5  73                 	db	115	;'s'
  2053  00FCB6  20                 	db	32
  2054  00FCB7  20                 	db	32
  2055  00FCB8  20                 	db	32
  2056  00FCB9  20                 	db	32
  2057  00FCBA  20                 	db	32
  2058  00FCBB  20                 	db	32
  2059  00FCBC  20                 	db	32
  2060  00FCBD  20                 	db	32
  2061  00FCBE  20                 	db	32
  2062  00FCBF  20                 	db	32
  2063  00FCC0  20                 	db	32
  2064  00FCC1  20                 	db	32
  2065  00FCC2  20                 	db	32
  2066  00FCC3  20                 	db	32
  2067  00FCC4  20                 	db	32
  2068  00FCC5  20                 	db	32
  2069  00FCC6  20                 	db	32
  2070  00FCC7  20                 	db	32
  2071  00FCC8  20                 	db	32
  2072  00FCC9  20                 	db	32
  2073  00FCCA  20                 	db	32
  2074  00FCCB  20                 	db	32
  2075  00FCCC  20                 	db	32
  2076  00FCCD  20                 	db	32
  2077  00FCCE  20                 	db	32
  2078  00FCCF  20                 	db	32
  2079  00FCD0  20                 	db	32
  2080  00FCD1  20                 	db	32
  2081  00FCD2  20                 	db	32
  2082  00FCD3  20                 	db	32
  2083  00FCD4  20                 	db	32
  2084  00FCD5  20                 	db	32
  2085  00FCD6  20                 	db	32
  2086  00FCD7  20                 	db	32
  2087  00FCD8  20                 	db	32
  2088  00FCD9  20                 	db	32
  2089  00FCDA  20                 	db	32
  2090  00FCDB  20                 	db	32
  2091  00FCDC  20                 	db	32
  2092  00FCDD  20                 	db	32
  2093  00FCDE  20                 	db	32
  2094  00FCDF  20                 	db	32
  2095  00FCE0  20                 	db	32
  2096  00FCE1  20                 	db	32
  2097  00FCE2  20                 	db	32
  2098  00FCE3  20                 	db	32
  2099  00FCE4  20                 	db	32
  2100  00FCE5  20                 	db	32
  2101  00FCE6  20                 	db	32
  2102  00FCE7  20                 	db	32
  2103  00FCE8  20                 	db	32
  2104  00FCE9  20                 	db	32
  2105  00FCEA  20                 	db	32
  2106  00FCEB  20                 	db	32
  2107  00FCEC  20                 	db	32
  2108  00FCED  20                 	db	32
  2109  00FCEE  20                 	db	32
  2110  00FCEF  20                 	db	32
  2111  00FCF0  20                 	db	32
  2112  00FCF1  00                 	db	0
  2113  00FCF2                     STR_25:
  2114  00FCF2  52                 	db	82	;'R'
  2115  00FCF3  25                 	db	37
  2116  00FCF4  64                 	db	100	;'d'
  2117  00FCF5  20                 	db	32
  2118  00FCF6  25                 	db	37
  2119  00FCF7  64                 	db	100	;'d'
  2120  00FCF8  2C                 	db	44
  2121  00FCF9  20                 	db	32
  2122  00FCFA  54                 	db	84	;'T'
  2123  00FCFB  25                 	db	37
  2124  00FCFC  64                 	db	100	;'d'
  2125  00FCFD  20                 	db	32
  2126  00FCFE  25                 	db	37
  2127  00FCFF  64                 	db	100	;'d'
  2128  00FD00  20                 	db	32
  2129  00FD01  43                 	db	67	;'C'
  2130  00FD02  25                 	db	37
  2131  00FD03  64                 	db	100	;'d'
  2132  00FD04  20                 	db	32
  2133  00FD05  25                 	db	37
  2134  00FD06  64                 	db	100	;'d'
  2135  00FD07  20                 	db	32
  2136  00FD08  20                 	db	32
  2137  00FD09  20                 	db	32
  2138  00FD0A  20                 	db	32
  2139  00FD0B  20                 	db	32
  2140  00FD0C  20                 	db	32
  2141  00FD0D  23                 	db	35
  2142  00FD0E  00                 	db	0
  2143  00FD0F                     STR_55:
  2144  00FD0F  20                 	db	32
  2145  00FD10  54                 	db	84	;'T'
  2146  00FD11  65                 	db	101	;'e'
  2147  00FD12  72                 	db	114	;'r'
  2148  00FD13  6D                 	db	109	;'m'
  2149  00FD14  69                 	db	105	;'i'
  2150  00FD15  6E                 	db	110	;'n'
  2151  00FD16  61                 	db	97	;'a'
  2152  00FD17  6C                 	db	108	;'l'
  2153  00FD18  20                 	db	32
  2154  00FD19  25                 	db	37
  2155  00FD1A  64                 	db	100	;'d'
  2156  00FD1B  20                 	db	32
  2157  00FD1C  20                 	db	32
  2158  00FD1D  20                 	db	32
  2159  00FD1E  20                 	db	32
  2160  00FD1F  20                 	db	32
  2161  00FD20  20                 	db	32
  2162  00FD21  20                 	db	32
  2163  00FD22  20                 	db	32
  2164  00FD23  20                 	db	32
  2165  00FD24  20                 	db	32
  2166  00FD25  20                 	db	32
  2167  00FD26  20                 	db	32
  2168  00FD27  20                 	db	32
  2169  00FD28  00                 	db	0
  2170  00FD29                     STR_33:
  2171  00FD29  20                 	db	32
  2172  00FD2A  44                 	db	68	;'D'
  2173  00FD2B  65                 	db	101	;'e'
  2174  00FD2C  62                 	db	98	;'b'
  2175  00FD2D  75                 	db	117	;'u'
  2176  00FD2E  67                 	db	103	;'g'
  2177  00FD2F  20                 	db	32
  2178  00FD30  54                 	db	84	;'T'
  2179  00FD31  6F                 	db	111	;'o'
  2180  00FD32  67                 	db	103	;'g'
  2181  00FD33  67                 	db	103	;'g'
  2182  00FD34  6C                 	db	108	;'l'
  2183  00FD35  65                 	db	101	;'e'
  2184  00FD36  20                 	db	32
  2185  00FD37  20                 	db	32
  2186  00FD38  20                 	db	32
  2187  00FD39  20                 	db	32
  2188  00FD3A  20                 	db	32
  2189  00FD3B  20                 	db	32
  2190  00FD3C  20                 	db	32
  2191  00FD3D  20                 	db	32
  2192  00FD3E  20                 	db	32
  2193  00FD3F  20                 	db	32
  2194  00FD40  20                 	db	32
  2195  00FD41  20                 	db	32
  2196  00FD42  00                 	db	0
  2197  00FD43                     STR_32:
  2198  00FD43  20                 	db	32
  2199  00FD44  4C                 	db	76	;'L'
  2200  00FD45  6F                 	db	111	;'o'
  2201  00FD46  67                 	db	103	;'g'
  2202  00FD47  20                 	db	32
  2203  00FD48  66                 	db	102	;'f'
  2204  00FD49  69                 	db	105	;'i'
  2205  00FD4A  6C                 	db	108	;'l'
  2206  00FD4B  65                 	db	101	;'e'
  2207  00FD4C  20                 	db	32
  2208  00FD4D  72                 	db	114	;'r'
  2209  00FD4E  65                 	db	101	;'e'
  2210  00FD4F  73                 	db	115	;'s'
  2211  00FD50  65                 	db	101	;'e'
  2212  00FD51  74                 	db	116	;'t'
  2213  00FD52  20                 	db	32
  2214  00FD53  20                 	db	32
  2215  00FD54  20                 	db	32
  2216  00FD55  20                 	db	32
  2217  00FD56  20                 	db	32
  2218  00FD57  20                 	db	32
  2219  00FD58  20                 	db	32
  2220  00FD59  20                 	db	32
  2221  00FD5A  20                 	db	32
  2222  00FD5B  20                 	db	32
  2223  00FD5C  00                 	db	0
  2224  00FD5D                     STR_20:
  2225  00FD5D  4C                 	db	76	;'L'
  2226  00FD5E  4F                 	db	79	;'O'
  2227  00FD5F  47                 	db	71	;'G'
  2228  00FD60  3A                 	db	58	;':'
  2229  00FD61  20                 	db	32
  2230  00FD62  55                 	db	85	;'U'
  2231  00FD63  25                 	db	37
  2232  00FD64  64                 	db	100	;'d'
  2233  00FD65  20                 	db	32
  2234  00FD66  47                 	db	71	;'G'
  2235  00FD67  25                 	db	37
  2236  00FD68  64                 	db	100	;'d'
  2237  00FD69  20                 	db	32
  2238  00FD6A  25                 	db	37
  2239  00FD6B  64                 	db	100	;'d'
  2240  00FD6C  20                 	db	32
  2241  00FD6D  25                 	db	37
  2242  00FD6E  64                 	db	100	;'d'
  2243  00FD6F  20                 	db	32
  2244  00FD70  20                 	db	32
  2245  00FD71  20                 	db	32
  2246  00FD72  20                 	db	32
  2247  00FD73  20                 	db	32
  2248  00FD74  20                 	db	32
  2249  00FD75  23                 	db	35
  2250  00FD76  00                 	db	0
  2251  00FD77                     STR_56:
  2252  00FD77  20                 	db	32
  2253  00FD78  43                 	db	67	;'C'
  2254  00FD79  4D                 	db	77	;'M'
  2255  00FD7A  44                 	db	68	;'D'
  2256  00FD7B  20                 	db	32
  2257  00FD7C  25                 	db	37
  2258  00FD7D  63                 	db	99	;'c'
  2259  00FD7E  20                 	db	32
  2260  00FD7F  25                 	db	37
  2261  00FD80  63                 	db	99	;'c'
  2262  00FD81  20                 	db	32
  2263  00FD82  4C                 	db	76	;'L'
  2264  00FD83  65                 	db	101	;'e'
  2265  00FD84  6E                 	db	110	;'n'
  2266  00FD85  20                 	db	32
  2267  00FD86  25                 	db	37
  2268  00FD87  64                 	db	100	;'d'
  2269  00FD88  20                 	db	32
  2270  00FD89  20                 	db	32
  2271  00FD8A  20                 	db	32
  2272  00FD8B  20                 	db	32
  2273  00FD8C  20                 	db	32
  2274  00FD8D  20                 	db	32
  2275  00FD8E  20                 	db	32
  2276  00FD8F  00                 	db	0
  2277  00FD90                     STR_14:
  2278  00FD90  20                 	db	32
  2279  00FD91  53                 	db	83	;'S'
  2280  00FD92  25                 	db	37
  2281  00FD93  64                 	db	100	;'d'
  2282  00FD94  46                 	db	70	;'F'
  2283  00FD95  25                 	db	37
  2284  00FD96  64                 	db	100	;'d'
  2285  00FD97  20                 	db	32
  2286  00FD98  23                 	db	35
  2287  00FD99  20                 	db	32
  2288  00FD9A  4F                 	db	79	;'O'
  2289  00FD9B  4B                 	db	75	;'K'
  2290  00FD9C  20                 	db	32
  2291  00FD9D  25                 	db	37
  2292  00FD9E  64                 	db	100	;'d'
  2293  00FD9F  20                 	db	32
  2294  00FDA0  20                 	db	32
  2295  00FDA1  20                 	db	32
  2296  00FDA2  20                 	db	32
  2297  00FDA3  20                 	db	32
  2298  00FDA4  20                 	db	32
  2299  00FDA5  20                 	db	32
  2300  00FDA6  20                 	db	32
  2301  00FDA7  00                 	db	0
  2302  00FDA8                     STR_13:
  2303  00FDA8  20                 	db	32
  2304  00FDA9  53                 	db	83	;'S'
  2305  00FDAA  25                 	db	37
  2306  00FDAB  64                 	db	100	;'d'
  2307  00FDAC  46                 	db	70	;'F'
  2308  00FDAD  25                 	db	37
  2309  00FDAE  64                 	db	100	;'d'
  2310  00FDAF  20                 	db	32
  2311  00FDB0  23                 	db	35
  2312  00FDB1  20                 	db	32
  2313  00FDB2  4F                 	db	79	;'O'
  2314  00FDB3  4B                 	db	75	;'K'
  2315  00FDB4  51                 	db	81	;'Q'
  2316  00FDB5  25                 	db	37
  2317  00FDB6  64                 	db	100	;'d'
  2318  00FDB7  20                 	db	32
  2319  00FDB8  20                 	db	32
  2320  00FDB9  20                 	db	32
  2321  00FDBA  20                 	db	32
  2322  00FDBB  20                 	db	32
  2323  00FDBC  20                 	db	32
  2324  00FDBD  20                 	db	32
  2325  00FDBE  20                 	db	32
  2326  00FDBF  00                 	db	0
  2327  00FDC0                     STR_53:
  2328  00FDC0  20                 	db	32
  2329  00FDC1  4C                 	db	76	;'L'
  2330  00FDC2  6F                 	db	111	;'o'
  2331  00FDC3  61                 	db	97	;'a'
  2332  00FDC4  64                 	db	100	;'d'
  2333  00FDC5  2D                 	db	45
  2334  00FDC6  6C                 	db	108	;'l'
  2335  00FDC7  6F                 	db	111	;'o'
  2336  00FDC8  63                 	db	99	;'c'
  2337  00FDC9  6B                 	db	107	;'k'
  2338  00FDCA  25                 	db	37
  2339  00FDCB  64                 	db	100	;'d'
  2340  00FDCC  20                 	db	32
  2341  00FDCD  52                 	db	82	;'R'
  2342  00FDCE  25                 	db	37
  2343  00FDCF  64                 	db	100	;'d'
  2344  00FDD0  20                 	db	32
  2345  00FDD1  20                 	db	32
  2346  00FDD2  20                 	db	32
  2347  00FDD3  20                 	db	32
  2348  00FDD4  20                 	db	32
  2349  00FDD5  20                 	db	32
  2350  00FDD6  00                 	db	0
  2351  00FDD7                     STR_43:
  2352  00FDD7  20                 	db	32
  2353  00FDD8  53                 	db	83	;'S'
  2354  00FDD9  25                 	db	37
  2355  00FDDA  64                 	db	100	;'d'
  2356  00FDDB  46                 	db	70	;'F'
  2357  00FDDC  25                 	db	37
  2358  00FDDD  64                 	db	100	;'d'
  2359  00FDDE  20                 	db	32
  2360  00FDDF  6C                 	db	108	;'l'
  2361  00FDE0  6F                 	db	111	;'o'
  2362  00FDE1  67                 	db	103	;'g'
  2363  00FDE2  20                 	db	32
  2364  00FDE3  20                 	db	32
  2365  00FDE4  20                 	db	32
  2366  00FDE5  20                 	db	32
  2367  00FDE6  25                 	db	37
  2368  00FDE7  64                 	db	100	;'d'
  2369  00FDE8  20                 	db	32
  2370  00FDE9  20                 	db	32
  2371  00FDEA  20                 	db	32
  2372  00FDEB  20                 	db	32
  2373  00FDEC  00                 	db	0
  2374  00FDED                     STR_54:
  2375  00FDED  20                 	db	32
  2376  00FDEE  53                 	db	83	;'S'
  2377  00FDEF  45                 	db	69	;'E'
  2378  00FDF0  51                 	db	81	;'Q'
  2379  00FDF1  55                 	db	85	;'U'
  2380  00FDF2  45                 	db	69	;'E'
  2381  00FDF3  4E                 	db	78	;'N'
  2382  00FDF4  43                 	db	67	;'C'
  2383  00FDF5  45                 	db	69	;'E'
  2384  00FDF6  20                 	db	32
  2385  00FDF7  25                 	db	37
  2386  00FDF8  64                 	db	100	;'d'
  2387  00FDF9  20                 	db	32
  2388  00FDFA  20                 	db	32
  2389  00FDFB  20                 	db	32
  2390  00FDFC  20                 	db	32
  2391  00FDFD  20                 	db	32
  2392  00FDFE  20                 	db	32
  2393  00FDFF  20                 	db	32
  2394  00FE00  20                 	db	32
  2395  00FE01  00                 	db	0
  2396  00FE02                     STR_34:
  2397  00FE02  53                 	db	83	;'S'
  2398  00FE03  61                 	db	97	;'a'
  2399  00FE04  76                 	db	118	;'v'
  2400  00FE05  65                 	db	101	;'e'
  2401  00FE06  64                 	db	100	;'d'
  2402  00FE07  20                 	db	32
  2403  00FE08  53                 	db	83	;'S'
  2404  00FE09  25                 	db	37
  2405  00FE0A  64                 	db	100	;'d'
  2406  00FE0B  46                 	db	70	;'F'
  2407  00FE0C  25                 	db	37
  2408  00FE0D  64                 	db	100	;'d'
  2409  00FE0E  20                 	db	32
  2410  00FE0F  25                 	db	37
  2411  00FE10  64                 	db	100	;'d'
  2412  00FE11  20                 	db	32
  2413  00FE12  20                 	db	32
  2414  00FE13  20                 	db	32
  2415  00FE14  20                 	db	32
  2416  00FE15  20                 	db	32
  2417  00FE16  00                 	db	0
  2418  00FE17                     STR_12:
  2419  00FE17  20                 	db	32
  2420  00FE18  53                 	db	83	;'S'
  2421  00FE19  25                 	db	37
  2422  00FE1A  64                 	db	100	;'d'
  2423  00FE1B  46                 	db	70	;'F'
  2424  00FE1C  25                 	db	37
  2425  00FE1D  64                 	db	100	;'d'
  2426  00FE1E  20                 	db	32
  2427  00FE1F  23                 	db	35
  2428  00FE20  20                 	db	32
  2429  00FE21  20                 	db	32
  2430  00FE22  20                 	db	32
  2431  00FE23  20                 	db	32
  2432  00FE24  20                 	db	32
  2433  00FE25  20                 	db	32
  2434  00FE26  20                 	db	32
  2435  00FE27  20                 	db	32
  2436  00FE28  20                 	db	32
  2437  00FE29  20                 	db	32
  2438  00FE2A  20                 	db	32
  2439  00FE2B  00                 	db	0
  2440  00FE2C                     STR_11:
  2441  00FE2C  20                 	db	32
  2442  00FE2D  53                 	db	83	;'S'
  2443  00FE2E  25                 	db	37
  2444  00FE2F  64                 	db	100	;'d'
  2445  00FE30  46                 	db	70	;'F'
  2446  00FE31  25                 	db	37
  2447  00FE32  64                 	db	100	;'d'
  2448  00FE33  20                 	db	32
  2449  00FE34  45                 	db	69	;'E'
  2450  00FE35  72                 	db	114	;'r'
  2451  00FE36  72                 	db	114	;'r'
  2452  00FE37  20                 	db	32
  2453  00FE38  20                 	db	32
  2454  00FE39  20                 	db	32
  2455  00FE3A  20                 	db	32
  2456  00FE3B  20                 	db	32
  2457  00FE3C  20                 	db	32
  2458  00FE3D  20                 	db	32
  2459  00FE3E  20                 	db	32
  2460  00FE3F  20                 	db	32
  2461  00FE40  00                 	db	0
  2462  00FE41                     STR_23:
  2463  00FE41  45                 	db	69	;'E'
  2464  00FE42  71                 	db	113	;'q'
  2465  00FE43  75                 	db	117	;'u'
  2466  00FE44  69                 	db	105	;'i'
  2467  00FE45  70                 	db	112	;'p'
  2468  00FE46  20                 	db	32
  2469  00FE47  74                 	db	116	;'t'
  2470  00FE48  79                 	db	121	;'y'
  2471  00FE49  70                 	db	112	;'p'
  2472  00FE4A  65                 	db	101	;'e'
  2473  00FE4B  20                 	db	32
  2474  00FE4C  25                 	db	37
  2475  00FE4D  64                 	db	100	;'d'
  2476  00FE4E  20                 	db	32
  2477  00FE4F  20                 	db	32
  2478  00FE50  20                 	db	32
  2479  00FE51  20                 	db	32
  2480  00FE52  20                 	db	32
  2481  00FE53  20                 	db	32
  2482  00FE54  20                 	db	32
  2483  00FE55  00                 	db	0
  2484  00FE56                     STR_16:
  2485  00FE56  48                 	db	72	;'H'
  2486  00FE57  32                 	db	50	;'2'
  2487  00FE58  35                 	db	53	;'5'
  2488  00FE59  34                 	db	52	;'4'
  2489  00FE5A  20                 	db	32
  2490  00FE5B  25                 	db	37
  2491  00FE5C  64                 	db	100	;'d'
  2492  00FE5D  2C                 	db	44
  2493  00FE5E  20                 	db	32
  2494  00FE5F  54                 	db	84	;'T'
  2495  00FE60  25                 	db	37
  2496  00FE61  6C                 	db	108	;'l'
  2497  00FE62  64                 	db	100	;'d'
  2498  00FE63  20                 	db	32
  2499  00FE64  20                 	db	32
  2500  00FE65  20                 	db	32
  2501  00FE66  20                 	db	32
  2502  00FE67  20                 	db	32
  2503  00FE68  20                 	db	32
  2504  00FE69  20                 	db	32
  2505  00FE6A  00                 	db	0
  2506  00FE6B                     STR_10:
  2507  00FE6B  48                 	db	72	;'H'
  2508  00FE6C  4F                 	db	79	;'O'
  2509  00FE6D  53                 	db	83	;'S'
  2510  00FE6E  54                 	db	84	;'T'
  2511  00FE6F  3A                 	db	58	;':'
  2512  00FE70  20                 	db	32
  2513  00FE71  25                 	db	37
  2514  00FE72  6C                 	db	108	;'l'
  2515  00FE73  64                 	db	100	;'d'
  2516  00FE74  20                 	db	32
  2517  00FE75  47                 	db	71	;'G'
  2518  00FE76  25                 	db	37
  2519  00FE77  64                 	db	100	;'d'
  2520  00FE78  20                 	db	32
  2521  00FE79  20                 	db	32
  2522  00FE7A  20                 	db	32
  2523  00FE7B  20                 	db	32
  2524  00FE7C  20                 	db	32
  2525  00FE7D  20                 	db	32
  2526  00FE7E  23                 	db	35
  2527  00FE7F  00                 	db	0
  2528  00FE80                     STR_46:
  2529  00FE80  20                 	db	32
  2530  00FE81  53                 	db	83	;'S'
  2531  00FE82  32                 	db	50	;'2'
  2532  00FE83  46                 	db	70	;'F'
  2533  00FE84  34                 	db	52	;'4'
  2534  00FE85  31                 	db	49	;'1'
  2535  00FE86  20                 	db	32
  2536  00FE87  23                 	db	35
  2537  00FE88  25                 	db	37
  2538  00FE89  63                 	db	99	;'c'
  2539  00FE8A  20                 	db	32
  2540  00FE8B  20                 	db	32
  2541  00FE8C  20                 	db	32
  2542  00FE8D  20                 	db	32
  2543  00FE8E  20                 	db	32
  2544  00FE8F  20                 	db	32
  2545  00FE90  20                 	db	32
  2546  00FE91  20                 	db	32
  2547  00FE92  20                 	db	32
  2548  00FE93  00                 	db	0
  2549  00FE94                     STR_44:
  2550  00FE94  20                 	db	32
  2551  00FE95  53                 	db	83	;'S'
  2552  00FE96  74                 	db	116	;'t'
  2553  00FE97  6F                 	db	111	;'o'
  2554  00FE98  72                 	db	114	;'r'
  2555  00FE99  65                 	db	101	;'e'
  2556  00FE9A  64                 	db	100	;'d'
  2557  00FE9B  20                 	db	32
  2558  00FE9C  23                 	db	35
  2559  00FE9D  25                 	db	37
  2560  00FE9E  64                 	db	100	;'d'
  2561  00FE9F  20                 	db	32
  2562  00FEA0  20                 	db	32
  2563  00FEA1  20                 	db	32
  2564  00FEA2  20                 	db	32
  2565  00FEA3  20                 	db	32
  2566  00FEA4  20                 	db	32
  2567  00FEA5  20                 	db	32
  2568  00FEA6  20                 	db	32
  2569  00FEA7  00                 	db	0
  2570  00FEA8                     STR_31:
  2571  00FEA8  20                 	db	32
  2572  00FEA9  54                 	db	84	;'T'
  2573  00FEAA  65                 	db	101	;'e'
  2574  00FEAB  72                 	db	114	;'r'
  2575  00FEAC  6D                 	db	109	;'m'
  2576  00FEAD  69                 	db	105	;'i'
  2577  00FEAE  6E                 	db	110	;'n'
  2578  00FEAF  61                 	db	97	;'a'
  2579  00FEB0  6C                 	db	108	;'l'
  2580  00FEB1  20                 	db	32
  2581  00FEB2  20                 	db	32
  2582  00FEB3  20                 	db	32
  2583  00FEB4  20                 	db	32
  2584  00FEB5  20                 	db	32
  2585  00FEB6  20                 	db	32
  2586  00FEB7  20                 	db	32
  2587  00FEB8  20                 	db	32
  2588  00FEB9  20                 	db	32
  2589  00FEBA  20                 	db	32
  2590  00FEBB  00                 	db	0
  2591  00FEBC                     STR_18:
  2592  00FEBC  50                 	db	80	;'P'
  2593  00FEBD  69                 	db	105	;'i'
  2594  00FEBE  6E                 	db	110	;'n'
  2595  00FEBF  67                 	db	103	;'g'
  2596  00FEC0  20                 	db	32
  2597  00FEC1  50                 	db	80	;'P'
  2598  00FEC2  25                 	db	37
  2599  00FEC3  64                 	db	100	;'d'
  2600  00FEC4  20                 	db	32
  2601  00FEC5  52                 	db	82	;'R'
  2602  00FEC6  54                 	db	84	;'T'
  2603  00FEC7  4F                 	db	79	;'O'
  2604  00FEC8  20                 	db	32
  2605  00FEC9  25                 	db	37
  2606  00FECA  64                 	db	100	;'d'
  2607  00FECB  20                 	db	32
  2608  00FECC  20                 	db	32
  2609  00FECD  20                 	db	32
  2610  00FECE  20                 	db	32
  2611  00FECF  00                 	db	0
  2612  00FED0                     STR_37:
  2613  00FED0  48                 	db	72	;'H'
  2614  00FED1  45                 	db	69	;'E'
  2615  00FED2  4C                 	db	76	;'L'
  2616  00FED3  50                 	db	80	;'P'
  2617  00FED4  20                 	db	32
  2618  00FED5  25                 	db	37
  2619  00FED6  73                 	db	115	;'s'
  2620  00FED7  20                 	db	32
  2621  00FED8  20                 	db	32
  2622  00FED9  20                 	db	32
  2623  00FEDA  20                 	db	32
  2624  00FEDB  20                 	db	32
  2625  00FEDC  20                 	db	32
  2626  00FEDD  20                 	db	32
  2627  00FEDE  20                 	db	32
  2628  00FEDF  20                 	db	32
  2629  00FEE0  20                 	db	32
  2630  00FEE1  20                 	db	32
  2631  00FEE2  00                 	db	0
  2632  00FEE3                     STR_52:
  2633  00FEE3  44                 	db	68	;'D'
  2634  00FEE4  49                 	db	73	;'I'
  2635  00FEE5  53                 	db	83	;'S'
  2636  00FEE6  50                 	db	80	;'P'
  2637  00FEE7  4C                 	db	76	;'L'
  2638  00FEE8  41                 	db	65	;'A'
  2639  00FEE9  59                 	db	89	;'Y'
  2640  00FEEA  20                 	db	32
  2641  00FEEB  25                 	db	37
  2642  00FEEC  73                 	db	115	;'s'
  2643  00FEED  20                 	db	32
  2644  00FEEE  20                 	db	32
  2645  00FEEF  20                 	db	32
  2646  00FEF0  20                 	db	32
  2647  00FEF1  20                 	db	32
  2648  00FEF2  20                 	db	32
  2649  00FEF3  20                 	db	32
  2650  00FEF4  20                 	db	32
  2651  00FEF5  00                 	db	0
  2652  00FEF6                     STR_21:
  2653  00FEF6  53                 	db	83	;'S'
  2654  00FEF7  25                 	db	37
  2655  00FEF8  64                 	db	100	;'d'
  2656  00FEF9  46                 	db	70	;'F'
  2657  00FEFA  25                 	db	37
  2658  00FEFB  64                 	db	100	;'d'
  2659  00FEFC  20                 	db	32
  2660  00FEFD  23                 	db	35
  2661  00FEFE  25                 	db	37
  2662  00FEFF  6C                 	db	108	;'l'
  2663  00FF00  64                 	db	100	;'d'
  2664  00FF01  20                 	db	32
  2665  00FF02  20                 	db	32
  2666  00FF03  20                 	db	32
  2667  00FF04  20                 	db	32
  2668  00FF05  20                 	db	32
  2669  00FF06  20                 	db	32
  2670  00FF07  20                 	db	32
  2671  00FF08  00                 	db	0
  2672  00FF09                     STR_49:
  2673  00FF09  20                 	db	32
  2674  00FF0A  4F                 	db	79	;'O'
  2675  00FF0B  70                 	db	112	;'p'
  2676  00FF0C  65                 	db	101	;'e'
  2677  00FF0D  6E                 	db	110	;'n'
  2678  00FF0E  20                 	db	32
  2679  00FF0F  4C                 	db	76	;'L'
  2680  00FF10  4C                 	db	76	;'L'
  2681  00FF11  20                 	db	32
  2682  00FF12  20                 	db	32
  2683  00FF13  20                 	db	32
  2684  00FF14  20                 	db	32
  2685  00FF15  20                 	db	32
  2686  00FF16  20                 	db	32
  2687  00FF17  20                 	db	32
  2688  00FF18  20                 	db	32
  2689  00FF19  20                 	db	32
  2690  00FF1A  00                 	db	0
  2691  00FF1B                     STR_47:
  2692  00FF1B  20                 	db	32
  2693  00FF1C  50                 	db	80	;'P'
  2694  00FF1D  75                 	db	117	;'u'
  2695  00FF1E  6D                 	db	109	;'m'
  2696  00FF1F  70                 	db	112	;'p'
  2697  00FF20  20                 	db	32
  2698  00FF21  4C                 	db	76	;'L'
  2699  00FF22  4C                 	db	76	;'L'
  2700  00FF23  20                 	db	32
  2701  00FF24  20                 	db	32
  2702  00FF25  20                 	db	32
  2703  00FF26  20                 	db	32
  2704  00FF27  20                 	db	32
  2705  00FF28  20                 	db	32
  2706  00FF29  20                 	db	32
  2707  00FF2A  20                 	db	32
  2708  00FF2B  20                 	db	32
  2709  00FF2C  00                 	db	0
  2710  00FF2D                     STR_45:
  2711  00FF2D  20                 	db	32
  2712  00FF2E  52                 	db	82	;'R'
  2713  00FF2F  65                 	db	101	;'e'
  2714  00FF30  61                 	db	97	;'a'
  2715  00FF31  64                 	db	100	;'d'
  2716  00FF32  79                 	db	121	;'y'
  2717  00FF33  20                 	db	32
  2718  00FF34  4C                 	db	76	;'L'
  2719  00FF35  4C                 	db	76	;'L'
  2720  00FF36  20                 	db	32
  2721  00FF37  20                 	db	32
  2722  00FF38  20                 	db	32
  2723  00FF39  20                 	db	32
  2724  00FF3A  20                 	db	32
  2725  00FF3B  20                 	db	32
  2726  00FF3C  20                 	db	32
  2727  00FF3D  20                 	db	32
  2728  00FF3E  00                 	db	0
  2729  00FF3F                     STR_15:
  2730  00FF3F  45                 	db	69	;'E'
  2731  00FF40  25                 	db	37
  2732  00FF41  64                 	db	100	;'d'
  2733  00FF42  20                 	db	32
  2734  00FF43  41                 	db	65	;'A'
  2735  00FF44  25                 	db	37
  2736  00FF45  64                 	db	100	;'d'
  2737  00FF46  20                 	db	32
  2738  00FF47  54                 	db	84	;'T'
  2739  00FF48  25                 	db	37
  2740  00FF49  64                 	db	100	;'d'
  2741  00FF4A  20                 	db	32
  2742  00FF4B  47                 	db	71	;'G'
  2743  00FF4C  25                 	db	37
  2744  00FF4D  64                 	db	100	;'d'
  2745  00FF4E  20                 	db	32
  2746  00FF4F  23                 	db	35
  2747  00FF50  00                 	db	0
  2748  00FF51                     STR_8:
  2749  00FF51  20                 	db	32
  2750  00FF52  56                 	db	86	;'V'
  2751  00FF53  54                 	db	84	;'T'
  2752  00FF54  45                 	db	69	;'E'
  2753  00FF55  52                 	db	82	;'R'
  2754  00FF56  4D                 	db	77	;'M'
  2755  00FF57  20                 	db	32
  2756  00FF58  23                 	db	35
  2757  00FF59  32                 	db	50	;'2'
  2758  00FF5A  20                 	db	32
  2759  00FF5B  20                 	db	32
  2760  00FF5C  20                 	db	32
  2761  00FF5D  20                 	db	32
  2762  00FF5E  20                 	db	32
  2763  00FF5F  20                 	db	32
  2764  00FF60  20                 	db	32
  2765  00FF61  00                 	db	0
  2766  00FF62                     STR_4:
  2767  00FF62  20                 	db	32
  2768  00FF63  46                 	db	70	;'F'
  2769  00FF64  47                 	db	71	;'G'
  2770  00FF65  42                 	db	66	;'B'
  2771  00FF66  40                 	db	64	;'@'
  2772  00FF67  4D                 	db	77	;'M'
  2773  00FF68  43                 	db	67	;'C'
  2774  00FF69  48                 	db	72	;'H'
  2775  00FF6A  50                 	db	80	;'P'
  2776  00FF6B  20                 	db	32
  2777  00FF6C  46                 	db	70	;'F'
  2778  00FF6D  41                 	db	65	;'A'
  2779  00FF6E  42                 	db	66	;'B'
  2780  00FF6F  34                 	db	52	;'4'
  2781  00FF70  20                 	db	32
  2782  00FF71  20                 	db	32
  2783  00FF72  00                 	db	0
  2784  00FF73                     STR_5:
  2785  00FF73  20                 	db	32
  2786  00FF74  53                 	db	83	;'S'
  2787  00FF75  45                 	db	69	;'E'
  2788  00FF76  51                 	db	81	;'Q'
  2789  00FF77  55                 	db	85	;'U'
  2790  00FF78  45                 	db	69	;'E'
  2791  00FF79  4E                 	db	78	;'N'
  2792  00FF7A  43                 	db	67	;'C'
  2793  00FF7B  45                 	db	69	;'E'
  2794  00FF7C  20                 	db	32
  2795  00FF7D  54                 	db	84	;'T'
  2796  00FF7E  45                 	db	69	;'E'
  2797  00FF7F  53                 	db	83	;'S'
  2798  00FF80  54                 	db	84	;'T'
  2799  00FF81  20                 	db	32
  2800  00FF82  20                 	db	32
  2801  00FF83  00                 	db	0
  2802  00FF84                     STR_1:
  2803  00FF84  20                 	db	32
  2804  00FF85  52                 	db	82	;'R'
  2805  00FF86  56                 	db	86	;'V'
  2806  00FF87  49                 	db	73	;'I'
  2807  00FF88  20                 	db	32
  2808  00FF89  48                 	db	72	;'H'
  2809  00FF8A  4F                 	db	79	;'O'
  2810  00FF8B  53                 	db	83	;'S'
  2811  00FF8C  54                 	db	84	;'T'
  2812  00FF8D  20                 	db	32
  2813  00FF8E  54                 	db	84	;'T'
  2814  00FF8F  45                 	db	69	;'E'
  2815  00FF90  53                 	db	83	;'S'
  2816  00FF91  54                 	db	84	;'T'
  2817  00FF92  45                 	db	69	;'E'
  2818  00FF93  52                 	db	82	;'R'
  2819  00FF94  00                 	db	0
  2820  00FF95                     STR_9:
  2821  00FF95  48                 	db	72	;'H'
  2822  00FF96  32                 	db	50	;'2'
  2823  00FF97  35                 	db	53	;'5'
  2824  00FF98  34                 	db	52	;'4'
  2825  00FF99  20                 	db	32
  2826  00FF9A  25                 	db	37
  2827  00FF9B  64                 	db	100	;'d'
  2828  00FF9C  2C                 	db	44
  2829  00FF9D  20                 	db	32
  2830  00FF9E  54                 	db	84	;'T'
  2831  00FF9F  25                 	db	37
  2832  00FFA0  6C                 	db	108	;'l'
  2833  00FFA1  64                 	db	100	;'d'
  2834  00FFA2  20                 	db	32
  2835  00FFA3  20                 	db	32
  2836  00FFA4  00                 	db	0
  2837  00FFA5                     STR_40:
  2838  00FFA5  76                 	db	118	;'v'
  2839  00FFA6  74                 	db	116	;'t'
  2840  00FFA7  65                 	db	101	;'e'
  2841  00FFA8  72                 	db	114	;'r'
  2842  00FFA9  6D                 	db	109	;'m'
  2843  00FFAA  20                 	db	32
  2844  00FFAB  25                 	db	37
  2845  00FFAC  78                 	db	120	;'x'
  2846  00FFAD  3A                 	db	58	;':'
  2847  00FFAE  25                 	db	37
  2848  00FFAF  78                 	db	120	;'x'
  2849  00FFB0  20                 	db	32
  2850  00FFB1  20                 	db	32
  2851  00FFB2  20                 	db	32
  2852  00FFB3  00                 	db	0
  2853  00FFB4                     STR_2:
  2854  00FFB4  20                 	db	32
  2855  00FFB5  56                 	db	86	;'V'
  2856  00FFB6  65                 	db	101	;'e'
  2857  00FFB7  72                 	db	114	;'r'
  2858  00FFB8  73                 	db	115	;'s'
  2859  00FFB9  69                 	db	105	;'i'
  2860  00FFBA  6F                 	db	111	;'o'
  2861  00FFBB  6E                 	db	110	;'n'
  2862  00FFBC  20                 	db	32
  2863  00FFBD  25                 	db	37
  2864  00FFBE  73                 	db	115	;'s'
  2865  00FFBF  20                 	db	32
  2866  00FFC0  20                 	db	32
  2867  00FFC1  20                 	db	32
  2868  00FFC2  00                 	db	0
  2869  00FFC3                     STR_35:
  2870  00FFC3  4A                 	db	74	;'J'
  2871  00FFC4  75                 	db	117	;'u'
  2872  00FFC5  6C                 	db	108	;'l'
  2873  00FFC6  20                 	db	32
  2874  00FFC7  20                 	db	32
  2875  00FFC8  36                 	db	54	;'6'
  2876  00FFC9  20                 	db	32
  2877  00FFCA  32                 	db	50	;'2'
  2878  00FFCB  30                 	db	48	;'0'
  2879  00FFCC  31                 	db	49	;'1'
  2880  00FFCD  39                 	db	57	;'9'
  2881  00FFCE  00                 	db	0
  2882  00FFCF                     STR_38:
  2883  00FFCF  25                 	db	37
  2884  00FFD0  73                 	db	115	;'s'
  2885  00FFD1  20                 	db	32
  2886  00FFD2  20                 	db	32
  2887  00FFD3  20                 	db	32
  2888  00FFD4  20                 	db	32
  2889  00FFD5  20                 	db	32
  2890  00FFD6  20                 	db	32
  2891  00FFD7  20                 	db	32
  2892  00FFD8  00                 	db	0
  2893  00FFD9                     STR_36:
  2894  00FFD9  31                 	db	49	;'1'
  2895  00FFDA  36                 	db	54	;'6'
  2896  00FFDB  3A                 	db	58	;':'
  2897  00FFDC  34                 	db	52	;'4'
  2898  00FFDD  35                 	db	53	;'5'
  2899  00FFDE  3A                 	db	58	;':'
  2900  00FFDF  30                 	db	48	;'0'
  2901  00FFE0  35                 	db	53	;'5'
  2902  00FFE1  00                 	db	0
  2903  00FFE2                     STR_3:
  2904  00FFE2  31                 	db	49	;'1'
  2905  00FFE3  2E                 	db	46
  2906  00FFE4  35                 	db	53	;'5'
  2907  00FFE5  32                 	db	50	;'2'
  2908  00FFE6  47                 	db	71	;'G'
  2909  00FFE7  00                 	db	0
  2910  00FFE8                     STR_22:
  2911  00FFE8  4F                 	db	79	;'O'
  2912  00FFE9  4B                 	db	75	;'K'
  2913  00FFEA  20                 	db	32
  2914  00FFEB  00                 	db	0
  2915  00FFEC                     STR_76:
  2916  00FFEC  6C                 	db	108	;'l'
  2917  00FFED  58                 	db	88	;'X'
  2918  00FFEE  00                 	db	0
  2919  00FFEF                     STR_63:
  2920  00FFEF  6C                 	db	108	;'l'
  2921  00FFF0  64                 	db	100	;'d'
  2922  00FFF1  00                 	db	0
  2923  00FFF2                     STR_67:
  2924  00FFF2  6C                 	db	108	;'l'
  2925  00FFF3  69                 	db	105	;'i'
  2926  00FFF4  00                 	db	0
  2927  00FFF5                     STR_72:
  2928  00FFF5  6C                 	db	108	;'l'
  2929  00FFF6  78                 	db	120	;'x'
  2930  00FFF7  00                 	db	0
  2931  00FFF8                     STR_27:
  2932  00FFF8  25                 	db	37
  2933  00FFF9  63                 	db	99	;'c'
  2934  00FFFA  00                 	db	0
  2935  00FFFB                     STR_26:
  2936  00FFFB  25                 	db	37
  2937  00FFFC  73                 	db	115	;'s'
  2938  00FFFD  00                 	db	0
  2939  0000                     
  2940                           ; #config settings
  2941  00FFFE  00                 	db	0	; dummy byte at the end
  2942  0000                     
  2943                           	psect	cinit
  2944  014B44                     __pcinit:
  2945                           	opt callstack 0
  2946  014B44                     start_initialization:
  2947                           	opt callstack 0
  2948  014B44                     __initialization:
  2949                           	opt callstack 0
  2950                           
  2951                           ; Initialize objects allocated to BIGRAM (641 bytes)
  2952                           ; load TBLPTR registers with __pidataBIGRAM
  2953  014B44  0EBC               	movlw	low __pidataBIGRAM
  2954  014B46  6EF6               	movwf	tblptrl,c
  2955  014B48  0E3B               	movlw	high __pidataBIGRAM
  2956  014B4A  6EF7               	movwf	tblptrh,c
  2957  014B4C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2958  014B4E  6EF8               	movwf	tblptru,c
  2959  014B50  EE02  F2CE         	lfsr	0,__pdataBIGRAM
  2960  014B54  EE20 F281          	lfsr	2,641
  2961  014B58                     copy_data0:
  2962  014B58  0009               	tblrd		*+
  2963  014B5A  006F FFD7 FFEE     	movff	tablat,postinc0
  2964  014B60  50DD               	movf	postdec2,w,c
  2965  014B62  50D9               	movf	fsr2l,w,c
  2966  014B64  E1F9               	bnz	copy_data0
  2967  014B66  50DA               	movf	fsr2h,w,c
  2968  014B68  E1F7               	bnz	copy_data0
  2969                           
  2970                           ; Initialize objects allocated to BANK6 (256 bytes)
  2971                           ; load TBLPTR registers with __pidataBANK6
  2972  014B6A  0E30               	movlw	low __pidataBANK6
  2973  014B6C  6EF6               	movwf	tblptrl,c
  2974  014B6E  0E57               	movlw	high __pidataBANK6
  2975  014B70  6EF7               	movwf	tblptrh,c
  2976  014B72  0E01               	movlw	low (__pidataBANK6 shr (0+16))
  2977  014B74  6EF8               	movwf	tblptru,c
  2978  014B76  EE01  F200         	lfsr	0,__pdataBANK6
  2979  014B7A  EE20 F100          	lfsr	2,256
  2980  014B7E                     copy_data1:
  2981  014B7E  0009               	tblrd		*+
  2982  014B80  006F FFD7 FFEE     	movff	tablat,postinc0
  2983  014B86  50DD               	movf	postdec2,w,c
  2984  014B88  50D9               	movf	fsr2l,w,c
  2985  014B8A  E1F9               	bnz	copy_data1
  2986  014B8C  50DA               	movf	fsr2h,w,c
  2987  014B8E  E1F7               	bnz	copy_data1
  2988                           
  2989                           ; Initialize objects allocated to BANK3 (112 bytes)
  2990                           ; load TBLPTR registers with __pidataBANK3
  2991  014B90  0E28               	movlw	low __pidataBANK3
  2992  014B92  6EF6               	movwf	tblptrl,c
  2993  014B94  0E62               	movlw	high __pidataBANK3
  2994  014B96  6EF7               	movwf	tblptrh,c
  2995  014B98  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  2996  014B9A  6EF8               	movwf	tblptru,c
  2997  014B9C  EE00  F300         	lfsr	0,__pdataBANK3
  2998  014BA0  EE20 F070          	lfsr	2,112
  2999  014BA4                     copy_data2:
  3000  014BA4  0009               	tblrd		*+
  3001  014BA6  006F FFD7 FFEE     	movff	tablat,postinc0
  3002  014BAC  50DD               	movf	postdec2,w,c
  3003  014BAE  50D9               	movf	fsr2l,w,c
  3004  014BB0  E1F9               	bnz	copy_data2
  3005                           
  3006                           ; Initialize objects allocated to BANK2 (59 bytes)
  3007                           ; load TBLPTR registers with __pidataBANK2
  3008  014BB2  0E88               	movlw	low __pidataBANK2
  3009  014BB4  6EF6               	movwf	tblptrl,c
  3010  014BB6  0E6A               	movlw	high __pidataBANK2
  3011  014BB8  6EF7               	movwf	tblptrh,c
  3012  014BBA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3013  014BBC  6EF8               	movwf	tblptru,c
  3014  014BBE  EE00  F2C3         	lfsr	0,__pdataBANK2
  3015  014BC2  EE20 F03B          	lfsr	2,59
  3016  014BC6                     copy_data3:
  3017  014BC6  0009               	tblrd		*+
  3018  014BC8  006F FFD7 FFEE     	movff	tablat,postinc0
  3019  014BCE  50DD               	movf	postdec2,w,c
  3020  014BD0  50D9               	movf	fsr2l,w,c
  3021  014BD2  E1F9               	bnz	copy_data3
  3022                           
  3023                           ; Initialize objects allocated to BANK1 (208 bytes)
  3024                           ; load TBLPTR registers with __pidataBANK1
  3025  014BD4  0EF2               	movlw	low __pidataBANK1
  3026  014BD6  6EF6               	movwf	tblptrl,c
  3027  014BD8  0E5A               	movlw	high __pidataBANK1
  3028  014BDA  6EF7               	movwf	tblptrh,c
  3029  014BDC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3030  014BDE  6EF8               	movwf	tblptru,c
  3031  014BE0  EE00  F100         	lfsr	0,__pdataBANK1
  3032  014BE4  EE20 F0D0          	lfsr	2,208
  3033  014BE8                     copy_data4:
  3034  014BE8  0009               	tblrd		*+
  3035  014BEA  006F FFD7 FFEE     	movff	tablat,postinc0
  3036  014BF0  50DD               	movf	postdec2,w,c
  3037  014BF2  50D9               	movf	fsr2l,w,c
  3038  014BF4  E1F9               	bnz	copy_data4
  3039                           
  3040                           ; Initialize objects allocated to BANK0 (43 bytes)
  3041                           ; load TBLPTR registers with __pidataBANK0
  3042  014BF6  0E78               	movlw	low __pidataBANK0
  3043  014BF8  6EF6               	movwf	tblptrl,c
  3044  014BFA  0E6C               	movlw	high __pidataBANK0
  3045  014BFC  6EF7               	movwf	tblptrh,c
  3046  014BFE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3047  014C00  6EF8               	movwf	tblptru,c
  3048  014C02  EE00  F0B5         	lfsr	0,__pdataBANK0
  3049  014C06  EE20 F02B          	lfsr	2,43
  3050  014C0A                     copy_data5:
  3051  014C0A  0009               	tblrd		*+
  3052  014C0C  006F FFD7 FFEE     	movff	tablat,postinc0
  3053  014C12  50DD               	movf	postdec2,w,c
  3054  014C14  50D9               	movf	fsr2l,w,c
  3055  014C16  E1F9               	bnz	copy_data5
  3056                           
  3057                           ; Initialize objects allocated to COMRAM (5 bytes)
  3058                           ; load TBLPTR registers with __pidataCOMRAM
  3059  014C18  0E7E               	movlw	low __pidataCOMRAM
  3060  014C1A  6EF6               	movwf	tblptrl,c
  3061  014C1C  0E73               	movlw	high __pidataCOMRAM
  3062  014C1E  6EF7               	movwf	tblptrh,c
  3063  014C20  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  3064  014C22  6EF8               	movwf	tblptru,c
  3065  014C24  EE00  F058         	lfsr	0,__pdataCOMRAM
  3066  014C28  EE20 F005          	lfsr	2,5
  3067  014C2C                     copy_data6:
  3068  014C2C  0009               	tblrd		*+
  3069  014C2E  006F FFD7 FFEE     	movff	tablat,postinc0
  3070  014C34  50DD               	movf	postdec2,w,c
  3071  014C36  50D9               	movf	fsr2l,w,c
  3072  014C38  E1F9               	bnz	copy_data6
  3073                           
  3074                           ; Clear objects allocated to BIGRAM (974 bytes)
  3075  014C3A  EE01  F300         	lfsr	0,__pbssBIGRAM
  3076  014C3E  EE20 F3CE          	lfsr	2,974
  3077  014C42                     clear_0:
  3078  014C42  6AEE               	clrf	postinc0,c
  3079  014C44  50DD               	movf	postdec2,w,c
  3080  014C46  50D9               	movf	fsr2l,w,c
  3081  014C48  E1FC               	bnz	clear_0
  3082  014C4A  50DA               	movf	fsr2h,w,c
  3083  014C4C  E1FA               	bnz	clear_0
  3084                           
  3085                           ; Clear objects allocated to BANK5 (255 bytes)
  3086  014C4E  EE01  F100         	lfsr	0,__pbssBANK5
  3087  014C52  EE20 F0FF          	lfsr	2,255
  3088  014C56                     clear_1:
  3089  014C56  6AEE               	clrf	postinc0,c
  3090  014C58  50DD               	movf	postdec2,w,c
  3091  014C5A  50D9               	movf	fsr2l,w,c
  3092  014C5C  E1FC               	bnz	clear_1
  3093  014C5E  50DA               	movf	fsr2h,w,c
  3094  014C60  E1FA               	bnz	clear_1
  3095                           
  3096                           ; Clear objects allocated to BANK4 (255 bytes)
  3097  014C62  EE01  F000         	lfsr	0,__pbssBANK4
  3098  014C66  EE20 F0FF          	lfsr	2,255
  3099  014C6A                     clear_2:
  3100  014C6A  6AEE               	clrf	postinc0,c
  3101  014C6C  50DD               	movf	postdec2,w,c
  3102  014C6E  50D9               	movf	fsr2l,w,c
  3103  014C70  E1FC               	bnz	clear_2
  3104  014C72  50DA               	movf	fsr2h,w,c
  3105  014C74  E1FA               	bnz	clear_2
  3106                           
  3107                           ; Clear objects allocated to BANK3 (67 bytes)
  3108  014C76  EE00  F370         	lfsr	0,__pbssBANK3
  3109  014C7A  0E43               	movlw	67
  3110  014C7C                     clear_3:
  3111  014C7C  6AEE               	clrf	postinc0,c
  3112  014C7E  06E8               	decf	wreg,f,c
  3113  014C80  E1FD               	bnz	clear_3
  3114                           
  3115                           ; Clear objects allocated to BANK2 (195 bytes)
  3116  014C82  EE00  F200         	lfsr	0,__pbssBANK2
  3117  014C86  0EC3               	movlw	195
  3118  014C88                     clear_4:
  3119  014C88  6AEE               	clrf	postinc0,c
  3120  014C8A  06E8               	decf	wreg,f,c
  3121  014C8C  E1FD               	bnz	clear_4
  3122                           
  3123                           ; Clear objects allocated to BANK1 (32 bytes)
  3124  014C8E  EE00  F1D0         	lfsr	0,__pbssBANK1
  3125  014C92  0E20               	movlw	32
  3126  014C94                     clear_5:
  3127  014C94  6AEE               	clrf	postinc0,c
  3128  014C96  06E8               	decf	wreg,f,c
  3129  014C98  E1FD               	bnz	clear_5
  3130                           
  3131                           ; Clear objects allocated to BANK0 (85 bytes)
  3132  014C9A  EE00  F060         	lfsr	0,__pbssBANK0
  3133  014C9E  0E55               	movlw	85
  3134  014CA0                     clear_6:
  3135  014CA0  6AEE               	clrf	postinc0,c
  3136  014CA2  06E8               	decf	wreg,f,c
  3137  014CA4  E1FD               	bnz	clear_6
  3138                           
  3139                           ; Clear objects allocated to COMRAM (55 bytes)
  3140  014CA6  EE00  F001         	lfsr	0,__pbssCOMRAM
  3141  014CAA  0E37               	movlw	55
  3142  014CAC                     clear_7:
  3143  014CAC  6AEE               	clrf	postinc0,c
  3144  014CAE  06E8               	decf	wreg,f,c
  3145  014CB0  E1FD               	bnz	clear_7
  3146                           
  3147                           ;
  3148                           ; Setup IVTBASE
  3149                           ;
  3150  014CB2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3151  014CB4  6ED5               	movwf	213,c
  3152  014CB6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3153  014CB8  6ED6               	movwf	214,c
  3154  014CBA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3155  014CBC  6ED7               	movwf	215,c
  3156  014CBE                     end_of_initialization:
  3157                           	opt callstack 0
  3158  014CBE                     __end_of__initialization:
  3159                           	opt callstack 0
  3160  014CBE  0100               	movlb	0
  3161  014CC0  EF00  F080         	goto	_main	;jump to C main() function
  3162                           
  3163                           	psect	bssCOMRAM
  3164  000001                     __pbssCOMRAM:
  3165                           	opt callstack 0
  3166  000001                     _UART2_TxInterruptHandler:
  3167                           	opt callstack 0
  3168  000001                     	ds	3
  3169  000004                     _UART2_RxInterruptHandler:
  3170                           	opt callstack 0
  3171  000004                     	ds	3
  3172  000007                     _INT2_InterruptHandler:
  3173                           	opt callstack 0
  3174  000007                     	ds	3
  3175  00000A                     _INT1_InterruptHandler:
  3176                           	opt callstack 0
  3177  00000A                     	ds	3
  3178  00000D                     _INT0_InterruptHandler:
  3179                           	opt callstack 0
  3180  00000D                     	ds	3
  3181  000010                     _width:
  3182                           	opt callstack 0
  3183  000010                     	ds	2
  3184  000012                     _prec:
  3185                           	opt callstack 0
  3186  000012                     	ds	2
  3187  000014                     _flags:
  3188                           	opt callstack 0
  3189  000014                     	ds	2
  3190  000016                     r_protocol@b_block:
  3191                           	opt callstack 0
  3192  000016                     	ds	2
  3193  000018                     run_checksum@sum:
  3194                           	opt callstack 0
  3195  000018                     	ds	2
  3196  00001A                     TMR5_ISR@CountCallBack:
  3197                           	opt callstack 0
  3198  00001A                     	ds	2
  3199  00001C                     _timer5ReloadVal:
  3200                           	opt callstack 0
  3201  00001C                     	ds	2
  3202  00001E                     secs_gem_state@equipment:
  3203                           	opt callstack 0
  3204  00001E                     	ds	1
  3205  00001F                     secs_gem_state@block:
  3206                           	opt callstack 0
  3207  00001F                     	ds	1
  3208  000020                     t_protocol@requeue:
  3209                           	opt callstack 0
  3210  000020                     	ds	1
  3211  000021                     t_protocol@retry:
  3212                           	opt callstack 0
  3213  000021                     	ds	1
  3214  000022                     r_protocol@rxData_l:
  3215                           	opt callstack 0
  3216  000022                     	ds	1
  3217  000023                     m_protocol@rxData_l:
  3218                           	opt callstack 0
  3219  000023                     	ds	1
  3220  000024                     _mode_sw:
  3221                           	opt callstack 0
  3222  000024                     	ds	1
  3223  000025                     _uart2RxCount:
  3224                           	opt callstack 0
  3225  000025                     	ds	1
  3226  000026                     _uart2RxTail:
  3227                           	opt callstack 0
  3228  000026                     	ds	1
  3229  000027                     _uart2RxHead:
  3230                           	opt callstack 0
  3231  000027                     	ds	1
  3232  000028                     _uart2TxBufferRemaining:
  3233                           	opt callstack 0
  3234  000028                     	ds	1
  3235  000029                     _uart2TxTail:
  3236                           	opt callstack 0
  3237  000029                     	ds	1
  3238  00002A                     _uart2TxHead:
  3239                           	opt callstack 0
  3240  00002A                     	ds	1
  3241  00002B                     _uart1RxCount:
  3242                           	opt callstack 0
  3243  00002B                     	ds	1
  3244  00002C                     _uart1RxTail:
  3245                           	opt callstack 0
  3246  00002C                     	ds	1
  3247  00002D                     _uart1RxHead:
  3248                           	opt callstack 0
  3249  00002D                     	ds	1
  3250  00002E                     _uart1TxBufferRemaining:
  3251                           	opt callstack 0
  3252  00002E                     	ds	1
  3253  00002F                     _uart1TxTail:
  3254                           	opt callstack 0
  3255  00002F                     	ds	1
  3256  000030                     _uart1TxHead:
  3257                           	opt callstack 0
  3258  000030                     	ds	1
  3259  000031                     secs_II_message@block:
  3260                           	opt callstack 0
  3261  000031                     	ds	7
  3262                           
  3263                           	psect	dataCOMRAM
  3264  000058                     __pdataCOMRAM:
  3265                           	opt callstack 0
  3266  000058                     secs_II_monitor_message@store6_11:
  3267                           	opt callstack 0
  3268  000058                     	ds	1
  3269  000059                     secs_II_monitor_message@store1_13:
  3270                           	opt callstack 0
  3271  000059                     	ds	1
  3272  00005A                     secs_II_monitor_message@store1_1:
  3273                           	opt callstack 0
  3274  00005A                     	ds	1
  3275  00005B                     r_protocol@d:
  3276                           	opt callstack 0
  3277  00005B                     	ds	1
  3278  00005C                     r_protocol@retry:
  3279                           	opt callstack 0
  3280  00005C                     	ds	1
  3281                           
  3282                           	psect	bssBANK0
  3283  000060                     __pbssBANK0:
  3284                           	opt callstack 0
  3285  000060                     _tickCount:
  3286                           	opt callstack 0
  3287  000060                     	ds	24
  3288  000078                     _r_block:
  3289                           	opt callstack 0
  3290  000078                     	ds	13
  3291  000085                     _spi_link:
  3292                           	opt callstack 0
  3293  000085                     	ds	12
  3294  000091                     t_protocol@block:
  3295                           	opt callstack 0
  3296  000091                     	ds	7
  3297  000098                     wdtdelay@dcount:
  3298                           	opt callstack 0
  3299  000098                     	ds	4
  3300  00009C                     _TMR5_InterruptHandler:
  3301                           	opt callstack 0
  3302  00009C                     	ds	3
  3303  00009F                     _TMR6_InterruptHandler:
  3304                           	opt callstack 0
  3305  00009F                     	ds	3
  3306  0000A2                     _ADCC_ADI_InterruptHandler:
  3307                           	opt callstack 0
  3308  0000A2                     	ds	3
  3309  0000A5                     _UART1_TxInterruptHandler:
  3310                           	opt callstack 0
  3311  0000A5                     	ds	3
  3312  0000A8                     _UART1_RxInterruptHandler:
  3313                           	opt callstack 0
  3314  0000A8                     	ds	3
  3315  0000AB                     _nout:
  3316                           	opt callstack 0
  3317  0000AB                     	ds	2
  3318  0000AD                     _seed:
  3319                           	opt callstack 0
  3320  0000AD                     	ds	8
  3321                           
  3322                           	psect	dataBANK0
  3323  0000B5                     __pdataBANK0:
  3324                           	opt callstack 0
  3325  0000B5                     stoa@F1144:
  3326                           	opt callstack 0
  3327  0000B5                     	ds	7
  3328  0000BC                     _H33:
  3329                           	opt callstack 0
  3330  0000BC                     	ds	36
  3331                           
  3332                           	psect	bssBANK1
  3333  0001D0                     __pbssBANK1:
  3334                           	opt callstack 0
  3335  0001D0                     _dbuf:
  3336                           	opt callstack 0
  3337  0001D0                     	ds	32
  3338                           
  3339                           	psect	dataBANK1
  3340  000100                     __pdataBANK1:
  3341                           	opt callstack 0
  3342  000100                     _H10:
  3343                           	opt callstack 0
  3344  000100                     	ds	91
  3345  00015B                     _H13:
  3346                           	opt callstack 0
  3347  00015B                     	ds	64
  3348  00019B                     _H17:
  3349                           	opt callstack 0
  3350  00019B                     	ds	20
  3351  0001AF                     _H14:
  3352                           	opt callstack 0
  3353  0001AF                     	ds	17
  3354  0001C0                     _port_data:
  3355                           	opt callstack 0
  3356  0001C0                     	ds	16
  3357                           
  3358                           	psect	bssBANK2
  3359  000200                     __pbssBANK2:
  3360                           	opt callstack 0
  3361  000200                     _uart2TxBuffer:
  3362                           	opt callstack 0
  3363  000200                     	ds	64
  3364  000240                     _uart1TxBuffer:
  3365                           	opt callstack 0
  3366  000240                     	ds	64
  3367  000280                     _ring_buf1:
  3368                           	opt callstack 0
  3369  000280                     	ds	67
  3370                           
  3371                           	psect	dataBANK2
  3372  0002C3                     __pdataBANK2:
  3373                           	opt callstack 0
  3374  0002C3                     _H12:
  3375                           	opt callstack 0
  3376  0002C3                     	ds	30
  3377  0002E1                     _H26:
  3378                           	opt callstack 0
  3379  0002E1                     	ds	29
  3380                           
  3381                           	psect	bssBANK3
  3382  000370                     __pbssBANK3:
  3383                           	opt callstack 0
  3384  000370                     _ring_buf2:
  3385                           	opt callstack 0
  3386  000370                     	ds	67
  3387                           
  3388                           	psect	dataBANK3
  3389  000300                     __pdataBANK3:
  3390                           	opt callstack 0
  3391  000300                     _H53:
  3392                           	opt callstack 0
  3393  000300                     	ds	112
  3394                           
  3395                           	psect	bssBANK4
  3396  000400                     __pbssBANK4:
  3397                           	opt callstack 0
  3398  000400                     _uart1RxBuffer:
  3399                           	opt callstack 0
  3400  000400                     	ds	255
  3401                           
  3402                           	psect	bssBANK5
  3403  000500                     __pbssBANK5:
  3404                           	opt callstack 0
  3405  000500                     _uart2RxBuffer:
  3406                           	opt callstack 0
  3407  000500                     	ds	255
  3408                           
  3409                           	psect	dataBANK6
  3410  000600                     __pdataBANK6:
  3411                           	opt callstack 0
  3412  000600                     _T:
  3413                           	opt callstack 0
  3414  000600                     	ds	256
  3415                           
  3416                           	psect	bssBIGRAM
  3417  000700                     __pbssBIGRAM:
  3418                           	opt callstack 0
  3419  000700                     _D:
  3420                           	opt callstack 0
  3421  000700                     	ds	514
  3422  000902                     _S:
  3423                           	opt callstack 0
  3424  000902                     	ds	460
  3425                           
  3426                           	psect	dataBIGRAM
  3427  000ACE                     __pdataBIGRAM:
  3428                           	opt callstack 0
  3429  000ACE                     _V:
  3430                           	opt callstack 0
  3431  000ACE                     	ds	384
  3432  000C4E                     _H254:
  3433                           	opt callstack 0
  3434  000C4E                     	ds	257
  3435                           
  3436                           	psect	cstackBANK0
  3437  0000E0                     __pcstackBANK0:
  3438                           	opt callstack 0
  3439  0000E0                     ??_TMR5_ISR:
  3440                           
  3441                           ; 1 bytes @ 0x0
  3442  0000E0                     	ds	3
  3443                           
  3444                           	psect	cstackCOMRAM
  3445  00005D                     __pcstackCOMRAM:
  3446                           	opt callstack 0
  3447  00005D                     ??_TMR6_ISR:
  3448  00005D                     
  3449                           ; 1 bytes @ 0x0
  3450  00005D                     	ds	1
  3451  00005E                     
  3452                           ; 1 bytes @ 0x1
  3453 ;;
  3454 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  3455 ;;
  3456 ;; *************** function _main *****************
  3457 ;; Defined at:
  3458 ;;		line 630 in file "main.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  s               2  [STACK] PTR unsigned char 
  3463 ;;		 -> D.lcd(512), D(514), 
  3464 ;;  mode            1  [STACK] enum E17010
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1  [STACK] void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels required when called:   16
  3480 ;; This function calls:
  3481 ;;		_MyeaDogM_WriteStringAtPos
  3482 ;;		_SYSTEM_Initialize
  3483 ;;		_StartTimer
  3484 ;;		_TimerDone
  3485 ;;		_WaitMs
  3486 ;;		_check_help
  3487 ;;		_eaDogM_WriteCommand
  3488 ;;		_get_vterm_ptr
  3489 ;;		_hb_message
  3490 ;;		_init_display
  3491 ;;		_m_protocol
  3492 ;;		_mode_lamp_dim
  3493 ;;		_r_protocol
  3494 ;;		_set_display_info
  3495 ;;		_set_vterm
  3496 ;;		_sprintf
  3497 ;;		_srand
  3498 ;;		_t_protocol
  3499 ;;		_update_lcd
  3500 ;; This function is called by:
  3501 ;;		Startup code after reset
  3502 ;; This function uses a reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text0
  3506  010000                     __ptext0:
  3507                           	opt callstack 0
  3508  010000                     _main:
  3509                           	opt callstack 0
  3510                           
  3511                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3512  010000  52E6               	movf	postinc1,f,c
  3513  010002  52E6               	movf	postinc1,f,c
  3514  010004  52E6               	movf	postinc1,f,c
  3515                           
  3516                           ;main.c: 632:  UI_STATES mode;;main.c: 633:  char * s;;main.c: 636:  SYSTEM_Initialize()
      +                          ;
  3517                           
  3518                           ;incstack = 0
  3519  010006  EC4F  F0B3         	call	_SYSTEM_Initialize	;wreg free
  3520                           
  3521                           ; BSR set to: 60
  3522                           ;main.c: 639:  (INTCON0bits.GIEH = 1);
  3523  01000A  8ED2               	bsf	16338,7,c	;volatile
  3524                           
  3525                           ; BSR set to: 60
  3526                           ;main.c: 642:  (INTCON0bits.GIEL = 1);
  3527  01000C  8CD2               	bsf	16338,6,c	;volatile
  3528                           
  3529                           ; BSR set to: 60
  3530                           ;main.c: 644:  V.ui_state = UI_STATE_INIT;
  3531  01000E  0E00               	movlw	0
  3532  010010  006F FFA0  FACF    	movff	wreg,_V+1	;volatile
  3533                           
  3534                           ; BSR set to: 60
  3535                           ;main.c: 649:  WaitMs(300);
  3536  010016  0E2C               	movlw	44
  3537  010018  6EE6               	movwf	postinc1,c
  3538  01001A  0E01               	movlw	1
  3539  01001C  6EE6               	movwf	postinc1,c
  3540  01001E  EC62  F0B5         	call	_WaitMs	;wreg free
  3541                           
  3542                           ;main.c: 650:  if (PORTBbits.RB0) {
  3543  010022  A0CB               	btfss	16331,0,c	;volatile
  3544  010024  D004               	goto	l17008
  3545                           
  3546                           ;main.c: 651:   mode = UI_STATE_HOST;
  3547                           ;stkvar	_mode @ sp[(-3)+2]
  3548  010026  0EFF               	movlw	-1
  3549  010028  6AE3               	clrf	plusw1,c
  3550  01002A  2AE3               	incf	plusw1,f,c
  3551                           
  3552                           ;main.c: 652:  } else {
  3553  01002C  D004               	goto	l17010
  3554  01002E                     l17008:
  3555                           
  3556                           ;main.c: 653:   mode = UI_STATE_LOG;
  3557                           ;stkvar	_mode @ sp[(-3)+2]
  3558  01002E  0EFF               	movlw	-1
  3559  010030  6AE3               	clrf	plusw1,c
  3560  010032  80E3               	bsf	plusw1,0,c
  3561  010034  82E3               	bsf	plusw1,1,c	;indir
  3562  010036                     l17010:
  3563                           
  3564                           ;main.c: 656:  if (mode == UI_STATE_HOST) {
  3565                           ;stkvar	_mode @ sp[(-3)+2]
  3566  010036  0EFF               	movlw	-1
  3567  010038  04E3               	decf	plusw1,w,c
  3568  01003A  A4D8               	btfss	status,2,c
  3569  01003C  D003               	goto	l1366
  3570                           
  3571                           ;main.c: 657:   do { LATDbits.LATD0 = 1; } while(0);
  3572  01003E  80BD               	bsf	16317,0,c	;volatile
  3573                           
  3574                           ;main.c: 658:   V.mode_pwm = 70;
  3575  010040  0E46               	movlw	70
  3576  010042  D002               	goto	L1
  3577  010044                     l1366:
  3578  010044  90BD               	bcf	16317,0,c	;volatile
  3579                           
  3580                           ;main.c: 661:   V.mode_pwm = 0;
  3581  010046  0E00               	movlw	0
  3582  010048                     L1:
  3583  010048  006F FFA0  FC13    	movff	wreg,_V+325	;volatile
  3584  01004E  0E00               	movlw	0
  3585  010050  006F FFA0  FC14    	movff	wreg,_V+326	;volatile
  3586                           
  3587                           ;main.c: 663:  mode_lamp_dim(V.mode_pwm);
  3588  010056  EE23  F013         	lfsr	2,_V+325	;volatile
  3589  01005A  006F FF78  F042    	movff	postinc2,btemp+10
  3590  010060  006F FF74  F043    	movff	postdec2,btemp+11
  3591  010066  0060  F10B  FFE6   	movff	btemp+10,postinc1
  3592  01006C  0060  F10F  FFE6   	movff	btemp+11,postinc1
  3593  010072  EC1A  F0B9         	call	_mode_lamp_dim	;wreg free
  3594  010076  EF4E  F085         	goto	l17212
  3595  01007A                     l17014:
  3596                           
  3597                           ;main.c: 674:    init_display();
  3598  01007A  EC93  F0AC         	call	_init_display	;wreg free
  3599                           
  3600                           ; BSR set to: 61
  3601                           ;main.c: 675:    eaDogM_WriteCommand(0b00001100);
  3602  01007E  0E0C               	movlw	12
  3603  010080  6EE6               	movwf	postinc1,c
  3604  010082  EC62  F0B9         	call	_eaDogM_WriteCommand	;wreg free
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;main.c: 677:    V.ui_state = mode;
  3608                           ;stkvar	_mode @ sp[(-3)+2]
  3609  010086  0EFF               	movlw	-1
  3610  010088  006F FF8C  F043    	movff	plusw1,btemp+11
  3611  01008E  0060  F10C  FACF   	movff	btemp+11,_V+1	;volatile
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;main.c: 678:    V.s_state = SEQ_STATE_INIT;
  3615  010094  0E00               	movlw	0
  3616  010096  006F FFA0  FACE    	movff	wreg,_V
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;main.c: 679:    srand(1957);
  3620  01009C  0EA5               	movlw	165
  3621  01009E  6EE6               	movwf	postinc1,c
  3622  0100A0  0E07               	movlw	7
  3623  0100A2  6EE6               	movwf	postinc1,c
  3624  0100A4  EC98  F0B5         	call	_srand	;wreg free
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;main.c: 680:    set_vterm(0);
  3628  0100A8  0E00               	movlw	0
  3629  0100AA  6EE6               	movwf	postinc1,c
  3630  0100AC  EC8E  F0B8         	call	_set_vterm	;wreg free
  3631                           
  3632                           ;main.c: 681:    sprintf(get_vterm_ptr(0, 0), " RVI HOST TESTER");
  3633  0100B0  0E84               	movlw	low STR_1
  3634  0100B2  6EE6               	movwf	postinc1,c
  3635  0100B4  0EFF               	movlw	high STR_1
  3636  0100B6  6EE6               	movwf	postinc1,c
  3637  0100B8  0E00               	movlw	0
  3638  0100BA  6EE6               	movwf	postinc1,c
  3639  0100BC  0E00               	movlw	0
  3640  0100BE  6EE6               	movwf	postinc1,c
  3641  0100C0  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3642  0100C4  0060  F0E3  FFE6   	movff	btemp,postinc1
  3643  0100CA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3644  0100D0  0E04               	movlw	4
  3645  0100D2  6EE6               	movwf	postinc1,c
  3646  0100D4  EC13  F0AB         	call	_sprintf	;wreg free
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;main.c: 682:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.52G");
  3650  0100D8  0EE2               	movlw	low STR_3
  3651  0100DA  6EE6               	movwf	postinc1,c
  3652  0100DC  0EFF               	movlw	high STR_3
  3653  0100DE  6EE6               	movwf	postinc1,c
  3654  0100E0  0EB4               	movlw	low STR_2
  3655  0100E2  6EE6               	movwf	postinc1,c
  3656  0100E4  0EFF               	movlw	high STR_2
  3657  0100E6  6EE6               	movwf	postinc1,c
  3658  0100E8  0E00               	movlw	0
  3659  0100EA  6EE6               	movwf	postinc1,c
  3660  0100EC  0E01               	movlw	1
  3661  0100EE  6EE6               	movwf	postinc1,c
  3662  0100F0  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3663  0100F4  0060  F0E3  FFE6   	movff	btemp,postinc1
  3664  0100FA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3665  010100  0E06               	movlw	6
  3666  010102  6EE6               	movwf	postinc1,c
  3667  010104  EC13  F0AB         	call	_sprintf	;wreg free
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;main.c: 683:    sprintf(get_vterm_ptr(2, 0), " FGB@MCHP FAB4  ");
  3671  010108  0E62               	movlw	low STR_4
  3672  01010A  6EE6               	movwf	postinc1,c
  3673  01010C  0EFF               	movlw	high STR_4
  3674  01010E  6EE6               	movwf	postinc1,c
  3675  010110  0E00               	movlw	0
  3676  010112  6EE6               	movwf	postinc1,c
  3677  010114  0E02               	movlw	2
  3678  010116  6EE6               	movwf	postinc1,c
  3679  010118  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3680  01011C  0060  F0E3  FFE6   	movff	btemp,postinc1
  3681  010122  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3682  010128  0E04               	movlw	4
  3683  01012A  6EE6               	movwf	postinc1,c
  3684  01012C  EC13  F0AB         	call	_sprintf	;wreg free
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;main.c: 684:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3688  010130  0E73               	movlw	low STR_5
  3689  010132  6EE6               	movwf	postinc1,c
  3690  010134  0EFF               	movlw	high STR_5
  3691  010136  6EE6               	movwf	postinc1,c
  3692  010138  0E02               	movlw	2
  3693  01013A  6EE6               	movwf	postinc1,c
  3694  01013C  0E00               	movlw	0
  3695  01013E  6EE6               	movwf	postinc1,c
  3696  010140  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3697  010144  0060  F0E3  FFE6   	movff	btemp,postinc1
  3698  01014A  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3699  010150  0E04               	movlw	4
  3700  010152  6EE6               	movwf	postinc1,c
  3701  010154  EC13  F0AB         	call	_sprintf	;wreg free
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 685:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.52G");
  3705  010158  0EE2               	movlw	low STR_3
  3706  01015A  6EE6               	movwf	postinc1,c
  3707  01015C  0EFF               	movlw	high STR_3
  3708  01015E  6EE6               	movwf	postinc1,c
  3709  010160  0EB4               	movlw	low STR_2
  3710  010162  6EE6               	movwf	postinc1,c
  3711  010164  0EFF               	movlw	high STR_2
  3712  010166  6EE6               	movwf	postinc1,c
  3713  010168  0E02               	movlw	2
  3714  01016A  6EE6               	movwf	postinc1,c
  3715  01016C  0E01               	movlw	1
  3716  01016E  6EE6               	movwf	postinc1,c
  3717  010170  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3718  010174  0060  F0E3  FFE6   	movff	btemp,postinc1
  3719  01017A  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3720  010180  0E06               	movlw	6
  3721  010182  6EE6               	movwf	postinc1,c
  3722  010184  EC13  F0AB         	call	_sprintf	;wreg free
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;main.c: 686:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3726  010188  0E51               	movlw	low STR_8
  3727  01018A  6EE6               	movwf	postinc1,c
  3728  01018C  0EFF               	movlw	high STR_8
  3729  01018E  6EE6               	movwf	postinc1,c
  3730  010190  0E02               	movlw	2
  3731  010192  6EE6               	movwf	postinc1,c
  3732  010194  0E02               	movlw	2
  3733  010196  6EE6               	movwf	postinc1,c
  3734  010198  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3735  01019C  0060  F0E3  FFE6   	movff	btemp,postinc1
  3736  0101A2  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3737  0101A8  0E04               	movlw	4
  3738  0101AA  6EE6               	movwf	postinc1,c
  3739  0101AC  EC13  F0AB         	call	_sprintf	;wreg free
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;main.c: 687:    update_lcd(0);
  3743  0101B0  0E00               	movlw	0
  3744  0101B2  6EE6               	movwf	postinc1,c
  3745  0101B4  EC8B  F0AA         	call	_update_lcd	;wreg free
  3746                           
  3747                           ;main.c: 688:    WaitMs(3000);
  3748  0101B8  0EB8               	movlw	184
  3749  0101BA  6EE6               	movwf	postinc1,c
  3750  0101BC  0E0B               	movlw	11
  3751  0101BE  6EE6               	movwf	postinc1,c
  3752  0101C0  EC62  F0B5         	call	_WaitMs	;wreg free
  3753                           
  3754                           ;main.c: 689:    StartTimer(TMR_DISPLAY, 100);
  3755  0101C4  0E64               	movlw	100
  3756  0101C6  6EE6               	movwf	postinc1,c
  3757  0101C8  0E00               	movlw	0
  3758  0101CA  6EE6               	movwf	postinc1,c
  3759  0101CC  0E0A               	movlw	10
  3760  0101CE  6EE6               	movwf	postinc1,c
  3761  0101D0  EC26  F0B5         	call	_StartTimer	;wreg free
  3762                           
  3763                           ;main.c: 690:    StartTimer(TMR_SEQ, 10000);
  3764  0101D4  0E10               	movlw	16
  3765  0101D6  6EE6               	movwf	postinc1,c
  3766  0101D8  0E27               	movlw	39
  3767  0101DA  6EE6               	movwf	postinc1,c
  3768  0101DC  0E0B               	movlw	11
  3769  0101DE  6EE6               	movwf	postinc1,c
  3770  0101E0  EC26  F0B5         	call	_StartTimer	;wreg free
  3771                           
  3772                           ;main.c: 691:    StartTimer(TMR_INFO, 3000);
  3773  0101E4  0EB8               	movlw	184
  3774  0101E6  6EE6               	movwf	postinc1,c
  3775  0101E8  0E0B               	movlw	11
  3776  0101EA  6EE6               	movwf	postinc1,c
  3777  0101EC  0E07               	movlw	7
  3778  0101EE  6EE6               	movwf	postinc1,c
  3779  0101F0  EC26  F0B5         	call	_StartTimer	;wreg free
  3780                           
  3781                           ;main.c: 692:    break;
  3782  0101F4  EF64  F085         	goto	l17214
  3783  0101F8                     l1374:
  3784                           
  3785                           ;main.c: 696:     V.r_l_state = LINK_STATE_IDLE;
  3786  0101F8  0E00               	movlw	0
  3787  0101FA  006F FFA0  FAD3    	movff	wreg,_V+5	;volatile
  3788                           
  3789                           ;main.c: 697:     V.t_l_state = LINK_STATE_IDLE;
  3790  010200  0E00               	movlw	0
  3791  010202  006F FFA0  FAD4    	movff	wreg,_V+6	;volatile
  3792                           
  3793                           ;main.c: 698:     V.s_state = SEQ_STATE_RX;
  3794  010208  0E01               	movlw	1
  3795  01020A  006F FFA0  FACE    	movff	wreg,_V
  3796                           
  3797                           ;main.c: 699:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  3798  010210  0063  F00F  FFE8   	movff	_V+309,wreg	;volatile
  3799  010216  0A0A               	xorlw	10
  3800  010218  A4D8               	btfss	status,2,c
  3801  01021A  D1EF               	goto	l17120
  3802  01021C  0063  F013  FFE8   	movff	_V+310,wreg	;volatile
  3803  010222  0A0A               	xorlw	10
  3804  010224  A4D8               	btfss	status,2,c
  3805  010226  D1E9               	goto	l17120
  3806                           
  3807                           ;main.c: 700:      if (V.debug)
  3808  010228  EE23  F01A         	lfsr	2,_V+332	;volatile
  3809  01022C  AADF               	btfss	indf2,5,c
  3810  01022E  D027               	goto	l17056
  3811                           
  3812                           ;main.c: 701:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld  ", sizeof(header254), V
      +                          .testing);
  3813  010230  EE22  F3FD         	lfsr	2,_V+303	;volatile
  3814  010234  006F FF7B FFE6     	movff	postinc2,postinc1
  3815  01023A  006F FF7B FFE6     	movff	postinc2,postinc1
  3816  010240  006F FF7B FFE6     	movff	postinc2,postinc1
  3817  010246  006F FF7B FFE6     	movff	postinc2,postinc1
  3818  01024C  0E01               	movlw	1
  3819  01024E  6EE6               	movwf	postinc1,c
  3820  010250  0E01               	movlw	1
  3821  010252  6EE6               	movwf	postinc1,c
  3822  010254  0E95               	movlw	low STR_9
  3823  010256  6EE6               	movwf	postinc1,c
  3824  010258  0EFF               	movlw	high STR_9
  3825  01025A  6EE6               	movwf	postinc1,c
  3826  01025C  0E00               	movlw	0
  3827  01025E  6EE6               	movwf	postinc1,c
  3828  010260  0E02               	movlw	2
  3829  010262  6EE6               	movwf	postinc1,c
  3830  010264  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3831  010268  0060  F0E3  FFE6   	movff	btemp,postinc1
  3832  01026E  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3833  010274  0E0A               	movlw	10
  3834  010276  6EE6               	movwf	postinc1,c
  3835  010278  EC13  F0AB         	call	_sprintf	;wreg free
  3836  01027C  D1BE               	goto	l17120
  3837  01027E                     l17056:
  3838                           
  3839                           ;main.c: 703:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
  3840  01027E  EE22  F2D0         	lfsr	2,_V+2	;volatile
  3841  010282  50DF               	movf	indf2,w,c
  3842  010284  6EE6               	movwf	postinc1,c
  3843  010286  0E00               	movlw	0
  3844  010288  6EE6               	movwf	postinc1,c
  3845  01028A  EE22  F3F5         	lfsr	2,_V+295	;volatile
  3846  01028E  006F FF7B FFE6     	movff	postinc2,postinc1
  3847  010294  006F FF7B FFE6     	movff	postinc2,postinc1
  3848  01029A  006F FF7B FFE6     	movff	postinc2,postinc1
  3849  0102A0  006F FF7B FFE6     	movff	postinc2,postinc1
  3850  0102A6  0E6B               	movlw	low STR_10
  3851  0102A8  6EE6               	movwf	postinc1,c
  3852  0102AA  0EFE               	movlw	high STR_10
  3853  0102AC  6EE6               	movwf	postinc1,c
  3854  0102AE  0E00               	movlw	0
  3855  0102B0  6EE6               	movwf	postinc1,c
  3856  0102B2  0E02               	movlw	2
  3857  0102B4  6EE6               	movwf	postinc1,c
  3858  0102B6  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3859  0102BA  0060  F0E3  FFE6   	movff	btemp,postinc1
  3860  0102C0  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3861  0102C6  0E0A               	movlw	10
  3862  0102C8  6EE6               	movwf	postinc1,c
  3863  0102CA  EC13  F0AB         	call	_sprintf	;wreg free
  3864  0102CE  D195               	goto	l17120
  3865  0102D0                     l17058:
  3866                           
  3867                           ;main.c: 714:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  3868  0102D0  0ED3               	movlw	low (_V+5)
  3869  0102D2  6EE6               	movwf	postinc1,c
  3870  0102D4  0E0A               	movlw	high (_V+5)
  3871  0102D6  6EE6               	movwf	postinc1,c
  3872  0102D8  EC30  F092         	call	_r_protocol	;wreg free
  3873  0102DC  0E04               	movlw	4
  3874  0102DE  1838               	xorwf	btemp,w,c
  3875  0102E0  A4D8               	btfss	status,2,c
  3876  0102E2  D087               	goto	l17084
  3877                           
  3878                           ;main.c: 715:      set_display_info(DIS_STR);
  3879  0102E4  0E00               	movlw	0
  3880  0102E6  6EE6               	movwf	postinc1,c
  3881  0102E8  EC6F  F0B8         	call	_set_display_info	;wreg free
  3882                           
  3883                           ;main.c: 716:      s = get_vterm_ptr(0, 0);
  3884  0102EC  0E00               	movlw	0
  3885  0102EE  6EE6               	movwf	postinc1,c
  3886  0102F0  0E00               	movlw	0
  3887  0102F2  6EE6               	movwf	postinc1,c
  3888  0102F4  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  3889                           
  3890                           ;stkvar	_s @ sp[(-3)+0]
  3891  0102F8  0EFE               	movlw	-2
  3892  0102FA  0060  F0E7  FFE3   	movff	btemp+1,plusw1
  3893  010300  0EFD               	movlw	-3
  3894  010302  0060  F0E3  FFE3   	movff	btemp,plusw1
  3895                           
  3896                           ;main.c: 717:      if (V.stream == 9) {
  3897  010308  0063  F007  FFE8   	movff	_V+307,wreg	;volatile
  3898  01030E  0A09               	xorlw	9
  3899  010310  A4D8               	btfss	status,2,c
  3900  010312  D01E               	goto	l1381
  3901                           
  3902                           ;main.c: 718:       V.msg_error = V.function;
  3903  010314  CC02  FC05         	movff	_V+308,_V+311	;volatile
  3904                           
  3905                           ;main.c: 719:       sprintf(s, " S%dF%d Err         ", V.stream, V.function);
  3906  010318  EE23  F002         	lfsr	2,_V+308	;volatile
  3907  01031C  50DF               	movf	indf2,w,c
  3908  01031E  6EE6               	movwf	postinc1,c
  3909  010320  0E00               	movlw	0
  3910  010322  6EE6               	movwf	postinc1,c
  3911  010324  EE23  F001         	lfsr	2,_V+307	;volatile
  3912  010328  50DF               	movf	indf2,w,c
  3913  01032A  6EE6               	movwf	postinc1,c
  3914  01032C  0E00               	movlw	0
  3915  01032E  6EE6               	movwf	postinc1,c
  3916  010330  0E2C               	movlw	low STR_11
  3917  010332  6EE6               	movwf	postinc1,c
  3918  010334  0EFE               	movlw	high STR_11
  3919  010336  6EE6               	movwf	postinc1,c
  3920                           
  3921                           ;stkvar	_s @ sp[(-9)+0]
  3922  010338  0EF7               	movlw	-9
  3923  01033A  006F FF8F FFE6     	movff	plusw1,postinc1
  3924  010340  006F FF8F FFE6     	movff	plusw1,postinc1
  3925  010346  0E08               	movlw	8
  3926  010348  6EE6               	movwf	postinc1,c
  3927  01034A  EC13  F0AB         	call	_sprintf	;wreg free
  3928                           
  3929                           ;main.c: 720:      } else {
  3930  01034E  D01F               	goto	l17072
  3931  010350                     l1381:
  3932                           
  3933                           ;main.c: 721:       V.msg_error = MSG_ERROR_NONE;
  3934  010350  0E00               	movlw	0
  3935  010352  006F FFA0  FC05    	movff	wreg,_V+311	;volatile
  3936                           
  3937                           ;main.c: 722:       sprintf(s, " S%dF%d #           ", V.stream, V.function);
  3938  010358  EE23  F002         	lfsr	2,_V+308	;volatile
  3939  01035C  50DF               	movf	indf2,w,c
  3940  01035E  6EE6               	movwf	postinc1,c
  3941  010360  0E00               	movlw	0
  3942  010362  6EE6               	movwf	postinc1,c
  3943  010364  EE23  F001         	lfsr	2,_V+307	;volatile
  3944  010368  50DF               	movf	indf2,w,c
  3945  01036A  6EE6               	movwf	postinc1,c
  3946  01036C  0E00               	movlw	0
  3947  01036E  6EE6               	movwf	postinc1,c
  3948  010370  0E17               	movlw	low STR_12
  3949  010372  6EE6               	movwf	postinc1,c
  3950  010374  0EFE               	movlw	high STR_12
  3951  010376  6EE6               	movwf	postinc1,c
  3952                           
  3953                           ;stkvar	_s @ sp[(-9)+0]
  3954  010378  0EF7               	movlw	-9
  3955  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  3956  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  3957  010386  0E08               	movlw	8
  3958  010388  6EE6               	movwf	postinc1,c
  3959  01038A  EC13  F0AB         	call	_sprintf	;wreg free
  3960  01038E                     l17072:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 724:      s[16] = 0;
  3964                           ;stkvar	_s @ sp[(-3)+0]
  3965  01038E  0EFD               	movlw	-3
  3966  010390  006F FF8C  F042    	movff	plusw1,btemp+10
  3967  010396  0EFE               	movlw	-2
  3968  010398  006F FF8C  F043    	movff	plusw1,btemp+11
  3969  01039E  0E10               	movlw	16
  3970  0103A0  2442               	addwf	btemp+10,w,c
  3971  0103A2  6ED9               	movwf	fsr2l,c
  3972  0103A4  0E00               	movlw	0
  3973  0103A6  2043               	addwfc	btemp+11,w,c
  3974  0103A8  6EDA               	movwf	fsr2h,c
  3975  0103AA  0E00               	movlw	0
  3976  0103AC  6EDF               	movwf	indf2,c
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;main.c: 725:      MyeaDogM_WriteStringAtPos(0, 0, s);
  3980                           ;stkvar	_s @ sp[(-3)+0]
  3981  0103AE  0EFD               	movlw	-3
  3982  0103B0  006F FF8F FFE6     	movff	plusw1,postinc1
  3983  0103B6  006F FF8F FFE6     	movff	plusw1,postinc1
  3984  0103BC  0E00               	movlw	0
  3985  0103BE  6EE6               	movwf	postinc1,c
  3986  0103C0  0E00               	movlw	0
  3987  0103C2  6EE6               	movwf	postinc1,c
  3988  0103C4  EC02  F0AA         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  3989                           
  3990                           ;main.c: 729:      if (V.wbit) {
  3991  0103C8  EE23  F019         	lfsr	2,_V+331	;volatile
  3992  0103CC  A2DF               	btfss	indf2,1,c
  3993  0103CE  D00D               	goto	l1383
  3994                           
  3995                           ;main.c: 730:       V.s_state = SEQ_STATE_TX;
  3996  0103D0  0E02               	movlw	2
  3997  0103D2  006F FFA0  FACE    	movff	wreg,_V
  3998                           
  3999                           ;main.c: 731:       V.failed_send = 0;
  4000  0103D8  EE23  F019         	lfsr	2,_V+331	;volatile
  4001  0103DC  0E0F               	movlw	-241
  4002  0103DE  16DF               	andwf	223,f,c
  4003                           
  4004                           ;main.c: 732:       V.t_l_state = LINK_STATE_IDLE;
  4005  0103E0  0E00               	movlw	0
  4006  0103E2  006F FFA0  FAD4    	movff	wreg,_V+6	;volatile
  4007                           
  4008                           ;main.c: 733:      } else {
  4009  0103E8  D004               	goto	l17084
  4010  0103EA                     l1383:
  4011                           
  4012                           ;main.c: 734:       V.s_state = SEQ_STATE_TRIGGER;
  4013  0103EA  0E03               	movlw	3
  4014  0103EC  006F FFA0  FACE    	movff	wreg,_V
  4015  0103F2                     l17084:
  4016                           
  4017                           ;main.c: 737:     if (V.r_l_state == LINK_STATE_ERROR)
  4018  0103F2  0062  FB4F  FFE8   	movff	_V+5,wreg	;volatile
  4019  0103F8  D011               	goto	L42
  4020  0103FA                     l17088:
  4021                           
  4022                           ;main.c: 744:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  4023  0103FA  0ED4               	movlw	low (_V+6)
  4024  0103FC  6EE6               	movwf	postinc1,c
  4025  0103FE  0E0A               	movlw	high (_V+6)
  4026  010400  6EE6               	movwf	postinc1,c
  4027  010402  EC32  F098         	call	_t_protocol	;wreg free
  4028  010406  0E04               	movlw	4
  4029  010408  1838               	xorwf	btemp,w,c
  4030  01040A  A4D8               	btfss	status,2,c
  4031  01040C  D004               	goto	l17092
  4032                           
  4033                           ;main.c: 745:      V.s_state = SEQ_STATE_TRIGGER;
  4034  01040E  0E03               	movlw	3
  4035  010410  006F FFA0  FACE    	movff	wreg,_V
  4036  010416                     l17092:
  4037                           
  4038                           ;main.c: 747:     if (V.t_l_state == LINK_STATE_ERROR)
  4039  010416  0062  FB53  FFE8   	movff	_V+6,wreg	;volatile
  4040  01041C                     L42:
  4041  01041C  0A06               	xorlw	6
  4042  01041E  A4D8               	btfss	status,2,c
  4043  010420  D0EC               	goto	l17120
  4044                           
  4045                           ;main.c: 748:      V.s_state = SEQ_STATE_ERROR;
  4046  010422  0E06               	movlw	6
  4047  010424  D088               	goto	L2
  4048  010426                     l17096:
  4049                           
  4050                           ;main.c: 751:     set_display_info(DIS_STR);
  4051  010426  0E00               	movlw	0
  4052  010428  6EE6               	movwf	postinc1,c
  4053  01042A  EC6F  F0B8         	call	_set_display_info	;wreg free
  4054                           
  4055                           ;main.c: 752:     s = get_vterm_ptr(0, 0);
  4056  01042E  0E00               	movlw	0
  4057  010430  6EE6               	movwf	postinc1,c
  4058  010432  0E00               	movlw	0
  4059  010434  6EE6               	movwf	postinc1,c
  4060  010436  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4061                           
  4062                           ;stkvar	_s @ sp[(-3)+0]
  4063  01043A  0EFE               	movlw	-2
  4064  01043C  0060  F0E7  FFE3   	movff	btemp+1,plusw1
  4065  010442  0EFD               	movlw	-3
  4066  010444  0060  F0E3  FFE3   	movff	btemp,plusw1
  4067                           
  4068                           ;main.c: 753:     if (V.queue) {
  4069  01044A  EE23  F01A         	lfsr	2,_V+332	;volatile
  4070  01044E  A8DF               	btfss	indf2,4,c
  4071  010450  D02E               	goto	l1390
  4072                           
  4073                           ;main.c: 754:      V.r_l_state = LINK_STATE_IDLE;
  4074  010452  0E00               	movlw	0
  4075  010454  006F FFA0  FAD3    	movff	wreg,_V+5	;volatile
  4076                           
  4077                           ;main.c: 755:      V.t_l_state = LINK_STATE_IDLE;
  4078  01045A  0E00               	movlw	0
  4079  01045C  006F FFA0  FAD4    	movff	wreg,_V+6	;volatile
  4080                           
  4081                           ;main.c: 756:      V.s_state = SEQ_STATE_TX;
  4082  010462  0E02               	movlw	2
  4083  010464  006F FFA0  FACE    	movff	wreg,_V
  4084                           
  4085                           ;main.c: 757:      sprintf(s, " S%dF%d # OKQ%d        ", V.stream, V.function, V.e_types
      +                          );
  4086  01046A  EE22  F2D1         	lfsr	2,_V+3	;volatile
  4087  01046E  50DF               	movf	indf2,w,c
  4088  010470  6EE6               	movwf	postinc1,c
  4089  010472  0E00               	movlw	0
  4090  010474  6EE6               	movwf	postinc1,c
  4091  010476  EE23  F002         	lfsr	2,_V+308	;volatile
  4092  01047A  50DF               	movf	indf2,w,c
  4093  01047C  6EE6               	movwf	postinc1,c
  4094  01047E  0E00               	movlw	0
  4095  010480  6EE6               	movwf	postinc1,c
  4096  010482  EE23  F001         	lfsr	2,_V+307	;volatile
  4097  010486  50DF               	movf	indf2,w,c
  4098  010488  6EE6               	movwf	postinc1,c
  4099  01048A  0E00               	movlw	0
  4100  01048C  6EE6               	movwf	postinc1,c
  4101  01048E  0EA8               	movlw	low STR_13
  4102  010490  6EE6               	movwf	postinc1,c
  4103  010492  0EFD               	movlw	high STR_13
  4104  010494  6EE6               	movwf	postinc1,c
  4105                           
  4106                           ;stkvar	_s @ sp[(-11)+0]
  4107  010496  0EF5               	movlw	-11
  4108  010498  006F FF8F FFE6     	movff	plusw1,postinc1
  4109  01049E  006F FF8F FFE6     	movff	plusw1,postinc1
  4110  0104A4  0E0A               	movlw	10
  4111  0104A6  6EE6               	movwf	postinc1,c
  4112  0104A8  EC13  F0AB         	call	_sprintf	;wreg free
  4113                           
  4114                           ;main.c: 758:     } else {
  4115  0104AC  D025               	goto	l17108
  4116  0104AE                     l1390:
  4117                           
  4118                           ;main.c: 759:      V.s_state = SEQ_STATE_DONE;
  4119  0104AE  0E05               	movlw	5
  4120  0104B0  006F FFA0  FACE    	movff	wreg,_V
  4121                           
  4122                           ;main.c: 760:      sprintf(s, " S%dF%d # OK %d        ", V.stream, V.function, V.e_types
      +                          );
  4123  0104B6  EE22  F2D1         	lfsr	2,_V+3	;volatile
  4124  0104BA  50DF               	movf	indf2,w,c
  4125  0104BC  6EE6               	movwf	postinc1,c
  4126  0104BE  0E00               	movlw	0
  4127  0104C0  6EE6               	movwf	postinc1,c
  4128  0104C2  EE23  F002         	lfsr	2,_V+308	;volatile
  4129  0104C6  50DF               	movf	indf2,w,c
  4130  0104C8  6EE6               	movwf	postinc1,c
  4131  0104CA  0E00               	movlw	0
  4132  0104CC  6EE6               	movwf	postinc1,c
  4133  0104CE  EE23  F001         	lfsr	2,_V+307	;volatile
  4134  0104D2  50DF               	movf	indf2,w,c
  4135  0104D4  6EE6               	movwf	postinc1,c
  4136  0104D6  0E00               	movlw	0
  4137  0104D8  6EE6               	movwf	postinc1,c
  4138  0104DA  0E90               	movlw	low STR_14
  4139  0104DC  6EE6               	movwf	postinc1,c
  4140  0104DE  0EFD               	movlw	high STR_14
  4141  0104E0  6EE6               	movwf	postinc1,c
  4142                           
  4143                           ;stkvar	_s @ sp[(-11)+0]
  4144  0104E2  0EF5               	movlw	-11
  4145  0104E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4146  0104EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4147  0104F0  0E0A               	movlw	10
  4148  0104F2  6EE6               	movwf	postinc1,c
  4149  0104F4  EC13  F0AB         	call	_sprintf	;wreg free
  4150  0104F8                     l17108:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;main.c: 763:     s[16] = 0;
  4154                           ;stkvar	_s @ sp[(-3)+0]
  4155  0104F8  0EFD               	movlw	-3
  4156  0104FA  006F FF8C  F042    	movff	plusw1,btemp+10
  4157  010500  0EFE               	movlw	-2
  4158  010502  006F FF8C  F043    	movff	plusw1,btemp+11
  4159  010508  0E10               	movlw	16
  4160  01050A  2442               	addwf	btemp+10,w,c
  4161  01050C  6ED9               	movwf	fsr2l,c
  4162  01050E  0E00               	movlw	0
  4163  010510  2043               	addwfc	btemp+11,w,c
  4164  010512  6EDA               	movwf	fsr2h,c
  4165  010514  0E00               	movlw	0
  4166  010516  6EDF               	movwf	indf2,c
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;main.c: 764:     MyeaDogM_WriteStringAtPos(0, 0, s);
  4170                           ;stkvar	_s @ sp[(-3)+0]
  4171  010518  0EFD               	movlw	-3
  4172  01051A  006F FF8F FFE6     	movff	plusw1,postinc1
  4173  010520  006F FF8F FFE6     	movff	plusw1,postinc1
  4174  010526  0E00               	movlw	0
  4175  010528  6EE6               	movwf	postinc1,c
  4176  01052A  0E00               	movlw	0
  4177  01052C  6EE6               	movwf	postinc1,c
  4178  01052E  EC02  F0AA         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  4179                           
  4180                           ;main.c: 765:     break;
  4181  010532  D063               	goto	l17120
  4182  010534                     l1392:
  4183                           
  4184                           ;main.c: 767:     V.s_state = SEQ_STATE_INIT;
  4185  010534  0E00               	movlw	0
  4186  010536                     L2:
  4187  010536  006F FFA0  FACE    	movff	wreg,_V
  4188                           
  4189                           ;main.c: 768:     break;
  4190  01053C  D05E               	goto	l17120
  4191  01053E                     l1394:
  4192                           
  4193                           ;main.c: 771:     V.s_state = SEQ_STATE_INIT;
  4194  01053E  0E00               	movlw	0
  4195  010540  006F FFA0  FACE    	movff	wreg,_V
  4196                           
  4197                           ;main.c: 772:     sprintf(get_vterm_ptr(2, 0), "E%d A%d T%d G%d #", V.error, V.abort, V.
      +                          timer_error, V.g_state);
  4198  010546  EE22  F2D0         	lfsr	2,_V+2	;volatile
  4199  01054A  50DF               	movf	indf2,w,c
  4200  01054C  6EE6               	movwf	postinc1,c
  4201  01054E  0E00               	movlw	0
  4202  010550  6EE6               	movwf	postinc1,c
  4203  010552  EE23  F00F         	lfsr	2,_V+321	;volatile
  4204  010556  006F FF78  F042    	movff	postinc2,btemp+10
  4205  01055C  006F FF74  F043    	movff	postdec2,btemp+11
  4206  010562  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4207  010568  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4208  01056E  EE23  F004         	lfsr	2,_V+310	;volatile
  4209  010572  50DF               	movf	indf2,w,c
  4210  010574  6EE6               	movwf	postinc1,c
  4211  010576  0E00               	movlw	0
  4212  010578  6EE6               	movwf	postinc1,c
  4213  01057A  EE23  F003         	lfsr	2,_V+309	;volatile
  4214  01057E  50DF               	movf	indf2,w,c
  4215  010580  6EE6               	movwf	postinc1,c
  4216  010582  0E00               	movlw	0
  4217  010584  6EE6               	movwf	postinc1,c
  4218  010586  0E3F               	movlw	low STR_15
  4219  010588  6EE6               	movwf	postinc1,c
  4220  01058A  0EFF               	movlw	high STR_15
  4221  01058C  6EE6               	movwf	postinc1,c
  4222  01058E  0E00               	movlw	0
  4223  010590  6EE6               	movwf	postinc1,c
  4224  010592  0E02               	movlw	2
  4225  010594  6EE6               	movwf	postinc1,c
  4226  010596  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4227  01059A  0060  F0E3  FFE6   	movff	btemp,postinc1
  4228  0105A0  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4229  0105A6  0E0C               	movlw	12
  4230  0105A8  6EE6               	movwf	postinc1,c
  4231  0105AA  EC13  F0AB         	call	_sprintf	;wreg free
  4232                           
  4233                           ;main.c: 773:     update_lcd(0);
  4234  0105AE  0E00               	movlw	0
  4235  0105B0  6EE6               	movwf	postinc1,c
  4236  0105B2  EC8B  F0AA         	call	_update_lcd	;wreg free
  4237                           
  4238                           ;main.c: 774:     WaitMs(2000);
  4239  0105B6  0ED0               	movlw	208
  4240  0105B8  6EE6               	movwf	postinc1,c
  4241  0105BA  0E07               	movlw	7
  4242  0105BC  6EE6               	movwf	postinc1,c
  4243  0105BE  EC62  F0B5         	call	_WaitMs	;wreg free
  4244                           
  4245                           ;main.c: 775:     break;
  4246  0105C2  D01B               	goto	l17120
  4247  0105C4                     l17118:
  4248  0105C4  EE22  F2CE         	lfsr	2,_V
  4249  0105C8  50DF               	movf	indf2,w,c
  4250  0105CA  6E42               	movwf	btemp+10,c
  4251  0105CC  6A43               	clrf	btemp+11,c
  4252                           
  4253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4254                           ; Switch size 1, requested type "simple"
  4255                           ; Number of cases is 1, Range of values is 0 to 0
  4256                           ; switch strategies available:
  4257                           ; Name         Instructions Cycles
  4258                           ; simple_byte            4     3 (average)
  4259                           ;	Chosen strategy is simple_byte
  4260  0105CE  5043               	movf	btemp+11,w,c
  4261  0105D0  0A00               	xorlw	0	; case 0
  4262  0105D2  A4D8               	btfss	status,2,c
  4263  0105D4  D7B4               	goto	l1394
  4264                           
  4265                           ; Switch size 1, requested type "simple"
  4266                           ; Number of cases is 6, Range of values is 0 to 6
  4267                           ; switch strategies available:
  4268                           ; Name         Instructions Cycles
  4269                           ; simple_byte           19    10 (average)
  4270                           ;	Chosen strategy is simple_byte
  4271  0105D6  5042               	movf	btemp+10,w,c
  4272  0105D8  0A00               	xorlw	0	; case 0
  4273  0105DA  B4D8               	btfsc	status,2,c
  4274  0105DC  D60D               	goto	l1374
  4275  0105DE  0A01               	xorlw	1	; case 1
  4276  0105E0  B4D8               	btfsc	status,2,c
  4277  0105E2  D676               	goto	l17058
  4278  0105E4  0A03               	xorlw	3	; case 2
  4279  0105E6  B4D8               	btfsc	status,2,c
  4280  0105E8  D708               	goto	l17088
  4281  0105EA  0A01               	xorlw	1	; case 3
  4282  0105EC  B4D8               	btfsc	status,2,c
  4283  0105EE  D71B               	goto	l17096
  4284  0105F0  0A06               	xorlw	6	; case 5
  4285  0105F2  B4D8               	btfsc	status,2,c
  4286  0105F4  D79F               	goto	l1392
  4287  0105F6  0A03               	xorlw	3	; case 6
  4288  0105F8  D7A2               	goto	l1394
  4289  0105FA                     l17120:
  4290                           
  4291                           ;main.c: 777:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  4292  0105FA  0063  F00F  FFE8   	movff	_V+309,wreg	;volatile
  4293  010600  0A0A               	xorlw	10
  4294  010602  A4D8               	btfss	status,2,c
  4295  010604  D261               	goto	l17214
  4296  010606  0063  F013  FFE8   	movff	_V+310,wreg	;volatile
  4297  01060C  0A0A               	xorlw	10
  4298  01060E  A4D8               	btfss	status,2,c
  4299  010610  D25B               	goto	l17214
  4300                           
  4301                           ;main.c: 778:     if (TimerDone(TMR_DISPLAY)) {
  4302  010612  0E0A               	movlw	10
  4303  010614  6EE6               	movwf	postinc1,c
  4304  010616  ECF5  F0B7         	call	_TimerDone	;wreg free
  4305  01061A  5038               	movf	btemp,w,c
  4306  01061C  B4D8               	btfsc	status,2,c
  4307  01061E  D053               	goto	l17132
  4308                           
  4309                           ;main.c: 779:      if (V.debug)
  4310  010620  EE23  F01A         	lfsr	2,_V+332	;volatile
  4311  010624  AADF               	btfss	indf2,5,c
  4312  010626  D027               	goto	l17130
  4313                           
  4314                           ;main.c: 780:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header25
      +                          4), V.testing);
  4315  010628  EE22  F3FD         	lfsr	2,_V+303	;volatile
  4316  01062C  006F FF7B FFE6     	movff	postinc2,postinc1
  4317  010632  006F FF7B FFE6     	movff	postinc2,postinc1
  4318  010638  006F FF7B FFE6     	movff	postinc2,postinc1
  4319  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  4320  010644  0E01               	movlw	1
  4321  010646  6EE6               	movwf	postinc1,c
  4322  010648  0E01               	movlw	1
  4323  01064A  6EE6               	movwf	postinc1,c
  4324  01064C  0E56               	movlw	low STR_16
  4325  01064E  6EE6               	movwf	postinc1,c
  4326  010650  0EFE               	movlw	high STR_16
  4327  010652  6EE6               	movwf	postinc1,c
  4328  010654  0E00               	movlw	0
  4329  010656  6EE6               	movwf	postinc1,c
  4330  010658  0E02               	movlw	2
  4331  01065A  6EE6               	movwf	postinc1,c
  4332  01065C  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4333  010660  0060  F0E3  FFE6   	movff	btemp,postinc1
  4334  010666  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4335  01066C  0E0A               	movlw	10
  4336  01066E  6EE6               	movwf	postinc1,c
  4337  010670  EC13  F0AB         	call	_sprintf	;wreg free
  4338  010674  D028               	goto	l17132
  4339  010676                     l17130:
  4340                           
  4341                           ;main.c: 782:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
  4342  010676  EE22  F2D0         	lfsr	2,_V+2	;volatile
  4343  01067A  50DF               	movf	indf2,w,c
  4344  01067C  6EE6               	movwf	postinc1,c
  4345  01067E  0E00               	movlw	0
  4346  010680  6EE6               	movwf	postinc1,c
  4347  010682  EE22  F3F5         	lfsr	2,_V+295	;volatile
  4348  010686  006F FF7B FFE6     	movff	postinc2,postinc1
  4349  01068C  006F FF7B FFE6     	movff	postinc2,postinc1
  4350  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  4351  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  4352  01069E  0E6B               	movlw	low STR_10
  4353  0106A0  6EE6               	movwf	postinc1,c
  4354  0106A2  0EFE               	movlw	high STR_10
  4355  0106A4  6EE6               	movwf	postinc1,c
  4356  0106A6  0E00               	movlw	0
  4357  0106A8  6EE6               	movwf	postinc1,c
  4358  0106AA  0E02               	movlw	2
  4359  0106AC  6EE6               	movwf	postinc1,c
  4360  0106AE  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4361  0106B2  0060  F0E3  FFE6   	movff	btemp,postinc1
  4362  0106B8  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4363  0106BE  0E0A               	movlw	10
  4364  0106C0  6EE6               	movwf	postinc1,c
  4365  0106C2  EC13  F0AB         	call	_sprintf	;wreg free
  4366  0106C6                     l17132:
  4367                           
  4368                           ;main.c: 788:     if (((V.g_state == GEM_STATE_REMOTE) && (V.s_state == SEQ_STATE_RX) &&
      +                           !V.queue)) {
  4369  0106C6  0062  FB43  FFE8   	movff	_V+2,wreg	;volatile
  4370  0106CC  0A04               	xorlw	4
  4371  0106CE  A4D8               	btfss	status,2,c
  4372  0106D0  D1FB               	goto	l17214
  4373  0106D2  0062  FB3B  FFE8   	movff	_V,wreg
  4374  0106D8  0A01               	xorlw	1
  4375  0106DA  A4D8               	btfss	status,2,c
  4376  0106DC  D1F5               	goto	l17214
  4377  0106DE  EE23  F01A         	lfsr	2,_V+332	;volatile
  4378  0106E2  B8DF               	btfsc	indf2,4,c
  4379  0106E4  D1F1               	goto	l17214
  4380                           
  4381                           ;main.c: 789:      if ((V.r_l_state == LINK_STATE_IDLE) && (V.t_l_state == LINK_STATE_ID
      +                          LE)) {
  4382  0106E6  EE22  F2D3         	lfsr	2,_V+5	;volatile
  4383  0106EA  50DF               	movf	indf2,w,c
  4384  0106EC  A4D8               	btfss	status,2,c
  4385  0106EE  D1EC               	goto	l17214
  4386  0106F0  EE22  F2D4         	lfsr	2,_V+6	;volatile
  4387  0106F4  50DF               	movf	indf2,w,c
  4388  0106F6  A4D8               	btfss	status,2,c
  4389  0106F8  D1E7               	goto	l17214
  4390                           
  4391                           ;main.c: 790:       if (TimerDone(TMR_HBIO)) {
  4392  0106FA  0E06               	movlw	6
  4393  0106FC  6EE6               	movwf	postinc1,c
  4394  0106FE  ECF5  F0B7         	call	_TimerDone	;wreg free
  4395  010702  5038               	movf	btemp,w,c
  4396  010704  B4D8               	btfsc	status,2,c
  4397  010706  D1E0               	goto	l17214
  4398                           
  4399                           ;main.c: 791:        set_display_info(DIS_STR);
  4400  010708  0E00               	movlw	0
  4401  01070A  6EE6               	movwf	postinc1,c
  4402  01070C  EC6F  F0B8         	call	_set_display_info	;wreg free
  4403                           
  4404                           ;main.c: 793:        if (V.stack) {
  4405  010710  EE23  F01B         	lfsr	2,_V+333	;volatile
  4406  010714  50DF               	movf	223,w,c
  4407  010716  0B07               	andlw	7
  4408  010718  0900               	iorlw	0
  4409  01071A  B4D8               	btfsc	status,2,c
  4410  01071C  D013               	goto	l17158
  4411                           
  4412                           ;main.c: 794:         hb_message();
  4413  01071E  EC27  F0B3         	call	_hb_message	;wreg free
  4414                           
  4415                           ;main.c: 795:         V.msg_error = MSG_ERROR_NONE;
  4416  010722  0E00               	movlw	0
  4417  010724  006F FFA0  FC05    	movff	wreg,_V+311	;volatile
  4418                           
  4419                           ;main.c: 796:         V.ping_count = 0;
  4420  01072A  0E00               	movlw	0
  4421  01072C  006F FFA0  FC4C    	movff	wreg,_V+382	;volatile
  4422                           
  4423                           ;main.c: 797:         V.error = LINK_ERROR_NONE;
  4424  010732  0E0A               	movlw	10
  4425  010734  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  4426                           
  4427                           ;main.c: 798:         V.abort = LINK_ERROR_NONE;
  4428  01073A  0E0A               	movlw	10
  4429  01073C  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
  4430                           
  4431                           ;main.c: 799:        } else {
  4432  010742  D1C2               	goto	l17214
  4433  010744                     l17158:
  4434                           
  4435                           ;main.c: 800:         StartTimer(TMR_HBIO, 30000);
  4436  010744  0E30               	movlw	48
  4437  010746  6EE6               	movwf	postinc1,c
  4438  010748  0E75               	movlw	117
  4439  01074A  6EE6               	movwf	postinc1,c
  4440  01074C  0E06               	movlw	6
  4441  01074E  6EE6               	movwf	postinc1,c
  4442  010750  EC26  F0B5         	call	_StartTimer	;wreg free
  4443                           
  4444                           ;main.c: 801:         if (V.ping_count++ > 4) {
  4445  010754  EE23  F04C         	lfsr	2,_V+382	;volatile
  4446  010758  006F FF7C  F043    	movff	indf2,btemp+11
  4447  01075E  0E01               	movlw	1
  4448  010760  26DF               	addwf	indf2,f,c
  4449  010762  0E04               	movlw	4
  4450  010764  6443               	cpfsgt	btemp+11,c
  4451  010766  D03C               	goto	l17174
  4452                           
  4453                           ;main.c: 802:          set_display_info(DIS_STR);
  4454  010768  0E00               	movlw	0
  4455  01076A  6EE6               	movwf	postinc1,c
  4456  01076C  EC6F  F0B8         	call	_set_display_info	;wreg free
  4457                           
  4458                           ;main.c: 803:          hb_message();
  4459  010770  EC27  F0B3         	call	_hb_message	;wreg free
  4460                           
  4461                           ;main.c: 804:          sprintf(get_vterm_ptr(0, 0), "Ping P%d RTO %d    ", V.g_state, V.
      +                          equip_timeout);
  4462  010774  EE23  F015         	lfsr	2,_V+327	;volatile
  4463  010778  006F FF78  F042    	movff	postinc2,btemp+10
  4464  01077E  006F FF74  F043    	movff	postdec2,btemp+11
  4465  010784  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4466  01078A  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4467  010790  EE22  F2D0         	lfsr	2,_V+2	;volatile
  4468  010794  50DF               	movf	indf2,w,c
  4469  010796  6EE6               	movwf	postinc1,c
  4470  010798  0E00               	movlw	0
  4471  01079A  6EE6               	movwf	postinc1,c
  4472  01079C  0EBC               	movlw	low STR_18
  4473  01079E  6EE6               	movwf	postinc1,c
  4474  0107A0  0EFE               	movlw	high STR_18
  4475  0107A2  6EE6               	movwf	postinc1,c
  4476  0107A4  0E00               	movlw	0
  4477  0107A6  6EE6               	movwf	postinc1,c
  4478  0107A8  0E00               	movlw	0
  4479  0107AA  6EE6               	movwf	postinc1,c
  4480  0107AC  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4481  0107B0  0060  F0E3  FFE6   	movff	btemp,postinc1
  4482  0107B6  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4483  0107BC  0E08               	movlw	8
  4484  0107BE  6EE6               	movwf	postinc1,c
  4485  0107C0  EC13  F0AB         	call	_sprintf	;wreg free
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;main.c: 805:          update_lcd(0);
  4489  0107C4  0E00               	movlw	0
  4490  0107C6  6EE6               	movwf	postinc1,c
  4491  0107C8  EC8B  F0AA         	call	_update_lcd	;wreg free
  4492                           
  4493                           ;main.c: 806:          WaitMs(250);
  4494  0107CC  0EFA               	movlw	250
  4495  0107CE  6EE6               	movwf	postinc1,c
  4496  0107D0  0E00               	movlw	0
  4497  0107D2  6EE6               	movwf	postinc1,c
  4498  0107D4  EC62  F0B5         	call	_WaitMs	;wreg free
  4499                           
  4500                           ;main.c: 807:          V.ping_count = 0;
  4501  0107D8  0E00               	movlw	0
  4502  0107DA  006F FFA0  FC4C    	movff	wreg,_V+382	;volatile
  4503  0107E0                     l17174:
  4504                           
  4505                           ;main.c: 809:         set_display_info(DIS_STR);
  4506  0107E0  0E00               	movlw	0
  4507  0107E2  6EE6               	movwf	postinc1,c
  4508  0107E4  EC6F  F0B8         	call	_set_display_info	;wreg free
  4509  0107E8  D16F               	goto	l17214
  4510  0107EA                     l1407:
  4511                           
  4512                           ;main.c: 819:     V.m_l_state = LINK_STATE_IDLE;
  4513  0107EA  0E00               	movlw	0
  4514  0107EC  006F FFA0  FAD2    	movff	wreg,_V+4	;volatile
  4515                           
  4516                           ;main.c: 820:     V.s_state = SEQ_STATE_RX;
  4517  0107F2  0E01               	movlw	1
  4518  0107F4  006F FFA0  FACE    	movff	wreg,_V
  4519                           
  4520                           ;main.c: 821:     if (V.debug)
  4521  0107FA  EE23  F01A         	lfsr	2,_V+332	;volatile
  4522  0107FE  AADF               	btfss	indf2,5,c
  4523  010800  D027               	goto	l17180
  4524                           
  4525                           ;main.c: 822:      sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header254
      +                          ), V.testing);
  4526  010802  EE22  F3FD         	lfsr	2,_V+303	;volatile
  4527  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  4528  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  4529  010812  006F FF7B FFE6     	movff	postinc2,postinc1
  4530  010818  006F FF7B FFE6     	movff	postinc2,postinc1
  4531  01081E  0E01               	movlw	1
  4532  010820  6EE6               	movwf	postinc1,c
  4533  010822  0E01               	movlw	1
  4534  010824  6EE6               	movwf	postinc1,c
  4535  010826  0E56               	movlw	low STR_16
  4536  010828  6EE6               	movwf	postinc1,c
  4537  01082A  0EFE               	movlw	high STR_16
  4538  01082C  6EE6               	movwf	postinc1,c
  4539  01082E  0E00               	movlw	0
  4540  010830  6EE6               	movwf	postinc1,c
  4541  010832  0E02               	movlw	2
  4542  010834  6EE6               	movwf	postinc1,c
  4543  010836  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4544  01083A  0060  F0E3  FFE6   	movff	btemp,postinc1
  4545  010840  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4546  010846  0E0A               	movlw	10
  4547  010848  6EE6               	movwf	postinc1,c
  4548  01084A  EC13  F0AB         	call	_sprintf	;wreg free
  4549  01084E  D0C5               	goto	l17204
  4550  010850                     l17180:
  4551                           
  4552                           ;main.c: 824:      sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g
      +                          _state, V.timer_error, V.checksum_error);
  4553  010850  EE23  F00D         	lfsr	2,_V+319	;volatile
  4554  010854  006F FF78  F042    	movff	postinc2,btemp+10
  4555  01085A  006F FF74  F043    	movff	postdec2,btemp+11
  4556  010860  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4557  010866  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4558  01086C  EE23  F00F         	lfsr	2,_V+321	;volatile
  4559  010870  006F FF78  F042    	movff	postinc2,btemp+10
  4560  010876  006F FF74  F043    	movff	postdec2,btemp+11
  4561  01087C  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4562  010882  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4563  010888  EE22  F2D0         	lfsr	2,_V+2	;volatile
  4564  01088C  50DF               	movf	indf2,w,c
  4565  01088E  6EE6               	movwf	postinc1,c
  4566  010890  0E00               	movlw	0
  4567  010892  6EE6               	movwf	postinc1,c
  4568  010894  EE23  F049         	lfsr	2,_V+379	;volatile
  4569  010898  50DF               	movf	indf2,w,c
  4570  01089A  6EE6               	movwf	postinc1,c
  4571  01089C  0E00               	movlw	0
  4572  01089E  6EE6               	movwf	postinc1,c
  4573  0108A0  0E5D               	movlw	low STR_20
  4574  0108A2  6EE6               	movwf	postinc1,c
  4575  0108A4  0EFD               	movlw	high STR_20
  4576  0108A6  6EE6               	movwf	postinc1,c
  4577  0108A8  0E00               	movlw	0
  4578  0108AA  6EE6               	movwf	postinc1,c
  4579  0108AC  0E02               	movlw	2
  4580  0108AE  6EE6               	movwf	postinc1,c
  4581  0108B0  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4582  0108B4  0060  F0E3  FFE6   	movff	btemp,postinc1
  4583  0108BA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4584  0108C0  0E0C               	movlw	12
  4585  0108C2  6EE6               	movwf	postinc1,c
  4586  0108C4  EC13  F0AB         	call	_sprintf	;wreg free
  4587  0108C8  D088               	goto	l17204
  4588  0108CA                     l17182:
  4589                           
  4590                           ;main.c: 838:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  4591  0108CA  0ED2               	movlw	low (_V+4)
  4592  0108CC  6EE6               	movwf	postinc1,c
  4593  0108CE  0E0A               	movlw	high (_V+4)
  4594  0108D0  6EE6               	movwf	postinc1,c
  4595  0108D2  EC03  F08A         	call	_m_protocol	;wreg free
  4596  0108D6  0E04               	movlw	4
  4597  0108D8  1838               	xorwf	btemp,w,c
  4598  0108DA  A4D8               	btfss	status,2,c
  4599  0108DC  D03B               	goto	l17192
  4600                           
  4601                           ;main.c: 839:      sprintf(V.buf, "S%dF%d #%ld       ", V.stream, V.function, V.ticks);
  4602  0108DE  EE22  F3F5         	lfsr	2,_V+295	;volatile
  4603  0108E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4604  0108E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4605  0108EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4606  0108F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4607  0108FA  EE23  F002         	lfsr	2,_V+308	;volatile
  4608  0108FE  50DF               	movf	indf2,w,c
  4609  010900  6EE6               	movwf	postinc1,c
  4610  010902  0E00               	movlw	0
  4611  010904  6EE6               	movwf	postinc1,c
  4612  010906  EE23  F001         	lfsr	2,_V+307	;volatile
  4613  01090A  50DF               	movf	indf2,w,c
  4614  01090C  6EE6               	movwf	postinc1,c
  4615  01090E  0E00               	movlw	0
  4616  010910  6EE6               	movwf	postinc1,c
  4617  010912  0EF6               	movlw	low STR_21
  4618  010914  6EE6               	movwf	postinc1,c
  4619  010916  0EFE               	movlw	high STR_21
  4620  010918  6EE6               	movwf	postinc1,c
  4621  01091A  0ED5               	movlw	low (_V+7)
  4622  01091C  6EE6               	movwf	postinc1,c
  4623  01091E  0E0A               	movlw	high (_V+7)
  4624  010920  6EE6               	movwf	postinc1,c
  4625  010922  0E0C               	movlw	12
  4626  010924  6EE6               	movwf	postinc1,c
  4627  010926  EC13  F0AB         	call	_sprintf	;wreg free
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;main.c: 840:      V.buf[13] = 0;
  4631  01092A  0E00               	movlw	0
  4632  01092C  006F FFA0  FAE2    	movff	wreg,_V+20	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;main.c: 841:      MyeaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  4636  010932  0ED5               	movlw	low (_V+7)
  4637  010934  6EE6               	movwf	postinc1,c
  4638  010936  0E0A               	movlw	high (_V+7)
  4639  010938  6EE6               	movwf	postinc1,c
  4640  01093A  0E00               	movlw	0
  4641  01093C  6EE6               	movwf	postinc1,c
  4642  01093E  0063  F124  F043   	movff	_V+379,btemp+11	;volatile
  4643  010944  0443               	decf	btemp+11,w,c
  4644  010946  6EE6               	movwf	postinc1,c
  4645  010948  EC02  F0AA         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  4646                           
  4647                           ;main.c: 842:      V.s_state = SEQ_STATE_TRIGGER;
  4648  01094C  0E03               	movlw	3
  4649  01094E  006F FFA0  FACE    	movff	wreg,_V
  4650  010954                     l17192:
  4651                           
  4652                           ;main.c: 844:     if (V.m_l_state == LINK_STATE_ERROR)
  4653  010954  0062  FB4B  FFE8   	movff	_V+4,wreg	;volatile
  4654  01095A  0A06               	xorlw	6
  4655  01095C  A4D8               	btfss	status,2,c
  4656  01095E  D03D               	goto	l17204
  4657                           
  4658                           ;main.c: 845:      V.s_state = SEQ_STATE_ERROR;
  4659  010960  0E06               	movlw	6
  4660  010962  D01F               	goto	L3
  4661  010964                     l1414:
  4662                           
  4663                           ;main.c: 848:     V.s_state = SEQ_STATE_DONE;
  4664  010964  0E05               	movlw	5
  4665  010966  006F FFA0  FACE    	movff	wreg,_V
  4666                           
  4667                           ;main.c: 849:     sprintf(V.buf, "OK ");
  4668  01096C  0EE8               	movlw	low STR_22
  4669  01096E  6EE6               	movwf	postinc1,c
  4670  010970  0EFF               	movlw	high STR_22
  4671  010972  6EE6               	movwf	postinc1,c
  4672  010974  0ED5               	movlw	low (_V+7)
  4673  010976  6EE6               	movwf	postinc1,c
  4674  010978  0E0A               	movlw	high (_V+7)
  4675  01097A  6EE6               	movwf	postinc1,c
  4676  01097C  0E04               	movlw	4
  4677  01097E  6EE6               	movwf	postinc1,c
  4678  010980  EC13  F0AB         	call	_sprintf	;wreg free
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;main.c: 850:     MyeaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  4682  010984  0ED5               	movlw	low (_V+7)
  4683  010986  6EE6               	movwf	postinc1,c
  4684  010988  0E0A               	movlw	high (_V+7)
  4685  01098A  6EE6               	movwf	postinc1,c
  4686  01098C  0E0D               	movlw	13
  4687  01098E  6EE6               	movwf	postinc1,c
  4688  010990  0063  F124  F043   	movff	_V+379,btemp+11	;volatile
  4689  010996  0443               	decf	btemp+11,w,c
  4690  010998  6EE6               	movwf	postinc1,c
  4691  01099A  EC02  F0AA         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  4692                           
  4693                           ;main.c: 851:     break;
  4694  01099E  D01D               	goto	l17204
  4695  0109A0                     l1417:
  4696                           
  4697                           ;main.c: 855:     V.s_state = SEQ_STATE_INIT;
  4698  0109A0  0E00               	movlw	0
  4699  0109A2                     L3:
  4700  0109A2  006F FFA0  FACE    	movff	wreg,_V
  4701                           
  4702                           ;main.c: 856:     break;
  4703  0109A8  D018               	goto	l17204
  4704  0109AA                     l17202:
  4705  0109AA  EE22  F2CE         	lfsr	2,_V
  4706  0109AE  50DF               	movf	indf2,w,c
  4707  0109B0  6E42               	movwf	btemp+10,c
  4708  0109B2  6A43               	clrf	btemp+11,c
  4709                           
  4710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4711                           ; Switch size 1, requested type "simple"
  4712                           ; Number of cases is 1, Range of values is 0 to 0
  4713                           ; switch strategies available:
  4714                           ; Name         Instructions Cycles
  4715                           ; simple_byte            4     3 (average)
  4716                           ;	Chosen strategy is simple_byte
  4717  0109B4  5043               	movf	btemp+11,w,c
  4718  0109B6  0A00               	xorlw	0	; case 0
  4719  0109B8  A4D8               	btfss	status,2,c
  4720  0109BA  D7F2               	goto	l1417
  4721                           
  4722                           ; Switch size 1, requested type "simple"
  4723                           ; Number of cases is 5, Range of values is 0 to 6
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte           16     9 (average)
  4727                           ;	Chosen strategy is simple_byte
  4728  0109BC  5042               	movf	btemp+10,w,c
  4729  0109BE  0A00               	xorlw	0	; case 0
  4730  0109C0  B4D8               	btfsc	status,2,c
  4731  0109C2  D713               	goto	l1407
  4732  0109C4  0A01               	xorlw	1	; case 1
  4733  0109C6  B4D8               	btfsc	status,2,c
  4734  0109C8  D780               	goto	l17182
  4735  0109CA  0A02               	xorlw	2	; case 3
  4736  0109CC  B4D8               	btfsc	status,2,c
  4737  0109CE  D7CA               	goto	l1414
  4738  0109D0  0A06               	xorlw	6	; case 5
  4739  0109D2  B4D8               	btfsc	status,2,c
  4740  0109D4  D7E5               	goto	l1417
  4741  0109D6  0A03               	xorlw	3	; case 6
  4742  0109D8  D7E3               	goto	l1417
  4743  0109DA                     l17204:
  4744                           
  4745                           ;main.c: 858:    if (V.debug)
  4746  0109DA  EE23  F01A         	lfsr	2,_V+332	;volatile
  4747  0109DE  AADF               	btfss	indf2,5,c
  4748  0109E0  D01B               	goto	l17208
  4749                           
  4750                           ;main.c: 859:     sprintf(get_vterm_ptr(2, 0), "Equip type %d       ", V.e_types);
  4751  0109E2  EE22  F2D1         	lfsr	2,_V+3	;volatile
  4752  0109E6  50DF               	movf	indf2,w,c
  4753  0109E8  6EE6               	movwf	postinc1,c
  4754  0109EA  0E00               	movlw	0
  4755  0109EC  6EE6               	movwf	postinc1,c
  4756  0109EE  0E41               	movlw	low STR_23
  4757  0109F0  6EE6               	movwf	postinc1,c
  4758  0109F2  0EFE               	movlw	high STR_23
  4759  0109F4  6EE6               	movwf	postinc1,c
  4760  0109F6  0E00               	movlw	0
  4761  0109F8  6EE6               	movwf	postinc1,c
  4762  0109FA  0E02               	movlw	2
  4763  0109FC  6EE6               	movwf	postinc1,c
  4764  0109FE  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4765  010A02  0060  F0E3  FFE6   	movff	btemp,postinc1
  4766  010A08  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4767  010A0E  0E06               	movlw	6
  4768  010A10  6EE6               	movwf	postinc1,c
  4769  010A12  EC13  F0AB         	call	_sprintf	;wreg free
  4770  010A16  D058               	goto	l17214
  4771  010A18                     l17208:
  4772                           
  4773                           ;main.c: 861:     sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g_
      +                          state, V.timer_error, V.checksum_error);
  4774  010A18  EE23  F00D         	lfsr	2,_V+319	;volatile
  4775  010A1C  006F FF78  F042    	movff	postinc2,btemp+10
  4776  010A22  006F FF74  F043    	movff	postdec2,btemp+11
  4777  010A28  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4778  010A2E  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4779  010A34  EE23  F00F         	lfsr	2,_V+321	;volatile
  4780  010A38  006F FF78  F042    	movff	postinc2,btemp+10
  4781  010A3E  006F FF74  F043    	movff	postdec2,btemp+11
  4782  010A44  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4783  010A4A  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4784  010A50  EE22  F2D0         	lfsr	2,_V+2	;volatile
  4785  010A54  50DF               	movf	indf2,w,c
  4786  010A56  6EE6               	movwf	postinc1,c
  4787  010A58  0E00               	movlw	0
  4788  010A5A  6EE6               	movwf	postinc1,c
  4789  010A5C  EE23  F049         	lfsr	2,_V+379	;volatile
  4790  010A60  50DF               	movf	indf2,w,c
  4791  010A62  6EE6               	movwf	postinc1,c
  4792  010A64  0E00               	movlw	0
  4793  010A66  6EE6               	movwf	postinc1,c
  4794  010A68  0E5D               	movlw	low STR_20
  4795  010A6A  6EE6               	movwf	postinc1,c
  4796  010A6C  0EFD               	movlw	high STR_20
  4797  010A6E  6EE6               	movwf	postinc1,c
  4798  010A70  0E00               	movlw	0
  4799  010A72  6EE6               	movwf	postinc1,c
  4800  010A74  0E02               	movlw	2
  4801  010A76  6EE6               	movwf	postinc1,c
  4802  010A78  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  4803  010A7C  0060  F0E3  FFE6   	movff	btemp,postinc1
  4804  010A82  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  4805  010A88  0E0C               	movlw	12
  4806  010A8A  6EE6               	movwf	postinc1,c
  4807  010A8C  EC13  F0AB         	call	_sprintf	;wreg free
  4808  010A90  D01B               	goto	l17214
  4809  010A92                     l1421:
  4810                           
  4811                           ;main.c: 865:    V.ui_state = UI_STATE_INIT;
  4812  010A92  0E00               	movlw	0
  4813  010A94  006F FFA0  FACF    	movff	wreg,_V+1	;volatile
  4814                           
  4815                           ;main.c: 866:    break;
  4816  010A9A  D016               	goto	l17214
  4817  010A9C                     l17212:
  4818  010A9C  EE22  F2CF         	lfsr	2,_V+1	;volatile
  4819  010AA0  50DF               	movf	indf2,w,c
  4820  010AA2  6E42               	movwf	btemp+10,c
  4821  010AA4  6A43               	clrf	btemp+11,c
  4822                           
  4823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4824                           ; Switch size 1, requested type "simple"
  4825                           ; Number of cases is 1, Range of values is 0 to 0
  4826                           ; switch strategies available:
  4827                           ; Name         Instructions Cycles
  4828                           ; simple_byte            4     3 (average)
  4829                           ;	Chosen strategy is simple_byte
  4830  010AA6  5043               	movf	btemp+11,w,c
  4831  010AA8  0A00               	xorlw	0	; case 0
  4832  010AAA  A4D8               	btfss	status,2,c
  4833  010AAC  D7F2               	goto	l1421
  4834                           
  4835                           ; Switch size 1, requested type "simple"
  4836                           ; Number of cases is 4, Range of values is 0 to 4
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte           13     7 (average)
  4840                           ;	Chosen strategy is simple_byte
  4841  010AAE  5042               	movf	btemp+10,w,c
  4842  010AB0  0A00               	xorlw	0	; case 0
  4843  010AB2  B4D8               	btfsc	status,2,c
  4844  010AB4  EF3D  F080         	goto	l17014
  4845  010AB8  0A01               	xorlw	1	; case 1
  4846  010ABA  B4D8               	btfsc	status,2,c
  4847  010ABC  D583               	goto	l17118
  4848  010ABE  0A02               	xorlw	2	; case 3
  4849  010AC0  B4D8               	btfsc	status,2,c
  4850  010AC2  D773               	goto	l17202
  4851  010AC4  0A07               	xorlw	7	; case 4
  4852  010AC6  D7E5               	goto	l1421
  4853  010AC8                     l17214:
  4854                           
  4855                           ;main.c: 868:   if (V.ticks) {
  4856  010AC8  EE22  F3F5         	lfsr	2,_V+295	;volatile
  4857  010ACC  50DE               	movf	postinc2,w,c
  4858  010ACE  10DE               	iorwf	postinc2,w,c
  4859  010AD0  10DE               	iorwf	postinc2,w,c
  4860  010AD2  10DE               	iorwf	postinc2,w,c
  4861  010AD4  B4D8               	btfsc	status,2,c
  4862  010AD6  D02C               	goto	l17224
  4863                           
  4864                           ;main.c: 869:    if (V.failed_receive) {
  4865  010AD8  EE23  F01A         	lfsr	2,_V+332	;volatile
  4866  010ADC  50DF               	movf	223,w,c
  4867  010ADE  0B0F               	andlw	15
  4868  010AE0  0900               	iorlw	0
  4869  010AE2  B4D8               	btfsc	status,2,c
  4870  010AE4  D00B               	goto	l1434
  4871                           
  4872                           ;main.c: 870:     do { LATDbits.LATD4 = 0; } while(0);
  4873  010AE6  98BD               	bcf	16317,4,c	;volatile
  4874                           
  4875                           ;main.c: 871:     do { LATDbits.LATD5 = 1; } while(0);
  4876  010AE8  8ABD               	bsf	16317,5,c	;volatile
  4877                           
  4878                           ;main.c: 872:     if (V.error == LINK_ERROR_CHECKSUM) {
  4879  010AEA  0063  F00F  FFE8   	movff	_V+309,wreg	;volatile
  4880  010AF0  0A0F               	xorlw	15
  4881  010AF2  A4D8               	btfss	status,2,c
  4882  010AF4  D007               	goto	l17220
  4883                           
  4884                           ;main.c: 873:      do { LATFbits.LATF4 = 0; } while(0);
  4885  010AF6  98BF               	bcf	16319,4,c	;volatile
  4886                           
  4887                           ;main.c: 874:      do { LATFbits.LATF5 = 1; } while(0);
  4888  010AF8  8ABF               	bsf	16319,5,c	;volatile
  4889  010AFA  D004               	goto	l17220
  4890  010AFC                     l1434:
  4891  010AFC  88BD               	bsf	16317,4,c	;volatile
  4892                           
  4893                           ;main.c: 878:     do { LATDbits.LATD5 = 0; } while(0);
  4894  010AFE  9ABD               	bcf	16317,5,c	;volatile
  4895                           
  4896                           ;main.c: 879:     do { LATFbits.LATF4 = 1; } while(0);
  4897  010B00  88BF               	bsf	16319,4,c	;volatile
  4898                           
  4899                           ;main.c: 880:     do { LATFbits.LATF5 = 0; } while(0);
  4900  010B02  9ABF               	bcf	16319,5,c	;volatile
  4901  010B04                     l17220:
  4902                           
  4903                           ;main.c: 882:    if (V.failed_send) {
  4904  010B04  EE23  F019         	lfsr	2,_V+331	;volatile
  4905  010B08  38DF               	swapf	223,w,c
  4906  010B0A  0B0F               	andlw	15
  4907  010B0C  0900               	iorlw	0
  4908  010B0E  B4D8               	btfsc	status,2,c
  4909  010B10  D00B               	goto	l1453
  4910                           
  4911                           ;main.c: 883:     do { LATDbits.LATD6 = 0; } while(0);
  4912  010B12  9CBD               	bcf	16317,6,c	;volatile
  4913                           
  4914                           ;main.c: 884:     do { LATDbits.LATD7 = 1; } while(0);
  4915  010B14  8EBD               	bsf	16317,7,c	;volatile
  4916                           
  4917                           ;main.c: 885:     if (V.error == LINK_ERROR_CHECKSUM) {
  4918  010B16  0063  F00F  FFE8   	movff	_V+309,wreg	;volatile
  4919  010B1C  0A0F               	xorlw	15
  4920  010B1E  A4D8               	btfss	status,2,c
  4921  010B20  D007               	goto	l17224
  4922                           
  4923                           ;main.c: 886:      do { LATFbits.LATF6 = 0; } while(0);
  4924  010B22  9CBF               	bcf	16319,6,c	;volatile
  4925                           
  4926                           ;main.c: 887:      do { LATFbits.LATF7 = 1; } while(0);
  4927  010B24  8EBF               	bsf	16319,7,c	;volatile
  4928  010B26  D004               	goto	l17224
  4929  010B28                     l1453:
  4930  010B28  8CBD               	bsf	16317,6,c	;volatile
  4931                           
  4932                           ;main.c: 891:     do { LATDbits.LATD7 = 0; } while(0);
  4933  010B2A  9EBD               	bcf	16317,7,c	;volatile
  4934                           
  4935                           ;main.c: 892:     do { LATFbits.LATF6 = 1; } while(0);
  4936  010B2C  8CBF               	bsf	16319,6,c	;volatile
  4937                           
  4938                           ;main.c: 893:     do { LATFbits.LATF7 = 0; } while(0);
  4939  010B2E  9EBF               	bcf	16319,7,c	;volatile
  4940  010B30                     l17224:
  4941                           
  4942                           ;main.c: 897:   if (mode != UI_STATE_LOG)
  4943                           ;stkvar	_mode @ sp[(-3)+2]
  4944  010B30  0EFF               	movlw	-1
  4945  010B32  006F FF8C  F038    	movff	plusw1,btemp
  4946  010B38  0E03               	movlw	3
  4947  010B3A  1838               	xorwf	btemp,w,c
  4948  010B3C  B4D8               	btfsc	status,2,c
  4949  010B3E  D061               	goto	l17238
  4950                           
  4951                           ;main.c: 898:    if (TimerDone(TMR_DISPLAY)) {
  4952  010B40  0E0A               	movlw	10
  4953  010B42  6EE6               	movwf	postinc1,c
  4954  010B44  ECF5  F0B7         	call	_TimerDone	;wreg free
  4955  010B48  5038               	movf	btemp,w,c
  4956  010B4A  B4D8               	btfsc	status,2,c
  4957  010B4C  D05A               	goto	l17238
  4958                           
  4959                           ;main.c: 899:     if (TimerDone(TMR_HELPDIS)) {
  4960  010B4E  0E09               	movlw	9
  4961  010B50  6EE6               	movwf	postinc1,c
  4962  010B52  ECF5  F0B7         	call	_TimerDone	;wreg free
  4963  010B56  5038               	movf	btemp,w,c
  4964  010B58  B4D8               	btfsc	status,2,c
  4965  010B5A  D004               	goto	l17232
  4966                           
  4967                           ;main.c: 900:      set_display_info(DIS_STR);
  4968  010B5C  0E00               	movlw	0
  4969  010B5E  6EE6               	movwf	postinc1,c
  4970  010B60  EC6F  F0B8         	call	_set_display_info	;wreg free
  4971  010B64                     l17232:
  4972                           
  4973                           ;main.c: 902:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", V.r_l_sta
      +                          te, V.failed_receive, V.t_l_state, V.failed_send, V.checksum_error, V.stack);
  4974  010B64  EE23  F01B         	lfsr	2,_V+333	;volatile
  4975  010B68  50DF               	movf	223,w,c
  4976  010B6A  0B07               	andlw	7
  4977  010B6C  6EE6               	movwf	postinc1,c
  4978  010B6E  0E00               	movlw	0
  4979  010B70  6EE6               	movwf	postinc1,c
  4980  010B72  EE23  F00D         	lfsr	2,_V+319	;volatile
  4981  010B76  006F FF78  F042    	movff	postinc2,btemp+10
  4982  010B7C  006F FF74  F043    	movff	postdec2,btemp+11
  4983  010B82  0060  F10B  FFE6   	movff	btemp+10,postinc1
  4984  010B88  0060  F10F  FFE6   	movff	btemp+11,postinc1
  4985  010B8E  EE23  F019         	lfsr	2,_V+331	;volatile
  4986  010B92  38DF               	swapf	223,w,c
  4987  010B94  0B0F               	andlw	15
  4988  010B96  6EE6               	movwf	postinc1,c
  4989  010B98  0E00               	movlw	0
  4990  010B9A  6EE6               	movwf	postinc1,c
  4991  010B9C  EE22  F2D4         	lfsr	2,_V+6	;volatile
  4992  010BA0  50DF               	movf	indf2,w,c
  4993  010BA2  6EE6               	movwf	postinc1,c
  4994  010BA4  0E00               	movlw	0
  4995  010BA6  6EE6               	movwf	postinc1,c
  4996  010BA8  EE23  F01A         	lfsr	2,_V+332	;volatile
  4997  010BAC  50DF               	movf	223,w,c
  4998  010BAE  0B0F               	andlw	15
  4999  010BB0  6EE6               	movwf	postinc1,c
  5000  010BB2  0E00               	movlw	0
  5001  010BB4  6EE6               	movwf	postinc1,c
  5002  010BB6  EE22  F2D3         	lfsr	2,_V+5	;volatile
  5003  010BBA  50DF               	movf	indf2,w,c
  5004  010BBC  6EE6               	movwf	postinc1,c
  5005  010BBE  0E00               	movlw	0
  5006  010BC0  6EE6               	movwf	postinc1,c
  5007  010BC2  0EF2               	movlw	low STR_25
  5008  010BC4  6EE6               	movwf	postinc1,c
  5009  010BC6  0EFC               	movlw	high STR_25
  5010  010BC8  6EE6               	movwf	postinc1,c
  5011  010BCA  0E00               	movlw	0
  5012  010BCC  6EE6               	movwf	postinc1,c
  5013  010BCE  0E01               	movlw	1
  5014  010BD0  6EE6               	movwf	postinc1,c
  5015  010BD2  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  5016  010BD6  0060  F0E3  FFE6   	movff	btemp,postinc1
  5017  010BDC  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  5018  010BE2  0E10               	movlw	16
  5019  010BE4  6EE6               	movwf	postinc1,c
  5020  010BE6  EC13  F0AB         	call	_sprintf	;wreg free
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;main.c: 903:     StartTimer(TMR_DISPLAY, 100);
  5024  010BEA  0E64               	movlw	100
  5025  010BEC  6EE6               	movwf	postinc1,c
  5026  010BEE  0E00               	movlw	0
  5027  010BF0  6EE6               	movwf	postinc1,c
  5028  010BF2  0E0A               	movlw	10
  5029  010BF4  6EE6               	movwf	postinc1,c
  5030  010BF6  EC26  F0B5         	call	_StartTimer	;wreg free
  5031                           
  5032                           ;main.c: 904:     update_lcd(0);
  5033  010BFA  0E00               	movlw	0
  5034  010BFC  6EE6               	movwf	postinc1,c
  5035  010BFE  EC8B  F0AA         	call	_update_lcd	;wreg free
  5036  010C02                     l17238:
  5037                           
  5038                           ;main.c: 910:   check_help();
  5039  010C02  ECC9  F0A4         	call	_check_help	;wreg free
  5040                           
  5041                           ;main.c: 915:   if (V.set_sequ) {
  5042  010C06  EE23  F019         	lfsr	2,_V+331	;volatile
  5043  010C0A  A6DF               	btfss	indf2,3,c
  5044  010C0C  D747               	goto	l17212
  5045                           
  5046                           ;main.c: 916:    if (TimerDone(TMR_INFO)) {
  5047  010C0E  0E07               	movlw	7
  5048  010C10  6EE6               	movwf	postinc1,c
  5049  010C12  ECF5  F0B7         	call	_TimerDone	;wreg free
  5050  010C16  5038               	movf	btemp,w,c
  5051  010C18  B4D8               	btfsc	status,2,c
  5052  010C1A  D00C               	goto	l17250
  5053                           
  5054                           ;main.c: 917:     V.set_sequ = 0;
  5055  010C1C  EE23  F019         	lfsr	2,_V+331	;volatile
  5056  010C20  96DF               	bcf	indf2,3,c
  5057                           
  5058                           ;main.c: 918:     set_vterm(0);
  5059  010C22  0E00               	movlw	0
  5060  010C24  6EE6               	movwf	postinc1,c
  5061  010C26  EC8E  F0B8         	call	_set_vterm	;wreg free
  5062                           
  5063                           ;main.c: 919:     update_lcd(0);
  5064  010C2A  0E00               	movlw	0
  5065  010C2C  6EE6               	movwf	postinc1,c
  5066  010C2E  EC8B  F0AA         	call	_update_lcd	;wreg free
  5067                           
  5068                           ;main.c: 920:    } else {
  5069  010C32  D734               	goto	l17212
  5070  010C34                     l17250:
  5071                           
  5072                           ;main.c: 921:     set_vterm(2);
  5073  010C34  0E02               	movlw	2
  5074  010C36  6EE6               	movwf	postinc1,c
  5075  010C38  EC8E  F0B8         	call	_set_vterm	;wreg free
  5076                           
  5077                           ;main.c: 922:     update_lcd(2);
  5078  010C3C  0E02               	movlw	2
  5079  010C3E  6EE6               	movwf	postinc1,c
  5080  010C40  EC8B  F0AA         	call	_update_lcd	;wreg free
  5081  010C44  D72B               	goto	l17212
  5082  010C46                     __end_of_main:
  5083                           	opt callstack 0
  5084                           
  5085 ;; *************** function _t_protocol *****************
  5086 ;; Defined at:
  5087 ;;		line 384 in file "gemsecs.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  t_link          2  [STACK] PTR enum E16753
  5090 ;;		 -> V(384), 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  rxData          1  [STACK] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1  [STACK] enum E17031
  5095 ;; Registers used:
  5096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/3C
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:   14
  5109 ;; This function calls:
  5110 ;;		_StartTimer
  5111 ;;		_TimerDone
  5112 ;;		_UART1_Read
  5113 ;;		_UART1_Write
  5114 ;;		_UART1_is_rx_ready
  5115 ;;		_UART1_put_buffer
  5116 ;;		_secs_II_message
  5117 ;;		_secs_send
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;; This function uses a reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text1
  5124  013064                     __ptext1:
  5125                           	opt callstack 0
  5126  013064                     _t_protocol:
  5127                           	opt callstack 0
  5128                           
  5129                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5130  013064  52E6               	movf	postinc1,f,c
  5131                           
  5132                           ;gemsecs.c: 384: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 385: {;gemsecs.
      +                          c: 386:  uint8_t rxData;;gemsecs.c: 387:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          388:  static response_type block;;gemsecs.c: 390:  switch (*t_link) {
  5133                           
  5134                           ;incstack = 0
  5135  013066  D15E               	goto	l16708
  5136  013068                     l1904:
  5137                           
  5138                           ;gemsecs.c: 393:   V.error = LINK_ERROR_NONE;
  5139  013068  0E0A               	movlw	10
  5140  01306A  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  5141                           
  5142                           ;gemsecs.c: 394:   retry = 3;
  5143  013070  0E03               	movlw	3
  5144  013072  6E21               	movwf	t_protocol@retry,c
  5145                           
  5146                           ;gemsecs.c: 395:   UART1_Write(0x05);
  5147  013074  0E05               	movlw	5
  5148  013076  6EE6               	movwf	postinc1,c
  5149  013078  EC6D  F0B4         	call	_UART1_Write	;wreg free
  5150                           
  5151                           ; BSR set to: 57
  5152                           ;gemsecs.c: 396:   StartTimer(TMR_T2, 3000);
  5153  01307C  0EB8               	movlw	184
  5154  01307E  6EE6               	movwf	postinc1,c
  5155  013080  0E0B               	movlw	11
  5156  013082  6EE6               	movwf	postinc1,c
  5157  013084  0E02               	movlw	2
  5158  013086  6EE6               	movwf	postinc1,c
  5159  013088  EC26  F0B5         	call	_StartTimer	;wreg free
  5160                           
  5161                           ;gemsecs.c: 397:   *t_link = LINK_STATE_ENQ;
  5162                           ;stkvar	_t_link @ sp[(-1)+-2]
  5163  01308C  0EFD               	movlw	-3
  5164  01308E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5165  013094  0EFE               	movlw	-2
  5166  013096  006F FF8F FFDA     	movff	plusw1,fsr2h
  5167  01309C  0E01               	movlw	1
  5168  01309E  D140               	goto	L8
  5169  0130A0                     l16610:
  5170                           
  5171                           ;gemsecs.c: 404:   if (TimerDone(TMR_T2)) {
  5172  0130A0  0E02               	movlw	2
  5173  0130A2  6EE6               	movwf	postinc1,c
  5174  0130A4  ECF5  F0B7         	call	_TimerDone	;wreg free
  5175  0130A8  5038               	movf	btemp,w,c
  5176  0130AA  B4D8               	btfsc	status,2,c
  5177  0130AC  D026               	goto	l16624
  5178                           
  5179                           ;gemsecs.c: 405:    V.timer_error++;
  5180  0130AE  EE23  F00F         	lfsr	2,_V+321	;volatile
  5181  0130B2  2ADE               	incf	postinc2,f,c
  5182  0130B4  0E00               	movlw	0
  5183  0130B6  22DD               	addwfc	postdec2,f,c
  5184                           
  5185                           ;gemsecs.c: 406:    if (!retry--) {
  5186  0130B8  0621               	decf	t_protocol@retry,f,c
  5187  0130BA  2821               	incf	t_protocol@retry,w,c
  5188  0130BC  A4D8               	btfss	status,2,c
  5189  0130BE  D014               	goto	l16622
  5190                           
  5191                           ;gemsecs.c: 407:     V.error = LINK_ERROR_T2;
  5192  0130C0  0E0C               	movlw	12
  5193  0130C2  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  5194                           
  5195                           ;gemsecs.c: 408:     V.failed_send = 1;
  5196  0130C8  EE23  F019         	lfsr	2,_V+331	;volatile
  5197  0130CC  50DF               	movf	223,w,c
  5198  0130CE  0B0F               	andlw	-241
  5199  0130D0  0910               	iorlw	16
  5200  0130D2  6EDF               	movwf	223,c
  5201                           
  5202                           ;gemsecs.c: 409:     *t_link = LINK_STATE_NAK;
  5203                           ;stkvar	_t_link @ sp[(-1)+-2]
  5204  0130D4  0EFD               	movlw	-3
  5205  0130D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5206  0130DC  0EFE               	movlw	-2
  5207  0130DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5208  0130E4  0E05               	movlw	5
  5209  0130E6  D11C               	goto	L8
  5210  0130E8                     l16622:
  5211                           
  5212                           ;gemsecs.c: 411:     StartTimer(TMR_T2, 3000);
  5213  0130E8  0EB8               	movlw	184
  5214  0130EA  6EE6               	movwf	postinc1,c
  5215  0130EC  0E0B               	movlw	11
  5216  0130EE  6EE6               	movwf	postinc1,c
  5217  0130F0  0E02               	movlw	2
  5218  0130F2  6EE6               	movwf	postinc1,c
  5219  0130F4  EC26  F0B5         	call	_StartTimer	;wreg free
  5220  0130F8  D13A               	goto	l16710
  5221  0130FA                     l16624:
  5222                           
  5223                           ;gemsecs.c: 414:    if (UART1_is_rx_ready()) {
  5224  0130FA  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
  5225  0130FE  5038               	movf	btemp,w,c
  5226  013100  B4D8               	btfsc	status,2,c
  5227  013102  D135               	goto	l16710
  5228                           
  5229                           ;gemsecs.c: 415:     rxData = UART1_Read();
  5230  013104  ECEA  F0B4         	call	_UART1_Read	;wreg free
  5231                           
  5232                           ;stkvar	_rxData @ sp[(-1)+0]
  5233  013108  0EFF               	movlw	-1
  5234  01310A  0060  F0E3  FFE3   	movff	btemp,plusw1
  5235                           
  5236                           ; BSR set to: 57
  5237                           ;gemsecs.c: 416:     if (rxData == 0x04) {
  5238                           ;stkvar	_rxData @ sp[(-1)+0]
  5239  013110  0EFF               	movlw	-1
  5240  013112  006F FF8C  F038    	movff	plusw1,btemp
  5241  013118  0E04               	movlw	4
  5242  01311A  1838               	xorwf	btemp,w,c
  5243  01311C  A4D8               	btfss	status,2,c
  5244  01311E  D012               	goto	l16634
  5245                           
  5246                           ; BSR set to: 57
  5247                           ;gemsecs.c: 417:      StartTimer(TMR_T3, 5000);
  5248  013120  0E88               	movlw	136
  5249  013122  6EE6               	movwf	postinc1,c
  5250  013124  0E13               	movlw	19
  5251  013126  6EE6               	movwf	postinc1,c
  5252  013128  0E03               	movlw	3
  5253  01312A  6EE6               	movwf	postinc1,c
  5254  01312C  EC26  F0B5         	call	_StartTimer	;wreg free
  5255                           
  5256                           ;gemsecs.c: 418:      *t_link = LINK_STATE_EOT;
  5257                           ;stkvar	_t_link @ sp[(-1)+-2]
  5258  013130  0EFD               	movlw	-3
  5259  013132  006F FF8F FFD9     	movff	plusw1,fsr2l
  5260  013138  0EFE               	movlw	-2
  5261  01313A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5262  013140  0E02               	movlw	2
  5263  013142  6EDF               	movwf	indf2,c
  5264  013144                     l16634:
  5265                           
  5266                           ;gemsecs.c: 420:     if (rxData == 0x05) {
  5267                           ;stkvar	_rxData @ sp[(-1)+0]
  5268  013144  0EFF               	movlw	-1
  5269  013146  006F FF8C  F038    	movff	plusw1,btemp
  5270  01314C  0E05               	movlw	5
  5271  01314E  1838               	xorwf	btemp,w,c
  5272  013150  A4D8               	btfss	status,2,c
  5273  013152  D10D               	goto	l16710
  5274                           
  5275                           ;gemsecs.c: 421:      UART1_put_buffer(0x04);
  5276  013154  0E04               	movlw	4
  5277  013156  6EE6               	movwf	postinc1,c
  5278  013158  EC66  F0B6         	call	_UART1_put_buffer	;wreg free
  5279                           
  5280                           ; BSR set to: 57
  5281                           ;gemsecs.c: 422:      *t_link = LINK_STATE_DONE;
  5282                           ;stkvar	_t_link @ sp[(-1)+-2]
  5283  01315C  0EFD               	movlw	-3
  5284  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5285  013164  0EFE               	movlw	-2
  5286  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
  5287  01316C  0E04               	movlw	4
  5288  01316E  D0D8               	goto	L8
  5289  013170                     l16640:
  5290                           
  5291                           ;gemsecs.c: 428:   if (!requeue)
  5292  013170  5020               	movf	t_protocol@requeue,w,c
  5293  013172  A4D8               	btfss	status,2,c
  5294  013174  D013               	goto	l16644
  5295                           
  5296                           ;gemsecs.c: 429:    block = secs_II_message(V.stream, V.function);
  5297  013176  EE23  F002         	lfsr	2,_V+308	;volatile
  5298  01317A  50DF               	movf	indf2,w,c
  5299  01317C  6EE6               	movwf	postinc1,c
  5300  01317E  EE23  F001         	lfsr	2,_V+307	;volatile
  5301  013182  50DF               	movf	indf2,w,c
  5302  013184  6EE6               	movwf	postinc1,c
  5303  013186  EC3E  F08D         	call	_secs_II_message	;wreg free
  5304  01318A  EE20  F091         	lfsr	2,t_protocol@block
  5305  01318E  0E06               	movlw	6
  5306  013190                     u11361:
  5307  013190  52E5               	movf	postdec1,f,c
  5308  013192  006F FF9F FFDB     	movff	indf1,plusw2
  5309  013198  06E8               	decf	wreg,f,c
  5310  01319A  E2FA               	bc	u11361
  5311  01319C                     l16644:
  5312                           
  5313                           ;gemsecs.c: 431:   if (V.abort == LINK_ERROR_ABORT) {
  5314  01319C  0063  F013  FFE8   	movff	_V+310,wreg	;volatile
  5315  0131A2  0A11               	xorlw	17
  5316  0131A4  A4D8               	btfss	status,2,c
  5317  0131A6  D01F               	goto	l16652
  5318                           
  5319                           ;gemsecs.c: 432:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  5320  0131A8  0E01               	movlw	1
  5321  0131AA  6EE6               	movwf	postinc1,c
  5322  0131AC  0E00               	movlw	0
  5323  0131AE  6EE6               	movwf	postinc1,c
  5324  0131B0  0100               	movlb	0	; () banked
  5325  0131B2  5193               	movf	(t_protocol@block+2)& (0+255),w,b
  5326  0131B4  6EE6               	movwf	postinc1,c
  5327  0131B6  0060  F247  FFE6   	movff	t_protocol@block,postinc1
  5328  0131BC  0060  F24B  FFE6   	movff	t_protocol@block+1,postinc1
  5329  0131C2  EC9A  F09C         	call	_secs_send	;wreg free
  5330                           
  5331                           ;gemsecs.c: 433:    V.failed_send = 2;
  5332  0131C6  EE23  F019         	lfsr	2,_V+331	;volatile
  5333  0131CA  50DF               	movf	223,w,c
  5334  0131CC  0B0F               	andlw	-241
  5335  0131CE  0920               	iorlw	32
  5336  0131D0  6EDF               	movwf	223,c
  5337                           
  5338                           ;gemsecs.c: 434:    *t_link = LINK_STATE_ERROR;
  5339                           ;stkvar	_t_link @ sp[(-1)+-2]
  5340  0131D2  0EFD               	movlw	-3
  5341  0131D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  5342  0131DA  0EFE               	movlw	-2
  5343  0131DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  5344  0131E2  0E06               	movlw	6
  5345  0131E4  D09D               	goto	L8
  5346  0131E6                     l16652:
  5347                           
  5348                           ;gemsecs.c: 436:    if (!requeue) {
  5349  0131E6  5020               	movf	t_protocol@requeue,w,c
  5350  0131E8  A4D8               	btfss	status,2,c
  5351  0131EA  D016               	goto	l1918
  5352                           
  5353                           ;gemsecs.c: 437:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  5354  0131EC  0E01               	movlw	1
  5355  0131EE  6EE6               	movwf	postinc1,c
  5356  0131F0  0E00               	movlw	0
  5357  0131F2  6EE6               	movwf	postinc1,c
  5358  0131F4  0100               	movlb	0	; () banked
  5359  0131F6  5193               	movf	(t_protocol@block+2)& (0+255),w,b
  5360  0131F8  6EE6               	movwf	postinc1,c
  5361  0131FA  0060  F247  FFE6   	movff	t_protocol@block,postinc1
  5362  013200  0060  F24B  FFE6   	movff	t_protocol@block+1,postinc1
  5363  013206  EC9A  F09C         	call	_secs_send	;wreg free
  5364                           
  5365                           ;gemsecs.c: 438:     if (V.queue)
  5366  01320A  EE23  F01A         	lfsr	2,_V+332	;volatile
  5367  01320E  A8DF               	btfss	indf2,4,c
  5368  013210  D016               	goto	l16664
  5369                           
  5370                           ;gemsecs.c: 439:      requeue = 1;
  5371  013212  0E01               	movlw	1
  5372  013214  6E20               	movwf	t_protocol@requeue,c
  5373  013216  D013               	goto	l16664
  5374  013218                     l1918:
  5375                           
  5376                           ;gemsecs.c: 441:     requeue = 0;
  5377  013218  6A20               	clrf	t_protocol@requeue,c
  5378                           
  5379                           ;gemsecs.c: 442:     V.queue = 0;
  5380  01321A  EE23  F01A         	lfsr	2,_V+332	;volatile
  5381  01321E  98DF               	bcf	indf2,4,c
  5382                           
  5383                           ;gemsecs.c: 443:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  5384  013220  0E01               	movlw	1
  5385  013222  6EE6               	movwf	postinc1,c
  5386  013224  0E00               	movlw	0
  5387  013226  6EE6               	movwf	postinc1,c
  5388  013228  0100               	movlb	0	; () banked
  5389  01322A  5196               	movf	(t_protocol@block+5)& (0+255),w,b
  5390  01322C  6EE6               	movwf	postinc1,c
  5391  01322E  0060  F253  FFE6   	movff	t_protocol@block+3,postinc1
  5392  013234  0060  F257  FFE6   	movff	t_protocol@block+4,postinc1
  5393  01323A  EC9A  F09C         	call	_secs_send	;wreg free
  5394  01323E                     l16664:
  5395                           
  5396                           ;gemsecs.c: 445:    if (V.error == LINK_ERROR_NONE) {
  5397  01323E  0063  F00F  FFE8   	movff	_V+309,wreg	;volatile
  5398  013244  0A0A               	xorlw	10
  5399  013246  A4D8               	btfss	status,2,c
  5400  013248  D00A               	goto	l16668
  5401                           
  5402                           ;gemsecs.c: 446:     *t_link = LINK_STATE_ACK;
  5403                           ;stkvar	_t_link @ sp[(-1)+-2]
  5404  01324A  0EFD               	movlw	-3
  5405  01324C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5406  013252  0EFE               	movlw	-2
  5407  013254  006F FF8F FFDA     	movff	plusw1,fsr2h
  5408  01325A  0E03               	movlw	3
  5409  01325C  D061               	goto	L8
  5410  01325E                     l16668:
  5411                           
  5412                           ;gemsecs.c: 448:     V.failed_send = 3;
  5413  01325E  EE23  F019         	lfsr	2,_V+331	;volatile
  5414  013262  50DF               	movf	223,w,c
  5415  013264  0B0F               	andlw	-241
  5416  013266  0930               	iorlw	48
  5417  013268  D7B3               	goto	L9
  5418  01326A                     l16672:
  5419                           
  5420                           ;gemsecs.c: 461:   if (TimerDone(TMR_T3)) {
  5421  01326A  0E03               	movlw	3
  5422  01326C  6EE6               	movwf	postinc1,c
  5423  01326E  ECF5  F0B7         	call	_TimerDone	;wreg free
  5424  013272  5038               	movf	btemp,w,c
  5425  013274  B4D8               	btfsc	status,2,c
  5426  013276  D00F               	goto	l16682
  5427                           
  5428                           ;gemsecs.c: 462:    V.timer_error++;
  5429  013278  EE23  F00F         	lfsr	2,_V+321	;volatile
  5430  01327C  2ADE               	incf	postinc2,f,c
  5431  01327E  0E00               	movlw	0
  5432  013280  22DD               	addwfc	postdec2,f,c
  5433                           
  5434                           ;gemsecs.c: 463:    V.error = LINK_ERROR_T3;
  5435  013282  0E0D               	movlw	13
  5436  013284  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  5437                           
  5438                           ;gemsecs.c: 464:    V.failed_send = 4;
  5439  01328A  EE23  F019         	lfsr	2,_V+331	;volatile
  5440  01328E  50DF               	movf	223,w,c
  5441  013290  0B0F               	andlw	-241
  5442  013292  0940               	iorlw	64
  5443  013294  D71E               	goto	L10
  5444  013296                     l16682:
  5445                           
  5446                           ;gemsecs.c: 467:    if (UART1_is_rx_ready()) {
  5447  013296  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
  5448  01329A  5038               	movf	btemp,w,c
  5449  01329C  B4D8               	btfsc	status,2,c
  5450  01329E  D067               	goto	l16710
  5451                           
  5452                           ;gemsecs.c: 468:     rxData = UART1_Read();
  5453  0132A0  ECEA  F0B4         	call	_UART1_Read	;wreg free
  5454                           
  5455                           ;stkvar	_rxData @ sp[(-1)+0]
  5456  0132A4  0EFF               	movlw	-1
  5457  0132A6  0060  F0E3  FFE3   	movff	btemp,plusw1
  5458                           
  5459                           ; BSR set to: 57
  5460                           ;gemsecs.c: 469:     if (rxData == 0x06) {
  5461                           ;stkvar	_rxData @ sp[(-1)+0]
  5462  0132AC  0EFF               	movlw	-1
  5463  0132AE  006F FF8C  F038    	movff	plusw1,btemp
  5464  0132B4  0E06               	movlw	6
  5465  0132B6  1838               	xorwf	btemp,w,c
  5466  0132B8  A4D8               	btfss	status,2,c
  5467  0132BA  D059               	goto	l16710
  5468                           
  5469                           ; BSR set to: 57
  5470                           ;gemsecs.c: 470:      V.failed_send = 0;
  5471  0132BC  EE23  F019         	lfsr	2,_V+331	;volatile
  5472  0132C0  0E0F               	movlw	-241
  5473  0132C2  16DF               	andwf	223,f,c
  5474                           
  5475                           ; BSR set to: 57
  5476                           ;gemsecs.c: 471:      *t_link = LINK_STATE_DONE;
  5477                           ;stkvar	_t_link @ sp[(-1)+-2]
  5478  0132C4  0EFD               	movlw	-3
  5479  0132C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5480  0132CC  0EFE               	movlw	-2
  5481  0132CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5482  0132D4  0E04               	movlw	4
  5483  0132D6  6EDF               	movwf	indf2,c
  5484  0132D8                     l16692:
  5485                           
  5486                           ;gemsecs.c: 472:      V.abort = LINK_ERROR_NONE;
  5487  0132D8  0E0A               	movlw	10
  5488  0132DA  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
  5489  0132E0  D046               	goto	l16710
  5490  0132E2                     l16694:
  5491                           
  5492                           ;gemsecs.c: 479:   *t_link = LINK_STATE_ERROR;
  5493                           ;stkvar	_t_link @ sp[(-1)+-2]
  5494  0132E2  0EFD               	movlw	-3
  5495  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  5496  0132EA  0EFE               	movlw	-2
  5497  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  5498  0132F2  0E06               	movlw	6
  5499  0132F4  6EDF               	movwf	indf2,c
  5500                           
  5501                           ;gemsecs.c: 480:   while ((uart1RxCount)) {
  5502  0132F6  D002               	goto	l16698
  5503  0132F8                     l16696:
  5504                           
  5505                           ;gemsecs.c: 481:    UART1_Read();
  5506  0132F8  ECEA  F0B4         	call	_UART1_Read	;wreg free
  5507  0132FC                     l16698:
  5508                           
  5509                           ;gemsecs.c: 480:   while ((uart1RxCount)) {
  5510  0132FC  502B               	movf	_uart1RxCount,w,c	;volatile
  5511  0132FE  B4D8               	btfsc	status,2,c
  5512  013300  D036               	goto	l16710
  5513  013302  D7FA               	goto	l16696
  5514  013304                     l16700:
  5515                           
  5516                           ;gemsecs.c: 487:   V.failed_send = 0;
  5517  013304  EE23  F019         	lfsr	2,_V+331	;volatile
  5518  013308  0E0F               	movlw	-241
  5519  01330A  16DF               	andwf	223,f,c
  5520  01330C  D7E5               	goto	l16692
  5521  01330E                     l16704:
  5522                           
  5523                           ;gemsecs.c: 492:   *t_link = LINK_STATE_IDLE;
  5524                           ;stkvar	_t_link @ sp[(-1)+-2]
  5525  01330E  0EFD               	movlw	-3
  5526  013310  006F FF8F FFD9     	movff	plusw1,fsr2l
  5527  013316  0EFE               	movlw	-2
  5528  013318  006F FF8F FFDA     	movff	plusw1,fsr2h
  5529  01331E  0E00               	movlw	0
  5530  013320                     L8:
  5531  013320  6EDF               	movwf	indf2,c
  5532                           
  5533                           ;gemsecs.c: 493:   break;
  5534  013322  D025               	goto	l16710
  5535  013324                     l16708:
  5536                           
  5537                           ;stkvar	_t_link @ sp[(-1)+-2]
  5538  013324  0EFD               	movlw	-3
  5539  013326  006F FF8F FFD9     	movff	plusw1,fsr2l
  5540  01332C  0EFE               	movlw	-2
  5541  01332E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5542  013334  50DF               	movf	indf2,w,c
  5543  013336  6E42               	movwf	btemp+10,c
  5544  013338  6A43               	clrf	btemp+11,c
  5545                           
  5546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5547                           ; Switch size 1, requested type "simple"
  5548                           ; Number of cases is 1, Range of values is 0 to 0
  5549                           ; switch strategies available:
  5550                           ; Name         Instructions Cycles
  5551                           ; simple_byte            4     3 (average)
  5552                           ;	Chosen strategy is simple_byte
  5553  01333A  5043               	movf	btemp+11,w,c
  5554  01333C  0A00               	xorlw	0	; case 0
  5555  01333E  A4D8               	btfss	status,2,c
  5556  013340  D7E6               	goto	l16704
  5557                           
  5558                           ; Switch size 1, requested type "simple"
  5559                           ; Number of cases is 7, Range of values is 0 to 6
  5560                           ; switch strategies available:
  5561                           ; Name         Instructions Cycles
  5562                           ; simple_byte           22    12 (average)
  5563                           ;	Chosen strategy is simple_byte
  5564  013342  5042               	movf	btemp+10,w,c
  5565  013344  0A00               	xorlw	0	; case 0
  5566  013346  B4D8               	btfsc	status,2,c
  5567  013348  D68F               	goto	l1904
  5568  01334A  0A01               	xorlw	1	; case 1
  5569  01334C  B4D8               	btfsc	status,2,c
  5570  01334E  D6A8               	goto	l16610
  5571  013350  0A03               	xorlw	3	; case 2
  5572  013352  B4D8               	btfsc	status,2,c
  5573  013354  D70D               	goto	l16640
  5574  013356  0A01               	xorlw	1	; case 3
  5575  013358  B4D8               	btfsc	status,2,c
  5576  01335A  D787               	goto	l16672
  5577  01335C  0A07               	xorlw	7	; case 4
  5578  01335E  B4D8               	btfsc	status,2,c
  5579  013360  D7D1               	goto	l16700
  5580  013362  0A01               	xorlw	1	; case 5
  5581  013364  B4D8               	btfsc	status,2,c
  5582  013366  D7BD               	goto	l16694
  5583  013368  0A03               	xorlw	3	; case 6
  5584  01336A  A4D8               	btfss	status,2,c
  5585  01336C  D7D0               	goto	l16704
  5586  01336E                     l16710:
  5587                           
  5588                           ;gemsecs.c: 496:  return *t_link;
  5589                           ;stkvar	_t_link @ sp[(-1)+-2]
  5590  01336E  0EFD               	movlw	-3
  5591  013370  006F FF8F FFD9     	movff	plusw1,fsr2l
  5592  013376  0EFE               	movlw	-2
  5593  013378  006F FF8F FFDA     	movff	plusw1,fsr2h
  5594  01337E  50DF               	movf	indf2,w,c
  5595  013380  6E38               	movwf	btemp,c
  5596                           
  5597                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  5598  013382  52E5               	movf	postdec1,f,c
  5599  013384  52E5               	movf	postdec1,f,c
  5600  013386  52E5               	movf	postdec1,f,c
  5601  013388  0012               	return		;funcret
  5602  01338A                     __end_of_t_protocol:
  5603                           	opt callstack 0
  5604                           
  5605 ;; *************** function _secs_send *****************
  5606 ;; Defined at:
  5607 ;;		line 500 in file "gemsecs.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  byte_block      2  [STACK] PTR unsigned char 
  5610 ;;		 -> S(460), H53(112), H33(36), H26(29), 
  5611 ;;		 -> H17(20), H14(17), H13(64), H12(30), 
  5612 ;;		 -> H10(91), 
  5613 ;;  length          1  [STACK] const unsigned char 
  5614 ;;  fake            1  [STACK] const _Bool 
  5615 ;;  s_uart          1  [STACK] const unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  k               2  [STACK] PTR unsigned char 
  5618 ;;		 -> S(460), H53(112), H33(36), H26(29), 
  5619 ;;		 -> H17(20), H14(17), H13(64), H12(30), 
  5620 ;;		 -> H10(91), 
  5621 ;;  checksum        2  [STACK] unsigned short 
  5622 ;;  i               1  [STACK] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1  [STACK] _Bool 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
  5627 ;; Tracked objects:
  5628 ;;		On entry : 3F/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    4
  5639 ;; This function calls:
  5640 ;;		_UART1_Write
  5641 ;;		_UART1_is_tx_ready
  5642 ;;		_UART1_put_buffer
  5643 ;;		_UART2_Write
  5644 ;;		_UART2_is_tx_ready
  5645 ;;		_UART2_put_buffer
  5646 ;;		_block_checksum
  5647 ;; This function is called by:
  5648 ;;		_t_protocol
  5649 ;; This function uses a reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text2
  5653  013934                     __ptext2:
  5654                           	opt callstack 0
  5655  013934                     _secs_send:
  5656                           	opt callstack 0
  5657                           
  5658                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5659  013934  0E05               	movlw	5
  5660  013936  26E1               	addwf	fsr1l,f,c
  5661  013938  0E00               	movlw	0
  5662  01393A  22E2               	addwfc	fsr1h,f,c
  5663                           
  5664                           ;gemsecs.c: 500: static _Bool secs_send(uint8_t *byte_block, const uint8_t length, const
      +                           _Bool fake, const uint8_t s_uart);gemsecs.c: 501: {;gemsecs.c: 502:  uint8_t i, *k;;gem
      +                          secs.c: 503:  uint16_t checksum;;gemsecs.c: 505:  k = (uint8_t *) byte_block;
  5665                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5666                           
  5667                           ;incstack = 0
  5668  01393C  0EF9               	movlw	-7
  5669  01393E  006F FF8C  F042    	movff	plusw1,btemp+10
  5670  013944  0EFA               	movlw	-6
  5671  013946  006F FF8C  F043    	movff	plusw1,btemp+11
  5672                           
  5673                           ;stkvar	_k @ sp[(-5)+0]
  5674  01394C  0EFC               	movlw	-4
  5675  01394E  0060  F10F  FFE3   	movff	btemp+11,plusw1
  5676  013954  0EFB               	movlw	-5
  5677  013956  0060  F10B  FFE3   	movff	btemp+10,plusw1
  5678                           
  5679                           ;gemsecs.c: 507:  ++V.ticks;
  5680  01395C  EE22  F3F5         	lfsr	2,_V+295	;volatile
  5681  013960  2ADE               	incf	postinc2,f,c
  5682  013962  0E00               	movlw	0
  5683  013964  22DE               	addwfc	postinc2,f,c
  5684  013966  22DE               	addwfc	postinc2,f,c
  5685  013968  22DE               	addwfc	postinc2,f,c
  5686                           
  5687                           ;gemsecs.c: 508:  V.error = LINK_ERROR_NONE;
  5688  01396A  0E0A               	movlw	10
  5689  01396C  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  5690                           
  5691                           ;gemsecs.c: 509:  if ((length - 3) != k[length - 1]) {
  5692                           ;stkvar	_length @ sp[(-5)+-3]
  5693  013972  0EF8               	movlw	-8
  5694  013974  50E3               	movf	plusw1,w,c
  5695  013976  6E42               	movwf	btemp+10,c
  5696  013978  6A43               	clrf	btemp+11,c
  5697                           
  5698                           ;stkvar	_k @ sp[(-5)+0]
  5699  01397A  0EFB               	movlw	-5
  5700  01397C  50E3               	movf	plusw1,w,c
  5701  01397E  2642               	addwf	btemp+10,f,c
  5702  013980  0EFC               	movlw	-4
  5703  013982  50E3               	movf	plusw1,w,c
  5704  013984  2243               	addwfc	btemp+11,f,c
  5705  013986  0EFF               	movlw	255
  5706  013988  2442               	addwf	btemp+10,w,c
  5707  01398A  6ED9               	movwf	fsr2l,c
  5708  01398C  0EFF               	movlw	255
  5709  01398E  2043               	addwfc	btemp+11,w,c
  5710  013990  6EDA               	movwf	fsr2h,c
  5711  013992  50DF               	movf	indf2,w,c
  5712  013994  6E42               	movwf	btemp+10,c
  5713  013996  6A43               	clrf	btemp+11,c
  5714  013998  0EFD               	movlw	253
  5715  01399A  6E40               	movwf	btemp+8,c
  5716  01399C  0EFF               	movlw	255
  5717  01399E  6E41               	movwf	btemp+9,c
  5718                           
  5719                           ;stkvar	_length @ sp[(-5)+-3]
  5720  0139A0  0EF8               	movlw	-8
  5721  0139A2  50E3               	movf	plusw1,w,c
  5722  0139A4  6E3E               	movwf	btemp+6,c
  5723  0139A6  6A3F               	clrf	btemp+7,c
  5724  0139A8  5040               	movf	btemp+8,w,c
  5725  0139AA  263E               	addwf	btemp+6,f,c
  5726  0139AC  5041               	movf	btemp+9,w,c
  5727  0139AE  223F               	addwfc	btemp+7,f,c
  5728  0139B0  5042               	movf	btemp+10,w,c
  5729  0139B2  183E               	xorwf	btemp+6,w,c
  5730  0139B4  E104               	bnz	u8840
  5731  0139B6  5043               	movf	btemp+11,w,c
  5732  0139B8  183F               	xorwf	btemp+7,w,c
  5733  0139BA  B4D8               	btfsc	status,2,c
  5734  0139BC  D00B               	goto	l13392
  5735  0139BE                     u8840:
  5736                           
  5737                           ;gemsecs.c: 510:   V.error = LINK_ERROR_SEND;
  5738  0139BE  0E12               	movlw	18
  5739  0139C0  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  5740                           
  5741                           ;gemsecs.c: 511:   V.failed_send = 1;
  5742  0139C6  EE23  F019         	lfsr	2,_V+331	;volatile
  5743  0139CA  50DF               	movf	223,w,c
  5744  0139CC  0B0F               	andlw	-241
  5745  0139CE  0910               	iorlw	16
  5746  0139D0  6EDF               	movwf	223,c
  5747  0139D2  D0EF               	goto	l1939
  5748  0139D4                     l13392:
  5749                           
  5750                           ;gemsecs.c: 520:  checksum = block_checksum(&k[2], length - 3);
  5751  0139D4  0EFD               	movlw	253
  5752  0139D6  6E42               	movwf	btemp+10,c
  5753  0139D8  0EFF               	movlw	255
  5754  0139DA  6E43               	movwf	btemp+11,c
  5755                           
  5756                           ;stkvar	_length @ sp[(-5)+-3]
  5757  0139DC  0EF8               	movlw	-8
  5758  0139DE  50E3               	movf	plusw1,w,c
  5759  0139E0  6E40               	movwf	btemp+8,c
  5760  0139E2  6A41               	clrf	btemp+9,c
  5761  0139E4  5042               	movf	btemp+10,w,c
  5762  0139E6  2640               	addwf	btemp+8,f,c
  5763  0139E8  5043               	movf	btemp+11,w,c
  5764  0139EA  2241               	addwfc	btemp+9,f,c
  5765  0139EC  0060  F103  FFE6   	movff	btemp+8,postinc1
  5766  0139F2  0060  F107  FFE6   	movff	btemp+9,postinc1
  5767                           
  5768                           ;stkvar	_k @ sp[(-7)+0]
  5769  0139F8  0EF9               	movlw	-7
  5770  0139FA  50E3               	movf	plusw1,w,c
  5771  0139FC  0F02               	addlw	2
  5772  0139FE  6E42               	movwf	btemp+10,c
  5773  013A00  0EFA               	movlw	-6
  5774  013A02  006F FF8C  F043    	movff	plusw1,btemp+11
  5775  013A08  0E00               	movlw	0
  5776  013A0A  2243               	addwfc	btemp+11,f,c
  5777  013A0C  0060  F10B  FFE6   	movff	btemp+10,postinc1
  5778  013A12  0060  F10F  FFE6   	movff	btemp+11,postinc1
  5779  013A18  EC08  F0AD         	call	_block_checksum	;wreg free
  5780                           
  5781                           ;stkvar	_checksum @ sp[(-5)+2]
  5782  013A1C  0EFD               	movlw	-3
  5783  013A1E  0060  F0E3  FFE3   	movff	btemp,plusw1
  5784  013A24  0EFE               	movlw	-2
  5785  013A26  0060  F0E7  FFE3   	movff	btemp+1,plusw1
  5786                           
  5787                           ;gemsecs.c: 521:  k[0] = checksum & 0xff;
  5788                           ;stkvar	_checksum @ sp[(-5)+2]
  5789                           ;stkvar	_k @ sp[(-5)+0]
  5790  013A2C  0EFB               	movlw	-5
  5791  013A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5792  013A34  0EFC               	movlw	-4
  5793  013A36  006F FF8F FFDA     	movff	plusw1,fsr2h
  5794  013A3C  0EFD               	movlw	-3
  5795  013A3E  006F FF8F FFDF     	movff	plusw1,indf2
  5796                           
  5797                           ;gemsecs.c: 522:  k[1] = (checksum >> 8)&0xff;
  5798                           ;stkvar	_checksum @ sp[(-5)+2]
  5799  013A44  0EFE               	movlw	254
  5800  013A46  24E1               	addwf	fsr1l,w,c
  5801  013A48  6ED9               	movwf	fsr2l,c
  5802  013A4A  0EFF               	movlw	255
  5803  013A4C  20E2               	addwfc	fsr1h,w,c
  5804  013A4E  6EDA               	movwf	fsr2h,c
  5805                           
  5806                           ;stkvar	_k @ sp[(-5)+0]
  5807  013A50  0EFB               	movlw	-5
  5808  013A52  006F FF8C  F042    	movff	plusw1,btemp+10
  5809  013A58  0EFC               	movlw	-4
  5810  013A5A  006F FF8C  F043    	movff	plusw1,btemp+11
  5811  013A60  0E01               	movlw	1
  5812  013A62  2442               	addwf	btemp+10,w,c
  5813  013A64  6EE9               	movwf	fsr0l,c
  5814  013A66  0E00               	movlw	0
  5815  013A68  2043               	addwfc	btemp+11,w,c
  5816  013A6A  6EEA               	movwf	fsr0h,c
  5817  013A6C  006F FF7F FFEF     	movff	indf2,indf0
  5818                           
  5819                           ;gemsecs.c: 523:  V.t_checksum = checksum;
  5820                           ;stkvar	_checksum @ sp[(-5)+2]
  5821  013A72  50E1               	movf	fsr1l,w,c
  5822  013A74  0FFD               	addlw	-3
  5823  013A76  6ED9               	movwf	fsr2l,c
  5824  013A78  50E2               	movf	fsr1h,w,c
  5825  013A7A  6EDA               	movwf	fsr2h,c
  5826  013A7C  0EFF               	movlw	255
  5827  013A7E  22DA               	addwfc	fsr2h,f,c
  5828  013A80  006F FF78  FC0B    	movff	postinc2,_V+317	;volatile
  5829  013A86  006F FF74  FC0C    	movff	postdec2,_V+318	;volatile
  5830                           
  5831                           ;gemsecs.c: 525:  switch (s_uart) {
  5832  013A8C  D082               	goto	l13438
  5833  013A8E                     l13400:
  5834  013A8E  EC9D  F0B9         	call	_UART2_is_tx_ready	;wreg free
  5835  013A92  0E3F               	movlw	63
  5836  013A94  6438               	cpfsgt	btemp,c
  5837  013A96  D7FB               	goto	l13400
  5838                           
  5839                           ;gemsecs.c: 528:   for (i = length; i > 0; i--) {
  5840                           ;stkvar	_length @ sp[(-5)+-3]
  5841                           ;stkvar	_i @ sp[(-5)+4]
  5842  013A98  0EF8               	movlw	-8
  5843  013A9A  006F FF8C  F038    	movff	plusw1,btemp
  5844  013AA0  0EFF               	movlw	-1
  5845  013AA2  0060  F0E3  FFE3   	movff	btemp,plusw1
  5846  013AA8                     l13404:
  5847                           
  5848                           ;stkvar	_i @ sp[(-5)+4]
  5849  013AA8  0EFF               	movlw	-1
  5850  013AAA  50E3               	movf	plusw1,w,c
  5851  013AAC  B4D8               	btfsc	status,2,c
  5852  013AAE  D081               	goto	l1939
  5853                           
  5854                           ;gemsecs.c: 529:    if (fake) {
  5855                           ;stkvar	_fake @ sp[(-5)+-4]
  5856  013AB0  0EF7               	movlw	-9
  5857  013AB2  50E3               	movf	plusw1,w,c
  5858  013AB4  B4D8               	btfsc	status,2,c
  5859  013AB6  D015               	goto	l13412
  5860                           
  5861                           ;gemsecs.c: 530:     UART2_put_buffer(k[i - 1]);
  5862                           ;stkvar	_i @ sp[(-5)+4]
  5863  013AB8  0EFF               	movlw	-1
  5864  013ABA  50E3               	movf	plusw1,w,c
  5865  013ABC  6E42               	movwf	btemp+10,c
  5866  013ABE  6A43               	clrf	btemp+11,c
  5867                           
  5868                           ;stkvar	_k @ sp[(-5)+0]
  5869  013AC0  0EFB               	movlw	-5
  5870  013AC2  50E3               	movf	plusw1,w,c
  5871  013AC4  2642               	addwf	btemp+10,f,c
  5872  013AC6  0EFC               	movlw	-4
  5873  013AC8  50E3               	movf	plusw1,w,c
  5874  013ACA  2243               	addwfc	btemp+11,f,c
  5875  013ACC  0EFF               	movlw	255
  5876  013ACE  2442               	addwf	btemp+10,w,c
  5877  013AD0  6ED9               	movwf	fsr2l,c
  5878  013AD2  0EFF               	movlw	255
  5879  013AD4  2043               	addwfc	btemp+11,w,c
  5880  013AD6  6EDA               	movwf	fsr2h,c
  5881  013AD8  50DF               	movf	indf2,w,c
  5882  013ADA  6EE6               	movwf	postinc1,c
  5883  013ADC  EC52  F0B6         	call	_UART2_put_buffer	;wreg free
  5884                           
  5885                           ;gemsecs.c: 531:    } else {
  5886  013AE0  D014               	goto	l13414
  5887  013AE2                     l13412:
  5888                           
  5889                           ;gemsecs.c: 533:     UART2_Write(k[i - 1]);
  5890                           ;stkvar	_i @ sp[(-5)+4]
  5891  013AE2  0EFF               	movlw	-1
  5892  013AE4  50E3               	movf	plusw1,w,c
  5893  013AE6  6E42               	movwf	btemp+10,c
  5894  013AE8  6A43               	clrf	btemp+11,c
  5895                           
  5896                           ;stkvar	_k @ sp[(-5)+0]
  5897  013AEA  0EFB               	movlw	-5
  5898  013AEC  50E3               	movf	plusw1,w,c
  5899  013AEE  2642               	addwf	btemp+10,f,c
  5900  013AF0  0EFC               	movlw	-4
  5901  013AF2  50E3               	movf	plusw1,w,c
  5902  013AF4  2243               	addwfc	btemp+11,f,c
  5903  013AF6  0EFF               	movlw	255
  5904  013AF8  2442               	addwf	btemp+10,w,c
  5905  013AFA  6ED9               	movwf	fsr2l,c
  5906  013AFC  0EFF               	movlw	255
  5907  013AFE  2043               	addwfc	btemp+11,w,c
  5908  013B00  6EDA               	movwf	fsr2h,c
  5909  013B02  50DF               	movf	indf2,w,c
  5910  013B04  6EE6               	movwf	postinc1,c
  5911  013B06  ECAD  F0B4         	call	_UART2_Write	;wreg free
  5912  013B0A                     l13414:
  5913                           
  5914                           ; BSR set to: 57
  5915                           ;gemsecs.c: 535:   }
  5916                           ;stkvar	_i @ sp[(-5)+4]
  5917  013B0A  0EFF               	movlw	-1
  5918  013B0C  06E3               	decf	plusw1,f,c
  5919  013B0E  D7CC               	goto	l13404
  5920  013B10                     l13418:
  5921  013B10  ECA1  F0B9         	call	_UART1_is_tx_ready	;wreg free
  5922  013B14  0E3F               	movlw	63
  5923  013B16  6438               	cpfsgt	btemp,c
  5924  013B18  D7FB               	goto	l13418
  5925                           
  5926                           ;gemsecs.c: 540:   for (i = length; i > 0; i--) {
  5927                           ;stkvar	_length @ sp[(-5)+-3]
  5928                           ;stkvar	_i @ sp[(-5)+4]
  5929  013B1A  0EF8               	movlw	-8
  5930  013B1C  006F FF8C  F038    	movff	plusw1,btemp
  5931  013B22  0EFF               	movlw	-1
  5932  013B24  0060  F0E3  FFE3   	movff	btemp,plusw1
  5933  013B2A                     l13422:
  5934                           
  5935                           ;stkvar	_i @ sp[(-5)+4]
  5936  013B2A  0EFF               	movlw	-1
  5937  013B2C  50E3               	movf	plusw1,w,c
  5938  013B2E  B4D8               	btfsc	status,2,c
  5939  013B30  D040               	goto	l1939
  5940                           
  5941                           ;gemsecs.c: 541:    if (fake) {
  5942                           ;stkvar	_fake @ sp[(-5)+-4]
  5943  013B32  0EF7               	movlw	-9
  5944  013B34  50E3               	movf	plusw1,w,c
  5945  013B36  B4D8               	btfsc	status,2,c
  5946  013B38  D015               	goto	l13430
  5947                           
  5948                           ;gemsecs.c: 542:     UART1_put_buffer(k[i - 1]);
  5949                           ;stkvar	_i @ sp[(-5)+4]
  5950  013B3A  0EFF               	movlw	-1
  5951  013B3C  50E3               	movf	plusw1,w,c
  5952  013B3E  6E42               	movwf	btemp+10,c
  5953  013B40  6A43               	clrf	btemp+11,c
  5954                           
  5955                           ;stkvar	_k @ sp[(-5)+0]
  5956  013B42  0EFB               	movlw	-5
  5957  013B44  50E3               	movf	plusw1,w,c
  5958  013B46  2642               	addwf	btemp+10,f,c
  5959  013B48  0EFC               	movlw	-4
  5960  013B4A  50E3               	movf	plusw1,w,c
  5961  013B4C  2243               	addwfc	btemp+11,f,c
  5962  013B4E  0EFF               	movlw	255
  5963  013B50  2442               	addwf	btemp+10,w,c
  5964  013B52  6ED9               	movwf	fsr2l,c
  5965  013B54  0EFF               	movlw	255
  5966  013B56  2043               	addwfc	btemp+11,w,c
  5967  013B58  6EDA               	movwf	fsr2h,c
  5968  013B5A  50DF               	movf	indf2,w,c
  5969  013B5C  6EE6               	movwf	postinc1,c
  5970  013B5E  EC66  F0B6         	call	_UART1_put_buffer	;wreg free
  5971                           
  5972                           ;gemsecs.c: 543:    } else {
  5973  013B62  D014               	goto	l13432
  5974  013B64                     l13430:
  5975                           
  5976                           ;gemsecs.c: 545:     UART1_Write(k[i - 1]);
  5977                           ;stkvar	_i @ sp[(-5)+4]
  5978  013B64  0EFF               	movlw	-1
  5979  013B66  50E3               	movf	plusw1,w,c
  5980  013B68  6E42               	movwf	btemp+10,c
  5981  013B6A  6A43               	clrf	btemp+11,c
  5982                           
  5983                           ;stkvar	_k @ sp[(-5)+0]
  5984  013B6C  0EFB               	movlw	-5
  5985  013B6E  50E3               	movf	plusw1,w,c
  5986  013B70  2642               	addwf	btemp+10,f,c
  5987  013B72  0EFC               	movlw	-4
  5988  013B74  50E3               	movf	plusw1,w,c
  5989  013B76  2243               	addwfc	btemp+11,f,c
  5990  013B78  0EFF               	movlw	255
  5991  013B7A  2442               	addwf	btemp+10,w,c
  5992  013B7C  6ED9               	movwf	fsr2l,c
  5993  013B7E  0EFF               	movlw	255
  5994  013B80  2043               	addwfc	btemp+11,w,c
  5995  013B82  6EDA               	movwf	fsr2h,c
  5996  013B84  50DF               	movf	indf2,w,c
  5997  013B86  6EE6               	movwf	postinc1,c
  5998  013B88  EC6D  F0B4         	call	_UART1_Write	;wreg free
  5999  013B8C                     l13432:
  6000                           
  6001                           ; BSR set to: 57
  6002                           ;gemsecs.c: 547:   }
  6003                           ;stkvar	_i @ sp[(-5)+4]
  6004  013B8C  0EFF               	movlw	-1
  6005  013B8E  06E3               	decf	plusw1,f,c
  6006  013B90  D7CC               	goto	l13422
  6007  013B92                     l13438:
  6008                           
  6009                           ;stkvar	_s_uart @ sp[(-5)+-5]
  6010  013B92  0EF6               	movlw	-10
  6011  013B94  50E3               	movf	plusw1,w,c
  6012  013B96  6E42               	movwf	btemp+10,c
  6013  013B98  6A43               	clrf	btemp+11,c
  6014                           
  6015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6016                           ; Switch size 1, requested type "simple"
  6017                           ; Number of cases is 1, Range of values is 0 to 0
  6018                           ; switch strategies available:
  6019                           ; Name         Instructions Cycles
  6020                           ; simple_byte            4     3 (average)
  6021                           ;	Chosen strategy is simple_byte
  6022  013B9A  5043               	movf	btemp+11,w,c
  6023  013B9C  0A00               	xorlw	0	; case 0
  6024  013B9E  A4D8               	btfss	status,2,c
  6025  013BA0  D7B7               	goto	l13418
  6026                           
  6027                           ; Switch size 1, requested type "simple"
  6028                           ; Number of cases is 2, Range of values is 1 to 2
  6029                           ; switch strategies available:
  6030                           ; Name         Instructions Cycles
  6031                           ; simple_byte            7     4 (average)
  6032                           ;	Chosen strategy is simple_byte
  6033  013BA2  5042               	movf	btemp+10,w,c
  6034  013BA4  0A01               	xorlw	1	; case 1
  6035  013BA6  B4D8               	btfsc	status,2,c
  6036  013BA8  D7B3               	goto	l13418
  6037  013BAA  0A03               	xorlw	3	; case 2
  6038  013BAC  B4D8               	btfsc	status,2,c
  6039  013BAE  D76F               	goto	l13400
  6040  013BB0  D7AF               	goto	l13418
  6041  013BB2                     l1939:
  6042                           
  6043                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  6044  013BB2  0EF6               	movlw	246
  6045  013BB4  26E1               	addwf	fsr1l,f,c
  6046  013BB6  0EFF               	movlw	255
  6047  013BB8  22E2               	addwfc	fsr1h,f,c
  6048  013BBA  0012               	return		;funcret
  6049  013BBC                     __end_of_secs_send:
  6050                           	opt callstack 0
  6051                           
  6052 ;; *************** function _block_checksum *****************
  6053 ;; Defined at:
  6054 ;;		line 25 in file "gemsecs.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  byte_block      2  [STACK] PTR unsigned char 
  6057 ;;		 -> S(460), H53(112), H33(36), H26(29), 
  6058 ;;		 -> H17(20), H14(17), H13(64), H12(30), 
  6059 ;;		 -> H10(91), 
  6060 ;;  byte_count      2  [STACK] const unsigned short 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  i               2  [STACK] unsigned short 
  6063 ;;  sum             2  [STACK] unsigned short 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2  [STACK] unsigned short 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;Total ram usage:        0 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    3
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_secs_send
  6084 ;; This function uses a reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text3
  6088  015A10                     __ptext3:
  6089                           	opt callstack 0
  6090  015A10                     _block_checksum:
  6091                           	opt callstack 0
  6092                           
  6093                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6094  015A10  52E6               	movf	postinc1,f,c
  6095  015A12  52E6               	movf	postinc1,f,c
  6096  015A14  52E6               	movf	postinc1,f,c
  6097  015A16  52E6               	movf	postinc1,f,c
  6098                           
  6099                           ;gemsecs.c: 25: uint16_t block_checksum(uint8_t *byte_block, const uint16_t byte_count);
      +                          gemsecs.c: 26: {;gemsecs.c: 27:  uint16_t sum = 0, i;
  6100                           ;stkvar	_sum @ sp[(-4)+2]
  6101                           
  6102                           ;incstack = 0
  6103  015A18  0EFE               	movlw	-2
  6104  015A1A  6AE3               	clrf	plusw1,c
  6105  015A1C  0EFF               	movlw	-1
  6106  015A1E  6AE3               	clrf	plusw1,c
  6107                           
  6108                           ;gemsecs.c: 29:  for (i = 0; i < byte_count; i++) {
  6109                           ;stkvar	_i @ sp[(-4)+0]
  6110  015A20  0EFC               	movlw	-4
  6111  015A22  6AE3               	clrf	plusw1,c
  6112  015A24  0EFD               	movlw	-3
  6113  015A26  6AE3               	clrf	plusw1,c
  6114                           
  6115                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6116  015A28  0EF8               	movlw	-8
  6117  015A2A  006F FF8C  F038    	movff	plusw1,btemp
  6118  015A30  0EF9               	movlw	-7
  6119  015A32  50E3               	movf	plusw1,w,c
  6120  015A34  1038               	iorwf	btemp,w,c
  6121  015A36  B4D8               	btfsc	status,2,c
  6122  015A38  D04F               	goto	u8370
  6123  015A3A                     l12496:
  6124                           
  6125                           ;gemsecs.c: 30:   sum += byte_block[i];
  6126                           ;stkvar	_i @ sp[(-4)+0]
  6127  015A3A  0EFC               	movlw	-4
  6128  015A3C  006F FF8C  F042    	movff	plusw1,btemp+10
  6129  015A42  0EFD               	movlw	-3
  6130  015A44  006F FF8C  F043    	movff	plusw1,btemp+11
  6131                           
  6132                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6133  015A4A  0EFA               	movlw	-6
  6134  015A4C  006F FF8C  F040    	movff	plusw1,btemp+8
  6135  015A52  0EFB               	movlw	-5
  6136  015A54  006F FF8C  F041    	movff	plusw1,btemp+9
  6137  015A5A  5042               	movf	btemp+10,w,c
  6138  015A5C  2440               	addwf	btemp+8,w,c
  6139  015A5E  6ED9               	movwf	fsr2l,c
  6140  015A60  5043               	movf	btemp+11,w,c
  6141  015A62  2041               	addwfc	btemp+9,w,c
  6142  015A64  6EDA               	movwf	fsr2h,c
  6143  015A66  50DF               	movf	indf2,w,c
  6144  015A68  6E43               	movwf	btemp+11,c
  6145                           
  6146                           ;stkvar	_sum @ sp[(-4)+2]
  6147  015A6A  0EFE               	movlw	-2
  6148  015A6C  50E3               	movf	plusw1,w,c
  6149  015A6E  2443               	addwf	btemp+11,w,c
  6150  015A70  6E38               	movwf	btemp,c
  6151  015A72  0EFE               	movlw	-2
  6152  015A74  0060  F0E3  FFE3   	movff	btemp,plusw1
  6153  015A7A  6A38               	clrf	btemp,c
  6154  015A7C  0EFF               	movlw	-1
  6155  015A7E  50E3               	movf	plusw1,w,c
  6156  015A80  2238               	addwfc	btemp,f,c
  6157  015A82  0EFF               	movlw	-1
  6158  015A84  0060  F0E3  FFE3   	movff	btemp,plusw1
  6159                           
  6160                           ;gemsecs.c: 31:  }
  6161                           ;stkvar	_i @ sp[(-4)+0]
  6162  015A8A  0EFC               	movlw	-4
  6163  015A8C  50E3               	movf	plusw1,w,c
  6164  015A8E  0F01               	addlw	1
  6165  015A90  6E38               	movwf	btemp,c
  6166  015A92  0EFC               	movlw	-4
  6167  015A94  0060  F0E3  FFE3   	movff	btemp,plusw1
  6168  015A9A  6A38               	clrf	btemp,c
  6169  015A9C  0EFD               	movlw	-3
  6170  015A9E  50E3               	movf	plusw1,w,c
  6171  015AA0  2038               	addwfc	btemp,w,c
  6172  015AA2  6E38               	movwf	btemp,c
  6173  015AA4  0EFD               	movlw	-3
  6174  015AA6  0060  F0E3  FFE3   	movff	btemp,plusw1
  6175                           
  6176                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6177  015AAC  0EF8               	movlw	-8
  6178  015AAE  006F FF8C  F042    	movff	plusw1,btemp+10
  6179  015AB4  0EF9               	movlw	-7
  6180  015AB6  006F FF8C  F043    	movff	plusw1,btemp+11
  6181                           
  6182                           ;stkvar	_i @ sp[(-4)+0]
  6183  015ABC  0EFC               	movlw	-4
  6184  015ABE  006F FF8C  F040    	movff	plusw1,btemp+8
  6185  015AC4  0EFD               	movlw	-3
  6186  015AC6  006F FF8C  F041    	movff	plusw1,btemp+9
  6187  015ACC  5042               	movf	btemp+10,w,c
  6188  015ACE  5C40               	subwf	btemp+8,w,c
  6189  015AD0  5043               	movf	btemp+11,w,c
  6190  015AD2  5841               	subwfb	btemp+9,w,c
  6191  015AD4  A0D8               	btfss	status,0,c
  6192  015AD6  D7B1               	goto	l12496
  6193  015AD8                     u8370:
  6194                           
  6195                           ;gemsecs.c: 36:  return sum;
  6196                           ;stkvar	_sum @ sp[(-4)+2]
  6197  015AD8  0EFE               	movlw	-2
  6198  015ADA  006F FF8C  F038    	movff	plusw1,btemp
  6199  015AE0  0EFF               	movlw	-1
  6200  015AE2  006F FF8C  F039    	movff	plusw1,btemp+1
  6201                           
  6202                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6203  015AE8  0EF8               	movlw	248
  6204  015AEA  26E1               	addwf	fsr1l,f,c
  6205  015AEC  0EFF               	movlw	255
  6206  015AEE  22E2               	addwfc	fsr1h,f,c
  6207  015AF0  0012               	return		;funcret
  6208  015AF2                     __end_of_block_checksum:
  6209                           	opt callstack 0
  6210                           
  6211 ;; *************** function _UART2_put_buffer *****************
  6212 ;; Defined at:
  6213 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  bufData         1  [STACK] unsigned char 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1  [STACK] void 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 3F/39
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6231 ;;Total ram usage:        0 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    3
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_secs_send
  6238 ;; This function uses a reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text4
  6242  016CA4                     __ptext4:
  6243                           	opt callstack 0
  6244  016CA4                     _UART2_put_buffer:
  6245                           	opt callstack 25
  6246                           
  6247                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6248                           
  6249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6250                           ;incstack = 0
  6251  016CA4  0139               	movlb	57	; () banked
  6252  016CA6  9596               	bcf	150,2,b	;volatile
  6253                           
  6254                           ; BSR set to: 57
  6255                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6256                           ;stkvar	_bufData @ sp[(0)+-1]
  6257  016CA8  0E00               	movlw	low _uart2RxBuffer
  6258  016CAA  2427               	addwf	_uart2RxHead,w,c	;volatile
  6259  016CAC  6ED9               	movwf	fsr2l,c
  6260  016CAE  6ADA               	clrf	fsr2h,c
  6261  016CB0  0E05               	movlw	high _uart2RxBuffer
  6262  016CB2  22DA               	addwfc	fsr2h,f,c
  6263  016CB4  0EFF               	movlw	-1
  6264  016CB6  006F FF8F FFDF     	movff	plusw1,indf2
  6265                           
  6266                           ; BSR set to: 57
  6267  016CBC  2A27               	incf	_uart2RxHead,f,c	;volatile
  6268                           
  6269                           ; BSR set to: 57
  6270                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6271  016CBE  2827               	incf	_uart2RxHead,w,c
  6272  016CC0  B4D8               	btfsc	status,2,c
  6273                           
  6274                           ; BSR set to: 57
  6275                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6276  016CC2  6A27               	clrf	_uart2RxHead,c	;volatile
  6277                           
  6278                           ; BSR set to: 57
  6279                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6280  016CC4  2A25               	incf	_uart2RxCount,f,c	;volatile
  6281                           
  6282                           ; BSR set to: 57
  6283                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6284  016CC6  8596               	bsf	150,2,b	;volatile
  6285                           
  6286                           ; BSR set to: 57
  6287                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6288  016CC8  52E5               	movf	postdec1,f,c
  6289  016CCA  0012               	return		;funcret
  6290  016CCC                     __end_of_UART2_put_buffer:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function _UART2_is_tx_ready *****************
  6294 ;; Defined at:
  6295 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1  [STACK] unsigned char 
  6302 ;; Registers used:
  6303 ;;		btemp
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    3
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_secs_send
  6320 ;; This function uses a reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text5
  6324  01733A                     __ptext5:
  6325                           	opt callstack 0
  6326  01733A                     _UART2_is_tx_ready:
  6327                           	opt callstack 25
  6328                           
  6329                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6330                           
  6331                           ; BSR set to: 57
  6332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6333                           ;incstack = 0
  6334  01733A  0060  F0A0  F038   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6335                           
  6336                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6337  017340  0012               	return		;funcret
  6338  017342                     __end_of_UART2_is_tx_ready:
  6339                           	opt callstack 0
  6340                           
  6341 ;; *************** function _UART2_Write *****************
  6342 ;; Defined at:
  6343 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  txData          1  [STACK] unsigned char 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1  [STACK] void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 3F/39
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;Total ram usage:        0 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    3
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_secs_send
  6368 ;; This function uses a reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text6
  6372  01695A                     __ptext6:
  6373                           	opt callstack 0
  6374  01695A                     _UART2_Write:
  6375                           	opt callstack 25
  6376                           
  6377                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6378                           
  6379                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6380                           
  6381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6382                           ;incstack = 0
  6383  01695A  5028               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6384  01695C  B4D8               	btfsc	status,2,c
  6385  01695E  D7FD               	goto	_UART2_Write
  6386                           
  6387                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6388  016960  0139               	movlb	57	; () banked
  6389  016962  B796               	btfsc	150,3,b	;volatile
  6390  016964  D005               	goto	l711
  6391                           
  6392                           ; BSR set to: 57
  6393                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6394                           ;stkvar	_txData @ sp[(0)+-1]
  6395  016966  0EFF               	movlw	-1
  6396  016968  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6397                           
  6398                           ;mcc_generated_files/uart2.c: 181:     }
  6399  01696E  D011               	goto	l12458
  6400  016970                     l711:
  6401                           
  6402                           ; BSR set to: 57
  6403                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6404  016970  9796               	bcf	150,3,b	;volatile
  6405                           
  6406                           ; BSR set to: 57
  6407                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6408                           ;stkvar	_txData @ sp[(0)+-1]
  6409  016972  0E00               	movlw	low _uart2TxBuffer
  6410  016974  242A               	addwf	_uart2TxHead,w,c	;volatile
  6411  016976  6ED9               	movwf	fsr2l,c
  6412  016978  6ADA               	clrf	fsr2h,c
  6413  01697A  0E02               	movlw	high _uart2TxBuffer
  6414  01697C  22DA               	addwfc	fsr2h,f,c
  6415  01697E  0EFF               	movlw	-1
  6416  016980  006F FF8F FFDF     	movff	plusw1,indf2
  6417                           
  6418                           ; BSR set to: 57
  6419  016986  2A2A               	incf	_uart2TxHead,f,c	;volatile
  6420                           
  6421                           ; BSR set to: 57
  6422                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6423  016988  0E3F               	movlw	63
  6424  01698A  642A               	cpfsgt	_uart2TxHead,c
  6425  01698C  D001               	goto	l12456
  6426                           
  6427                           ; BSR set to: 57
  6428                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6429  01698E  6A2A               	clrf	_uart2TxHead,c	;volatile
  6430  016990                     l12456:
  6431                           
  6432                           ; BSR set to: 57
  6433                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6434  016990  0628               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6435  016992                     l12458:
  6436                           
  6437                           ; BSR set to: 57
  6438                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6439  016992  8796               	bsf	150,3,b	;volatile
  6440                           
  6441                           ; BSR set to: 57
  6442                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6443  016994  52E5               	movf	postdec1,f,c
  6444  016996  0012               	return		;funcret
  6445  016998                     __end_of_UART2_Write:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _UART1_put_buffer *****************
  6449 ;; Defined at:
  6450 ;;		line 253 in file "mcc_generated_files/uart1.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  bufData         1  [STACK] unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1  [STACK] void 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/39
  6461 ;;		On exit  : 3F/39
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;Total ram usage:        0 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    3
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_t_protocol
  6475 ;;		_secs_send
  6476 ;; This function uses a reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text7
  6480  016CCC                     __ptext7:
  6481                           	opt callstack 0
  6482  016CCC                     _UART1_put_buffer:
  6483                           	opt callstack 25
  6484                           
  6485                           ;mcc_generated_files/uart1.c: 253: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 254: {;mcc_generated_files/uart1.c: 255:  PIE3bits.U1RXIE = 0;
  6486                           
  6487                           ; BSR set to: 57
  6488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6489                           ;incstack = 0
  6490  016CCC  0139               	movlb	57	; () banked
  6491  016CCE  9793               	bcf	147,3,b	;volatile
  6492                           
  6493                           ; BSR set to: 57
  6494                           ;mcc_generated_files/uart1.c: 256:  uart1RxBuffer[uart1RxHead++] = bufData;
  6495                           ;stkvar	_bufData @ sp[(0)+-1]
  6496  016CD0  0E00               	movlw	low _uart1RxBuffer
  6497  016CD2  242D               	addwf	_uart1RxHead,w,c	;volatile
  6498  016CD4  6ED9               	movwf	fsr2l,c
  6499  016CD6  6ADA               	clrf	fsr2h,c
  6500  016CD8  0E04               	movlw	high _uart1RxBuffer
  6501  016CDA  22DA               	addwfc	fsr2h,f,c
  6502  016CDC  0EFF               	movlw	-1
  6503  016CDE  006F FF8F FFDF     	movff	plusw1,indf2
  6504                           
  6505                           ; BSR set to: 57
  6506  016CE4  2A2D               	incf	_uart1RxHead,f,c	;volatile
  6507                           
  6508                           ; BSR set to: 57
  6509                           ;mcc_generated_files/uart1.c: 257:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6510  016CE6  282D               	incf	_uart1RxHead,w,c
  6511  016CE8  B4D8               	btfsc	status,2,c
  6512                           
  6513                           ; BSR set to: 57
  6514                           ;mcc_generated_files/uart1.c: 258:   uart1RxHead = 0;
  6515  016CEA  6A2D               	clrf	_uart1RxHead,c	;volatile
  6516                           
  6517                           ; BSR set to: 57
  6518                           ;mcc_generated_files/uart1.c: 261:  uart1RxCount++;
  6519  016CEC  2A2B               	incf	_uart1RxCount,f,c	;volatile
  6520                           
  6521                           ; BSR set to: 57
  6522                           ;mcc_generated_files/uart1.c: 262:  PIE3bits.U1RXIE = 1;
  6523  016CEE  8793               	bsf	147,3,b	;volatile
  6524                           
  6525                           ; BSR set to: 57
  6526                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6527  016CF0  52E5               	movf	postdec1,f,c
  6528  016CF2  0012               	return		;funcret
  6529  016CF4                     __end_of_UART1_put_buffer:
  6530                           	opt callstack 0
  6531                           
  6532 ;; *************** function _UART1_is_tx_ready *****************
  6533 ;; Defined at:
  6534 ;;		line 152 in file "mcc_generated_files/uart1.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1  [STACK] unsigned char 
  6541 ;; Registers used:
  6542 ;;		btemp
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    3
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_secs_send
  6559 ;; This function uses a reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text8
  6563  017342                     __ptext8:
  6564                           	opt callstack 0
  6565  017342                     _UART1_is_tx_ready:
  6566                           	opt callstack 25
  6567                           
  6568                           ;mcc_generated_files/uart1.c: 154:  return uart1TxBufferRemaining;
  6569                           
  6570                           ; BSR set to: 57
  6571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6572                           ;incstack = 0
  6573  017342  0060  F0B8  F038   	movff	_uart1TxBufferRemaining,btemp	;volatile
  6574                           
  6575                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6576  017348  0012               	return		;funcret
  6577  01734A                     __end_of_UART1_is_tx_ready:
  6578                           	opt callstack 0
  6579                           
  6580 ;; *************** function _secs_II_message *****************
  6581 ;; Defined at:
  6582 ;;		line 847 in file "gemsecs.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  stream          1  [STACK] const unsigned char 
  6585 ;;  function        1  [STACK] const unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  i               2  [STACK] unsigned short 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  7  [STACK] struct response_type
  6590 ;; Registers used:
  6591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/3C
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:   13
  6604 ;; This function calls:
  6605 ;;		_DATAEE_WriteByte
  6606 ;;		_StartTimer
  6607 ;;		_TimerDone
  6608 ;;		_display_info
  6609 ;;		_gem_messages
  6610 ;;		_parse_sid
  6611 ;;		_s10f1_opcmd
  6612 ;;		_sequence_messages
  6613 ;;		_set_display_info
  6614 ;;		_set_temp_display_help
  6615 ;;		_vterm_sequence
  6616 ;; This function is called by:
  6617 ;;		_t_protocol
  6618 ;; This function uses a reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text9
  6622  011A7C                     __ptext9:
  6623                           	opt callstack 0
  6624  011A7C                     _secs_II_message:
  6625                           	opt callstack 0
  6626                           
  6627                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  6628  011A7C  0E07               	movlw	7
  6629  011A7E  26E1               	addwf	fsr1l,f,c
  6630  011A80  0E00               	movlw	0
  6631  011A82  22E2               	addwfc	fsr1h,f,c
  6632                           
  6633                           ;gemsecs.c: 847: response_type secs_II_message(const uint8_t stream, const uint8_t funct
      +                          ion);gemsecs.c: 848: {;gemsecs.c: 849:  static response_type block;;gemsecs.c: 850:  uin
      +                          t16_t i = 0;
  6634                           ;stkvar	_i @ sp[(-2)+0]
  6635                           
  6636                           ;incstack = 0
  6637  011A84  0EFE               	movlw	-2
  6638  011A86  6AE3               	clrf	plusw1,c
  6639  011A88  0EFF               	movlw	-1
  6640  011A8A  6AE3               	clrf	plusw1,c
  6641  011A8C  A8BB               	btfss	16315,4,c	;volatile
  6642  011A8E  D002               	goto	u10960
  6643  011A90  0E01               	movlw	1
  6644  011A92  D001               	goto	u10966
  6645  011A94                     u10960:
  6646  011A94  0E00               	movlw	0
  6647  011A96                     u10966:
  6648  011A96  0AFF               	xorlw	255
  6649  011A98  6E43               	movwf	btemp+11,c
  6650  011A9A  3A43               	swapf	btemp+11,f,c
  6651  011A9C  50BB               	movf	16315,w,c	;volatile
  6652  011A9E  1843               	xorwf	btemp+11,w,c
  6653  011AA0  0BEF               	andlw	-17
  6654  011AA2  1843               	xorwf	btemp+11,w,c
  6655  011AA4  6EBB               	movwf	16315,c	;volatile
  6656                           
  6657                           ;gemsecs.c: 853:  V.abort = LINK_ERROR_NONE;
  6658  011AA6  0E0A               	movlw	10
  6659  011AA8  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
  6660                           
  6661                           ;gemsecs.c: 854:  V.queue = 0;
  6662  011AAE  EE23  F01A         	lfsr	2,_V+332	;volatile
  6663  011AB2  98DF               	bcf	indf2,4,c
  6664                           
  6665                           ;gemsecs.c: 855:  block.respond = 0;
  6666  011AB4  9037               	bcf	secs_II_message@block+6,0,c
  6667                           
  6668                           ;gemsecs.c: 857:  if (TimerDone(TMR_HBIO)) {
  6669  011AB6  0E06               	movlw	6
  6670  011AB8  6EE6               	movwf	postinc1,c
  6671  011ABA  ECF5  F0B7         	call	_TimerDone	;wreg free
  6672  011ABE  5038               	movf	btemp,w,c
  6673  011AC0  B4D8               	btfsc	status,2,c
  6674  011AC2  D26F               	goto	l16330
  6675                           
  6676                           ;gemsecs.c: 858:   if (V.stack) {
  6677  011AC4  EE23  F01B         	lfsr	2,_V+333	;volatile
  6678  011AC8  50DF               	movf	223,w,c
  6679  011ACA  0B07               	andlw	7
  6680  011ACC  0900               	iorlw	0
  6681  011ACE  B4D8               	btfsc	status,2,c
  6682  011AD0  D01D               	goto	l16070
  6683                           
  6684                           ;gemsecs.c: 859:    gem_messages(&block, V.sid);
  6685  011AD2  EE23  F04B         	lfsr	2,_V+381	;volatile
  6686  011AD6  50DF               	movf	indf2,w,c
  6687  011AD8  6EE6               	movwf	postinc1,c
  6688  011ADA  0E31               	movlw	secs_II_message@block& (0+255)
  6689  011ADC  6EE6               	movwf	postinc1,c
  6690  011ADE  EC18  F0AC         	call	_gem_messages	;wreg free
  6691                           
  6692                           ;gemsecs.c: 860:    set_display_info(DIS_SEQUENCE);
  6693  011AE2  0E07               	movlw	7
  6694  011AE4  6EE6               	movwf	postinc1,c
  6695  011AE6  EC6F  F0B8         	call	_set_display_info	;wreg free
  6696                           
  6697                           ;gemsecs.c: 861:    vterm_sequence();
  6698  011AEA  EC57  F094         	call	_vterm_sequence	;wreg free
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;gemsecs.c: 862:    V.set_sequ = 1;
  6702  011AEE  EE23  F019         	lfsr	2,_V+331	;volatile
  6703  011AF2  86DF               	bsf	indf2,3,c
  6704  011AF4                     l16066:
  6705                           
  6706                           ;gemsecs.c: 863:    return(block);
  6707  011AF4  EE20  F031         	lfsr	2,secs_II_message@block
  6708                           
  6709                           ;stkvar	?_secs_II_message @ sp[(-2)+-7]
  6710  011AF8  0E07               	movlw	7
  6711  011AFA  6E38               	movwf	btemp,c
  6712  011AFC  0EF7               	movlw	-9
  6713  011AFE                     us1099999:
  6714  011AFE  006F FF7B FFE3     	movff	postinc2,plusw1
  6715  011B04  28E8               	incf	wreg,w,c
  6716  011B06  2E38               	decfsz	btemp,f,c
  6717  011B08  D7FA               	bra	us1099999
  6718  011B0A  D267               	goto	l2082
  6719  011B0C                     l16070:
  6720                           
  6721                           ;gemsecs.c: 865:   StartTimer(TMR_HBIO, 5000);
  6722  011B0C  0E88               	movlw	136
  6723  011B0E  6EE6               	movwf	postinc1,c
  6724  011B10  0E13               	movlw	19
  6725  011B12  6EE6               	movwf	postinc1,c
  6726  011B14  0E06               	movlw	6
  6727  011B16  6EE6               	movwf	postinc1,c
  6728  011B18  EC26  F0B5         	call	_StartTimer	;wreg free
  6729  011B1C  D242               	goto	l16330
  6730  011B1E                     l16072:
  6731                           
  6732                           ;gemsecs.c: 872:    block.header = (uint8_t*) & H12[0];
  6733  011B1E  0EC3               	movlw	low _H12
  6734  011B20  6E31               	movwf	secs_II_message@block,c
  6735  011B22  0E02               	movlw	high _H12
  6736  011B24  6E32               	movwf	secs_II_message@block+1,c
  6737                           
  6738                           ;gemsecs.c: 873:    block.length = sizeof(header12);
  6739  011B26  0E0F               	movlw	15
  6740  011B28  6E33               	movwf	secs_II_message@block+2,c
  6741                           
  6742                           ;gemsecs.c: 874:    H12[0].block.block.systemb = V.systemb;
  6743  011B2A  CBF9  F2C7         	movff	_V+299,_H12+4	;volatile
  6744  011B2E  CBFA  F2C8         	movff	_V+300,_H12+5	;volatile
  6745  011B32  CBFB  F2C9         	movff	_V+301,_H12+6	;volatile
  6746  011B36  CBFC  F2CA         	movff	_V+302,_H12+7	;volatile
  6747                           
  6748                           ;gemsecs.c: 875:    H10[0].block.block.systemb = V.ticks;
  6749  011B3A  CBF5  F102         	movff	_V+295,_H10+2	;volatile
  6750  011B3E  CBF6  F103         	movff	_V+296,_H10+3	;volatile
  6751  011B42  CBF7  F104         	movff	_V+297,_H10+4	;volatile
  6752  011B46  CBF8  F105         	movff	_V+298,_H10+5	;volatile
  6753                           
  6754                           ;gemsecs.c: 876:    block.respond = 1;
  6755  011B4A  8037               	bsf	secs_II_message@block+6,0,c
  6756                           
  6757                           ;gemsecs.c: 877:    block.reply = (uint8_t*) & H10[0];
  6758  011B4C  0E00               	movlw	low _H10
  6759  011B4E  6E34               	movwf	secs_II_message@block+3,c
  6760  011B50  0E01               	movlw	high _H10
  6761  011B52  6E35               	movwf	secs_II_message@block+4,c
  6762                           
  6763                           ;gemsecs.c: 878:    block.reply_length = sizeof(header10);
  6764  011B54  0E0D               	movlw	13
  6765  011B56  6E36               	movwf	secs_II_message@block+5,c
  6766                           
  6767                           ;gemsecs.c: 879:    V.queue = 1;
  6768  011B58  EE23  F01A         	lfsr	2,_V+332	;volatile
  6769  011B5C  88DF               	bsf	indf2,4,c
  6770                           
  6771                           ;gemsecs.c: 880:    break;
  6772  011B5E  D7CA               	goto	l16066
  6773  011B60                     l16086:
  6774                           
  6775                           ;gemsecs.c: 882:    block.header = (uint8_t*) & H10[0];
  6776  011B60  0E00               	movlw	low _H10
  6777  011B62  6E31               	movwf	secs_II_message@block,c
  6778  011B64  0E01               	movlw	high _H10
  6779  011B66  6E32               	movwf	secs_II_message@block+1,c
  6780                           
  6781                           ;gemsecs.c: 883:    block.length = sizeof(header10);
  6782  011B68  0E0D               	movlw	13
  6783  011B6A  6E33               	movwf	secs_II_message@block+2,c
  6784                           
  6785                           ;gemsecs.c: 884:    H10[0].block.block.systemb = V.systemb;
  6786  011B6C  CBF9  F102         	movff	_V+299,_H10+2	;volatile
  6787  011B70  CBFA  F103         	movff	_V+300,_H10+3	;volatile
  6788  011B74  CBFB  F104         	movff	_V+301,_H10+4	;volatile
  6789  011B78  CBFC  F105         	movff	_V+302,_H10+5	;volatile
  6790                           
  6791                           ;gemsecs.c: 885:    break;
  6792  011B7C  D7BB               	goto	l16066
  6793  011B7E                     l16092:
  6794                           
  6795                           ;gemsecs.c: 887:    block.header = (uint8_t*) & H14[0];
  6796  011B7E  0EAF               	movlw	low _H14
  6797  011B80  6E31               	movwf	secs_II_message@block,c
  6798  011B82  0E01               	movlw	high _H14
  6799  011B84  6E32               	movwf	secs_II_message@block+1,c
  6800                           
  6801                           ;gemsecs.c: 888:    block.length = sizeof(header14);
  6802  011B86  0E11               	movlw	17
  6803  011B88  6E33               	movwf	secs_II_message@block+2,c
  6804                           
  6805                           ;gemsecs.c: 889:    H14[0].block.block.systemb = V.systemb;
  6806  011B8A  CBF9  F1B5         	movff	_V+299,_H14+6	;volatile
  6807  011B8E  CBFA  F1B6         	movff	_V+300,_H14+7	;volatile
  6808  011B92  CBFB  F1B7         	movff	_V+301,_H14+8	;volatile
  6809  011B96  CBFC  F1B8         	movff	_V+302,_H14+9	;volatile
  6810                           
  6811                           ;gemsecs.c: 890:    break;
  6812  011B9A  D7AC               	goto	l16066
  6813  011B9C                     l16098:
  6814                           
  6815                           ;gemsecs.c: 892:    block.header = (uint8_t*) & H17[0];
  6816  011B9C  0E9B               	movlw	low _H17
  6817  011B9E  6E31               	movwf	secs_II_message@block,c
  6818  011BA0  0E01               	movlw	high _H17
  6819  011BA2  6E32               	movwf	secs_II_message@block+1,c
  6820                           
  6821                           ;gemsecs.c: 893:    block.length = sizeof(header17);
  6822  011BA4  0E14               	movlw	20
  6823  011BA6  6E33               	movwf	secs_II_message@block+2,c
  6824                           
  6825                           ;gemsecs.c: 894:    H17[0].block.block.systemb = V.systemb;
  6826  011BA8  CBF9  F1A4         	movff	_V+299,_H17+9	;volatile
  6827  011BAC  CBFA  F1A5         	movff	_V+300,_H17+10	;volatile
  6828  011BB0  CBFB  F1A6         	movff	_V+301,_H17+11	;volatile
  6829  011BB4  CBFC  F1A7         	movff	_V+302,_H17+12	;volatile
  6830                           
  6831                           ;gemsecs.c: 895:    H12[1].block.block.systemb = V.ticks;
  6832  011BB8  CBF5  F2D6         	movff	_V+295,_H12+19	;volatile
  6833  011BBC  CBF6  F2D7         	movff	_V+296,_H12+20	;volatile
  6834  011BC0  CBF7  F2D8         	movff	_V+297,_H12+21	;volatile
  6835  011BC4  CBF8  F2D9         	movff	_V+298,_H12+22	;volatile
  6836                           
  6837                           ;gemsecs.c: 896:    block.respond = 1;
  6838  011BC8  8037               	bsf	secs_II_message@block+6,0,c
  6839                           
  6840                           ;gemsecs.c: 897:    block.reply = (uint8_t*) & H12[1];
  6841  011BCA  0ED2               	movlw	low (_H12+15)
  6842  011BCC  6E34               	movwf	secs_II_message@block+3,c
  6843  011BCE  0E02               	movlw	high (_H12+15)
  6844  011BD0  6E35               	movwf	secs_II_message@block+4,c
  6845                           
  6846                           ;gemsecs.c: 898:    block.reply_length = sizeof(header12);
  6847  011BD2  0E0F               	movlw	15
  6848  011BD4  D7C0               	goto	L11
  6849  011BD6                     l16112:
  6850                           
  6851                           ;gemsecs.c: 907:    H10[2].block.block.stream = stream;
  6852                           ;stkvar	_stream @ sp[(-2)+-6]
  6853  011BD6  0EF8               	movlw	-8
  6854  011BD8  006F FF8C  F043    	movff	plusw1,btemp+11
  6855  011BDE  0101               	movlb	1	; () banked
  6856  011BE0  5123               	movf	(_H10+35)& (0+255),w,b
  6857  011BE2  1843               	xorwf	btemp+11,w,c
  6858  011BE4  0B80               	andlw	-128
  6859  011BE6  1843               	xorwf	btemp+11,w,c
  6860  011BE8  6F23               	movwf	(_H10+35)& (0+255),b
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;gemsecs.c: 908:    block.header = (uint8_t*) & H10[2];
  6864  011BEA  0E1A               	movlw	low (_H10+26)
  6865  011BEC  6E31               	movwf	secs_II_message@block,c
  6866  011BEE  0E01               	movlw	high (_H10+26)
  6867  011BF0  6E32               	movwf	secs_II_message@block+1,c
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;gemsecs.c: 909:    block.length = sizeof(header10);
  6871  011BF2  0E0D               	movlw	13
  6872  011BF4  6E33               	movwf	secs_II_message@block+2,c
  6873                           
  6874                           ; BSR set to: 1
  6875                           ;gemsecs.c: 910:    H10[2].block.block.systemb = V.systemb;
  6876  011BF6  CBF9  F11C         	movff	_V+299,_H10+28	;volatile
  6877  011BFA  CBFA  F11D         	movff	_V+300,_H10+29	;volatile
  6878  011BFE  CBFB  F11E         	movff	_V+301,_H10+30	;volatile
  6879  011C02  CBFC  F11F         	movff	_V+302,_H10+31	;volatile
  6880                           
  6881                           ; BSR set to: 1
  6882                           ;gemsecs.c: 911:    V.abort = LINK_ERROR_ABORT;
  6883  011C06  0E11               	movlw	17
  6884  011C08  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
  6885                           
  6886                           ;gemsecs.c: 912:    break;
  6887  011C0E  D772               	goto	l16066
  6888  011C10                     l16124:
  6889                           
  6890                           ;stkvar	_function @ sp[(-2)+-7]
  6891  011C10  0EF7               	movlw	-9
  6892  011C12  50E3               	movf	plusw1,w,c
  6893  011C14  6E42               	movwf	btemp+10,c
  6894  011C16  6A43               	clrf	btemp+11,c
  6895                           
  6896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 1, Range of values is 0 to 0
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte            4     3 (average)
  6902                           ;	Chosen strategy is simple_byte
  6903  011C18  5043               	movf	btemp+11,w,c
  6904  011C1A  0A00               	xorlw	0	; case 0
  6905  011C1C  A4D8               	btfss	status,2,c
  6906  011C1E  D7DB               	goto	l16112
  6907                           
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 4, Range of values is 1 to 13
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte           13     7 (average)
  6913                           ;	Chosen strategy is simple_byte
  6914  011C20  5042               	movf	btemp+10,w,c
  6915  011C22  0A01               	xorlw	1	; case 1
  6916  011C24  B4D8               	btfsc	status,2,c
  6917  011C26  D77B               	goto	l16072
  6918  011C28  0A03               	xorlw	3	; case 2
  6919  011C2A  B4D8               	btfsc	status,2,c
  6920  011C2C  D799               	goto	l16086
  6921  011C2E  0A01               	xorlw	1	; case 3
  6922  011C30  B4D8               	btfsc	status,2,c
  6923  011C32  D7A5               	goto	l16092
  6924  011C34  0A0E               	xorlw	14	; case 13
  6925  011C36  B4D8               	btfsc	status,2,c
  6926  011C38  D7B1               	goto	l16098
  6927  011C3A  D7CD               	goto	l16112
  6928  011C3C                     l16126:
  6929                           
  6930                           ;gemsecs.c: 919:    block.header = (uint8_t*) & H26[0];
  6931  011C3C  0EE1               	movlw	low _H26
  6932  011C3E  6E31               	movwf	secs_II_message@block,c
  6933  011C40  0E02               	movlw	high _H26
  6934  011C42  6E32               	movwf	secs_II_message@block+1,c
  6935                           
  6936                           ;gemsecs.c: 920:    block.length = sizeof(header26);
  6937  011C44  0E1D               	movlw	29
  6938  011C46  6E33               	movwf	secs_II_message@block+2,c
  6939                           
  6940                           ;gemsecs.c: 921:    H26[0].block.block.systemb = V.systemb;
  6941  011C48  CBF9  F2F3         	movff	_V+299,_H26+18	;volatile
  6942  011C4C  CBFA  F2F4         	movff	_V+300,_H26+19	;volatile
  6943  011C50  CBFB  F2F5         	movff	_V+301,_H26+20	;volatile
  6944  011C54  CBFC  F2F6         	movff	_V+302,_H26+21	;volatile
  6945                           
  6946                           ;gemsecs.c: 927:    break;
  6947  011C58  D74D               	goto	l16066
  6948  011C5A                     l16132:
  6949                           
  6950                           ;gemsecs.c: 929:    block.header = (uint8_t*) & H13[3];
  6951  011C5A  0E8B               	movlw	low (_H13+48)
  6952  011C5C  6E31               	movwf	secs_II_message@block,c
  6953  011C5E  0E01               	movlw	high (_H13+48)
  6954  011C60  6E32               	movwf	secs_II_message@block+1,c
  6955                           
  6956                           ;gemsecs.c: 930:    block.length = sizeof(header13);
  6957  011C62  0E10               	movlw	16
  6958  011C64  6E33               	movwf	secs_II_message@block+2,c
  6959                           
  6960                           ;gemsecs.c: 931:    H13[3].block.block.systemb = V.systemb;
  6961  011C66  CBF9  F190         	movff	_V+299,_H13+53	;volatile
  6962  011C6A  CBFA  F191         	movff	_V+300,_H13+54	;volatile
  6963  011C6E  CBFB  F192         	movff	_V+301,_H13+55	;volatile
  6964  011C72  CBFC  F193         	movff	_V+302,_H13+56	;volatile
  6965                           
  6966                           ;gemsecs.c: 932:    break;
  6967  011C76  D73E               	goto	l16066
  6968  011C78                     l16150:
  6969                           
  6970                           ;stkvar	_function @ sp[(-2)+-7]
  6971  011C78  0EF7               	movlw	-9
  6972  011C7A  50E3               	movf	plusw1,w,c
  6973  011C7C  6E42               	movwf	btemp+10,c
  6974  011C7E  6A43               	clrf	btemp+11,c
  6975                           
  6976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6977                           ; Switch size 1, requested type "simple"
  6978                           ; Number of cases is 1, Range of values is 0 to 0
  6979                           ; switch strategies available:
  6980                           ; Name         Instructions Cycles
  6981                           ; simple_byte            4     3 (average)
  6982                           ;	Chosen strategy is simple_byte
  6983  011C80  5043               	movf	btemp+11,w,c
  6984  011C82  0A00               	xorlw	0	; case 0
  6985  011C84  A4D8               	btfss	status,2,c
  6986  011C86  D7A7               	goto	l16112
  6987                           
  6988                           ; Switch size 1, requested type "simple"
  6989                           ; Number of cases is 2, Range of values is 17 to 25
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte            7     4 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994  011C88  5042               	movf	btemp+10,w,c
  6995  011C8A  0A11               	xorlw	17	; case 17
  6996  011C8C  B4D8               	btfsc	status,2,c
  6997  011C8E  D7D6               	goto	l16126
  6998  011C90  0A08               	xorlw	8	; case 25
  6999  011C92  B4D8               	btfsc	status,2,c
  7000  011C94  D7E2               	goto	l16132
  7001  011C96  D79F               	goto	l16112
  7002  011C98                     l16152:
  7003                           
  7004                           ;gemsecs.c: 945:    block.header = (uint8_t*) & H13[2];
  7005  011C98  0E7B               	movlw	low (_H13+32)
  7006  011C9A  6E31               	movwf	secs_II_message@block,c
  7007  011C9C  0E01               	movlw	high (_H13+32)
  7008  011C9E  6E32               	movwf	secs_II_message@block+1,c
  7009                           
  7010                           ;gemsecs.c: 946:    block.length = sizeof(header13);
  7011  011CA0  0E10               	movlw	16
  7012  011CA2  6E33               	movwf	secs_II_message@block+2,c
  7013                           
  7014                           ;gemsecs.c: 947:    H13[2].block.block.systemb = V.systemb;
  7015  011CA4  CBF9  F180         	movff	_V+299,_H13+37	;volatile
  7016  011CA8  CBFA  F181         	movff	_V+300,_H13+38	;volatile
  7017  011CAC  CBFB  F182         	movff	_V+301,_H13+39	;volatile
  7018  011CB0  CBFC  F183         	movff	_V+302,_H13+40	;volatile
  7019                           
  7020                           ;gemsecs.c: 948:    break;
  7021  011CB4  D71F               	goto	l16066
  7022  011CB6                     l16170:
  7023                           
  7024                           ;stkvar	_function @ sp[(-2)+-7]
  7025  011CB6  0EF7               	movlw	-9
  7026  011CB8  50E3               	movf	plusw1,w,c
  7027  011CBA  6E42               	movwf	btemp+10,c
  7028  011CBC  6A43               	clrf	btemp+11,c
  7029                           
  7030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7031                           ; Switch size 1, requested type "simple"
  7032                           ; Number of cases is 1, Range of values is 0 to 0
  7033                           ; switch strategies available:
  7034                           ; Name         Instructions Cycles
  7035                           ; simple_byte            4     3 (average)
  7036                           ;	Chosen strategy is simple_byte
  7037  011CBE  5043               	movf	btemp+11,w,c
  7038  011CC0  0A00               	xorlw	0	; case 0
  7039  011CC2  A4D8               	btfss	status,2,c
  7040  011CC4  D788               	goto	l16112
  7041                           
  7042                           ; Switch size 1, requested type "simple"
  7043                           ; Number of cases is 1, Range of values is 1 to 1
  7044                           ; switch strategies available:
  7045                           ; Name         Instructions Cycles
  7046                           ; simple_byte            4     3 (average)
  7047                           ;	Chosen strategy is simple_byte
  7048  011CC6  5042               	movf	btemp+10,w,c
  7049  011CC8  0A01               	xorlw	1	; case 1
  7050  011CCA  B4D8               	btfsc	status,2,c
  7051  011CCC  D7E5               	goto	l16152
  7052  011CCE  D783               	goto	l16112
  7053  011CD0                     l16172:
  7054                           
  7055                           ;gemsecs.c: 961:    block.header = (uint8_t*) & H13[0];
  7056  011CD0  0E5B               	movlw	low _H13
  7057  011CD2  6E31               	movwf	secs_II_message@block,c
  7058  011CD4  0E01               	movlw	high _H13
  7059  011CD6  6E32               	movwf	secs_II_message@block+1,c
  7060                           
  7061                           ;gemsecs.c: 962:    block.length = sizeof(header13);
  7062  011CD8  0E10               	movlw	16
  7063  011CDA  6E33               	movwf	secs_II_message@block+2,c
  7064                           
  7065                           ;gemsecs.c: 963:    H13[0].block.block.systemb = V.systemb;
  7066  011CDC  CBF9  F160         	movff	_V+299,_H13+5	;volatile
  7067  011CE0  CBFA  F161         	movff	_V+300,_H13+6	;volatile
  7068  011CE4  CBFB  F162         	movff	_V+301,_H13+7	;volatile
  7069  011CE8  CBFC  F163         	movff	_V+302,_H13+8	;volatile
  7070                           
  7071                           ;gemsecs.c: 964:    H13[0].block.block.function = 12;
  7072  011CEC  0E0C               	movlw	12
  7073  011CEE  D01F               	goto	L13
  7074  011CF0                     l16180:
  7075                           
  7076                           ;gemsecs.c: 967:    block.header = (uint8_t*) & H13[0];
  7077  011CF0  0E5B               	movlw	low _H13
  7078  011CF2  6E31               	movwf	secs_II_message@block,c
  7079  011CF4  0E01               	movlw	high _H13
  7080  011CF6  6E32               	movwf	secs_II_message@block+1,c
  7081                           
  7082                           ;gemsecs.c: 968:    block.length = sizeof(header13);
  7083  011CF8  0E10               	movlw	16
  7084  011CFA  6E33               	movwf	secs_II_message@block+2,c
  7085                           
  7086                           ;gemsecs.c: 969:    H13[0].block.block.systemb = V.systemb;
  7087  011CFC  CBF9  F160         	movff	_V+299,_H13+5	;volatile
  7088  011D00  CBFA  F161         	movff	_V+300,_H13+6	;volatile
  7089  011D04  CBFB  F162         	movff	_V+301,_H13+7	;volatile
  7090  011D08  CBFC  F163         	movff	_V+302,_H13+8	;volatile
  7091                           
  7092                           ;gemsecs.c: 970:    H13[0].block.block.function = 14;
  7093  011D0C  0E0E               	movlw	14
  7094  011D0E  D00F               	goto	L13
  7095  011D10                     l16188:
  7096                           
  7097                           ;gemsecs.c: 973:    block.header = (uint8_t*) & H13[0];
  7098  011D10  0E5B               	movlw	low _H13
  7099  011D12  6E31               	movwf	secs_II_message@block,c
  7100  011D14  0E01               	movlw	high _H13
  7101  011D16  6E32               	movwf	secs_II_message@block+1,c
  7102                           
  7103                           ;gemsecs.c: 974:    block.length = sizeof(header13);
  7104  011D18  0E10               	movlw	16
  7105  011D1A  6E33               	movwf	secs_II_message@block+2,c
  7106                           
  7107                           ;gemsecs.c: 975:    H13[0].block.block.systemb = V.systemb;
  7108  011D1C  CBF9  F160         	movff	_V+299,_H13+5	;volatile
  7109  011D20  CBFA  F161         	movff	_V+300,_H13+6	;volatile
  7110  011D24  CBFB  F162         	movff	_V+301,_H13+7	;volatile
  7111  011D28  CBFC  F163         	movff	_V+302,_H13+8	;volatile
  7112                           
  7113                           ;gemsecs.c: 976:    H13[0].block.block.function = 26;
  7114  011D2C  0E1A               	movlw	26
  7115  011D2E                     L13:
  7116  011D2E  0101               	movlb	1	; () banked
  7117  011D30  6F66               	movwf	(_H13+11)& (0+255),b
  7118                           
  7119                           ;gemsecs.c: 977:    break;
  7120  011D32  D6E0               	goto	l16066
  7121  011D34                     l16208:
  7122                           
  7123                           ;stkvar	_function @ sp[(-2)+-7]
  7124  011D34  0EF7               	movlw	-9
  7125  011D36  50E3               	movf	plusw1,w,c
  7126  011D38  6E42               	movwf	btemp+10,c
  7127  011D3A  6A43               	clrf	btemp+11,c
  7128                           
  7129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7130                           ; Switch size 1, requested type "simple"
  7131                           ; Number of cases is 1, Range of values is 0 to 0
  7132                           ; switch strategies available:
  7133                           ; Name         Instructions Cycles
  7134                           ; simple_byte            4     3 (average)
  7135                           ;	Chosen strategy is simple_byte
  7136  011D3C  5043               	movf	btemp+11,w,c
  7137  011D3E  0A00               	xorlw	0	; case 0
  7138  011D40  A4D8               	btfss	status,2,c
  7139  011D42  D749               	goto	l16112
  7140                           
  7141                           ; Switch size 1, requested type "simple"
  7142                           ; Number of cases is 3, Range of values is 11 to 25
  7143                           ; switch strategies available:
  7144                           ; Name         Instructions Cycles
  7145                           ; simple_byte           10     6 (average)
  7146                           ;	Chosen strategy is simple_byte
  7147  011D44  5042               	movf	btemp+10,w,c
  7148  011D46  0A0B               	xorlw	11	; case 11
  7149  011D48  B4D8               	btfsc	status,2,c
  7150  011D4A  D7C2               	goto	l16172
  7151  011D4C  0A06               	xorlw	6	; case 13
  7152  011D4E  B4D8               	btfsc	status,2,c
  7153  011D50  D7CF               	goto	l16180
  7154  011D52  0A14               	xorlw	20	; case 25
  7155  011D54  B4D8               	btfsc	status,2,c
  7156  011D56  D7DC               	goto	l16188
  7157  011D58  D73E               	goto	l16112
  7158  011D5A                     l16210:
  7159                           
  7160                           ;gemsecs.c: 998:    V.equip_timeout++;
  7161  011D5A  EE23  F015         	lfsr	2,_V+327	;volatile
  7162  011D5E  2ADE               	incf	postinc2,f,c
  7163  011D60  0E00               	movlw	0
  7164  011D62  22DD               	addwfc	postdec2,f,c
  7165                           
  7166                           ;gemsecs.c: 999:    break;
  7167  011D64  D6C7               	goto	l16066
  7168  011D66                     l16224:
  7169                           
  7170                           ;stkvar	_function @ sp[(-2)+-7]
  7171  011D66  0EF7               	movlw	-9
  7172  011D68  50E3               	movf	plusw1,w,c
  7173  011D6A  6E42               	movwf	btemp+10,c
  7174  011D6C  6A43               	clrf	btemp+11,c
  7175                           
  7176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7177                           ; Switch size 1, requested type "simple"
  7178                           ; Number of cases is 1, Range of values is 0 to 0
  7179                           ; switch strategies available:
  7180                           ; Name         Instructions Cycles
  7181                           ; simple_byte            4     3 (average)
  7182                           ;	Chosen strategy is simple_byte
  7183  011D6E  5043               	movf	btemp+11,w,c
  7184  011D70  0A00               	xorlw	0	; case 0
  7185  011D72  A4D8               	btfss	status,2,c
  7186  011D74  D730               	goto	l16112
  7187                           
  7188                           ; Switch size 1, requested type "simple"
  7189                           ; Number of cases is 7, Range of values is 1 to 13
  7190                           ; switch strategies available:
  7191                           ; Name         Instructions Cycles
  7192                           ; simple_byte           22    12 (average)
  7193                           ;	Chosen strategy is simple_byte
  7194  011D76  5042               	movf	btemp+10,w,c
  7195  011D78  0A01               	xorlw	1	; case 1
  7196  011D7A  B4D8               	btfsc	status,2,c
  7197  011D7C  D6BB               	goto	l16066
  7198  011D7E  0A02               	xorlw	2	; case 3
  7199  011D80  B4D8               	btfsc	status,2,c
  7200  011D82  D6B8               	goto	l16066
  7201  011D84  0A06               	xorlw	6	; case 5
  7202  011D86  B4D8               	btfsc	status,2,c
  7203  011D88  D6B5               	goto	l16066
  7204  011D8A  0A02               	xorlw	2	; case 7
  7205  011D8C  B4D8               	btfsc	status,2,c
  7206  011D8E  D6B2               	goto	l16066
  7207  011D90  0A0E               	xorlw	14	; case 9
  7208  011D92  B4D8               	btfsc	status,2,c
  7209  011D94  D7E2               	goto	l16210
  7210  011D96  0A02               	xorlw	2	; case 11
  7211  011D98  B4D8               	btfsc	status,2,c
  7212  011D9A  D6AC               	goto	l16066
  7213  011D9C  0A06               	xorlw	6	; case 13
  7214  011D9E  B4D8               	btfsc	status,2,c
  7215  011DA0  D6A9               	goto	l16066
  7216  011DA2  D719               	goto	l16112
  7217  011DA4                     l16226:
  7218                           
  7219                           ;gemsecs.c: 1014:   V.set_sequ = 1;
  7220  011DA4  EE23  F019         	lfsr	2,_V+331	;volatile
  7221  011DA8  86DF               	bsf	indf2,3,c
  7222                           
  7223                           ;gemsecs.c: 1015:   switch (function) {
  7224  011DAA  D0EE               	goto	l16316
  7225  011DAC                     l16228:
  7226                           
  7227                           ;gemsecs.c: 1017:    block.header = (uint8_t*) & H13[1];
  7228  011DAC  0E6B               	movlw	low (_H13+16)
  7229  011DAE  6E31               	movwf	secs_II_message@block,c
  7230  011DB0  0E01               	movlw	high (_H13+16)
  7231  011DB2  6E32               	movwf	secs_II_message@block+1,c
  7232                           
  7233                           ;gemsecs.c: 1018:    block.length = sizeof(header13);
  7234  011DB4  0E10               	movlw	16
  7235  011DB6  6E33               	movwf	secs_II_message@block+2,c
  7236                           
  7237                           ;gemsecs.c: 1019:    H13[1].block.block.systemb = V.systemb;
  7238  011DB8  CBF9  F170         	movff	_V+299,_H13+21	;volatile
  7239  011DBC  CBFA  F171         	movff	_V+300,_H13+22	;volatile
  7240  011DC0  CBFB  F172         	movff	_V+301,_H13+23	;volatile
  7241  011DC4  CBFC  F173         	movff	_V+302,_H13+24	;volatile
  7242                           
  7243                           ;gemsecs.c: 1020:    H53[0].block.block.systemb = V.ticks;
  7244  011DC8  CBF5  F32D         	movff	_V+295,_H53+45	;volatile
  7245  011DCC  CBF6  F32E         	movff	_V+296,_H53+46	;volatile
  7246  011DD0  CBF7  F32F         	movff	_V+297,_H53+47	;volatile
  7247  011DD4  CBF8  F330         	movff	_V+298,_H53+48	;volatile
  7248                           
  7249                           ;gemsecs.c: 1021:    set_display_info(DIS_TERM);
  7250  011DD8  0E01               	movlw	1
  7251  011DDA  6EE6               	movwf	postinc1,c
  7252  011DDC  EC6F  F0B8         	call	_set_display_info	;wreg free
  7253                           
  7254                           ;gemsecs.c: 1023:    switch (s10f1_opcmd()) {
  7255  011DE0  D0A0               	goto	l16296
  7256  011DE2                     l2126:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;gemsecs.c: 1025:     block.respond = 1;
  7260  011DE2  8037               	bsf	secs_II_message@block+6,0,c
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;gemsecs.c: 1026:     block.reply = (uint8_t*) & H53[1];
  7264  011DE4  0E38               	movlw	low (_H53+56)
  7265  011DE6  6E34               	movwf	secs_II_message@block+3,c
  7266  011DE8  0E03               	movlw	high (_H53+56)
  7267  011DEA  6E35               	movwf	secs_II_message@block+4,c
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;gemsecs.c: 1027:     block.reply_length = sizeof(header53);
  7271  011DEC  0E38               	movlw	56
  7272  011DEE  6E36               	movwf	secs_II_message@block+5,c
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;gemsecs.c: 1028:     H53[1].data[38] = V.response.TID;
  7276  011DF0  CC3C  F360         	movff	_V+366,_H53+96	;volatile
  7277  011DF4                     l16244:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;gemsecs.c: 1029:     V.queue = 1;
  7281  011DF4  EE23  F01A         	lfsr	2,_V+332	;volatile
  7282  011DF8  88DF               	bsf	indf2,4,c
  7283                           
  7284                           ;gemsecs.c: 1030:     break;
  7285  011DFA  D0B5               	goto	l16298
  7286  011DFC                     l2128:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;gemsecs.c: 1032:     block.respond = 1;
  7290  011DFC  8037               	bsf	secs_II_message@block+6,0,c
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;gemsecs.c: 1033:     block.reply = (uint8_t*) & H33[0];
  7294  011DFE  0EBC               	movlw	low _H33
  7295  011E00  6E34               	movwf	secs_II_message@block+3,c
  7296  011E02  6A35               	clrf	secs_II_message@block+4,c
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;gemsecs.c: 1034:     block.reply_length = sizeof(header33);
  7300  011E04  0E24               	movlw	36
  7301  011E06  6E36               	movwf	secs_II_message@block+5,c
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;gemsecs.c: 1035:     V.queue = 1;
  7305  011E08  EE23  F01A         	lfsr	2,_V+332	;volatile
  7306  011E0C  88DF               	bsf	indf2,4,c
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;gemsecs.c: 1036:     set_display_info(DIS_LOAD);
  7310  011E0E  0E03               	movlw	3
  7311  011E10  6EE6               	movwf	postinc1,c
  7312  011E12  EC6F  F0B8         	call	_set_display_info	;wreg free
  7313                           
  7314                           ;gemsecs.c: 1037:     break;
  7315  011E16  D0A7               	goto	l16298
  7316  011E18                     l2129:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;gemsecs.c: 1039:     block.respond = 1;
  7320  011E18  8037               	bsf	secs_II_message@block+6,0,c
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;gemsecs.c: 1040:     block.reply = (uint8_t*) & H33[0];
  7324  011E1A  0EBC               	movlw	low _H33
  7325  011E1C  6E34               	movwf	secs_II_message@block+3,c
  7326  011E1E  6A35               	clrf	secs_II_message@block+4,c
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;gemsecs.c: 1041:     block.reply_length = sizeof(header33);
  7330  011E20  0E24               	movlw	36
  7331  011E22  6E36               	movwf	secs_II_message@block+5,c
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;gemsecs.c: 1042:     V.queue = 1;
  7335  011E24  EE23  F01A         	lfsr	2,_V+332	;volatile
  7336  011E28  88DF               	bsf	indf2,4,c
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;gemsecs.c: 1043:     set_display_info(DIS_UNLOAD);
  7340  011E2A  0E04               	movlw	4
  7341  011E2C  6EE6               	movwf	postinc1,c
  7342  011E2E  EC6F  F0B8         	call	_set_display_info	;wreg free
  7343                           
  7344                           ;gemsecs.c: 1044:     break;
  7345  011E32  D099               	goto	l16298
  7346  011E34                     l2130:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;gemsecs.c: 1046:     block.respond = 1;
  7350  011E34  8037               	bsf	secs_II_message@block+6,0,c
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;gemsecs.c: 1047:     block.reply = (uint8_t*) & H33[0];
  7354  011E36  0EBC               	movlw	low _H33
  7355  011E38  6E34               	movwf	secs_II_message@block+3,c
  7356  011E3A  6A35               	clrf	secs_II_message@block+4,c
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;gemsecs.c: 1048:     block.reply_length = sizeof(header33);
  7360  011E3C  0E24               	movlw	36
  7361  011E3E  6E36               	movwf	secs_II_message@block+5,c
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;gemsecs.c: 1049:     V.queue = 1;
  7365  011E40  EE23  F01A         	lfsr	2,_V+332	;volatile
  7366  011E44  88DF               	bsf	indf2,4,c
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;gemsecs.c: 1050:     set_display_info(DIS_PUMP);
  7370  011E46  0E05               	movlw	5
  7371  011E48  6EE6               	movwf	postinc1,c
  7372  011E4A  EC6F  F0B8         	call	_set_display_info	;wreg free
  7373                           
  7374                           ;gemsecs.c: 1051:     break;
  7375  011E4E  D08B               	goto	l16298
  7376  011E50                     l16270:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;gemsecs.c: 1053:     parse_sid();
  7380  011E50  ECDA  F0B0         	call	_parse_sid	;wreg free
  7381                           
  7382                           ;gemsecs.c: 1054:     sequence_messages(V.sid);
  7383  011E54  EE23  F04B         	lfsr	2,_V+381	;volatile
  7384  011E58  50DF               	movf	indf2,w,c
  7385  011E5A  6EE6               	movwf	postinc1,c
  7386  011E5C  EC5F  F0A0         	call	_sequence_messages	;wreg free
  7387                           
  7388                           ;gemsecs.c: 1055:     set_display_info(DIS_SEQUENCE);
  7389  011E60  0E07               	movlw	7
  7390  011E62  6EE6               	movwf	postinc1,c
  7391  011E64  EC6F  F0B8         	call	_set_display_info	;wreg free
  7392                           
  7393                           ;gemsecs.c: 1056:     V.sequences++;
  7394  011E68  EE23  F017         	lfsr	2,_V+329	;volatile
  7395  011E6C  2ADE               	incf	postinc2,f,c
  7396  011E6E  0E00               	movlw	0
  7397  011E70  22DD               	addwfc	postdec2,f,c
  7398                           
  7399                           ;gemsecs.c: 1057:     break;
  7400  011E72  D079               	goto	l16298
  7401  011E74                     l2132:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;gemsecs.c: 1059:     block.respond = 1;
  7405  011E74  8037               	bsf	secs_II_message@block+6,0,c
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;gemsecs.c: 1060:     block.reply = (uint8_t*) & H53[0];
  7409  011E76  0E00               	movlw	low _H53
  7410  011E78  6E34               	movwf	secs_II_message@block+3,c
  7411  011E7A  0E03               	movlw	high _H53
  7412  011E7C  6E35               	movwf	secs_II_message@block+4,c
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;gemsecs.c: 1061:     block.reply_length = sizeof(header53);
  7416  011E7E  0E38               	movlw	56
  7417  011E80  6E36               	movwf	secs_II_message@block+5,c
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;gemsecs.c: 1062:     H53[0].data[38] = V.response.TID;
  7421  011E82  CC3C  F328         	movff	_V+366,_H53+40	;volatile
  7422  011E86  D7B6               	goto	l16244
  7423  011E88                     l16286:
  7424                           
  7425                           ;gemsecs.c: 1068:      DATAEE_WriteByte(i, 0xff);
  7426  011E88  0EFF               	movlw	255
  7427  011E8A  6EE6               	movwf	postinc1,c
  7428                           
  7429                           ;stkvar	_i @ sp[(-3)+0]
  7430  011E8C  0EFD               	movlw	-3
  7431  011E8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7432  011E94  006F FF8F FFE6     	movff	plusw1,postinc1
  7433  011E9A  EC81  F0B1         	call	_DATAEE_WriteByte	;wreg free
  7434                           
  7435                           ;gemsecs.c: 1069:     } while (++i <= 764);
  7436                           ;stkvar	_i @ sp[(-2)+0]
  7437  011E9E  0EFE               	movlw	-2
  7438  011EA0  50E3               	movf	plusw1,w,c
  7439  011EA2  0F01               	addlw	1
  7440  011EA4  6E38               	movwf	btemp,c
  7441  011EA6  0EFE               	movlw	-2
  7442  011EA8  0060  F0E3  FFE3   	movff	btemp,plusw1
  7443  011EAE  6A38               	clrf	btemp,c
  7444  011EB0  0EFF               	movlw	-1
  7445  011EB2  50E3               	movf	plusw1,w,c
  7446  011EB4  2038               	addwfc	btemp,w,c
  7447  011EB6  6E38               	movwf	btemp,c
  7448  011EB8  0EFF               	movlw	-1
  7449  011EBA  0060  F0E3  FFE3   	movff	btemp,plusw1
  7450  011EC0  0EFE               	movlw	-2
  7451  011EC2  006F FF8C  F038    	movff	plusw1,btemp
  7452  011EC8  0EFD               	movlw	253
  7453  011ECA  5E38               	subwf	btemp,f,c
  7454  011ECC  0EFF               	movlw	-1
  7455  011ECE  006F FF8C  F038    	movff	plusw1,btemp
  7456  011ED4  0E02               	movlw	2
  7457  011ED6  5A38               	subwfb	btemp,f,c
  7458  011ED8  A0D8               	btfss	status,0,c
  7459  011EDA  D7D6               	goto	l16286
  7460                           
  7461                           ;gemsecs.c: 1070:     V.response.log_num = 0;
  7462  011EDC  0E00               	movlw	0
  7463  011EDE  006F FFA0  FC47    	movff	wreg,_V+377	;volatile
  7464  011EE4  0E00               	movlw	0
  7465  011EE6  006F FFA0  FC48    	movff	wreg,_V+378	;volatile
  7466                           
  7467                           ;gemsecs.c: 1071:     V.response.log_seq = 0;
  7468  011EEC  0E00               	movlw	0
  7469  011EEE  006F FFA0  FC40    	movff	wreg,_V+370	;volatile
  7470                           
  7471                           ;gemsecs.c: 1072:     set_display_info(DIS_LOG);
  7472  011EF4  0E02               	movlw	2
  7473  011EF6  6EE6               	movwf	postinc1,c
  7474  011EF8  EC6F  F0B8         	call	_set_display_info	;wreg free
  7475                           
  7476                           ;gemsecs.c: 1073:     break;
  7477  011EFC  D034               	goto	l16298
  7478  011EFE                     l16292:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;gemsecs.c: 1075:     V.debug = !V.debug;
  7482  011EFE  EE23  F01A         	lfsr	2,_V+332	;volatile
  7483  011F02  BADF               	btfsc	indf2,5,c
  7484  011F04  D003               	goto	u11010
  7485  011F06  6A43               	clrf	btemp+11,c
  7486  011F08  2A43               	incf	btemp+11,f,c
  7487  011F0A  D001               	goto	u11028
  7488  011F0C                     u11010:
  7489  011F0C  6A43               	clrf	btemp+11,c
  7490  011F0E                     u11028:
  7491  011F0E  EE23  F01A         	lfsr	2,_V+332	;volatile
  7492  011F12  3A43               	swapf	btemp+11,f,c
  7493  011F14  4643               	rlncf	btemp+11,f,c
  7494  011F16  50DF               	movf	223,w,c
  7495  011F18  1843               	xorwf	btemp+11,w,c
  7496  011F1A  0BDF               	andlw	-33
  7497  011F1C  1843               	xorwf	btemp+11,w,c
  7498  011F1E  6EDF               	movwf	223,c
  7499  011F20  D022               	goto	l16298
  7500  011F22                     l16296:
  7501  011F22  ECAC  F0A2         	call	_s10f1_opcmd	;wreg free
  7502  011F26  5038               	movf	btemp,w,c
  7503  011F28  6E42               	movwf	btemp+10,c
  7504  011F2A  6A43               	clrf	btemp+11,c
  7505                           
  7506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 1, Range of values is 0 to 0
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte            4     3 (average)
  7512                           ;	Chosen strategy is simple_byte
  7513  011F2C  5043               	movf	btemp+11,w,c
  7514  011F2E  0A00               	xorlw	0	; case 0
  7515  011F30  A4D8               	btfss	status,2,c
  7516  011F32  D019               	goto	l16298
  7517                           
  7518                           ; BSR set to: 0
  7519                           ; Switch size 1, requested type "simple"
  7520                           ; Number of cases is 8, Range of values is 0 to 11
  7521                           ; switch strategies available:
  7522                           ; Name         Instructions Cycles
  7523                           ; simple_byte           25    13 (average)
  7524                           ;	Chosen strategy is simple_byte
  7525  011F34  5042               	movf	btemp+10,w,c
  7526  011F36  0A00               	xorlw	0	; case 0
  7527  011F38  B4D8               	btfsc	status,2,c
  7528  011F3A  D79C               	goto	l2132
  7529  011F3C  0A01               	xorlw	1	; case 1
  7530  011F3E  B4D8               	btfsc	status,2,c
  7531  011F40  D750               	goto	l2126
  7532  011F42  0A04               	xorlw	4	; case 5
  7533  011F44  B4D8               	btfsc	status,2,c
  7534  011F46  D7DB               	goto	l16292
  7535  011F48  0A03               	xorlw	3	; case 6
  7536  011F4A  B4D8               	btfsc	status,2,c
  7537  011F4C  D79D               	goto	l16286
  7538  011F4E  0A01               	xorlw	1	; case 7
  7539  011F50  B4D8               	btfsc	status,2,c
  7540  011F52  D754               	goto	l2128
  7541  011F54  0A0F               	xorlw	15	; case 8
  7542  011F56  B4D8               	btfsc	status,2,c
  7543  011F58  D75F               	goto	l2129
  7544  011F5A  0A01               	xorlw	1	; case 9
  7545  011F5C  B4D8               	btfsc	status,2,c
  7546  011F5E  D76A               	goto	l2130
  7547  011F60  0A02               	xorlw	2	; case 11
  7548  011F62  B4D8               	btfsc	status,2,c
  7549  011F64  D775               	goto	l16270
  7550  011F66                     l16298:
  7551                           
  7552                           ;gemsecs.c: 1079:    set_temp_display_help(display_info());
  7553  011F66  ECAD  F0B9         	call	_display_info	;wreg free
  7554  011F6A  5038               	movf	btemp,w,c
  7555  011F6C  6EE6               	movwf	postinc1,c
  7556  011F6E  EC51  F0B9         	call	_set_temp_display_help	;wreg free
  7557                           
  7558                           ;gemsecs.c: 1080:    vterm_sequence();
  7559  011F72  EC57  F094         	call	_vterm_sequence	;wreg free
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;gemsecs.c: 1081:    StartTimer(TMR_INFO, 3000);
  7563  011F76  0EB8               	movlw	184
  7564  011F78  6EE6               	movwf	postinc1,c
  7565  011F7A  0E0B               	movlw	11
  7566  011F7C  6EE6               	movwf	postinc1,c
  7567  011F7E  0E07               	movlw	7
  7568  011F80  6EE6               	movwf	postinc1,c
  7569  011F82  EC26  F0B5         	call	_StartTimer	;wreg free
  7570                           
  7571                           ;gemsecs.c: 1082:    break;
  7572  011F86  D5B6               	goto	l16066
  7573  011F88                     l16316:
  7574                           
  7575                           ;stkvar	_function @ sp[(-2)+-7]
  7576  011F88  0EF7               	movlw	-9
  7577  011F8A  50E3               	movf	plusw1,w,c
  7578  011F8C  6E42               	movwf	btemp+10,c
  7579  011F8E  6A43               	clrf	btemp+11,c
  7580                           
  7581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7582                           ; Switch size 1, requested type "simple"
  7583                           ; Number of cases is 1, Range of values is 0 to 0
  7584                           ; switch strategies available:
  7585                           ; Name         Instructions Cycles
  7586                           ; simple_byte            4     3 (average)
  7587                           ;	Chosen strategy is simple_byte
  7588  011F90  5043               	movf	btemp+11,w,c
  7589  011F92  0A00               	xorlw	0	; case 0
  7590  011F94  A4D8               	btfss	status,2,c
  7591  011F96  D61F               	goto	l16112
  7592                           
  7593                           ; Switch size 1, requested type "simple"
  7594                           ; Number of cases is 1, Range of values is 1 to 1
  7595                           ; switch strategies available:
  7596                           ; Name         Instructions Cycles
  7597                           ; simple_byte            4     3 (average)
  7598                           ;	Chosen strategy is simple_byte
  7599  011F98  5042               	movf	btemp+10,w,c
  7600  011F9A  0A01               	xorlw	1	; case 1
  7601  011F9C  B4D8               	btfsc	status,2,c
  7602  011F9E  D706               	goto	l16228
  7603  011FA0  D61A               	goto	l16112
  7604  011FA2                     l16330:
  7605                           
  7606                           ;stkvar	_stream @ sp[(-2)+-6]
  7607  011FA2  0EF8               	movlw	-8
  7608  011FA4  50E3               	movf	plusw1,w,c
  7609  011FA6  6E42               	movwf	btemp+10,c
  7610  011FA8  6A43               	clrf	btemp+11,c
  7611                           
  7612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7613                           ; Switch size 1, requested type "simple"
  7614                           ; Number of cases is 1, Range of values is 0 to 0
  7615                           ; switch strategies available:
  7616                           ; Name         Instructions Cycles
  7617                           ; simple_byte            4     3 (average)
  7618                           ;	Chosen strategy is simple_byte
  7619  011FAA  5043               	movf	btemp+11,w,c
  7620  011FAC  0A00               	xorlw	0	; case 0
  7621  011FAE  A4D8               	btfss	status,2,c
  7622  011FB0  D612               	goto	l16112
  7623                           
  7624                           ; Switch size 1, requested type "simple"
  7625                           ; Number of cases is 6, Range of values is 1 to 10
  7626                           ; switch strategies available:
  7627                           ; Name         Instructions Cycles
  7628                           ; simple_byte           19    10 (average)
  7629                           ;	Chosen strategy is simple_byte
  7630  011FB2  5042               	movf	btemp+10,w,c
  7631  011FB4  0A01               	xorlw	1	; case 1
  7632  011FB6  B4D8               	btfsc	status,2,c
  7633  011FB8  D62B               	goto	l16124
  7634  011FBA  0A03               	xorlw	3	; case 2
  7635  011FBC  B4D8               	btfsc	status,2,c
  7636  011FBE  D65C               	goto	l16150
  7637  011FC0  0A07               	xorlw	7	; case 5
  7638  011FC2  B4D8               	btfsc	status,2,c
  7639  011FC4  D678               	goto	l16170
  7640  011FC6  0A03               	xorlw	3	; case 6
  7641  011FC8  B4D8               	btfsc	status,2,c
  7642  011FCA  D6B4               	goto	l16208
  7643  011FCC  0A0F               	xorlw	15	; case 9
  7644  011FCE  B4D8               	btfsc	status,2,c
  7645  011FD0  D6CA               	goto	l16224
  7646  011FD2  0A03               	xorlw	3	; case 10
  7647  011FD4  B4D8               	btfsc	status,2,c
  7648  011FD6  D6E6               	goto	l16226
  7649  011FD8  D5FE               	goto	l16112
  7650  011FDA                     l2082:
  7651                           
  7652                           ; _secs_II_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  7653  011FDA  52E5               	movf	postdec1,f,c
  7654  011FDC  52E5               	movf	postdec1,f,c
  7655  011FDE  0012               	return		;funcret
  7656  011FE0                     __end_of_secs_II_message:
  7657                           	opt callstack 0
  7658                           
  7659 ;; *************** function _vterm_sequence *****************
  7660 ;; Defined at:
  7661 ;;		line 141 in file "mconfig.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1  [STACK] void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/3C
  7672 ;;		On exit  : 3F/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:   12
  7682 ;; This function calls:
  7683 ;;		_get_vterm_ptr
  7684 ;;		_sprintf
  7685 ;; This function is called by:
  7686 ;;		_secs_II_message
  7687 ;; This function uses a reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text10
  7691  0128AE                     __ptext10:
  7692                           	opt callstack 0
  7693  0128AE                     _vterm_sequence:
  7694                           	opt callstack 16
  7695                           
  7696                           ;mconfig.c: 143:  switch (V.response.info) {
  7697                           
  7698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7699                           ;incstack = 0
  7700  0128AE  D1DC               	goto	l15934
  7701  0128B0                     l15916:
  7702                           
  7703                           ;mconfig.c: 145:   sprintf(get_vterm_ptr(0, 2), " S%dF%d log    %d    ", V.stream, V.fun
      +                          ction, V.response.log_seq & 0x03);
  7704                           ; multi bank
  7705  0128B0  010C               	movlb	(_V+370) shr (0+8)	;volatile
  7706  0128B2  5140               	movf	(_V+370)& (0+255),w,b	;volatile
  7707  0128B4  0B03               	andlw	3
  7708  0128B6  6EE6               	movwf	postinc1,c
  7709  0128B8  0E00               	movlw	0
  7710  0128BA  6EE6               	movwf	postinc1,c
  7711  0128BC  EE23  F002         	lfsr	2,_V+308	;volatile
  7712  0128C0  50DF               	movf	indf2,w,c
  7713  0128C2  6EE6               	movwf	postinc1,c
  7714  0128C4  0E00               	movlw	0
  7715  0128C6  6EE6               	movwf	postinc1,c
  7716  0128C8  EE23  F001         	lfsr	2,_V+307	;volatile
  7717  0128CC  50DF               	movf	indf2,w,c
  7718  0128CE  6EE6               	movwf	postinc1,c
  7719  0128D0  0E00               	movlw	0
  7720  0128D2  6EE6               	movwf	postinc1,c
  7721  0128D4  0ED7               	movlw	low STR_43
  7722  0128D6  6EE6               	movwf	postinc1,c
  7723  0128D8  0EFD               	movlw	high STR_43
  7724  0128DA  6EE6               	movwf	postinc1,c
  7725  0128DC  0E02               	movlw	2
  7726  0128DE  6EE6               	movwf	postinc1,c
  7727  0128E0  0E00               	movlw	0
  7728  0128E2  6EE6               	movwf	postinc1,c
  7729  0128E4  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7730  0128E8  0060  F0E3  FFE6   	movff	btemp,postinc1
  7731  0128EE  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7732  0128F4  0E0A               	movlw	10
  7733  0128F6  6EE6               	movwf	postinc1,c
  7734  0128F8  EC13  F0AB         	call	_sprintf	;wreg free
  7735                           
  7736                           ;mconfig.c: 146:   sprintf(get_vterm_ptr(1, 2), " Stored #%d        ", V.response.log_nu
      +                          m);
  7737  0128FC  EE23  F047         	lfsr	2,_V+377	;volatile
  7738  012900  006F FF78  F042    	movff	postinc2,btemp+10
  7739  012906  006F FF74  F043    	movff	postdec2,btemp+11
  7740  01290C  0060  F10B  FFE6   	movff	btemp+10,postinc1
  7741  012912  0060  F10F  FFE6   	movff	btemp+11,postinc1
  7742  012918  0E94               	movlw	low STR_44
  7743  01291A  6EE6               	movwf	postinc1,c
  7744  01291C  0EFE               	movlw	high STR_44
  7745  01291E  6EE6               	movwf	postinc1,c
  7746  012920  0E02               	movlw	2
  7747  012922  6EE6               	movwf	postinc1,c
  7748  012924  0E01               	movlw	1
  7749  012926  6EE6               	movwf	postinc1,c
  7750  012928  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7751  01292C  0060  F0E3  FFE6   	movff	btemp,postinc1
  7752  012932  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7753  012938  0E06               	movlw	6
  7754  01293A  6EE6               	movwf	postinc1,c
  7755  01293C  EC13  F0AB         	call	_sprintf	;wreg free
  7756                           
  7757                           ;mconfig.c: 147:   break;
  7758  012940  0012               	return	
  7759  012942                     l15918:
  7760                           
  7761                           ;mconfig.c: 149:   sprintf(get_vterm_ptr(0, 2), " Ready LL        ");
  7762  012942  0E2D               	movlw	low STR_45
  7763  012944  6EE6               	movwf	postinc1,c
  7764  012946  0EFF               	movlw	high STR_45
  7765  012948  6EE6               	movwf	postinc1,c
  7766  01294A  0E02               	movlw	2
  7767  01294C  6EE6               	movwf	postinc1,c
  7768  01294E  0E00               	movlw	0
  7769  012950  6EE6               	movwf	postinc1,c
  7770  012952  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7771  012956  0060  F0E3  FFE6   	movff	btemp,postinc1
  7772  01295C  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7773  012962  0E04               	movlw	4
  7774  012964  6EE6               	movwf	postinc1,c
  7775  012966  EC13  F0AB         	call	_sprintf	;wreg free
  7776                           
  7777                           ;mconfig.c: 150:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  7778  01296A  EE23  F03D         	lfsr	2,_V+367	;volatile
  7779  01296E  50DF               	movf	indf2,w,c
  7780  012970  6EE6               	movwf	postinc1,c
  7781  012972  0E00               	movlw	0
  7782  012974  6EE6               	movwf	postinc1,c
  7783  012976  0E80               	movlw	low STR_46
  7784  012978  6EE6               	movwf	postinc1,c
  7785  01297A  0EFE               	movlw	high STR_46
  7786  01297C  6EE6               	movwf	postinc1,c
  7787  01297E  0E02               	movlw	2
  7788  012980  6EE6               	movwf	postinc1,c
  7789  012982  0E01               	movlw	1
  7790  012984  6EE6               	movwf	postinc1,c
  7791  012986  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7792  01298A  0060  F0E3  FFE6   	movff	btemp,postinc1
  7793  012990  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7794  012996  0E06               	movlw	6
  7795  012998  6EE6               	movwf	postinc1,c
  7796  01299A  EC13  F0AB         	call	_sprintf	;wreg free
  7797                           
  7798                           ;mconfig.c: 151:   break;
  7799  01299E  0012               	return	
  7800  0129A0                     l15920:
  7801                           
  7802                           ;mconfig.c: 153:   sprintf(get_vterm_ptr(0, 2), " Pump LL         ");
  7803  0129A0  0E1B               	movlw	low STR_47
  7804  0129A2  6EE6               	movwf	postinc1,c
  7805  0129A4  0EFF               	movlw	high STR_47
  7806  0129A6  6EE6               	movwf	postinc1,c
  7807  0129A8  0E02               	movlw	2
  7808  0129AA  6EE6               	movwf	postinc1,c
  7809  0129AC  0E00               	movlw	0
  7810  0129AE  6EE6               	movwf	postinc1,c
  7811  0129B0  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7812  0129B4  0060  F0E3  FFE6   	movff	btemp,postinc1
  7813  0129BA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7814  0129C0  0E04               	movlw	4
  7815  0129C2  6EE6               	movwf	postinc1,c
  7816  0129C4  EC13  F0AB         	call	_sprintf	;wreg free
  7817                           
  7818                           ;mconfig.c: 154:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  7819  0129C8  EE23  F03D         	lfsr	2,_V+367	;volatile
  7820  0129CC  50DF               	movf	indf2,w,c
  7821  0129CE  6EE6               	movwf	postinc1,c
  7822  0129D0  0E00               	movlw	0
  7823  0129D2  6EE6               	movwf	postinc1,c
  7824  0129D4  0E80               	movlw	low STR_46
  7825  0129D6  6EE6               	movwf	postinc1,c
  7826  0129D8  0EFE               	movlw	high STR_46
  7827  0129DA  6EE6               	movwf	postinc1,c
  7828  0129DC  0E02               	movlw	2
  7829  0129DE  6EE6               	movwf	postinc1,c
  7830  0129E0  0E01               	movlw	1
  7831  0129E2  6EE6               	movwf	postinc1,c
  7832  0129E4  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7833  0129E8  0060  F0E3  FFE6   	movff	btemp,postinc1
  7834  0129EE  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7835  0129F4  0E06               	movlw	6
  7836  0129F6  6EE6               	movwf	postinc1,c
  7837  0129F8  EC13  F0AB         	call	_sprintf	;wreg free
  7838                           
  7839                           ;mconfig.c: 155:   break;
  7840  0129FC  0012               	return	
  7841  0129FE                     l15922:
  7842                           
  7843                           ;mconfig.c: 157:   sprintf(get_vterm_ptr(0, 2), " Open LL         ");
  7844  0129FE  0E09               	movlw	low STR_49
  7845  012A00  6EE6               	movwf	postinc1,c
  7846  012A02  0EFF               	movlw	high STR_49
  7847  012A04  6EE6               	movwf	postinc1,c
  7848  012A06  0E02               	movlw	2
  7849  012A08  6EE6               	movwf	postinc1,c
  7850  012A0A  0E00               	movlw	0
  7851  012A0C  6EE6               	movwf	postinc1,c
  7852  012A0E  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7853  012A12  0060  F0E3  FFE6   	movff	btemp,postinc1
  7854  012A18  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7855  012A1E  0E04               	movlw	4
  7856  012A20  6EE6               	movwf	postinc1,c
  7857  012A22  EC13  F0AB         	call	_sprintf	;wreg free
  7858                           
  7859                           ;mconfig.c: 158:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  7860  012A26  EE23  F03D         	lfsr	2,_V+367	;volatile
  7861  012A2A  50DF               	movf	indf2,w,c
  7862  012A2C  6EE6               	movwf	postinc1,c
  7863  012A2E  0E00               	movlw	0
  7864  012A30  6EE6               	movwf	postinc1,c
  7865  012A32  0E80               	movlw	low STR_46
  7866  012A34  6EE6               	movwf	postinc1,c
  7867  012A36  0EFE               	movlw	high STR_46
  7868  012A38  6EE6               	movwf	postinc1,c
  7869  012A3A  0E02               	movlw	2
  7870  012A3C  6EE6               	movwf	postinc1,c
  7871  012A3E  0E01               	movlw	1
  7872  012A40  6EE6               	movwf	postinc1,c
  7873  012A42  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7874  012A46  0060  F0E3  FFE6   	movff	btemp,postinc1
  7875  012A4C  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7876  012A52  0E06               	movlw	6
  7877  012A54  6EE6               	movwf	postinc1,c
  7878  012A56  EC13  F0AB         	call	_sprintf	;wreg free
  7879                           
  7880                           ;mconfig.c: 159:   break;
  7881  012A5A  0012               	return	
  7882  012A5C                     l15924:
  7883                           
  7884                           ;mconfig.c: 161:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7885  012A5C  0EC3               	movlw	low STR_35
  7886  012A5E  6EE6               	movwf	postinc1,c
  7887  012A60  0EFF               	movlw	high STR_35
  7888  012A62  6EE6               	movwf	postinc1,c
  7889  012A64  0ED0               	movlw	low STR_37
  7890  012A66  6EE6               	movwf	postinc1,c
  7891  012A68  0EFE               	movlw	high STR_37
  7892  012A6A  6EE6               	movwf	postinc1,c
  7893  012A6C  0E01               	movlw	1
  7894  012A6E  6EE6               	movwf	postinc1,c
  7895  012A70  0E00               	movlw	0
  7896  012A72  6EE6               	movwf	postinc1,c
  7897  012A74  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7898  012A78  0060  F0E3  FFE6   	movff	btemp,postinc1
  7899  012A7E  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7900  012A84  0E06               	movlw	6
  7901  012A86  6EE6               	movwf	postinc1,c
  7902  012A88  EC13  F0AB         	call	_sprintf	;wreg free
  7903                           
  7904                           ;mconfig.c: 162:   sprintf(get_vterm_ptr(1, 1), "DISPLAY %s        ", build_time);
  7905  012A8C  0ED9               	movlw	low STR_36
  7906  012A8E  6EE6               	movwf	postinc1,c
  7907  012A90  0EFF               	movlw	high STR_36
  7908  012A92  6EE6               	movwf	postinc1,c
  7909  012A94  0EE3               	movlw	low STR_52
  7910  012A96  6EE6               	movwf	postinc1,c
  7911  012A98  0EFE               	movlw	high STR_52
  7912  012A9A  6EE6               	movwf	postinc1,c
  7913  012A9C  0E01               	movlw	1
  7914  012A9E  6EE6               	movwf	postinc1,c
  7915  012AA0  0E01               	movlw	1
  7916  012AA2  6EE6               	movwf	postinc1,c
  7917  012AA4  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7918  012AA8  0060  F0E3  FFE6   	movff	btemp,postinc1
  7919  012AAE  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7920  012AB4  0E06               	movlw	6
  7921  012AB6  6EE6               	movwf	postinc1,c
  7922  012AB8  EC13  F0AB         	call	_sprintf	;wreg free
  7923                           
  7924                           ;mconfig.c: 163:   break;
  7925  012ABC  0012               	return	
  7926  012ABE                     l15926:
  7927                           
  7928                           ;mconfig.c: 165:   sprintf(get_vterm_ptr(0, 2), " Load-lock%d R%d      ", V.llid, V.msg_
      +                          error);
  7929  012ABE  EE23  F005         	lfsr	2,_V+311	;volatile
  7930  012AC2  50DF               	movf	indf2,w,c
  7931  012AC4  6EE6               	movwf	postinc1,c
  7932  012AC6  0E00               	movlw	0
  7933  012AC8  6EE6               	movwf	postinc1,c
  7934  012ACA  EE23  F04A         	lfsr	2,_V+380	;volatile
  7935  012ACE  50DF               	movf	indf2,w,c
  7936  012AD0  6EE6               	movwf	postinc1,c
  7937  012AD2  0E00               	movlw	0
  7938  012AD4  6EE6               	movwf	postinc1,c
  7939  012AD6  0EC0               	movlw	low STR_53
  7940  012AD8  6EE6               	movwf	postinc1,c
  7941  012ADA  0EFD               	movlw	high STR_53
  7942  012ADC  6EE6               	movwf	postinc1,c
  7943  012ADE  0E02               	movlw	2
  7944  012AE0  6EE6               	movwf	postinc1,c
  7945  012AE2  0E00               	movlw	0
  7946  012AE4  6EE6               	movwf	postinc1,c
  7947  012AE6  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7948  012AEA  0060  F0E3  FFE6   	movff	btemp,postinc1
  7949  012AF0  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7950  012AF6  0E08               	movlw	8
  7951  012AF8  6EE6               	movwf	postinc1,c
  7952  012AFA  EC13  F0AB         	call	_sprintf	;wreg free
  7953                           
  7954                           ;mconfig.c: 166:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
  7955  012AFE  EE23  F017         	lfsr	2,_V+329	;volatile
  7956  012B02  006F FF78  F042    	movff	postinc2,btemp+10
  7957  012B08  006F FF74  F043    	movff	postdec2,btemp+11
  7958  012B0E  0060  F10B  FFE6   	movff	btemp+10,postinc1
  7959  012B14  0060  F10F  FFE6   	movff	btemp+11,postinc1
  7960  012B1A  0EED               	movlw	low STR_54
  7961  012B1C  6EE6               	movwf	postinc1,c
  7962  012B1E  0EFD               	movlw	high STR_54
  7963  012B20  6EE6               	movwf	postinc1,c
  7964  012B22  0E02               	movlw	2
  7965  012B24  6EE6               	movwf	postinc1,c
  7966  012B26  0E01               	movlw	1
  7967  012B28  6EE6               	movwf	postinc1,c
  7968  012B2A  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7969  012B2E  0060  F0E3  FFE6   	movff	btemp,postinc1
  7970  012B34  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7971  012B3A  0E06               	movlw	6
  7972  012B3C  6EE6               	movwf	postinc1,c
  7973  012B3E  EC13  F0AB         	call	_sprintf	;wreg free
  7974                           
  7975                           ;mconfig.c: 167:   break;
  7976  012B42  0012               	return	
  7977  012B44                     l15928:
  7978                           
  7979                           ;mconfig.c: 169:   sprintf(get_vterm_ptr(0, 2), " Terminal %d             ", V.response.
      +                          TID);
  7980  012B44  EE23  F03C         	lfsr	2,_V+366	;volatile
  7981  012B48  50DF               	movf	indf2,w,c
  7982  012B4A  6EE6               	movwf	postinc1,c
  7983  012B4C  0E00               	movlw	0
  7984  012B4E  6EE6               	movwf	postinc1,c
  7985  012B50  0E0F               	movlw	low STR_55
  7986  012B52  6EE6               	movwf	postinc1,c
  7987  012B54  0EFD               	movlw	high STR_55
  7988  012B56  6EE6               	movwf	postinc1,c
  7989  012B58  0E02               	movlw	2
  7990  012B5A  6EE6               	movwf	postinc1,c
  7991  012B5C  0E00               	movlw	0
  7992  012B5E  6EE6               	movwf	postinc1,c
  7993  012B60  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  7994  012B64  0060  F0E3  FFE6   	movff	btemp,postinc1
  7995  012B6A  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  7996  012B70  0E06               	movlw	6
  7997  012B72  6EE6               	movwf	postinc1,c
  7998  012B74  EC13  F0AB         	call	_sprintf	;wreg free
  7999                           
  8000                           ;mconfig.c: 170:   sprintf(get_vterm_ptr(1, 2), " CMD %c %c Len %d       ", V.response.m
      +                          code, V.response.mparm, V.response.cmdlen);
  8001  012B78  EE23  F03F         	lfsr	2,_V+369	;volatile
  8002  012B7C  50DF               	movf	indf2,w,c
  8003  012B7E  6EE6               	movwf	postinc1,c
  8004  012B80  0E00               	movlw	0
  8005  012B82  6EE6               	movwf	postinc1,c
  8006  012B84  EE23  F03E         	lfsr	2,_V+368	;volatile
  8007  012B88  50DF               	movf	indf2,w,c
  8008  012B8A  6EE6               	movwf	postinc1,c
  8009  012B8C  0E00               	movlw	0
  8010  012B8E  6EE6               	movwf	postinc1,c
  8011  012B90  EE23  F03D         	lfsr	2,_V+367	;volatile
  8012  012B94  50DF               	movf	indf2,w,c
  8013  012B96  6EE6               	movwf	postinc1,c
  8014  012B98  0E00               	movlw	0
  8015  012B9A  6EE6               	movwf	postinc1,c
  8016  012B9C  0E77               	movlw	low STR_56
  8017  012B9E  6EE6               	movwf	postinc1,c
  8018  012BA0  0EFD               	movlw	high STR_56
  8019  012BA2  6EE6               	movwf	postinc1,c
  8020  012BA4  0E02               	movlw	2
  8021  012BA6  6EE6               	movwf	postinc1,c
  8022  012BA8  0E01               	movlw	1
  8023  012BAA  6EE6               	movwf	postinc1,c
  8024  012BAC  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  8025  012BB0  0060  F0E3  FFE6   	movff	btemp,postinc1
  8026  012BB6  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  8027  012BBC  0E0A               	movlw	10
  8028  012BBE  6EE6               	movwf	postinc1,c
  8029  012BC0  EC13  F0AB         	call	_sprintf	;wreg free
  8030                           
  8031                           ;mconfig.c: 171:   break;
  8032  012BC4  0012               	return	
  8033  012BC6                     l15930:
  8034                           
  8035                           ;mconfig.c: 174:   sprintf(get_vterm_ptr(0, 0), "                  ");
  8036  012BC6  0EDF               	movlw	low (STR_29+72)
  8037  012BC8  6EE6               	movwf	postinc1,c
  8038  012BCA  0EFC               	movlw	high (STR_29+72)
  8039  012BCC  6EE6               	movwf	postinc1,c
  8040  012BCE  0E00               	movlw	0
  8041  012BD0  6EE6               	movwf	postinc1,c
  8042  012BD2  0E00               	movlw	0
  8043  012BD4  6EE6               	movwf	postinc1,c
  8044  012BD6  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  8045  012BDA  0060  F0E3  FFE6   	movff	btemp,postinc1
  8046  012BE0  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  8047  012BE6  0E04               	movlw	4
  8048  012BE8  6EE6               	movwf	postinc1,c
  8049  012BEA  EC13  F0AB         	call	_sprintf	;wreg free
  8050                           
  8051                           ;mconfig.c: 175:   sprintf(get_vterm_ptr(1, 0), "                  ");
  8052  012BEE  0EDF               	movlw	low (STR_29+72)
  8053  012BF0  6EE6               	movwf	postinc1,c
  8054  012BF2  0EFC               	movlw	high (STR_29+72)
  8055  012BF4  6EE6               	movwf	postinc1,c
  8056  012BF6  0E00               	movlw	0
  8057  012BF8  6EE6               	movwf	postinc1,c
  8058  012BFA  0E01               	movlw	1
  8059  012BFC  6EE6               	movwf	postinc1,c
  8060  012BFE  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  8061  012C02  0060  F0E3  FFE6   	movff	btemp,postinc1
  8062  012C08  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  8063  012C0E  0E04               	movlw	4
  8064  012C10  6EE6               	movwf	postinc1,c
  8065  012C12  EC13  F0AB         	call	_sprintf	;wreg free
  8066                           
  8067                           ;mconfig.c: 176:   sprintf(get_vterm_ptr(0, 2), "                  ");
  8068  012C16  0EDF               	movlw	low (STR_29+72)
  8069  012C18  6EE6               	movwf	postinc1,c
  8070  012C1A  0EFC               	movlw	high (STR_29+72)
  8071  012C1C  6EE6               	movwf	postinc1,c
  8072  012C1E  0E02               	movlw	2
  8073  012C20  6EE6               	movwf	postinc1,c
  8074  012C22  0E00               	movlw	0
  8075  012C24  6EE6               	movwf	postinc1,c
  8076  012C26  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  8077  012C2A  0060  F0E3  FFE6   	movff	btemp,postinc1
  8078  012C30  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  8079  012C36  0E04               	movlw	4
  8080  012C38  6EE6               	movwf	postinc1,c
  8081  012C3A  EC13  F0AB         	call	_sprintf	;wreg free
  8082                           
  8083                           ;mconfig.c: 177:   sprintf(get_vterm_ptr(1, 2), "                  ");
  8084  012C3E  0EDF               	movlw	low (STR_29+72)
  8085  012C40  6EE6               	movwf	postinc1,c
  8086  012C42  0EFC               	movlw	high (STR_29+72)
  8087  012C44  6EE6               	movwf	postinc1,c
  8088  012C46  0E02               	movlw	2
  8089  012C48  6EE6               	movwf	postinc1,c
  8090  012C4A  0E01               	movlw	1
  8091  012C4C  6EE6               	movwf	postinc1,c
  8092  012C4E  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
  8093  012C52  0060  F0E3  FFE6   	movff	btemp,postinc1
  8094  012C58  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  8095  012C5E  0E04               	movlw	4
  8096  012C60  6EE6               	movwf	postinc1,c
  8097  012C62  EC13  F0AB         	call	_sprintf	;wreg free
  8098                           
  8099                           ;mconfig.c: 178:   break;
  8100  012C66  0012               	return	
  8101  012C68                     l15934:
  8102  012C68  EE23  F041         	lfsr	2,_V+371	;volatile
  8103  012C6C  50DF               	movf	indf2,w,c
  8104  012C6E  6E42               	movwf	btemp+10,c
  8105  012C70  6A43               	clrf	btemp+11,c
  8106                           
  8107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8108                           ; Switch size 1, requested type "simple"
  8109                           ; Number of cases is 1, Range of values is 0 to 0
  8110                           ; switch strategies available:
  8111                           ; Name         Instructions Cycles
  8112                           ; simple_byte            4     3 (average)
  8113                           ;	Chosen strategy is simple_byte
  8114  012C72  5043               	movf	btemp+11,w,c
  8115  012C74  0A00               	xorlw	0	; case 0
  8116  012C76  A4D8               	btfss	status,2,c
  8117  012C78  D7A6               	goto	l15930
  8118                           
  8119                           ; Switch size 1, requested type "simple"
  8120                           ; Number of cases is 8, Range of values is 1 to 9
  8121                           ; switch strategies available:
  8122                           ; Name         Instructions Cycles
  8123                           ; simple_byte           25    13 (average)
  8124                           ;	Chosen strategy is simple_byte
  8125  012C7A  5042               	movf	btemp+10,w,c
  8126  012C7C  0A01               	xorlw	1	; case 1
  8127  012C7E  B4D8               	btfsc	status,2,c
  8128  012C80  D761               	goto	l15928
  8129  012C82  0A03               	xorlw	3	; case 2
  8130  012C84  B4D8               	btfsc	status,2,c
  8131  012C86  D614               	goto	l15916
  8132  012C88  0A01               	xorlw	1	; case 3
  8133  012C8A  B4D8               	btfsc	status,2,c
  8134  012C8C  D65A               	goto	l15918
  8135  012C8E  0A07               	xorlw	7	; case 4
  8136  012C90  B4D8               	btfsc	status,2,c
  8137  012C92  D6B5               	goto	l15922
  8138  012C94  0A01               	xorlw	1	; case 5
  8139  012C96  B4D8               	btfsc	status,2,c
  8140  012C98  D683               	goto	l15920
  8141  012C9A  0A03               	xorlw	3	; case 6
  8142  012C9C  B4D8               	btfsc	status,2,c
  8143  012C9E  D6DE               	goto	l15924
  8144  012CA0  0A01               	xorlw	1	; case 7
  8145  012CA2  B4D8               	btfsc	status,2,c
  8146  012CA4  D70C               	goto	l15926
  8147  012CA6  0A0E               	xorlw	14	; case 9
  8148  012CA8  D78E               	goto	l15930
  8149  012CAA                     __end_of_vterm_sequence:
  8150                           	opt callstack 0
  8151                           
  8152 ;; *************** function _sequence_messages *****************
  8153 ;; Defined at:
  8154 ;;		line 572 in file "gemsecs.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  sid             1  [STACK] const unsigned char 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1  [STACK] _Bool 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptr
      +u, prodl, prodh
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;Total ram usage:        0 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    4
  8175 ;; This function calls:
  8176 ;;		_StartTimer
  8177 ;; This function is called by:
  8178 ;;		_secs_II_message
  8179 ;; This function uses a reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text11
  8183  0140BE                     __ptext11:
  8184                           	opt callstack 0
  8185  0140BE                     _sequence_messages:
  8186                           	opt callstack 24
  8187                           
  8188                           ;gemsecs.c: 572: _Bool sequence_messages(const uint8_t sid);gemsecs.c: 573: {;gemsecs.c:
      +                           574:  V.msg_error = MSG_ERROR_NONE;
  8189                           
  8190                           ; BSR set to: 0
  8191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8192                           ;incstack = 0
  8193  0140BE  0E00               	movlw	0
  8194  0140C0  006F FFA0  FC05    	movff	wreg,_V+311	;volatile
  8195                           
  8196                           ;gemsecs.c: 575:  switch (sid) {
  8197  0140C6  D0FE               	goto	l12568
  8198  0140C8                     l1967:
  8199                           
  8200                           ;gemsecs.c: 577:   S[0].stack=6;
  8201  0140C8  0E06               	movlw	6
  8202  0140CA  006F FFA0  F92F    	movff	wreg,_S+45
  8203                           
  8204                           ;gemsecs.c: 578:   S[0].message = HC33[1];
  8205  0140D0  0E73               	movlw	low (_HC33+36)
  8206  0140D2  6EF6               	movwf	tblptrl,c
  8207  0140D4  0EFC               	movlw	high (_HC33+36)
  8208  0140D6  6EF7               	movwf	tblptrh,c
  8209  0140D8                     	if	0	;tblptru may be non-zero
  8210  0140D8                     	endif
  8211  0140D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8212  0140D8  0E00               	movlw	low (__mediumconst shr (0+16))
  8213  0140DA  6EF8               	movwf	tblptru,c
  8214  0140DC                     	endif
  8215  0140DC  EE22  F102         	lfsr	2,_S
  8216  0140E0  0E23               	movlw	35
  8217  0140E2                     u8380:
  8218  0140E2  0009               	tblrd		*+
  8219  0140E4  006F FFD7 FFDE     	movff	tablat,postinc2
  8220  0140EA  06E8               	decf	wreg,f,c
  8221  0140EC  E2FA               	bc	u8380
  8222                           
  8223                           ;gemsecs.c: 579:   S[1].message = HC33[1];
  8224  0140EE  0E73               	movlw	low (_HC33+36)
  8225  0140F0  6EF6               	movwf	tblptrl,c
  8226  0140F2  0EFC               	movlw	high (_HC33+36)
  8227  0140F4  6EF7               	movwf	tblptrh,c
  8228  0140F6                     	if	0	;tblptru may be non-zero
  8229  0140F6                     	endif
  8230  0140F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8231  0140F6  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  0140F8  6EF8               	movwf	tblptru,c
  8233  0140FA                     	endif
  8234  0140FA  EE22  F130         	lfsr	2,_S+46
  8235  0140FE  0E23               	movlw	35
  8236  014100                     u8390:
  8237  014100  0009               	tblrd		*+
  8238  014102  006F FFD7 FFDE     	movff	tablat,postinc2
  8239  014108  06E8               	decf	wreg,f,c
  8240  01410A  E2FA               	bc	u8390
  8241                           
  8242                           ;gemsecs.c: 580:   S[2].message = HC33[1];
  8243  01410C  0E73               	movlw	low (_HC33+36)
  8244  01410E  6EF6               	movwf	tblptrl,c
  8245  014110  0EFC               	movlw	high (_HC33+36)
  8246  014112  6EF7               	movwf	tblptrh,c
  8247  014114                     	if	0	;tblptru may be non-zero
  8248  014114                     	endif
  8249  014114                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8250  014114  0E00               	movlw	low (__mediumconst shr (0+16))
  8251  014116  6EF8               	movwf	tblptru,c
  8252  014118                     	endif
  8253  014118  EE22  F15E         	lfsr	2,_S+92
  8254  01411C  0E23               	movlw	35
  8255  01411E                     u8400:
  8256  01411E  0009               	tblrd		*+
  8257  014120  006F FFD7 FFDE     	movff	tablat,postinc2
  8258  014126  06E8               	decf	wreg,f,c
  8259  014128  E2FA               	bc	u8400
  8260                           
  8261                           ;gemsecs.c: 581:   S[3].message = HC33[0];
  8262  01412A  0E4F               	movlw	low _HC33
  8263  01412C  6EF6               	movwf	tblptrl,c
  8264  01412E                     	if	1	;There is more than 1 active tblptr byte
  8265  01412E  0EFC               	movlw	high _HC33
  8266  014130  6EF7               	movwf	tblptrh,c
  8267  014132                     	endif
  8268  014132                     	if	1	;There are 3 active tblptr bytes
  8269  014132  0E00               	movlw	low (_HC33 shr (0+16))
  8270  014134  6EF8               	movwf	tblptru,c
  8271  014136                     	endif
  8272  014136  EE22  F18C         	lfsr	2,_S+138
  8273  01413A  0E23               	movlw	35
  8274  01413C                     u8410:
  8275  01413C  0009               	tblrd		*+
  8276  01413E  006F FFD7 FFDE     	movff	tablat,postinc2
  8277  014144  06E8               	decf	wreg,f,c
  8278  014146  E2FA               	bc	u8410
  8279                           
  8280                           ;gemsecs.c: 582:   S[4].message = HC33[0];
  8281  014148  0E4F               	movlw	low _HC33
  8282  01414A  6EF6               	movwf	tblptrl,c
  8283  01414C                     	if	1	;There is more than 1 active tblptr byte
  8284  01414C  0EFC               	movlw	high _HC33
  8285  01414E  6EF7               	movwf	tblptrh,c
  8286  014150                     	endif
  8287  014150                     	if	1	;There are 3 active tblptr bytes
  8288  014150  0E00               	movlw	low (_HC33 shr (0+16))
  8289  014152  6EF8               	movwf	tblptru,c
  8290  014154                     	endif
  8291  014154  EE22  F1BA         	lfsr	2,_S+184
  8292  014158  0E23               	movlw	35
  8293  01415A                     u8420:
  8294  01415A  0009               	tblrd		*+
  8295  01415C  006F FFD7 FFDE     	movff	tablat,postinc2
  8296  014162  06E8               	decf	wreg,f,c
  8297  014164  E2FA               	bc	u8420
  8298                           
  8299                           ;gemsecs.c: 583:   S[5].message = HC33[0];
  8300  014166  0E4F               	movlw	low _HC33
  8301  014168  6EF6               	movwf	tblptrl,c
  8302  01416A                     	if	1	;There is more than 1 active tblptr byte
  8303  01416A  0EFC               	movlw	high _HC33
  8304  01416C  6EF7               	movwf	tblptrh,c
  8305  01416E                     	endif
  8306  01416E                     	if	1	;There are 3 active tblptr bytes
  8307  01416E  0E00               	movlw	low (_HC33 shr (0+16))
  8308  014170  6EF8               	movwf	tblptru,c
  8309  014172                     	endif
  8310  014172  EE22  F1E8         	lfsr	2,_S+230
  8311  014176  0E23               	movlw	35
  8312  014178                     u8430:
  8313  014178  0009               	tblrd		*+
  8314  01417A  006F FFD7 FFDE     	movff	tablat,postinc2
  8315  014180  06E8               	decf	wreg,f,c
  8316  014182  E2FA               	bc	u8430
  8317                           
  8318                           ;gemsecs.c: 585:   S[0].message.data[0] = 0x01;
  8319  014184  0E01               	movlw	1
  8320  014186  006F FFA0  F904    	movff	wreg,_S+2
  8321                           
  8322                           ;gemsecs.c: 586:   S[1].message.data[0] = 0x02;
  8323  01418C  0E02               	movlw	2
  8324  01418E  006F FFA0  F932    	movff	wreg,_S+48
  8325                           
  8326                           ;gemsecs.c: 587:   S[2].message.data[0] = 0x03;
  8327  014194  0E03               	movlw	3
  8328  014196  006F FFA0  F960    	movff	wreg,_S+94
  8329                           
  8330                           ;gemsecs.c: 588:   S[3].message.data[0] = 0x01;
  8331  01419C  0E01               	movlw	1
  8332  01419E  006F FFA0  F98E    	movff	wreg,_S+140
  8333                           
  8334                           ;gemsecs.c: 589:   S[4].message.data[0] = 0x02;
  8335  0141A4  0E02               	movlw	2
  8336  0141A6  006F FFA0  F9BC    	movff	wreg,_S+186
  8337                           
  8338                           ;gemsecs.c: 590:   S[5].message.data[0] = 0x03;
  8339  0141AC  0E03               	movlw	3
  8340  0141AE  006F FFA0  F9EA    	movff	wreg,_S+232
  8341                           
  8342                           ;gemsecs.c: 592:   S[0].delay = 10000;
  8343  0141B4  0E10               	movlw	16
  8344  0141B6  006F FFA0  F92D    	movff	wreg,_S+43
  8345  0141BC  0E27               	movlw	39
  8346  0141BE  006F FFA0  F92E    	movff	wreg,_S+44
  8347                           
  8348                           ;gemsecs.c: 593:   S[1].delay = 10000;
  8349  0141C4  0E10               	movlw	16
  8350  0141C6  006F FFA0  F95B    	movff	wreg,_S+89
  8351  0141CC  0E27               	movlw	39
  8352  0141CE  006F FFA0  F95C    	movff	wreg,_S+90
  8353                           
  8354                           ;gemsecs.c: 594:   S[2].delay = 10000;
  8355  0141D4  0E10               	movlw	16
  8356  0141D6  006F FFA0  F989    	movff	wreg,_S+135
  8357  0141DC  0E27               	movlw	39
  8358  0141DE  006F FFA0  F98A    	movff	wreg,_S+136
  8359                           
  8360                           ;gemsecs.c: 595:   S[3].delay = 10000;
  8361  0141E4  0E10               	movlw	16
  8362  0141E6  006F FFA0  F9B7    	movff	wreg,_S+181
  8363  0141EC  0E27               	movlw	39
  8364  0141EE  006F FFA0  F9B8    	movff	wreg,_S+182
  8365                           
  8366                           ;gemsecs.c: 596:   S[4].delay = 10000;
  8367  0141F4  0E10               	movlw	16
  8368  0141F6  006F FFA0  F9E5    	movff	wreg,_S+227
  8369  0141FC  0E27               	movlw	39
  8370  0141FE  006F FFA0  F9E6    	movff	wreg,_S+228
  8371                           
  8372                           ;gemsecs.c: 597:   S[5].delay = 10000;
  8373  014204  0E10               	movlw	16
  8374  014206  006F FFA0  FA13    	movff	wreg,_S+273
  8375  01420C  0E27               	movlw	39
  8376  01420E  006F FFA0  FA14    	movff	wreg,_S+274
  8377                           
  8378                           ;gemsecs.c: 599:   S[0].block.header = (uint8_t*) & S[0].message;
  8379  014214  0E02               	movlw	low _S
  8380  014216  006F FFA0  F926    	movff	wreg,_S+36
  8381  01421C  0E09               	movlw	high _S
  8382  01421E  006F FFA0  F927    	movff	wreg,_S+37
  8383                           
  8384                           ;gemsecs.c: 600:   S[0].block.length = sizeof(header33);
  8385  014224  0E24               	movlw	36
  8386  014226  006F FFA0  F928    	movff	wreg,_S+38
  8387                           
  8388                           ;gemsecs.c: 601:   S[1].block.header = (uint8_t*) & S[1].message;
  8389  01422C  0E30               	movlw	low (_S+46)
  8390  01422E  006F FFA0  F954    	movff	wreg,_S+82
  8391  014234  0E09               	movlw	high (_S+46)
  8392  014236  006F FFA0  F955    	movff	wreg,_S+83
  8393                           
  8394                           ;gemsecs.c: 602:   S[1].block.length = sizeof(header33);
  8395  01423C  0E24               	movlw	36
  8396  01423E  006F FFA0  F956    	movff	wreg,_S+84
  8397                           
  8398                           ;gemsecs.c: 603:   S[2].block.header = (uint8_t*) & S[2].message;
  8399  014244  0E5E               	movlw	low (_S+92)
  8400  014246  006F FFA0  F982    	movff	wreg,_S+128
  8401  01424C  0E09               	movlw	high (_S+92)
  8402  01424E  006F FFA0  F983    	movff	wreg,_S+129
  8403                           
  8404                           ;gemsecs.c: 604:   S[2].block.length = sizeof(header33);
  8405  014254  0E24               	movlw	36
  8406  014256  006F FFA0  F984    	movff	wreg,_S+130
  8407                           
  8408                           ;gemsecs.c: 605:   S[3].block.header = (uint8_t*) & S[3].message;
  8409  01425C  0E8C               	movlw	low (_S+138)
  8410  01425E  006F FFA0  F9B0    	movff	wreg,_S+174
  8411  014264  0E09               	movlw	high (_S+138)
  8412  014266  006F FFA0  F9B1    	movff	wreg,_S+175
  8413                           
  8414                           ;gemsecs.c: 606:   S[3].block.length = sizeof(header33);
  8415  01426C  0E24               	movlw	36
  8416  01426E  006F FFA0  F9B2    	movff	wreg,_S+176
  8417                           
  8418                           ;gemsecs.c: 607:   S[4].block.header = (uint8_t*) & S[4].message;
  8419  014274  0EBA               	movlw	low (_S+184)
  8420  014276  006F FFA0  F9DE    	movff	wreg,_S+220
  8421  01427C  0E09               	movlw	high (_S+184)
  8422  01427E  006F FFA0  F9DF    	movff	wreg,_S+221
  8423                           
  8424                           ;gemsecs.c: 608:   S[4].block.length = sizeof(header33);
  8425  014284  0E24               	movlw	36
  8426  014286  006F FFA0  F9E0    	movff	wreg,_S+222
  8427                           
  8428                           ;gemsecs.c: 609:   S[5].block.header = (uint8_t*) & S[5].message;
  8429  01428C  0EE8               	movlw	low (_S+230)
  8430  01428E  006F FFA0  FA0C    	movff	wreg,_S+266
  8431  014294  0E09               	movlw	high (_S+230)
  8432  014296  006F FFA0  FA0D    	movff	wreg,_S+267
  8433                           
  8434                           ;gemsecs.c: 610:   S[5].block.length = sizeof(header33);
  8435  01429C  0E24               	movlw	36
  8436  01429E  006F FFA0  FA0E    	movff	wreg,_S+268
  8437                           
  8438                           ;gemsecs.c: 611:   V.stack = S[0].stack;
  8439  0142A4  0062  F4BC  F043   	movff	_S+45,btemp+11
  8440  0142AA  EE23  F01B         	lfsr	2,_V+333	;volatile
  8441  0142AE  50DF               	movf	223,w,c
  8442  0142B0  1843               	xorwf	btemp+11,w,c
  8443  0142B2  0BF8               	andlw	-8
  8444  0142B4  1843               	xorwf	btemp+11,w,c
  8445  0142B6  6EDF               	movwf	223,c
  8446                           
  8447                           ;gemsecs.c: 612:   break;
  8448  0142B8  D012               	goto	l12570
  8449  0142BA                     l12560:
  8450                           
  8451                           ;gemsecs.c: 614:   V.stack = 0;
  8452  0142BA  EE23  F01B         	lfsr	2,_V+333	;volatile
  8453  0142BE  0EF8               	movlw	-8
  8454  0142C0  16DF               	andwf	223,f,c
  8455  0142C2  D028               	goto	l1970
  8456  0142C4                     l12568:
  8457                           
  8458                           ;stkvar	_sid @ sp[(0)+-1]
  8459  0142C4  0EFF               	movlw	-1
  8460  0142C6  50E3               	movf	plusw1,w,c
  8461  0142C8  6E42               	movwf	btemp+10,c
  8462  0142CA  6A43               	clrf	btemp+11,c
  8463                           
  8464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8465                           ; Switch size 1, requested type "simple"
  8466                           ; Number of cases is 1, Range of values is 0 to 0
  8467                           ; switch strategies available:
  8468                           ; Name         Instructions Cycles
  8469                           ; simple_byte            4     3 (average)
  8470                           ;	Chosen strategy is simple_byte
  8471  0142CC  5043               	movf	btemp+11,w,c
  8472  0142CE  0A00               	xorlw	0	; case 0
  8473  0142D0  A4D8               	btfss	status,2,c
  8474  0142D2  D7F3               	goto	l12560
  8475                           
  8476                           ; Switch size 1, requested type "simple"
  8477                           ; Number of cases is 1, Range of values is 1 to 1
  8478                           ; switch strategies available:
  8479                           ; Name         Instructions Cycles
  8480                           ; simple_byte            4     3 (average)
  8481                           ;	Chosen strategy is simple_byte
  8482  0142D4  5042               	movf	btemp+10,w,c
  8483  0142D6  0A01               	xorlw	1	; case 1
  8484  0142D8  B4D8               	btfsc	status,2,c
  8485  0142DA  D6F6               	goto	l1967
  8486  0142DC  D7EE               	goto	l12560
  8487  0142DE                     l12570:
  8488                           
  8489                           ;gemsecs.c: 618:  StartTimer(TMR_HBIO, S[V.stack - 1].delay);
  8490  0142DE  EE23  F01B         	lfsr	2,_V+333	;volatile
  8491  0142E2  50DF               	movf	223,w,c
  8492  0142E4  0B07               	andlw	7
  8493  0142E6  0D2E               	mullw	46
  8494  0142E8  0EFF               	movlw	low (_S+65533)
  8495  0142EA  24F3               	addwf	prodl,w,c
  8496  0142EC  6ED9               	movwf	fsr2l,c
  8497  0142EE  0E08               	movlw	high (_S+65533)
  8498  0142F0  20F4               	addwfc	prodh,w,c
  8499  0142F2  6EDA               	movwf	fsr2h,c
  8500  0142F4  006F FF78  F042    	movff	postinc2,btemp+10
  8501  0142FA  006F FF74  F043    	movff	postdec2,btemp+11
  8502  014300  0060  F10B  FFE6   	movff	btemp+10,postinc1
  8503  014306  0060  F10F  FFE6   	movff	btemp+11,postinc1
  8504  01430C  0E06               	movlw	6
  8505  01430E  6EE6               	movwf	postinc1,c
  8506  014310  EC26  F0B5         	call	_StartTimer	;wreg free
  8507  014314                     l1970:
  8508                           
  8509                           ; _sequence_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8510  014314  52E5               	movf	postdec1,f,c
  8511  014316  0012               	return		;funcret
  8512  014318                     __end_of_sequence_messages:
  8513                           	opt callstack 0
  8514                           
  8515 ;; *************** function _s10f1_opcmd *****************
  8516 ;; Defined at:
  8517 ;;		line 693 in file "gemsecs.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;		None
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;		None
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  1  [STACK] enum E16684
  8524 ;; Registers used:
  8525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/3C
  8528 ;;		On exit  : 3F/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;Total ram usage:        0 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:   12
  8538 ;; This function calls:
  8539 ;;		_parse_ll
  8540 ;;		_sprintf
  8541 ;; This function is called by:
  8542 ;;		_secs_II_message
  8543 ;; This function uses a reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text12
  8547  014558                     __ptext12:
  8548                           	opt callstack 0
  8549  014558                     _s10f1_opcmd:
  8550                           	opt callstack 16
  8551                           
  8552                           ;gemsecs.c: 695:  sprintf(V.info, " Terminal          ");
  8553                           
  8554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8555                           ;incstack = 0
  8556  014558  0EA8               	movlw	low STR_31
  8557  01455A  6EE6               	movwf	postinc1,c
  8558  01455C  0EFE               	movlw	high STR_31
  8559  01455E  6EE6               	movwf	postinc1,c
  8560  014560  0EB5               	movlw	low (_V+231)
  8561  014562  6EE6               	movwf	postinc1,c
  8562  014564  0E0B               	movlw	high (_V+231)
  8563  014566  6EE6               	movwf	postinc1,c
  8564  014568  0E04               	movlw	4
  8565  01456A  6EE6               	movwf	postinc1,c
  8566  01456C  EC13  F0AB         	call	_sprintf	;wreg free
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;gemsecs.c: 696:  V.response.cmdlen = V.response.ack[6];
  8570  014570  CC22  FC3F         	movff	_V+340,_V+369	;volatile
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;gemsecs.c: 697:  V.response.TID = V.response.ack[4];
  8574  014574  CC20  FC3C         	movff	_V+338,_V+366	;volatile
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;gemsecs.c: 698:  V.response.mcode = V.response.ack[7];
  8578  014578  CC23  FC3D         	movff	_V+341,_V+367	;volatile
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;gemsecs.c: 699:  V.response.mparm = V.response.ack[8];
  8582  01457C  CC24  FC3E         	movff	_V+342,_V+368	;volatile
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;gemsecs.c: 701:  if (V.response.cmdlen == 0)
  8586  014580  EE23  F03F         	lfsr	2,_V+369	;volatile
  8587  014584  50DF               	movf	indf2,w,c
  8588  014586  A4D8               	btfss	status,2,c
  8589  014588  D003               	goto	l15768
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;gemsecs.c: 702:   return CODE_ERR;
  8593  01458A  0E0C               	movlw	12
  8594  01458C  6E38               	movwf	btemp,c
  8595  01458E  0012               	return	
  8596  014590                     l15768:
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;gemsecs.c: 704:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
  8600  014590  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8601  014596  0A4D               	xorlw	77
  8602  014598  B4D8               	btfsc	status,2,c
  8603  01459A  D006               	goto	u10730
  8604                           
  8605                           ; BSR set to: 0
  8606  01459C  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8607  0145A2  0A6D               	xorlw	109
  8608  0145A4  A4D8               	btfss	status,2,c
  8609  0145A6  D003               	goto	l15776
  8610  0145A8                     u10730:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;gemsecs.c: 705:   return CODE_TS;
  8614  0145A8  0E00               	movlw	0
  8615  0145AA  6E38               	movwf	btemp,c
  8616  0145AC  0012               	return	
  8617  0145AE                     l15776:
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;gemsecs.c: 707:  if (V.response.mcode == 'C' || V.response.mcode == 'c') {
  8621  0145AE  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8622  0145B4  0A43               	xorlw	67
  8623  0145B6  B4D8               	btfsc	status,2,c
  8624  0145B8  D006               	goto	u10750
  8625                           
  8626                           ; BSR set to: 0
  8627  0145BA  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8628  0145C0  0A63               	xorlw	99
  8629  0145C2  A4D8               	btfss	status,2,c
  8630  0145C4  D01E               	goto	l15794
  8631  0145C6                     u10750:
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;gemsecs.c: 708:   parse_ll();
  8635  0145C6  ECA0  F0B0         	call	_parse_ll	;wreg free
  8636                           
  8637                           ;gemsecs.c: 710:   switch (V.e_types) {
  8638  0145CA  D008               	goto	l15788
  8639  0145CC                     l15782:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;gemsecs.c: 712:    H33[0].data[18] = '1';
  8643  0145CC  0E31               	movlw	49
  8644  0145CE  6FD0               	movwf	(_H33+20)& (0+255),b
  8645                           
  8646                           ;gemsecs.c: 713:    H33[0].data[17] = '6';
  8647  0145D0  0E36               	movlw	54
  8648  0145D2  D029               	goto	L15
  8649  0145D4                     l15784:
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;gemsecs.c: 716:    H33[0].data[18] = '1';
  8653  0145D4  0E31               	movlw	49
  8654  0145D6  6FD0               	movwf	(_H33+20)& (0+255),b
  8655                           
  8656                           ;gemsecs.c: 717:    H33[0].data[17] = '0';
  8657  0145D8  0E30               	movlw	48
  8658  0145DA  D025               	goto	L15
  8659  0145DC                     l15788:
  8660                           
  8661                           ; BSR set to: 0
  8662  0145DC  EE22  F2D1         	lfsr	2,_V+3	;volatile
  8663  0145E0  50DF               	movf	indf2,w,c
  8664  0145E2  6E42               	movwf	btemp+10,c
  8665  0145E4  6A43               	clrf	btemp+11,c
  8666                           
  8667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8668                           ; Switch size 1, requested type "simple"
  8669                           ; Number of cases is 1, Range of values is 0 to 0
  8670                           ; switch strategies available:
  8671                           ; Name         Instructions Cycles
  8672                           ; simple_byte            4     3 (average)
  8673                           ;	Chosen strategy is simple_byte
  8674  0145E6  5043               	movf	btemp+11,w,c
  8675  0145E8  0A00               	xorlw	0	; case 0
  8676  0145EA  A4D8               	btfss	status,2,c
  8677  0145EC  D007               	goto	l15790
  8678                           
  8679                           ; BSR set to: 0
  8680                           ; Switch size 1, requested type "simple"
  8681                           ; Number of cases is 2, Range of values is 1 to 2
  8682                           ; switch strategies available:
  8683                           ; Name         Instructions Cycles
  8684                           ; simple_byte            7     4 (average)
  8685                           ;	Chosen strategy is simple_byte
  8686  0145EE  5042               	movf	btemp+10,w,c
  8687  0145F0  0A01               	xorlw	1	; case 1
  8688  0145F2  B4D8               	btfsc	status,2,c
  8689  0145F4  D7EB               	goto	l15782
  8690  0145F6  0A03               	xorlw	3	; case 2
  8691  0145F8  B4D8               	btfsc	status,2,c
  8692  0145FA  D7EC               	goto	l15784
  8693  0145FC                     l15790:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;gemsecs.c: 723:   return CODE_LOAD;
  8697  0145FC  0E07               	movlw	7
  8698  0145FE  6E38               	movwf	btemp,c
  8699  014600  0012               	return	
  8700  014602                     l15794:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;gemsecs.c: 726:  if (V.response.mcode == 'R' || V.response.mcode == 'r') {
  8704  014602  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8705  014608  0A52               	xorlw	82
  8706  01460A  B4D8               	btfsc	status,2,c
  8707  01460C  D006               	goto	u10770
  8708                           
  8709                           ; BSR set to: 0
  8710  01460E  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8711  014614  0A72               	xorlw	114
  8712  014616  A4D8               	btfss	status,2,c
  8713  014618  D016               	goto	l15812
  8714  01461A                     u10770:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;gemsecs.c: 727:   parse_ll();
  8718  01461A  ECA0  F0B0         	call	_parse_ll	;wreg free
  8719                           
  8720                           ;gemsecs.c: 729:   switch (V.e_types) {
  8721  01461E  D005               	goto	l15806
  8722  014620                     l15800:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;gemsecs.c: 731:    H33[0].data[18] = '1';
  8726  014620  0E31               	movlw	49
  8727  014622  6FD0               	movwf	(_H33+20)& (0+255),b
  8728                           
  8729                           ;gemsecs.c: 732:    H33[0].data[17] = '7';
  8730  014624  0E37               	movlw	55
  8731  014626                     L15:
  8732  014626  6FCF               	movwf	(_H33+19)& (0+255),b
  8733                           
  8734                           ;gemsecs.c: 733:    break;
  8735  014628  D7E9               	goto	l15790
  8736  01462A                     l15806:
  8737                           
  8738                           ; BSR set to: 0
  8739  01462A  EE22  F2D1         	lfsr	2,_V+3	;volatile
  8740  01462E  50DF               	movf	indf2,w,c
  8741  014630  6E42               	movwf	btemp+10,c
  8742  014632  6A43               	clrf	btemp+11,c
  8743                           
  8744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8745                           ; Switch size 1, requested type "simple"
  8746                           ; Number of cases is 1, Range of values is 0 to 0
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte            4     3 (average)
  8750                           ;	Chosen strategy is simple_byte
  8751  014634  5043               	movf	btemp+11,w,c
  8752  014636  0A00               	xorlw	0	; case 0
  8753  014638  A4D8               	btfss	status,2,c
  8754  01463A  D7E0               	goto	l15790
  8755                           
  8756                           ; BSR set to: 0
  8757                           ; Switch size 1, requested type "simple"
  8758                           ; Number of cases is 2, Range of values is 1 to 2
  8759                           ; switch strategies available:
  8760                           ; Name         Instructions Cycles
  8761                           ; simple_byte            7     4 (average)
  8762                           ;	Chosen strategy is simple_byte
  8763  01463C  5042               	movf	btemp+10,w,c
  8764  01463E  0A01               	xorlw	1	; case 1
  8765  014640  B4D8               	btfsc	status,2,c
  8766  014642  D7EE               	goto	l15800
  8767  014644  D7D8               	goto	L16
  8768  014646                     l15812:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;gemsecs.c: 745:  if (V.response.mcode == 'P' || V.response.mcode == 'p') {
  8772  014646  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8773  01464C  0A50               	xorlw	80
  8774  01464E  B4D8               	btfsc	status,2,c
  8775  014650  D006               	goto	u10790
  8776                           
  8777                           ; BSR set to: 0
  8778  014652  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8779  014658  0A70               	xorlw	112
  8780  01465A  A4D8               	btfss	status,2,c
  8781  01465C  D01F               	goto	l15830
  8782  01465E                     u10790:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;gemsecs.c: 746:   parse_ll();
  8786  01465E  ECA0  F0B0         	call	_parse_ll	;wreg free
  8787                           
  8788                           ;gemsecs.c: 748:   switch (V.e_types) {
  8789  014662  D009               	goto	l15824
  8790  014664                     l15818:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;gemsecs.c: 750:    H33[0].data[18] = '1';
  8794  014664  0E31               	movlw	49
  8795  014666  6FD0               	movwf	(_H33+20)& (0+255),b
  8796                           
  8797                           ;gemsecs.c: 751:    H33[0].data[17] = '8';
  8798  014668  0E38               	movlw	56
  8799  01466A  D003               	goto	L17
  8800  01466C                     l15820:
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;gemsecs.c: 754:    H33[0].data[18] = '1';
  8804  01466C  0E31               	movlw	49
  8805  01466E  6FD0               	movwf	(_H33+20)& (0+255),b
  8806                           
  8807                           ;gemsecs.c: 755:    H33[0].data[17] = '0';
  8808  014670  0E30               	movlw	48
  8809  014672                     L17:
  8810  014672  6FCF               	movwf	(_H33+19)& (0+255),b
  8811                           
  8812                           ;gemsecs.c: 756:    break;
  8813  014674  D010               	goto	l15826
  8814  014676                     l15824:
  8815                           
  8816                           ; BSR set to: 0
  8817  014676  EE22  F2D1         	lfsr	2,_V+3	;volatile
  8818  01467A  50DF               	movf	indf2,w,c
  8819  01467C  6E42               	movwf	btemp+10,c
  8820  01467E  6A43               	clrf	btemp+11,c
  8821                           
  8822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8823                           ; Switch size 1, requested type "simple"
  8824                           ; Number of cases is 1, Range of values is 0 to 0
  8825                           ; switch strategies available:
  8826                           ; Name         Instructions Cycles
  8827                           ; simple_byte            4     3 (average)
  8828                           ;	Chosen strategy is simple_byte
  8829  014680  5043               	movf	btemp+11,w,c
  8830  014682  0A00               	xorlw	0	; case 0
  8831  014684  A4D8               	btfss	status,2,c
  8832  014686  D007               	goto	l15826
  8833                           
  8834                           ; BSR set to: 0
  8835                           ; Switch size 1, requested type "simple"
  8836                           ; Number of cases is 2, Range of values is 1 to 2
  8837                           ; switch strategies available:
  8838                           ; Name         Instructions Cycles
  8839                           ; simple_byte            7     4 (average)
  8840                           ;	Chosen strategy is simple_byte
  8841  014688  5042               	movf	btemp+10,w,c
  8842  01468A  0A01               	xorlw	1	; case 1
  8843  01468C  B4D8               	btfsc	status,2,c
  8844  01468E  D7EA               	goto	l15818
  8845  014690  0A03               	xorlw	3	; case 2
  8846  014692  B4D8               	btfsc	status,2,c
  8847  014694  D7EB               	goto	l15820
  8848  014696                     l15826:
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;gemsecs.c: 761:   return CODE_PUMP;
  8852  014696  0E09               	movlw	9
  8853  014698  6E38               	movwf	btemp,c
  8854  01469A  0012               	return	
  8855  01469C                     l15830:
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;gemsecs.c: 764:  if (V.response.mcode == 'O' || V.response.mcode == 'o') {
  8859  01469C  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8860  0146A2  0A4F               	xorlw	79
  8861  0146A4  B4D8               	btfsc	status,2,c
  8862  0146A6  D006               	goto	u10810
  8863                           
  8864                           ; BSR set to: 0
  8865  0146A8  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8866  0146AE  0A6F               	xorlw	111
  8867  0146B0  A4D8               	btfss	status,2,c
  8868  0146B2  D01F               	goto	l15848
  8869  0146B4                     u10810:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;gemsecs.c: 765:   parse_ll();
  8873  0146B4  ECA0  F0B0         	call	_parse_ll	;wreg free
  8874                           
  8875                           ;gemsecs.c: 767:   switch (V.e_types) {
  8876  0146B8  D009               	goto	l15842
  8877  0146BA                     l15836:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;gemsecs.c: 769:    H33[0].data[18] = '1';
  8881  0146BA  0E31               	movlw	49
  8882  0146BC  6FD0               	movwf	(_H33+20)& (0+255),b
  8883                           
  8884                           ;gemsecs.c: 770:    H33[0].data[17] = '2';
  8885  0146BE  0E32               	movlw	50
  8886  0146C0  D003               	goto	L18
  8887  0146C2                     l15838:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;gemsecs.c: 773:    H33[0].data[18] = '1';
  8891  0146C2  0E31               	movlw	49
  8892  0146C4  6FD0               	movwf	(_H33+20)& (0+255),b
  8893                           
  8894                           ;gemsecs.c: 774:    H33[0].data[17] = '0';
  8895  0146C6  0E30               	movlw	48
  8896  0146C8                     L18:
  8897  0146C8  6FCF               	movwf	(_H33+19)& (0+255),b
  8898                           
  8899                           ;gemsecs.c: 775:    break;
  8900  0146CA  D010               	goto	l15844
  8901  0146CC                     l15842:
  8902                           
  8903                           ; BSR set to: 0
  8904  0146CC  EE22  F2D1         	lfsr	2,_V+3	;volatile
  8905  0146D0  50DF               	movf	indf2,w,c
  8906  0146D2  6E42               	movwf	btemp+10,c
  8907  0146D4  6A43               	clrf	btemp+11,c
  8908                           
  8909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8910                           ; Switch size 1, requested type "simple"
  8911                           ; Number of cases is 1, Range of values is 0 to 0
  8912                           ; switch strategies available:
  8913                           ; Name         Instructions Cycles
  8914                           ; simple_byte            4     3 (average)
  8915                           ;	Chosen strategy is simple_byte
  8916  0146D6  5043               	movf	btemp+11,w,c
  8917  0146D8  0A00               	xorlw	0	; case 0
  8918  0146DA  A4D8               	btfss	status,2,c
  8919  0146DC  D007               	goto	l15844
  8920                           
  8921                           ; BSR set to: 0
  8922                           ; Switch size 1, requested type "simple"
  8923                           ; Number of cases is 2, Range of values is 1 to 2
  8924                           ; switch strategies available:
  8925                           ; Name         Instructions Cycles
  8926                           ; simple_byte            7     4 (average)
  8927                           ;	Chosen strategy is simple_byte
  8928  0146DE  5042               	movf	btemp+10,w,c
  8929  0146E0  0A01               	xorlw	1	; case 1
  8930  0146E2  B4D8               	btfsc	status,2,c
  8931  0146E4  D7EA               	goto	l15836
  8932  0146E6  0A03               	xorlw	3	; case 2
  8933  0146E8  B4D8               	btfsc	status,2,c
  8934  0146EA  D7EB               	goto	l15838
  8935  0146EC                     l15844:
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;gemsecs.c: 780:   return CODE_UNLOAD;
  8939  0146EC  0E08               	movlw	8
  8940  0146EE  6E38               	movwf	btemp,c
  8941  0146F0  0012               	return	
  8942  0146F2                     l15848:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;gemsecs.c: 783:  if (V.response.mcode == 'L' || V.response.mcode == 'l') {
  8946  0146F2  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8947  0146F8  0A4C               	xorlw	76
  8948  0146FA  B4D8               	btfsc	status,2,c
  8949  0146FC  D006               	goto	u10830
  8950                           
  8951                           ; BSR set to: 0
  8952  0146FE  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8953  014704  0A6C               	xorlw	108
  8954  014706  A4D8               	btfss	status,2,c
  8955  014708  D00F               	goto	l15858
  8956  01470A                     u10830:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;gemsecs.c: 784:   sprintf(V.info, " Log file reset          ");
  8960  01470A  0E43               	movlw	low STR_32
  8961  01470C  6EE6               	movwf	postinc1,c
  8962  01470E  0EFD               	movlw	high STR_32
  8963  014710  6EE6               	movwf	postinc1,c
  8964  014712  0EB5               	movlw	low (_V+231)
  8965  014714  6EE6               	movwf	postinc1,c
  8966  014716  0E0B               	movlw	high (_V+231)
  8967  014718  6EE6               	movwf	postinc1,c
  8968  01471A  0E04               	movlw	4
  8969  01471C  6EE6               	movwf	postinc1,c
  8970  01471E  EC13  F0AB         	call	_sprintf	;wreg free
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;gemsecs.c: 785:   return CODE_LOG;
  8974  014722  0E06               	movlw	6
  8975  014724  6E38               	movwf	btemp,c
  8976  014726  0012               	return	
  8977  014728                     l15858:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;gemsecs.c: 788:  if (V.response.mcode == 'S' || V.response.mcode == 's') {
  8981  014728  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8982  01472E  0A53               	xorlw	83
  8983  014730  B4D8               	btfsc	status,2,c
  8984  014732  D006               	goto	u10850
  8985                           
  8986                           ; BSR set to: 0
  8987  014734  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  8988  01473A  0A73               	xorlw	115
  8989  01473C  A4D8               	btfss	status,2,c
  8990  01473E  D010               	goto	l15870
  8991  014740                     u10850:
  8992                           
  8993                           ; BSR set to: 0
  8994  014740  EE22  F2D1         	lfsr	2,_V+3	;volatile
  8995  014744  50DF               	movf	indf2,w,c
  8996  014746  6E42               	movwf	btemp+10,c
  8997  014748  6A43               	clrf	btemp+11,c
  8998                           
  8999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9000                           ; Switch size 1, requested type "simple"
  9001                           ; Number of cases is 1, Range of values is 0 to 0
  9002                           ; switch strategies available:
  9003                           ; Name         Instructions Cycles
  9004                           ; simple_byte            4     3 (average)
  9005                           ;	Chosen strategy is simple_byte
  9006  01474A  5043               	movf	btemp+11,w,c
  9007  01474C  0A00               	xorlw	0	; case 0
  9008  01474E  A4D8               	btfss	status,2,c
  9009  014750  D004               	goto	l15866
  9010                           
  9011                           ; BSR set to: 0
  9012                           ; Switch size 1, requested type "simple"
  9013                           ; Number of cases is 2, Range of values is 1 to 2
  9014                           ; switch strategies available:
  9015                           ; Name         Instructions Cycles
  9016                           ; simple_byte            7     4 (average)
  9017                           ;	Chosen strategy is simple_byte
  9018  014752  5042               	movf	btemp+10,w,c
  9019  014754  0A01               	xorlw	1	; case 1
  9020  014756  A4D8               	btfss	status,2,c
  9021  014758  0A03               	xorlw	3	; case 2
  9022  01475A                     l15866:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;gemsecs.c: 797:   return CODE_SEQUENCE;
  9026  01475A  0E0B               	movlw	11
  9027  01475C  6E38               	movwf	btemp,c
  9028  01475E  0012               	return	
  9029  014760                     l15870:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;gemsecs.c: 800:  if (V.response.mcode == 'D' || V.response.mcode == 'd') {
  9033  014760  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  9034  014766  0A44               	xorlw	68
  9035  014768  B4D8               	btfsc	status,2,c
  9036  01476A  D006               	goto	u10870
  9037                           
  9038                           ; BSR set to: 0
  9039  01476C  0063  F0F7  FFE8   	movff	_V+367,wreg	;volatile
  9040  014772  0A64               	xorlw	100
  9041  014774  A4D8               	btfss	status,2,c
  9042  014776  D718               	goto	u10730
  9043  014778                     u10870:
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;gemsecs.c: 801:   sprintf(V.info, " Debug Toggle            ");
  9047  014778  0E29               	movlw	low STR_33
  9048  01477A  6EE6               	movwf	postinc1,c
  9049  01477C  0EFD               	movlw	high STR_33
  9050  01477E  6EE6               	movwf	postinc1,c
  9051  014780  0EB5               	movlw	low (_V+231)
  9052  014782  6EE6               	movwf	postinc1,c
  9053  014784  0E0B               	movlw	high (_V+231)
  9054  014786  6EE6               	movwf	postinc1,c
  9055  014788  0E04               	movlw	4
  9056  01478A  6EE6               	movwf	postinc1,c
  9057  01478C  EC13  F0AB         	call	_sprintf	;wreg free
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;gemsecs.c: 802:   return CODE_DEBUG;
  9061  014790  0E05               	movlw	5
  9062  014792  6E38               	movwf	btemp,c
  9063                           
  9064                           ; BSR set to: 0
  9065                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  9066  014794  0012               	return		;funcret
  9067  014796                     __end_of_s10f1_opcmd:
  9068                           	opt callstack 0
  9069                           
  9070 ;; *************** function _parse_ll *****************
  9071 ;; Defined at:
  9072 ;;		line 638 in file "gemsecs.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1  [STACK] void 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9081 ;; Tracked objects:
  9082 ;;		On entry : 3F/0
  9083 ;;		On exit  : 3F/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9090 ;;Total ram usage:        0 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    3
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_s10f1_opcmd
  9097 ;; This function uses a reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text13
  9101  016140                     __ptext13:
  9102                           	opt callstack 0
  9103  016140                     _parse_ll:
  9104                           	opt callstack 24
  9105                           
  9106                           ;gemsecs.c: 640:  if (V.response.cmdlen > 1) {
  9107                           
  9108                           ; BSR set to: 0
  9109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9110                           ;incstack = 0
  9111  016140  EE23  F03F         	lfsr	2,_V+369	;volatile
  9112  016144  0E01               	movlw	1
  9113  016146  64DF               	cpfsgt	indf2,c
  9114  016148  D005               	goto	l12382
  9115  01614A  D008               	goto	l12386
  9116  01614C                     l1983:
  9117                           
  9118                           ;gemsecs.c: 651:    H33[0].data[0] = V.response.mparm & 0x03;
  9119                           ; multi bank
  9120  01614C  010C               	movlb	(_V+368) shr (0+8)	;volatile
  9121  01614E  513E               	movf	(_V+368)& (0+255),w,b	;volatile
  9122  016150  0B03               	andlw	3
  9123  016152  D001               	goto	L19
  9124  016154                     l12382:
  9125                           
  9126                           ;gemsecs.c: 654:    H33[0].data[0] = 0x01;
  9127  016154  0E01               	movlw	1
  9128  016156                     L19:
  9129  016156  0100               	movlb	0	; () banked
  9130  016158  6FBE               	movwf	(_H33+2)& (0+255),b
  9131                           
  9132                           ;gemsecs.c: 655:    break;
  9133  01615A  D026               	goto	l12390
  9134  01615C                     l12386:
  9135  01615C  EE23  F03E         	lfsr	2,_V+368	;volatile
  9136  016160  50DF               	movf	indf2,w,c
  9137  016162  6E42               	movwf	btemp+10,c
  9138  016164  6A43               	clrf	btemp+11,c
  9139                           
  9140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9141                           ; Switch size 1, requested type "simple"
  9142                           ; Number of cases is 1, Range of values is 0 to 0
  9143                           ; switch strategies available:
  9144                           ; Name         Instructions Cycles
  9145                           ; simple_byte            4     3 (average)
  9146                           ;	Chosen strategy is simple_byte
  9147  016166  5043               	movf	btemp+11,w,c
  9148  016168  0A00               	xorlw	0	; case 0
  9149  01616A  A4D8               	btfss	status,2,c
  9150  01616C  D7F3               	goto	l12382
  9151                           
  9152                           ; Switch size 1, requested type "simple"
  9153                           ; Number of cases is 9, Range of values is 49 to 99
  9154                           ; switch strategies available:
  9155                           ; Name         Instructions Cycles
  9156                           ; simple_byte           28    15 (average)
  9157                           ;	Chosen strategy is simple_byte
  9158  01616E  5042               	movf	btemp+10,w,c
  9159  016170  0A31               	xorlw	49	; case 49
  9160  016172  B4D8               	btfsc	status,2,c
  9161  016174  D7EB               	goto	l1983
  9162  016176  0A03               	xorlw	3	; case 50
  9163  016178  B4D8               	btfsc	status,2,c
  9164  01617A  D7E8               	goto	l1983
  9165  01617C  0A01               	xorlw	1	; case 51
  9166  01617E  B4D8               	btfsc	status,2,c
  9167  016180  D7E5               	goto	l1983
  9168  016182  0A72               	xorlw	114	; case 65
  9169  016184  B4D8               	btfsc	status,2,c
  9170  016186  D7E2               	goto	l1983
  9171  016188  0A03               	xorlw	3	; case 66
  9172  01618A  B4D8               	btfsc	status,2,c
  9173  01618C  D7DF               	goto	l1983
  9174  01618E  0A01               	xorlw	1	; case 67
  9175  016190  B4D8               	btfsc	status,2,c
  9176  016192  D7DC               	goto	l1983
  9177  016194  0A22               	xorlw	34	; case 97
  9178  016196  B4D8               	btfsc	status,2,c
  9179  016198  D7D9               	goto	l1983
  9180  01619A  0A03               	xorlw	3	; case 98
  9181  01619C  B4D8               	btfsc	status,2,c
  9182  01619E  D7D6               	goto	l1983
  9183  0161A0  0A01               	xorlw	1	; case 99
  9184  0161A2  B4D8               	btfsc	status,2,c
  9185  0161A4  D7D3               	goto	l1983
  9186  0161A6  D7D6               	goto	l12382
  9187  0161A8                     l12390:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;gemsecs.c: 660:  V.llid = H33[0].data[0];
  9191  0161A8  EE23  F04A         	lfsr	2,_V+380	;volatile
  9192  0161AC  0060  F2FB  FFDF   	movff	_H33+2,indf2
  9193                           
  9194                           ; BSR set to: 0
  9195                           ; _parse_ll: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  9196  0161B2  0012               	return		;funcret
  9197  0161B4                     __end_of_parse_ll:
  9198                           	opt callstack 0
  9199                           
  9200 ;; *************** function _parse_sid *****************
  9201 ;; Defined at:
  9202 ;;		line 666 in file "gemsecs.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1  [STACK] void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    3
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_secs_II_message
  9227 ;; This function uses a reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text14
  9231  0161B4                     __ptext14:
  9232                           	opt callstack 0
  9233  0161B4                     _parse_sid:
  9234                           	opt callstack 25
  9235                           
  9236                           ;gemsecs.c: 668:  if (V.response.cmdlen > 1) {
  9237                           
  9238                           ; BSR set to: 0
  9239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9240                           ;incstack = 0
  9241  0161B4  EE23  F03F         	lfsr	2,_V+369	;volatile
  9242  0161B8  0E01               	movlw	1
  9243  0161BA  64DF               	cpfsgt	indf2,c
  9244  0161BC  D00A               	goto	l2007
  9245  0161BE  D00E               	goto	l12586
  9246  0161C0                     l2000:
  9247                           
  9248                           ;gemsecs.c: 679:    V.sid = V.response.mparm & 0x03;
  9249  0161C0  0063  F0F8  F043   	movff	_V+368,btemp+11	;volatile
  9250  0161C6  0E03               	movlw	3
  9251  0161C8  1643               	andwf	btemp+11,f,c
  9252  0161CA  0060  F10C  FC4B   	movff	btemp+11,_V+381	;volatile
  9253                           
  9254                           ;gemsecs.c: 680:    break;
  9255  0161D0  0012               	return	
  9256  0161D2                     l2007:
  9257                           
  9258                           ;gemsecs.c: 682:    V.sid = 0x01;
  9259  0161D2  0E01               	movlw	1
  9260  0161D4  006F FFA0  FC4B    	movff	wreg,_V+381	;volatile
  9261                           
  9262                           ;gemsecs.c: 683:    break;
  9263  0161DA  0012               	return	
  9264  0161DC                     l12586:
  9265  0161DC  EE23  F03E         	lfsr	2,_V+368	;volatile
  9266  0161E0  50DF               	movf	indf2,w,c
  9267  0161E2  6E42               	movwf	btemp+10,c
  9268  0161E4  6A43               	clrf	btemp+11,c
  9269                           
  9270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9271                           ; Switch size 1, requested type "simple"
  9272                           ; Number of cases is 1, Range of values is 0 to 0
  9273                           ; switch strategies available:
  9274                           ; Name         Instructions Cycles
  9275                           ; simple_byte            4     3 (average)
  9276                           ;	Chosen strategy is simple_byte
  9277  0161E6  5043               	movf	btemp+11,w,c
  9278  0161E8  0A00               	xorlw	0	; case 0
  9279  0161EA  A4D8               	btfss	status,2,c
  9280  0161EC  D7F2               	goto	l2007
  9281                           
  9282                           ; Switch size 1, requested type "simple"
  9283                           ; Number of cases is 9, Range of values is 49 to 99
  9284                           ; switch strategies available:
  9285                           ; Name         Instructions Cycles
  9286                           ; simple_byte           28    15 (average)
  9287                           ;	Chosen strategy is simple_byte
  9288  0161EE  5042               	movf	btemp+10,w,c
  9289  0161F0  0A31               	xorlw	49	; case 49
  9290  0161F2  B4D8               	btfsc	status,2,c
  9291  0161F4  D7E5               	goto	l2000
  9292  0161F6  0A03               	xorlw	3	; case 50
  9293  0161F8  B4D8               	btfsc	status,2,c
  9294  0161FA  D7E2               	goto	l2000
  9295  0161FC  0A01               	xorlw	1	; case 51
  9296  0161FE  B4D8               	btfsc	status,2,c
  9297  016200  D7DF               	goto	l2000
  9298  016202  0A72               	xorlw	114	; case 65
  9299  016204  B4D8               	btfsc	status,2,c
  9300  016206  D7DC               	goto	l2000
  9301  016208  0A03               	xorlw	3	; case 66
  9302  01620A  B4D8               	btfsc	status,2,c
  9303  01620C  D7D9               	goto	l2000
  9304  01620E  0A01               	xorlw	1	; case 67
  9305  016210  B4D8               	btfsc	status,2,c
  9306  016212  D7D6               	goto	l2000
  9307  016214  0A22               	xorlw	34	; case 97
  9308  016216  B4D8               	btfsc	status,2,c
  9309  016218  D7D3               	goto	l2000
  9310  01621A  0A03               	xorlw	3	; case 98
  9311  01621C  B4D8               	btfsc	status,2,c
  9312  01621E  D7D0               	goto	l2000
  9313  016220  0A01               	xorlw	1	; case 99
  9314  016222  B4D8               	btfsc	status,2,c
  9315  016224  D7CD               	goto	l2000
  9316  016226  D7D5               	goto	l2007
  9317  016228                     __end_of_parse_sid:
  9318                           	opt callstack 0
  9319                           
  9320 ;; *************** function _gem_messages *****************
  9321 ;; Defined at:
  9322 ;;		line 824 in file "gemsecs.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  block           1  [STACK] PTR struct response_type
  9325 ;;		 -> secs_II_message@block(7), 
  9326 ;;  sid             1  [STACK] const unsigned char 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1  [STACK] _Bool 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/3C
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9342 ;;Total ram usage:        0 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    4
  9345 ;; This function calls:
  9346 ;;		_StartTimer
  9347 ;; This function is called by:
  9348 ;;		_secs_II_message
  9349 ;; This function uses a reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text15
  9353  015830                     __ptext15:
  9354                           	opt callstack 0
  9355  015830                     _gem_messages:
  9356                           	opt callstack 24
  9357                           
  9358                           ;gemsecs.c: 824: _Bool gem_messages(response_type *block, const uint8_t sid);gemsecs.c: 
      +                          825: {;gemsecs.c: 826:  if (!V.stack)
  9359                           
  9360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9361                           ;incstack = 0
  9362  015830  EE23  F01B         	lfsr	2,_V+333	;volatile
  9363  015834  50DF               	movf	223,w,c
  9364  015836  0B07               	andlw	7
  9365  015838  0900               	iorlw	0
  9366  01583A  B4D8               	btfsc	status,2,c
  9367  01583C  D071               	goto	l2069
  9368                           
  9369                           ;gemsecs.c: 829:  StartTimer(TMR_HBIO, S[V.stack - 1].delay);
  9370  01583E  EE23  F01B         	lfsr	2,_V+333	;volatile
  9371  015842  50DF               	movf	223,w,c
  9372  015844  0B07               	andlw	7
  9373  015846  0D2E               	mullw	46
  9374  015848  0EFF               	movlw	low (_S+65533)
  9375  01584A  24F3               	addwf	prodl,w,c
  9376  01584C  6ED9               	movwf	fsr2l,c
  9377  01584E  0E08               	movlw	high (_S+65533)
  9378  015850  20F4               	addwfc	prodh,w,c
  9379  015852  6EDA               	movwf	fsr2h,c
  9380  015854  006F FF78  F042    	movff	postinc2,btemp+10
  9381  01585A  006F FF74  F043    	movff	postdec2,btemp+11
  9382  015860  0060  F10B  FFE6   	movff	btemp+10,postinc1
  9383  015866  0060  F10F  FFE6   	movff	btemp+11,postinc1
  9384  01586C  0E06               	movlw	6
  9385  01586E  6EE6               	movwf	postinc1,c
  9386  015870  EC26  F0B5         	call	_StartTimer	;wreg free
  9387                           
  9388                           ;gemsecs.c: 831:  switch (sid) {
  9389  015874  D03F               	goto	l12768
  9390  015876                     l12760:
  9391                           
  9392                           ;gemsecs.c: 834:   *block = S[V.stack - 1].block;
  9393  015876  EE23  F01B         	lfsr	2,_V+333	;volatile
  9394  01587A  50DF               	movf	223,w,c
  9395  01587C  0B07               	andlw	7
  9396  01587E  0D2E               	mullw	46
  9397  015880  0EF8               	movlw	low (_S+65526)
  9398  015882  24F3               	addwf	prodl,w,c
  9399  015884  6ED9               	movwf	fsr2l,c
  9400  015886  0E08               	movlw	high (_S+65526)
  9401  015888  20F4               	addwfc	prodh,w,c
  9402  01588A  6EDA               	movwf	fsr2h,c
  9403                           
  9404                           ;stkvar	_block @ sp[(0)+-1]
  9405  01588C  0EFF               	movlw	-1
  9406  01588E  50E3               	movf	plusw1,w,c
  9407  015890  6EE9               	movwf	fsr0l,c
  9408  015892  6AEA               	clrf	fsr0h,c
  9409  015894  0E06               	movlw	6
  9410  015896                     u8631:
  9411  015896  006F FF6F FFEB     	movff	plusw2,plusw0
  9412  01589C  06E8               	decf	wreg,f,c
  9413  01589E  E2FB               	bc	u8631
  9414                           
  9415                           ;gemsecs.c: 835:   S[V.stack - 1].message.block.block.systemb = V.ticks;
  9416  0158A0  EE22  F3F5         	lfsr	2,_V+295	;volatile
  9417  0158A4  EE03  F01B         	lfsr	0,_V+333	;volatile
  9418  0158A8  50EF               	movf	239,w,c
  9419  0158AA  0B07               	andlw	7
  9420  0158AC  0D2E               	mullw	46
  9421  0158AE  0EED               	movlw	low (_S+65515)
  9422  0158B0  24F3               	addwf	prodl,w,c
  9423  0158B2  6EE9               	movwf	fsr0l,c
  9424  0158B4  0E08               	movlw	high (_S+65515)
  9425  0158B6  20F4               	addwfc	prodh,w,c
  9426  0158B8  6EEA               	movwf	fsr0h,c
  9427  0158BA  006F FF7B FFEE     	movff	postinc2,postinc0
  9428  0158C0  006F FF7B FFEE     	movff	postinc2,postinc0
  9429  0158C6  006F FF7B FFEE     	movff	postinc2,postinc0
  9430  0158CC  006F FF7B FFEE     	movff	postinc2,postinc0
  9431                           
  9432                           ;gemsecs.c: 836:   V.llid = S[V.stack - 1].message.data[0];
  9433  0158D2  EE23  F01B         	lfsr	2,_V+333	;volatile
  9434  0158D6  50DF               	movf	223,w,c
  9435  0158D8  0B07               	andlw	7
  9436  0158DA  0D2E               	mullw	46
  9437  0158DC  0ED6               	movlw	low (_S+65492)
  9438  0158DE  24F3               	addwf	prodl,w,c
  9439  0158E0  6ED9               	movwf	fsr2l,c
  9440  0158E2  0E08               	movlw	high (_S+65492)
  9441  0158E4  20F4               	addwfc	prodh,w,c
  9442  0158E6  6EDA               	movwf	fsr2h,c
  9443  0158E8  50DF               	movf	indf2,w,c
  9444  0158EA  6E43               	movwf	btemp+11,c
  9445  0158EC  0060  F10C  FC4A   	movff	btemp+11,_V+380	;volatile
  9446                           
  9447                           ;gemsecs.c: 837:   break;
  9448  0158F2  D00B               	goto	l12770
  9449  0158F4                     l12768:
  9450                           
  9451                           ;stkvar	_sid @ sp[(0)+-2]
  9452  0158F4  0EFE               	movlw	-2
  9453  0158F6  50E3               	movf	plusw1,w,c
  9454  0158F8  6E42               	movwf	btemp+10,c
  9455  0158FA  6A43               	clrf	btemp+11,c
  9456                           
  9457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9458                           ; Switch size 1, requested type "simple"
  9459                           ; Number of cases is 1, Range of values is 0 to 0
  9460                           ; switch strategies available:
  9461                           ; Name         Instructions Cycles
  9462                           ; simple_byte            4     3 (average)
  9463                           ;	Chosen strategy is simple_byte
  9464  0158FC  5043               	movf	btemp+11,w,c
  9465  0158FE  0A00               	xorlw	0	; case 0
  9466  015900  A4D8               	btfss	status,2,c
  9467  015902  D7B9               	goto	l12760
  9468                           
  9469                           ; Switch size 1, requested type "simple"
  9470                           ; Number of cases is 1, Range of values is 1 to 1
  9471                           ; switch strategies available:
  9472                           ; Name         Instructions Cycles
  9473                           ; simple_byte            4     3 (average)
  9474                           ;	Chosen strategy is simple_byte
  9475  015904  5042               	movf	btemp+10,w,c
  9476  015906  0A01               	xorlw	1	; case 1
  9477  015908  D7B6               	goto	l12760
  9478  01590A                     l12770:
  9479                           
  9480                           ;gemsecs.c: 840:  V.stack--;
  9481  01590A  EE23  F01B         	lfsr	2,_V+333	;volatile
  9482  01590E  50DF               	movf	223,w,c
  9483  015910  0B07               	andlw	7
  9484  015912  6E43               	movwf	btemp+11,c
  9485  015914  0643               	decf	btemp+11,f,c
  9486  015916  50DF               	movf	223,w,c
  9487  015918  1843               	xorwf	btemp+11,w,c
  9488  01591A  0BF8               	andlw	-8
  9489  01591C  1843               	xorwf	btemp+11,w,c
  9490  01591E  6EDF               	movwf	223,c
  9491  015920                     l2069:
  9492                           
  9493                           ; _gem_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  9494  015920  52E5               	movf	postdec1,f,c
  9495  015922  52E5               	movf	postdec1,f,c
  9496  015924  0012               	return		;funcret
  9497  015926                     __end_of_gem_messages:
  9498                           	opt callstack 0
  9499                           
  9500 ;; *************** function _srand *****************
  9501 ;; Defined at:
  9502 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  s               2  [STACK] unsigned int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1  [STACK] void 
  9509 ;; Registers used:
  9510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  9511 ;; Tracked objects:
  9512 ;;		On entry : 3F/0
  9513 ;;		On exit  : 3F/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;Total ram usage:        0 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    3
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;; This function uses a reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text16
  9531  016B30                     __ptext16:
  9532                           	opt callstack 0
  9533  016B30                     _srand:
  9534                           	opt callstack 27
  9535                           
  9536                           ;stkvar	_s @ sp[(0)+-2]
  9537                           
  9538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9539                           ;incstack = 0
  9540  016B30  0EFE               	movlw	-2
  9541  016B32  50E3               	movf	plusw1,w,c
  9542  016B34  0FFF               	addlw	255
  9543  016B36  6E42               	movwf	btemp+10,c
  9544  016B38  0EFF               	movlw	-1
  9545  016B3A  006F FF8C  F043    	movff	plusw1,btemp+11
  9546  016B40  0EFF               	movlw	255
  9547  016B42  2243               	addwfc	btemp+11,f,c
  9548  016B44  0060  F108  F0AD   	movff	btemp+10,_seed
  9549  016B4A  0060  F10C  F0AE   	movff	btemp+11,_seed+1
  9550  016B50  0100               	movlb	0	; () banked
  9551  016B52  6BAF               	clrf	(_seed+2)& (0+255),b
  9552  016B54  6BB0               	clrf	(_seed+3)& (0+255),b
  9553  016B56  6BB1               	clrf	(_seed+4)& (0+255),b
  9554  016B58  6BB2               	clrf	(_seed+5)& (0+255),b
  9555  016B5A  6BB3               	clrf	(_seed+6)& (0+255),b
  9556  016B5C  6BB4               	clrf	(_seed+7)& (0+255),b
  9557                           
  9558                           ; BSR set to: 0
  9559                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  9560  016B5E  52E5               	movf	postdec1,f,c
  9561  016B60  52E5               	movf	postdec1,f,c
  9562  016B62  0012               	return		;funcret
  9563  016B64                     __end_of_srand:
  9564                           	opt callstack 0
  9565                           
  9566 ;; *************** function _r_protocol *****************
  9567 ;; Defined at:
  9568 ;;		line 253 in file "gemsecs.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  r_link          2  [STACK] PTR enum E16753
  9571 ;;		 -> V(384), 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;  rxData          1  [STACK] unsigned char 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1  [STACK] enum E17031
  9576 ;; Registers used:
  9577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/3C
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9587 ;;Total ram usage:        0 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:   14
  9590 ;; This function calls:
  9591 ;;		_StartTimer
  9592 ;;		_TimerDone
  9593 ;;		_UART1_Read
  9594 ;;		_UART1_Write
  9595 ;;		_UART1_is_rx_ready
  9596 ;;		_WaitMs
  9597 ;;		_run_checksum
  9598 ;;		_secs_II_monitor_message
  9599 ;;		_secs_gem_state
  9600 ;; This function is called by:
  9601 ;;		_main
  9602 ;; This function uses a reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text17
  9606  012460                     __ptext17:
  9607                           	opt callstack 0
  9608  012460                     _r_protocol:
  9609                           	opt callstack 0
  9610                           
  9611                           ; BSR set to: 0
  9612                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9613  012460  52E6               	movf	postinc1,f,c
  9614                           
  9615                           ;gemsecs.c: 253: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 254: {;gemsecs.
      +                          c: 255:  uint8_t rxData;;gemsecs.c: 256:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck, d = 1;;gemsecs.c: 258:  switch (*r_link) {
  9616                           
  9617                           ;incstack = 0
  9618  012462  D1F2               	goto	l16562
  9619  012464                     l16420:
  9620                           
  9621                           ;gemsecs.c: 260:   if (UART1_is_rx_ready()) {
  9622  012464  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
  9623  012468  5038               	movf	btemp,w,c
  9624  01246A  B4D8               	btfsc	status,2,c
  9625  01246C  D212               	goto	l16564
  9626                           
  9627                           ;gemsecs.c: 261:    rxData = UART1_Read();
  9628  01246E  ECEA  F0B4         	call	_UART1_Read	;wreg free
  9629                           
  9630                           ;stkvar	_rxData @ sp[(-1)+0]
  9631  012472  0EFF               	movlw	-1
  9632  012474  0060  F0E3  FFE3   	movff	btemp,plusw1
  9633                           
  9634                           ; BSR set to: 57
  9635                           ;gemsecs.c: 262:    if (rxData == 0x05) {
  9636                           ;stkvar	_rxData @ sp[(-1)+0]
  9637  01247A  0EFF               	movlw	-1
  9638  01247C  006F FF8C  F038    	movff	plusw1,btemp
  9639  012482  0E05               	movlw	5
  9640  012484  1838               	xorwf	btemp,w,c
  9641  012486  A4D8               	btfss	status,2,c
  9642  012488  D204               	goto	l16564
  9643                           
  9644                           ; BSR set to: 57
  9645                           
  9646                           ;gemsecs.c: 264:     do { LATEbits.LATE1 = 1; } while(0);
  9647  01248A  82BE               	bsf	16318,1,c	;volatile
  9648                           
  9649                           ; BSR set to: 57
  9650                           ;gemsecs.c: 265:     V.error = LINK_ERROR_NONE;
  9651  01248C  0E0A               	movlw	10
  9652  01248E  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  9653                           
  9654                           ; BSR set to: 57
  9655                           ;gemsecs.c: 266:     *r_link = LINK_STATE_ENQ;
  9656                           ;stkvar	_r_link @ sp[(-1)+-2]
  9657  012494  0EFD               	movlw	-3
  9658  012496  006F FF8F FFD9     	movff	plusw1,fsr2l
  9659  01249C  0EFE               	movlw	-2
  9660  01249E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9661  0124A4  0E01               	movlw	1
  9662  0124A6  6EDF               	movwf	indf2,c
  9663                           
  9664                           ; BSR set to: 57
  9665                           ;gemsecs.c: 267:     if (TimerDone(TMR_HBIO))
  9666  0124A8  0E06               	movlw	6
  9667  0124AA  6EE6               	movwf	postinc1,c
  9668  0124AC  ECF5  F0B7         	call	_TimerDone	;wreg free
  9669  0124B0  5038               	movf	btemp,w,c
  9670  0124B2  B4D8               	btfsc	status,2,c
  9671  0124B4  D1EE               	goto	l16564
  9672                           
  9673                           ;gemsecs.c: 268:      StartTimer(TMR_HBIO, 5000);
  9674  0124B6  0E88               	movlw	136
  9675  0124B8  6EE6               	movwf	postinc1,c
  9676  0124BA  0E13               	movlw	19
  9677  0124BC  6EE6               	movwf	postinc1,c
  9678  0124BE  0E06               	movlw	6
  9679  0124C0  6EE6               	movwf	postinc1,c
  9680  0124C2  EC26  F0B5         	call	_StartTimer	;wreg free
  9681                           
  9682                           ;gemsecs.c: 269:    }
  9683  0124C6  D1E5               	goto	l16564
  9684  0124C8                     l1863:
  9685                           
  9686                           ;gemsecs.c: 273:   rxData_l = 0;
  9687  0124C8  6A22               	clrf	r_protocol@rxData_l,c
  9688                           
  9689                           ;gemsecs.c: 274:   d = 1;
  9690  0124CA  0E01               	movlw	1
  9691  0124CC  6E5B               	movwf	r_protocol@d,c
  9692                           
  9693                           ;gemsecs.c: 275:   b_block = (uint8_t*) & H254[0];
  9694  0124CE  0E4E               	movlw	low _H254
  9695  0124D0  6E16               	movwf	r_protocol@b_block,c
  9696  0124D2  0E0C               	movlw	high _H254
  9697  0124D4  6E17               	movwf	r_protocol@b_block+1,c
  9698                           
  9699                           ;gemsecs.c: 276:   UART1_Write(0x04);
  9700  0124D6  0E04               	movlw	4
  9701  0124D8  6EE6               	movwf	postinc1,c
  9702  0124DA  EC6D  F0B4         	call	_UART1_Write	;wreg free
  9703                           
  9704                           ; BSR set to: 57
  9705                           ;gemsecs.c: 277:   StartTimer(TMR_T2, 3000);
  9706  0124DE  0EB8               	movlw	184
  9707  0124E0  6EE6               	movwf	postinc1,c
  9708  0124E2  0E0B               	movlw	11
  9709  0124E4  6EE6               	movwf	postinc1,c
  9710  0124E6  0E02               	movlw	2
  9711  0124E8  6EE6               	movwf	postinc1,c
  9712  0124EA  EC26  F0B5         	call	_StartTimer	;wreg free
  9713                           
  9714                           ;gemsecs.c: 278:   *r_link = LINK_STATE_EOT;
  9715                           ;stkvar	_r_link @ sp[(-1)+-2]
  9716  0124EE  0EFD               	movlw	-3
  9717  0124F0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9718  0124F6  0EFE               	movlw	-2
  9719  0124F8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9720  0124FE  0E02               	movlw	2
  9721  012500  D02D               	goto	L21
  9722  012502                     l16442:
  9723                           
  9724                           ;gemsecs.c: 288:   if (TimerDone(TMR_T2)) {
  9725  012502  0E02               	movlw	2
  9726  012504  6EE6               	movwf	postinc1,c
  9727  012506  ECF5  F0B7         	call	_TimerDone	;wreg free
  9728  01250A  5038               	movf	btemp,w,c
  9729  01250C  B4D8               	btfsc	status,2,c
  9730  01250E  D028               	goto	l16456
  9731                           
  9732                           ;gemsecs.c: 289:    V.timer_error++;
  9733  012510  EE23  F00F         	lfsr	2,_V+321	;volatile
  9734  012514  2ADE               	incf	postinc2,f,c
  9735  012516  0E00               	movlw	0
  9736  012518  22DD               	addwfc	postdec2,f,c
  9737                           
  9738                           ;gemsecs.c: 290:    if (!retry--) {
  9739  01251A  065C               	decf	r_protocol@retry,f,c
  9740  01251C  285C               	incf	r_protocol@retry,w,c
  9741  01251E  A4D8               	btfss	status,2,c
  9742  012520  D014               	goto	l16454
  9743                           
  9744                           ;gemsecs.c: 291:     V.error = LINK_ERROR_T2;
  9745  012522  0E0C               	movlw	12
  9746  012524  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
  9747                           
  9748                           ;gemsecs.c: 292:     V.failed_receive = 1;
  9749  01252A  EE23  F01A         	lfsr	2,_V+332	;volatile
  9750  01252E  50DF               	movf	223,w,c
  9751  012530  0BF0               	andlw	-16
  9752  012532  0901               	iorlw	1
  9753  012534  6EDF               	movwf	223,c
  9754                           
  9755                           ;gemsecs.c: 293:     *r_link = LINK_STATE_NAK;
  9756                           ;stkvar	_r_link @ sp[(-1)+-2]
  9757  012536  0EFD               	movlw	-3
  9758  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
  9759  01253E  0EFE               	movlw	-2
  9760  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
  9761  012546  0E05               	movlw	5
  9762  012548  D009               	goto	L21
  9763  01254A                     l16454:
  9764                           
  9765                           ;gemsecs.c: 295:     *r_link = LINK_STATE_IDLE;
  9766                           ;stkvar	_r_link @ sp[(-1)+-2]
  9767  01254A  0EFD               	movlw	-3
  9768  01254C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9769  012552  0EFE               	movlw	-2
  9770  012554  006F FF8F FFDA     	movff	plusw1,fsr2h
  9771  01255A  0E00               	movlw	0
  9772  01255C                     L21:
  9773  01255C  6EDF               	movwf	indf2,c
  9774  01255E  D199               	goto	l16564
  9775  012560                     l16456:
  9776                           
  9777                           ;gemsecs.c: 298:    if (UART1_is_rx_ready()) {
  9778  012560  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
  9779  012564  5038               	movf	btemp,w,c
  9780  012566  B4D8               	btfsc	status,2,c
  9781  012568  D194               	goto	l16564
  9782                           
  9783                           ;gemsecs.c: 299:     rxData = UART1_Read();
  9784  01256A  ECEA  F0B4         	call	_UART1_Read	;wreg free
  9785                           
  9786                           ;stkvar	_rxData @ sp[(-1)+0]
  9787  01256E  0EFF               	movlw	-1
  9788  012570  0060  F0E3  FFE3   	movff	btemp,plusw1
  9789                           
  9790                           ; BSR set to: 57
  9791                           ;gemsecs.c: 300:     if (rxData_l == 0) {
  9792  012576  5022               	movf	r_protocol@rxData_l,w,c
  9793  012578  A4D8               	btfss	status,2,c
  9794  01257A  D01C               	goto	l16470
  9795                           
  9796                           ; BSR set to: 57
  9797                           ;gemsecs.c: 301:      r_block.length = rxData;
  9798                           ;stkvar	_rxData @ sp[(-1)+0]
  9799  01257C  0EFF               	movlw	-1
  9800  01257E  006F FF8C  F084    	movff	plusw1,_r_block+12
  9801                           
  9802                           ; BSR set to: 57
  9803                           ;gemsecs.c: 302:      run_checksum(0, 1);
  9804  012584  0E01               	movlw	1
  9805  012586  6EE6               	movwf	postinc1,c
  9806  012588  0E00               	movlw	0
  9807  01258A  6EE6               	movwf	postinc1,c
  9808  01258C  EC7A  F0B6         	call	_run_checksum	;wreg free
  9809                           
  9810                           ;gemsecs.c: 303:      rxData_l++;
  9811  012590  2A22               	incf	r_protocol@rxData_l,f,c
  9812                           
  9813                           ;gemsecs.c: 304:      b_block[sizeof(header254) - rxData_l] = rxData;
  9814                           ;stkvar	_rxData @ sp[(-1)+0]
  9815  012592  5022               	movf	r_protocol@rxData_l,w,c
  9816  012594  5C16               	subwf	r_protocol@b_block,w,c
  9817  012596  6E42               	movwf	btemp+10,c
  9818  012598  0E00               	movlw	0
  9819  01259A  5817               	subwfb	r_protocol@b_block+1,w,c
  9820  01259C  6E43               	movwf	btemp+11,c
  9821  01259E  0E01               	movlw	1
  9822  0125A0  2442               	addwf	btemp+10,w,c
  9823  0125A2  6ED9               	movwf	fsr2l,c
  9824  0125A4  0E01               	movlw	1
  9825  0125A6  2043               	addwfc	btemp+11,w,c
  9826  0125A8  6EDA               	movwf	fsr2h,c
  9827  0125AA  0EFF               	movlw	-1
  9828  0125AC  006F FF8F FFDF     	movff	plusw1,indf2
  9829                           
  9830                           ;gemsecs.c: 305:     } else {
  9831  0125B2  D16F               	goto	l16564
  9832  0125B4                     l16470:
  9833                           
  9834                           ; BSR set to: 57
  9835                           ;gemsecs.c: 309:      if (rxData_l <= sizeof(block10))
  9836  0125B4  0E0B               	movlw	11
  9837  0125B6  6022               	cpfslt	r_protocol@rxData_l,c
  9838  0125B8  D00C               	goto	l16474
  9839                           
  9840                           ; BSR set to: 57
  9841                           ;gemsecs.c: 310:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  9842                           ;stkvar	_rxData @ sp[(-1)+0]
  9843  0125BA  5022               	movf	r_protocol@rxData_l,w,c
  9844  0125BC  0819               	sublw	low (_H10+25)
  9845  0125BE  6ED9               	movwf	fsr2l,c
  9846  0125C0  0E00               	movlw	0
  9847  0125C2  A0D8               	btfss	status,0,c
  9848  0125C4  2AE8               	incf	wreg,f,c
  9849  0125C6  0801               	sublw	high (_H10+25)
  9850  0125C8  6EDA               	movwf	fsr2h,c
  9851  0125CA  0EFF               	movlw	-1
  9852  0125CC  006F FF8F FFDF     	movff	plusw1,indf2
  9853  0125D2                     l16474:
  9854                           
  9855                           ; BSR set to: 57
  9856                           ;gemsecs.c: 312:      if (d <= 16) {
  9857  0125D2  0E11               	movlw	17
  9858  0125D4  605B               	cpfslt	r_protocol@d,c
  9859  0125D6  D01C               	goto	l16482
  9860                           
  9861                           ; BSR set to: 57
  9862                           ;gemsecs.c: 313:       if (rxData_l == sizeof(block10) + d) {
  9863  0125D8  5022               	movf	r_protocol@rxData_l,w,c
  9864  0125DA  6E42               	movwf	btemp+10,c
  9865  0125DC  6A43               	clrf	btemp+11,c
  9866  0125DE  505B               	movf	r_protocol@d,w,c
  9867  0125E0  6E40               	movwf	btemp+8,c
  9868  0125E2  6A41               	clrf	btemp+9,c
  9869  0125E4  0E0A               	movlw	10
  9870  0125E6  2640               	addwf	btemp+8,f,c
  9871  0125E8  0E00               	movlw	0
  9872  0125EA  2241               	addwfc	btemp+9,f,c
  9873  0125EC  5042               	movf	btemp+10,w,c
  9874  0125EE  1840               	xorwf	btemp+8,w,c
  9875  0125F0  E10F               	bnz	l16482
  9876  0125F2  5043               	movf	btemp+11,w,c
  9877  0125F4  1841               	xorwf	btemp+9,w,c
  9878  0125F6  A4D8               	btfss	status,2,c
  9879  0125F8  D00B               	goto	l16482
  9880                           
  9881                           ; BSR set to: 57
  9882                           ;gemsecs.c: 314:        V.response.ack[d - 1] = rxData;
  9883                           ;stkvar	_rxData @ sp[(-1)+0]
  9884  0125FA  0E1B               	movlw	low (_V+333)
  9885  0125FC  245B               	addwf	r_protocol@d,w,c
  9886  0125FE  6ED9               	movwf	fsr2l,c
  9887  012600  6ADA               	clrf	fsr2h,c
  9888  012602  0E0C               	movlw	high (_V+333)
  9889  012604  22DA               	addwfc	fsr2h,f,c
  9890  012606  0EFF               	movlw	-1
  9891  012608  006F FF8F FFDF     	movff	plusw1,indf2
  9892                           
  9893                           ; BSR set to: 57
  9894                           ;gemsecs.c: 315:        d++;
  9895  01260E  2A5B               	incf	r_protocol@d,f,c
  9896  012610                     l16482:
  9897                           
  9898                           ; BSR set to: 57
  9899                           ;gemsecs.c: 319:      if (rxData_l <= r_block.length)
  9900  012610  5022               	movf	r_protocol@rxData_l,w,c
  9901  012612  0100               	movlb	0	; () banked
  9902  012614  5D84               	subwf	(_r_block+12)& (0+255),w,b
  9903  012616  A0D8               	btfss	status,0,c
  9904  012618  D00D               	goto	l16486
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;gemsecs.c: 320:       V.r_checksum = run_checksum(rxData, 0);
  9908  01261A  0E00               	movlw	0
  9909  01261C  6EE6               	movwf	postinc1,c
  9910                           
  9911                           ;stkvar	_rxData @ sp[(-2)+0]
  9912  01261E  0EFE               	movlw	-2
  9913  012620  50E3               	movf	plusw1,w,c
  9914  012622  6EE6               	movwf	postinc1,c
  9915  012624  EC7A  F0B6         	call	_run_checksum	;wreg free
  9916  012628  0060  F0E0  FC09   	movff	btemp,_V+315	;volatile
  9917  01262E  0060  F0E4  FC0A   	movff	btemp+1,_V+316	;volatile
  9918  012634                     l16486:
  9919                           
  9920                           ;gemsecs.c: 322:      if (rxData_l == r_block.length + 1)
  9921  012634  5022               	movf	r_protocol@rxData_l,w,c
  9922  012636  6E42               	movwf	btemp+10,c
  9923  012638  6A43               	clrf	btemp+11,c
  9924  01263A  0100               	movlb	0	; () banked
  9925  01263C  5184               	movf	(_r_block+12)& (0+255),w,b
  9926  01263E  6E40               	movwf	btemp+8,c
  9927  012640  6A41               	clrf	btemp+9,c
  9928  012642  0E01               	movlw	1
  9929  012644  2640               	addwf	btemp+8,f,c
  9930  012646  0E00               	movlw	0
  9931  012648  2241               	addwfc	btemp+9,f,c
  9932  01264A  5042               	movf	btemp+10,w,c
  9933  01264C  1840               	xorwf	btemp+8,w,c
  9934  01264E  E109               	bnz	l16490
  9935  012650  5043               	movf	btemp+11,w,c
  9936  012652  1841               	xorwf	btemp+9,w,c
  9937  012654  A4D8               	btfss	status,2,c
  9938  012656  D005               	goto	l16490
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;gemsecs.c: 323:       H10[1].checksum = (uint16_t) rxData << 8;
  9942                           ;stkvar	_rxData @ sp[(-1)+0]
  9943  012658  0EFF               	movlw	-1
  9944  01265A  50E3               	movf	plusw1,w,c
  9945  01265C  0101               	movlb	1	; () banked
  9946  01265E  6F0E               	movwf	(_H10+14)& (0+255),b
  9947  012660  6B0D               	clrf	(_H10+13)& (0+255),b
  9948  012662                     l16490:
  9949                           
  9950                           ;gemsecs.c: 324:      if (rxData_l == r_block.length + 2)
  9951  012662  5022               	movf	r_protocol@rxData_l,w,c
  9952  012664  6E42               	movwf	btemp+10,c
  9953  012666  6A43               	clrf	btemp+11,c
  9954  012668  0100               	movlb	0	; () banked
  9955  01266A  5184               	movf	(_r_block+12)& (0+255),w,b
  9956  01266C  6E40               	movwf	btemp+8,c
  9957  01266E  6A41               	clrf	btemp+9,c
  9958  012670  0E02               	movlw	2
  9959  012672  2640               	addwf	btemp+8,f,c
  9960  012674  0E00               	movlw	0
  9961  012676  2241               	addwfc	btemp+9,f,c
  9962  012678  5042               	movf	btemp+10,w,c
  9963  01267A  1840               	xorwf	btemp+8,w,c
  9964  01267C  E10A               	bnz	l16494
  9965  01267E  5043               	movf	btemp+11,w,c
  9966  012680  1841               	xorwf	btemp+9,w,c
  9967  012682  A4D8               	btfss	status,2,c
  9968  012684  D006               	goto	l16494
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;gemsecs.c: 325:       H10[1].checksum += rxData;
  9972                           ;stkvar	_rxData @ sp[(-1)+0]
  9973  012686  0EFF               	movlw	-1
  9974  012688  50E3               	movf	plusw1,w,c
  9975  01268A  0101               	movlb	1	; () banked
  9976  01268C  270D               	addwf	(_H10+13)& (0+255),f,b
  9977  01268E  0E00               	movlw	0
  9978  012690  230E               	addwfc	(_H10+14)& (0+255),f,b
  9979  012692                     l16494:
  9980                           
  9981                           ;gemsecs.c: 327:      rxData_l++;
  9982  012692  2A22               	incf	r_protocol@rxData_l,f,c
  9983                           
  9984                           ;gemsecs.c: 328:      b_block[sizeof(header254) - rxData_l] = rxData;
  9985                           ;stkvar	_rxData @ sp[(-1)+0]
  9986  012694  5022               	movf	r_protocol@rxData_l,w,c
  9987  012696  5C16               	subwf	r_protocol@b_block,w,c
  9988  012698  6E42               	movwf	btemp+10,c
  9989  01269A  0E00               	movlw	0
  9990  01269C  5817               	subwfb	r_protocol@b_block+1,w,c
  9991  01269E  6E43               	movwf	btemp+11,c
  9992  0126A0  0E01               	movlw	1
  9993  0126A2  2442               	addwf	btemp+10,w,c
  9994  0126A4  6ED9               	movwf	fsr2l,c
  9995  0126A6  0E01               	movlw	1
  9996  0126A8  2043               	addwfc	btemp+11,w,c
  9997  0126AA  6EDA               	movwf	fsr2h,c
  9998  0126AC  0EFF               	movlw	-1
  9999  0126AE  006F FF8F FFDF     	movff	plusw1,indf2
 10000                           
 10001                           ;gemsecs.c: 329:      if (rxData_l > (r_block.length + 2)) {
 10002  0126B4  5022               	movf	r_protocol@rxData_l,w,c
 10003  0126B6  6E42               	movwf	btemp+10,c
 10004  0126B8  6A43               	clrf	btemp+11,c
 10005  0126BA  0100               	movlb	0	; () banked
 10006  0126BC  5184               	movf	(_r_block+12)& (0+255),w,b
 10007  0126BE  6E40               	movwf	btemp+8,c
 10008  0126C0  6A41               	clrf	btemp+9,c
 10009  0126C2  0E02               	movlw	2
 10010  0126C4  2640               	addwf	btemp+8,f,c
 10011  0126C6  0E00               	movlw	0
 10012  0126C8  2241               	addwfc	btemp+9,f,c
 10013  0126CA  5042               	movf	btemp+10,w,c
 10014  0126CC  5C40               	subwf	btemp+8,w,c
 10015  0126CE  5041               	movf	btemp+9,w,c
 10016  0126D0  0A80               	xorlw	128
 10017  0126D2  6E38               	movwf	btemp,c
 10018  0126D4  5043               	movf	btemp+11,w,c
 10019  0126D6  0A80               	xorlw	128
 10020  0126D8  5838               	subwfb	btemp,w,c
 10021  0126DA  B0D8               	btfsc	status,0,c
 10022  0126DC  D0DA               	goto	l16564
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;gemsecs.c: 330:       if (V.r_checksum == H10[1].checksum) {
 10026  0126DE  EE23  F009         	lfsr	2,_V+315	;volatile
 10027  0126E2  0101               	movlb	1	; () banked
 10028  0126E4  510D               	movf	(_H10+13)& (0+255),w,b
 10029  0126E6  18DE               	xorwf	postinc2,w,c
 10030  0126E8  E112               	bnz	l16508
 10031  0126EA  510E               	movf	(_H10+14)& (0+255),w,b
 10032  0126EC  18DE               	xorwf	postinc2,w,c
 10033  0126EE  A4D8               	btfss	status,2,c
 10034  0126F0  D00E               	goto	l16508
 10035                           
 10036                           ; BSR set to: 1
 10037                           ;gemsecs.c: 331:        *r_link = LINK_STATE_ACK;
 10038                           ;stkvar	_r_link @ sp[(-1)+-2]
 10039  0126F2  0EFD               	movlw	-3
 10040  0126F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10041  0126FA  0EFE               	movlw	-2
 10042  0126FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10043  012702  0E03               	movlw	3
 10044  012704  6EDF               	movwf	indf2,c
 10045                           
 10046                           ; BSR set to: 1
 10047  012706  82BE               	bsf	16318,1,c	;volatile
 10048  012708  D0C4               	goto	l16564
 10049  01270A                     l16506:
 10050  01270A  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10051  01270E                     l16508:
 10052                           
 10053                           ;gemsecs.c: 334:        while (UART1_is_rx_ready())
 10054  01270E  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
 10055  012712  5038               	movf	btemp,w,c
 10056  012714  A4D8               	btfss	status,2,c
 10057  012716  D7F9               	goto	l16506
 10058                           
 10059                           ;gemsecs.c: 336:        WaitMs(1500);
 10060  012718  0EDC               	movlw	220
 10061  01271A  6EE6               	movwf	postinc1,c
 10062  01271C  0E05               	movlw	5
 10063  01271E  6EE6               	movwf	postinc1,c
 10064  012720  EC62  F0B5         	call	_WaitMs	;wreg free
 10065                           
 10066                           ;gemsecs.c: 337:        V.error = LINK_ERROR_CHECKSUM;
 10067  012724  0E0F               	movlw	15
 10068  012726  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10069                           
 10070                           ;gemsecs.c: 338:        V.checksum_error++;
 10071  01272C  EE23  F00D         	lfsr	2,_V+319	;volatile
 10072  012730  2ADE               	incf	postinc2,f,c
 10073  012732  0E00               	movlw	0
 10074  012734  22DD               	addwfc	postdec2,f,c
 10075                           
 10076                           ;gemsecs.c: 339:        V.failed_receive = 2;
 10077  012736  EE23  F01A         	lfsr	2,_V+332	;volatile
 10078  01273A  50DF               	movf	223,w,c
 10079  01273C  0BF0               	andlw	-16
 10080  01273E  0902               	iorlw	2
 10081  012740  D6F9               	goto	L22
 10082  012742                     l16520:
 10083                           
 10084                           ;gemsecs.c: 348:   UART1_Write(0x06);
 10085  012742  0E06               	movlw	6
 10086  012744  6EE6               	movwf	postinc1,c
 10087  012746  EC6D  F0B4         	call	_UART1_Write	;wreg free
 10088                           
 10089                           ; BSR set to: 57
 10090                           ;gemsecs.c: 349:   V.stream = H10[1].block.block.stream;
 10091  01274A  0101               	movlb	1	; () banked
 10092  01274C  5116               	movf	(_H10+22)& (0+255),w,b
 10093  01274E  0B7F               	andlw	127
 10094  012750  6E43               	movwf	btemp+11,c
 10095  012752  0060  F10C  FC01   	movff	btemp+11,_V+307	;volatile
 10096                           
 10097                           ; BSR set to: 1
 10098                           ;gemsecs.c: 350:   V.function = H10[1].block.block.function;
 10099  012758  EE23  F002         	lfsr	2,_V+308	;volatile
 10100  01275C  0060  F457  FFDF   	movff	_H10+21,indf2
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;gemsecs.c: 351:   V.systemb = H10[1].block.block.systemb;
 10104  012762  EE20  F10F         	lfsr	2,_H10+15
 10105  012766  006F FF78  FBF9    	movff	postinc2,_V+299	;volatile
 10106  01276C  006F FF78  FBFA    	movff	postinc2,_V+300	;volatile
 10107  012772  006F FF78  FBFB    	movff	postinc2,_V+301	;volatile
 10108  012778  006F FF74  FBFC    	movff	postdec2,_V+302	;volatile
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;gemsecs.c: 352:   V.rbit = H10[1].block.block.rbit;
 10112  01277E  EE23  F019         	lfsr	2,_V+331	;volatile
 10113  012782  BF18               	btfsc	(_H10+24)& (0+255),7,b
 10114  012784  D002               	bra	u11195
 10115  012786  90DF               	bcf	indf2,0,c
 10116  012788  D001               	bra	u11196
 10117  01278A                     u11195:
 10118  01278A  80DF               	bsf	indf2,0,c
 10119  01278C                     u11196:
 10120                           
 10121                           ;gemsecs.c: 353:   V.wbit = H10[1].block.block.wbit;
 10122  01278C  EE23  F019         	lfsr	2,_V+331	;volatile
 10123  012790  0101               	movlb	1	; () banked
 10124  012792  BF16               	btfsc	(_H10+22)& (0+255),7,b
 10125  012794  D002               	bra	u11205
 10126  012796  92DF               	bcf	indf2,1,c
 10127  012798  D001               	bra	u11206
 10128  01279A                     u11205:
 10129  01279A  82DF               	bsf	indf2,1,c
 10130  01279C                     u11206:
 10131                           
 10132                           ;gemsecs.c: 354:   V.ebit = H10[1].block.block.ebit;
 10133  01279C  EE23  F019         	lfsr	2,_V+331	;volatile
 10134  0127A0  0101               	movlb	1	; () banked
 10135  0127A2  BF14               	btfsc	(_H10+20)& (0+255),7,b
 10136  0127A4  D002               	bra	u11215
 10137  0127A6  94DF               	bcf	indf2,2,c
 10138  0127A8  D001               	bra	u11216
 10139  0127AA                     u11215:
 10140  0127AA  84DF               	bsf	indf2,2,c
 10141  0127AC                     u11216:
 10142                           
 10143                           ;gemsecs.c: 355:   secs_II_monitor_message(V.stream, V.function, 500);
 10144  0127AC  0EF4               	movlw	244
 10145  0127AE  6EE6               	movwf	postinc1,c
 10146  0127B0  0E01               	movlw	1
 10147  0127B2  6EE6               	movwf	postinc1,c
 10148  0127B4  EE23  F002         	lfsr	2,_V+308	;volatile
 10149  0127B8  50DF               	movf	indf2,w,c
 10150  0127BA  6EE6               	movwf	postinc1,c
 10151  0127BC  EE23  F001         	lfsr	2,_V+307	;volatile
 10152  0127C0  50DF               	movf	indf2,w,c
 10153  0127C2  6EE6               	movwf	postinc1,c
 10154  0127C4  EC14  F0A7         	call	_secs_II_monitor_message	;wreg free
 10155                           
 10156                           ;gemsecs.c: 356:   V.g_state = secs_gem_state(V.stream, V.function);
 10157  0127C8  EE23  F002         	lfsr	2,_V+308	;volatile
 10158  0127CC  50DF               	movf	indf2,w,c
 10159  0127CE  6EE6               	movwf	postinc1,c
 10160  0127D0  EE23  F001         	lfsr	2,_V+307	;volatile
 10161  0127D4  50DF               	movf	indf2,w,c
 10162  0127D6  6EE6               	movwf	postinc1,c
 10163  0127D8  EC62  F0A6         	call	_secs_gem_state	;wreg free
 10164  0127DC  0060  F0E0  FAD0   	movff	btemp,_V+2	;volatile
 10165                           
 10166                           ;gemsecs.c: 357:   V.failed_receive = 0;
 10167  0127E2  EE23  F01A         	lfsr	2,_V+332	;volatile
 10168  0127E6  0EF0               	movlw	-16
 10169  0127E8  16DF               	andwf	223,f,c
 10170                           
 10171                           ;gemsecs.c: 358:   *r_link = LINK_STATE_DONE;
 10172                           ;stkvar	_r_link @ sp[(-1)+-2]
 10173  0127EA  0EFD               	movlw	-3
 10174  0127EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10175  0127F2  0EFE               	movlw	-2
 10176  0127F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10177  0127FA  0E04               	movlw	4
 10178  0127FC  6EDF               	movwf	indf2,c
 10179                           
 10180                           ;gemsecs.c: 359:   V.abort = LINK_ERROR_NONE;
 10181  0127FE  0E0A               	movlw	10
 10182  012800  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
 10183                           
 10184                           ;gemsecs.c: 361:   break;
 10185  012806  D045               	goto	l16564
 10186  012808                     l16544:
 10187                           
 10188                           ;gemsecs.c: 363:   UART1_Write(0x15);
 10189  012808  0E15               	movlw	21
 10190  01280A  6EE6               	movwf	postinc1,c
 10191  01280C  EC6D  F0B4         	call	_UART1_Write	;wreg free
 10192                           
 10193                           ; BSR set to: 57
 10194                           ;gemsecs.c: 364:   *r_link = LINK_STATE_ERROR;
 10195                           ;stkvar	_r_link @ sp[(-1)+-2]
 10196  012810  0EFD               	movlw	-3
 10197  012812  006F FF8F FFD9     	movff	plusw1,fsr2l
 10198  012818  0EFE               	movlw	-2
 10199  01281A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10200  012820  0E06               	movlw	6
 10201  012822  6EDF               	movwf	indf2,c
 10202                           
 10203                           ;gemsecs.c: 365:   while ((uart1RxCount)) {
 10204  012824  D002               	goto	l16550
 10205  012826                     l16548:
 10206                           
 10207                           ; BSR set to: 57
 10208                           ;gemsecs.c: 366:    UART1_Read();
 10209  012826  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10210  01282A                     l16550:
 10211                           
 10212                           ; BSR set to: 57
 10213                           ;gemsecs.c: 365:   while ((uart1RxCount)) {
 10214  01282A  502B               	movf	_uart1RxCount,w,c	;volatile
 10215  01282C  A4D8               	btfss	status,2,c
 10216  01282E  D7FB               	goto	l16548
 10217                           
 10218                           ; BSR set to: 57
 10219                           ;gemsecs.c: 368:   retry = 3;
 10220  012830  0E03               	movlw	3
 10221  012832  6E5C               	movwf	r_protocol@retry,c
 10222                           
 10223                           ;gemsecs.c: 369:   break;
 10224  012834  D02E               	goto	l16564
 10225  012836                     l16554:
 10226                           
 10227                           ;gemsecs.c: 373:   V.failed_receive = 0;
 10228  012836  EE23  F01A         	lfsr	2,_V+332	;volatile
 10229  01283A  0EF0               	movlw	-16
 10230  01283C  16DF               	andwf	223,f,c
 10231                           
 10232                           ;gemsecs.c: 374:   V.abort = LINK_ERROR_NONE;
 10233  01283E  0E0A               	movlw	10
 10234  012840  006F FFA0  FC04    	movff	wreg,_V+310	;volatile
 10235  012846  D681               	goto	l16454
 10236  012848                     l16562:
 10237                           
 10238                           ;stkvar	_r_link @ sp[(-1)+-2]
 10239  012848  0EFD               	movlw	-3
 10240  01284A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10241  012850  0EFE               	movlw	-2
 10242  012852  006F FF8F FFDA     	movff	plusw1,fsr2h
 10243  012858  50DF               	movf	indf2,w,c
 10244  01285A  6E42               	movwf	btemp+10,c
 10245  01285C  6A43               	clrf	btemp+11,c
 10246                           
 10247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10248                           ; Switch size 1, requested type "simple"
 10249                           ; Number of cases is 1, Range of values is 0 to 0
 10250                           ; switch strategies available:
 10251                           ; Name         Instructions Cycles
 10252                           ; simple_byte            4     3 (average)
 10253                           ;	Chosen strategy is simple_byte
 10254  01285E  5043               	movf	btemp+11,w,c
 10255  012860  0A00               	xorlw	0	; case 0
 10256  012862  A4D8               	btfss	status,2,c
 10257  012864  D672               	goto	l16454
 10258                           
 10259                           ; Switch size 1, requested type "simple"
 10260                           ; Number of cases is 7, Range of values is 0 to 6
 10261                           ; switch strategies available:
 10262                           ; Name         Instructions Cycles
 10263                           ; simple_byte           22    12 (average)
 10264                           ;	Chosen strategy is simple_byte
 10265  012866  5042               	movf	btemp+10,w,c
 10266  012868  0A00               	xorlw	0	; case 0
 10267  01286A  B4D8               	btfsc	status,2,c
 10268  01286C  D5FB               	goto	l16420
 10269  01286E  0A01               	xorlw	1	; case 1
 10270  012870  B4D8               	btfsc	status,2,c
 10271  012872  D62A               	goto	l1863
 10272  012874  0A03               	xorlw	3	; case 2
 10273  012876  B4D8               	btfsc	status,2,c
 10274  012878  D644               	goto	l16442
 10275  01287A  0A01               	xorlw	1	; case 3
 10276  01287C  B4D8               	btfsc	status,2,c
 10277  01287E  D761               	goto	l16520
 10278  012880  0A07               	xorlw	7	; case 4
 10279  012882  B4D8               	btfsc	status,2,c
 10280  012884  D7D8               	goto	l16554
 10281  012886  0A01               	xorlw	1	; case 5
 10282  012888  B4D8               	btfsc	status,2,c
 10283  01288A  D7BE               	goto	l16544
 10284  01288C  0A03               	xorlw	3	; case 6
 10285  01288E  A4D8               	btfss	status,2,c
 10286  012890  D65C               	goto	l16454
 10287  012892                     l16564:
 10288                           
 10289                           ;gemsecs.c: 381:  return *r_link;
 10290                           ;stkvar	_r_link @ sp[(-1)+-2]
 10291  012892  0EFD               	movlw	-3
 10292  012894  006F FF8F FFD9     	movff	plusw1,fsr2l
 10293  01289A  0EFE               	movlw	-2
 10294  01289C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10295  0128A2  50DF               	movf	indf2,w,c
 10296  0128A4  6E38               	movwf	btemp,c
 10297                           
 10298                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 10299  0128A6  52E5               	movf	postdec1,f,c
 10300  0128A8  52E5               	movf	postdec1,f,c
 10301  0128AA  52E5               	movf	postdec1,f,c
 10302  0128AC  0012               	return		;funcret
 10303  0128AE                     __end_of_r_protocol:
 10304                           	opt callstack 0
 10305                           
 10306 ;; *************** function _UART1_Write *****************
 10307 ;; Defined at:
 10308 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  txData          1  [STACK] unsigned char 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1  [STACK] void 
 10315 ;; Registers used:
 10316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/3C
 10319 ;;		On exit  : 3F/39
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10326 ;;Total ram usage:        0 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    3
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_r_protocol
 10333 ;;		_t_protocol
 10334 ;;		_secs_send
 10335 ;; This function uses a reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text18
 10339  0168DA                     __ptext18:
 10340                           	opt callstack 0
 10341  0168DA                     _UART1_Write:
 10342                           	opt callstack 25
 10343                           
 10344                           ;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 10345                           
 10346                           ;mcc_generated_files/uart1.c: 180: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 10347                           
 10348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10349                           ;incstack = 0
 10350  0168DA  502E               	movf	_uart1TxBufferRemaining,w,c	;volatile
 10351  0168DC  B4D8               	btfsc	status,2,c
 10352  0168DE  D7FD               	goto	_UART1_Write
 10353                           
 10354                           ;mcc_generated_files/uart1.c: 185:  if (0 == PIE3bits.U1TXIE) {
 10355  0168E0  0139               	movlb	57	; () banked
 10356  0168E2  B993               	btfsc	147,4,b	;volatile
 10357  0168E4  D005               	goto	l589
 10358                           
 10359                           ; BSR set to: 57
 10360                           ;mcc_generated_files/uart1.c: 186:   U1TXB = txData;
 10361                           ;stkvar	_txData @ sp[(0)+-1]
 10362  0168E6  0EFF               	movlw	-1
 10363  0168E8  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 10364                           
 10365                           ;mcc_generated_files/uart1.c: 187:  } else {
 10366  0168EE  D011               	goto	l12420
 10367  0168F0                     l589:
 10368                           
 10369                           ; BSR set to: 57
 10370                           ;mcc_generated_files/uart1.c: 188:   PIE3bits.U1TXIE = 0;
 10371  0168F0  9993               	bcf	147,4,b	;volatile
 10372                           
 10373                           ; BSR set to: 57
 10374                           ;mcc_generated_files/uart1.c: 189:   uart1TxBuffer[uart1TxHead++] = txData;
 10375                           ;stkvar	_txData @ sp[(0)+-1]
 10376  0168F2  0E40               	movlw	low _uart1TxBuffer
 10377  0168F4  2430               	addwf	_uart1TxHead,w,c	;volatile
 10378  0168F6  6ED9               	movwf	fsr2l,c
 10379  0168F8  6ADA               	clrf	fsr2h,c
 10380  0168FA  0E02               	movlw	high _uart1TxBuffer
 10381  0168FC  22DA               	addwfc	fsr2h,f,c
 10382  0168FE  0EFF               	movlw	-1
 10383  016900  006F FF8F FFDF     	movff	plusw1,indf2
 10384                           
 10385                           ; BSR set to: 57
 10386  016906  2A30               	incf	_uart1TxHead,f,c	;volatile
 10387                           
 10388                           ; BSR set to: 57
 10389                           ;mcc_generated_files/uart1.c: 190:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
 10390  016908  0E3F               	movlw	63
 10391  01690A  6430               	cpfsgt	_uart1TxHead,c
 10392  01690C  D001               	goto	l12418
 10393                           
 10394                           ; BSR set to: 57
 10395                           ;mcc_generated_files/uart1.c: 191:    uart1TxHead = 0;
 10396  01690E  6A30               	clrf	_uart1TxHead,c	;volatile
 10397  016910                     l12418:
 10398                           
 10399                           ; BSR set to: 57
 10400                           ;mcc_generated_files/uart1.c: 193:   uart1TxBufferRemaining--;
 10401  016910  062E               	decf	_uart1TxBufferRemaining,f,c	;volatile
 10402  016912                     l12420:
 10403                           
 10404                           ; BSR set to: 57
 10405                           ;mcc_generated_files/uart1.c: 195:  PIE3bits.U1TXIE = 1;
 10406  016912  8993               	bsf	147,4,b	;volatile
 10407                           
 10408                           ; BSR set to: 57
 10409  016914  92BE               	bcf	16318,1,c	;volatile
 10410                           
 10411                           ; BSR set to: 57
 10412                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 10413  016916  52E5               	movf	postdec1,f,c
 10414  016918  0012               	return		;funcret
 10415  01691A                     __end_of_UART1_Write:
 10416                           	opt callstack 0
 10417                           
 10418 ;; *************** function _m_protocol *****************
 10419 ;; Defined at:
 10420 ;;		line 53 in file "gemsecs.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  m_link          2  [STACK] PTR enum E16753
 10423 ;;		 -> V(384), 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  rxData          1  [STACK] unsigned char 
 10426 ;; Return value:  Size  Location     Type
 10427 ;;                  1  [STACK] enum E17031
 10428 ;; Registers used:
 10429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/3C
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10439 ;;Total ram usage:        0 bytes
 10440 ;; Hardware stack levels used:    1
 10441 ;; Hardware stack levels required when called:   14
 10442 ;; This function calls:
 10443 ;;		_StartTimer
 10444 ;;		_TimerDone
 10445 ;;		_UART1_Read
 10446 ;;		_UART1_is_rx_ready
 10447 ;;		_UART2_Read
 10448 ;;		_UART2_is_rx_ready
 10449 ;;		_WaitMs
 10450 ;;		_run_checksum
 10451 ;;		_secs_II_monitor_message
 10452 ;;		_secs_gem_state
 10453 ;; This function is called by:
 10454 ;;		_main
 10455 ;; This function uses a reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text19
 10459  011406                     __ptext19:
 10460                           	opt callstack 0
 10461  011406                     _m_protocol:
 10462                           	opt callstack 0
 10463                           
 10464                           ; BSR set to: 57
 10465                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10466  011406  52E6               	movf	postinc1,f,c
 10467                           
 10468                           ;gemsecs.c: 53: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 54: {;gemsecs.c: 
      +                          55:  uint8_t rxData;;gemsecs.c: 56:  static uint8_t rxData_l = 0, *b_block = (uint8_t*) 
      +                          & H254[0];;gemsecs.c: 58:  switch (*m_link) {
 10469                           
 10470                           ;incstack = 0
 10471  011408  D306               	goto	l16944
 10472  01140A                     l16720:
 10473                           
 10474                           ;gemsecs.c: 63:   if (UART1_is_rx_ready()) {
 10475  01140A  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
 10476  01140E  5038               	movf	btemp,w,c
 10477  011410  B4D8               	btfsc	status,2,c
 10478  011412  D028               	goto	l16734
 10479                           
 10480                           ;gemsecs.c: 64:    rxData = UART1_Read();
 10481  011414  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10482                           
 10483                           ;stkvar	_rxData @ sp[(-1)+0]
 10484  011418  0EFF               	movlw	-1
 10485  01141A  0060  F0E3  FFE3   	movff	btemp,plusw1
 10486                           
 10487                           ; BSR set to: 57
 10488                           ;gemsecs.c: 65:    if (rxData == 0x05) {
 10489                           ;stkvar	_rxData @ sp[(-1)+0]
 10490  011420  0EFF               	movlw	-1
 10491  011422  006F FF8C  F038    	movff	plusw1,btemp
 10492  011428  0E05               	movlw	5
 10493  01142A  1838               	xorwf	btemp,w,c
 10494  01142C  A4D8               	btfss	status,2,c
 10495  01142E  D01A               	goto	l16734
 10496                           
 10497                           ; BSR set to: 57
 10498                           ;gemsecs.c: 67:     V.uart = 1;
 10499  011430  0E01               	movlw	1
 10500  011432  006F FFA0  FC49    	movff	wreg,_V+379	;volatile
 10501                           
 10502                           ; BSR set to: 57
 10503                           ;gemsecs.c: 68:     StartTimer(TMR_T2, 3000);
 10504  011438  0EB8               	movlw	184
 10505  01143A  6EE6               	movwf	postinc1,c
 10506  01143C  0E0B               	movlw	11
 10507  01143E  6EE6               	movwf	postinc1,c
 10508  011440  0E02               	movlw	2
 10509  011442  6EE6               	movwf	postinc1,c
 10510  011444  EC26  F0B5         	call	_StartTimer	;wreg free
 10511                           
 10512                           ;gemsecs.c: 69:     V.error = LINK_ERROR_NONE;
 10513  011448  0E0A               	movlw	10
 10514  01144A  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10515                           
 10516                           ;gemsecs.c: 70:     *m_link = LINK_STATE_ENQ;
 10517                           ;stkvar	_m_link @ sp[(-1)+-2]
 10518  011450  0EFD               	movlw	-3
 10519  011452  006F FF8F FFD9     	movff	plusw1,fsr2l
 10520  011458  0EFE               	movlw	-2
 10521  01145A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10522  011460  0E01               	movlw	1
 10523  011462  6EDF               	movwf	indf2,c
 10524  011464                     l16734:
 10525                           
 10526                           ;gemsecs.c: 73:   if (UART2_is_rx_ready()) {
 10527  011464  ECA5  F0B9         	call	_UART2_is_rx_ready	;wreg free
 10528  011468  5038               	movf	btemp,w,c
 10529  01146A  B4D8               	btfsc	status,2,c
 10530  01146C  D2F9               	goto	l16946
 10531                           
 10532                           ;gemsecs.c: 74:    rxData = UART2_Read();
 10533  01146E  ECCC  F0B4         	call	_UART2_Read	;wreg free
 10534                           
 10535                           ;stkvar	_rxData @ sp[(-1)+0]
 10536  011472  0EFF               	movlw	-1
 10537  011474  0060  F0E3  FFE3   	movff	btemp,plusw1
 10538                           
 10539                           ; BSR set to: 57
 10540                           ;gemsecs.c: 75:    if (rxData == 0x05) {
 10541                           ;stkvar	_rxData @ sp[(-1)+0]
 10542  01147A  0EFF               	movlw	-1
 10543  01147C  006F FF8C  F038    	movff	plusw1,btemp
 10544  011482  0E05               	movlw	5
 10545  011484  1838               	xorwf	btemp,w,c
 10546  011486  A4D8               	btfss	status,2,c
 10547  011488  D2EB               	goto	l16946
 10548                           
 10549                           ; BSR set to: 57
 10550                           ;gemsecs.c: 77:     V.uart = 2;
 10551  01148A  0E02               	movlw	2
 10552  01148C  006F FFA0  FC49    	movff	wreg,_V+379	;volatile
 10553                           
 10554                           ; BSR set to: 57
 10555                           ;gemsecs.c: 78:     StartTimer(TMR_T2, 3000);
 10556  011492  0EB8               	movlw	184
 10557  011494  6EE6               	movwf	postinc1,c
 10558  011496  0E0B               	movlw	11
 10559  011498  6EE6               	movwf	postinc1,c
 10560  01149A  0E02               	movlw	2
 10561  01149C  6EE6               	movwf	postinc1,c
 10562  01149E  EC26  F0B5         	call	_StartTimer	;wreg free
 10563                           
 10564                           ;gemsecs.c: 79:     V.error = LINK_ERROR_NONE;
 10565  0114A2  0E0A               	movlw	10
 10566  0114A4  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10567                           
 10568                           ;gemsecs.c: 80:     *m_link = LINK_STATE_ENQ;
 10569                           ;stkvar	_m_link @ sp[(-1)+-2]
 10570  0114AA  0EFD               	movlw	-3
 10571  0114AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10572  0114B2  0EFE               	movlw	-2
 10573  0114B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10574  0114BA  0E01               	movlw	1
 10575  0114BC  D2AA               	goto	L29
 10576  0114BE                     l1797:
 10577                           
 10578                           ;gemsecs.c: 85:   rxData_l = 0;
 10579  0114BE  6A23               	clrf	m_protocol@rxData_l,c
 10580                           
 10581                           ;gemsecs.c: 86:   if (TimerDone(TMR_T2)) {
 10582  0114C0  0E02               	movlw	2
 10583  0114C2  6EE6               	movwf	postinc1,c
 10584  0114C4  ECF5  F0B7         	call	_TimerDone	;wreg free
 10585  0114C8  5038               	movf	btemp,w,c
 10586  0114CA  B4D8               	btfsc	status,2,c
 10587  0114CC  D019               	goto	l16758
 10588  0114CE                     u11490:
 10589                           
 10590                           ;gemsecs.c: 87:    V.error = LINK_ERROR_T2;
 10591  0114CE  0E0C               	movlw	12
 10592  0114D0  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10593                           
 10594                           ;gemsecs.c: 88:    V.timer_error++;
 10595  0114D6  EE23  F00F         	lfsr	2,_V+321	;volatile
 10596  0114DA  2ADE               	incf	postinc2,f,c
 10597  0114DC  0E00               	movlw	0
 10598  0114DE  22DD               	addwfc	postdec2,f,c
 10599                           
 10600                           ;gemsecs.c: 89:    V.failed_receive = 2;
 10601  0114E0  EE23  F01A         	lfsr	2,_V+332	;volatile
 10602  0114E4  50DF               	movf	223,w,c
 10603  0114E6  0BF0               	andlw	-16
 10604  0114E8  0902               	iorlw	2
 10605  0114EA  6EDF               	movwf	223,c
 10606                           
 10607                           ;gemsecs.c: 90:    *m_link = LINK_STATE_NAK;
 10608                           ;stkvar	_m_link @ sp[(-1)+-2]
 10609  0114EC  0EFD               	movlw	-3
 10610  0114EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10611  0114F4  0EFE               	movlw	-2
 10612  0114F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10613  0114FC  0E05               	movlw	5
 10614  0114FE  D289               	goto	L29
 10615  011500                     l16758:
 10616                           
 10617                           ;gemsecs.c: 108:    if (V.uart == 2 && UART1_is_rx_ready()) {
 10618  011500  0063  F127  FFE8   	movff	_V+379,wreg	;volatile
 10619  011506  0A02               	xorlw	2
 10620  011508  A4D8               	btfss	status,2,c
 10621  01150A  D029               	goto	l16772
 10622  01150C  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
 10623  011510  5038               	movf	btemp,w,c
 10624  011512  B4D8               	btfsc	status,2,c
 10625  011514  D024               	goto	l16772
 10626                           
 10627                           ;gemsecs.c: 109:     rxData = UART1_Read();
 10628  011516  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10629                           
 10630                           ;stkvar	_rxData @ sp[(-1)+0]
 10631  01151A  0EFF               	movlw	-1
 10632  01151C  0060  F0E3  FFE3   	movff	btemp,plusw1
 10633                           
 10634                           ; BSR set to: 57
 10635                           ;gemsecs.c: 110:     if (rxData == 0x04) {
 10636                           ;stkvar	_rxData @ sp[(-1)+0]
 10637  011522  0EFF               	movlw	-1
 10638  011524  006F FF8C  F038    	movff	plusw1,btemp
 10639  01152A  0E04               	movlw	4
 10640  01152C  1838               	xorwf	btemp,w,c
 10641  01152E  A4D8               	btfss	status,2,c
 10642  011530  D016               	goto	l16772
 10643                           
 10644                           ; BSR set to: 57
 10645                           ;gemsecs.c: 111:      StartTimer(TMR_T2, 3000);
 10646  011532  0EB8               	movlw	184
 10647  011534  6EE6               	movwf	postinc1,c
 10648  011536  0E0B               	movlw	11
 10649  011538  6EE6               	movwf	postinc1,c
 10650  01153A  0E02               	movlw	2
 10651  01153C  6EE6               	movwf	postinc1,c
 10652  01153E  EC26  F0B5         	call	_StartTimer	;wreg free
 10653                           
 10654                           ;gemsecs.c: 112:      V.error = LINK_ERROR_NONE;
 10655  011542  0E0A               	movlw	10
 10656  011544  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10657                           
 10658                           ;gemsecs.c: 113:      *m_link = LINK_STATE_EOT;
 10659                           ;stkvar	_m_link @ sp[(-1)+-2]
 10660  01154A  0EFD               	movlw	-3
 10661  01154C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10662  011552  0EFE               	movlw	-2
 10663  011554  006F FF8F FFDA     	movff	plusw1,fsr2h
 10664  01155A  0E02               	movlw	2
 10665  01155C  6EDF               	movwf	indf2,c
 10666  01155E                     l16772:
 10667                           
 10668                           ;gemsecs.c: 116:    if (V.uart == 1 && UART2_is_rx_ready()) {
 10669  01155E  0063  F127  FFE8   	movff	_V+379,wreg	;volatile
 10670  011564  0A01               	xorlw	1
 10671  011566  A4D8               	btfss	status,2,c
 10672  011568  D27B               	goto	l16946
 10673  01156A  ECA5  F0B9         	call	_UART2_is_rx_ready	;wreg free
 10674  01156E  5038               	movf	btemp,w,c
 10675  011570  B4D8               	btfsc	status,2,c
 10676  011572  D276               	goto	l16946
 10677                           
 10678                           ;gemsecs.c: 117:     rxData = UART2_Read();
 10679  011574  ECCC  F0B4         	call	_UART2_Read	;wreg free
 10680                           
 10681                           ;stkvar	_rxData @ sp[(-1)+0]
 10682  011578  0EFF               	movlw	-1
 10683  01157A  0060  F0E3  FFE3   	movff	btemp,plusw1
 10684                           
 10685                           ; BSR set to: 57
 10686                           ;gemsecs.c: 118:     if (rxData == 0x04) {
 10687                           ;stkvar	_rxData @ sp[(-1)+0]
 10688  011580  0EFF               	movlw	-1
 10689  011582  006F FF8C  F038    	movff	plusw1,btemp
 10690  011588  0E04               	movlw	4
 10691  01158A  1838               	xorwf	btemp,w,c
 10692  01158C  A4D8               	btfss	status,2,c
 10693  01158E  D268               	goto	l16946
 10694                           
 10695                           ; BSR set to: 57
 10696                           ;gemsecs.c: 119:      StartTimer(TMR_T2, 3000);
 10697  011590  0EB8               	movlw	184
 10698  011592  6EE6               	movwf	postinc1,c
 10699  011594  0E0B               	movlw	11
 10700  011596  6EE6               	movwf	postinc1,c
 10701  011598  0E02               	movlw	2
 10702  01159A  6EE6               	movwf	postinc1,c
 10703  01159C  EC26  F0B5         	call	_StartTimer	;wreg free
 10704                           
 10705                           ;gemsecs.c: 120:      V.error = LINK_ERROR_NONE;
 10706  0115A0  0E0A               	movlw	10
 10707  0115A2  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10708                           
 10709                           ;gemsecs.c: 121:      *m_link = LINK_STATE_EOT;
 10710                           ;stkvar	_m_link @ sp[(-1)+-2]
 10711  0115A8  0EFD               	movlw	-3
 10712  0115AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10713  0115B0  0EFE               	movlw	-2
 10714  0115B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10715  0115B8  0E02               	movlw	2
 10716  0115BA  D22B               	goto	L29
 10717  0115BC                     l16786:
 10718                           
 10719                           ;gemsecs.c: 128:   if (TimerDone(TMR_T2)) {
 10720  0115BC  0E02               	movlw	2
 10721  0115BE  6EE6               	movwf	postinc1,c
 10722  0115C0  ECF5  F0B7         	call	_TimerDone	;wreg free
 10723  0115C4  5038               	movf	btemp,w,c
 10724  0115C6  A4D8               	btfss	status,2,c
 10725  0115C8  D782               	goto	u11490
 10726                           
 10727                           ;gemsecs.c: 134:    if (V.uart == 1 && UART1_is_rx_ready()) {
 10728  0115CA  0063  F127  FFE8   	movff	_V+379,wreg	;volatile
 10729  0115D0  0A01               	xorlw	1
 10730  0115D2  A4D8               	btfss	status,2,c
 10731  0115D4  D0D2               	goto	l16852
 10732  0115D6  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
 10733  0115DA  5038               	movf	btemp,w,c
 10734  0115DC  B4D8               	btfsc	status,2,c
 10735  0115DE  D0CD               	goto	l16852
 10736                           
 10737                           ;gemsecs.c: 135:     rxData = UART1_Read();
 10738  0115E0  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10739                           
 10740                           ;stkvar	_rxData @ sp[(-1)+0]
 10741  0115E4  0EFF               	movlw	-1
 10742  0115E6  0060  F0E3  FFE3   	movff	btemp,plusw1
 10743                           
 10744                           ; BSR set to: 57
 10745                           ;gemsecs.c: 136:     if (rxData_l == 0) {
 10746  0115EC  5023               	movf	m_protocol@rxData_l,w,c
 10747  0115EE  A4D8               	btfss	status,2,c
 10748  0115F0  D018               	goto	l16812
 10749                           
 10750                           ; BSR set to: 57
 10751                           ;gemsecs.c: 137:      r_block.length = rxData;
 10752                           ;stkvar	_rxData @ sp[(-1)+0]
 10753  0115F2  0EFF               	movlw	-1
 10754  0115F4  006F FF8C  F084    	movff	plusw1,_r_block+12
 10755                           
 10756                           ; BSR set to: 57
 10757                           ;gemsecs.c: 138:      run_checksum(0, 1);
 10758  0115FA  0E01               	movlw	1
 10759  0115FC  6EE6               	movwf	postinc1,c
 10760  0115FE  0E00               	movlw	0
 10761  011600  6EE6               	movwf	postinc1,c
 10762  011602  EC7A  F0B6         	call	_run_checksum	;wreg free
 10763                           
 10764                           ;gemsecs.c: 139:      rxData_l++;
 10765  011606  2A23               	incf	m_protocol@rxData_l,f,c
 10766                           
 10767                           ;gemsecs.c: 140:      b_block[sizeof(header254) - rxData_l] = rxData;
 10768                           ;stkvar	_rxData @ sp[(-1)+0]
 10769  011608  5023               	movf	m_protocol@rxData_l,w,c
 10770  01160A  084F               	sublw	low (_H254+257)
 10771  01160C  6ED9               	movwf	fsr2l,c
 10772  01160E  0E00               	movlw	0
 10773  011610  A0D8               	btfss	status,0,c
 10774  011612  2AE8               	incf	wreg,f,c
 10775  011614  080D               	sublw	high (_H254+257)
 10776  011616  6EDA               	movwf	fsr2h,c
 10777  011618  0EFF               	movlw	-1
 10778  01161A  006F FF8F FFDF     	movff	plusw1,indf2
 10779                           
 10780                           ;gemsecs.c: 141:     } else {
 10781  011620  D0AC               	goto	l16852
 10782  011622                     l16812:
 10783                           
 10784                           ; BSR set to: 57
 10785                           ;gemsecs.c: 145:      if (rxData_l <= sizeof(block10))
 10786  011622  0E0B               	movlw	11
 10787  011624  6023               	cpfslt	m_protocol@rxData_l,c
 10788  011626  D00C               	goto	l16816
 10789                           
 10790                           ; BSR set to: 57
 10791                           ;gemsecs.c: 146:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 10792                           ;stkvar	_rxData @ sp[(-1)+0]
 10793  011628  5023               	movf	m_protocol@rxData_l,w,c
 10794  01162A  0819               	sublw	low (_H10+25)
 10795  01162C  6ED9               	movwf	fsr2l,c
 10796  01162E  0E00               	movlw	0
 10797  011630  A0D8               	btfss	status,0,c
 10798  011632  2AE8               	incf	wreg,f,c
 10799  011634  0801               	sublw	high (_H10+25)
 10800  011636  6EDA               	movwf	fsr2h,c
 10801  011638  0EFF               	movlw	-1
 10802  01163A  006F FF8F FFDF     	movff	plusw1,indf2
 10803  011640                     l16816:
 10804                           
 10805                           ; BSR set to: 57
 10806                           ;gemsecs.c: 147:      if (rxData_l <= r_block.length)
 10807  011640  5023               	movf	m_protocol@rxData_l,w,c
 10808  011642  0100               	movlb	0	; () banked
 10809  011644  5D84               	subwf	(_r_block+12)& (0+255),w,b
 10810  011646  A0D8               	btfss	status,0,c
 10811  011648  D00D               	goto	l16820
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;gemsecs.c: 148:       V.r_checksum = run_checksum(rxData, 0);
 10815  01164A  0E00               	movlw	0
 10816  01164C  6EE6               	movwf	postinc1,c
 10817                           
 10818                           ;stkvar	_rxData @ sp[(-2)+0]
 10819  01164E  0EFE               	movlw	-2
 10820  011650  50E3               	movf	plusw1,w,c
 10821  011652  6EE6               	movwf	postinc1,c
 10822  011654  EC7A  F0B6         	call	_run_checksum	;wreg free
 10823  011658  0060  F0E0  FC09   	movff	btemp,_V+315	;volatile
 10824  01165E  0060  F0E4  FC0A   	movff	btemp+1,_V+316	;volatile
 10825  011664                     l16820:
 10826                           
 10827                           ;gemsecs.c: 150:      if (rxData_l == r_block.length + 1)
 10828  011664  5023               	movf	m_protocol@rxData_l,w,c
 10829  011666  6E42               	movwf	btemp+10,c
 10830  011668  6A43               	clrf	btemp+11,c
 10831  01166A  0100               	movlb	0	; () banked
 10832  01166C  5184               	movf	(_r_block+12)& (0+255),w,b
 10833  01166E  6E40               	movwf	btemp+8,c
 10834  011670  6A41               	clrf	btemp+9,c
 10835  011672  0E01               	movlw	1
 10836  011674  2640               	addwf	btemp+8,f,c
 10837  011676  0E00               	movlw	0
 10838  011678  2241               	addwfc	btemp+9,f,c
 10839  01167A  5042               	movf	btemp+10,w,c
 10840  01167C  1840               	xorwf	btemp+8,w,c
 10841  01167E  E109               	bnz	l16824
 10842  011680  5043               	movf	btemp+11,w,c
 10843  011682  1841               	xorwf	btemp+9,w,c
 10844  011684  A4D8               	btfss	status,2,c
 10845  011686  D005               	goto	l16824
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;gemsecs.c: 151:       H10[1].checksum = (uint16_t) rxData << 8;
 10849                           ;stkvar	_rxData @ sp[(-1)+0]
 10850  011688  0EFF               	movlw	-1
 10851  01168A  50E3               	movf	plusw1,w,c
 10852  01168C  0101               	movlb	1	; () banked
 10853  01168E  6F0E               	movwf	(_H10+14)& (0+255),b
 10854  011690  6B0D               	clrf	(_H10+13)& (0+255),b
 10855  011692                     l16824:
 10856                           
 10857                           ;gemsecs.c: 152:      if (rxData_l == r_block.length + 2)
 10858  011692  5023               	movf	m_protocol@rxData_l,w,c
 10859  011694  6E42               	movwf	btemp+10,c
 10860  011696  6A43               	clrf	btemp+11,c
 10861  011698  0100               	movlb	0	; () banked
 10862  01169A  5184               	movf	(_r_block+12)& (0+255),w,b
 10863  01169C  6E40               	movwf	btemp+8,c
 10864  01169E  6A41               	clrf	btemp+9,c
 10865  0116A0  0E02               	movlw	2
 10866  0116A2  2640               	addwf	btemp+8,f,c
 10867  0116A4  0E00               	movlw	0
 10868  0116A6  2241               	addwfc	btemp+9,f,c
 10869  0116A8  5042               	movf	btemp+10,w,c
 10870  0116AA  1840               	xorwf	btemp+8,w,c
 10871  0116AC  E10A               	bnz	l16828
 10872  0116AE  5043               	movf	btemp+11,w,c
 10873  0116B0  1841               	xorwf	btemp+9,w,c
 10874  0116B2  A4D8               	btfss	status,2,c
 10875  0116B4  D006               	goto	l16828
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;gemsecs.c: 153:       H10[1].checksum += rxData;
 10879                           ;stkvar	_rxData @ sp[(-1)+0]
 10880  0116B6  0EFF               	movlw	-1
 10881  0116B8  50E3               	movf	plusw1,w,c
 10882  0116BA  0101               	movlb	1	; () banked
 10883  0116BC  270D               	addwf	(_H10+13)& (0+255),f,b
 10884  0116BE  0E00               	movlw	0
 10885  0116C0  230E               	addwfc	(_H10+14)& (0+255),f,b
 10886  0116C2                     l16828:
 10887                           
 10888                           ;gemsecs.c: 155:      rxData_l++;
 10889  0116C2  2A23               	incf	m_protocol@rxData_l,f,c
 10890                           
 10891                           ;gemsecs.c: 156:      b_block[sizeof(header254) - rxData_l] = rxData;
 10892                           ;stkvar	_rxData @ sp[(-1)+0]
 10893  0116C4  5023               	movf	m_protocol@rxData_l,w,c
 10894  0116C6  084F               	sublw	low (_H254+257)
 10895  0116C8  6ED9               	movwf	fsr2l,c
 10896  0116CA  0E00               	movlw	0
 10897  0116CC  A0D8               	btfss	status,0,c
 10898  0116CE  2AE8               	incf	wreg,f,c
 10899  0116D0  080D               	sublw	high (_H254+257)
 10900  0116D2  6EDA               	movwf	fsr2h,c
 10901  0116D4  0EFF               	movlw	-1
 10902  0116D6  006F FF8F FFDF     	movff	plusw1,indf2
 10903                           
 10904                           ;gemsecs.c: 157:      if (rxData_l > (r_block.length + 2)) {
 10905  0116DC  5023               	movf	m_protocol@rxData_l,w,c
 10906  0116DE  6E42               	movwf	btemp+10,c
 10907  0116E0  6A43               	clrf	btemp+11,c
 10908  0116E2  0100               	movlb	0	; () banked
 10909  0116E4  5184               	movf	(_r_block+12)& (0+255),w,b
 10910  0116E6  6E40               	movwf	btemp+8,c
 10911  0116E8  6A41               	clrf	btemp+9,c
 10912  0116EA  0E02               	movlw	2
 10913  0116EC  2640               	addwf	btemp+8,f,c
 10914  0116EE  0E00               	movlw	0
 10915  0116F0  2241               	addwfc	btemp+9,f,c
 10916  0116F2  5042               	movf	btemp+10,w,c
 10917  0116F4  5C40               	subwf	btemp+8,w,c
 10918  0116F6  5041               	movf	btemp+9,w,c
 10919  0116F8  0A80               	xorlw	128
 10920  0116FA  6E38               	movwf	btemp,c
 10921  0116FC  5043               	movf	btemp+11,w,c
 10922  0116FE  0A80               	xorlw	128
 10923  011700  5838               	subwfb	btemp,w,c
 10924  011702  B0D8               	btfsc	status,0,c
 10925  011704  D03A               	goto	l16852
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;gemsecs.c: 158:       if (V.r_checksum == H10[1].checksum) {
 10929  011706  EE23  F009         	lfsr	2,_V+315	;volatile
 10930  01170A  0101               	movlb	1	; () banked
 10931  01170C  510D               	movf	(_H10+13)& (0+255),w,b
 10932  01170E  18DE               	xorwf	postinc2,w,c
 10933  011710  E110               	bnz	l16840
 10934  011712  510E               	movf	(_H10+14)& (0+255),w,b
 10935  011714  18DE               	xorwf	postinc2,w,c
 10936  011716  A4D8               	btfss	status,2,c
 10937  011718  D00C               	goto	l16840
 10938                           
 10939                           ; BSR set to: 1
 10940                           ;gemsecs.c: 159:        *m_link = LINK_STATE_ACK;
 10941                           ;stkvar	_m_link @ sp[(-1)+-2]
 10942  01171A  0EFD               	movlw	-3
 10943  01171C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10944  011722  0EFE               	movlw	-2
 10945  011724  006F FF8F FFDA     	movff	plusw1,fsr2h
 10946  01172A  0E03               	movlw	3
 10947  01172C  D025               	goto	L26
 10948  01172E                     l16838:
 10949  01172E  ECEA  F0B4         	call	_UART1_Read	;wreg free
 10950  011732                     l16840:
 10951                           
 10952                           ;gemsecs.c: 161:        while (UART1_is_rx_ready())
 10953  011732  ECA9  F0B9         	call	_UART1_is_rx_ready	;wreg free
 10954  011736  5038               	movf	btemp,w,c
 10955  011738  A4D8               	btfss	status,2,c
 10956  01173A  D7F9               	goto	l16838
 10957                           
 10958                           ;gemsecs.c: 163:        WaitMs(1500);
 10959  01173C  0EDC               	movlw	220
 10960  01173E  6EE6               	movwf	postinc1,c
 10961  011740  0E05               	movlw	5
 10962  011742  6EE6               	movwf	postinc1,c
 10963  011744  EC62  F0B5         	call	_WaitMs	;wreg free
 10964                           
 10965                           ;gemsecs.c: 164:        V.error = LINK_ERROR_CHECKSUM;
 10966  011748  0E0F               	movlw	15
 10967  01174A  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 10968                           
 10969                           ;gemsecs.c: 165:        V.checksum_error++;
 10970  011750  EE23  F00D         	lfsr	2,_V+319	;volatile
 10971  011754  2ADE               	incf	postinc2,f,c
 10972  011756  0E00               	movlw	0
 10973  011758  22DD               	addwfc	postdec2,f,c
 10974                           
 10975                           ;gemsecs.c: 166:        V.failed_receive = 3;
 10976  01175A  EE23  F01A         	lfsr	2,_V+332	;volatile
 10977  01175E  50DF               	movf	223,w,c
 10978  011760  0BF0               	andlw	-16
 10979  011762  0903               	iorlw	3
 10980  011764  6EDF               	movwf	223,c
 10981                           
 10982                           ;gemsecs.c: 167:        *m_link = LINK_STATE_NAK;
 10983                           ;stkvar	_m_link @ sp[(-1)+-2]
 10984  011766  0EFD               	movlw	-3
 10985  011768  006F FF8F FFD9     	movff	plusw1,fsr2l
 10986  01176E  0EFE               	movlw	-2
 10987  011770  006F FF8F FFDA     	movff	plusw1,fsr2h
 10988  011776  0E05               	movlw	5
 10989  011778                     L26:
 10990  011778  6EDF               	movwf	indf2,c
 10991  01177A                     l16852:
 10992                           
 10993                           ;gemsecs.c: 173:    if (V.uart == 2 && UART2_is_rx_ready()) {
 10994  01177A  0063  F127  FFE8   	movff	_V+379,wreg	;volatile
 10995  011780  0A02               	xorlw	2
 10996  011782  A4D8               	btfss	status,2,c
 10997  011784  D16D               	goto	l16946
 10998  011786  ECA5  F0B9         	call	_UART2_is_rx_ready	;wreg free
 10999  01178A  5038               	movf	btemp,w,c
 11000  01178C  B4D8               	btfsc	status,2,c
 11001  01178E  D168               	goto	l16946
 11002                           
 11003                           ;gemsecs.c: 174:     rxData = UART2_Read();
 11004  011790  ECCC  F0B4         	call	_UART2_Read	;wreg free
 11005                           
 11006                           ;stkvar	_rxData @ sp[(-1)+0]
 11007  011794  0EFF               	movlw	-1
 11008  011796  0060  F0E3  FFE3   	movff	btemp,plusw1
 11009                           
 11010                           ; BSR set to: 57
 11011                           ;gemsecs.c: 175:     if (rxData_l == 0) {
 11012  01179C  5023               	movf	m_protocol@rxData_l,w,c
 11013  01179E  A4D8               	btfss	status,2,c
 11014  0117A0  D018               	goto	l16868
 11015                           
 11016                           ; BSR set to: 57
 11017                           ;gemsecs.c: 176:      r_block.length = rxData;
 11018                           ;stkvar	_rxData @ sp[(-1)+0]
 11019  0117A2  0EFF               	movlw	-1
 11020  0117A4  006F FF8C  F084    	movff	plusw1,_r_block+12
 11021                           
 11022                           ; BSR set to: 57
 11023                           ;gemsecs.c: 177:      run_checksum(0, 1);
 11024  0117AA  0E01               	movlw	1
 11025  0117AC  6EE6               	movwf	postinc1,c
 11026  0117AE  0E00               	movlw	0
 11027  0117B0  6EE6               	movwf	postinc1,c
 11028  0117B2  EC7A  F0B6         	call	_run_checksum	;wreg free
 11029                           
 11030                           ;gemsecs.c: 178:      rxData_l++;
 11031  0117B6  2A23               	incf	m_protocol@rxData_l,f,c
 11032                           
 11033                           ;gemsecs.c: 179:      b_block[sizeof(header254) - rxData_l] = rxData;
 11034                           ;stkvar	_rxData @ sp[(-1)+0]
 11035  0117B8  5023               	movf	m_protocol@rxData_l,w,c
 11036  0117BA  084F               	sublw	low (_H254+257)
 11037  0117BC  6ED9               	movwf	fsr2l,c
 11038  0117BE  0E00               	movlw	0
 11039  0117C0  A0D8               	btfss	status,0,c
 11040  0117C2  2AE8               	incf	wreg,f,c
 11041  0117C4  080D               	sublw	high (_H254+257)
 11042  0117C6  6EDA               	movwf	fsr2h,c
 11043  0117C8  0EFF               	movlw	-1
 11044  0117CA  006F FF8F FFDF     	movff	plusw1,indf2
 11045                           
 11046                           ;gemsecs.c: 180:     } else {
 11047  0117D0  D147               	goto	l16946
 11048  0117D2                     l16868:
 11049                           
 11050                           ; BSR set to: 57
 11051                           ;gemsecs.c: 184:      if (rxData_l <= sizeof(block10))
 11052  0117D2  0E0B               	movlw	11
 11053  0117D4  6023               	cpfslt	m_protocol@rxData_l,c
 11054  0117D6  D00C               	goto	l16872
 11055                           
 11056                           ; BSR set to: 57
 11057                           ;gemsecs.c: 185:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 11058                           ;stkvar	_rxData @ sp[(-1)+0]
 11059  0117D8  5023               	movf	m_protocol@rxData_l,w,c
 11060  0117DA  0819               	sublw	low (_H10+25)
 11061  0117DC  6ED9               	movwf	fsr2l,c
 11062  0117DE  0E00               	movlw	0
 11063  0117E0  A0D8               	btfss	status,0,c
 11064  0117E2  2AE8               	incf	wreg,f,c
 11065  0117E4  0801               	sublw	high (_H10+25)
 11066  0117E6  6EDA               	movwf	fsr2h,c
 11067  0117E8  0EFF               	movlw	-1
 11068  0117EA  006F FF8F FFDF     	movff	plusw1,indf2
 11069  0117F0                     l16872:
 11070                           
 11071                           ; BSR set to: 57
 11072                           ;gemsecs.c: 186:      if (rxData_l <= r_block.length)
 11073  0117F0  5023               	movf	m_protocol@rxData_l,w,c
 11074  0117F2  0100               	movlb	0	; () banked
 11075  0117F4  5D84               	subwf	(_r_block+12)& (0+255),w,b
 11076  0117F6  A0D8               	btfss	status,0,c
 11077  0117F8  D00D               	goto	l16876
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;gemsecs.c: 187:       V.r_checksum = run_checksum(rxData, 0);
 11081  0117FA  0E00               	movlw	0
 11082  0117FC  6EE6               	movwf	postinc1,c
 11083                           
 11084                           ;stkvar	_rxData @ sp[(-2)+0]
 11085  0117FE  0EFE               	movlw	-2
 11086  011800  50E3               	movf	plusw1,w,c
 11087  011802  6EE6               	movwf	postinc1,c
 11088  011804  EC7A  F0B6         	call	_run_checksum	;wreg free
 11089  011808  0060  F0E0  FC09   	movff	btemp,_V+315	;volatile
 11090  01180E  0060  F0E4  FC0A   	movff	btemp+1,_V+316	;volatile
 11091  011814                     l16876:
 11092                           
 11093                           ;gemsecs.c: 189:      if (rxData_l == r_block.length + 1)
 11094  011814  5023               	movf	m_protocol@rxData_l,w,c
 11095  011816  6E42               	movwf	btemp+10,c
 11096  011818  6A43               	clrf	btemp+11,c
 11097  01181A  0100               	movlb	0	; () banked
 11098  01181C  5184               	movf	(_r_block+12)& (0+255),w,b
 11099  01181E  6E40               	movwf	btemp+8,c
 11100  011820  6A41               	clrf	btemp+9,c
 11101  011822  0E01               	movlw	1
 11102  011824  2640               	addwf	btemp+8,f,c
 11103  011826  0E00               	movlw	0
 11104  011828  2241               	addwfc	btemp+9,f,c
 11105  01182A  5042               	movf	btemp+10,w,c
 11106  01182C  1840               	xorwf	btemp+8,w,c
 11107  01182E  E109               	bnz	l16880
 11108  011830  5043               	movf	btemp+11,w,c
 11109  011832  1841               	xorwf	btemp+9,w,c
 11110  011834  A4D8               	btfss	status,2,c
 11111  011836  D005               	goto	l16880
 11112                           
 11113                           ; BSR set to: 0
 11114                           ;gemsecs.c: 190:       H10[1].checksum = (uint16_t) rxData << 8;
 11115                           ;stkvar	_rxData @ sp[(-1)+0]
 11116  011838  0EFF               	movlw	-1
 11117  01183A  50E3               	movf	plusw1,w,c
 11118  01183C  0101               	movlb	1	; () banked
 11119  01183E  6F0E               	movwf	(_H10+14)& (0+255),b
 11120  011840  6B0D               	clrf	(_H10+13)& (0+255),b
 11121  011842                     l16880:
 11122                           
 11123                           ;gemsecs.c: 191:      if (rxData_l == r_block.length + 2)
 11124  011842  5023               	movf	m_protocol@rxData_l,w,c
 11125  011844  6E42               	movwf	btemp+10,c
 11126  011846  6A43               	clrf	btemp+11,c
 11127  011848  0100               	movlb	0	; () banked
 11128  01184A  5184               	movf	(_r_block+12)& (0+255),w,b
 11129  01184C  6E40               	movwf	btemp+8,c
 11130  01184E  6A41               	clrf	btemp+9,c
 11131  011850  0E02               	movlw	2
 11132  011852  2640               	addwf	btemp+8,f,c
 11133  011854  0E00               	movlw	0
 11134  011856  2241               	addwfc	btemp+9,f,c
 11135  011858  5042               	movf	btemp+10,w,c
 11136  01185A  1840               	xorwf	btemp+8,w,c
 11137  01185C  E10A               	bnz	l16884
 11138  01185E  5043               	movf	btemp+11,w,c
 11139  011860  1841               	xorwf	btemp+9,w,c
 11140  011862  A4D8               	btfss	status,2,c
 11141  011864  D006               	goto	l16884
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;gemsecs.c: 192:       H10[1].checksum += rxData;
 11145                           ;stkvar	_rxData @ sp[(-1)+0]
 11146  011866  0EFF               	movlw	-1
 11147  011868  50E3               	movf	plusw1,w,c
 11148  01186A  0101               	movlb	1	; () banked
 11149  01186C  270D               	addwf	(_H10+13)& (0+255),f,b
 11150  01186E  0E00               	movlw	0
 11151  011870  230E               	addwfc	(_H10+14)& (0+255),f,b
 11152  011872                     l16884:
 11153                           
 11154                           ;gemsecs.c: 194:      rxData_l++;
 11155  011872  2A23               	incf	m_protocol@rxData_l,f,c
 11156                           
 11157                           ;gemsecs.c: 195:      b_block[sizeof(header254) - rxData_l] = rxData;
 11158                           ;stkvar	_rxData @ sp[(-1)+0]
 11159  011874  5023               	movf	m_protocol@rxData_l,w,c
 11160  011876  084F               	sublw	low (_H254+257)
 11161  011878  6ED9               	movwf	fsr2l,c
 11162  01187A  0E00               	movlw	0
 11163  01187C  A0D8               	btfss	status,0,c
 11164  01187E  2AE8               	incf	wreg,f,c
 11165  011880  080D               	sublw	high (_H254+257)
 11166  011882  6EDA               	movwf	fsr2h,c
 11167  011884  0EFF               	movlw	-1
 11168  011886  006F FF8F FFDF     	movff	plusw1,indf2
 11169                           
 11170                           ;gemsecs.c: 196:      if (rxData_l > (r_block.length + 2)) {
 11171  01188C  5023               	movf	m_protocol@rxData_l,w,c
 11172  01188E  6E42               	movwf	btemp+10,c
 11173  011890  6A43               	clrf	btemp+11,c
 11174  011892  0100               	movlb	0	; () banked
 11175  011894  5184               	movf	(_r_block+12)& (0+255),w,b
 11176  011896  6E40               	movwf	btemp+8,c
 11177  011898  6A41               	clrf	btemp+9,c
 11178  01189A  0E02               	movlw	2
 11179  01189C  2640               	addwf	btemp+8,f,c
 11180  01189E  0E00               	movlw	0
 11181  0118A0  2241               	addwfc	btemp+9,f,c
 11182  0118A2  5042               	movf	btemp+10,w,c
 11183  0118A4  5C40               	subwf	btemp+8,w,c
 11184  0118A6  5041               	movf	btemp+9,w,c
 11185  0118A8  0A80               	xorlw	128
 11186  0118AA  6E38               	movwf	btemp,c
 11187  0118AC  5043               	movf	btemp+11,w,c
 11188  0118AE  0A80               	xorlw	128
 11189  0118B0  5838               	subwfb	btemp,w,c
 11190  0118B2  B0D8               	btfsc	status,0,c
 11191  0118B4  D0D5               	goto	l16946
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;gemsecs.c: 197:       if (V.r_checksum == H10[1].checksum) {
 11195  0118B6  EE23  F009         	lfsr	2,_V+315	;volatile
 11196  0118BA  0101               	movlb	1	; () banked
 11197  0118BC  510D               	movf	(_H10+13)& (0+255),w,b
 11198  0118BE  18DE               	xorwf	postinc2,w,c
 11199  0118C0  E110               	bnz	l16896
 11200  0118C2  510E               	movf	(_H10+14)& (0+255),w,b
 11201  0118C4  18DE               	xorwf	postinc2,w,c
 11202  0118C6  A4D8               	btfss	status,2,c
 11203  0118C8  D00C               	goto	l16896
 11204                           
 11205                           ; BSR set to: 1
 11206                           ;gemsecs.c: 198:        *m_link = LINK_STATE_ACK;
 11207                           ;stkvar	_m_link @ sp[(-1)+-2]
 11208  0118CA  0EFD               	movlw	-3
 11209  0118CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11210  0118D2  0EFE               	movlw	-2
 11211  0118D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11212  0118DA  0E03               	movlw	3
 11213  0118DC  D09A               	goto	L29
 11214  0118DE                     l16894:
 11215  0118DE  ECCC  F0B4         	call	_UART2_Read	;wreg free
 11216  0118E2                     l16896:
 11217                           
 11218                           ;gemsecs.c: 200:        while (UART2_is_rx_ready())
 11219  0118E2  ECA5  F0B9         	call	_UART2_is_rx_ready	;wreg free
 11220  0118E6  5038               	movf	btemp,w,c
 11221  0118E8  A4D8               	btfss	status,2,c
 11222  0118EA  D7F9               	goto	l16894
 11223                           
 11224                           ;gemsecs.c: 202:        WaitMs(1500);
 11225  0118EC  0EDC               	movlw	220
 11226  0118EE  6EE6               	movwf	postinc1,c
 11227  0118F0  0E05               	movlw	5
 11228  0118F2  6EE6               	movwf	postinc1,c
 11229  0118F4  EC62  F0B5         	call	_WaitMs	;wreg free
 11230                           
 11231                           ;gemsecs.c: 203:        V.error = LINK_ERROR_CHECKSUM;
 11232  0118F8  0E0F               	movlw	15
 11233  0118FA  006F FFA0  FC03    	movff	wreg,_V+309	;volatile
 11234                           
 11235                           ;gemsecs.c: 204:        V.checksum_error++;
 11236  011900  EE23  F00D         	lfsr	2,_V+319	;volatile
 11237  011904  2ADE               	incf	postinc2,f,c
 11238  011906  0E00               	movlw	0
 11239  011908  22DD               	addwfc	postdec2,f,c
 11240                           
 11241                           ;gemsecs.c: 205:        V.failed_receive = 4;
 11242  01190A  EE23  F01A         	lfsr	2,_V+332	;volatile
 11243  01190E  50DF               	movf	223,w,c
 11244  011910  0BF0               	andlw	-16
 11245  011912  0904               	iorlw	4
 11246  011914  D5EA               	goto	L28
 11247  011916                     l16908:
 11248                           
 11249                           ;gemsecs.c: 217:   V.stream = H10[1].block.block.stream;
 11250  011916  0101               	movlb	1	; () banked
 11251  011918  5116               	movf	(_H10+22)& (0+255),w,b
 11252  01191A  0B7F               	andlw	127
 11253  01191C  6E43               	movwf	btemp+11,c
 11254  01191E  0060  F10C  FC01   	movff	btemp+11,_V+307	;volatile
 11255                           
 11256                           ; BSR set to: 1
 11257                           ;gemsecs.c: 218:   V.function = H10[1].block.block.function;
 11258  011924  EE23  F002         	lfsr	2,_V+308	;volatile
 11259  011928  0060  F457  FFDF   	movff	_H10+21,indf2
 11260                           
 11261                           ; BSR set to: 1
 11262                           ;gemsecs.c: 219:   V.systemb = H10[1].block.block.systemb;
 11263  01192E  EE20  F10F         	lfsr	2,_H10+15
 11264  011932  006F FF78  FBF9    	movff	postinc2,_V+299	;volatile
 11265  011938  006F FF78  FBFA    	movff	postinc2,_V+300	;volatile
 11266  01193E  006F FF78  FBFB    	movff	postinc2,_V+301	;volatile
 11267  011944  006F FF74  FBFC    	movff	postdec2,_V+302	;volatile
 11268                           
 11269                           ; BSR set to: 1
 11270                           ;gemsecs.c: 220:   V.rbit = H10[1].block.block.rbit;
 11271  01194A  EE23  F019         	lfsr	2,_V+331	;volatile
 11272  01194E  BF18               	btfsc	(_H10+24)& (0+255),7,b
 11273  011950  D002               	bra	u11775
 11274  011952  90DF               	bcf	indf2,0,c
 11275  011954  D001               	bra	u11776
 11276  011956                     u11775:
 11277  011956  80DF               	bsf	indf2,0,c
 11278  011958                     u11776:
 11279                           
 11280                           ;gemsecs.c: 221:   V.wbit = H10[1].block.block.wbit;
 11281  011958  EE23  F019         	lfsr	2,_V+331	;volatile
 11282  01195C  0101               	movlb	1	; () banked
 11283  01195E  BF16               	btfsc	(_H10+22)& (0+255),7,b
 11284  011960  D002               	bra	u11785
 11285  011962  92DF               	bcf	indf2,1,c
 11286  011964  D001               	bra	u11786
 11287  011966                     u11785:
 11288  011966  82DF               	bsf	indf2,1,c
 11289  011968                     u11786:
 11290                           
 11291                           ;gemsecs.c: 222:   V.ebit = H10[1].block.block.ebit;
 11292  011968  EE23  F019         	lfsr	2,_V+331	;volatile
 11293  01196C  0101               	movlb	1	; () banked
 11294  01196E  BF14               	btfsc	(_H10+20)& (0+255),7,b
 11295  011970  D002               	bra	u11795
 11296  011972  94DF               	bcf	indf2,2,c
 11297  011974  D001               	bra	u11796
 11298  011976                     u11795:
 11299  011976  84DF               	bsf	indf2,2,c
 11300  011978                     u11796:
 11301                           
 11302                           ;gemsecs.c: 223:   V.failed_receive = 0;
 11303  011978  EE23  F01A         	lfsr	2,_V+332	;volatile
 11304  01197C  0EF0               	movlw	-16
 11305  01197E  16DF               	andwf	223,f,c
 11306                           
 11307                           ;gemsecs.c: 224:   secs_II_monitor_message(V.stream, V.function, 1000);
 11308  011980  0EE8               	movlw	232
 11309  011982  6EE6               	movwf	postinc1,c
 11310  011984  0E03               	movlw	3
 11311  011986  6EE6               	movwf	postinc1,c
 11312  011988  EE23  F002         	lfsr	2,_V+308	;volatile
 11313  01198C  50DF               	movf	indf2,w,c
 11314  01198E  6EE6               	movwf	postinc1,c
 11315  011990  EE23  F001         	lfsr	2,_V+307	;volatile
 11316  011994  50DF               	movf	indf2,w,c
 11317  011996  6EE6               	movwf	postinc1,c
 11318  011998  EC14  F0A7         	call	_secs_II_monitor_message	;wreg free
 11319                           
 11320                           ;gemsecs.c: 225:   V.g_state = secs_gem_state(V.stream, V.function);
 11321  01199C  EE23  F002         	lfsr	2,_V+308	;volatile
 11322  0119A0  50DF               	movf	indf2,w,c
 11323  0119A2  6EE6               	movwf	postinc1,c
 11324  0119A4  EE23  F001         	lfsr	2,_V+307	;volatile
 11325  0119A8  50DF               	movf	indf2,w,c
 11326  0119AA  6EE6               	movwf	postinc1,c
 11327  0119AC  EC62  F0A6         	call	_secs_gem_state	;wreg free
 11328  0119B0  0060  F0E0  FAD0   	movff	btemp,_V+2	;volatile
 11329                           
 11330                           ;gemsecs.c: 226:   *m_link = LINK_STATE_DONE;
 11331                           ;stkvar	_m_link @ sp[(-1)+-2]
 11332  0119B6  0EFD               	movlw	-3
 11333  0119B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11334  0119BE  0EFE               	movlw	-2
 11335  0119C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11336  0119C6  0E04               	movlw	4
 11337  0119C8  D024               	goto	L29
 11338  0119CA                     l16928:
 11339                           
 11340                           ;gemsecs.c: 231:   *m_link = LINK_STATE_ERROR;
 11341                           ;stkvar	_m_link @ sp[(-1)+-2]
 11342  0119CA  0EFD               	movlw	-3
 11343  0119CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11344  0119D2  0EFE               	movlw	-2
 11345  0119D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11346  0119DA  0E06               	movlw	6
 11347  0119DC  6EDF               	movwf	indf2,c
 11348                           
 11349                           ;gemsecs.c: 232:   while ((uart1RxCount)) {
 11350  0119DE  D002               	goto	l16932
 11351  0119E0                     l16930:
 11352                           
 11353                           ;gemsecs.c: 233:    UART1_Read();
 11354  0119E0  ECEA  F0B4         	call	_UART1_Read	;wreg free
 11355  0119E4                     l16932:
 11356                           
 11357                           ;gemsecs.c: 232:   while ((uart1RxCount)) {
 11358  0119E4  502B               	movf	_uart1RxCount,w,c	;volatile
 11359  0119E6  B4D8               	btfsc	status,2,c
 11360  0119E8  D003               	goto	l16936
 11361  0119EA  D7FA               	goto	l16930
 11362  0119EC                     l16934:
 11363                           
 11364                           ;gemsecs.c: 236:    UART2_Read();
 11365  0119EC  ECCC  F0B4         	call	_UART2_Read	;wreg free
 11366  0119F0                     l16936:
 11367                           
 11368                           ;gemsecs.c: 235:   while ((uart2RxCount)) {
 11369  0119F0  5025               	movf	_uart2RxCount,w,c	;volatile
 11370  0119F2  B4D8               	btfsc	status,2,c
 11371  0119F4  D035               	goto	l16946
 11372  0119F6  D7FA               	goto	l16934
 11373  0119F8                     l16938:
 11374                           
 11375                           ;gemsecs.c: 242:   V.failed_receive = 0;
 11376  0119F8  EE23  F01A         	lfsr	2,_V+332	;volatile
 11377  0119FC  0EF0               	movlw	-16
 11378  0119FE  16DF               	andwf	223,f,c
 11379  011A00                     l16940:
 11380                           
 11381                           ;gemsecs.c: 246:   *m_link = LINK_STATE_IDLE;
 11382                           ;stkvar	_m_link @ sp[(-1)+-2]
 11383  011A00  0EFD               	movlw	-3
 11384  011A02  006F FF8F FFD9     	movff	plusw1,fsr2l
 11385  011A08  0EFE               	movlw	-2
 11386  011A0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11387  011A10  0E00               	movlw	0
 11388  011A12                     L29:
 11389  011A12  6EDF               	movwf	indf2,c
 11390                           
 11391                           ;gemsecs.c: 247:   break;
 11392  011A14  D025               	goto	l16946
 11393  011A16                     l16944:
 11394                           
 11395                           ;stkvar	_m_link @ sp[(-1)+-2]
 11396  011A16  0EFD               	movlw	-3
 11397  011A18  006F FF8F FFD9     	movff	plusw1,fsr2l
 11398  011A1E  0EFE               	movlw	-2
 11399  011A20  006F FF8F FFDA     	movff	plusw1,fsr2h
 11400  011A26  50DF               	movf	indf2,w,c
 11401  011A28  6E42               	movwf	btemp+10,c
 11402  011A2A  6A43               	clrf	btemp+11,c
 11403                           
 11404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11405                           ; Switch size 1, requested type "simple"
 11406                           ; Number of cases is 1, Range of values is 0 to 0
 11407                           ; switch strategies available:
 11408                           ; Name         Instructions Cycles
 11409                           ; simple_byte            4     3 (average)
 11410                           ;	Chosen strategy is simple_byte
 11411  011A2C  5043               	movf	btemp+11,w,c
 11412  011A2E  0A00               	xorlw	0	; case 0
 11413  011A30  A4D8               	btfss	status,2,c
 11414  011A32  D7E6               	goto	l16940
 11415                           
 11416                           ; Switch size 1, requested type "simple"
 11417                           ; Number of cases is 7, Range of values is 0 to 6
 11418                           ; switch strategies available:
 11419                           ; Name         Instructions Cycles
 11420                           ; simple_byte           22    12 (average)
 11421                           ;	Chosen strategy is simple_byte
 11422  011A34  5042               	movf	btemp+10,w,c
 11423  011A36  0A00               	xorlw	0	; case 0
 11424  011A38  B4D8               	btfsc	status,2,c
 11425  011A3A  D4E7               	goto	l16720
 11426  011A3C  0A01               	xorlw	1	; case 1
 11427  011A3E  B4D8               	btfsc	status,2,c
 11428  011A40  D53E               	goto	l1797
 11429  011A42  0A03               	xorlw	3	; case 2
 11430  011A44  B4D8               	btfsc	status,2,c
 11431  011A46  D5BA               	goto	l16786
 11432  011A48  0A01               	xorlw	1	; case 3
 11433  011A4A  B4D8               	btfsc	status,2,c
 11434  011A4C  D764               	goto	l16908
 11435  011A4E  0A07               	xorlw	7	; case 4
 11436  011A50  B4D8               	btfsc	status,2,c
 11437  011A52  D7D2               	goto	l16938
 11438  011A54  0A01               	xorlw	1	; case 5
 11439  011A56  B4D8               	btfsc	status,2,c
 11440  011A58  D7B8               	goto	l16928
 11441  011A5A  0A03               	xorlw	3	; case 6
 11442  011A5C  A4D8               	btfss	status,2,c
 11443  011A5E  D7D0               	goto	l16940
 11444  011A60                     l16946:
 11445                           
 11446                           ;gemsecs.c: 250:  return *m_link;
 11447                           ;stkvar	_m_link @ sp[(-1)+-2]
 11448  011A60  0EFD               	movlw	-3
 11449  011A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11450  011A68  0EFE               	movlw	-2
 11451  011A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11452  011A70  50DF               	movf	indf2,w,c
 11453  011A72  6E38               	movwf	btemp,c
 11454                           
 11455                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 11456  011A74  52E5               	movf	postdec1,f,c
 11457  011A76  52E5               	movf	postdec1,f,c
 11458  011A78  52E5               	movf	postdec1,f,c
 11459  011A7A  0012               	return		;funcret
 11460  011A7C                     __end_of_m_protocol:
 11461                           	opt callstack 0
 11462                           
 11463 ;; *************** function _secs_gem_state *****************
 11464 ;; Defined at:
 11465 ;;		line 1198 in file "gemsecs.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  stream          1  [STACK] const unsigned char 
 11468 ;;  function        1  [STACK] const unsigned char 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1  [STACK] enum E16739
 11473 ;; Registers used:
 11474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/1
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11484 ;;Total ram usage:        0 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    4
 11487 ;; This function calls:
 11488 ;;		_StartTimer
 11489 ;;		_TimerDone
 11490 ;; This function is called by:
 11491 ;;		_m_protocol
 11492 ;;		_r_protocol
 11493 ;; This function uses a reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text20
 11497  014CC4                     __ptext20:
 11498                           	opt callstack 0
 11499  014CC4                     _secs_gem_state:
 11500                           	opt callstack 25
 11501                           
 11502                           ;gemsecs.c: 1198: GEM_STATES secs_gem_state(const uint8_t stream, const uint8_t function
      +                          );gemsecs.c: 1199: {;gemsecs.c: 1200:  static GEM_STATES block = GEM_STATE_DISABLE;;gems
      +                          ecs.c: 1201:  static GEM_EQUIP equipment = GEM_GENERIC;;gemsecs.c: 1203:  switch (stream
      +                          ) {
 11503                           
 11504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11505                           ;incstack = 0
 11506  014CC4  D093               	goto	l12994
 11507  014CC6                     l12922:
 11508                           
 11509                           ;gemsecs.c: 1210:    if (block != GEM_STATE_REMOTE)
 11510  014CC6  0E04               	movlw	4
 11511  014CC8  181F               	xorwf	secs_gem_state@block,w,c
 11512  014CCA  B4D8               	btfsc	status,2,c
 11513  014CCC  D00F               	goto	l12928
 11514                           
 11515                           ;gemsecs.c: 1211:     if (TimerDone(TMR_HBIO))
 11516  014CCE  0E06               	movlw	6
 11517  014CD0  6EE6               	movwf	postinc1,c
 11518  014CD2  ECF5  F0B7         	call	_TimerDone	;wreg free
 11519  014CD6  5038               	movf	btemp,w,c
 11520  014CD8  B4D8               	btfsc	status,2,c
 11521  014CDA  D008               	goto	l12928
 11522                           
 11523                           ;gemsecs.c: 1212:      StartTimer(TMR_HBIO, 30000);
 11524  014CDC  0E30               	movlw	48
 11525  014CDE  6EE6               	movwf	postinc1,c
 11526  014CE0  0E75               	movlw	117
 11527  014CE2  6EE6               	movwf	postinc1,c
 11528  014CE4  0E06               	movlw	6
 11529  014CE6  6EE6               	movwf	postinc1,c
 11530  014CE8  EC26  F0B5         	call	_StartTimer	;wreg free
 11531  014CEC                     l12928:
 11532                           
 11533                           ;gemsecs.c: 1214:    block = GEM_STATE_REMOTE;
 11534  014CEC  0E04               	movlw	4
 11535  014CEE                     L33:
 11536  014CEE  6E1F               	movwf	secs_gem_state@block,c
 11537                           
 11538                           ;gemsecs.c: 1215:    V.ticker = 0;
 11539  014CF0  0E00               	movlw	0
 11540  014CF2  D078               	goto	L32
 11541  014CF4                     l12932:
 11542                           
 11543                           ;gemsecs.c: 1223:      equipment = GEM_VII80;
 11544  014CF4  0E01               	movlw	1
 11545  014CF6  D011               	goto	L31
 11546  014CF8                     l2199:
 11547                           
 11548                           ;gemsecs.c: 1226:      equipment = GEM_GENERIC;
 11549  014CF8  6A1E               	clrf	secs_gem_state@equipment,c
 11550                           
 11551                           ;gemsecs.c: 1227:      break;
 11552  014CFA  D7F8               	goto	l12928
 11553  014CFC                     l12936:
 11554  014CFC  EE23  F021         	lfsr	2,_V+339	;volatile
 11555  014D00  50DF               	movf	indf2,w,c
 11556  014D02  6E42               	movwf	btemp+10,c
 11557  014D04  6A43               	clrf	btemp+11,c
 11558                           
 11559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11560                           ; Switch size 1, requested type "simple"
 11561                           ; Number of cases is 1, Range of values is 0 to 0
 11562                           ; switch strategies available:
 11563                           ; Name         Instructions Cycles
 11564                           ; simple_byte            4     3 (average)
 11565                           ;	Chosen strategy is simple_byte
 11566  014D06  5043               	movf	btemp+11,w,c
 11567  014D08  0A00               	xorlw	0	; case 0
 11568  014D0A  A4D8               	btfss	status,2,c
 11569  014D0C  D7F5               	goto	l2199
 11570                           
 11571                           ; Switch size 1, requested type "simple"
 11572                           ; Number of cases is 1, Range of values is 73 to 73
 11573                           ; switch strategies available:
 11574                           ; Name         Instructions Cycles
 11575                           ; simple_byte            4     3 (average)
 11576                           ;	Chosen strategy is simple_byte
 11577  014D0E  5042               	movf	btemp+10,w,c
 11578  014D10  0A49               	xorlw	73	; case 73
 11579  014D12  B4D8               	btfsc	status,2,c
 11580  014D14  D7EF               	goto	l12932
 11581  014D16  D7F0               	goto	l2199
 11582  014D18                     l12938:
 11583                           
 11584                           ;gemsecs.c: 1234:      equipment = GEM_E220;
 11585  014D18  0E02               	movlw	2
 11586  014D1A                     L31:
 11587  014D1A  6E1E               	movwf	secs_gem_state@equipment,c
 11588                           
 11589                           ;gemsecs.c: 1235:      break;
 11590  014D1C  D7E7               	goto	l12928
 11591  014D1E                     l12942:
 11592  014D1E  EE23  F021         	lfsr	2,_V+339	;volatile
 11593  014D22  50DF               	movf	indf2,w,c
 11594  014D24  6E42               	movwf	btemp+10,c
 11595  014D26  6A43               	clrf	btemp+11,c
 11596                           
 11597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11598                           ; Switch size 1, requested type "simple"
 11599                           ; Number of cases is 1, Range of values is 0 to 0
 11600                           ; switch strategies available:
 11601                           ; Name         Instructions Cycles
 11602                           ; simple_byte            4     3 (average)
 11603                           ;	Chosen strategy is simple_byte
 11604  014D28  5043               	movf	btemp+11,w,c
 11605  014D2A  0A00               	xorlw	0	; case 0
 11606  014D2C  A4D8               	btfss	status,2,c
 11607  014D2E  D7E4               	goto	l2199
 11608                           
 11609                           ; Switch size 1, requested type "simple"
 11610                           ; Number of cases is 2, Range of values is 50 to 53
 11611                           ; switch strategies available:
 11612                           ; Name         Instructions Cycles
 11613                           ; simple_byte            7     4 (average)
 11614                           ;	Chosen strategy is simple_byte
 11615  014D30  5042               	movf	btemp+10,w,c
 11616  014D32  0A32               	xorlw	50	; case 50
 11617  014D34  B4D8               	btfsc	status,2,c
 11618  014D36  D7F0               	goto	l12938
 11619  014D38  0A07               	xorlw	7	; case 53
 11620  014D3A  B4D8               	btfsc	status,2,c
 11621  014D3C  D7ED               	goto	l12938
 11622  014D3E  D7DC               	goto	l2199
 11623  014D40                     l12946:
 11624  014D40  EE23  F020         	lfsr	2,_V+338	;volatile
 11625  014D44  50DF               	movf	indf2,w,c
 11626  014D46  6E42               	movwf	btemp+10,c
 11627  014D48  6A43               	clrf	btemp+11,c
 11628                           
 11629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11630                           ; Switch size 1, requested type "simple"
 11631                           ; Number of cases is 1, Range of values is 0 to 0
 11632                           ; switch strategies available:
 11633                           ; Name         Instructions Cycles
 11634                           ; simple_byte            4     3 (average)
 11635                           ;	Chosen strategy is simple_byte
 11636  014D4A  5043               	movf	btemp+11,w,c
 11637  014D4C  0A00               	xorlw	0	; case 0
 11638  014D4E  A4D8               	btfss	status,2,c
 11639  014D50  D7D3               	goto	l2199
 11640                           
 11641                           ; Switch size 1, requested type "simple"
 11642                           ; Number of cases is 2, Range of values is 69 to 86
 11643                           ; switch strategies available:
 11644                           ; Name         Instructions Cycles
 11645                           ; simple_byte            7     4 (average)
 11646                           ;	Chosen strategy is simple_byte
 11647  014D52  5042               	movf	btemp+10,w,c
 11648  014D54  0A45               	xorlw	69	; case 69
 11649  014D56  B4D8               	btfsc	status,2,c
 11650  014D58  D7E2               	goto	l12942
 11651  014D5A  0A13               	xorlw	19	; case 86
 11652  014D5C  B4D8               	btfsc	status,2,c
 11653  014D5E  D7CE               	goto	l12936
 11654  014D60  D7CB               	goto	l2199
 11655  014D62                     l12952:
 11656                           
 11657                           ;gemsecs.c: 1249:    block = GEM_STATE_COMM;
 11658  014D62  0E01               	movlw	1
 11659  014D64  6E1F               	movwf	secs_gem_state@block,c
 11660  014D66                     l12954:
 11661                           
 11662                           ;gemsecs.c: 1250:    V.ticker = 15;
 11663  014D66  0E0F               	movlw	15
 11664  014D68  D03D               	goto	L32
 11665  014D6A                     l12956:
 11666                           
 11667                           ;gemsecs.c: 1256:    block = GEM_STATE_OFFLINE;
 11668  014D6A  0E02               	movlw	2
 11669  014D6C  D7C0               	goto	L33
 11670  014D6E                     l12960:
 11671                           
 11672                           ;gemsecs.c: 1263:    block = GEM_STATE_ONLINE;
 11673  014D6E  0E03               	movlw	3
 11674  014D70  D7BE               	goto	L33
 11675  014D72                     l12964:
 11676                           
 11677                           ;gemsecs.c: 1267:    if (block == GEM_STATE_DISABLE) {
 11678  014D72  501F               	movf	secs_gem_state@block,w,c
 11679  014D74  B4D8               	btfsc	status,2,c
 11680  014D76  D7F5               	goto	l12952
 11681  014D78  D04C               	goto	l12996
 11682  014D7A                     l12972:
 11683                           
 11684                           ;stkvar	_function @ sp[(0)+-2]
 11685  014D7A  0EFE               	movlw	-2
 11686  014D7C  50E3               	movf	plusw1,w,c
 11687  014D7E  6E42               	movwf	btemp+10,c
 11688  014D80  6A43               	clrf	btemp+11,c
 11689                           
 11690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11691                           ; Switch size 1, requested type "simple"
 11692                           ; Number of cases is 1, Range of values is 0 to 0
 11693                           ; switch strategies available:
 11694                           ; Name         Instructions Cycles
 11695                           ; simple_byte            4     3 (average)
 11696                           ;	Chosen strategy is simple_byte
 11697  014D82  5043               	movf	btemp+11,w,c
 11698  014D84  0A00               	xorlw	0	; case 0
 11699  014D86  A4D8               	btfss	status,2,c
 11700  014D88  D7F4               	goto	l12964
 11701                           
 11702                           ; Switch size 1, requested type "simple"
 11703                           ; Number of cases is 5, Range of values is 2 to 18
 11704                           ; switch strategies available:
 11705                           ; Name         Instructions Cycles
 11706                           ; simple_byte           16     9 (average)
 11707                           ;	Chosen strategy is simple_byte
 11708  014D8A  5042               	movf	btemp+10,w,c
 11709  014D8C  0A02               	xorlw	2	; case 2
 11710  014D8E  B4D8               	btfsc	status,2,c
 11711  014D90  D79A               	goto	l12922
 11712  014D92  0A0F               	xorlw	15	; case 13
 11713  014D94  B4D8               	btfsc	status,2,c
 11714  014D96  D7D4               	goto	l12946
 11715  014D98  0A03               	xorlw	3	; case 14
 11716  014D9A  B4D8               	btfsc	status,2,c
 11717  014D9C  D7E2               	goto	l12952
 11718  014D9E  0A1E               	xorlw	30	; case 16
 11719  014DA0  B4D8               	btfsc	status,2,c
 11720  014DA2  D7E3               	goto	l12956
 11721  014DA4  0A02               	xorlw	2	; case 18
 11722  014DA6  B4D8               	btfsc	status,2,c
 11723  014DA8  D7E2               	goto	l12960
 11724  014DAA  D7E3               	goto	l12964
 11725  014DAC                     l12974:
 11726                           
 11727                           ;gemsecs.c: 1277:    V.alarm = function;
 11728                           ;stkvar	_function @ sp[(0)+-2]
 11729  014DAC  0EFE               	movlw	-2
 11730  014DAE  006F FF8C  F043    	movff	plusw1,btemp+11
 11731  014DB4  0060  F10C  FC07   	movff	btemp+11,_V+313	;volatile
 11732                           
 11733                           ;gemsecs.c: 1278:    break;
 11734  014DBA  D02B               	goto	l12996
 11735  014DBC                     l12978:
 11736                           
 11737                           ;gemsecs.c: 1284:    V.alarm = function;
 11738                           ;stkvar	_function @ sp[(0)+-2]
 11739  014DBC  0EFE               	movlw	-2
 11740  014DBE  006F FF8C  F043    	movff	plusw1,btemp+11
 11741  014DC4  0060  F10C  FC07   	movff	btemp+11,_V+313	;volatile
 11742                           
 11743                           ;gemsecs.c: 1285:    if (V.ticker != 45)
 11744  014DCA  0063  F137  FFE8   	movff	_V+383,wreg	;volatile
 11745  014DD0  0A2D               	xorlw	45
 11746  014DD2  A4D8               	btfss	status,2,c
 11747  014DD4  D7C8               	goto	l12954
 11748  014DD6  D01D               	goto	l12996
 11749  014DD8                     l12986:
 11750                           
 11751                           ;gemsecs.c: 1291:   if (block == GEM_STATE_DISABLE) {
 11752  014DD8  501F               	movf	secs_gem_state@block,w,c
 11753  014DDA  A4D8               	btfss	status,2,c
 11754  014DDC  D01A               	goto	l12996
 11755                           
 11756                           ;gemsecs.c: 1292:    block = GEM_STATE_COMM;
 11757  014DDE  0E01               	movlw	1
 11758  014DE0  6E1F               	movwf	secs_gem_state@block,c
 11759                           
 11760                           ;gemsecs.c: 1293:    V.ticker = 45;
 11761  014DE2  0E2D               	movlw	45
 11762  014DE4                     L32:
 11763  014DE4  006F FFA0  FC4D    	movff	wreg,_V+383	;volatile
 11764  014DEA  D013               	goto	l12996
 11765  014DEC                     l12994:
 11766                           
 11767                           ;stkvar	_stream @ sp[(0)+-1]
 11768  014DEC  0EFF               	movlw	-1
 11769  014DEE  50E3               	movf	plusw1,w,c
 11770  014DF0  6E42               	movwf	btemp+10,c
 11771  014DF2  6A43               	clrf	btemp+11,c
 11772                           
 11773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11774                           ; Switch size 1, requested type "simple"
 11775                           ; Number of cases is 1, Range of values is 0 to 0
 11776                           ; switch strategies available:
 11777                           ; Name         Instructions Cycles
 11778                           ; simple_byte            4     3 (average)
 11779                           ;	Chosen strategy is simple_byte
 11780  014DF4  5043               	movf	btemp+11,w,c
 11781  014DF6  0A00               	xorlw	0	; case 0
 11782  014DF8  A4D8               	btfss	status,2,c
 11783  014DFA  D7EE               	goto	l12986
 11784                           
 11785                           ; Switch size 1, requested type "simple"
 11786                           ; Number of cases is 3, Range of values is 1 to 9
 11787                           ; switch strategies available:
 11788                           ; Name         Instructions Cycles
 11789                           ; simple_byte           10     6 (average)
 11790                           ;	Chosen strategy is simple_byte
 11791  014DFC  5042               	movf	btemp+10,w,c
 11792  014DFE  0A01               	xorlw	1	; case 1
 11793  014E00  B4D8               	btfsc	status,2,c
 11794  014E02  D7BB               	goto	l12972
 11795  014E04  0A04               	xorlw	4	; case 5
 11796  014E06  B4D8               	btfsc	status,2,c
 11797  014E08  D7D1               	goto	l12974
 11798  014E0A  0A0C               	xorlw	12	; case 9
 11799  014E0C  B4D8               	btfsc	status,2,c
 11800  014E0E  D7D6               	goto	l12978
 11801  014E10  D7E3               	goto	l12986
 11802  014E12                     l12996:
 11803                           
 11804                           ;gemsecs.c: 1298:  V.e_types = equipment;
 11805  014E12  EE22  F2D1         	lfsr	2,_V+3	;volatile
 11806  014E16  0060  F07B  FFDF   	movff	secs_gem_state@equipment,indf2
 11807                           
 11808                           ;gemsecs.c: 1299:  return(block);
 11809  014E1C  0060  F07C  F038   	movff	secs_gem_state@block,btemp
 11810                           
 11811                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 11812  014E22  52E5               	movf	postdec1,f,c
 11813  014E24  52E5               	movf	postdec1,f,c
 11814  014E26  0012               	return		;funcret
 11815  014E28                     __end_of_secs_gem_state:
 11816                           	opt callstack 0
 11817                           
 11818 ;; *************** function _secs_II_monitor_message *****************
 11819 ;; Defined at:
 11820 ;;		line 1127 in file "gemsecs.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  stream          1  [STACK] const unsigned char 
 11823 ;;  function        1  [STACK] const unsigned char 
 11824 ;;  dtime           2  [STACK] const unsigned short 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  msg_data        2  [STACK] PTR unsigned char 
 11827 ;;		 -> H254(257), 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1  [STACK] void 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/1
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11841 ;;Total ram usage:        0 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:   13
 11844 ;; This function calls:
 11845 ;;		_ee_logger
 11846 ;; This function is called by:
 11847 ;;		_m_protocol
 11848 ;;		_r_protocol
 11849 ;; This function uses a reentrant model
 11850 ;;
 11851                           
 11852                           	psect	text21
 11853  014E28                     __ptext21:
 11854                           	opt callstack 0
 11855  014E28                     _secs_II_monitor_message:
 11856                           	opt callstack 0
 11857                           
 11858                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11859  014E28  52E6               	movf	postinc1,f,c
 11860  014E2A  52E6               	movf	postinc1,f,c
 11861                           
 11862                           ;gemsecs.c: 1127: void secs_II_monitor_message(const uint8_t stream, const uint8_t funct
      +                          ion, const uint16_t dtime);gemsecs.c: 1128: {;gemsecs.c: 1129:  uint8_t * msg_data = (ui
      +                          nt8_t*) & H254[0];
 11863                           ;stkvar	_msg_data @ sp[(-2)+0]
 11864                           
 11865                           ;incstack = 0
 11866  014E2C  0E0C               	movlw	high _H254
 11867  014E2E  6E38               	movwf	btemp,c
 11868  014E30  0EFF               	movlw	-1
 11869  014E32  0060  F0E3  FFE3   	movff	btemp,plusw1
 11870  014E38  0E4E               	movlw	low _H254
 11871  014E3A  6E38               	movwf	btemp,c
 11872  014E3C  0EFE               	movlw	-2
 11873  014E3E  0060  F0E3  FFE3   	movff	btemp,plusw1
 11874                           
 11875                           ;gemsecs.c: 1130:  static uint8_t store1_1 = 1, store1_13 = 1, store6_11 = 1;;gemsecs.c:
      +                           1133:  ++V.ticks;
 11876  014E44  EE22  F3F5         	lfsr	2,_V+295	;volatile
 11877  014E48  2ADE               	incf	postinc2,f,c
 11878  014E4A  0E00               	movlw	0
 11879  014E4C  22DE               	addwfc	postinc2,f,c
 11880  014E4E  22DE               	addwfc	postinc2,f,c
 11881  014E50  22DE               	addwfc	postinc2,f,c
 11882                           
 11883                           ;gemsecs.c: 1134:  switch (stream) {
 11884  014E52  D07D               	goto	l16026
 11885  014E54                     l15988:
 11886                           
 11887                           ;gemsecs.c: 1138:    if (!store1_1)
 11888  014E54  505A               	movf	secs_II_monitor_message@store1_1,w,c
 11889  014E56  B4D8               	btfsc	status,2,c
 11890  014E58  D08C               	goto	l2179
 11891                           
 11892                           ;gemsecs.c: 1140:    store1_1 = 0;
 11893  014E5A  6A5A               	clrf	secs_II_monitor_message@store1_1,c
 11894  014E5C                     l15992:
 11895                           
 11896                           ;gemsecs.c: 1142:    ee_logger(stream, function, dtime, msg_data);
 11897                           ;stkvar	_msg_data @ sp[(-2)+0]
 11898  014E5C  0EFE               	movlw	-2
 11899  014E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 11900  014E64  006F FF8F FFE6     	movff	plusw1,postinc1
 11901                           
 11902                           ;stkvar	_dtime @ sp[(-4)+-4]
 11903  014E6A  0EF8               	movlw	-8
 11904  014E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  014E72  006F FF8F FFE6     	movff	plusw1,postinc1
 11906                           
 11907                           ;stkvar	_function @ sp[(-6)+-2]
 11908  014E78  0EF8               	movlw	-8
 11909  014E7A  50E3               	movf	plusw1,w,c
 11910  014E7C  6EE6               	movwf	postinc1,c
 11911                           
 11912                           ;stkvar	_stream @ sp[(-7)+-1]
 11913  014E7E  0EF8               	movlw	-8
 11914  014E80  50E3               	movf	plusw1,w,c
 11915  014E82  6EE6               	movwf	postinc1,c
 11916  014E84  ECE7  F0A8         	call	_ee_logger	;wreg free
 11917                           
 11918                           ;gemsecs.c: 1143:    break;
 11919  014E88  D074               	goto	l2179
 11920  014E8A                     l15994:
 11921                           
 11922                           ;gemsecs.c: 1145:    if (!store1_13)
 11923  014E8A  5059               	movf	secs_II_monitor_message@store1_13,w,c
 11924  014E8C  B4D8               	btfsc	status,2,c
 11925  014E8E  D071               	goto	l2179
 11926                           
 11927                           ;gemsecs.c: 1147:    store1_13 = 0;
 11928  014E90  6A59               	clrf	secs_II_monitor_message@store1_13,c
 11929  014E92  D7E4               	goto	l15992
 11930  014E94                     l16002:
 11931                           
 11932                           ;stkvar	_function @ sp[(-2)+-2]
 11933  014E94  0EFC               	movlw	-4
 11934  014E96  50E3               	movf	plusw1,w,c
 11935  014E98  6E42               	movwf	btemp+10,c
 11936  014E9A  6A43               	clrf	btemp+11,c
 11937                           
 11938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11939                           ; Switch size 1, requested type "simple"
 11940                           ; Number of cases is 1, Range of values is 0 to 0
 11941                           ; switch strategies available:
 11942                           ; Name         Instructions Cycles
 11943                           ; simple_byte            4     3 (average)
 11944                           ;	Chosen strategy is simple_byte
 11945  014E9C  5043               	movf	btemp+11,w,c
 11946  014E9E  0A00               	xorlw	0	; case 0
 11947  014EA0  A4D8               	btfss	status,2,c
 11948  014EA2  D067               	goto	l2179
 11949                           
 11950                           ; Switch size 1, requested type "simple"
 11951                           ; Number of cases is 2, Range of values is 1 to 13
 11952                           ; switch strategies available:
 11953                           ; Name         Instructions Cycles
 11954                           ; simple_byte            7     4 (average)
 11955                           ;	Chosen strategy is simple_byte
 11956  014EA4  5042               	movf	btemp+10,w,c
 11957  014EA6  0A01               	xorlw	1	; case 1
 11958  014EA8  B4D8               	btfsc	status,2,c
 11959  014EAA  D7D4               	goto	l15988
 11960  014EAC  0A0C               	xorlw	12	; case 13
 11961  014EAE  B4D8               	btfsc	status,2,c
 11962  014EB0  D7EC               	goto	l15994
 11963  014EB2  D05F               	goto	l2179
 11964  014EB4                     l16004:
 11965                           
 11966                           ;gemsecs.c: 1160:    ee_logger(stream, function, dtime, msg_data);
 11967                           ;stkvar	_msg_data @ sp[(-2)+0]
 11968  014EB4  0EFE               	movlw	-2
 11969  014EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11970  014EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11971                           
 11972                           ;stkvar	_dtime @ sp[(-4)+-4]
 11973  014EC2  0EF8               	movlw	-8
 11974  014EC4  006F FF8F FFE6     	movff	plusw1,postinc1
 11975  014ECA  006F FF8F FFE6     	movff	plusw1,postinc1
 11976                           
 11977                           ;stkvar	_function @ sp[(-6)+-2]
 11978  014ED0  0EF8               	movlw	-8
 11979  014ED2  50E3               	movf	plusw1,w,c
 11980  014ED4  6EE6               	movwf	postinc1,c
 11981                           
 11982                           ;stkvar	_stream @ sp[(-7)+-1]
 11983  014ED6  0EF8               	movlw	-8
 11984  014ED8  50E3               	movf	plusw1,w,c
 11985  014EDA  6EE6               	movwf	postinc1,c
 11986  014EDC  ECE7  F0A8         	call	_ee_logger	;wreg free
 11987                           
 11988                           ;gemsecs.c: 1161:    if (function == 42) {
 11989                           ;stkvar	_function @ sp[(-2)+-2]
 11990  014EE0  0EFC               	movlw	-4
 11991  014EE2  006F FF8C  F038    	movff	plusw1,btemp
 11992  014EE8  0E2A               	movlw	42
 11993  014EEA  1838               	xorwf	btemp,w,c
 11994  014EEC  A4D8               	btfss	status,2,c
 11995  014EEE  D022               	goto	l16022
 11996                           
 11997                           ;gemsecs.c: 1166:     V.msg_ret = 0;
 11998  014EF0  0E00               	movlw	0
 11999  014EF2  006F FFA0  FC06    	movff	wreg,_V+312	;volatile
 12000                           
 12001                           ;gemsecs.c: 1167:     V.msg_error = MSG_ERROR_NONE;
 12002  014EF8  0E00               	movlw	0
 12003  014EFA  006F FFA0  FC05    	movff	wreg,_V+311	;volatile
 12004                           
 12005                           ;gemsecs.c: 1168:     V.response.info = DIS_STR;
 12006  014F00  0E00               	movlw	0
 12007  014F02  006F FFA0  FC41    	movff	wreg,_V+371	;volatile
 12008  014F08  D015               	goto	l16022
 12009  014F0A                     l16012:
 12010                           
 12011                           ;stkvar	_function @ sp[(-2)+-2]
 12012  014F0A  0EFC               	movlw	-4
 12013  014F0C  50E3               	movf	plusw1,w,c
 12014  014F0E  6E42               	movwf	btemp+10,c
 12015  014F10  6A43               	clrf	btemp+11,c
 12016                           
 12017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12018                           ; Switch size 1, requested type "simple"
 12019                           ; Number of cases is 1, Range of values is 0 to 0
 12020                           ; switch strategies available:
 12021                           ; Name         Instructions Cycles
 12022                           ; simple_byte            4     3 (average)
 12023                           ;	Chosen strategy is simple_byte
 12024  014F12  5043               	movf	btemp+11,w,c
 12025  014F14  0A00               	xorlw	0	; case 0
 12026  014F16  A4D8               	btfss	status,2,c
 12027  014F18  D00D               	goto	l16022
 12028                           
 12029                           ; Switch size 1, requested type "simple"
 12030                           ; Number of cases is 2, Range of values is 41 to 42
 12031                           ; switch strategies available:
 12032                           ; Name         Instructions Cycles
 12033                           ; simple_byte            7     4 (average)
 12034                           ;	Chosen strategy is simple_byte
 12035  014F1A  5042               	movf	btemp+10,w,c
 12036  014F1C  0A29               	xorlw	41	; case 41
 12037  014F1E  B4D8               	btfsc	status,2,c
 12038  014F20  D7C9               	goto	l16004
 12039  014F22  0A03               	xorlw	3	; case 42
 12040  014F24  B4D8               	btfsc	status,2,c
 12041  014F26  D7C6               	goto	l16004
 12042                           
 12043                           ;gemsecs.c: 1176:   switch (function) {
 12044                           
 12045                           ;gemsecs.c: 1175:  case 6:
 12046  014F28  D005               	goto	l16022
 12047  014F2A                     l16014:
 12048                           
 12049                           ;gemsecs.c: 1178:    if (!store6_11)
 12050  014F2A  5058               	movf	secs_II_monitor_message@store6_11,w,c
 12051  014F2C  B4D8               	btfsc	status,2,c
 12052  014F2E  D021               	goto	l2179
 12053                           
 12054                           ;gemsecs.c: 1180:    store6_11 = 0;
 12055  014F30  6A58               	clrf	secs_II_monitor_message@store6_11,c
 12056  014F32  D794               	goto	l15992
 12057  014F34                     l16022:
 12058                           
 12059                           ;stkvar	_function @ sp[(-2)+-2]
 12060  014F34  0EFC               	movlw	-4
 12061  014F36  50E3               	movf	plusw1,w,c
 12062  014F38  6E42               	movwf	btemp+10,c
 12063  014F3A  6A43               	clrf	btemp+11,c
 12064                           
 12065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12066                           ; Switch size 1, requested type "simple"
 12067                           ; Number of cases is 1, Range of values is 0 to 0
 12068                           ; switch strategies available:
 12069                           ; Name         Instructions Cycles
 12070                           ; simple_byte            4     3 (average)
 12071                           ;	Chosen strategy is simple_byte
 12072  014F3C  5043               	movf	btemp+11,w,c
 12073  014F3E  0A00               	xorlw	0	; case 0
 12074  014F40  A4D8               	btfss	status,2,c
 12075  014F42  D017               	goto	l2179
 12076                           
 12077                           ; Switch size 1, requested type "simple"
 12078                           ; Number of cases is 1, Range of values is 11 to 11
 12079                           ; switch strategies available:
 12080                           ; Name         Instructions Cycles
 12081                           ; simple_byte            4     3 (average)
 12082                           ;	Chosen strategy is simple_byte
 12083  014F44  5042               	movf	btemp+10,w,c
 12084  014F46  0A0B               	xorlw	11	; case 11
 12085  014F48  B4D8               	btfsc	status,2,c
 12086  014F4A  D7EF               	goto	l16014
 12087  014F4C  D012               	goto	l2179
 12088  014F4E                     l16026:
 12089                           
 12090                           ;stkvar	_stream @ sp[(-2)+-1]
 12091  014F4E  0EFD               	movlw	-3
 12092  014F50  50E3               	movf	plusw1,w,c
 12093  014F52  6E42               	movwf	btemp+10,c
 12094  014F54  6A43               	clrf	btemp+11,c
 12095                           
 12096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12097                           ; Switch size 1, requested type "simple"
 12098                           ; Number of cases is 1, Range of values is 0 to 0
 12099                           ; switch strategies available:
 12100                           ; Name         Instructions Cycles
 12101                           ; simple_byte            4     3 (average)
 12102                           ;	Chosen strategy is simple_byte
 12103  014F56  5043               	movf	btemp+11,w,c
 12104  014F58  0A00               	xorlw	0	; case 0
 12105  014F5A  A4D8               	btfss	status,2,c
 12106  014F5C  D00A               	goto	l2179
 12107                           
 12108                           ; Switch size 1, requested type "simple"
 12109                           ; Number of cases is 3, Range of values is 1 to 6
 12110                           ; switch strategies available:
 12111                           ; Name         Instructions Cycles
 12112                           ; simple_byte           10     6 (average)
 12113                           ;	Chosen strategy is simple_byte
 12114  014F5E  5042               	movf	btemp+10,w,c
 12115  014F60  0A01               	xorlw	1	; case 1
 12116  014F62  B4D8               	btfsc	status,2,c
 12117  014F64  D797               	goto	l16002
 12118  014F66  0A03               	xorlw	3	; case 2
 12119  014F68  B4D8               	btfsc	status,2,c
 12120  014F6A  D7CF               	goto	l16012
 12121  014F6C  0A04               	xorlw	4	; case 6
 12122  014F6E  B4D8               	btfsc	status,2,c
 12123  014F70  D7E1               	goto	l16022
 12124  014F72                     l2179:
 12125                           
 12126                           ; _secs_II_monitor_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12127  014F72  0EFA               	movlw	250
 12128  014F74  26E1               	addwf	fsr1l,f,c
 12129  014F76  0EFF               	movlw	255
 12130  014F78  22E2               	addwfc	fsr1h,f,c
 12131  014F7A  0012               	return		;funcret
 12132  014F7C                     __end_of_secs_II_monitor_message:
 12133                           	opt callstack 0
 12134                           
 12135 ;; *************** function _ee_logger *****************
 12136 ;; Defined at:
 12137 ;;		line 1107 in file "gemsecs.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;  stream          1  [STACK] const unsigned char 
 12140 ;;  function        1  [STACK] const unsigned char 
 12141 ;;  dtime           2  [STACK] const unsigned short 
 12142 ;;  msg_data        2  [STACK] PTR unsigned char 
 12143 ;;		 -> H254(257), 
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  i               2  [STACK] unsigned short 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1  [STACK] void 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/1
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;Total ram usage:        0 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:   12
 12162 ;; This function calls:
 12163 ;;		_DATAEE_WriteByte
 12164 ;;		_StartTimer
 12165 ;;		_sprintf
 12166 ;; This function is called by:
 12167 ;;		_secs_II_monitor_message
 12168 ;; This function uses a reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text22
 12172  0151CE                     __ptext22:
 12173                           	opt callstack 0
 12174  0151CE                     _ee_logger:
 12175                           	opt callstack 0
 12176                           
 12177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12178  0151CE  52E6               	movf	postinc1,f,c
 12179  0151D0  52E6               	movf	postinc1,f,c
 12180                           
 12181                           ;gemsecs.c: 1107: static void ee_logger(const uint8_t stream, const uint8_t function, co
      +                          nst uint16_t dtime, uint8_t *msg_data);gemsecs.c: 1108: {;gemsecs.c: 1109:  uint16_t i =
      +                           0;
 12182                           ;stkvar	_i @ sp[(-2)+0]
 12183                           
 12184                           ;incstack = 0
 12185  0151D2  0EFE               	movlw	-2
 12186  0151D4  6AE3               	clrf	plusw1,c
 12187  0151D6  0EFF               	movlw	-1
 12188  0151D8  6AE3               	clrf	plusw1,c
 12189  0151DA                     l15942:
 12190                           
 12191                           ;gemsecs.c: 1112:   DATAEE_WriteByte(i + ((V.response.log_seq & 0x03) << 8), msg_data[25
      +                          4 + 2 - i]);
 12192                           ;stkvar	_i @ sp[(-2)+0]
 12193                           ;stkvar	_msg_data @ sp[(-2)+-6]
 12194  0151DA  0EF8               	movlw	-8
 12195  0151DC  006F FF8C  F042    	movff	plusw1,btemp+10
 12196  0151E2  0EF9               	movlw	-7
 12197  0151E4  006F FF8C  F043    	movff	plusw1,btemp+11
 12198  0151EA  0EFE               	movlw	-2
 12199  0151EC  50E3               	movf	plusw1,w,c
 12200  0151EE  5E42               	subwf	btemp+10,f,c
 12201  0151F0  0EFF               	movlw	-1
 12202  0151F2  50E3               	movf	plusw1,w,c
 12203  0151F4  5A43               	subwfb	btemp+11,f,c
 12204  0151F6  0E00               	movlw	0
 12205  0151F8  2442               	addwf	btemp+10,w,c
 12206  0151FA  6ED9               	movwf	fsr2l,c
 12207  0151FC  0E01               	movlw	1
 12208  0151FE  2043               	addwfc	btemp+11,w,c
 12209  015200  6EDA               	movwf	fsr2h,c
 12210  015202  50DF               	movf	indf2,w,c
 12211  015204  6EE6               	movwf	postinc1,c
 12212                           
 12213                           ;stkvar	_i @ sp[(-3)+0]
 12214                           ; multi bank
 12215  015206  010C               	movlb	(_V+370) shr (0+8)	;volatile
 12216  015208  5140               	movf	(_V+370)& (0+255),w,b	;volatile
 12217  01520A  0B03               	andlw	3
 12218  01520C  6E43               	movwf	btemp+11,c
 12219  01520E  6A42               	clrf	btemp+10,c
 12220  015210  0EFD               	movlw	-3
 12221  015212  50E3               	movf	plusw1,w,c
 12222  015214  2642               	addwf	btemp+10,f,c
 12223  015216  0EFE               	movlw	-2
 12224  015218  50E3               	movf	plusw1,w,c
 12225  01521A  2243               	addwfc	btemp+11,f,c
 12226  01521C  0060  F10B  FFE6   	movff	btemp+10,postinc1
 12227  015222  0060  F10F  FFE6   	movff	btemp+11,postinc1
 12228  015228  EC81  F0B1         	call	_DATAEE_WriteByte	;wreg free
 12229                           
 12230                           ;gemsecs.c: 1113:  } while (++i <= 255);
 12231                           ;stkvar	_i @ sp[(-2)+0]
 12232  01522C  0EFE               	movlw	-2
 12233  01522E  50E3               	movf	plusw1,w,c
 12234  015230  0F01               	addlw	1
 12235  015232  6E38               	movwf	btemp,c
 12236  015234  0EFE               	movlw	-2
 12237  015236  0060  F0E3  FFE3   	movff	btemp,plusw1
 12238  01523C  6A38               	clrf	btemp,c
 12239  01523E  0EFF               	movlw	-1
 12240  015240  50E3               	movf	plusw1,w,c
 12241  015242  2038               	addwfc	btemp,w,c
 12242  015244  6E38               	movwf	btemp,c
 12243  015246  0EFF               	movlw	-1
 12244  015248  0060  F0E3  FFE3   	movff	btemp,plusw1
 12245  01524E  0EFF               	movlw	-1
 12246  015250  04E3               	decf	plusw1,w,c
 12247  015252  A0D8               	btfss	status,0,c
 12248  015254  D7C2               	goto	l15942
 12249                           
 12250                           ;gemsecs.c: 1115:  sprintf(V.info, "Saved S%dF%d %d     ", stream, function, V.response.
      +                          log_num);
 12251  015256  EE23  F047         	lfsr	2,_V+377	;volatile
 12252  01525A  006F FF78  F042    	movff	postinc2,btemp+10
 12253  015260  006F FF74  F043    	movff	postdec2,btemp+11
 12254  015266  0060  F10B  FFE6   	movff	btemp+10,postinc1
 12255  01526C  0060  F10F  FFE6   	movff	btemp+11,postinc1
 12256                           
 12257                           ;stkvar	_function @ sp[(-4)+-2]
 12258  015272  0EFA               	movlw	-6
 12259  015274  50E3               	movf	plusw1,w,c
 12260  015276  6EE6               	movwf	postinc1,c
 12261  015278  0E00               	movlw	0
 12262  01527A  6EE6               	movwf	postinc1,c
 12263                           
 12264                           ;stkvar	_stream @ sp[(-6)+-1]
 12265  01527C  0EF9               	movlw	-7
 12266  01527E  50E3               	movf	plusw1,w,c
 12267  015280  6EE6               	movwf	postinc1,c
 12268  015282  0E00               	movlw	0
 12269  015284  6EE6               	movwf	postinc1,c
 12270  015286  0E02               	movlw	low STR_34
 12271  015288  6EE6               	movwf	postinc1,c
 12272  01528A  0EFE               	movlw	high STR_34
 12273  01528C  6EE6               	movwf	postinc1,c
 12274  01528E  0EB5               	movlw	low (_V+231)
 12275  015290  6EE6               	movwf	postinc1,c
 12276  015292  0E0B               	movlw	high (_V+231)
 12277  015294  6EE6               	movwf	postinc1,c
 12278  015296  0E0A               	movlw	10
 12279  015298  6EE6               	movwf	postinc1,c
 12280  01529A  EC13  F0AB         	call	_sprintf	;wreg free
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;gemsecs.c: 1116:  StartTimer(TMR_INFO, dtime);
 12284                           ;stkvar	_dtime @ sp[(-2)+-4]
 12285  01529E  0EFA               	movlw	-6
 12286  0152A0  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  0152A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12288  0152AC  0E07               	movlw	7
 12289  0152AE  6EE6               	movwf	postinc1,c
 12290  0152B0  EC26  F0B5         	call	_StartTimer	;wreg free
 12291                           
 12292                           ;gemsecs.c: 1117:  V.response.info = DIS_LOG;
 12293  0152B4  0E02               	movlw	2
 12294  0152B6  006F FFA0  FC41    	movff	wreg,_V+371	;volatile
 12295                           
 12296                           ;gemsecs.c: 1118:  V.response.log_num++;
 12297  0152BC  EE23  F047         	lfsr	2,_V+377	;volatile
 12298  0152C0  2ADE               	incf	postinc2,f,c
 12299  0152C2  0E00               	movlw	0
 12300  0152C4  22DD               	addwfc	postdec2,f,c
 12301                           
 12302                           ;gemsecs.c: 1119:  V.response.log_seq++;
 12303  0152C6  0063  F103  FFE8   	movff	_V+370,wreg	;volatile
 12304  0152CC  0F01               	addlw	1
 12305  0152CE  006F FFA0  FC40    	movff	wreg,_V+370	;volatile
 12306                           
 12307                           ;gemsecs.c: 1120:  if (V.response.log_seq >= 3)
 12308  0152D4  EE23  F040         	lfsr	2,_V+370	;volatile
 12309  0152D8  0E02               	movlw	2
 12310  0152DA  64DF               	cpfsgt	indf2,c
 12311  0152DC  D004               	goto	l2146
 12312                           
 12313                           ;gemsecs.c: 1121:   V.response.log_seq = 0;
 12314  0152DE  0E00               	movlw	0
 12315  0152E0  006F FFA0  FC40    	movff	wreg,_V+370	;volatile
 12316  0152E6                     l2146:
 12317                           
 12318                           ; _ee_logger: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 12319  0152E6  0EF8               	movlw	248
 12320  0152E8  26E1               	addwf	fsr1l,f,c
 12321  0152EA  0EFF               	movlw	255
 12322  0152EC  22E2               	addwfc	fsr1h,f,c
 12323  0152EE  0012               	return		;funcret
 12324  0152F0                     __end_of_ee_logger:
 12325                           	opt callstack 0
 12326                           
 12327 ;; *************** function _DATAEE_WriteByte *****************
 12328 ;; Defined at:
 12329 ;;		line 172 in file "mcc_generated_files/memory.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;  bAdd            2  [STACK] unsigned short 
 12332 ;;  bData           1  [STACK] unsigned char 
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;  GIEBitValue     1  [STACK] unsigned char 
 12335 ;; Return value:  Size  Location     Type
 12336 ;;                  1  [STACK] void 
 12337 ;; Registers used:
 12338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/3C
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12348 ;;Total ram usage:        0 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; Hardware stack levels required when called:    3
 12351 ;; This function calls:
 12352 ;;		Nothing
 12353 ;; This function is called by:
 12354 ;;		_secs_II_message
 12355 ;;		_ee_logger
 12356 ;; This function uses a reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text23
 12360  016302                     __ptext23:
 12361                           	opt callstack 0
 12362  016302                     _DATAEE_WriteByte:
 12363                           	opt callstack 0
 12364                           
 12365                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12366  016302  52E6               	movf	postinc1,f,c
 12367                           
 12368                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12369                           
 12370                           ;incstack = 0
 12371  016304  AED2               	btfss	16338,7,c	;volatile
 12372  016306  D003               	goto	u8200
 12373  016308  6A43               	clrf	btemp+11,c
 12374  01630A  2A43               	incf	btemp+11,f,c
 12375  01630C  D001               	goto	u8208
 12376  01630E                     u8200:
 12377  01630E  6A43               	clrf	btemp+11,c
 12378  016310                     u8208:
 12379                           
 12380                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12381  016310  0EFF               	movlw	-1
 12382  016312  0060  F10F  FFE3   	movff	btemp+11,plusw1
 12383                           
 12384                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12385                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12386  016318  0EFE               	movlw	254
 12387  01631A  24E1               	addwf	fsr1l,w,c
 12388  01631C  6ED9               	movwf	fsr2l,c
 12389  01631E  0EFF               	movlw	255
 12390  016320  20E2               	addwfc	fsr1h,w,c
 12391  016322  6EDA               	movwf	fsr2h,c
 12392  016324  50DF               	movf	indf2,w,c
 12393  016326  0B03               	andlw	3
 12394  016328  0139               	movlb	57	; () banked
 12395  01632A  6FE1               	movwf	225,b	;volatile
 12396                           
 12397                           ; BSR set to: 57
 12398                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12399                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12400  01632C  0EFD               	movlw	-3
 12401  01632E  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 12402                           
 12403                           ; BSR set to: 57
 12404                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12405                           ;stkvar	_bData @ sp[(-1)+-3]
 12406  016334  0EFC               	movlw	-4
 12407  016336  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 12408                           
 12409                           ; BSR set to: 57
 12410                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12411  01633C  0E3F               	movlw	-193
 12412  01633E  17E5               	andwf	229,f,b	;volsfr
 12413                           
 12414                           ; BSR set to: 57
 12415                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12416  016340  85E5               	bsf	229,2,b	;volsfr
 12417                           
 12418                           ; BSR set to: 57
 12419                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12420  016342  9ED2               	bcf	16338,7,c	;volatile
 12421                           
 12422                           ; BSR set to: 57
 12423                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12424  016344  0E55               	movlw	85
 12425  016346  6FE6               	movwf	230,b	;volsfr
 12426                           
 12427                           ; BSR set to: 57
 12428                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12429  016348  0EAA               	movlw	170
 12430  01634A  6FE6               	movwf	230,b	;volsfr
 12431                           
 12432                           ; BSR set to: 57
 12433                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12434  01634C  83E5               	bsf	229,1,b	;volsfr
 12435  01634E                     l1080:
 12436                           
 12437                           ; BSR set to: 57
 12438                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12439  01634E  B3E5               	btfsc	229,1,b	;volsfr
 12440  016350  D7FE               	goto	l1080
 12441                           
 12442                           ; BSR set to: 57
 12443                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12444  016352  95E5               	bcf	229,2,b	;volsfr
 12445                           
 12446                           ; BSR set to: 57
 12447                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12448                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12449  016354  0EFF               	movlw	-1
 12450  016356  B0E3               	btfsc	plusw1,0,c
 12451  016358  D002               	bra	u8225
 12452  01635A  9ED2               	bcf	16338,7,c	;volatile
 12453  01635C  D001               	bra	u8226
 12454  01635E                     u8225:
 12455  01635E  8ED2               	bsf	16338,7,c	;volatile
 12456  016360                     u8226:
 12457                           
 12458                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12459  016360  52E5               	movf	postdec1,f,c
 12460  016362  52E5               	movf	postdec1,f,c
 12461  016364  52E5               	movf	postdec1,f,c
 12462  016366  52E5               	movf	postdec1,f,c
 12463  016368  0012               	return		;funcret
 12464  01636A                     __end_of_DATAEE_WriteByte:
 12465                           	opt callstack 0
 12466                           
 12467 ;; *************** function _run_checksum *****************
 12468 ;; Defined at:
 12469 ;;		line 42 in file "gemsecs.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  byte_block      1  [STACK] const unsigned char 
 12472 ;;  clear           1  [STACK] const _Bool 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  2  [STACK] unsigned short 
 12477 ;; Registers used:
 12478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 12479 ;; Tracked objects:
 12480 ;;		On entry : 6/39
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;Total ram usage:        0 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    3
 12491 ;; This function calls:
 12492 ;;		Nothing
 12493 ;; This function is called by:
 12494 ;;		_m_protocol
 12495 ;;		_r_protocol
 12496 ;; This function uses a reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text24
 12500  016CF4                     __ptext24:
 12501                           	opt callstack 0
 12502  016CF4                     _run_checksum:
 12503                           	opt callstack 26
 12504                           
 12505                           ;gemsecs.c: 42: uint16_t run_checksum(const uint8_t byte_block, const _Bool clear);gemse
      +                          cs.c: 43: {;gemsecs.c: 44:  static uint16_t sum = 0;;gemsecs.c: 46:  if (clear)
 12506                           ;stkvar	_clear @ sp[(0)+-2]
 12507                           
 12508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12509                           ;incstack = 0
 12510  016CF4  0EFE               	movlw	-2
 12511  016CF6  50E3               	movf	plusw1,w,c
 12512  016CF8  B4D8               	btfsc	status,2,c
 12513  016CFA  D002               	goto	l9020
 12514                           
 12515                           ;gemsecs.c: 47:   sum = 0;
 12516  016CFC  6A18               	clrf	run_checksum@sum,c
 12517  016CFE  6A19               	clrf	run_checksum@sum+1,c
 12518  016D00                     l9020:
 12519                           
 12520                           ;gemsecs.c: 49:  sum += byte_block;
 12521                           ;stkvar	_byte_block @ sp[(0)+-1]
 12522  016D00  0EFF               	movlw	-1
 12523  016D02  50E3               	movf	plusw1,w,c
 12524  016D04  2618               	addwf	run_checksum@sum,f,c
 12525  016D06  0E00               	movlw	0
 12526  016D08  2219               	addwfc	run_checksum@sum+1,f,c
 12527                           
 12528                           ;gemsecs.c: 50:  return sum;
 12529  016D0A  0060  F060  F038   	movff	run_checksum@sum,btemp
 12530  016D10  0060  F064  F039   	movff	run_checksum@sum+1,btemp+1
 12531                           
 12532                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 12533  016D16  52E5               	movf	postdec1,f,c
 12534  016D18  52E5               	movf	postdec1,f,c
 12535  016D1A  0012               	return		;funcret
 12536  016D1C                     __end_of_run_checksum:
 12537                           	opt callstack 0
 12538                           
 12539 ;; *************** function _UART2_is_rx_ready *****************
 12540 ;; Defined at:
 12541 ;;		line 137 in file "mcc_generated_files/uart2.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1  [STACK] unsigned char 
 12548 ;; Registers used:
 12549 ;;		btemp
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/3C
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12559 ;;Total ram usage:        0 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    3
 12562 ;; This function calls:
 12563 ;;		Nothing
 12564 ;; This function is called by:
 12565 ;;		_m_protocol
 12566 ;; This function uses a reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text25
 12570  01734A                     __ptext25:
 12571                           	opt callstack 0
 12572  01734A                     _UART2_is_rx_ready:
 12573                           	opt callstack 26
 12574                           
 12575                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
 12576                           
 12577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12578                           ;incstack = 0
 12579  01734A  0060  F094  F038   	movff	_uart2RxCount,btemp	;volatile
 12580                           
 12581                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12582  017350  0012               	return		;funcret
 12583  017352                     __end_of_UART2_is_rx_ready:
 12584                           	opt callstack 0
 12585                           
 12586 ;; *************** function _UART2_Read *****************
 12587 ;; Defined at:
 12588 ;;		line 152 in file "mcc_generated_files/uart2.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;  readValue       1  [STACK] unsigned char 
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1  [STACK] unsigned char 
 12595 ;; Registers used:
 12596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/3C
 12599 ;;		On exit  : 3F/39
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:    3
 12609 ;; This function calls:
 12610 ;;		Nothing
 12611 ;; This function is called by:
 12612 ;;		_m_protocol
 12613 ;; This function uses a reentrant model
 12614 ;;
 12615                           
 12616                           	psect	text26
 12617  016998                     __ptext26:
 12618                           	opt callstack 0
 12619  016998                     _UART2_Read:
 12620                           	opt callstack 0
 12621                           
 12622                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12623  016998  52E6               	movf	postinc1,f,c
 12624  01699A                     
 12625                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 12626                           
 12627                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 12628  01699A  5025               	movf	_uart2RxCount,w,c	;volatile
 12629  01699C  B4D8               	btfsc	status,2,c
 12630  01699E  D7FD               	goto	l8936
 12631                           
 12632                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
 12633  0169A0  0E00               	movlw	low _uart2RxBuffer
 12634  0169A2  2426               	addwf	_uart2RxTail,w,c	;volatile
 12635  0169A4  6ED9               	movwf	fsr2l,c
 12636  0169A6  6ADA               	clrf	fsr2h,c
 12637  0169A8  0E05               	movlw	high _uart2RxBuffer
 12638  0169AA  22DA               	addwfc	fsr2h,f,c
 12639  0169AC  50DF               	movf	indf2,w,c
 12640  0169AE  6E43               	movwf	btemp+11,c
 12641                           
 12642                           ;stkvar	_readValue @ sp[(-1)+0]
 12643  0169B0  0EFF               	movlw	-1
 12644  0169B2  0060  F10F  FFE3   	movff	btemp+11,plusw1
 12645  0169B8  2A26               	incf	_uart2RxTail,f,c	;volatile
 12646                           
 12647                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 12648  0169BA  2826               	incf	_uart2RxTail,w,c
 12649  0169BC  B4D8               	btfsc	status,2,c
 12650                           
 12651                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
 12652  0169BE  6A26               	clrf	_uart2RxTail,c	;volatile
 12653                           
 12654                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
 12655                           
 12656                           ;mcc_generated_files/uart2.c: 164:     }
 12657  0169C0  0139               	movlb	57	; () banked
 12658  0169C2  9596               	bcf	150,2,b	;volatile
 12659                           
 12660                           ; BSR set to: 57
 12661                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
 12662  0169C4  0625               	decf	_uart2RxCount,f,c	;volatile
 12663                           
 12664                           ; BSR set to: 57
 12665                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
 12666  0169C6  8596               	bsf	150,2,b	;volatile
 12667                           
 12668                           ; BSR set to: 57
 12669                           ;mcc_generated_files/uart2.c: 169:     return readValue;
 12670                           ;stkvar	_readValue @ sp[(-1)+0]
 12671  0169C8  0EFF               	movlw	-1
 12672  0169CA  006F FF8C  F038    	movff	plusw1,btemp
 12673                           
 12674                           ; BSR set to: 57
 12675                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12676  0169D0  52E5               	movf	postdec1,f,c
 12677  0169D2  0012               	return		;funcret
 12678  0169D4                     __end_of_UART2_Read:
 12679                           	opt callstack 0
 12680                           
 12681 ;; *************** function _UART1_is_rx_ready *****************
 12682 ;; Defined at:
 12683 ;;		line 147 in file "mcc_generated_files/uart1.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;		None
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;		None
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1  [STACK] unsigned char 
 12690 ;; Registers used:
 12691 ;;		btemp
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/3C
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;Total ram usage:        0 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:    3
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		_m_protocol
 12708 ;;		_r_protocol
 12709 ;;		_t_protocol
 12710 ;; This function uses a reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text27
 12714  017352                     __ptext27:
 12715                           	opt callstack 0
 12716  017352                     _UART1_is_rx_ready:
 12717                           	opt callstack 26
 12718                           
 12719                           ;mcc_generated_files/uart1.c: 149:  return uart1RxCount;
 12720                           
 12721                           ; BSR set to: 57
 12722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12723                           ;incstack = 0
 12724  017352  0060  F0AC  F038   	movff	_uart1RxCount,btemp	;volatile
 12725                           
 12726                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12727  017358  0012               	return		;funcret
 12728  01735A                     __end_of_UART1_is_rx_ready:
 12729                           	opt callstack 0
 12730                           
 12731 ;; *************** function _UART1_Read *****************
 12732 ;; Defined at:
 12733 ;;		line 162 in file "mcc_generated_files/uart1.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;  readValue       1  [STACK] unsigned char 
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  1  [STACK] unsigned char 
 12740 ;; Registers used:
 12741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 12742 ;; Tracked objects:
 12743 ;;		On entry : 0/3C
 12744 ;;		On exit  : 3F/39
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12751 ;;Total ram usage:        0 bytes
 12752 ;; Hardware stack levels used:    1
 12753 ;; Hardware stack levels required when called:    3
 12754 ;; This function calls:
 12755 ;;		Nothing
 12756 ;; This function is called by:
 12757 ;;		_m_protocol
 12758 ;;		_r_protocol
 12759 ;;		_t_protocol
 12760 ;; This function uses a reentrant model
 12761 ;;
 12762                           
 12763                           	psect	text28
 12764  0169D4                     __ptext28:
 12765                           	opt callstack 0
 12766  0169D4                     _UART1_Read:
 12767                           	opt callstack 0
 12768                           
 12769                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12770  0169D4  52E6               	movf	postinc1,f,c
 12771  0169D6                     
 12772                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 12773                           
 12774                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 12775  0169D6  502B               	movf	_uart1RxCount,w,c	;volatile
 12776  0169D8  B4D8               	btfsc	status,2,c
 12777  0169DA  D7FD               	goto	l8912
 12778                           
 12779                           ;mcc_generated_files/uart1.c: 169:  readValue = uart1RxBuffer[uart1RxTail++];
 12780  0169DC  0E00               	movlw	low _uart1RxBuffer
 12781  0169DE  242C               	addwf	_uart1RxTail,w,c	;volatile
 12782  0169E0  6ED9               	movwf	fsr2l,c
 12783  0169E2  6ADA               	clrf	fsr2h,c
 12784  0169E4  0E04               	movlw	high _uart1RxBuffer
 12785  0169E6  22DA               	addwfc	fsr2h,f,c
 12786  0169E8  50DF               	movf	indf2,w,c
 12787  0169EA  6E43               	movwf	btemp+11,c
 12788                           
 12789                           ;stkvar	_readValue @ sp[(-1)+0]
 12790  0169EC  0EFF               	movlw	-1
 12791  0169EE  0060  F10F  FFE3   	movff	btemp+11,plusw1
 12792  0169F4  2A2C               	incf	_uart1RxTail,f,c	;volatile
 12793                           
 12794                           ;mcc_generated_files/uart1.c: 170:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
 12795  0169F6  282C               	incf	_uart1RxTail,w,c
 12796  0169F8  B4D8               	btfsc	status,2,c
 12797                           
 12798                           ;mcc_generated_files/uart1.c: 171:   uart1RxTail = 0;
 12799  0169FA  6A2C               	clrf	_uart1RxTail,c	;volatile
 12800                           
 12801                           ;mcc_generated_files/uart1.c: 173:  PIE3bits.U1RXIE = 0;
 12802                           
 12803                           ;mcc_generated_files/uart1.c: 172:  }
 12804  0169FC  0139               	movlb	57	; () banked
 12805  0169FE  9793               	bcf	147,3,b	;volatile
 12806                           
 12807                           ; BSR set to: 57
 12808                           ;mcc_generated_files/uart1.c: 174:  uart1RxCount--;
 12809  016A00  062B               	decf	_uart1RxCount,f,c	;volatile
 12810                           
 12811                           ; BSR set to: 57
 12812                           ;mcc_generated_files/uart1.c: 175:  PIE3bits.U1RXIE = 1;
 12813  016A02  8793               	bsf	147,3,b	;volatile
 12814                           
 12815                           ; BSR set to: 57
 12816                           ;mcc_generated_files/uart1.c: 177:  return readValue;
 12817                           ;stkvar	_readValue @ sp[(-1)+0]
 12818  016A04  0EFF               	movlw	-1
 12819  016A06  006F FF8C  F038    	movff	plusw1,btemp
 12820                           
 12821                           ; BSR set to: 57
 12822                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12823  016A0C  52E5               	movf	postdec1,f,c
 12824  016A0E  0012               	return		;funcret
 12825  016A10                     __end_of_UART1_Read:
 12826                           	opt callstack 0
 12827                           
 12828 ;; *************** function _init_display *****************
 12829 ;; Defined at:
 12830 ;;		line 37 in file "eadog.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;		None
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;		None
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  1  [STACK] void 
 12837 ;; Registers used:
 12838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/3C
 12841 ;;		On exit  : 3F/3D
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;Total ram usage:        0 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    5
 12851 ;; This function calls:
 12852 ;;		_ringBufS_init
 12853 ;;		_send_lcd_cmd
 12854 ;;		_send_lcd_cmd_long
 12855 ;;		_wdtdelay
 12856 ;; This function is called by:
 12857 ;;		_main
 12858 ;; This function uses a reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text29
 12862  015926                     __ptext29:
 12863                           	opt callstack 0
 12864  015926                     _init_display:
 12865                           	opt callstack 25
 12866                           
 12867                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
 12868                           
 12869                           ; BSR set to: 57
 12870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12871                           ;incstack = 0
 12872  015926  0E80               	movlw	low _ring_buf1
 12873  015928  0100               	movlb	0	; () banked
 12874  01592A  6F8B               	movwf	(_spi_link+6)& (0+255),b	;volatile
 12875  01592C  0E02               	movlw	high _ring_buf1
 12876  01592E  6F8C               	movwf	(_spi_link+7)& (0+255),b	;volatile
 12877                           
 12878                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
 12879  015930  0E70               	movlw	low _ring_buf2
 12880  015932  6F89               	movwf	(_spi_link+4)& (0+255),b	;volatile
 12881  015934  0E03               	movlw	high _ring_buf2
 12882  015936  6F8A               	movwf	(_spi_link+5)& (0+255),b	;volatile
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
 12886  015938  0060  F22F  FFE6   	movff	_spi_link+6,postinc1
 12887  01593E  0060  F233  FFE6   	movff	_spi_link+7,postinc1
 12888  015944  ECB6  F0B6         	call	_ringBufS_init	;wreg free
 12889                           
 12890                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
 12891  015948  0060  F227  FFE6   	movff	_spi_link+4,postinc1
 12892  01594E  0060  F22B  FFE6   	movff	_spi_link+5,postinc1
 12893  015954  ECB6  F0B6         	call	_ringBufS_init	;wreg free
 12894                           
 12895                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
 12896  015958  84BE               	bsf	16318,2,c	;volatile
 12897  01595A  84BC               	bsf	16316,2,c	;volatile
 12898                           
 12899                           ;eadog.c: 46:  wdtdelay(350000);
 12900  01595C  0E30               	movlw	48
 12901  01595E  6EE6               	movwf	postinc1,c
 12902  015960  0E57               	movlw	87
 12903  015962  6EE6               	movwf	postinc1,c
 12904  015964  0E05               	movlw	5
 12905  015966  6EE6               	movwf	postinc1,c
 12906  015968  0E00               	movlw	0
 12907  01596A  6EE6               	movwf	postinc1,c
 12908  01596C  ECA7  F0B2         	call	_wdtdelay	;wreg free
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;eadog.c: 47:  send_lcd_cmd(0x39);
 12912  015970  0E39               	movlw	57
 12913  015972  6EE6               	movwf	postinc1,c
 12914  015974  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
 12918  015978  0E1D               	movlw	29
 12919  01597A  6EE6               	movwf	postinc1,c
 12920  01597C  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;eadog.c: 49:  send_lcd_cmd(0x50);
 12924  015980  0E50               	movlw	80
 12925  015982  6EE6               	movwf	postinc1,c
 12926  015984  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
 12930  015988  0E6C               	movlw	108
 12931  01598A  6EE6               	movwf	postinc1,c
 12932  01598C  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;eadog.c: 51:  send_lcd_cmd(0x76);
 12936  015990  0E76               	movlw	118
 12937  015992  6EE6               	movwf	postinc1,c
 12938  015994  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
 12942  015998  0E38               	movlw	56
 12943  01599A  6EE6               	movwf	postinc1,c
 12944  01599C  EC8E  F0B6         	call	_send_lcd_cmd_long	;wreg free
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
 12948  0159A0  0E0F               	movlw	15
 12949  0159A2  6EE6               	movwf	postinc1,c
 12950  0159A4  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
 12954  0159A8  0E01               	movlw	1
 12955  0159AA  6EE6               	movwf	postinc1,c
 12956  0159AC  EC8E  F0B6         	call	_send_lcd_cmd_long	;wreg free
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;eadog.c: 55:  send_lcd_cmd(0x02);
 12960  0159B0  0E02               	movlw	2
 12961  0159B2  6EE6               	movwf	postinc1,c
 12962  0159B4  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;eadog.c: 56:  send_lcd_cmd(0x06);
 12966  0159B8  0E06               	movlw	6
 12967  0159BA  6EE6               	movwf	postinc1,c
 12968  0159BC  ECA2  F0B6         	call	_send_lcd_cmd	;wreg free
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;eadog.c: 57:  wdtdelay(30);
 12972  0159C0  0E1E               	movlw	30
 12973  0159C2  6EE6               	movwf	postinc1,c
 12974  0159C4  0E00               	movlw	0
 12975  0159C6  6EE6               	movwf	postinc1,c
 12976  0159C8  0E00               	movlw	0
 12977  0159CA  6EE6               	movwf	postinc1,c
 12978  0159CC  0E00               	movlw	0
 12979  0159CE  6EE6               	movwf	postinc1,c
 12980  0159D0  ECA7  F0B2         	call	_wdtdelay	;wreg free
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;eadog.c: 58:  SPI1CON2 = 0x02;
 12984  0159D4  0E02               	movlw	2
 12985  0159D6  013D               	movlb	61	; () banked
 12986  0159D8  6F16               	movwf	22,b	;volatile
 12987                           
 12988                           ; BSR set to: 61
 12989                           ;eadog.c: 59:  SPI1CON1 = 0x40;
 12990  0159DA  0E40               	movlw	64
 12991  0159DC  6F15               	movwf	21,b	;volatile
 12992                           
 12993                           ; BSR set to: 61
 12994                           ;eadog.c: 60:  SPI1CON0 = 0x83;
 12995  0159DE  0E83               	movlw	131
 12996  0159E0  6F14               	movwf	20,b	;volatile
 12997                           
 12998                           ; BSR set to: 61
 12999                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
 13000  0159E2  931A               	bcf	26,1,b	;volatile
 13001                           
 13002                           ; BSR set to: 61
 13003                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
 13004  0159E4  0E3F               	movlw	-193
 13005  0159E6  013B               	movlb	59	; () banked
 13006  0159E8  17FD               	andwf	253,f,b	;volatile
 13007                           
 13008                           ; BSR set to: 59
 13009                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
 13010  0159EA  9BFD               	bcf	253,5,b	;volatile
 13011                           
 13012                           ; BSR set to: 59
 13013                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
 13014  0159EC  51FD               	movf	253,w,b	;volatile
 13015  0159EE  0BF9               	andlw	-7
 13016  0159F0  0902               	iorlw	2
 13017  0159F2  6FFD               	movwf	253,b	;volatile
 13018                           
 13019                           ; BSR set to: 59
 13020                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
 13021  0159F4  0EE7               	movlw	-25
 13022  0159F6  17FD               	andwf	253,f,b	;volatile
 13023                           
 13024                           ; BSR set to: 59
 13025                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
 13026  0159F8  81FD               	bsf	253,0,b	;volatile
 13027                           
 13028                           ; BSR set to: 59
 13029                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
 13030  0159FA  0E80               	movlw	low _ring_buf1
 13031  0159FC  6FF9               	movwf	249,b	;volatile
 13032  0159FE  0E02               	movlw	high _ring_buf1
 13033  015A00  6FFA               	movwf	250,b	;volatile
 13034  015A02  0E00               	movlw	low (_ring_buf1 shr (0+16))
 13035  015A04  6FFB               	movwf	251,b	;volatile
 13036                           
 13037                           ; BSR set to: 59
 13038                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
 13039  015A06  9BFC               	bcf	252,5,b	;volatile
 13040                           
 13041                           ; BSR set to: 59
 13042                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
 13043  015A08  013D               	movlb	61	; () banked
 13044  015A0A  831A               	bsf	26,1,b	;volatile
 13045                           
 13046                           ; BSR set to: 61
 13047                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
 13048  015A0C  94BE               	bcf	16318,2,c	;volatile
 13049                           
 13050                           ; BSR set to: 61
 13051                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 13052  015A0E  0012               	return		;funcret
 13053  015A10                     __end_of_init_display:
 13054                           	opt callstack 0
 13055                           
 13056 ;; *************** function _send_lcd_cmd_long *****************
 13057 ;; Defined at:
 13058 ;;		line 114 in file "eadog.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;  cmd             1  [STACK] const unsigned char 
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1  [STACK] void 
 13065 ;; Registers used:
 13066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13067 ;; Tracked objects:
 13068 ;;		On entry : 3F/0
 13069 ;;		On exit  : 3F/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used:    1
 13078 ;; Hardware stack levels required when called:    4
 13079 ;; This function calls:
 13080 ;;		_SPI1_Exchange8bit
 13081 ;;		_wdtdelay
 13082 ;; This function is called by:
 13083 ;;		_init_display
 13084 ;; This function uses a reentrant model
 13085 ;;
 13086                           
 13087                           	psect	text30
 13088  016D1C                     __ptext30:
 13089                           	opt callstack 0
 13090  016D1C                     _send_lcd_cmd_long:
 13091                           	opt callstack 25
 13092                           
 13093                           ; BSR set to: 61
 13094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13095                           ;incstack = 0
 13096                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
 13097  016D1C  92BC               	bcf	16316,1,c	;volatile
 13098                           
 13099                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
 13100  016D1E  94BC               	bcf	16316,2,c	;volatile
 13101                           
 13102                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
 13103                           ;stkvar	_cmd @ sp[(0)+-1]
 13104  016D20  0EFF               	movlw	-1
 13105  016D22  50E3               	movf	plusw1,w,c
 13106  016D24  6EE6               	movwf	postinc1,c
 13107  016D26  EC7F  F0B8         	call	_SPI1_Exchange8bit	;wreg free
 13108                           
 13109                           ; BSR set to: 57
 13110                           ;eadog.c: 119:  wdtdelay(800);
 13111  016D2A  0E20               	movlw	32
 13112  016D2C  6EE6               	movwf	postinc1,c
 13113  016D2E  0E03               	movlw	3
 13114  016D30  6EE6               	movwf	postinc1,c
 13115  016D32  0E00               	movlw	0
 13116  016D34  6EE6               	movwf	postinc1,c
 13117  016D36  0E00               	movlw	0
 13118  016D38  6EE6               	movwf	postinc1,c
 13119  016D3A  ECA7  F0B2         	call	_wdtdelay	;wreg free
 13120                           
 13121                           ; BSR set to: 0
 13122  016D3E  82BC               	bsf	16316,1,c	;volatile
 13123                           
 13124                           ; BSR set to: 0
 13125                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 13126  016D40  52E5               	movf	postdec1,f,c
 13127  016D42  0012               	return		;funcret
 13128  016D44                     __end_of_send_lcd_cmd_long:
 13129                           	opt callstack 0
 13130                           
 13131 ;; *************** function _send_lcd_cmd *****************
 13132 ;; Defined at:
 13133 ;;		line 102 in file "eadog.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;  cmd             1  [STACK] const unsigned char 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;		None
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  1  [STACK] void 
 13140 ;; Registers used:
 13141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13142 ;; Tracked objects:
 13143 ;;		On entry : 3F/0
 13144 ;;		On exit  : 3F/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13151 ;;Total ram usage:        0 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; Hardware stack levels required when called:    4
 13154 ;; This function calls:
 13155 ;;		_SPI1_Exchange8bit
 13156 ;;		_wdtdelay
 13157 ;; This function is called by:
 13158 ;;		_init_display
 13159 ;; This function uses a reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text31
 13163  016D44                     __ptext31:
 13164                           	opt callstack 0
 13165  016D44                     _send_lcd_cmd:
 13166                           	opt callstack 25
 13167                           
 13168                           ; BSR set to: 0
 13169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13170                           ;incstack = 0
 13171                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
 13172  016D44  92BC               	bcf	16316,1,c	;volatile
 13173                           
 13174                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
 13175  016D46  94BC               	bcf	16316,2,c	;volatile
 13176                           
 13177                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
 13178                           ;stkvar	_cmd @ sp[(0)+-1]
 13179  016D48  0EFF               	movlw	-1
 13180  016D4A  50E3               	movf	plusw1,w,c
 13181  016D4C  6EE6               	movwf	postinc1,c
 13182  016D4E  EC7F  F0B8         	call	_SPI1_Exchange8bit	;wreg free
 13183                           
 13184                           ; BSR set to: 57
 13185                           ;eadog.c: 107:  wdtdelay(30);
 13186  016D52  0E1E               	movlw	30
 13187  016D54  6EE6               	movwf	postinc1,c
 13188  016D56  0E00               	movlw	0
 13189  016D58  6EE6               	movwf	postinc1,c
 13190  016D5A  0E00               	movlw	0
 13191  016D5C  6EE6               	movwf	postinc1,c
 13192  016D5E  0E00               	movlw	0
 13193  016D60  6EE6               	movwf	postinc1,c
 13194  016D62  ECA7  F0B2         	call	_wdtdelay	;wreg free
 13195                           
 13196                           ; BSR set to: 0
 13197  016D66  82BC               	bsf	16316,1,c	;volatile
 13198                           
 13199                           ; BSR set to: 0
 13200                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 13201  016D68  52E5               	movf	postdec1,f,c
 13202  016D6A  0012               	return		;funcret
 13203  016D6C                     __end_of_send_lcd_cmd:
 13204                           	opt callstack 0
 13205                           
 13206 ;; *************** function _SPI1_Exchange8bit *****************
 13207 ;; Defined at:
 13208 ;;		line 79 in file "mcc_generated_files/spi1.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;  data            1  [STACK] unsigned char 
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1  [STACK] unsigned char 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 3F/39
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    3
 13229 ;; This function calls:
 13230 ;;		Nothing
 13231 ;; This function is called by:
 13232 ;;		_send_lcd_cmd
 13233 ;;		_send_lcd_cmd_long
 13234 ;; This function uses a reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text32
 13238  0170FE                     __ptext32:
 13239                           	opt callstack 0
 13240  0170FE                     _SPI1_Exchange8bit:
 13241                           	opt callstack 25
 13242                           
 13243                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 13244                           
 13245                           ; BSR set to: 0
 13246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13247                           ;incstack = 0
 13248  0170FE  0E01               	movlw	1
 13249  017100  013D               	movlb	61	; () banked
 13250  017102  6F12               	movwf	18,b	;volatile
 13251                           
 13252                           ; BSR set to: 61
 13253                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 13254                           ;stkvar	_data @ sp[(0)+-1]
 13255  017104  0EFF               	movlw	-1
 13256  017106  006F FF8F FD11     	movff	plusw1,15633	;volatile
 13257  01710C                     l863:
 13258                           
 13259                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 13260  01710C  0139               	movlb	57	; () banked
 13261  01710E  A9A2               	btfss	162,4,b	;volatile
 13262  017110  D7FD               	goto	l863
 13263                           
 13264                           ; BSR set to: 57
 13265                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 13266  017112  006F F440  F038    	movff	15632,btemp	;volatile
 13267                           
 13268                           ; BSR set to: 57
 13269                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 13270  017118  52E5               	movf	postdec1,f,c
 13271  01711A  0012               	return		;funcret
 13272  01711C                     __end_of_SPI1_Exchange8bit:
 13273                           	opt callstack 0
 13274                           
 13275 ;; *************** function _ringBufS_init *****************
 13276 ;; Defined at:
 13277 ;;		line 22 in file "ringbufs.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  _this           2  [STACK] PTR volatile struct ring
 13280 ;;		 -> ring_buf2(67), ring_buf1(67), 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1  [STACK] void 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:    4
 13299 ;; This function calls:
 13300 ;;		_memset
 13301 ;; This function is called by:
 13302 ;;		_init_display
 13303 ;; This function uses a reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text33
 13307  016D6C                     __ptext33:
 13308                           	opt callstack 0
 13309  016D6C                     _ringBufS_init:
 13310                           	opt callstack 25
 13311                           
 13312                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 13313                           
 13314                           ; BSR set to: 57
 13315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13316                           ;incstack = 0
 13317  016D6C  0E43               	movlw	67
 13318  016D6E  6EE6               	movwf	postinc1,c
 13319  016D70  0E00               	movlw	0
 13320  016D72  6EE6               	movwf	postinc1,c
 13321  016D74  0E00               	movlw	0
 13322  016D76  6EE6               	movwf	postinc1,c
 13323  016D78  0E00               	movlw	0
 13324  016D7A  6EE6               	movwf	postinc1,c
 13325                           
 13326                           ;stkvar	__this @ sp[(-4)+-2]
 13327  016D7C  0EFA               	movlw	-6
 13328  016D7E  006F FF8F FFE6     	movff	plusw1,postinc1
 13329  016D84  006F FF8F FFE6     	movff	plusw1,postinc1
 13330  016D8A  ECC5  F099         	call	_memset	;wreg free
 13331                           
 13332                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13333  016D8E  52E5               	movf	postdec1,f,c
 13334  016D90  52E5               	movf	postdec1,f,c
 13335  016D92  0012               	return		;funcret
 13336  016D94                     __end_of_ringBufS_init:
 13337                           	opt callstack 0
 13338                           
 13339 ;; *************** function _hb_message *****************
 13340 ;; Defined at:
 13341 ;;		line 557 in file "gemsecs.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;		None
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;		None
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  1  [STACK] void 
 13348 ;; Registers used:
 13349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/3C
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;Total ram usage:        0 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:    3
 13362 ;; This function calls:
 13363 ;;		Nothing
 13364 ;; This function is called by:
 13365 ;;		_main
 13366 ;; This function uses a reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text34
 13370  01664E                     __ptext34:
 13371                           	opt callstack 0
 13372  01664E                     _hb_message:
 13373                           	opt callstack 27
 13374                           
 13375                           ;gemsecs.c: 559:  V.ping++;
 13376                           
 13377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13378                           ;incstack = 0
 13379  01664E  EE23  F011         	lfsr	2,_V+323	;volatile
 13380  016652  2ADE               	incf	postinc2,f,c
 13381  016654  0E00               	movlw	0
 13382  016656  22DD               	addwfc	postdec2,f,c
 13383                           
 13384                           ;gemsecs.c: 560:  V.s_state = SEQ_STATE_TX;
 13385  016658  0E02               	movlw	2
 13386  01665A  006F FFA0  FACE    	movff	wreg,_V
 13387                           
 13388                           ;gemsecs.c: 561:  V.failed_send = 0;
 13389  016660  EE23  F019         	lfsr	2,_V+331	;volatile
 13390  016664  0E0F               	movlw	-241
 13391  016666  16DF               	andwf	223,f,c
 13392                           
 13393                           ;gemsecs.c: 562:  V.t_l_state = LINK_STATE_IDLE;
 13394  016668  0E00               	movlw	0
 13395  01666A  006F FFA0  FAD4    	movff	wreg,_V+6	;volatile
 13396                           
 13397                           ;gemsecs.c: 563:  if (V.msg_error == MSG_ERROR_NONE) {
 13398  016670  EE23  F005         	lfsr	2,_V+311	;volatile
 13399  016674  50DF               	movf	indf2,w,c
 13400  016676  A4D8               	btfss	status,2,c
 13401  016678  D009               	goto	l1961
 13402                           
 13403                           ;gemsecs.c: 564:   V.stream = 1;
 13404  01667A  0E01               	movlw	1
 13405  01667C  006F FFA0  FC01    	movff	wreg,_V+307	;volatile
 13406                           
 13407                           ;gemsecs.c: 565:   V.function = 2;
 13408  016682  0E02               	movlw	2
 13409  016684  006F FFA0  FC02    	movff	wreg,_V+308	;volatile
 13410                           
 13411                           ;gemsecs.c: 566:  } else {
 13412  01668A  0012               	return	
 13413  01668C                     l1961:
 13414                           
 13415                           ;gemsecs.c: 567:   V.stream = 1;
 13416  01668C  0E01               	movlw	1
 13417  01668E  006F FFA0  FC01    	movff	wreg,_V+307	;volatile
 13418                           
 13419                           ;gemsecs.c: 568:   V.function = 14;
 13420  016694  0E0E               	movlw	14
 13421  016696  006F FFA0  FC02    	movff	wreg,_V+308	;volatile
 13422                           
 13423                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13424  01669C  0012               	return		;funcret
 13425  01669E                     __end_of_hb_message:
 13426                           	opt callstack 0
 13427                           
 13428 ;; *************** function _eaDogM_WriteCommand *****************
 13429 ;; Defined at:
 13430 ;;		line 160 in file "eadog.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;  cmd             1  [STACK] const unsigned char 
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1  [STACK] void 
 13437 ;; Registers used:
 13438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13439 ;; Tracked objects:
 13440 ;;		On entry : 3F/3D
 13441 ;;		On exit  : 3F/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:   13
 13451 ;; This function calls:
 13452 ;;		_send_lcd_cmd_dma
 13453 ;; This function is called by:
 13454 ;;		_main
 13455 ;; This function uses a reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text35
 13459  0172C4                     __ptext35:
 13460                           	opt callstack 0
 13461  0172C4                     _eaDogM_WriteCommand:
 13462                           	opt callstack 17
 13463                           
 13464                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
 13465                           ;stkvar	_cmd @ sp[(0)+-1]
 13466                           
 13467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13468                           ;incstack = 0
 13469  0172C4  0EFF               	movlw	-1
 13470  0172C6  50E3               	movf	plusw1,w,c
 13471  0172C8  6EE6               	movwf	postinc1,c
 13472  0172CA  ECD4  F0B2         	call	_send_lcd_cmd_dma	;wreg free
 13473                           
 13474                           ; BSR set to: 0
 13475                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 13476  0172CE  52E5               	movf	postdec1,f,c
 13477  0172D0  0012               	return		;funcret
 13478  0172D2                     __end_of_eaDogM_WriteCommand:
 13479                           	opt callstack 0
 13480                           
 13481 ;; *************** function _check_help *****************
 13482 ;; Defined at:
 13483 ;;		line 58 in file "mconfig.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;		None
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1  [STACK] void 
 13490 ;; Registers used:
 13491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13501 ;;Total ram usage:        0 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:   15
 13504 ;; This function calls:
 13505 ;;		_StartTimer
 13506 ;;		_TimerDone
 13507 ;;		_display_help
 13508 ;;		_display_info
 13509 ;;		_get_vterm_ptr
 13510 ;;		_help_button
 13511 ;;		_mode_lamp_bright
 13512 ;;		_mode_lamp_dim
 13513 ;;		_set_display_info
 13514 ;;		_set_temp_display_help
 13515 ;;		_set_vterm
 13516 ;;		_sprintf
 13517 ;;		_update_lcd
 13518 ;;		_vterm_dump
 13519 ;; This function is called by:
 13520 ;;		_main
 13521 ;; This function uses a reentrant model
 13522 ;;
 13523                           
 13524                           	psect	text36
 13525  014992                     __ptext36:
 13526                           	opt callstack 0
 13527  014992                     _check_help:
 13528                           	opt callstack 15
 13529                           
 13530                           ;mconfig.c: 63:  if (help_button() && display_info() != DIS_HELP) {
 13531                           
 13532                           ; BSR set to: 0
 13533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13534                           ;incstack = 0
 13535  014992  EC08  F0B5         	call	_help_button	;wreg free
 13536  014996  5038               	movf	btemp,w,c
 13537  014998  B4D8               	btfsc	status,2,c
 13538  01499A  D0AF               	goto	l16984
 13539  01499C  ECAD  F0B9         	call	_display_info	;wreg free
 13540  0149A0  0E06               	movlw	6
 13541  0149A2  1838               	xorwf	btemp,w,c
 13542  0149A4  B4D8               	btfsc	status,2,c
 13543  0149A6  D0A9               	goto	l16984
 13544                           
 13545                           ;mconfig.c: 64:   if (V.debug)
 13546  0149A8  EE23  F01A         	lfsr	2,_V+332	;volatile
 13547  0149AC  BADF               	btfsc	indf2,5,c
 13548                           
 13549                           ;mconfig.c: 65:    vterm_dump();
 13550  0149AE  ECBE  F0A7         	call	_vterm_dump	;wreg free
 13551                           
 13552                           ;mconfig.c: 67:   set_vterm(1);
 13553  0149B2  0E01               	movlw	1
 13554  0149B4  6EE6               	movwf	postinc1,c
 13555  0149B6  EC8E  F0B8         	call	_set_vterm	;wreg free
 13556                           
 13557                           ;mconfig.c: 68:   set_temp_display_help(display_info());
 13558  0149BA  ECAD  F0B9         	call	_display_info	;wreg free
 13559  0149BE  5038               	movf	btemp,w,c
 13560  0149C0  6EE6               	movwf	postinc1,c
 13561  0149C2  EC51  F0B9         	call	_set_temp_display_help	;wreg free
 13562                           
 13563                           ;mconfig.c: 69:   set_display_info(DIS_HELP);
 13564  0149C6  0E06               	movlw	6
 13565  0149C8  6EE6               	movwf	postinc1,c
 13566  0149CA  EC6F  F0B8         	call	_set_display_info	;wreg free
 13567                           
 13568                           ;mconfig.c: 70:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 13569  0149CE  0EC3               	movlw	low STR_35
 13570  0149D0  6EE6               	movwf	postinc1,c
 13571  0149D2  0EFF               	movlw	high STR_35
 13572  0149D4  6EE6               	movwf	postinc1,c
 13573  0149D6  0ED0               	movlw	low STR_37
 13574  0149D8  6EE6               	movwf	postinc1,c
 13575  0149DA  0EFE               	movlw	high STR_37
 13576  0149DC  6EE6               	movwf	postinc1,c
 13577  0149DE  0E01               	movlw	1
 13578  0149E0  6EE6               	movwf	postinc1,c
 13579  0149E2  0E00               	movlw	0
 13580  0149E4  6EE6               	movwf	postinc1,c
 13581  0149E6  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13582  0149EA  0060  F0E3  FFE6   	movff	btemp,postinc1
 13583  0149F0  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13584  0149F6  0E06               	movlw	6
 13585  0149F8  6EE6               	movwf	postinc1,c
 13586  0149FA  EC13  F0AB         	call	_sprintf	;wreg free
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;mconfig.c: 71:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 13590  0149FE  EE23  F01B         	lfsr	2,_V+333	;volatile
 13591  014A02  30DF               	rrcf	223,w,c
 13592  014A04  32E8               	rrcf	wreg,f,c
 13593  014A06  32E8               	rrcf	wreg,f,c
 13594  014A08  0B03               	andlw	3
 13595  014A0A  0D40               	mullw	64
 13596  014A0C  0E00               	movlw	low _T
 13597  014A0E  6E42               	movwf	btemp+10,c
 13598  014A10  0E06               	movlw	high _T
 13599  014A12  6E43               	movwf	btemp+11,c
 13600  014A14  0E20               	movlw	32
 13601  014A16  2642               	addwf	btemp+10,f,c
 13602  014A18  0E00               	movlw	0
 13603  014A1A  2243               	addwfc	btemp+11,f,c
 13604  014A1C  50F3               	movf	prodl,w,c
 13605  014A1E  2642               	addwf	btemp+10,f,c
 13606  014A20  50F4               	movf	prodh,w,c
 13607  014A22  2243               	addwfc	btemp+11,f,c
 13608  014A24  0060  F10B  FFE6   	movff	btemp+10,postinc1
 13609  014A2A  0060  F10F  FFE6   	movff	btemp+11,postinc1
 13610  014A30  0ECF               	movlw	low STR_38
 13611  014A32  6EE6               	movwf	postinc1,c
 13612  014A34  0EFF               	movlw	high STR_38
 13613  014A36  6EE6               	movwf	postinc1,c
 13614  014A38  0E01               	movlw	1
 13615  014A3A  6EE6               	movwf	postinc1,c
 13616  014A3C  0E01               	movlw	1
 13617  014A3E  6EE6               	movwf	postinc1,c
 13618  014A40  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13619  014A44  0060  F0E3  FFE6   	movff	btemp,postinc1
 13620  014A4A  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13621  014A50  0E06               	movlw	6
 13622  014A52  6EE6               	movwf	postinc1,c
 13623  014A54  EC13  F0AB         	call	_sprintf	;wreg free
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;mconfig.c: 72:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 13627  014A58  EE23  F01B         	lfsr	2,_V+333	;volatile
 13628  014A5C  30DF               	rrcf	223,w,c
 13629  014A5E  32E8               	rrcf	wreg,f,c
 13630  014A60  32E8               	rrcf	wreg,f,c
 13631  014A62  0B03               	andlw	3
 13632  014A64  0D40               	mullw	64
 13633  014A66  0E00               	movlw	low _T
 13634  014A68  6E42               	movwf	btemp+10,c
 13635  014A6A  0E06               	movlw	high _T
 13636  014A6C  6E43               	movwf	btemp+11,c
 13637  014A6E  50F3               	movf	prodl,w,c
 13638  014A70  2642               	addwf	btemp+10,f,c
 13639  014A72  50F4               	movf	prodh,w,c
 13640  014A74  2243               	addwfc	btemp+11,f,c
 13641  014A76  0060  F10B  FFE6   	movff	btemp+10,postinc1
 13642  014A7C  0060  F10F  FFE6   	movff	btemp+11,postinc1
 13643  014A82  0ECF               	movlw	low STR_38
 13644  014A84  6EE6               	movwf	postinc1,c
 13645  014A86  0EFF               	movlw	high STR_38
 13646  014A88  6EE6               	movwf	postinc1,c
 13647  014A8A  0E01               	movlw	1
 13648  014A8C  6EE6               	movwf	postinc1,c
 13649  014A8E  0E02               	movlw	2
 13650  014A90  6EE6               	movwf	postinc1,c
 13651  014A92  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13652  014A96  0060  F0E3  FFE6   	movff	btemp,postinc1
 13653  014A9C  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13654  014AA2  0E06               	movlw	6
 13655  014AA4  6EE6               	movwf	postinc1,c
 13656  014AA6  EC13  F0AB         	call	_sprintf	;wreg free
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;mconfig.c: 73:   V.help_id++;
 13660  014AAA  EE23  F01B         	lfsr	2,_V+333	;volatile
 13661  014AAE  30DF               	rrcf	223,w,c
 13662  014AB0  6E43               	movwf	btemp+11,c
 13663  014AB2  3243               	rrcf	btemp+11,f,c
 13664  014AB4  3043               	rrcf	btemp+11,w,c
 13665  014AB6  0B03               	andlw	3
 13666  014AB8  6E43               	movwf	btemp+11,c
 13667  014ABA  2A43               	incf	btemp+11,f,c
 13668  014ABC  3643               	rlcf	btemp+11,f,c
 13669  014ABE  3643               	rlcf	btemp+11,f,c
 13670  014AC0  3643               	rlcf	btemp+11,f,c
 13671  014AC2  50DF               	movf	223,w,c
 13672  014AC4  1843               	xorwf	btemp+11,w,c
 13673  014AC6  0BE7               	andlw	-25
 13674  014AC8  1843               	xorwf	btemp+11,w,c
 13675  014ACA  6EDF               	movwf	223,c
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;mconfig.c: 74:   StartTimer(TMR_HELPDIS, 3000);
 13679  014ACC  0EB8               	movlw	184
 13680  014ACE  6EE6               	movwf	postinc1,c
 13681  014AD0  0E0B               	movlw	11
 13682  014AD2  6EE6               	movwf	postinc1,c
 13683  014AD4  0E09               	movlw	9
 13684  014AD6  6EE6               	movwf	postinc1,c
 13685  014AD8  EC26  F0B5         	call	_StartTimer	;wreg free
 13686                           
 13687                           ;mconfig.c: 75:   StartTimer(TMR_INFO, 3000);
 13688  014ADC  0EB8               	movlw	184
 13689  014ADE  6EE6               	movwf	postinc1,c
 13690  014AE0  0E0B               	movlw	11
 13691  014AE2  6EE6               	movwf	postinc1,c
 13692  014AE4  0E07               	movlw	7
 13693  014AE6  6EE6               	movwf	postinc1,c
 13694  014AE8  EC26  F0B5         	call	_StartTimer	;wreg free
 13695                           
 13696                           ;mconfig.c: 76:   mode_lamp_bright();
 13697  014AEC  EC69  F0B9         	call	_mode_lamp_bright	;wreg free
 13698                           
 13699                           ;mconfig.c: 77:   update_lcd(1);
 13700  014AF0  0E01               	movlw	1
 13701  014AF2  6EE6               	movwf	postinc1,c
 13702  014AF4  EC8B  F0AA         	call	_update_lcd	;wreg free
 13703                           
 13704                           ;mconfig.c: 78:  } else {
 13705  014AF8  0012               	return	
 13706  014AFA                     l16984:
 13707                           
 13708                           ;mconfig.c: 79:   if (TimerDone(TMR_HELPDIS)) {
 13709  014AFA  0E09               	movlw	9
 13710  014AFC  6EE6               	movwf	postinc1,c
 13711  014AFE  ECF5  F0B7         	call	_TimerDone	;wreg free
 13712  014B02  5038               	movf	btemp,w,c
 13713  014B04  B4D8               	btfsc	status,2,c
 13714  014B06  0012               	return	
 13715                           
 13716                           ;mconfig.c: 80:    set_vterm(0);
 13717  014B08  0E00               	movlw	0
 13718  014B0A  6EE6               	movwf	postinc1,c
 13719  014B0C  EC8E  F0B8         	call	_set_vterm	;wreg free
 13720                           
 13721                           ;mconfig.c: 81:    V.help = 0;
 13722  014B10  EE23  F01A         	lfsr	2,_V+332	;volatile
 13723  014B14  9CDF               	bcf	indf2,6,c
 13724                           
 13725                           ;mconfig.c: 82:    set_display_info(display_help());
 13726  014B16  ECB1  F0B9         	call	_display_help	;wreg free
 13727  014B1A  5038               	movf	btemp,w,c
 13728  014B1C  6EE6               	movwf	postinc1,c
 13729  014B1E  EC6F  F0B8         	call	_set_display_info	;wreg free
 13730                           
 13731                           ;mconfig.c: 83:    mode_lamp_dim(V.mode_pwm);
 13732  014B22  EE23  F013         	lfsr	2,_V+325	;volatile
 13733  014B26  006F FF78  F042    	movff	postinc2,btemp+10
 13734  014B2C  006F FF74  F043    	movff	postdec2,btemp+11
 13735  014B32  0060  F10B  FFE6   	movff	btemp+10,postinc1
 13736  014B38  0060  F10F  FFE6   	movff	btemp+11,postinc1
 13737  014B3E  EC1A  F0B9         	call	_mode_lamp_dim	;wreg free
 13738                           
 13739                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13740  014B42  0012               	return		;funcret
 13741  014B44                     __end_of_check_help:
 13742                           	opt callstack 0
 13743                           
 13744 ;; *************** function _vterm_dump *****************
 13745 ;; Defined at:
 13746 ;;		line 127 in file "mconfig.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;		None
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;		None
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1  [STACK] void 
 13753 ;; Registers used:
 13754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 13755 ;; Tracked objects:
 13756 ;;		On entry : 0/0
 13757 ;;		On exit  : 0/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13764 ;;Total ram usage:        0 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:   14
 13767 ;; This function calls:
 13768 ;;		_WaitMs
 13769 ;;		_eaDogM_WriteStringAtPos
 13770 ;;		_get_vterm_ptr
 13771 ;;		_sprintf
 13772 ;;		_wait_lcd_done
 13773 ;; This function is called by:
 13774 ;;		_check_help
 13775 ;; This function uses a reentrant model
 13776 ;;
 13777                           
 13778                           	psect	text37
 13779  014F7C                     __ptext37:
 13780                           	opt callstack 0
 13781  014F7C                     _vterm_dump:
 13782                           	opt callstack 15
 13783                           
 13784                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13785                           
 13786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13787                           ;incstack = 0
 13788  014F7C  0E01               	movlw	1
 13789  014F7E  6EE6               	movwf	postinc1,c
 13790  014F80  0E00               	movlw	0
 13791  014F82  6EE6               	movwf	postinc1,c
 13792  014F84  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13793  014F88  0060  F0E3  FFE6   	movff	btemp,postinc1
 13794  014F8E  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13795  014F94  0E00               	movlw	0
 13796  014F96  6EE6               	movwf	postinc1,c
 13797  014F98  0E00               	movlw	0
 13798  014F9A  6EE6               	movwf	postinc1,c
 13799  014F9C  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13800  014FA0  0060  F0E3  FFE6   	movff	btemp,postinc1
 13801  014FA6  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13802  014FAC  0EA5               	movlw	low STR_40
 13803  014FAE  6EE6               	movwf	postinc1,c
 13804  014FB0  0EFF               	movlw	high STR_40
 13805  014FB2  6EE6               	movwf	postinc1,c
 13806  014FB4  0ED5               	movlw	low (_V+7)
 13807  014FB6  6EE6               	movwf	postinc1,c
 13808  014FB8  0E0A               	movlw	high (_V+7)
 13809  014FBA  6EE6               	movwf	postinc1,c
 13810  014FBC  0E08               	movlw	8
 13811  014FBE  6EE6               	movwf	postinc1,c
 13812  014FC0  EC13  F0AB         	call	_sprintf	;wreg free
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;mconfig.c: 130:  wait_lcd_done();
 13816  014FC4  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13820  014FC8  0ED5               	movlw	low (_V+7)
 13821  014FCA  6EE6               	movwf	postinc1,c
 13822  014FCC  0E0A               	movlw	high (_V+7)
 13823  014FCE  6EE6               	movwf	postinc1,c
 13824  014FD0  0E00               	movlw	0
 13825  014FD2  6EE6               	movwf	postinc1,c
 13826  014FD4  0E00               	movlw	0
 13827  014FD6  6EE6               	movwf	postinc1,c
 13828  014FD8  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 13829                           
 13830                           ; BSR set to: 59
 13831                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13832  014FDC  0E01               	movlw	1
 13833  014FDE  6EE6               	movwf	postinc1,c
 13834  014FE0  0E01               	movlw	1
 13835  014FE2  6EE6               	movwf	postinc1,c
 13836  014FE4  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13837  014FE8  0060  F0E3  FFE6   	movff	btemp,postinc1
 13838  014FEE  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13839  014FF4  0E00               	movlw	0
 13840  014FF6  6EE6               	movwf	postinc1,c
 13841  014FF8  0E01               	movlw	1
 13842  014FFA  6EE6               	movwf	postinc1,c
 13843  014FFC  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13844  015000  0060  F0E3  FFE6   	movff	btemp,postinc1
 13845  015006  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13846  01500C  0EA5               	movlw	low STR_40
 13847  01500E  6EE6               	movwf	postinc1,c
 13848  015010  0EFF               	movlw	high STR_40
 13849  015012  6EE6               	movwf	postinc1,c
 13850  015014  0ED5               	movlw	low (_V+7)
 13851  015016  6EE6               	movwf	postinc1,c
 13852  015018  0E0A               	movlw	high (_V+7)
 13853  01501A  6EE6               	movwf	postinc1,c
 13854  01501C  0E08               	movlw	8
 13855  01501E  6EE6               	movwf	postinc1,c
 13856  015020  EC13  F0AB         	call	_sprintf	;wreg free
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;mconfig.c: 133:  wait_lcd_done();
 13860  015024  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 13861                           
 13862                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13863  015028  0ED5               	movlw	low (_V+7)
 13864  01502A  6EE6               	movwf	postinc1,c
 13865  01502C  0E0A               	movlw	high (_V+7)
 13866  01502E  6EE6               	movwf	postinc1,c
 13867  015030  0E00               	movlw	0
 13868  015032  6EE6               	movwf	postinc1,c
 13869  015034  0E01               	movlw	1
 13870  015036  6EE6               	movwf	postinc1,c
 13871  015038  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 13872                           
 13873                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13874  01503C  0E01               	movlw	1
 13875  01503E  6EE6               	movwf	postinc1,c
 13876  015040  0E02               	movlw	2
 13877  015042  6EE6               	movwf	postinc1,c
 13878  015044  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13879  015048  0060  F0E3  FFE6   	movff	btemp,postinc1
 13880  01504E  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13881  015054  0E00               	movlw	0
 13882  015056  6EE6               	movwf	postinc1,c
 13883  015058  0E02               	movlw	2
 13884  01505A  6EE6               	movwf	postinc1,c
 13885  01505C  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 13886  015060  0060  F0E3  FFE6   	movff	btemp,postinc1
 13887  015066  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 13888  01506C  0EA5               	movlw	low STR_40
 13889  01506E  6EE6               	movwf	postinc1,c
 13890  015070  0EFF               	movlw	high STR_40
 13891  015072  6EE6               	movwf	postinc1,c
 13892  015074  0ED5               	movlw	low (_V+7)
 13893  015076  6EE6               	movwf	postinc1,c
 13894  015078  0E0A               	movlw	high (_V+7)
 13895  01507A  6EE6               	movwf	postinc1,c
 13896  01507C  0E08               	movlw	8
 13897  01507E  6EE6               	movwf	postinc1,c
 13898  015080  EC13  F0AB         	call	_sprintf	;wreg free
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;mconfig.c: 136:  wait_lcd_done();
 13902  015084  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13906  015088  0ED5               	movlw	low (_V+7)
 13907  01508A  6EE6               	movwf	postinc1,c
 13908  01508C  0E0A               	movlw	high (_V+7)
 13909  01508E  6EE6               	movwf	postinc1,c
 13910  015090  0E00               	movlw	0
 13911  015092  6EE6               	movwf	postinc1,c
 13912  015094  0E02               	movlw	2
 13913  015096  6EE6               	movwf	postinc1,c
 13914  015098  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 13915                           
 13916                           ; BSR set to: 59
 13917                           ;mconfig.c: 138:  WaitMs(3000);
 13918  01509C  0EB8               	movlw	184
 13919  01509E  6EE6               	movwf	postinc1,c
 13920  0150A0  0E0B               	movlw	11
 13921  0150A2  6EE6               	movwf	postinc1,c
 13922  0150A4  EC62  F0B5         	call	_WaitMs	;wreg free
 13923                           
 13924                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13925  0150A8  0012               	return		;funcret
 13926  0150AA                     __end_of_vterm_dump:
 13927                           	opt callstack 0
 13928                           
 13929 ;; *************** function _WaitMs *****************
 13930 ;; Defined at:
 13931 ;;		line 32 in file "timers.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  numMilliseco    2  [STACK] const unsigned short 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1  [STACK] void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/3C
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;Total ram usage:        0 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    4
 13952 ;; This function calls:
 13953 ;;		_StartTimer
 13954 ;;		_TimerDone
 13955 ;; This function is called by:
 13956 ;;		_main
 13957 ;;		_m_protocol
 13958 ;;		_r_protocol
 13959 ;;		_vterm_dump
 13960 ;; This function uses a reentrant model
 13961 ;;
 13962                           
 13963                           	psect	text38
 13964  016AC4                     __ptext38:
 13965                           	opt callstack 0
 13966  016AC4                     _WaitMs:
 13967                           	opt callstack 25
 13968                           
 13969                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13970                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13971                           
 13972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13973                           ;incstack = 0
 13974  016AC4  0EFE               	movlw	-2
 13975  016AC6  006F FF8F FFE6     	movff	plusw1,postinc1
 13976  016ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 13977  016AD2  0E00               	movlw	0
 13978  016AD4  6EE6               	movwf	postinc1,c
 13979  016AD6  EC26  F0B5         	call	_StartTimer	;wreg free
 13980                           
 13981                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13982  016ADA  D005               	goto	l12476
 13983  016ADC                     l2240:
 13984                           
 13985                           ;timers.c: 36:   __nop();
 13986  016ADC  F000               	nop	
 13987                           
 13988                           ;timers.c: 37:   __nop();
 13989  016ADE  F000               	nop	
 13990                           
 13991                           ;timers.c: 38:   __nop();
 13992  016AE0  F000               	nop	
 13993                           
 13994                           ;timers.c: 39:   __nop();
 13995  016AE2  F000               	nop	
 13996  016AE4  0004               	clrwdt		;# 
 13997  016AE6                     l12476:
 13998                           
 13999                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14000  016AE6  0E00               	movlw	0
 14001  016AE8  6EE6               	movwf	postinc1,c
 14002  016AEA  ECF5  F0B7         	call	_TimerDone	;wreg free
 14003  016AEE  5038               	movf	btemp,w,c
 14004  016AF0  B4D8               	btfsc	status,2,c
 14005  016AF2  D7F4               	goto	l2240
 14006                           
 14007                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 14008  016AF4  52E5               	movf	postdec1,f,c
 14009  016AF6  52E5               	movf	postdec1,f,c
 14010  016AF8  0012               	return		;funcret
 14011  016AFA                     __end_of_WaitMs:
 14012                           	opt callstack 0
 14013                           
 14014 ;; *************** function _set_vterm *****************
 14015 ;; Defined at:
 14016 ;;		line 113 in file "mconfig.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  vterm           1  [STACK] unsigned char 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1  [STACK] unsigned char 
 14023 ;; Registers used:
 14024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14034 ;;Total ram usage:        0 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    3
 14037 ;; This function calls:
 14038 ;;		Nothing
 14039 ;; This function is called by:
 14040 ;;		_main
 14041 ;;		_check_help
 14042 ;; This function uses a reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text39
 14046  01711C                     __ptext39:
 14047                           	opt callstack 0
 14048  01711C                     _set_vterm:
 14049                           	opt callstack 27
 14050                           
 14051                           ;mconfig.c: 113: uint8_t set_vterm(uint8_t vterm);mconfig.c: 114: {;mconfig.c: 115:  D.v
      +                          term = vterm & 0x03;
 14052                           ;stkvar	_vterm @ sp[(0)+-1]
 14053                           
 14054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14055                           ;incstack = 0
 14056  01711C  0EFF               	movlw	-1
 14057  01711E  006F FF8C  F043    	movff	plusw1,btemp+11
 14058  017124  0E03               	movlw	3
 14059  017126  1643               	andwf	btemp+11,f,c
 14060  017128  EE22  F100         	lfsr	2,_D+512
 14061  01712C  50DF               	movf	223,w,c
 14062  01712E  1843               	xorwf	btemp+11,w,c
 14063  017130  0BFE               	andlw	-2
 14064  017132  1843               	xorwf	btemp+11,w,c
 14065  017134  6EDF               	movwf	223,c
 14066                           
 14067                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 14068  017136  52E5               	movf	postdec1,f,c
 14069  017138  0012               	return		;funcret
 14070  01713A                     __end_of_set_vterm:
 14071                           	opt callstack 0
 14072                           
 14073 ;; *************** function _set_temp_display_help *****************
 14074 ;; Defined at:
 14075 ;;		line 241 in file "mconfig.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;  new_response    1  [STACK] const enum E16492
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;		None
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  1  [STACK] enum E16699
 14082 ;; Registers used:
 14083 ;;		wreg, fsr1l, fsr1h, btemp+11
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14093 ;;Total ram usage:        0 bytes
 14094 ;; Hardware stack levels used:    1
 14095 ;; Hardware stack levels required when called:    3
 14096 ;; This function calls:
 14097 ;;		Nothing
 14098 ;; This function is called by:
 14099 ;;		_secs_II_message
 14100 ;;		_check_help
 14101 ;; This function uses a reentrant model
 14102 ;;
 14103                           
 14104                           	psect	text40
 14105  0172A2                     __ptext40:
 14106                           	opt callstack 0
 14107  0172A2                     _set_temp_display_help:
 14108                           	opt callstack 25
 14109                           
 14110                           ;mconfig.c: 246:  V.response.help_temp = new_response_info;
 14111                           ;stkvar	_new_response_info @ sp[(0)+-1]
 14112                           
 14113                           ;mconfig.c: 241: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 242: {;mconfig.c: 243:  static D_CODES old_info;;mconfig.c: 245:  old_info = V.respon
      +                          se.help_temp;
 14114                           
 14115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14116                           ;incstack = 0
 14117  0172A2  0EFF               	movlw	-1
 14118  0172A4  006F FF8C  F043    	movff	plusw1,btemp+11
 14119  0172AA  0060  F10C  FC42   	movff	btemp+11,_V+372	;volatile
 14120                           
 14121                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 14122  0172B0  52E5               	movf	postdec1,f,c
 14123  0172B2  0012               	return		;funcret
 14124  0172B4                     __end_of_set_temp_display_help:
 14125                           	opt callstack 0
 14126                           
 14127 ;; *************** function _set_display_info *****************
 14128 ;; Defined at:
 14129 ;;		line 230 in file "mconfig.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  new_response    1  [STACK] const enum E16492
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;		None
 14134 ;; Return value:  Size  Location     Type
 14135 ;;                  1  [STACK] enum E16977
 14136 ;; Registers used:
 14137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/3C
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;Total ram usage:        0 bytes
 14148 ;; Hardware stack levels used:    1
 14149 ;; Hardware stack levels required when called:    4
 14150 ;; This function calls:
 14151 ;;		_TimerDone
 14152 ;; This function is called by:
 14153 ;;		_main
 14154 ;;		_secs_II_message
 14155 ;;		_check_help
 14156 ;; This function uses a reentrant model
 14157 ;;
 14158                           
 14159                           	psect	text41
 14160  0170DE                     __ptext41:
 14161                           	opt callstack 0
 14162  0170DE                     _set_display_info:
 14163                           	opt callstack 24
 14164                           
 14165                           ;mconfig.c: 230: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 23
      +                          1: {;mconfig.c: 232:  static D_CODES old_info = DIS_STR;;mconfig.c: 234:  if (TimerDone(
      +                          TMR_INFO)) {
 14166                           
 14167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14168                           ;incstack = 0
 14169  0170DE  0E07               	movlw	7
 14170  0170E0  6EE6               	movwf	postinc1,c
 14171  0170E2  ECF5  F0B7         	call	_TimerDone	;wreg free
 14172  0170E6  5038               	movf	btemp,w,c
 14173  0170E8  B4D8               	btfsc	status,2,c
 14174  0170EA  D007               	goto	l2365
 14175                           
 14176                           ;mconfig.c: 236:   V.response.info = new_response_info;
 14177                           ;stkvar	_new_response_info @ sp[(0)+-1]
 14178                           
 14179                           ;mconfig.c: 235:   old_info = V.response.info;
 14180  0170EC  0EFF               	movlw	-1
 14181  0170EE  006F FF8C  F043    	movff	plusw1,btemp+11
 14182  0170F4  0060  F10C  FC41   	movff	btemp+11,_V+371	;volatile
 14183  0170FA                     l2365:
 14184                           
 14185                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 14186  0170FA  52E5               	movf	postdec1,f,c
 14187  0170FC  0012               	return		;funcret
 14188  0170FE                     __end_of_set_display_info:
 14189                           	opt callstack 0
 14190                           
 14191 ;; *************** function _mode_lamp_dim *****************
 14192 ;; Defined at:
 14193 ;;		line 31 in file "mconfig.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  level           2  [STACK] const unsigned short 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1  [STACK] void 
 14200 ;; Registers used:
 14201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/3C
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14211 ;;Total ram usage:        0 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:    4
 14214 ;; This function calls:
 14215 ;;		_PWM8_LoadDutyValue
 14216 ;; This function is called by:
 14217 ;;		_main
 14218 ;;		_check_help
 14219 ;; This function uses a reentrant model
 14220 ;;
 14221                           
 14222                           	psect	text42
 14223  017234                     __ptext42:
 14224                           	opt callstack 0
 14225  017234                     _mode_lamp_dim:
 14226                           	opt callstack 26
 14227                           
 14228                           ;mconfig.c: 31: void mode_lamp_dim(const uint16_t level);mconfig.c: 32: {;mconfig.c: 33:
      +                            PWM8_LoadDutyValue(level);
 14229                           ;stkvar	_level @ sp[(0)+-2]
 14230                           
 14231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14232                           ;incstack = 0
 14233  017234  0EFE               	movlw	-2
 14234  017236  006F FF8F FFE6     	movff	plusw1,postinc1
 14235  01723C  006F FF8F FFE6     	movff	plusw1,postinc1
 14236  017242  EC4C  F0B4         	call	_PWM8_LoadDutyValue	;wreg free
 14237                           
 14238                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 14239  017246  52E5               	movf	postdec1,f,c
 14240  017248  52E5               	movf	postdec1,f,c
 14241  01724A  0012               	return		;funcret
 14242  01724C                     __end_of_mode_lamp_dim:
 14243                           	opt callstack 0
 14244                           
 14245 ;; *************** function _mode_lamp_bright *****************
 14246 ;; Defined at:
 14247 ;;		line 36 in file "mconfig.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  1  [STACK] void 
 14254 ;; Registers used:
 14255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14265 ;;Total ram usage:        0 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; Hardware stack levels required when called:    4
 14268 ;; This function calls:
 14269 ;;		_PWM8_LoadDutyValue
 14270 ;; This function is called by:
 14271 ;;		_check_help
 14272 ;; This function uses a reentrant model
 14273 ;;
 14274                           
 14275                           	psect	text43
 14276  0172D2                     __ptext43:
 14277                           	opt callstack 0
 14278  0172D2                     _mode_lamp_bright:
 14279                           	opt callstack 25
 14280                           
 14281                           ;mconfig.c: 38:  PWM8_LoadDutyValue(300);
 14282                           
 14283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14284                           ;incstack = 0
 14285  0172D2  0E2C               	movlw	44
 14286  0172D4  6EE6               	movwf	postinc1,c
 14287  0172D6  0E01               	movlw	1
 14288  0172D8  6EE6               	movwf	postinc1,c
 14289  0172DA  EC4C  F0B4         	call	_PWM8_LoadDutyValue	;wreg free
 14290                           
 14291                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14292  0172DE  0012               	return		;funcret
 14293  0172E0                     __end_of_mode_lamp_bright:
 14294                           	opt callstack 0
 14295                           
 14296 ;; *************** function _PWM8_LoadDutyValue *****************
 14297 ;; Defined at:
 14298 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  dutyValue       2  [STACK] unsigned short 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;		None
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1  [STACK] void 
 14305 ;; Registers used:
 14306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/3C
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;Total ram usage:        0 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    3
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_mode_lamp_dim
 14323 ;;		_mode_lamp_bright
 14324 ;; This function uses a reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text44
 14328  016898                     __ptext44:
 14329                           	opt callstack 0
 14330  016898                     _PWM8_LoadDutyValue:
 14331                           	opt callstack 26
 14332                           
 14333                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 14334                           ;stkvar	_dutyValue @ sp[(0)+-2]
 14335                           
 14336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14337                           ;incstack = 0
 14338  016898  0EFE               	movlw	-2
 14339  01689A  006F FF8C  F042    	movff	plusw1,btemp+10
 14340  0168A0  0EFF               	movlw	-1
 14341  0168A2  006F FF8C  F043    	movff	plusw1,btemp+11
 14342  0168A8  90D8               	bcf	status,0,c
 14343  0168AA  3243               	rrcf	btemp+11,f,c
 14344  0168AC  3242               	rrcf	btemp+10,f,c
 14345  0168AE  90D8               	bcf	status,0,c
 14346  0168B0  3243               	rrcf	btemp+11,f,c
 14347  0168B2  3242               	rrcf	btemp+10,f,c
 14348  0168B4  5042               	movf	btemp+10,w,c
 14349  0168B6  6E61               	movwf	16225,c	;volatile
 14350                           
 14351                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 14352                           ;stkvar	_dutyValue @ sp[(0)+-2]
 14353  0168B8  0EFE               	movlw	-2
 14354  0168BA  006F FF8C  F043    	movff	plusw1,btemp+11
 14355  0168C0  0E03               	movlw	3
 14356  0168C2  1643               	andwf	btemp+11,f,c
 14357  0168C4  0E06               	movlw	6
 14358  0168C6  6E38               	movwf	btemp,c
 14359  0168C8                     u4885:
 14360  0168C8  90D8               	bcf	status,0,c
 14361  0168CA  3643               	rlcf	btemp+11,f,c
 14362  0168CC  2E38               	decfsz	btemp,f,c
 14363  0168CE  D7FC               	goto	u4885
 14364  0168D0  5043               	movf	btemp+11,w,c
 14365  0168D2  6E60               	movwf	16224,c	;volatile
 14366                           
 14367                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14368  0168D4  52E5               	movf	postdec1,f,c
 14369  0168D6  52E5               	movf	postdec1,f,c
 14370  0168D8  0012               	return		;funcret
 14371  0168DA                     __end_of_PWM8_LoadDutyValue:
 14372                           	opt callstack 0
 14373                           
 14374 ;; *************** function _help_button *****************
 14375 ;; Defined at:
 14376 ;;		line 44 in file "mconfig.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;		None
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;		None
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1  [STACK] _Bool 
 14383 ;; Registers used:
 14384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;Total ram usage:        0 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:    4
 14397 ;; This function calls:
 14398 ;;		_StartTimer
 14399 ;;		_TimerDone
 14400 ;; This function is called by:
 14401 ;;		_check_help
 14402 ;; This function uses a reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text45
 14406  016A10                     __ptext45:
 14407                           	opt callstack 0
 14408  016A10                     _help_button:
 14409                           	opt callstack 25
 14410                           
 14411                           ;mconfig.c: 46:  if (!PORTBbits.RB0) {
 14412                           
 14413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14414                           ;incstack = 0
 14415  016A10  B0CB               	btfsc	16331,0,c	;volatile
 14416  016A12  D00D               	goto	l13456
 14417                           
 14418                           ;mconfig.c: 47:   V.help = 1;
 14419  016A14  EE23  F01A         	lfsr	2,_V+332	;volatile
 14420  016A18  8CDF               	bsf	indf2,6,c
 14421                           
 14422                           ;mconfig.c: 48:   if (TimerDone(TMR_HELP))
 14423  016A1A  0E08               	movlw	8
 14424  016A1C  6EE6               	movwf	postinc1,c
 14425  016A1E  ECF5  F0B7         	call	_TimerDone	;wreg free
 14426  016A22  5038               	movf	btemp,w,c
 14427  016A24  B4D8               	btfsc	status,2,c
 14428  016A26  D003               	goto	l13456
 14429                           
 14430                           ;mconfig.c: 49:    return 1;
 14431  016A28  0E01               	movlw	1
 14432  016A2A  6E38               	movwf	btemp,c
 14433  016A2C  0012               	return	
 14434  016A2E                     l13456:
 14435                           
 14436                           ;mconfig.c: 52:  if (!V.help)
 14437  016A2E  EE23  F01A         	lfsr	2,_V+332	;volatile
 14438  016A32  BCDF               	btfsc	indf2,6,c
 14439  016A34  D008               	goto	l13460
 14440                           
 14441                           ;mconfig.c: 53:   StartTimer(TMR_HELP, 300);
 14442  016A36  0E2C               	movlw	44
 14443  016A38  6EE6               	movwf	postinc1,c
 14444  016A3A  0E01               	movlw	1
 14445  016A3C  6EE6               	movwf	postinc1,c
 14446  016A3E  0E08               	movlw	8
 14447  016A40  6EE6               	movwf	postinc1,c
 14448  016A42  EC26  F0B5         	call	_StartTimer	;wreg free
 14449  016A46                     l13460:
 14450                           
 14451                           ;mconfig.c: 55:  return 0;
 14452  016A46  0E00               	movlw	0
 14453  016A48  6E38               	movwf	btemp,c
 14454                           
 14455                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 14456  016A4A  0012               	return		;funcret
 14457  016A4C                     __end_of_help_button:
 14458                           	opt callstack 0
 14459                           
 14460 ;; *************** function _StartTimer *****************
 14461 ;; Defined at:
 14462 ;;		line 12 in file "timers.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;  timer           1  [STACK] const unsigned char 
 14465 ;;  count           2  [STACK] const unsigned short 
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;		None
 14468 ;; Return value:  Size  Location     Type
 14469 ;;                  1  [STACK] void 
 14470 ;; Registers used:
 14471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14472 ;; Tracked objects:
 14473 ;;		On entry : 0/0
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14481 ;;Total ram usage:        0 bytes
 14482 ;; Hardware stack levels used:    1
 14483 ;; Hardware stack levels required when called:    3
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		_main
 14488 ;;		_m_protocol
 14489 ;;		_r_protocol
 14490 ;;		_t_protocol
 14491 ;;		_sequence_messages
 14492 ;;		_gem_messages
 14493 ;;		_secs_II_message
 14494 ;;		_ee_logger
 14495 ;;		_secs_gem_state
 14496 ;;		_WaitMs
 14497 ;;		_help_button
 14498 ;;		_check_help
 14499 ;; This function uses a reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text46
 14503  016A4C                     __ptext46:
 14504                           	opt callstack 0
 14505  016A4C                     _StartTimer:
 14506                           	opt callstack 24
 14507                           
 14508                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 14509                           ;stkvar	_count @ sp[(0)+-3]
 14510                           
 14511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14512                           ;incstack = 0
 14513  016A4C  0EFD               	movlw	-3
 14514  016A4E  006F FF8C  F042    	movff	plusw1,btemp+10
 14515  016A54  0EFE               	movlw	-2
 14516  016A56  006F FF8C  F043    	movff	plusw1,btemp+11
 14517  016A5C  90D8               	bcf	status,0,c
 14518  016A5E  3442               	rlcf	btemp+10,w,c
 14519  016A60  6E40               	movwf	btemp+8,c
 14520  016A62  3443               	rlcf	btemp+11,w,c
 14521  016A64  6E41               	movwf	btemp+9,c
 14522                           
 14523                           ;stkvar	_timer @ sp[(0)+-1]
 14524  016A66  0EFF               	movlw	-1
 14525  016A68  50E3               	movf	plusw1,w,c
 14526  016A6A  0D02               	mullw	2
 14527  016A6C  50F3               	movf	prodl,w,c
 14528  016A6E  0F60               	addlw	low _tickCount
 14529  016A70  6ED9               	movwf	fsr2l,c
 14530  016A72  6ADA               	clrf	fsr2h,c
 14531  016A74  0060  F103  FFDE   	movff	btemp+8,postinc2
 14532  016A7A  0060  F107  FFDD   	movff	btemp+9,postdec2
 14533                           
 14534                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 14535  016A80  52E5               	movf	postdec1,f,c
 14536  016A82  52E5               	movf	postdec1,f,c
 14537  016A84  52E5               	movf	postdec1,f,c
 14538  016A86  0012               	return		;funcret
 14539  016A88                     __end_of_StartTimer:
 14540                           	opt callstack 0
 14541                           
 14542 ;; *************** function _display_info *****************
 14543 ;; Defined at:
 14544 ;;		line 220 in file "mconfig.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1  [STACK] enum E16699
 14551 ;; Registers used:
 14552 ;;		btemp
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:    3
 14565 ;; This function calls:
 14566 ;;		Nothing
 14567 ;; This function is called by:
 14568 ;;		_secs_II_message
 14569 ;;		_check_help
 14570 ;; This function uses a reentrant model
 14571 ;;
 14572                           
 14573                           	psect	text47
 14574  01735A                     __ptext47:
 14575                           	opt callstack 0
 14576  01735A                     _display_info:
 14577                           	opt callstack 25
 14578                           
 14579                           ;mconfig.c: 222:  return V.response.info;
 14580                           
 14581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14582                           ;incstack = 0
 14583  01735A  0063  F104  F038   	movff	_V+371,btemp	;volatile
 14584                           
 14585                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14586  017360  0012               	return		;funcret
 14587  017362                     __end_of_display_info:
 14588                           	opt callstack 0
 14589                           
 14590 ;; *************** function _display_help *****************
 14591 ;; Defined at:
 14592 ;;		line 225 in file "mconfig.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;		None
 14595 ;; Auto vars:     Size  Location     Type
 14596 ;;		None
 14597 ;; Return value:  Size  Location     Type
 14598 ;;                  1  [STACK] enum E16492
 14599 ;; Registers used:
 14600 ;;		btemp
 14601 ;; Tracked objects:
 14602 ;;		On entry : 0/0
 14603 ;;		On exit  : 0/0
 14604 ;;		Unchanged: 0/0
 14605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14610 ;;Total ram usage:        0 bytes
 14611 ;; Hardware stack levels used:    1
 14612 ;; Hardware stack levels required when called:    3
 14613 ;; This function calls:
 14614 ;;		Nothing
 14615 ;; This function is called by:
 14616 ;;		_check_help
 14617 ;; This function uses a reentrant model
 14618 ;;
 14619                           
 14620                           	psect	text48
 14621  017362                     __ptext48:
 14622                           	opt callstack 0
 14623  017362                     _display_help:
 14624                           	opt callstack 26
 14625                           
 14626                           ;mconfig.c: 227:  return V.response.help_temp;
 14627                           
 14628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14629                           ;incstack = 0
 14630  017362  0063  F108  F038   	movff	_V+372,btemp	;volatile
 14631                           
 14632                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14633  017368  0012               	return		;funcret
 14634  01736A                     __end_of_display_help:
 14635                           	opt callstack 0
 14636                           
 14637 ;; *************** function _SYSTEM_Initialize *****************
 14638 ;; Defined at:
 14639 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14640 ;; Parameters:    Size  Location     Type
 14641 ;;		None
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;		None
 14644 ;; Return value:  Size  Location     Type
 14645 ;;                  1  [STACK] void 
 14646 ;; Registers used:
 14647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 14648 ;; Tracked objects:
 14649 ;;		On entry : 0/0
 14650 ;;		On exit  : 3F/3C
 14651 ;;		Unchanged: 0/0
 14652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14657 ;;Total ram usage:        0 bytes
 14658 ;; Hardware stack levels used:    1
 14659 ;; Hardware stack levels required when called:    5
 14660 ;; This function calls:
 14661 ;;		_ADCC_Initialize
 14662 ;;		_CLC1_Initialize
 14663 ;;		_CLKREF_Initialize
 14664 ;;		_DMA1_Initialize
 14665 ;;		_DMA2_Initialize
 14666 ;;		_DSM_Initialize
 14667 ;;		_EXT_INT_Initialize
 14668 ;;		_INTERRUPT_Initialize
 14669 ;;		_NCO1_Initialize
 14670 ;;		_OSCILLATOR_Initialize
 14671 ;;		_PIN_MANAGER_Initialize
 14672 ;;		_PMD_Initialize
 14673 ;;		_PWM8_Initialize
 14674 ;;		_SPI1_Initialize
 14675 ;;		_TMR2_Initialize
 14676 ;;		_TMR5_Initialize
 14677 ;;		_TMR6_Initialize
 14678 ;;		_UART1_Initialize
 14679 ;;		_UART2_Initialize
 14680 ;; This function is called by:
 14681 ;;		_main
 14682 ;; This function uses a reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text49
 14686  01669E                     __ptext49:
 14687                           	opt callstack 0
 14688  01669E                     _SYSTEM_Initialize:
 14689                           	opt callstack 25
 14690                           
 14691                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14692                           
 14693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14694                           ;incstack = 0
 14695  01669E  ECB5  F0B1         	call	_INTERRUPT_Initialize	;wreg free
 14696                           
 14697                           ; BSR set to: 57
 14698                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14699  0166A2  EC47  F0B9         	call	_PMD_Initialize	;wreg free
 14700                           
 14701                           ; BSR set to: 57
 14702                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14703  0166A6  EC8C  F0AE         	call	_PIN_MANAGER_Initialize	;wreg free
 14704                           
 14705                           ; BSR set to: 58
 14706                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14707  0166AA  EC3C  F0B9         	call	_OSCILLATOR_Initialize	;wreg free
 14708                           
 14709                           ; BSR set to: 57
 14710                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14711  0166AE  EC9C  F0B3         	call	_ADCC_Initialize	;wreg free
 14712                           
 14713                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 14714  0166B2  ECBB  F0B8         	call	_NCO1_Initialize	;wreg free
 14715                           
 14716                           ; BSR set to: 63
 14717                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 14718  0166B6  ECE5  F0B8         	call	_TMR2_Initialize	;wreg free
 14719                           
 14720                           ; BSR set to: 57
 14721                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 14722  0166BA  EC31  F0B9         	call	_PWM8_Initialize	;wreg free
 14723                           
 14724                           ; BSR set to: 63
 14725                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 14726  0166BE  EC76  F0B3         	call	_EXT_INT_Initialize	;wreg free
 14727                           
 14728                           ; BSR set to: 57
 14729                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 14730  0166C2  EC1A  F0B7         	call	_TMR6_Initialize	;wreg free
 14731                           
 14732                           ;mcc_generated_files/mcc.c: 62:     CLC1_Initialize();
 14733  0166C6  EC2B  F0B8         	call	_CLC1_Initialize	;wreg free
 14734                           
 14735                           ; BSR set to: 60
 14736                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 14737  0166CA  ECC1  F0B3         	call	_TMR5_Initialize	;wreg free
 14738                           
 14739                           ;mcc_generated_files/mcc.c: 64:     DSM_Initialize();
 14740  0166CE  ECC9  F0B8         	call	_DSM_Initialize	;wreg free
 14741                           
 14742                           ; BSR set to: 60
 14743                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 14744  0166D2  ECE8  F0B1         	call	_UART1_Initialize	;wreg free
 14745                           
 14746                           ; BSR set to: 57
 14747                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 14748  0166D6  EC4B  F0B2         	call	_UART2_Initialize	;wreg free
 14749                           
 14750                           ; BSR set to: 57
 14751                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 14752  0166DA  EC26  F0B9         	call	_SPI1_Initialize	;wreg free
 14753                           
 14754                           ; BSR set to: 61
 14755                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 14756  0166DE  EC7A  F0B2         	call	_DMA2_Initialize	;wreg free
 14757                           
 14758                           ; BSR set to: 59
 14759                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 14760  0166E2  EC4C  F0B1         	call	_DMA1_Initialize	;wreg free
 14761                           
 14762                           ; BSR set to: 59
 14763                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 14764  0166E6  EC87  F0B9         	call	_CLKREF_Initialize	;wreg free
 14765                           
 14766                           ; BSR set to: 60
 14767                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14768  0166EA  0012               	return		;funcret
 14769  0166EC                     __end_of_SYSTEM_Initialize:
 14770                           	opt callstack 0
 14771                           
 14772 ;; *************** function _UART2_Initialize *****************
 14773 ;; Defined at:
 14774 ;;		line 78 in file "mcc_generated_files/uart2.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;		None
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1  [STACK] void 
 14781 ;; Registers used:
 14782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14783 ;; Tracked objects:
 14784 ;;		On entry : 3F/39
 14785 ;;		On exit  : 3F/39
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;Total ram usage:        0 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    4
 14795 ;; This function calls:
 14796 ;;		_UART2_SetRxInterruptHandler
 14797 ;;		_UART2_SetTxInterruptHandler
 14798 ;; This function is called by:
 14799 ;;		_SYSTEM_Initialize
 14800 ;; This function uses a reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text50
 14804  016496                     __ptext50:
 14805                           	opt callstack 0
 14806  016496                     _UART2_Initialize:
 14807                           	opt callstack 25
 14808                           
 14809                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 14810                           
 14811                           ; BSR set to: 60
 14812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14813                           ;incstack = 0
 14814  016496  0139               	movlb	57	; () banked
 14815  016498  9596               	bcf	150,2,b	;volatile
 14816                           
 14817                           ; BSR set to: 57
 14818                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 14819  01649A  0E58               	movlw	low _UART2_Receive_ISR
 14820  01649C  6EE6               	movwf	postinc1,c
 14821  01649E  0E71               	movlw	high _UART2_Receive_ISR
 14822  0164A0  6EE6               	movwf	postinc1,c
 14823  0164A2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 14824  0164A4  6EE6               	movwf	postinc1,c
 14825  0164A6  ECDE  F0B6         	call	_UART2_SetRxInterruptHandler	;wreg free
 14826                           
 14827                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 14828  0164AA  0139               	movlb	57	; () banked
 14829  0164AC  9796               	bcf	150,3,b	;volatile
 14830                           
 14831                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 14832  0164AE  0E4C               	movlw	low _UART2_Transmit_ISR
 14833  0164B0  6EE6               	movwf	postinc1,c
 14834  0164B2  0E6C               	movlw	high _UART2_Transmit_ISR
 14835  0164B4  6EE6               	movwf	postinc1,c
 14836  0164B6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 14837  0164B8  6EE6               	movwf	postinc1,c
 14838  0164BA  ECCA  F0B6         	call	_UART2_SetTxInterruptHandler	;wreg free
 14839                           
 14840                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 14841  0164BE  013D               	movlb	61	; () banked
 14842  0164C0  6BD4               	clrf	212,b	;volatile
 14843                           
 14844                           ; BSR set to: 61
 14845                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 14846  0164C2  6BD6               	clrf	214,b	;volatile
 14847                           
 14848                           ; BSR set to: 61
 14849                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 14850  0164C4  6BD8               	clrf	216,b	;volatile
 14851                           
 14852                           ; BSR set to: 61
 14853                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 14854  0164C6  0EB0               	movlw	176
 14855  0164C8  6FDA               	movwf	218,b	;volatile
 14856                           
 14857                           ; BSR set to: 61
 14858                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 14859  0164CA  0E80               	movlw	128
 14860  0164CC  6FDB               	movwf	219,b	;volatile
 14861                           
 14862                           ; BSR set to: 61
 14863                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 14864  0164CE  6BDC               	clrf	220,b	;volatile
 14865                           
 14866                           ; BSR set to: 61
 14867                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 14868  0164D0  0E82               	movlw	130
 14869  0164D2  6FDD               	movwf	221,b	;volatile
 14870                           
 14871                           ; BSR set to: 61
 14872                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 14873  0164D4  0E06               	movlw	6
 14874  0164D6  6FDE               	movwf	222,b	;volatile
 14875                           
 14876                           ; BSR set to: 61
 14877                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 14878  0164D8  6BDF               	clrf	223,b	;volatile
 14879                           
 14880                           ; BSR set to: 61
 14881                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 14882  0164DA  6BE0               	clrf	224,b	;volatile
 14883                           
 14884                           ; BSR set to: 61
 14885                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 14886  0164DC  6BE1               	clrf	225,b	;volatile
 14887                           
 14888                           ; BSR set to: 61
 14889                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 14890  0164DE  6BE2               	clrf	226,b	;volatile
 14891                           
 14892                           ; BSR set to: 61
 14893                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 14894  0164E0  6A2A               	clrf	_uart2TxHead,c	;volatile
 14895                           
 14896                           ; BSR set to: 61
 14897                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 14898  0164E2  6A29               	clrf	_uart2TxTail,c	;volatile
 14899                           
 14900                           ; BSR set to: 61
 14901                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 14902  0164E4  0E40               	movlw	64
 14903  0164E6  6E28               	movwf	_uart2TxBufferRemaining,c	;volatile
 14904                           
 14905                           ; BSR set to: 61
 14906                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 14907  0164E8  6A27               	clrf	_uart2RxHead,c	;volatile
 14908                           
 14909                           ; BSR set to: 61
 14910                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 14911  0164EA  6A26               	clrf	_uart2RxTail,c	;volatile
 14912                           
 14913                           ; BSR set to: 61
 14914                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 14915  0164EC  6A25               	clrf	_uart2RxCount,c	;volatile
 14916                           
 14917                           ; BSR set to: 61
 14918                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 14919  0164EE  0139               	movlb	57	; () banked
 14920  0164F0  8596               	bsf	150,2,b	;volatile
 14921                           
 14922                           ; BSR set to: 57
 14923                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14924  0164F2  0012               	return		;funcret
 14925  0164F4                     __end_of_UART2_Initialize:
 14926                           	opt callstack 0
 14927                           
 14928 ;; *************** function _UART2_SetTxInterruptHandler *****************
 14929 ;; Defined at:
 14930 ;;		line 252 in file "mcc_generated_files/uart2.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14933 ;;		 -> UART2_Transmit_ISR(1), 
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;		None
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1  [STACK] void 
 14938 ;; Registers used:
 14939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14940 ;; Tracked objects:
 14941 ;;		On entry : 3F/39
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;Total ram usage:        0 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:    3
 14952 ;; This function calls:
 14953 ;;		Nothing
 14954 ;; This function is called by:
 14955 ;;		_UART2_Initialize
 14956 ;; This function uses a reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text51
 14960  016D94                     __ptext51:
 14961                           	opt callstack 0
 14962  016D94                     _UART2_SetTxInterruptHandler:
 14963                           	opt callstack 25
 14964                           
 14965                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 14966                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14967                           
 14968                           ; BSR set to: 57
 14969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14970                           ;incstack = 0
 14971  016D94  50E1               	movf	fsr1l,w,c
 14972  016D96  0FFD               	addlw	-3
 14973  016D98  6ED9               	movwf	fsr2l,c
 14974  016D9A  50E2               	movf	fsr1h,w,c
 14975  016D9C  6EDA               	movwf	fsr2h,c
 14976  016D9E  0EFF               	movlw	255
 14977  016DA0  22DA               	addwfc	fsr2h,f,c
 14978  016DA2  006F FF78  F001    	movff	postinc2,_UART2_TxInterruptHandler
 14979  016DA8  006F FF78  F002    	movff	postinc2,_UART2_TxInterruptHandler+1
 14980  016DAE  006F FF74  F003    	movff	postdec2,_UART2_TxInterruptHandler+2
 14981                           
 14982                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14983  016DB4  52E5               	movf	postdec1,f,c
 14984  016DB6  52E5               	movf	postdec1,f,c
 14985  016DB8  52E5               	movf	postdec1,f,c
 14986  016DBA  0012               	return		;funcret
 14987  016DBC                     __end_of_UART2_SetTxInterruptHandler:
 14988                           	opt callstack 0
 14989                           
 14990 ;; *************** function _UART2_SetRxInterruptHandler *****************
 14991 ;; Defined at:
 14992 ;;		line 248 in file "mcc_generated_files/uart2.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14995 ;;		 -> UART2_Receive_ISR(1), 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1  [STACK] void 
 15000 ;; Registers used:
 15001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15002 ;; Tracked objects:
 15003 ;;		On entry : 3F/39
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:    3
 15014 ;; This function calls:
 15015 ;;		Nothing
 15016 ;; This function is called by:
 15017 ;;		_UART2_Initialize
 15018 ;; This function uses a reentrant model
 15019 ;;
 15020                           
 15021                           	psect	text52
 15022  016DBC                     __ptext52:
 15023                           	opt callstack 0
 15024  016DBC                     _UART2_SetRxInterruptHandler:
 15025                           	opt callstack 25
 15026                           
 15027                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 15028                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15029                           
 15030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15031                           ;incstack = 0
 15032  016DBC  50E1               	movf	fsr1l,w,c
 15033  016DBE  0FFD               	addlw	-3
 15034  016DC0  6ED9               	movwf	fsr2l,c
 15035  016DC2  50E2               	movf	fsr1h,w,c
 15036  016DC4  6EDA               	movwf	fsr2h,c
 15037  016DC6  0EFF               	movlw	255
 15038  016DC8  22DA               	addwfc	fsr2h,f,c
 15039  016DCA  006F FF78  F004    	movff	postinc2,_UART2_RxInterruptHandler
 15040  016DD0  006F FF78  F005    	movff	postinc2,_UART2_RxInterruptHandler+1
 15041  016DD6  006F FF74  F006    	movff	postdec2,_UART2_RxInterruptHandler+2
 15042                           
 15043                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15044  016DDC  52E5               	movf	postdec1,f,c
 15045  016DDE  52E5               	movf	postdec1,f,c
 15046  016DE0  52E5               	movf	postdec1,f,c
 15047  016DE2  0012               	return		;funcret
 15048  016DE4                     __end_of_UART2_SetRxInterruptHandler:
 15049                           	opt callstack 0
 15050                           
 15051 ;; *************** function _UART1_Initialize *****************
 15052 ;; Defined at:
 15053 ;;		line 79 in file "mcc_generated_files/uart1.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;		None
 15056 ;; Auto vars:     Size  Location     Type
 15057 ;;		None
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  1  [STACK] void 
 15060 ;; Registers used:
 15061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15062 ;; Tracked objects:
 15063 ;;		On entry : 3F/3C
 15064 ;;		On exit  : 3F/39
 15065 ;;		Unchanged: 0/0
 15066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;Total ram usage:        0 bytes
 15072 ;; Hardware stack levels used:    1
 15073 ;; Hardware stack levels required when called:    4
 15074 ;; This function calls:
 15075 ;;		_UART1_SetRxInterruptHandler
 15076 ;;		_UART1_SetTxInterruptHandler
 15077 ;; This function is called by:
 15078 ;;		_SYSTEM_Initialize
 15079 ;; This function uses a reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text53
 15083  0163D0                     __ptext53:
 15084                           	opt callstack 0
 15085  0163D0                     _UART1_Initialize:
 15086                           	opt callstack 25
 15087                           
 15088                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 15089                           
 15090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15091                           ;incstack = 0
 15092  0163D0  0139               	movlb	57	; () banked
 15093  0163D2  9793               	bcf	147,3,b	;volatile
 15094                           
 15095                           ; BSR set to: 57
 15096                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 15097  0163D4  0E3A               	movlw	low _UART1_Receive_ISR
 15098  0163D6  6EE6               	movwf	postinc1,c
 15099  0163D8  0E71               	movlw	high _UART1_Receive_ISR
 15100  0163DA  6EE6               	movwf	postinc1,c
 15101  0163DC  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 15102  0163DE  6EE6               	movwf	postinc1,c
 15103  0163E0  EC06  F0B7         	call	_UART1_SetRxInterruptHandler	;wreg free
 15104                           
 15105                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 15106  0163E4  0139               	movlb	57	; () banked
 15107  0163E6  9993               	bcf	147,4,b	;volatile
 15108                           
 15109                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 15110  0163E8  0E20               	movlw	low _UART1_Transmit_ISR
 15111  0163EA  6EE6               	movwf	postinc1,c
 15112  0163EC  0E6C               	movlw	high _UART1_Transmit_ISR
 15113  0163EE  6EE6               	movwf	postinc1,c
 15114  0163F0  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 15115  0163F2  6EE6               	movwf	postinc1,c
 15116  0163F4  ECF2  F0B6         	call	_UART1_SetTxInterruptHandler	;wreg free
 15117                           
 15118                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 15119  0163F8  013D               	movlb	61	; () banked
 15120  0163FA  6BEC               	clrf	236,b	;volatile
 15121                           
 15122                           ; BSR set to: 61
 15123                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 15124  0163FC  6BED               	clrf	237,b	;volatile
 15125                           
 15126                           ; BSR set to: 61
 15127                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 15128  0163FE  6BEE               	clrf	238,b	;volatile
 15129                           
 15130                           ; BSR set to: 61
 15131                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 15132  016400  6BEF               	clrf	239,b	;volatile
 15133                           
 15134                           ; BSR set to: 61
 15135                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 15136  016402  6BF0               	clrf	240,b	;volatile
 15137                           
 15138                           ; BSR set to: 61
 15139                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 15140  016404  6BF1               	clrf	241,b	;volatile
 15141                           
 15142                           ; BSR set to: 61
 15143                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 15144  016406  0EB0               	movlw	176
 15145  016408  6FF2               	movwf	242,b	;volatile
 15146                           
 15147                           ; BSR set to: 61
 15148                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 15149  01640A  0E80               	movlw	128
 15150  01640C  6FF3               	movwf	243,b	;volatile
 15151                           
 15152                           ; BSR set to: 61
 15153                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 15154  01640E  6BF4               	clrf	244,b	;volatile
 15155                           
 15156                           ; BSR set to: 61
 15157                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 15158  016410  0E82               	movlw	130
 15159  016412  6FF5               	movwf	245,b	;volatile
 15160                           
 15161                           ; BSR set to: 61
 15162                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 15163  016414  0E06               	movlw	6
 15164  016416  6FF6               	movwf	246,b	;volatile
 15165                           
 15166                           ; BSR set to: 61
 15167                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 15168  016418  6BF7               	clrf	247,b	;volatile
 15169                           
 15170                           ; BSR set to: 61
 15171                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 15172  01641A  6BF8               	clrf	248,b	;volatile
 15173                           
 15174                           ; BSR set to: 61
 15175                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 15176  01641C  6BF9               	clrf	249,b	;volatile
 15177                           
 15178                           ; BSR set to: 61
 15179                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 15180  01641E  6BFA               	clrf	250,b	;volatile
 15181                           
 15182                           ; BSR set to: 61
 15183                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 15184  016420  6A30               	clrf	_uart1TxHead,c	;volatile
 15185                           
 15186                           ; BSR set to: 61
 15187                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 15188  016422  6A2F               	clrf	_uart1TxTail,c	;volatile
 15189                           
 15190                           ; BSR set to: 61
 15191                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 15192  016424  0E40               	movlw	64
 15193  016426  6E2E               	movwf	_uart1TxBufferRemaining,c	;volatile
 15194                           
 15195                           ; BSR set to: 61
 15196                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 15197  016428  6A2D               	clrf	_uart1RxHead,c	;volatile
 15198                           
 15199                           ; BSR set to: 61
 15200                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 15201  01642A  6A2C               	clrf	_uart1RxTail,c	;volatile
 15202                           
 15203                           ; BSR set to: 61
 15204                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 15205  01642C  6A2B               	clrf	_uart1RxCount,c	;volatile
 15206                           
 15207                           ; BSR set to: 61
 15208                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 15209  01642E  0139               	movlb	57	; () banked
 15210  016430  8793               	bsf	147,3,b	;volatile
 15211                           
 15212                           ; BSR set to: 57
 15213                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 15214  016432  0012               	return		;funcret
 15215  016434                     __end_of_UART1_Initialize:
 15216                           	opt callstack 0
 15217                           
 15218 ;; *************** function _UART1_SetTxInterruptHandler *****************
 15219 ;; Defined at:
 15220 ;;		line 247 in file "mcc_generated_files/uart1.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15223 ;;		 -> UART1_Transmit_ISR(1), 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1  [STACK] void 
 15228 ;; Registers used:
 15229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15230 ;; Tracked objects:
 15231 ;;		On entry : 3F/39
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15239 ;;Total ram usage:        0 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    3
 15242 ;; This function calls:
 15243 ;;		Nothing
 15244 ;; This function is called by:
 15245 ;;		_UART1_Initialize
 15246 ;; This function uses a reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text54
 15250  016DE4                     __ptext54:
 15251                           	opt callstack 0
 15252  016DE4                     _UART1_SetTxInterruptHandler:
 15253                           	opt callstack 25
 15254                           
 15255                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 15256                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15257                           
 15258                           ; BSR set to: 57
 15259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15260                           ;incstack = 0
 15261  016DE4  50E1               	movf	fsr1l,w,c
 15262  016DE6  0FFD               	addlw	-3
 15263  016DE8  6ED9               	movwf	fsr2l,c
 15264  016DEA  50E2               	movf	fsr1h,w,c
 15265  016DEC  6EDA               	movwf	fsr2h,c
 15266  016DEE  0EFF               	movlw	255
 15267  016DF0  22DA               	addwfc	fsr2h,f,c
 15268  016DF2  006F FF78  F0A5    	movff	postinc2,_UART1_TxInterruptHandler
 15269  016DF8  006F FF78  F0A6    	movff	postinc2,_UART1_TxInterruptHandler+1
 15270  016DFE  006F FF74  F0A7    	movff	postdec2,_UART1_TxInterruptHandler+2
 15271                           
 15272                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15273  016E04  52E5               	movf	postdec1,f,c
 15274  016E06  52E5               	movf	postdec1,f,c
 15275  016E08  52E5               	movf	postdec1,f,c
 15276  016E0A  0012               	return		;funcret
 15277  016E0C                     __end_of_UART1_SetTxInterruptHandler:
 15278                           	opt callstack 0
 15279                           
 15280 ;; *************** function _UART1_SetRxInterruptHandler *****************
 15281 ;; Defined at:
 15282 ;;		line 242 in file "mcc_generated_files/uart1.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15285 ;;		 -> UART1_Receive_ISR(1), 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1  [STACK] void 
 15290 ;; Registers used:
 15291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15292 ;; Tracked objects:
 15293 ;;		On entry : 3F/39
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15301 ;;Total ram usage:        0 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; Hardware stack levels required when called:    3
 15304 ;; This function calls:
 15305 ;;		Nothing
 15306 ;; This function is called by:
 15307 ;;		_UART1_Initialize
 15308 ;; This function uses a reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text55
 15312  016E0C                     __ptext55:
 15313                           	opt callstack 0
 15314  016E0C                     _UART1_SetRxInterruptHandler:
 15315                           	opt callstack 25
 15316                           
 15317                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 15318                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15319                           
 15320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15321                           ;incstack = 0
 15322  016E0C  50E1               	movf	fsr1l,w,c
 15323  016E0E  0FFD               	addlw	-3
 15324  016E10  6ED9               	movwf	fsr2l,c
 15325  016E12  50E2               	movf	fsr1h,w,c
 15326  016E14  6EDA               	movwf	fsr2h,c
 15327  016E16  0EFF               	movlw	255
 15328  016E18  22DA               	addwfc	fsr2h,f,c
 15329  016E1A  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler
 15330  016E20  006F FF78  F0A9    	movff	postinc2,_UART1_RxInterruptHandler+1
 15331  016E26  006F FF74  F0AA    	movff	postdec2,_UART1_RxInterruptHandler+2
 15332                           
 15333                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15334  016E2C  52E5               	movf	postdec1,f,c
 15335  016E2E  52E5               	movf	postdec1,f,c
 15336  016E30  52E5               	movf	postdec1,f,c
 15337  016E32  0012               	return		;funcret
 15338  016E34                     __end_of_UART1_SetRxInterruptHandler:
 15339                           	opt callstack 0
 15340                           
 15341 ;; *************** function _TMR6_Initialize *****************
 15342 ;; Defined at:
 15343 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;		None
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;		None
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  1  [STACK] void 
 15350 ;; Registers used:
 15351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15352 ;; Tracked objects:
 15353 ;;		On entry : 3F/39
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15361 ;;Total ram usage:        0 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:    4
 15364 ;; This function calls:
 15365 ;;		_TMR6_SetInterruptHandler
 15366 ;; This function is called by:
 15367 ;;		_SYSTEM_Initialize
 15368 ;; This function uses a reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text56
 15372  016E34                     __ptext56:
 15373                           	opt callstack 0
 15374  016E34                     _TMR6_Initialize:
 15375                           	opt callstack 25
 15376                           
 15377                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 15378                           
 15379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15380                           ;incstack = 0
 15381  016E34  0E01               	movlw	1
 15382  016E36  6E96               	movwf	16278,c	;volatile
 15383                           
 15384                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 15385  016E38  6A95               	clrf	16277,c	;volatile
 15386                           
 15387                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 15388  016E3A  6A97               	clrf	16279,c	;volatile
 15389                           
 15390                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 15391  016E3C  0E03               	movlw	3
 15392  016E3E  6E93               	movwf	16275,c	;volatile
 15393                           
 15394                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 15395  016E40  6A92               	clrf	16274,c	;volatile
 15396                           
 15397                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 15398  016E42  0139               	movlb	57	; () banked
 15399  016E44  91A9               	bcf	169,0,b	;volatile
 15400                           
 15401                           ; BSR set to: 57
 15402                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 15403  016E46  8199               	bsf	153,0,b	;volatile
 15404                           
 15405                           ; BSR set to: 57
 15406                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 15407  016E48  0E0E               	movlw	low _TMR6_DefaultInterruptHandler
 15408  016E4A  6EE6               	movwf	postinc1,c
 15409  016E4C  0E68               	movlw	high _TMR6_DefaultInterruptHandler
 15410  016E4E  6EE6               	movwf	postinc1,c
 15411  016E50  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15412  016E52  6EE6               	movwf	postinc1,c
 15413  016E54  EC2E  F0B7         	call	_TMR6_SetInterruptHandler	;wreg free
 15414                           
 15415                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 15416  016E58  6894               	setf	16276,c	;volatile
 15417                           
 15418                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15419  016E5A  0012               	return		;funcret
 15420  016E5C                     __end_of_TMR6_Initialize:
 15421                           	opt callstack 0
 15422                           
 15423 ;; *************** function _TMR6_SetInterruptHandler *****************
 15424 ;; Defined at:
 15425 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15428 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 15429 ;; Auto vars:     Size  Location     Type
 15430 ;;		None
 15431 ;; Return value:  Size  Location     Type
 15432 ;;                  1  [STACK] void 
 15433 ;; Registers used:
 15434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15435 ;; Tracked objects:
 15436 ;;		On entry : 3F/39
 15437 ;;		On exit  : 0/0
 15438 ;;		Unchanged: 0/0
 15439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15444 ;;Total ram usage:        0 bytes
 15445 ;; Hardware stack levels used:    1
 15446 ;; Hardware stack levels required when called:    3
 15447 ;; This function calls:
 15448 ;;		Nothing
 15449 ;; This function is called by:
 15450 ;;		_TMR6_Initialize
 15451 ;; This function uses a reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text57
 15455  016E5C                     __ptext57:
 15456                           	opt callstack 0
 15457  016E5C                     _TMR6_SetInterruptHandler:
 15458                           	opt callstack 25
 15459                           
 15460                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 15461                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15462                           
 15463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15464                           ;incstack = 0
 15465  016E5C  50E1               	movf	fsr1l,w,c
 15466  016E5E  0FFD               	addlw	-3
 15467  016E60  6ED9               	movwf	fsr2l,c
 15468  016E62  50E2               	movf	fsr1h,w,c
 15469  016E64  6EDA               	movwf	fsr2h,c
 15470  016E66  0EFF               	movlw	255
 15471  016E68  22DA               	addwfc	fsr2h,f,c
 15472  016E6A  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler
 15473  016E70  006F FF78  F0A0    	movff	postinc2,_TMR6_InterruptHandler+1
 15474  016E76  006F FF74  F0A1    	movff	postdec2,_TMR6_InterruptHandler+2
 15475                           
 15476                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15477  016E7C  52E5               	movf	postdec1,f,c
 15478  016E7E  52E5               	movf	postdec1,f,c
 15479  016E80  52E5               	movf	postdec1,f,c
 15480  016E82  0012               	return		;funcret
 15481  016E84                     __end_of_TMR6_SetInterruptHandler:
 15482                           	opt callstack 0
 15483                           
 15484 ;; *************** function _TMR5_Initialize *****************
 15485 ;; Defined at:
 15486 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1  [STACK] void 
 15493 ;; Registers used:
 15494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 15495 ;; Tracked objects:
 15496 ;;		On entry : 3F/3C
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:    4
 15507 ;; This function calls:
 15508 ;;		_TMR5_SetInterruptHandler
 15509 ;; This function is called by:
 15510 ;;		_SYSTEM_Initialize
 15511 ;; This function uses a reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text58
 15515  016782                     __ptext58:
 15516                           	opt callstack 0
 15517  016782                     _TMR5_Initialize:
 15518                           	opt callstack 25
 15519                           
 15520                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 15521                           
 15522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15523                           ;incstack = 0
 15524  016782  6A9B               	clrf	16283,c	;volatile
 15525                           
 15526                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 15527  016784  6A9C               	clrf	16284,c	;volatile
 15528                           
 15529                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 15530  016786  0E01               	movlw	1
 15531  016788  6E9D               	movwf	16285,c	;volatile
 15532                           
 15533                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 15534  01678A  0E63               	movlw	99
 15535  01678C  6E99               	movwf	16281,c	;volatile
 15536                           
 15537                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 15538  01678E  0EC0               	movlw	192
 15539  016790  6E98               	movwf	16280,c	;volatile
 15540                           
 15541                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 15542  016792  5098               	movf	16280,w,c	;volatile
 15543  016794  006F FE64  F038    	movff	16281,btemp	;volatile
 15544  01679A  6A39               	clrf	btemp+1,c
 15545  01679C  0060  F0E0  F039   	movff	btemp,btemp+1
 15546  0167A2  6A38               	clrf	btemp,c
 15547  0167A4  1038               	iorwf	btemp,w,c
 15548  0167A6  6E1C               	movwf	_timer5ReloadVal,c	;volatile
 15549  0167A8  5039               	movf	btemp+1,w,c
 15550  0167AA  6E1D               	movwf	_timer5ReloadVal+1,c	;volatile
 15551                           
 15552                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 15553  0167AC  0139               	movlb	57	; () banked
 15554  0167AE  9DA8               	bcf	168,6,b	;volatile
 15555                           
 15556                           ; BSR set to: 57
 15557                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 15558  0167B0  8D98               	bsf	152,6,b	;volatile
 15559                           
 15560                           ; BSR set to: 57
 15561                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 15562  0167B2  0E1A               	movlw	low _TMR5_DefaultInterruptHandler
 15563  0167B4  6EE6               	movwf	postinc1,c
 15564  0167B6  0E72               	movlw	high _TMR5_DefaultInterruptHandler
 15565  0167B8  6EE6               	movwf	postinc1,c
 15566  0167BA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15567  0167BC  6EE6               	movwf	postinc1,c
 15568  0167BE  EC42  F0B7         	call	_TMR5_SetInterruptHandler	;wreg free
 15569                           
 15570                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 15571  0167C2  0E31               	movlw	49
 15572  0167C4  6E9A               	movwf	16282,c	;volatile
 15573                           
 15574                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15575  0167C6  0012               	return		;funcret
 15576  0167C8                     __end_of_TMR5_Initialize:
 15577                           	opt callstack 0
 15578                           
 15579 ;; *************** function _TMR5_SetInterruptHandler *****************
 15580 ;; Defined at:
 15581 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 15582 ;; Parameters:    Size  Location     Type
 15583 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15584 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;		None
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  1  [STACK] void 
 15589 ;; Registers used:
 15590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15591 ;; Tracked objects:
 15592 ;;		On entry : 3F/39
 15593 ;;		On exit  : 0/0
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15600 ;;Total ram usage:        0 bytes
 15601 ;; Hardware stack levels used:    1
 15602 ;; Hardware stack levels required when called:    3
 15603 ;; This function calls:
 15604 ;;		Nothing
 15605 ;; This function is called by:
 15606 ;;		_TMR5_Initialize
 15607 ;; This function uses a reentrant model
 15608 ;;
 15609                           
 15610                           	psect	text59
 15611  016E84                     __ptext59:
 15612                           	opt callstack 0
 15613  016E84                     _TMR5_SetInterruptHandler:
 15614                           	opt callstack 25
 15615                           
 15616                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 15617                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15618                           
 15619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15620                           ;incstack = 0
 15621  016E84  50E1               	movf	fsr1l,w,c
 15622  016E86  0FFD               	addlw	-3
 15623  016E88  6ED9               	movwf	fsr2l,c
 15624  016E8A  50E2               	movf	fsr1h,w,c
 15625  016E8C  6EDA               	movwf	fsr2h,c
 15626  016E8E  0EFF               	movlw	255
 15627  016E90  22DA               	addwfc	fsr2h,f,c
 15628  016E92  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler
 15629  016E98  006F FF78  F09D    	movff	postinc2,_TMR5_InterruptHandler+1
 15630  016E9E  006F FF74  F09E    	movff	postdec2,_TMR5_InterruptHandler+2
 15631                           
 15632                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15633  016EA4  52E5               	movf	postdec1,f,c
 15634  016EA6  52E5               	movf	postdec1,f,c
 15635  016EA8  52E5               	movf	postdec1,f,c
 15636  016EAA  0012               	return		;funcret
 15637  016EAC                     __end_of_TMR5_SetInterruptHandler:
 15638                           	opt callstack 0
 15639                           
 15640 ;; *************** function _TMR2_Initialize *****************
 15641 ;; Defined at:
 15642 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;		None
 15645 ;; Auto vars:     Size  Location     Type
 15646 ;;		None
 15647 ;; Return value:  Size  Location     Type
 15648 ;;                  1  [STACK] void 
 15649 ;; Registers used:
 15650 ;;		wreg, status,2
 15651 ;; Tracked objects:
 15652 ;;		On entry : 3F/3F
 15653 ;;		On exit  : 3F/39
 15654 ;;		Unchanged: 0/0
 15655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15660 ;;Total ram usage:        0 bytes
 15661 ;; Hardware stack levels used:    1
 15662 ;; Hardware stack levels required when called:    3
 15663 ;; This function calls:
 15664 ;;		Nothing
 15665 ;; This function is called by:
 15666 ;;		_SYSTEM_Initialize
 15667 ;; This function uses a reentrant model
 15668 ;;
 15669                           
 15670                           	psect	text60
 15671  0171CA                     __ptext60:
 15672                           	opt callstack 0
 15673  0171CA                     _TMR2_Initialize:
 15674                           	opt callstack 26
 15675                           
 15676                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 15677                           
 15678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15679                           ;incstack = 0
 15680  0171CA  0E01               	movlw	1
 15681  0171CC  6EAE               	movwf	16302,c	;volatile
 15682                           
 15683                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15684  0171CE  6AAD               	clrf	16301,c	;volatile
 15685                           
 15686                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 15687  0171D0  0E11               	movlw	17
 15688  0171D2  6EAF               	movwf	16303,c	;volatile
 15689                           
 15690                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 15691  0171D4  0E63               	movlw	99
 15692  0171D6  6EAB               	movwf	16299,c	;volatile
 15693                           
 15694                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15695  0171D8  6AAA               	clrf	16298,c	;volatile
 15696                           
 15697                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15698  0171DA  0139               	movlb	57	; () banked
 15699  0171DC  95A4               	bcf	164,2,b	;volatile
 15700                           
 15701                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 15702  0171DE  0EC0               	movlw	192
 15703  0171E0  6EAC               	movwf	16300,c	;volatile
 15704                           
 15705                           ; BSR set to: 57
 15706                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15707  0171E2  0012               	return		;funcret
 15708  0171E4                     __end_of_TMR2_Initialize:
 15709                           	opt callstack 0
 15710                           
 15711 ;; *************** function _SPI1_Initialize *****************
 15712 ;; Defined at:
 15713 ;;		line 64 in file "mcc_generated_files/spi1.c"
 15714 ;; Parameters:    Size  Location     Type
 15715 ;;		None
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;		None
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  1  [STACK] void 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2
 15722 ;; Tracked objects:
 15723 ;;		On entry : 3F/39
 15724 ;;		On exit  : 3F/3D
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15731 ;;Total ram usage:        0 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    3
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_SYSTEM_Initialize
 15738 ;; This function uses a reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text61
 15742  01724C                     __ptext61:
 15743                           	opt callstack 0
 15744  01724C                     _SPI1_Initialize:
 15745                           	opt callstack 26
 15746                           
 15747                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 15748                           
 15749                           ; BSR set to: 57
 15750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15751                           ;incstack = 0
 15752  01724C  0E40               	movlw	64
 15753  01724E  013D               	movlb	61	; () banked
 15754  017250  6F15               	movwf	21,b	;volatile
 15755                           
 15756                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 15757  017252  0E03               	movlw	3
 15758  017254  6F16               	movwf	22,b	;volatile
 15759                           
 15760                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 15761  017256  0E4F               	movlw	79
 15762  017258  6F19               	movwf	25,b	;volatile
 15763                           
 15764                           ; BSR set to: 61
 15765                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 15766  01725A  6B1C               	clrf	28,b	;volatile
 15767                           
 15768                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 15769  01725C  0E83               	movlw	131
 15770  01725E  6F14               	movwf	20,b	;volatile
 15771                           
 15772                           ; BSR set to: 61
 15773                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15774  017260  0012               	return		;funcret
 15775  017262                     __end_of_SPI1_Initialize:
 15776                           	opt callstack 0
 15777                           
 15778 ;; *************** function _PWM8_Initialize *****************
 15779 ;; Defined at:
 15780 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1  [STACK] void 
 15787 ;; Registers used:
 15788 ;;		wreg, status,2
 15789 ;; Tracked objects:
 15790 ;;		On entry : 3F/39
 15791 ;;		On exit  : 3F/3F
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15798 ;;Total ram usage:        0 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; Hardware stack levels required when called:    3
 15801 ;; This function calls:
 15802 ;;		Nothing
 15803 ;; This function is called by:
 15804 ;;		_SYSTEM_Initialize
 15805 ;; This function uses a reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text62
 15809  017262                     __ptext62:
 15810                           	opt callstack 0
 15811  017262                     _PWM8_Initialize:
 15812                           	opt callstack 26
 15813                           
 15814                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 15815                           
 15816                           ; BSR set to: 61
 15817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15818                           ;incstack = 0
 15819  017262  0E80               	movlw	128
 15820  017264  6E62               	movwf	16226,c	;volatile
 15821                           
 15822                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 15823  017266  6A61               	clrf	16225,c	;volatile
 15824                           
 15825                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 15826  017268  0E40               	movlw	64
 15827  01726A  6E60               	movwf	16224,c	;volatile
 15828                           
 15829                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 15830  01726C  013F               	movlb	63	; () banked
 15831  01726E  515F               	movf	95,w,b	;volatile
 15832  017270  0B3F               	andlw	-193
 15833  017272  0940               	iorlw	64
 15834  017274  6F5F               	movwf	95,b	;volatile
 15835                           
 15836                           ; BSR set to: 63
 15837                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15838  017276  0012               	return		;funcret
 15839  017278                     __end_of_PWM8_Initialize:
 15840                           	opt callstack 0
 15841                           
 15842 ;; *************** function _PMD_Initialize *****************
 15843 ;; Defined at:
 15844 ;;		line 91 in file "mcc_generated_files/mcc.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;		None
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;		None
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1  [STACK] void 
 15851 ;; Registers used:
 15852 ;;		None
 15853 ;; Tracked objects:
 15854 ;;		On entry : 3F/39
 15855 ;;		On exit  : 3F/39
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15862 ;;Total ram usage:        0 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:    3
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_SYSTEM_Initialize
 15869 ;; This function uses a reentrant model
 15870 ;;
 15871                           
 15872                           	psect	text63
 15873  01728E                     __ptext63:
 15874                           	opt callstack 0
 15875  01728E                     _PMD_Initialize:
 15876                           	opt callstack 26
 15877                           
 15878                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 15879                           
 15880                           ; BSR set to: 63
 15881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15882                           ;incstack = 0
 15883  01728E  0139               	movlb	57	; () banked
 15884  017290  6BC0               	clrf	192,b	;volatile
 15885                           
 15886                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 15887  017292  6BC1               	clrf	193,b	;volatile
 15888                           
 15889                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 15890  017294  6BC2               	clrf	194,b	;volatile
 15891                           
 15892                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 15893  017296  6BC3               	clrf	195,b	;volatile
 15894                           
 15895                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 15896  017298  6BC4               	clrf	196,b	;volatile
 15897                           
 15898                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 15899  01729A  6BC5               	clrf	197,b	;volatile
 15900                           
 15901                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 15902  01729C  6BC6               	clrf	198,b	;volatile
 15903                           
 15904                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 15905  01729E  6BC7               	clrf	199,b	;volatile
 15906                           
 15907                           ; BSR set to: 57
 15908                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15909  0172A0  0012               	return		;funcret
 15910  0172A2                     __end_of_PMD_Initialize:
 15911                           	opt callstack 0
 15912                           
 15913 ;; *************** function _PIN_MANAGER_Initialize *****************
 15914 ;; Defined at:
 15915 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15916 ;; Parameters:    Size  Location     Type
 15917 ;;		None
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1  [STACK] void 
 15922 ;; Registers used:
 15923 ;;		wreg, status,2
 15924 ;; Tracked objects:
 15925 ;;		On entry : 3F/39
 15926 ;;		On exit  : 3F/3A
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15933 ;;Total ram usage:        0 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:    3
 15936 ;; This function calls:
 15937 ;;		Nothing
 15938 ;; This function is called by:
 15939 ;;		_SYSTEM_Initialize
 15940 ;; This function uses a reentrant model
 15941 ;;
 15942                           
 15943                           	psect	text64
 15944  015D18                     __ptext64:
 15945                           	opt callstack 0
 15946  015D18                     _PIN_MANAGER_Initialize:
 15947                           	opt callstack 26
 15948                           
 15949                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 15950                           
 15951                           ; BSR set to: 57
 15952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15953                           ;incstack = 0
 15954  015D18  0E07               	movlw	7
 15955  015D1A  6EBE               	movwf	16318,c	;volatile
 15956                           
 15957                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 15958  015D1C  6ABD               	clrf	16317,c	;volatile
 15959                           
 15960                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 15961  015D1E  6ABA               	clrf	16314,c	;volatile
 15962                           
 15963                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 15964  015D20  6ABF               	clrf	16319,c	;volatile
 15965                           
 15966                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 15967  015D22  6ABB               	clrf	16315,c	;volatile
 15968                           
 15969                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 15970  015D24  0E06               	movlw	6
 15971  015D26  6EBC               	movwf	16316,c	;volatile
 15972                           
 15973                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 15974  015D28  6AC6               	clrf	16326,c	;volatile
 15975                           
 15976                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 15977  015D2A  0E0F               	movlw	15
 15978  015D2C  6EC7               	movwf	16327,c	;volatile
 15979                           
 15980                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 15981  015D2E  0E8F               	movlw	143
 15982  015D30  6EC2               	movwf	16322,c	;volatile
 15983                           
 15984                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0x8F;
 15985  015D32  0E8F               	movlw	143
 15986  015D34  6EC3               	movwf	16323,c	;volatile
 15987                           
 15988                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 15989  015D36  0E91               	movlw	145
 15990  015D38  6EC4               	movwf	16324,c	;volatile
 15991                           
 15992                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 15993  015D3A  0E0C               	movlw	12
 15994  015D3C  6EC5               	movwf	16325,c	;volatile
 15995                           
 15996                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 15997  015D3E  013A               	movlb	58	; () banked
 15998  015D40  6B70               	clrf	112,b	;volatile
 15999                           
 16000                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 16001  015D42  0E01               	movlw	1
 16002  015D44  6F60               	movwf	96,b	;volatile
 16003                           
 16004                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x08;
 16005  015D46  0E08               	movlw	8
 16006  015D48  6F50               	movwf	80,b	;volatile
 16007                           
 16008                           ; BSR set to: 58
 16009                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 16010  015D4A  6B80               	clrf	128,b	;volatile
 16011                           
 16012                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 16013  015D4C  0E0F               	movlw	15
 16014  015D4E  6F90               	movwf	144,b	;volatile
 16015                           
 16016                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 16017  015D50  0E8F               	movlw	143
 16018  015D52  6F40               	movwf	64,b	;volatile
 16019                           
 16020                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 16021  015D54  0EFC               	movlw	252
 16022  015D56  6F71               	movwf	113,b	;volatile
 16023                           
 16024                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 16025  015D58  0EF0               	movlw	240
 16026  015D5A  6F91               	movwf	145,b	;volatile
 16027                           
 16028                           ; BSR set to: 58
 16029                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 16030  015D5C  6B81               	clrf	129,b	;volatile
 16031                           
 16032                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 16033  015D5E  0E87               	movlw	135
 16034  015D60  6F51               	movwf	81,b	;volatile
 16035                           
 16036                           ; BSR set to: 58
 16037                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 16038  015D62  6B41               	clrf	65,b	;volatile
 16039                           
 16040                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 16041  015D64  0E90               	movlw	144
 16042  015D66  6F61               	movwf	97,b	;volatile
 16043                           
 16044                           ; BSR set to: 58
 16045                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 16046  015D68  6B82               	clrf	130,b	;volatile
 16047                           
 16048                           ; BSR set to: 58
 16049                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 16050  015D6A  6B92               	clrf	146,b	;volatile
 16051                           
 16052                           ; BSR set to: 58
 16053                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 16054  015D6C  6B42               	clrf	66,b	;volatile
 16055                           
 16056                           ; BSR set to: 58
 16057                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 16058  015D6E  6B52               	clrf	82,b	;volatile
 16059                           
 16060                           ; BSR set to: 58
 16061                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 16062  015D70  6B62               	clrf	98,b	;volatile
 16063                           
 16064                           ; BSR set to: 58
 16065                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 16066  015D72  6B72               	clrf	114,b	;volatile
 16067                           
 16068                           ; BSR set to: 58
 16069                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 16070  015D74  6943               	setf	67,b	;volatile
 16071                           
 16072                           ; BSR set to: 58
 16073                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 16074  015D76  6953               	setf	83,b	;volatile
 16075                           
 16076                           ; BSR set to: 58
 16077                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 16078  015D78  6963               	setf	99,b	;volatile
 16079                           
 16080                           ; BSR set to: 58
 16081                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 16082  015D7A  6973               	setf	115,b	;volatile
 16083                           
 16084                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 16085  015D7C  0E07               	movlw	7
 16086  015D7E  6F83               	movwf	131,b	;volatile
 16087                           
 16088                           ; BSR set to: 58
 16089                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 16090  015D80  6993               	setf	147,b	;volatile
 16091                           
 16092                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 16093  015D82  0E0F               	movlw	15
 16094  015D84  6FE8               	movwf	232,b	;volatile
 16095                           
 16096                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 16097  015D86  0E16               	movlw	22
 16098  015D88  6F0E               	movwf	14,b	;volatile
 16099                           
 16100                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 16101  015D8A  0E1E               	movlw	30
 16102  015D8C  6F13               	movwf	19,b	;volatile
 16103                           
 16104                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 16105  015D8E  0E08               	movlw	8
 16106  015D90  6FC0               	movwf	192,b	;volatile
 16107                           
 16108                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 16109  015D92  0E0A               	movlw	10
 16110  015D94  6FC2               	movwf	194,b	;volatile
 16111                           
 16112                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 16113  015D96  0E09               	movlw	9
 16114  015D98  6FC1               	movwf	193,b	;volatile
 16115                           
 16116                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 16117  015D9A  0E17               	movlw	23
 16118  015D9C  6FE5               	movwf	229,b	;volatile
 16119                           
 16120                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 16121  015D9E  0E13               	movlw	19
 16122  015DA0  6FDE               	movwf	222,b	;volatile
 16123                           
 16124                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 16125  015DA2  0E01               	movlw	1
 16126  015DA4  6F04               	movwf	4,b	;volatile
 16127                           
 16128                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 16129  015DA6  0E26               	movlw	38
 16130  015DA8  6F05               	movwf	5,b	;volatile
 16131                           
 16132                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 16133  015DAA  0E28               	movlw	40
 16134  015DAC  6F06               	movwf	6,b	;volatile
 16135                           
 16136                           ;mcc_generated_files/pin_manager.c: 137:     RD1PPS = 0x10;
 16137  015DAE  0E10               	movlw	16
 16138  015DB0  6F19               	movwf	25,b	;volatile
 16139                           
 16140                           ;mcc_generated_files/pin_manager.c: 138:     RC5PPS = 0x1F;
 16141  015DB2  0E1F               	movlw	31
 16142  015DB4  6F15               	movwf	21,b	;volatile
 16143                           
 16144                           ;mcc_generated_files/pin_manager.c: 139:     RC6PPS = 0x13;
 16145  015DB6  0E13               	movlw	19
 16146  015DB8  6F16               	movwf	22,b	;volatile
 16147                           
 16148                           ;mcc_generated_files/pin_manager.c: 140:     SPI1SDIPPS = 0x14;
 16149  015DBA  0E14               	movlw	20
 16150  015DBC  6FDF               	movwf	223,b	;volatile
 16151                           
 16152                           ; BSR set to: 58
 16153                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 16154  015DBE  0012               	return		;funcret
 16155  015DC0                     __end_of_PIN_MANAGER_Initialize:
 16156                           	opt callstack 0
 16157                           
 16158 ;; *************** function _OSCILLATOR_Initialize *****************
 16159 ;; Defined at:
 16160 ;;		line 73 in file "mcc_generated_files/mcc.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;		None
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;		None
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1  [STACK] void 
 16167 ;; Registers used:
 16168 ;;		wreg, status,2
 16169 ;; Tracked objects:
 16170 ;;		On entry : 3F/3A
 16171 ;;		On exit  : 3F/39
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16178 ;;Total ram usage:        0 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:    3
 16181 ;; This function calls:
 16182 ;;		Nothing
 16183 ;; This function is called by:
 16184 ;;		_SYSTEM_Initialize
 16185 ;; This function uses a reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text65
 16189  017278                     __ptext65:
 16190                           	opt callstack 0
 16191  017278                     _OSCILLATOR_Initialize:
 16192                           	opt callstack 26
 16193                           
 16194                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 16195                           
 16196                           ; BSR set to: 58
 16197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16198                           ;incstack = 0
 16199  017278  0E20               	movlw	32
 16200  01727A  0139               	movlb	57	; () banked
 16201  01727C  6FD9               	movwf	217,b	;volatile
 16202                           
 16203                           ; BSR set to: 57
 16204                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 16205  01727E  6BDB               	clrf	219,b	;volatile
 16206                           
 16207                           ; BSR set to: 57
 16208                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 16209  017280  6BDD               	clrf	221,b	;volatile
 16210                           
 16211                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 16212  017282  0E02               	movlw	2
 16213  017284  6FDF               	movwf	223,b	;volatile
 16214                           
 16215                           ; BSR set to: 57
 16216                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 16217  017286  6BDE               	clrf	222,b	;volatile
 16218  017288                     l200:
 16219                           
 16220                           ; BSR set to: 57
 16221                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 16222  017288  B1DC               	btfsc	220,0,b	;volatile
 16223  01728A  0012               	return	
 16224  01728C  D7FD               	goto	l200
 16225  01728E                     __end_of_OSCILLATOR_Initialize:
 16226                           	opt callstack 0
 16227                           
 16228 ;; *************** function _NCO1_Initialize *****************
 16229 ;; Defined at:
 16230 ;;		line 58 in file "mcc_generated_files/nco1.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;		None
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;		None
 16235 ;; Return value:  Size  Location     Type
 16236 ;;                  1  [STACK] void 
 16237 ;; Registers used:
 16238 ;;		wreg, status,2
 16239 ;; Tracked objects:
 16240 ;;		On entry : 0/39
 16241 ;;		On exit  : 3F/3F
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16248 ;;Total ram usage:        0 bytes
 16249 ;; Hardware stack levels used:    1
 16250 ;; Hardware stack levels required when called:    3
 16251 ;; This function calls:
 16252 ;;		Nothing
 16253 ;; This function is called by:
 16254 ;;		_SYSTEM_Initialize
 16255 ;; This function uses a reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text66
 16259  017176                     __ptext66:
 16260                           	opt callstack 0
 16261  017176                     _NCO1_Initialize:
 16262                           	opt callstack 26
 16263                           
 16264                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 16265                           
 16266                           ; BSR set to: 57
 16267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16268                           ;incstack = 0
 16269  017176  013F               	movlb	63	; () banked
 16270  017178  6B3E               	clrf	62,b	;volatile
 16271                           
 16272                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 16273  01717A  6B3F               	clrf	63,b	;volatile
 16274                           
 16275                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 16276  01717C  6B3A               	clrf	58,b	;volatile
 16277                           
 16278                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 16279  01717E  6B39               	clrf	57,b	;volatile
 16280                           
 16281                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 16282  017180  6B38               	clrf	56,b	;volatile
 16283                           
 16284                           ; BSR set to: 63
 16285                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 16286  017182  0E06               	movlw	6
 16287  017184  6F3D               	movwf	61,b	;volatile
 16288                           
 16289                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 16290  017186  0EC7               	movlw	199
 16291  017188  6F3C               	movwf	60,b	;volatile
 16292                           
 16293                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 16294  01718A  0EAE               	movlw	174
 16295  01718C  6F3B               	movwf	59,b	;volatile
 16296                           
 16297                           ; BSR set to: 63
 16298                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 16299  01718E  8F3E               	bsf	62,7,b	;volatile
 16300                           
 16301                           ; BSR set to: 63
 16302                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16303  017190  0012               	return		;funcret
 16304  017192                     __end_of_NCO1_Initialize:
 16305                           	opt callstack 0
 16306                           
 16307 ;; *************** function _INTERRUPT_Initialize *****************
 16308 ;; Defined at:
 16309 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16310 ;; Parameters:    Size  Location     Type
 16311 ;;		None
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;  state           1  [STACK] _Bool 
 16314 ;; Return value:  Size  Location     Type
 16315 ;;                  1  [STACK] void 
 16316 ;; Registers used:
 16317 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 16318 ;; Tracked objects:
 16319 ;;		On entry : 0/0
 16320 ;;		On exit  : 3F/39
 16321 ;;		Unchanged: 0/0
 16322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16327 ;;Total ram usage:        0 bytes
 16328 ;; Hardware stack levels used:    1
 16329 ;; Hardware stack levels required when called:    3
 16330 ;; This function calls:
 16331 ;;		Nothing
 16332 ;; This function is called by:
 16333 ;;		_SYSTEM_Initialize
 16334 ;; This function uses a reentrant model
 16335 ;;
 16336                           
 16337                           	psect	text67
 16338  01636A                     __ptext67:
 16339                           	opt callstack 0
 16340  01636A                     _INTERRUPT_Initialize:
 16341                           	opt callstack 0
 16342                           
 16343                           ; BSR set to: 63
 16344                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16345  01636A  52E6               	movf	postinc1,f,c
 16346                           
 16347                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 16348                           
 16349                           ;incstack = 0
 16350  01636C  8AD2               	bsf	16338,5,c	;volatile
 16351                           
 16352                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 16353  01636E  AED2               	btfss	16338,7,c	;volatile
 16354  016370  D003               	goto	u5210
 16355  016372  6A43               	clrf	btemp+11,c
 16356  016374  2A43               	incf	btemp+11,f,c
 16357  016376  D001               	goto	u5228
 16358  016378                     u5210:
 16359  016378  6A43               	clrf	btemp+11,c
 16360  01637A                     u5228:
 16361                           
 16362                           ;stkvar	_state @ sp[(-1)+0]
 16363  01637A  0EFF               	movlw	-1
 16364  01637C  0060  F10F  FFE3   	movff	btemp+11,plusw1
 16365                           
 16366                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 16367  016382  9ED2               	bcf	16338,7,c	;volatile
 16368                           
 16369                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 16370  016384  0E55               	movlw	85
 16371  016386  6ED4               	movwf	16340,c	;volatile
 16372                           
 16373                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 16374  016388  0EAA               	movlw	170
 16375  01638A  6ED4               	movwf	16340,c	;volatile
 16376                           
 16377                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 16378  01638C  90D4               	bcf	16340,0,c	;volatile
 16379                           
 16380                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 16381  01638E  0138               	movlb	56	; () banked
 16382  016390  6B9F               	clrf	159,b	;volatile
 16383                           
 16384                           ; BSR set to: 56
 16385                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 16386  016392  6B9E               	clrf	158,b	;volatile
 16387                           
 16388                           ; BSR set to: 56
 16389                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 16390  016394  0E08               	movlw	8
 16391  016396  6F9D               	movwf	157,b	;volatile
 16392                           
 16393                           ; BSR set to: 56
 16394                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 16395  016398  0E55               	movlw	85
 16396  01639A  6ED4               	movwf	16340,c	;volatile
 16397                           
 16398                           ; BSR set to: 56
 16399                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 16400  01639C  0EAA               	movlw	170
 16401  01639E  6ED4               	movwf	16340,c	;volatile
 16402                           
 16403                           ; BSR set to: 56
 16404                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 16405  0163A0  80D4               	bsf	16340,0,c	;volatile
 16406                           
 16407                           ; BSR set to: 56
 16408                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 16409                           ;stkvar	_state @ sp[(-1)+0]
 16410  0163A2  0EFF               	movlw	-1
 16411  0163A4  B0E3               	btfsc	plusw1,0,c
 16412  0163A6  D002               	bra	u5235
 16413  0163A8  9ED2               	bcf	16338,7,c	;volatile
 16414  0163AA  D001               	bra	u5236
 16415  0163AC                     u5235:
 16416  0163AC  8ED2               	bsf	16338,7,c	;volatile
 16417  0163AE                     u5236:
 16418                           
 16419                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 16420  0163AE  0139               	movlb	57	; () banked
 16421  0163B0  8782               	bsf	130,3,b	;volatile
 16422                           
 16423                           ; BSR set to: 57
 16424                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 16425  0163B2  8382               	bsf	130,1,b	;volatile
 16426                           
 16427                           ; BSR set to: 57
 16428                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 16429  0163B4  8182               	bsf	130,0,b	;volatile
 16430                           
 16431                           ; BSR set to: 57
 16432                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 16433  0163B6  8582               	bsf	130,2,b	;volatile
 16434                           
 16435                           ; BSR set to: 57
 16436                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 16437  0163B8  8786               	bsf	134,3,b	;volatile
 16438                           
 16439                           ; BSR set to: 57
 16440                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 16441  0163BA  8586               	bsf	134,2,b	;volatile
 16442                           
 16443                           ; BSR set to: 57
 16444                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 16445  0163BC  8983               	bsf	131,4,b	;volatile
 16446                           
 16447                           ; BSR set to: 57
 16448                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 16449  0163BE  8783               	bsf	131,3,b	;volatile
 16450                           
 16451                           ; BSR set to: 57
 16452                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 16453  0163C0  8181               	bsf	129,0,b	;volatile
 16454                           
 16455                           ; BSR set to: 57
 16456                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 16457  0163C2  8185               	bsf	133,0,b	;volatile
 16458                           
 16459                           ; BSR set to: 57
 16460                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 16461  0163C4  8B87               	bsf	135,5,b	;volatile
 16462                           
 16463                           ; BSR set to: 57
 16464                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 16465  0163C6  8189               	bsf	137,0,b	;volatile
 16466                           
 16467                           ; BSR set to: 57
 16468                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 16469  0163C8  8D88               	bsf	136,6,b	;volatile
 16470                           
 16471                           ; BSR set to: 57
 16472                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 16473  0163CA  8581               	bsf	129,2,b	;volatile
 16474                           
 16475                           ; BSR set to: 57
 16476                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 16477  0163CC  52E5               	movf	postdec1,f,c
 16478  0163CE  0012               	return		;funcret
 16479  0163D0                     __end_of_INTERRUPT_Initialize:
 16480                           	opt callstack 0
 16481                           
 16482 ;; *************** function _EXT_INT_Initialize *****************
 16483 ;; Defined at:
 16484 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;		None
 16487 ;; Auto vars:     Size  Location     Type
 16488 ;;		None
 16489 ;; Return value:  Size  Location     Type
 16490 ;;                  1  [STACK] void 
 16491 ;; Registers used:
 16492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16493 ;; Tracked objects:
 16494 ;;		On entry : 3F/3F
 16495 ;;		On exit  : 3F/39
 16496 ;;		Unchanged: 0/0
 16497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16502 ;;Total ram usage:        0 bytes
 16503 ;; Hardware stack levels used:    1
 16504 ;; Hardware stack levels required when called:    4
 16505 ;; This function calls:
 16506 ;;		_INT0_SetInterruptHandler
 16507 ;;		_INT1_SetInterruptHandler
 16508 ;;		_INT2_SetInterruptHandler
 16509 ;; This function is called by:
 16510 ;;		_SYSTEM_Initialize
 16511 ;; This function uses a reentrant model
 16512 ;;
 16513                           
 16514                           	psect	text68
 16515  0166EC                     __ptext68:
 16516                           	opt callstack 0
 16517  0166EC                     _EXT_INT_Initialize:
 16518                           	opt callstack 25
 16519                           
 16520                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 16521                           
 16522                           ; BSR set to: 57
 16523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16524                           ;incstack = 0
 16525  0166EC  0139               	movlb	57	; () banked
 16526  0166EE  91A1               	bcf	161,0,b	;volatile
 16527                           
 16528                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 16529  0166F0  90D2               	bcf	16338,0,c	;volatile
 16530                           
 16531                           ; BSR set to: 57
 16532                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 16533  0166F2  0E84               	movlw	low _INT0_DefaultInterruptHandler
 16534  0166F4  6EE6               	movwf	postinc1,c
 16535  0166F6  0E73               	movlw	high _INT0_DefaultInterruptHandler
 16536  0166F8  6EE6               	movwf	postinc1,c
 16537  0166FA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 16538  0166FC  6EE6               	movwf	postinc1,c
 16539  0166FE  EC7E  F0B7         	call	_INT0_SetInterruptHandler	;wreg free
 16540                           
 16541                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 16542  016702  0139               	movlb	57	; () banked
 16543  016704  8191               	bsf	145,0,b	;volatile
 16544                           
 16545                           ; BSR set to: 57
 16546                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 16547  016706  91A5               	bcf	165,0,b	;volatile
 16548                           
 16549                           ; BSR set to: 57
 16550                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 16551  016708  92D2               	bcf	16338,1,c	;volatile
 16552                           
 16553                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 16554  01670A  0E86               	movlw	low _INT1_DefaultInterruptHandler
 16555  01670C  6EE6               	movwf	postinc1,c
 16556  01670E  0E73               	movlw	high _INT1_DefaultInterruptHandler
 16557  016710  6EE6               	movwf	postinc1,c
 16558  016712  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 16559  016714  6EE6               	movwf	postinc1,c
 16560  016716  EC6A  F0B7         	call	_INT1_SetInterruptHandler	;wreg free
 16561                           
 16562                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 16563  01671A  0139               	movlb	57	; () banked
 16564  01671C  8195               	bsf	149,0,b	;volatile
 16565                           
 16566                           ; BSR set to: 57
 16567                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 16568  01671E  9BA7               	bcf	167,5,b	;volatile
 16569                           
 16570                           ; BSR set to: 57
 16571                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 16572  016720  94D2               	bcf	16338,2,c	;volatile
 16573                           
 16574                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 16575  016722  0E88               	movlw	low _INT2_DefaultInterruptHandler
 16576  016724  6EE6               	movwf	postinc1,c
 16577  016726  0E73               	movlw	high _INT2_DefaultInterruptHandler
 16578  016728  6EE6               	movwf	postinc1,c
 16579  01672A  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 16580  01672C  6EE6               	movwf	postinc1,c
 16581  01672E  EC56  F0B7         	call	_INT2_SetInterruptHandler	;wreg free
 16582                           
 16583                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 16584  016732  0139               	movlb	57	; () banked
 16585  016734  8B97               	bsf	151,5,b	;volatile
 16586                           
 16587                           ; BSR set to: 57
 16588                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16589  016736  0012               	return		;funcret
 16590  016738                     __end_of_EXT_INT_Initialize:
 16591                           	opt callstack 0
 16592                           
 16593 ;; *************** function _INT2_SetInterruptHandler *****************
 16594 ;; Defined at:
 16595 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16598 ;;		 -> INT2_DefaultInterruptHandler(1), 
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;		None
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1  [STACK] void 
 16603 ;; Registers used:
 16604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16605 ;; Tracked objects:
 16606 ;;		On entry : 3F/39
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16614 ;;Total ram usage:        0 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:    3
 16617 ;; This function calls:
 16618 ;;		Nothing
 16619 ;; This function is called by:
 16620 ;;		_EXT_INT_Initialize
 16621 ;; This function uses a reentrant model
 16622 ;;
 16623                           
 16624                           	psect	text69
 16625  016EAC                     __ptext69:
 16626                           	opt callstack 0
 16627  016EAC                     _INT2_SetInterruptHandler:
 16628                           	opt callstack 25
 16629                           
 16630                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 16631                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16632                           
 16633                           ; BSR set to: 57
 16634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16635                           ;incstack = 0
 16636  016EAC  50E1               	movf	fsr1l,w,c
 16637  016EAE  0FFD               	addlw	-3
 16638  016EB0  6ED9               	movwf	fsr2l,c
 16639  016EB2  50E2               	movf	fsr1h,w,c
 16640  016EB4  6EDA               	movwf	fsr2h,c
 16641  016EB6  0EFF               	movlw	255
 16642  016EB8  22DA               	addwfc	fsr2h,f,c
 16643  016EBA  006F FF78  F007    	movff	postinc2,_INT2_InterruptHandler
 16644  016EC0  006F FF78  F008    	movff	postinc2,_INT2_InterruptHandler+1
 16645  016EC6  006F FF74  F009    	movff	postdec2,_INT2_InterruptHandler+2
 16646                           
 16647                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16648  016ECC  52E5               	movf	postdec1,f,c
 16649  016ECE  52E5               	movf	postdec1,f,c
 16650  016ED0  52E5               	movf	postdec1,f,c
 16651  016ED2  0012               	return		;funcret
 16652  016ED4                     __end_of_INT2_SetInterruptHandler:
 16653                           	opt callstack 0
 16654                           
 16655 ;; *************** function _INT1_SetInterruptHandler *****************
 16656 ;; Defined at:
 16657 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16660 ;;		 -> INT1_DefaultInterruptHandler(1), 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;		None
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1  [STACK] void 
 16665 ;; Registers used:
 16666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16667 ;; Tracked objects:
 16668 ;;		On entry : 3F/39
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16676 ;;Total ram usage:        0 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:    3
 16679 ;; This function calls:
 16680 ;;		Nothing
 16681 ;; This function is called by:
 16682 ;;		_EXT_INT_Initialize
 16683 ;; This function uses a reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text70
 16687  016ED4                     __ptext70:
 16688                           	opt callstack 0
 16689  016ED4                     _INT1_SetInterruptHandler:
 16690                           	opt callstack 25
 16691                           
 16692                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 16693                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16694                           
 16695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16696                           ;incstack = 0
 16697  016ED4  50E1               	movf	fsr1l,w,c
 16698  016ED6  0FFD               	addlw	-3
 16699  016ED8  6ED9               	movwf	fsr2l,c
 16700  016EDA  50E2               	movf	fsr1h,w,c
 16701  016EDC  6EDA               	movwf	fsr2h,c
 16702  016EDE  0EFF               	movlw	255
 16703  016EE0  22DA               	addwfc	fsr2h,f,c
 16704  016EE2  006F FF78  F00A    	movff	postinc2,_INT1_InterruptHandler
 16705  016EE8  006F FF78  F00B    	movff	postinc2,_INT1_InterruptHandler+1
 16706  016EEE  006F FF74  F00C    	movff	postdec2,_INT1_InterruptHandler+2
 16707                           
 16708                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16709  016EF4  52E5               	movf	postdec1,f,c
 16710  016EF6  52E5               	movf	postdec1,f,c
 16711  016EF8  52E5               	movf	postdec1,f,c
 16712  016EFA  0012               	return		;funcret
 16713  016EFC                     __end_of_INT1_SetInterruptHandler:
 16714                           	opt callstack 0
 16715                           
 16716 ;; *************** function _INT0_SetInterruptHandler *****************
 16717 ;; Defined at:
 16718 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16721 ;;		 -> INT0_DefaultInterruptHandler(1), 
 16722 ;; Auto vars:     Size  Location     Type
 16723 ;;		None
 16724 ;; Return value:  Size  Location     Type
 16725 ;;                  1  [STACK] void 
 16726 ;; Registers used:
 16727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16728 ;; Tracked objects:
 16729 ;;		On entry : 3F/39
 16730 ;;		On exit  : 0/0
 16731 ;;		Unchanged: 0/0
 16732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16737 ;;Total ram usage:        0 bytes
 16738 ;; Hardware stack levels used:    1
 16739 ;; Hardware stack levels required when called:    3
 16740 ;; This function calls:
 16741 ;;		Nothing
 16742 ;; This function is called by:
 16743 ;;		_EXT_INT_Initialize
 16744 ;; This function uses a reentrant model
 16745 ;;
 16746                           
 16747                           	psect	text71
 16748  016EFC                     __ptext71:
 16749                           	opt callstack 0
 16750  016EFC                     _INT0_SetInterruptHandler:
 16751                           	opt callstack 25
 16752                           
 16753                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 16754                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16755                           
 16756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16757                           ;incstack = 0
 16758  016EFC  50E1               	movf	fsr1l,w,c
 16759  016EFE  0FFD               	addlw	-3
 16760  016F00  6ED9               	movwf	fsr2l,c
 16761  016F02  50E2               	movf	fsr1h,w,c
 16762  016F04  6EDA               	movwf	fsr2h,c
 16763  016F06  0EFF               	movlw	255
 16764  016F08  22DA               	addwfc	fsr2h,f,c
 16765  016F0A  006F FF78  F00D    	movff	postinc2,_INT0_InterruptHandler
 16766  016F10  006F FF78  F00E    	movff	postinc2,_INT0_InterruptHandler+1
 16767  016F16  006F FF74  F00F    	movff	postdec2,_INT0_InterruptHandler+2
 16768                           
 16769                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16770  016F1C  52E5               	movf	postdec1,f,c
 16771  016F1E  52E5               	movf	postdec1,f,c
 16772  016F20  52E5               	movf	postdec1,f,c
 16773  016F22  0012               	return		;funcret
 16774  016F24                     __end_of_INT0_SetInterruptHandler:
 16775                           	opt callstack 0
 16776                           
 16777 ;; *************** function _DSM_Initialize *****************
 16778 ;; Defined at:
 16779 ;;		line 58 in file "mcc_generated_files/dsm.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;		None
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;		None
 16784 ;; Return value:  Size  Location     Type
 16785 ;;                  1  [STACK] void 
 16786 ;; Registers used:
 16787 ;;		wreg, status,2
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/3C
 16790 ;;		On exit  : 3F/3C
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16797 ;;Total ram usage:        0 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:    3
 16800 ;; This function calls:
 16801 ;;		Nothing
 16802 ;; This function is called by:
 16803 ;;		_SYSTEM_Initialize
 16804 ;; This function uses a reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text72
 16808  017192                     __ptext72:
 16809                           	opt callstack 0
 16810  017192                     _DSM_Initialize:
 16811                           	opt callstack 26
 16812                           
 16813                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 16814                           
 16815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16816                           ;incstack = 0
 16817  017192  013C               	movlb	60	; () banked
 16818  017194  99FA               	bcf	250,4,b	;volatile
 16819                           
 16820                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 16821  017196  81FB               	bsf	251,0,b	;volatile
 16822                           
 16823                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 16824  017198  93FB               	bcf	251,1,b	;volatile
 16825                           
 16826                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 16827  01719A  89FB               	bsf	251,4,b	;volatile
 16828                           
 16829                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 16830  01719C  9BFB               	bcf	251,5,b	;volatile
 16831                           
 16832                           ; BSR set to: 60
 16833                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 16834  01719E  0E13               	movlw	19
 16835  0171A0  6FFC               	movwf	252,b	;volatile
 16836                           
 16837                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 16838  0171A2  0E0E               	movlw	14
 16839  0171A4  6FFE               	movwf	254,b	;volatile
 16840                           
 16841                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 16842  0171A6  0E04               	movlw	4
 16843  0171A8  6FFD               	movwf	253,b	;volatile
 16844                           
 16845                           ; BSR set to: 60
 16846                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 16847  0171AA  8FFA               	bsf	250,7,b	;volatile
 16848                           
 16849                           ; BSR set to: 60
 16850                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 16851  0171AC  0012               	return		;funcret
 16852  0171AE                     __end_of_DSM_Initialize:
 16853                           	opt callstack 0
 16854                           
 16855 ;; *************** function _DMA2_Initialize *****************
 16856 ;; Defined at:
 16857 ;;		line 61 in file "mcc_generated_files/dma2.c"
 16858 ;; Parameters:    Size  Location     Type
 16859 ;;		None
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;		None
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  1  [STACK] void 
 16864 ;; Registers used:
 16865 ;;		wreg, status,2
 16866 ;; Tracked objects:
 16867 ;;		On entry : 3F/3D
 16868 ;;		On exit  : 3F/3B
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16875 ;;Total ram usage:        0 bytes
 16876 ;; Hardware stack levels used:    1
 16877 ;; Hardware stack levels required when called:    3
 16878 ;; This function calls:
 16879 ;;		Nothing
 16880 ;; This function is called by:
 16881 ;;		_SYSTEM_Initialize
 16882 ;; This function uses a reentrant model
 16883 ;;
 16884                           
 16885                           	psect	text73
 16886  0164F4                     __ptext73:
 16887                           	opt callstack 0
 16888  0164F4                     _DMA2_Initialize:
 16889                           	opt callstack 26
 16890                           
 16891                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 16892                           
 16893                           ; BSR set to: 60
 16894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16895                           ;incstack = 0
 16896  0164F4  0E00               	movlw	0
 16897  0164F6  013B               	movlb	59	; () banked
 16898  0164F8  6FD9               	movwf	217,b	;volatile
 16899  0164FA  0E10               	movlw	16
 16900  0164FC  6FDA               	movwf	218,b	;volatile
 16901  0164FE  0E00               	movlw	0
 16902  016500  6FDB               	movwf	219,b	;volatile
 16903                           
 16904                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 16905  016502  0E3F               	movlw	63
 16906  016504  6FD1               	movwf	209,b	;volatile
 16907  016506  0EBB               	movlw	187
 16908  016508  6FD0               	movwf	208,b	;volatile
 16909                           
 16910                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 16911  01650A  0E03               	movlw	3
 16912  01650C  6FDD               	movwf	221,b	;volatile
 16913                           
 16914                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 16915  01650E  0E00               	movlw	0
 16916  016510  6FD8               	movwf	216,b	;volatile
 16917  016512  0E01               	movlw	1
 16918  016514  6FD7               	movwf	215,b	;volatile
 16919                           
 16920                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 16921  016516  0E00               	movlw	0
 16922  016518  6FCF               	movwf	207,b	;volatile
 16923  01651A  0E01               	movlw	1
 16924  01651C  6FCE               	movwf	206,b	;volatile
 16925                           
 16926                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 16927  01651E  0E46               	movlw	70
 16928  016520  6FDF               	movwf	223,b	;volatile
 16929                           
 16930                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 16931  016522  0E3D               	movlw	61
 16932  016524  6FDE               	movwf	222,b	;volatile
 16933                           
 16934                           ; BSR set to: 59
 16935                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 16936  016526  0139               	movlb	57	; () banked
 16937  016528  97A5               	bcf	165,3,b	;volatile
 16938                           
 16939                           ; BSR set to: 57
 16940                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 16941  01652A  95A5               	bcf	165,2,b	;volatile
 16942                           
 16943                           ; BSR set to: 57
 16944                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 16945  01652C  9BA5               	bcf	165,5,b	;volatile
 16946                           
 16947                           ; BSR set to: 57
 16948                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 16949  01652E  99A5               	bcf	165,4,b	;volatile
 16950                           
 16951                           ; BSR set to: 57
 16952                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 16953  016530  9795               	bcf	149,3,b	;volatile
 16954                           
 16955                           ; BSR set to: 57
 16956                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 16957  016532  9595               	bcf	149,2,b	;volatile
 16958                           
 16959                           ; BSR set to: 57
 16960                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 16961  016534  9B95               	bcf	149,5,b	;volatile
 16962                           
 16963                           ; BSR set to: 57
 16964                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 16965  016536  9995               	bcf	149,4,b	;volatile
 16966  016538  9ED2               	bcf	16338,7,c	;# 
 16967  01653A  0139               	banksel	14831	;# 
 16968  01653C  0E55               	movlw	85	;# 
 16969  01653E  6FEF               	movwf	14831,b	;# 
 16970  016540  0EAA               	movlw	170	;# 
 16971  016542  6FEF               	movwf	14831,b	;# 
 16972  016544  81EF               	bsf	14831,0,b	;# 
 16973  016546  8ED2               	bsf	16338,7,c	;# 
 16974                           
 16975                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 16976  016548  013B               	movlb	59	; () banked
 16977  01654A  6BDC               	clrf	220,b	;volatile
 16978                           
 16979                           ; BSR set to: 59
 16980                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16981  01654C  0012               	return		;funcret
 16982  01654E                     __end_of_DMA2_Initialize:
 16983                           	opt callstack 0
 16984                           
 16985 ;; *************** function _DMA1_Initialize *****************
 16986 ;; Defined at:
 16987 ;;		line 86 in file "mcc_generated_files/dma1.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;		None
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;		None
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  1  [STACK] void 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2
 16996 ;; Tracked objects:
 16997 ;;		On entry : 3F/3B
 16998 ;;		On exit  : 3F/3B
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17005 ;;Total ram usage:        0 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    3
 17008 ;; This function calls:
 17009 ;;		Nothing
 17010 ;; This function is called by:
 17011 ;;		_SYSTEM_Initialize
 17012 ;; This function uses a reentrant model
 17013 ;;
 17014                           
 17015                           	psect	text74
 17016  016298                     __ptext74:
 17017                           	opt callstack 0
 17018  016298                     _DMA1_Initialize:
 17019                           	opt callstack 26
 17020                           
 17021                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 17022                           
 17023                           ; BSR set to: 59
 17024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17025                           ;incstack = 0
 17026  016298  0E00               	movlw	0
 17027  01629A  013B               	movlb	59	; () banked
 17028  01629C  6FF9               	movwf	249,b	;volatile
 17029  01629E  0E10               	movlw	16
 17030  0162A0  6FFA               	movwf	250,b	;volatile
 17031  0162A2  0E00               	movlw	0
 17032  0162A4  6FFB               	movwf	251,b	;volatile
 17033                           
 17034                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 17035  0162A6  0E3D               	movlw	61
 17036  0162A8  6FF1               	movwf	241,b	;volatile
 17037  0162AA  0E11               	movlw	17
 17038  0162AC  6FF0               	movwf	240,b	;volatile
 17039                           
 17040                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 17041  0162AE  0E03               	movlw	3
 17042  0162B0  6FFD               	movwf	253,b	;volatile
 17043                           
 17044                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 17045  0162B2  0E00               	movlw	0
 17046  0162B4  6FF8               	movwf	248,b	;volatile
 17047  0162B6  0E01               	movlw	1
 17048  0162B8  6FF7               	movwf	247,b	;volatile
 17049                           
 17050                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 17051  0162BA  0E00               	movlw	0
 17052  0162BC  6FEF               	movwf	239,b	;volatile
 17053  0162BE  0E01               	movlw	1
 17054  0162C0  6FEE               	movwf	238,b	;volatile
 17055                           
 17056                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 17057  0162C2  0E15               	movlw	21
 17058  0162C4  6FFF               	movwf	255,b	;volatile
 17059                           
 17060                           ; BSR set to: 59
 17061                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 17062  0162C6  6BFE               	clrf	254,b	;volatile
 17063                           
 17064                           ; BSR set to: 59
 17065                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 17066  0162C8  0139               	movlb	57	; () banked
 17067  0162CA  93A2               	bcf	162,1,b	;volatile
 17068                           
 17069                           ; BSR set to: 57
 17070                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 17071  0162CC  91A2               	bcf	162,0,b	;volatile
 17072                           
 17073                           ; BSR set to: 57
 17074                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 17075  0162CE  97A2               	bcf	162,3,b	;volatile
 17076                           
 17077                           ; BSR set to: 57
 17078                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 17079  0162D0  95A2               	bcf	162,2,b	;volatile
 17080                           
 17081                           ; BSR set to: 57
 17082                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 17083  0162D2  8392               	bsf	146,1,b	;volatile
 17084                           
 17085                           ; BSR set to: 57
 17086                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 17087  0162D4  8192               	bsf	146,0,b	;volatile
 17088                           
 17089                           ; BSR set to: 57
 17090                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 17091  0162D6  8792               	bsf	146,3,b	;volatile
 17092                           
 17093                           ; BSR set to: 57
 17094                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 17095  0162D8  8592               	bsf	146,2,b	;volatile
 17096                           
 17097                           ; BSR set to: 57
 17098                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 17099  0162DA  6BF1               	clrf	241,b	;volatile
 17100                           
 17101                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 17102  0162DC  0E01               	movlw	1
 17103  0162DE  6FF2               	movwf	242,b	;volatile
 17104                           
 17105                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 17106  0162E0  0E04               	movlw	4
 17107  0162E2  6FF3               	movwf	243,b	;volatile
 17108                           
 17109                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 17110  0162E4  0E02               	movlw	2
 17111  0162E6  6FF4               	movwf	244,b	;volatile
 17112                           
 17113                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 17114  0162E8  0E03               	movlw	3
 17115  0162EA  6FF7               	movwf	247,b	;volatile
 17116  0162EC  9ED2               	bcf	16338,7,c	;# 
 17117  0162EE  0139               	banksel	14831	;# 
 17118  0162F0  0E55               	movlw	85	;# 
 17119  0162F2  6FEF               	movwf	14831,b	;# 
 17120  0162F4  0EAA               	movlw	170	;# 
 17121  0162F6  6FEF               	movwf	14831,b	;# 
 17122  0162F8  81EF               	bsf	14831,0,b	;# 
 17123  0162FA  8ED2               	bsf	16338,7,c	;# 
 17124                           
 17125                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 17126  0162FC  013B               	movlb	59	; () banked
 17127  0162FE  6BFC               	clrf	252,b	;volatile
 17128                           
 17129                           ; BSR set to: 59
 17130                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17131  016300  0012               	return		;funcret
 17132  016302                     __end_of_DMA1_Initialize:
 17133                           	opt callstack 0
 17134                           
 17135 ;; *************** function _CLKREF_Initialize *****************
 17136 ;; Defined at:
 17137 ;;		line 58 in file "mcc_generated_files/clkref.c"
 17138 ;; Parameters:    Size  Location     Type
 17139 ;;		None
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;		None
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  1  [STACK] void 
 17144 ;; Registers used:
 17145 ;;		wreg, status,2
 17146 ;; Tracked objects:
 17147 ;;		On entry : 3F/3B
 17148 ;;		On exit  : 3F/3C
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17155 ;;Total ram usage:        0 bytes
 17156 ;; Hardware stack levels used:    1
 17157 ;; Hardware stack levels required when called:    3
 17158 ;; This function calls:
 17159 ;;		Nothing
 17160 ;; This function is called by:
 17161 ;;		_SYSTEM_Initialize
 17162 ;; This function uses a reentrant model
 17163 ;;
 17164                           
 17165                           	psect	text75
 17166  01730E                     __ptext75:
 17167                           	opt callstack 0
 17168  01730E                     _CLKREF_Initialize:
 17169                           	opt callstack 26
 17170                           
 17171                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 17172                           
 17173                           ; BSR set to: 59
 17174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17175                           ;incstack = 0
 17176  01730E  013C               	movlb	60	; () banked
 17177  017310  6BE6               	clrf	230,b	;volatile
 17178                           
 17179                           ; BSR set to: 60
 17180                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 17181  017312  0E94               	movlw	148
 17182  017314  6FE5               	movwf	229,b	;volatile
 17183                           
 17184                           ; BSR set to: 60
 17185                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17186  017316  0012               	return		;funcret
 17187  017318                     __end_of_CLKREF_Initialize:
 17188                           	opt callstack 0
 17189                           
 17190 ;; *************** function _CLC1_Initialize *****************
 17191 ;; Defined at:
 17192 ;;		line 58 in file "mcc_generated_files/clc1.c"
 17193 ;; Parameters:    Size  Location     Type
 17194 ;;		None
 17195 ;; Auto vars:     Size  Location     Type
 17196 ;;		None
 17197 ;; Return value:  Size  Location     Type
 17198 ;;                  1  [STACK] void 
 17199 ;; Registers used:
 17200 ;;		wreg, status,2
 17201 ;; Tracked objects:
 17202 ;;		On entry : 0/39
 17203 ;;		On exit  : 3F/3C
 17204 ;;		Unchanged: 0/0
 17205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17210 ;;Total ram usage:        0 bytes
 17211 ;; Hardware stack levels used:    1
 17212 ;; Hardware stack levels required when called:    3
 17213 ;; This function calls:
 17214 ;;		Nothing
 17215 ;; This function is called by:
 17216 ;;		_SYSTEM_Initialize
 17217 ;; This function uses a reentrant model
 17218 ;;
 17219                           
 17220                           	psect	text76
 17221  017056                     __ptext76:
 17222                           	opt callstack 0
 17223  017056                     _CLC1_Initialize:
 17224                           	opt callstack 26
 17225                           
 17226                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 17227                           
 17228                           ; BSR set to: 60
 17229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17230                           ;incstack = 0
 17231  017056  013C               	movlb	60	; () banked
 17232  017058  6B75               	clrf	117,b	;volatile
 17233                           
 17234                           ; BSR set to: 60
 17235                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 17236  01705A  0E04               	movlw	4
 17237  01705C  6F76               	movwf	118,b	;volatile
 17238                           
 17239                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 17240  01705E  0E04               	movlw	4
 17241  017060  6F77               	movwf	119,b	;volatile
 17242                           
 17243                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 17244  017062  0E04               	movlw	4
 17245  017064  6F78               	movwf	120,b	;volatile
 17246                           
 17247                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 17248  017066  0E04               	movlw	4
 17249  017068  6F79               	movwf	121,b	;volatile
 17250                           
 17251                           ; BSR set to: 60
 17252                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 17253  01706A  6B7A               	clrf	122,b	;volatile
 17254                           
 17255                           ; BSR set to: 60
 17256                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 17257  01706C  6B7B               	clrf	123,b	;volatile
 17258                           
 17259                           ; BSR set to: 60
 17260                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 17261  01706E  6B7C               	clrf	124,b	;volatile
 17262                           
 17263                           ; BSR set to: 60
 17264                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 17265  017070  6B7D               	clrf	125,b	;volatile
 17266                           
 17267                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 17268  017072  0E81               	movlw	129
 17269  017074  6F74               	movwf	116,b	;volatile
 17270                           
 17271                           ; BSR set to: 60
 17272                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17273  017076  0012               	return		;funcret
 17274  017078                     __end_of_CLC1_Initialize:
 17275                           	opt callstack 0
 17276                           
 17277 ;; *************** function _ADCC_Initialize *****************
 17278 ;; Defined at:
 17279 ;;		line 64 in file "mcc_generated_files/adcc.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;		None
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  1  [STACK] void 
 17286 ;; Registers used:
 17287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 17288 ;; Tracked objects:
 17289 ;;		On entry : 3F/39
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17297 ;;Total ram usage:        0 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:    4
 17300 ;; This function calls:
 17301 ;;		_ADCC_SetADIInterruptHandler
 17302 ;; This function is called by:
 17303 ;;		_SYSTEM_Initialize
 17304 ;; This function uses a reentrant model
 17305 ;;
 17306                           
 17307                           	psect	text77
 17308  016738                     __ptext77:
 17309                           	opt callstack 0
 17310  016738                     _ADCC_Initialize:
 17311                           	opt callstack 25
 17312                           
 17313                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 17314                           
 17315                           ; BSR set to: 60
 17316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17317                           ;incstack = 0
 17318  016738  013E               	movlb	62	; () banked
 17319  01673A  6BDE               	clrf	222,b	;volatile
 17320                           
 17321                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 17322  01673C  6BDF               	clrf	223,b	;volatile
 17323                           
 17324                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 17325  01673E  6BE0               	clrf	224,b	;volatile
 17326                           
 17327                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 17328  016740  6BE1               	clrf	225,b	;volatile
 17329                           
 17330                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 17331  016742  6BE4               	clrf	228,b	;volatile
 17332                           
 17333                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 17334  016744  6BE5               	clrf	229,b	;volatile
 17335                           
 17336                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 17337  016746  6BEA               	clrf	234,b	;volatile
 17338                           
 17339                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 17340  016748  6BEC               	clrf	236,b	;volatile
 17341                           
 17342                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 17343  01674A  6BF1               	clrf	241,b	;volatile
 17344                           
 17345                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 17346  01674C  6BF3               	clrf	243,b	;volatile
 17347                           
 17348                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 17349  01674E  6BF4               	clrf	244,b	;volatile
 17350                           
 17351                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 17352  016750  6BF5               	clrf	245,b	;volatile
 17353                           
 17354                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 17355  016752  6BF6               	clrf	246,b	;volatile
 17356                           
 17357                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 17358  016754  6BF7               	clrf	247,b	;volatile
 17359                           
 17360                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 17361  016756  6BF9               	clrf	249,b	;volatile
 17362                           
 17363                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 17364  016758  6BFA               	clrf	250,b	;volatile
 17365                           
 17366                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 17367  01675A  6BFB               	clrf	251,b	;volatile
 17368                           
 17369                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 17370  01675C  6BFC               	clrf	252,b	;volatile
 17371                           
 17372                           ; BSR set to: 62
 17373                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 17374  01675E  0E02               	movlw	2
 17375  016760  6FFD               	movwf	253,b	;volatile
 17376                           
 17377                           ; BSR set to: 62
 17378                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 17379  016762  6BFE               	clrf	254,b	;volatile
 17380                           
 17381                           ; BSR set to: 62
 17382                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 17383  016764  6BFF               	clrf	255,b	;volatile
 17384                           
 17385                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 17386  016766  0E94               	movlw	148
 17387  016768  6FF8               	movwf	248,b	;volatile
 17388                           
 17389                           ; BSR set to: 62
 17390                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 17391  01676A  0139               	movlb	57	; () banked
 17392  01676C  95A1               	bcf	161,2,b	;volatile
 17393                           
 17394                           ; BSR set to: 57
 17395                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 17396  01676E  8591               	bsf	145,2,b	;volatile
 17397                           
 17398                           ; BSR set to: 57
 17399                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 17400  016770  0E8A               	movlw	low _ADCC_DefaultInterruptHandler
 17401  016772  6EE6               	movwf	postinc1,c
 17402  016774  0E73               	movlw	high _ADCC_DefaultInterruptHandler
 17403  016776  6EE6               	movwf	postinc1,c
 17404  016778  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17405  01677A  6EE6               	movwf	postinc1,c
 17406  01677C  EC92  F0B7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 17407                           
 17408                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17409  016780  0012               	return		;funcret
 17410  016782                     __end_of_ADCC_Initialize:
 17411                           	opt callstack 0
 17412                           
 17413 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 17414 ;; Defined at:
 17415 ;;		line 316 in file "mcc_generated_files/adcc.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 17418 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 17419 ;; Auto vars:     Size  Location     Type
 17420 ;;		None
 17421 ;; Return value:  Size  Location     Type
 17422 ;;                  1  [STACK] void 
 17423 ;; Registers used:
 17424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 17425 ;; Tracked objects:
 17426 ;;		On entry : 3F/39
 17427 ;;		On exit  : 0/0
 17428 ;;		Unchanged: 0/0
 17429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17434 ;;Total ram usage:        0 bytes
 17435 ;; Hardware stack levels used:    1
 17436 ;; Hardware stack levels required when called:    3
 17437 ;; This function calls:
 17438 ;;		Nothing
 17439 ;; This function is called by:
 17440 ;;		_ADCC_Initialize
 17441 ;; This function uses a reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text78
 17445  016F24                     __ptext78:
 17446                           	opt callstack 0
 17447  016F24                     _ADCC_SetADIInterruptHandler:
 17448                           	opt callstack 25
 17449                           
 17450                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 17451                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 17452                           
 17453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17454                           ;incstack = 0
 17455  016F24  50E1               	movf	fsr1l,w,c
 17456  016F26  0FFD               	addlw	-3
 17457  016F28  6ED9               	movwf	fsr2l,c
 17458  016F2A  50E2               	movf	fsr1h,w,c
 17459  016F2C  6EDA               	movwf	fsr2h,c
 17460  016F2E  0EFF               	movlw	255
 17461  016F30  22DA               	addwfc	fsr2h,f,c
 17462  016F32  006F FF78  F0A2    	movff	postinc2,_ADCC_ADI_InterruptHandler
 17463  016F38  006F FF78  F0A3    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 17464  016F3E  006F FF74  F0A4    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 17465                           
 17466                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 17467  016F44  52E5               	movf	postdec1,f,c
 17468  016F46  52E5               	movf	postdec1,f,c
 17469  016F48  52E5               	movf	postdec1,f,c
 17470  016F4A  0012               	return		;funcret
 17471  016F4C                     __end_of_ADCC_SetADIInterruptHandler:
 17472                           	opt callstack 0
 17473                           
 17474 ;; *************** function _MyeaDogM_WriteStringAtPos *****************
 17475 ;; Defined at:
 17476 ;;		line 185 in file "mconfig.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;  r               1  [STACK] const unsigned char 
 17479 ;;  c               1  [STACK] const unsigned char 
 17480 ;;  strPtr          2  [STACK] PTR unsigned char 
 17481 ;;		 -> D.lcd(512), D(514), V(384), 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1  [STACK] void 
 17486 ;; Registers used:
 17487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 17488 ;; Tracked objects:
 17489 ;;		On entry : 3F/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17497 ;;Total ram usage:        0 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; Hardware stack levels required when called:   15
 17500 ;; This function calls:
 17501 ;;		_TimerDone
 17502 ;;		_eaDogM_WriteStringAtPos
 17503 ;;		_get_vterm_ptr
 17504 ;;		_sprintf
 17505 ;;		_update_lcd
 17506 ;;		_wait_lcd_done
 17507 ;; This function is called by:
 17508 ;;		_main
 17509 ;; This function uses a reentrant model
 17510 ;;
 17511                           
 17512                           	psect	text79
 17513  015404                     __ptext79:
 17514                           	opt callstack 0
 17515  015404                     _MyeaDogM_WriteStringAtPos:
 17516                           	opt callstack 15
 17517                           
 17518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17519                           ;incstack = 0
 17520                           ;mconfig.c: 185: void MyeaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *
      +                          strPtr);mconfig.c: 186: {;mconfig.c: 188:  do { LATBbits.LATB5 = ~LATBbits.LATB5; } whil
      +                          e(0);
 17521  015404  AABB               	btfss	16315,5,c	;volatile
 17522  015406  D002               	goto	u11230
 17523  015408  0E01               	movlw	1
 17524  01540A  D001               	goto	u11236
 17525  01540C                     u11230:
 17526  01540C  0E00               	movlw	0
 17527  01540E                     u11236:
 17528  01540E  0AFF               	xorlw	255
 17529  015410  6E43               	movwf	btemp+11,c
 17530  015412  3A43               	swapf	btemp+11,f,c
 17531  015414  4643               	rlncf	btemp+11,f,c
 17532  015416  50BB               	movf	16315,w,c	;volatile
 17533  015418  1843               	xorwf	btemp+11,w,c
 17534  01541A  0BDF               	andlw	-33
 17535  01541C  1843               	xorwf	btemp+11,w,c
 17536  01541E  6EBB               	movwf	16315,c	;volatile
 17537                           
 17538                           ;mconfig.c: 189:  wait_lcd_done();
 17539  015420  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;mconfig.c: 190:  if (V.response.info == DIS_STR) {
 17543  015424  EE23  F041         	lfsr	2,_V+371	;volatile
 17544  015428  50DF               	movf	indf2,w,c
 17545  01542A  A4D8               	btfss	status,2,c
 17546  01542C  D010               	goto	l16580
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;mconfig.c: 191:   eaDogM_WriteStringAtPos(r, c, strPtr);
 17550                           ;stkvar	_strPtr @ sp[(0)+-4]
 17551  01542E  0EFC               	movlw	-4
 17552  015430  006F FF8F FFE6     	movff	plusw1,postinc1
 17553  015436  006F FF8F FFE6     	movff	plusw1,postinc1
 17554                           
 17555                           ;stkvar	_c @ sp[(-2)+-2]
 17556  01543C  0EFC               	movlw	-4
 17557  01543E  50E3               	movf	plusw1,w,c
 17558  015440  6EE6               	movwf	postinc1,c
 17559                           
 17560                           ;stkvar	_r @ sp[(-3)+-1]
 17561  015442  0EFC               	movlw	-4
 17562  015444  50E3               	movf	plusw1,w,c
 17563  015446  6EE6               	movwf	postinc1,c
 17564  015448  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 17565                           
 17566                           ;mconfig.c: 192:  } else {
 17567  01544C  D059               	goto	l16596
 17568  01544E                     l16580:
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;mconfig.c: 193:   if (V.response.info == DIS_HELP) {
 17572  01544E  0063  F107  FFE8   	movff	_V+371,wreg	;volatile
 17573  015454  0A06               	xorlw	6
 17574  015456  A4D8               	btfss	status,2,c
 17575  015458  D01D               	goto	l16584
 17576                           
 17577                           ; BSR set to: 0
 17578                           ;mconfig.c: 194:    sprintf(get_vterm_ptr(2, 1), "%s", V.info);
 17579  01545A  0EB5               	movlw	low (_V+231)
 17580  01545C  6EE6               	movwf	postinc1,c
 17581  01545E  0E0B               	movlw	high (_V+231)
 17582  015460  6EE6               	movwf	postinc1,c
 17583  015462  0EFB               	movlw	low STR_26
 17584  015464  6EE6               	movwf	postinc1,c
 17585  015466  0EFF               	movlw	high STR_26
 17586  015468  6EE6               	movwf	postinc1,c
 17587  01546A  0E01               	movlw	1
 17588  01546C  6EE6               	movwf	postinc1,c
 17589  01546E  0E02               	movlw	2
 17590  015470  6EE6               	movwf	postinc1,c
 17591  015472  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 17592  015476  0060  F0E3  FFE6   	movff	btemp,postinc1
 17593  01547C  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 17594  015482  0E06               	movlw	6
 17595  015484  6EE6               	movwf	postinc1,c
 17596  015486  EC13  F0AB         	call	_sprintf	;wreg free
 17597                           
 17598                           ;mconfig.c: 195:    update_lcd(1);
 17599  01548A  0E01               	movlw	1
 17600  01548C  6EE6               	movwf	postinc1,c
 17601  01548E  EC8B  F0AA         	call	_update_lcd	;wreg free
 17602                           
 17603                           ;mconfig.c: 196:   } else {
 17604  015492  D026               	goto	l16590
 17605  015494                     l16584:
 17606                           
 17607                           ; BSR set to: 0
 17608                           ;mconfig.c: 197:    if ((V.response.info != DIS_STR)) {
 17609  015494  EE23  F041         	lfsr	2,_V+371	;volatile
 17610  015498  50DF               	movf	indf2,w,c
 17611  01549A  B4D8               	btfsc	status,2,c
 17612  01549C  D005               	goto	l16588
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;mconfig.c: 198:     update_lcd(2);
 17616  01549E  0E02               	movlw	2
 17617  0154A0  6EE6               	movwf	postinc1,c
 17618  0154A2  EC8B  F0AA         	call	_update_lcd	;wreg free
 17619                           
 17620                           ;mconfig.c: 199:    } else {
 17621  0154A6  D01C               	goto	l16590
 17622  0154A8                     l16588:
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;mconfig.c: 200:     sprintf(get_vterm_ptr(2, 0), "%s", V.info);
 17626  0154A8  0EB5               	movlw	low (_V+231)
 17627  0154AA  6EE6               	movwf	postinc1,c
 17628  0154AC  0E0B               	movlw	high (_V+231)
 17629  0154AE  6EE6               	movwf	postinc1,c
 17630  0154B0  0EFB               	movlw	low STR_26
 17631  0154B2  6EE6               	movwf	postinc1,c
 17632  0154B4  0EFF               	movlw	high STR_26
 17633  0154B6  6EE6               	movwf	postinc1,c
 17634  0154B8  0E00               	movlw	0
 17635  0154BA  6EE6               	movwf	postinc1,c
 17636  0154BC  0E02               	movlw	2
 17637  0154BE  6EE6               	movwf	postinc1,c
 17638  0154C0  ECE2  F0B5         	call	_get_vterm_ptr	;wreg free
 17639  0154C4  0060  F0E3  FFE6   	movff	btemp,postinc1
 17640  0154CA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 17641  0154D0  0E06               	movlw	6
 17642  0154D2  6EE6               	movwf	postinc1,c
 17643  0154D4  EC13  F0AB         	call	_sprintf	;wreg free
 17644                           
 17645                           ;mconfig.c: 201:     update_lcd(0);
 17646  0154D8  0E00               	movlw	0
 17647  0154DA  6EE6               	movwf	postinc1,c
 17648  0154DC  EC8B  F0AA         	call	_update_lcd	;wreg free
 17649  0154E0                     l16590:
 17650                           
 17651                           ;mconfig.c: 205:   if ((V.response.info != DIS_STR) && TimerDone(TMR_INFO))
 17652  0154E0  EE23  F041         	lfsr	2,_V+371	;volatile
 17653  0154E4  50DF               	movf	indf2,w,c
 17654  0154E6  B4D8               	btfsc	status,2,c
 17655  0154E8  D00B               	goto	l16596
 17656  0154EA  0E07               	movlw	7
 17657  0154EC  6EE6               	movwf	postinc1,c
 17658  0154EE  ECF5  F0B7         	call	_TimerDone	;wreg free
 17659  0154F2  5038               	movf	btemp,w,c
 17660  0154F4  B4D8               	btfsc	status,2,c
 17661  0154F6  D004               	goto	l16596
 17662                           
 17663                           ;mconfig.c: 206:    V.response.info = DIS_STR;
 17664  0154F8  0E00               	movlw	0
 17665  0154FA  006F FFA0  FC41    	movff	wreg,_V+371	;volatile
 17666  015500                     l16596:
 17667                           
 17668                           ;mconfig.c: 212:  if (D.last_info == DIS_HELP && V.response.info != DIS_HELP) {
 17669  015500  0062  F407  FFE8   	movff	_D+513,wreg
 17670  015506  0A06               	xorlw	6
 17671                           
 17672                           ;mconfig.c: 216:  D.last_info = V.response.info;
 17673                           
 17674                           ;mconfig.c: 214:  }
 17675  015508  CC41  F901         	movff	_V+371,_D+513	;volatile
 17676                           
 17677                           ; _MyeaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 17678  01550C  52E5               	movf	postdec1,f,c
 17679  01550E  52E5               	movf	postdec1,f,c
 17680  015510  52E5               	movf	postdec1,f,c
 17681  015512  52E5               	movf	postdec1,f,c
 17682  015514  0012               	return		;funcret
 17683  015516                     __end_of_MyeaDogM_WriteStringAtPos:
 17684                           	opt callstack 0
 17685                           
 17686 ;; *************** function _update_lcd *****************
 17687 ;; Defined at:
 17688 ;;		line 91 in file "mconfig.c"
 17689 ;; Parameters:    Size  Location     Type
 17690 ;;  vterm           1  [STACK] unsigned char 
 17691 ;; Auto vars:     Size  Location     Type
 17692 ;;		None
 17693 ;; Return value:  Size  Location     Type
 17694 ;;                  1  [STACK] unsigned char 
 17695 ;; Registers used:
 17696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 17697 ;; Tracked objects:
 17698 ;;		On entry : 0/0
 17699 ;;		On exit  : 0/0
 17700 ;;		Unchanged: 0/0
 17701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17706 ;;Total ram usage:        0 bytes
 17707 ;; Hardware stack levels used:    1
 17708 ;; Hardware stack levels required when called:   14
 17709 ;; This function calls:
 17710 ;;		_eaDogM_WriteStringAtPos
 17711 ;;		_wait_lcd_done
 17712 ;; This function is called by:
 17713 ;;		_main
 17714 ;;		_check_help
 17715 ;;		_MyeaDogM_WriteStringAtPos
 17716 ;; This function uses a reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text80
 17720  015516                     __ptext80:
 17721                           	opt callstack 0
 17722  015516                     _update_lcd:
 17723                           	opt callstack 16
 17724                           
 17725                           ;mconfig.c: 91: uint8_t update_lcd(uint8_t vterm);mconfig.c: 92: {;mconfig.c: 93:  vterm
      +                           = vterm & 0x03;
 17726                           ;stkvar	_vterm @ sp[(0)+-1]
 17727                           
 17728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17729                           ;incstack = 0
 17730  015516  0EFF               	movlw	-1
 17731  015518  006F FF8C  F038    	movff	plusw1,btemp
 17732  01551E  0E03               	movlw	3
 17733  015520  1638               	andwf	btemp,f,c
 17734  015522  0EFF               	movlw	-1
 17735  015524  0060  F0E3  FFE3   	movff	btemp,plusw1
 17736                           
 17737                           ;mconfig.c: 95:  if (D.vterm >= 1 && vterm == 0)
 17738  01552A  EE22  F100         	lfsr	2,_D+512
 17739  01552E  A0DF               	btfss	indf2,0,c
 17740  015530  D004               	goto	l15968
 17741                           
 17742                           ;stkvar	_vterm @ sp[(0)+-1]
 17743  015532  0EFF               	movlw	-1
 17744  015534  50E3               	movf	plusw1,w,c
 17745  015536  B4D8               	btfsc	status,2,c
 17746  015538  D074               	goto	l2317
 17747  01553A                     l15968:
 17748                           
 17749                           ;mconfig.c: 98:  D.lcd[vterm][0][16] = 0;
 17750                           ;stkvar	_vterm @ sp[(0)+-1]
 17751  01553A  0EFF               	movlw	-1
 17752  01553C  50E3               	movf	plusw1,w,c
 17753  01553E  0D80               	mullw	128
 17754  015540  0E10               	movlw	low (_D+16)
 17755  015542  24F3               	addwf	prodl,w,c
 17756  015544  6ED9               	movwf	fsr2l,c
 17757  015546  0E07               	movlw	high (_D+16)
 17758  015548  20F4               	addwfc	prodh,w,c
 17759  01554A  6EDA               	movwf	fsr2h,c
 17760  01554C  0E00               	movlw	0
 17761  01554E  6EDF               	movwf	indf2,c
 17762                           
 17763                           ;mconfig.c: 99:  D.lcd[vterm][1][16] = 0;
 17764                           ;stkvar	_vterm @ sp[(0)+-1]
 17765  015550  0EFF               	movlw	-1
 17766  015552  50E3               	movf	plusw1,w,c
 17767  015554  0D80               	mullw	128
 17768  015556  0E30               	movlw	low (_D+48)
 17769  015558  24F3               	addwf	prodl,w,c
 17770  01555A  6ED9               	movwf	fsr2l,c
 17771  01555C  0E07               	movlw	high (_D+48)
 17772  01555E  20F4               	addwfc	prodh,w,c
 17773  015560  6EDA               	movwf	fsr2h,c
 17774  015562  0E00               	movlw	0
 17775  015564  6EDF               	movwf	indf2,c
 17776                           
 17777                           ;mconfig.c: 100:  D.lcd[vterm][2][16] = 0;
 17778                           ;stkvar	_vterm @ sp[(0)+-1]
 17779  015566  0EFF               	movlw	-1
 17780  015568  50E3               	movf	plusw1,w,c
 17781  01556A  0D80               	mullw	128
 17782  01556C  0E50               	movlw	low (_D+80)
 17783  01556E  24F3               	addwf	prodl,w,c
 17784  015570  6ED9               	movwf	fsr2l,c
 17785  015572  0E07               	movlw	high (_D+80)
 17786  015574  20F4               	addwfc	prodh,w,c
 17787  015576  6EDA               	movwf	fsr2h,c
 17788  015578  0E00               	movlw	0
 17789  01557A  6EDF               	movwf	indf2,c
 17790                           
 17791                           ;mconfig.c: 101:  wait_lcd_done();
 17792  01557C  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;mconfig.c: 102:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 17796                           ;stkvar	_vterm @ sp[(0)+-1]
 17797  015580  0EFF               	movlw	-1
 17798  015582  50E3               	movf	plusw1,w,c
 17799  015584  0D80               	mullw	128
 17800  015586  0E00               	movlw	low _D
 17801  015588  6E42               	movwf	btemp+10,c
 17802  01558A  0E07               	movlw	high _D
 17803  01558C  6E43               	movwf	btemp+11,c
 17804  01558E  50F3               	movf	prodl,w,c
 17805  015590  2642               	addwf	btemp+10,f,c
 17806  015592  50F4               	movf	prodh,w,c
 17807  015594  2243               	addwfc	btemp+11,f,c
 17808  015596  0060  F10B  FFE6   	movff	btemp+10,postinc1
 17809  01559C  0060  F10F  FFE6   	movff	btemp+11,postinc1
 17810  0155A2  0E00               	movlw	0
 17811  0155A4  6EE6               	movwf	postinc1,c
 17812  0155A6  0E00               	movlw	0
 17813  0155A8  6EE6               	movwf	postinc1,c
 17814  0155AA  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 17815                           
 17816                           ; BSR set to: 59
 17817                           ;mconfig.c: 103:  wait_lcd_done();
 17818  0155AE  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;mconfig.c: 104:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 17822                           ;stkvar	_vterm @ sp[(0)+-1]
 17823  0155B2  0EFF               	movlw	-1
 17824  0155B4  50E3               	movf	plusw1,w,c
 17825  0155B6  0D80               	mullw	128
 17826  0155B8  0E00               	movlw	low _D
 17827  0155BA  6E42               	movwf	btemp+10,c
 17828  0155BC  0E07               	movlw	high _D
 17829  0155BE  6E43               	movwf	btemp+11,c
 17830  0155C0  0E20               	movlw	32
 17831  0155C2  2642               	addwf	btemp+10,f,c
 17832  0155C4  0E00               	movlw	0
 17833  0155C6  2243               	addwfc	btemp+11,f,c
 17834  0155C8  50F3               	movf	prodl,w,c
 17835  0155CA  2642               	addwf	btemp+10,f,c
 17836  0155CC  50F4               	movf	prodh,w,c
 17837  0155CE  2243               	addwfc	btemp+11,f,c
 17838  0155D0  0060  F10B  FFE6   	movff	btemp+10,postinc1
 17839  0155D6  0060  F10F  FFE6   	movff	btemp+11,postinc1
 17840  0155DC  0E00               	movlw	0
 17841  0155DE  6EE6               	movwf	postinc1,c
 17842  0155E0  0E01               	movlw	1
 17843  0155E2  6EE6               	movwf	postinc1,c
 17844  0155E4  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 17845                           
 17846                           ; BSR set to: 59
 17847                           ;mconfig.c: 105:  wait_lcd_done();
 17848  0155E8  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;mconfig.c: 106:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 17852                           ;stkvar	_vterm @ sp[(0)+-1]
 17853  0155EC  0EFF               	movlw	-1
 17854  0155EE  50E3               	movf	plusw1,w,c
 17855  0155F0  0D80               	mullw	128
 17856  0155F2  0E00               	movlw	low _D
 17857  0155F4  6E42               	movwf	btemp+10,c
 17858  0155F6  0E07               	movlw	high _D
 17859  0155F8  6E43               	movwf	btemp+11,c
 17860  0155FA  0E40               	movlw	64
 17861  0155FC  2642               	addwf	btemp+10,f,c
 17862  0155FE  0E00               	movlw	0
 17863  015600  2243               	addwfc	btemp+11,f,c
 17864  015602  50F3               	movf	prodl,w,c
 17865  015604  2642               	addwf	btemp+10,f,c
 17866  015606  50F4               	movf	prodh,w,c
 17867  015608  2243               	addwfc	btemp+11,f,c
 17868  01560A  0060  F10B  FFE6   	movff	btemp+10,postinc1
 17869  015610  0060  F10F  FFE6   	movff	btemp+11,postinc1
 17870  015616  0E00               	movlw	0
 17871  015618  6EE6               	movwf	postinc1,c
 17872  01561A  0E02               	movlw	2
 17873  01561C  6EE6               	movwf	postinc1,c
 17874  01561E  EC7D  F0B5         	call	_eaDogM_WriteStringAtPos	;wreg free
 17875  015622                     l2317:
 17876                           
 17877                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 17878  015622  52E5               	movf	postdec1,f,c
 17879  015624  0012               	return		;funcret
 17880  015626                     __end_of_update_lcd:
 17881                           	opt callstack 0
 17882                           
 17883 ;; *************** function _eaDogM_WriteStringAtPos *****************
 17884 ;; Defined at:
 17885 ;;		line 252 in file "eadog.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;  r               1  [STACK] const unsigned char 
 17888 ;;  c               1  [STACK] const unsigned char 
 17889 ;;  strPtr          2  [STACK] PTR unsigned char 
 17890 ;;		 -> D.lcd(512), D(514), V(384), 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  1  [STACK] void 
 17895 ;; Registers used:
 17896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 17897 ;; Tracked objects:
 17898 ;;		On entry : 3F/0
 17899 ;;		On exit  : 3F/3B
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17906 ;;Total ram usage:        0 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:   13
 17909 ;; This function calls:
 17910 ;;		_eaDogM_WriteString
 17911 ;;		_send_lcd_cmd_dma
 17912 ;; This function is called by:
 17913 ;;		_update_lcd
 17914 ;;		_vterm_dump
 17915 ;;		_MyeaDogM_WriteStringAtPos
 17916 ;; This function uses a reentrant model
 17917 ;;
 17918                           
 17919                           	psect	text81
 17920  016AFA                     __ptext81:
 17921                           	opt callstack 0
 17922  016AFA                     _eaDogM_WriteStringAtPos:
 17923                           	opt callstack 16
 17924                           
 17925                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 17926                           ;stkvar	_c @ sp[(0)+-2]
 17927                           
 17928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17929                           ;incstack = 0
 17930  016AFA  0EFE               	movlw	-2
 17931  016AFC  006F FF8C  F043    	movff	plusw1,btemp+11
 17932                           
 17933                           ;stkvar	_r @ sp[(0)+-1]
 17934  016B02  0EFF               	movlw	-1
 17935  016B04  50E3               	movf	plusw1,w,c
 17936  016B06  0D10               	mullw	16
 17937  016B08  50F3               	movf	prodl,w,c
 17938  016B0A  2443               	addwf	btemp+11,w,c
 17939  016B0C  0F80               	addlw	128
 17940  016B0E  6EE6               	movwf	postinc1,c
 17941  016B10  ECD4  F0B2         	call	_send_lcd_cmd_dma	;wreg free
 17942                           
 17943                           ; BSR set to: 0
 17944                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
 17945                           ;stkvar	_strPtr @ sp[(0)+-4]
 17946  016B14  0EFC               	movlw	-4
 17947  016B16  006F FF8F FFE6     	movff	plusw1,postinc1
 17948  016B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 17949  016B22  ECE0  F0AE         	call	_eaDogM_WriteString	;wreg free
 17950                           
 17951                           ; BSR set to: 59
 17952                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 17953  016B26  52E5               	movf	postdec1,f,c
 17954  016B28  52E5               	movf	postdec1,f,c
 17955  016B2A  52E5               	movf	postdec1,f,c
 17956  016B2C  52E5               	movf	postdec1,f,c
 17957  016B2E  0012               	return		;funcret
 17958  016B30                     __end_of_eaDogM_WriteStringAtPos:
 17959                           	opt callstack 0
 17960                           
 17961 ;; *************** function _send_lcd_cmd_dma *****************
 17962 ;; Defined at:
 17963 ;;		line 205 in file "eadog.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;  strPtr          1  [STACK] unsigned char 
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;		None
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  1  [STACK] void 
 17970 ;; Registers used:
 17971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/3D
 17974 ;;		On exit  : 3F/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17981 ;;Total ram usage:        0 bytes
 17982 ;; Hardware stack levels used:    1
 17983 ;; Hardware stack levels required when called:   12
 17984 ;; This function calls:
 17985 ;;		_printf
 17986 ;;		_ringBufS_flush
 17987 ;;		_start_lcd
 17988 ;;		_wait_lcd_done
 17989 ;;		_wait_lcd_set
 17990 ;; This function is called by:
 17991 ;;		_eaDogM_WriteCommand
 17992 ;;		_eaDogM_WriteStringAtPos
 17993 ;; This function uses a reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text82
 17997  0165A8                     __ptext82:
 17998                           	opt callstack 0
 17999  0165A8                     _send_lcd_cmd_dma:
 18000                           	opt callstack 16
 18001                           
 18002                           ; BSR set to: 59
 18003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18004                           ;incstack = 0
 18005                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 207:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 18006  0165A8  84BE               	bsf	16318,2,c	;volatile
 18007                           
 18008                           ;eadog.c: 208:  wait_lcd_set();
 18009  0165AA  ECB5  F0B9         	call	_wait_lcd_set	;wreg free
 18010                           
 18011                           ; BSR set to: 0
 18012                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
 18013  0165AE  0E00               	movlw	0
 18014  0165B0  6EE6               	movwf	postinc1,c
 18015  0165B2  0060  F22F  FFE6   	movff	_spi_link+6,postinc1
 18016  0165B8  0060  F233  FFE6   	movff	_spi_link+7,postinc1
 18017  0165BE  ECD1  F0AF         	call	_ringBufS_flush	;wreg free
 18018  0165C2  92BC               	bcf	16316,1,c	;volatile
 18019  0165C4  94BC               	bcf	16316,2,c	;volatile
 18020                           
 18021                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
 18022  0165C6  013B               	movlb	59	; () banked
 18023  0165C8  9FFC               	bcf	252,7,b	;volatile
 18024                           
 18025                           ; BSR set to: 59
 18026                           ;eadog.c: 214:  DMA1SSZ = 1;
 18027  0165CA  0E00               	movlw	0
 18028  0165CC  6FF8               	movwf	248,b	;volatile
 18029  0165CE  0E01               	movlw	1
 18030  0165D0  6FF7               	movwf	247,b	;volatile
 18031                           
 18032                           ; BSR set to: 59
 18033                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
 18034  0165D2  8FFC               	bsf	252,7,b	;volatile
 18035                           
 18036                           ; BSR set to: 59
 18037                           ;eadog.c: 216:  printf("%c", strPtr);
 18038                           ;stkvar	_strPtr @ sp[(0)+-1]
 18039  0165D4  0EFF               	movlw	-1
 18040  0165D6  50E3               	movf	plusw1,w,c
 18041  0165D8  6EE6               	movwf	postinc1,c
 18042  0165DA  0E00               	movlw	0
 18043  0165DC  6EE6               	movwf	postinc1,c
 18044  0165DE  0EF8               	movlw	low STR_27
 18045  0165E0  6EE6               	movwf	postinc1,c
 18046  0165E2  0EFF               	movlw	high STR_27
 18047  0165E4  6EE6               	movwf	postinc1,c
 18048  0165E6  0E04               	movlw	4
 18049  0165E8  6EE6               	movwf	postinc1,c
 18050  0165EA  EC1A  F0B2         	call	_printf	;wreg free
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;eadog.c: 217:  start_lcd();
 18054  0165EE  ECB8  F0B9         	call	_start_lcd	;wreg free
 18055                           
 18056                           ; BSR set to: 59
 18057                           ;eadog.c: 218:  wait_lcd_done();
 18058  0165F2  ECD7  F0B8         	call	_wait_lcd_done	;wreg free
 18059                           
 18060                           ; BSR set to: 0
 18061  0165F6  82BC               	bsf	16316,1,c	;volatile
 18062                           
 18063                           ; BSR set to: 0
 18064                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18065  0165F8  52E5               	movf	postdec1,f,c
 18066  0165FA  0012               	return		;funcret
 18067  0165FC                     __end_of_send_lcd_cmd_dma:
 18068                           	opt callstack 0
 18069                           
 18070 ;; *************** function _wait_lcd_done *****************
 18071 ;; Defined at:
 18072 ;;		line 141 in file "eadog.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;		None
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  1  [STACK] void 
 18079 ;; Registers used:
 18080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 3F/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18090 ;;Total ram usage:        0 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; Hardware stack levels required when called:    4
 18093 ;; This function calls:
 18094 ;;		_wdtdelay
 18095 ;; This function is called by:
 18096 ;;		_send_lcd_cmd_dma
 18097 ;;		_update_lcd
 18098 ;;		_vterm_dump
 18099 ;;		_MyeaDogM_WriteStringAtPos
 18100 ;; This function uses a reentrant model
 18101 ;;
 18102                           
 18103                           	psect	text83
 18104  0171AE                     __ptext83:
 18105                           	opt callstack 0
 18106  0171AE                     _wait_lcd_done:
 18107                           	opt callstack 25
 18108                           
 18109                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
 18110                           
 18111                           ; BSR set to: 0
 18112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18113                           ;incstack = 0
 18114  0171AE  0100               	movlb	0	; () banked
 18115  0171B0  B785               	btfsc	_spi_link& (0+255),3,b	;volatile
 18116  0171B2  D7FD               	goto	_wait_lcd_done
 18117                           
 18118                           ; BSR set to: 0
 18119                           ;eadog.c: 144:  wdtdelay(50);
 18120  0171B4  0E32               	movlw	50
 18121  0171B6  6EE6               	movwf	postinc1,c
 18122  0171B8  0E00               	movlw	0
 18123  0171BA  6EE6               	movwf	postinc1,c
 18124  0171BC  0E00               	movlw	0
 18125  0171BE  6EE6               	movwf	postinc1,c
 18126  0171C0  0E00               	movlw	0
 18127  0171C2  6EE6               	movwf	postinc1,c
 18128  0171C4  ECA7  F0B2         	call	_wdtdelay	;wreg free
 18129                           
 18130                           ; BSR set to: 0
 18131                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 18132  0171C8  0012               	return		;funcret
 18133  0171CA                     __end_of_wait_lcd_done:
 18134                           	opt callstack 0
 18135                           
 18136 ;; *************** function _wdtdelay *****************
 18137 ;; Defined at:
 18138 ;;		line 22 in file "eadog.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;  delay           4  [STACK] const unsigned long 
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;		None
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  1  [STACK] void 
 18145 ;; Registers used:
 18146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 18147 ;; Tracked objects:
 18148 ;;		On entry : 0/0
 18149 ;;		On exit  : 3F/0
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18156 ;;Total ram usage:        0 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:    3
 18159 ;; This function calls:
 18160 ;;		Nothing
 18161 ;; This function is called by:
 18162 ;;		_init_display
 18163 ;;		_send_lcd_cmd
 18164 ;;		_send_lcd_cmd_long
 18165 ;;		_wait_lcd_done
 18166 ;; This function uses a reentrant model
 18167 ;;
 18168                           
 18169                           	psect	text84
 18170  01654E                     __ptext84:
 18171                           	opt callstack 0
 18172  01654E                     _wdtdelay:
 18173                           	opt callstack 25
 18174                           
 18175                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
 18176                           
 18177                           ; BSR set to: 0
 18178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18179                           ;incstack = 0
 18180  01654E  0100               	movlb	0	; () banked
 18181  016550  6B98               	clrf	wdtdelay@dcount& (0+255),b
 18182  016552  6B99               	clrf	(wdtdelay@dcount+1)& (0+255),b
 18183  016554  6B9A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 18184  016556  6B9B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 18185  016558                     l1536:
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;eadog.c: 27:   __nop();
 18189  016558  F000               	nop	
 18190  01655A  0004               	clrwdt		;# 
 18191                           
 18192                           ;eadog.c: 29:  };
 18193  01655C  0E01               	movlw	1
 18194  01655E  0100               	movlb	0	; () banked
 18195  016560  2798               	addwf	wdtdelay@dcount& (0+255),f,b
 18196  016562  0E00               	movlw	0
 18197  016564  2399               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 18198  016566  239A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 18199  016568  239B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;stkvar	_delay @ sp[(0)+-4]
 18203  01656A  0EFC               	movlw	-4
 18204  01656C  006F FF8C  F038    	movff	plusw1,btemp
 18205  016572  5198               	movf	wdtdelay@dcount& (0+255),w,b
 18206  016574  5C38               	subwf	btemp,w,c
 18207  016576  0EFD               	movlw	-3
 18208  016578  006F FF8C  F038    	movff	plusw1,btemp
 18209  01657E  5199               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 18210  016580  5838               	subwfb	btemp,w,c
 18211  016582  0EFE               	movlw	-2
 18212  016584  006F FF8C  F038    	movff	plusw1,btemp
 18213  01658A  519A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 18214  01658C  5838               	subwfb	btemp,w,c
 18215  01658E  0EFF               	movlw	-1
 18216  016590  006F FF8C  F038    	movff	plusw1,btemp
 18217  016596  519B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 18218  016598  5838               	subwfb	btemp,w,c
 18219  01659A  B0D8               	btfsc	status,0,c
 18220  01659C  D7DD               	goto	l1536
 18221                           
 18222                           ; BSR set to: 0
 18223                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 18224  01659E  52E5               	movf	postdec1,f,c
 18225  0165A0  52E5               	movf	postdec1,f,c
 18226  0165A2  52E5               	movf	postdec1,f,c
 18227  0165A4  52E5               	movf	postdec1,f,c
 18228  0165A6  0012               	return		;funcret
 18229  0165A8                     __end_of_wdtdelay:
 18230                           	opt callstack 0
 18231                           
 18232 ;; *************** function _eaDogM_WriteString *****************
 18233 ;; Defined at:
 18234 ;;		line 184 in file "eadog.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;  strPtr          2  [STACK] PTR unsigned char 
 18237 ;;		 -> D.lcd(512), D(514), V(384), 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;		None
 18240 ;; Return value:  Size  Location     Type
 18241 ;;                  1  [STACK] void 
 18242 ;; Registers used:
 18243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18244 ;; Tracked objects:
 18245 ;;		On entry : 3F/0
 18246 ;;		On exit  : 3F/3B
 18247 ;;		Unchanged: 0/0
 18248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18253 ;;Total ram usage:        0 bytes
 18254 ;; Hardware stack levels used:    1
 18255 ;; Hardware stack levels required when called:   12
 18256 ;; This function calls:
 18257 ;;		_printf
 18258 ;;		_ringBufS_flush
 18259 ;;		_start_lcd
 18260 ;;		_strlen
 18261 ;;		_wait_lcd_set
 18262 ;; This function is called by:
 18263 ;;		_eaDogM_WriteStringAtPos
 18264 ;; This function uses a reentrant model
 18265 ;;
 18266                           
 18267                           	psect	text85
 18268  015DC0                     __ptext85:
 18269                           	opt callstack 0
 18270  015DC0                     _eaDogM_WriteString:
 18271                           	opt callstack 16
 18272                           
 18273                           ; BSR set to: 0
 18274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18275                           ;incstack = 0
 18276                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 18277  015DC0  84BE               	bsf	16318,2,c	;volatile
 18278                           
 18279                           ;eadog.c: 187:  wait_lcd_set();
 18280  015DC2  ECB5  F0B9         	call	_wait_lcd_set	;wreg free
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
 18284  015DC6  0E00               	movlw	0
 18285  015DC8  6EE6               	movwf	postinc1,c
 18286  015DCA  0060  F22F  FFE6   	movff	_spi_link+6,postinc1
 18287  015DD0  0060  F233  FFE6   	movff	_spi_link+7,postinc1
 18288  015DD6  ECD1  F0AF         	call	_ringBufS_flush	;wreg free
 18289  015DDA  94BC               	bcf	16316,2,c	;volatile
 18290                           
 18291                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 18292                           ;stkvar	_strPtr @ sp[(0)+-2]
 18293  015DDC  0EFE               	movlw	-2
 18294  015DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 18295  015DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 18296  015DEA  EC34  F0AF         	call	_strlen	;wreg free
 18297  015DEE  5039               	movf	btemp+1,w,c
 18298  015DF0  E104               	bnz	u10700
 18299  015DF2  0E41               	movlw	65
 18300  015DF4  5C38               	subwf	btemp,w,c
 18301  015DF6  A0D8               	btfss	status,0,c
 18302  015DF8  D010               	goto	l15738
 18303  015DFA                     u10700:
 18304                           
 18305                           ;stkvar	_strPtr @ sp[(0)+-2]
 18306  015DFA  0EFE               	movlw	-2
 18307  015DFC  006F FF8C  F042    	movff	plusw1,btemp+10
 18308  015E02  0EFF               	movlw	-1
 18309  015E04  006F FF8C  F043    	movff	plusw1,btemp+11
 18310  015E0A  0E40               	movlw	64
 18311  015E0C  2442               	addwf	btemp+10,w,c
 18312  015E0E  6ED9               	movwf	fsr2l,c
 18313  015E10  0E00               	movlw	0
 18314  015E12  2043               	addwfc	btemp+11,w,c
 18315  015E14  6EDA               	movwf	fsr2h,c
 18316  015E16  0E00               	movlw	0
 18317  015E18  6EDF               	movwf	indf2,c
 18318  015E1A                     l15738:
 18319                           
 18320                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
 18321  015E1A  013B               	movlb	59	; () banked
 18322  015E1C  9FFC               	bcf	252,7,b	;volatile
 18323                           
 18324                           ; BSR set to: 59
 18325                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
 18326                           ;stkvar	_strPtr @ sp[(0)+-2]
 18327  015E1E  0EFE               	movlw	-2
 18328  015E20  006F FF8F FFE6     	movff	plusw1,postinc1
 18329  015E26  006F FF8F FFE6     	movff	plusw1,postinc1
 18330  015E2C  EC34  F0AF         	call	_strlen	;wreg free
 18331  015E30  0060  F0E3  FBF7   	movff	btemp,15351	;volatile
 18332  015E36  0060  F0E7  FBF8   	movff	btemp+1,15352	;volatile
 18333                           
 18334                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
 18335  015E3C  013B               	movlb	59	; () banked
 18336  015E3E  8FFC               	bsf	252,7,b	;volatile
 18337                           
 18338                           ; BSR set to: 59
 18339                           ;eadog.c: 195:  printf("%s", strPtr);
 18340                           ;stkvar	_strPtr @ sp[(0)+-2]
 18341  015E40  0EFE               	movlw	-2
 18342  015E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18343  015E48  006F FF8F FFE6     	movff	plusw1,postinc1
 18344  015E4E  0EFB               	movlw	low STR_26
 18345  015E50  6EE6               	movwf	postinc1,c
 18346  015E52  0EFF               	movlw	high STR_26
 18347  015E54  6EE6               	movwf	postinc1,c
 18348  015E56  0E04               	movlw	4
 18349  015E58  6EE6               	movwf	postinc1,c
 18350  015E5A  EC1A  F0B2         	call	_printf	;wreg free
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;eadog.c: 196:  start_lcd();
 18354  015E5E  ECB8  F0B9         	call	_start_lcd	;wreg free
 18355                           
 18356                           ; BSR set to: 59
 18357                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 18358  015E62  52E5               	movf	postdec1,f,c
 18359  015E64  52E5               	movf	postdec1,f,c
 18360  015E66  0012               	return		;funcret
 18361  015E68                     __end_of_eaDogM_WriteString:
 18362                           	opt callstack 0
 18363                           
 18364 ;; *************** function _wait_lcd_set *****************
 18365 ;; Defined at:
 18366 ;;		line 131 in file "eadog.c"
 18367 ;; Parameters:    Size  Location     Type
 18368 ;;		None
 18369 ;; Auto vars:     Size  Location     Type
 18370 ;;		None
 18371 ;; Return value:  Size  Location     Type
 18372 ;;                  1  [STACK] void 
 18373 ;; Registers used:
 18374 ;;		None
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/3D
 18377 ;;		On exit  : 3F/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18384 ;;Total ram usage:        0 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; Hardware stack levels required when called:    3
 18387 ;; This function calls:
 18388 ;;		Nothing
 18389 ;; This function is called by:
 18390 ;;		_eaDogM_WriteString
 18391 ;;		_send_lcd_cmd_dma
 18392 ;; This function uses a reentrant model
 18393 ;;
 18394                           
 18395                           	psect	text86
 18396  01736A                     __ptext86:
 18397                           	opt callstack 0
 18398  01736A                     _wait_lcd_set:
 18399                           	opt callstack 24
 18400                           
 18401                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
 18402                           
 18403                           ; BSR set to: 59
 18404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18405                           ;incstack = 0
 18406  01736A  0100               	movlb	0	; () banked
 18407  01736C  8785               	bsf	_spi_link& (0+255),3,b	;volatile
 18408                           
 18409                           ; BSR set to: 0
 18410                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 18411  01736E  0012               	return		;funcret
 18412  017370                     __end_of_wait_lcd_set:
 18413                           	opt callstack 0
 18414                           
 18415 ;; *************** function _start_lcd *****************
 18416 ;; Defined at:
 18417 ;;		line 126 in file "eadog.c"
 18418 ;; Parameters:    Size  Location     Type
 18419 ;;		None
 18420 ;; Auto vars:     Size  Location     Type
 18421 ;;		None
 18422 ;; Return value:  Size  Location     Type
 18423 ;;                  1  [STACK] void 
 18424 ;; Registers used:
 18425 ;;		None
 18426 ;; Tracked objects:
 18427 ;;		On entry : 3F/0
 18428 ;;		On exit  : 3F/3B
 18429 ;;		Unchanged: 0/0
 18430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18435 ;;Total ram usage:        0 bytes
 18436 ;; Hardware stack levels used:    1
 18437 ;; Hardware stack levels required when called:    3
 18438 ;; This function calls:
 18439 ;;		Nothing
 18440 ;; This function is called by:
 18441 ;;		_eaDogM_WriteString
 18442 ;;		_send_lcd_cmd_dma
 18443 ;; This function uses a reentrant model
 18444 ;;
 18445                           
 18446                           	psect	text87
 18447  017370                     __ptext87:
 18448                           	opt callstack 0
 18449  017370                     _start_lcd:
 18450                           	opt callstack 24
 18451                           
 18452                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
 18453                           
 18454                           ; BSR set to: 0
 18455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18456                           ;incstack = 0
 18457  017370  013B               	movlb	59	; () banked
 18458  017372  8DFC               	bsf	252,6,b	;volatile
 18459                           
 18460                           ; BSR set to: 59
 18461                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 18462  017374  0012               	return		;funcret
 18463  017376                     __end_of_start_lcd:
 18464                           	opt callstack 0
 18465                           
 18466 ;; *************** function _ringBufS_flush *****************
 18467 ;; Defined at:
 18468 ;;		line 76 in file "ringbufs.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18471 ;;		 -> ring_buf1(67), 
 18472 ;;  clearBuffer     1  [STACK] const char 
 18473 ;; Auto vars:     Size  Location     Type
 18474 ;;		None
 18475 ;; Return value:  Size  Location     Type
 18476 ;;                  1  [STACK] void 
 18477 ;; Registers used:
 18478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 18479 ;; Tracked objects:
 18480 ;;		On entry : 3F/0
 18481 ;;		On exit  : 0/0
 18482 ;;		Unchanged: 0/0
 18483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18488 ;;Total ram usage:        0 bytes
 18489 ;; Hardware stack levels used:    1
 18490 ;; Hardware stack levels required when called:    4
 18491 ;; This function calls:
 18492 ;;		_memset
 18493 ;; This function is called by:
 18494 ;;		_eaDogM_WriteString
 18495 ;;		_send_lcd_cmd_dma
 18496 ;; This function uses a reentrant model
 18497 ;;
 18498                           
 18499                           	psect	text88
 18500  015FA2                     __ptext88:
 18501                           	opt callstack 0
 18502  015FA2                     _ringBufS_flush:
 18503                           	opt callstack 23
 18504                           
 18505                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 18506                           ;stkvar	__this @ sp[(0)+-2]
 18507                           
 18508                           ; BSR set to: 59
 18509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18510                           ;incstack = 0
 18511  015FA2  0EFE               	movlw	-2
 18512  015FA4  006F FF8C  F042    	movff	plusw1,btemp+10
 18513  015FAA  0EFF               	movlw	-1
 18514  015FAC  006F FF8C  F043    	movff	plusw1,btemp+11
 18515  015FB2  0E42               	movlw	66
 18516  015FB4  2442               	addwf	btemp+10,w,c
 18517  015FB6  6ED9               	movwf	fsr2l,c
 18518  015FB8  0E00               	movlw	0
 18519  015FBA  2043               	addwfc	btemp+11,w,c
 18520  015FBC  6EDA               	movwf	fsr2h,c
 18521  015FBE  0E00               	movlw	0
 18522  015FC0  6EDF               	movwf	indf2,c
 18523                           
 18524                           ;ringbufs.c: 79:  _this->head = 0;
 18525                           ;stkvar	__this @ sp[(0)+-2]
 18526  015FC2  0EFE               	movlw	-2
 18527  015FC4  006F FF8C  F042    	movff	plusw1,btemp+10
 18528  015FCA  0EFF               	movlw	-1
 18529  015FCC  006F FF8C  F043    	movff	plusw1,btemp+11
 18530  015FD2  0E40               	movlw	64
 18531  015FD4  2442               	addwf	btemp+10,w,c
 18532  015FD6  6ED9               	movwf	fsr2l,c
 18533  015FD8  0E00               	movlw	0
 18534  015FDA  2043               	addwfc	btemp+11,w,c
 18535  015FDC  6EDA               	movwf	fsr2h,c
 18536  015FDE  0E00               	movlw	0
 18537  015FE0  6EDF               	movwf	indf2,c
 18538                           
 18539                           ;ringbufs.c: 80:  _this->tail = 0;
 18540                           ;stkvar	__this @ sp[(0)+-2]
 18541  015FE2  0EFE               	movlw	-2
 18542  015FE4  006F FF8C  F042    	movff	plusw1,btemp+10
 18543  015FEA  0EFF               	movlw	-1
 18544  015FEC  006F FF8C  F043    	movff	plusw1,btemp+11
 18545  015FF2  0E41               	movlw	65
 18546  015FF4  2442               	addwf	btemp+10,w,c
 18547  015FF6  6ED9               	movwf	fsr2l,c
 18548  015FF8  0E00               	movlw	0
 18549  015FFA  2043               	addwfc	btemp+11,w,c
 18550  015FFC  6EDA               	movwf	fsr2h,c
 18551  015FFE  0E00               	movlw	0
 18552  016000  6EDF               	movwf	indf2,c
 18553                           
 18554                           ;ringbufs.c: 81:  if (clearBuffer) {
 18555                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 18556  016002  0EFD               	movlw	-3
 18557  016004  50E3               	movf	plusw1,w,c
 18558  016006  B4D8               	btfsc	status,2,c
 18559  016008  D011               	goto	l1682
 18560                           
 18561                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 18562  01600A  0E40               	movlw	64
 18563  01600C  6EE6               	movwf	postinc1,c
 18564  01600E  0E00               	movlw	0
 18565  016010  6EE6               	movwf	postinc1,c
 18566  016012  0E00               	movlw	0
 18567  016014  6EE6               	movwf	postinc1,c
 18568  016016  0E00               	movlw	0
 18569  016018  6EE6               	movwf	postinc1,c
 18570                           
 18571                           ;stkvar	__this @ sp[(-4)+-2]
 18572  01601A  0EFA               	movlw	-6
 18573  01601C  006F FF8F FFE6     	movff	plusw1,postinc1
 18574  016022  006F FF8F FFE6     	movff	plusw1,postinc1
 18575  016028  ECC5  F099         	call	_memset	;wreg free
 18576  01602C                     l1682:
 18577                           
 18578                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 18579  01602C  52E5               	movf	postdec1,f,c
 18580  01602E  52E5               	movf	postdec1,f,c
 18581  016030  52E5               	movf	postdec1,f,c
 18582  016032  0012               	return		;funcret
 18583  016034                     __end_of_ringBufS_flush:
 18584                           	opt callstack 0
 18585                           
 18586 ;; *************** function _memset *****************
 18587 ;; Defined at:
 18588 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;  dest            2  [STACK] PTR void 
 18591 ;;		 -> ring_buf2(67), ring_buf1(67), 
 18592 ;;  c               2  [STACK] int 
 18593 ;;  n               2  [STACK] unsigned int 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;  s               2  [STACK] PTR unsigned char 
 18596 ;;		 -> ring_buf2(67), ring_buf1(67), 
 18597 ;;  k               2  [STACK] unsigned int 
 18598 ;; Return value:  Size  Location     Type
 18599 ;;                  2  [STACK] PTR void 
 18600 ;; Registers used:
 18601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;Total ram usage:        0 bytes
 18612 ;; Hardware stack levels used:    1
 18613 ;; Hardware stack levels required when called:    3
 18614 ;; This function calls:
 18615 ;;		Nothing
 18616 ;; This function is called by:
 18617 ;;		_ringBufS_init
 18618 ;;		_ringBufS_flush
 18619 ;; This function uses a reentrant model
 18620 ;;
 18621                           
 18622                           	psect	text89
 18623  01338A                     __ptext89:
 18624                           	opt callstack 0
 18625  01338A                     _memset:
 18626                           	opt callstack 0
 18627                           
 18628                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18629  01338A  52E6               	movf	postinc1,f,c
 18630  01338C  52E6               	movf	postinc1,f,c
 18631  01338E  52E6               	movf	postinc1,f,c
 18632  013390  52E6               	movf	postinc1,f,c
 18633                           
 18634                           ;stkvar	_dest @ sp[(-4)+-2]
 18635                           
 18636                           ;incstack = 0
 18637  013392  0EFA               	movlw	-6
 18638  013394  006F FF8C  F042    	movff	plusw1,btemp+10
 18639  01339A  0EFB               	movlw	-5
 18640  01339C  006F FF8C  F043    	movff	plusw1,btemp+11
 18641                           
 18642                           ;stkvar	_s @ sp[(-4)+0]
 18643  0133A2  0EFD               	movlw	-3
 18644  0133A4  0060  F10F  FFE3   	movff	btemp+11,plusw1
 18645  0133AA  0EFC               	movlw	-4
 18646  0133AC  0060  F10B  FFE3   	movff	btemp+10,plusw1
 18647                           
 18648                           ;stkvar	_n @ sp[(-4)+-6]
 18649  0133B2  0EF6               	movlw	-10
 18650  0133B4  006F FF8C  F038    	movff	plusw1,btemp
 18651  0133BA  0EF7               	movlw	-9
 18652  0133BC  50E3               	movf	plusw1,w,c
 18653  0133BE  1038               	iorwf	btemp,w,c
 18654  0133C0  B4D8               	btfsc	status,2,c
 18655  0133C2  D154               	goto	u8170
 18656                           
 18657                           ;stkvar	_c @ sp[(-4)+-4]
 18658                           ;stkvar	_s @ sp[(-4)+0]
 18659  0133C4  0EFC               	movlw	-4
 18660  0133C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 18661  0133CC  0EFD               	movlw	-3
 18662  0133CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 18663  0133D4  0EF8               	movlw	-8
 18664  0133D6  006F FF8F FFDF     	movff	plusw1,indf2
 18665                           
 18666                           ;stkvar	_c @ sp[(-4)+-4]
 18667                           ;stkvar	_n @ sp[(-4)+-6]
 18668                           ;stkvar	_s @ sp[(-4)+0]
 18669  0133DC  0EFC               	movlw	-4
 18670  0133DE  006F FF8C  F042    	movff	plusw1,btemp+10
 18671  0133E4  0EFD               	movlw	-3
 18672  0133E6  006F FF8C  F043    	movff	plusw1,btemp+11
 18673  0133EC  0EF6               	movlw	-10
 18674  0133EE  50E3               	movf	plusw1,w,c
 18675  0133F0  2642               	addwf	btemp+10,f,c
 18676  0133F2  0EF7               	movlw	-9
 18677  0133F4  50E3               	movf	plusw1,w,c
 18678  0133F6  2243               	addwfc	btemp+11,f,c
 18679  0133F8  0EFF               	movlw	255
 18680  0133FA  2442               	addwf	btemp+10,w,c
 18681  0133FC  6ED9               	movwf	fsr2l,c
 18682  0133FE  0EFF               	movlw	255
 18683  013400  2043               	addwfc	btemp+11,w,c
 18684  013402  6EDA               	movwf	fsr2h,c
 18685  013404  0EF8               	movlw	-8
 18686  013406  006F FF8F FFDF     	movff	plusw1,indf2
 18687                           
 18688                           ;stkvar	_n @ sp[(-4)+-6]
 18689  01340C  0EF7               	movlw	-9
 18690  01340E  50E3               	movf	plusw1,w,c
 18691  013410  E108               	bnz	l12232
 18692  013412  0EF6               	movlw	-10
 18693  013414  006F FF8C  F038    	movff	plusw1,btemp
 18694  01341A  0E03               	movlw	3
 18695  01341C  5E38               	subwf	btemp,f,c
 18696  01341E  A0D8               	btfss	status,0,c
 18697  013420  D125               	goto	u8170
 18698  013422                     l12232:
 18699                           
 18700                           ;stkvar	_c @ sp[(-4)+-4]
 18701                           ;stkvar	_s @ sp[(-4)+0]
 18702  013422  0EFC               	movlw	-4
 18703  013424  006F FF8C  F042    	movff	plusw1,btemp+10
 18704  01342A  0EFD               	movlw	-3
 18705  01342C  006F FF8C  F043    	movff	plusw1,btemp+11
 18706  013432  0E01               	movlw	1
 18707  013434  2442               	addwf	btemp+10,w,c
 18708  013436  6ED9               	movwf	fsr2l,c
 18709  013438  0E00               	movlw	0
 18710  01343A  2043               	addwfc	btemp+11,w,c
 18711  01343C  6EDA               	movwf	fsr2h,c
 18712  01343E  0EF8               	movlw	-8
 18713  013440  006F FF8F FFDF     	movff	plusw1,indf2
 18714                           
 18715                           ;stkvar	_c @ sp[(-4)+-4]
 18716                           ;stkvar	_s @ sp[(-4)+0]
 18717  013446  0EFC               	movlw	-4
 18718  013448  006F FF8C  F042    	movff	plusw1,btemp+10
 18719  01344E  0EFD               	movlw	-3
 18720  013450  006F FF8C  F043    	movff	plusw1,btemp+11
 18721  013456  0E02               	movlw	2
 18722  013458  2442               	addwf	btemp+10,w,c
 18723  01345A  6ED9               	movwf	fsr2l,c
 18724  01345C  0E00               	movlw	0
 18725  01345E  2043               	addwfc	btemp+11,w,c
 18726  013460  6EDA               	movwf	fsr2h,c
 18727  013462  0EF8               	movlw	-8
 18728  013464  006F FF8F FFDF     	movff	plusw1,indf2
 18729                           
 18730                           ;stkvar	_c @ sp[(-4)+-4]
 18731                           ;stkvar	_n @ sp[(-4)+-6]
 18732                           ;stkvar	_s @ sp[(-4)+0]
 18733  01346A  0EFC               	movlw	-4
 18734  01346C  006F FF8C  F042    	movff	plusw1,btemp+10
 18735  013472  0EFD               	movlw	-3
 18736  013474  006F FF8C  F043    	movff	plusw1,btemp+11
 18737  01347A  0EF6               	movlw	-10
 18738  01347C  50E3               	movf	plusw1,w,c
 18739  01347E  2642               	addwf	btemp+10,f,c
 18740  013480  0EF7               	movlw	-9
 18741  013482  50E3               	movf	plusw1,w,c
 18742  013484  2243               	addwfc	btemp+11,f,c
 18743  013486  0EFE               	movlw	254
 18744  013488  2442               	addwf	btemp+10,w,c
 18745  01348A  6ED9               	movwf	fsr2l,c
 18746  01348C  0EFF               	movlw	255
 18747  01348E  2043               	addwfc	btemp+11,w,c
 18748  013490  6EDA               	movwf	fsr2h,c
 18749  013492  0EF8               	movlw	-8
 18750  013494  006F FF8F FFDF     	movff	plusw1,indf2
 18751                           
 18752                           ;stkvar	_c @ sp[(-4)+-4]
 18753                           ;stkvar	_n @ sp[(-4)+-6]
 18754                           ;stkvar	_s @ sp[(-4)+0]
 18755  01349A  0EFC               	movlw	-4
 18756  01349C  006F FF8C  F042    	movff	plusw1,btemp+10
 18757  0134A2  0EFD               	movlw	-3
 18758  0134A4  006F FF8C  F043    	movff	plusw1,btemp+11
 18759  0134AA  0EF6               	movlw	-10
 18760  0134AC  50E3               	movf	plusw1,w,c
 18761  0134AE  2642               	addwf	btemp+10,f,c
 18762  0134B0  0EF7               	movlw	-9
 18763  0134B2  50E3               	movf	plusw1,w,c
 18764  0134B4  2243               	addwfc	btemp+11,f,c
 18765  0134B6  0EFD               	movlw	253
 18766  0134B8  2442               	addwf	btemp+10,w,c
 18767  0134BA  6ED9               	movwf	fsr2l,c
 18768  0134BC  0EFF               	movlw	255
 18769  0134BE  2043               	addwfc	btemp+11,w,c
 18770  0134C0  6EDA               	movwf	fsr2h,c
 18771  0134C2  0EF8               	movlw	-8
 18772  0134C4  006F FF8F FFDF     	movff	plusw1,indf2
 18773                           
 18774                           ;stkvar	_n @ sp[(-4)+-6]
 18775  0134CA  0EF7               	movlw	-9
 18776  0134CC  50E3               	movf	plusw1,w,c
 18777  0134CE  E108               	bnz	l12238
 18778  0134D0  0EF6               	movlw	-10
 18779  0134D2  006F FF8C  F038    	movff	plusw1,btemp
 18780  0134D8  0E07               	movlw	7
 18781  0134DA  5E38               	subwf	btemp,f,c
 18782  0134DC  A0D8               	btfss	status,0,c
 18783  0134DE  D0C6               	goto	u8170
 18784  0134E0                     l12238:
 18785                           
 18786                           ;stkvar	_c @ sp[(-4)+-4]
 18787                           ;stkvar	_s @ sp[(-4)+0]
 18788  0134E0  0EFC               	movlw	-4
 18789  0134E2  006F FF8C  F042    	movff	plusw1,btemp+10
 18790  0134E8  0EFD               	movlw	-3
 18791  0134EA  006F FF8C  F043    	movff	plusw1,btemp+11
 18792  0134F0  0E03               	movlw	3
 18793  0134F2  2442               	addwf	btemp+10,w,c
 18794  0134F4  6ED9               	movwf	fsr2l,c
 18795  0134F6  0E00               	movlw	0
 18796  0134F8  2043               	addwfc	btemp+11,w,c
 18797  0134FA  6EDA               	movwf	fsr2h,c
 18798  0134FC  0EF8               	movlw	-8
 18799  0134FE  006F FF8F FFDF     	movff	plusw1,indf2
 18800                           
 18801                           ;stkvar	_c @ sp[(-4)+-4]
 18802                           ;stkvar	_n @ sp[(-4)+-6]
 18803                           ;stkvar	_s @ sp[(-4)+0]
 18804  013504  0EFC               	movlw	-4
 18805  013506  006F FF8C  F042    	movff	plusw1,btemp+10
 18806  01350C  0EFD               	movlw	-3
 18807  01350E  006F FF8C  F043    	movff	plusw1,btemp+11
 18808  013514  0EF6               	movlw	-10
 18809  013516  50E3               	movf	plusw1,w,c
 18810  013518  2642               	addwf	btemp+10,f,c
 18811  01351A  0EF7               	movlw	-9
 18812  01351C  50E3               	movf	plusw1,w,c
 18813  01351E  2243               	addwfc	btemp+11,f,c
 18814  013520  0EFC               	movlw	252
 18815  013522  2442               	addwf	btemp+10,w,c
 18816  013524  6ED9               	movwf	fsr2l,c
 18817  013526  0EFF               	movlw	255
 18818  013528  2043               	addwfc	btemp+11,w,c
 18819  01352A  6EDA               	movwf	fsr2h,c
 18820  01352C  0EF8               	movlw	-8
 18821  01352E  006F FF8F FFDF     	movff	plusw1,indf2
 18822                           
 18823                           ;stkvar	_n @ sp[(-4)+-6]
 18824  013534  0EF7               	movlw	-9
 18825  013536  50E3               	movf	plusw1,w,c
 18826  013538  E108               	bnz	l12244
 18827  01353A  0EF6               	movlw	-10
 18828  01353C  006F FF8C  F038    	movff	plusw1,btemp
 18829  013542  0E09               	movlw	9
 18830  013544  5E38               	subwf	btemp,f,c
 18831  013546  A0D8               	btfss	status,0,c
 18832  013548  D091               	goto	u8170
 18833  01354A                     l12244:
 18834                           
 18835                           ;stkvar	_s @ sp[(-4)+0]
 18836  01354A  0EFC               	movlw	-4
 18837  01354C  006F FF8C  F042    	movff	plusw1,btemp+10
 18838  013552  1E42               	comf	btemp+10,f,c
 18839  013554  0EFD               	movlw	-3
 18840  013556  006F FF8C  F043    	movff	plusw1,btemp+11
 18841  01355C  1E43               	comf	btemp+11,f,c
 18842  01355E  2A42               	incf	btemp+10,f,c
 18843  013560  B4D8               	btfsc	status,2,c
 18844  013562  2A43               	incf	btemp+11,f,c
 18845  013564  0E03               	movlw	3
 18846  013566  1642               	andwf	btemp+10,f,c
 18847  013568  0E00               	movlw	0
 18848  01356A  1643               	andwf	btemp+11,f,c
 18849                           
 18850                           ;stkvar	_k @ sp[(-4)+2]
 18851  01356C  0EFE               	movlw	-2
 18852  01356E  0060  F10B  FFE3   	movff	btemp+10,plusw1
 18853  013574  0EFF               	movlw	-1
 18854  013576  0060  F10F  FFE3   	movff	btemp+11,plusw1
 18855                           
 18856                           ;stkvar	_k @ sp[(-4)+2]
 18857                           ;stkvar	_s @ sp[(-4)+0]
 18858  01357C  0EFC               	movlw	-4
 18859  01357E  50E3               	movf	plusw1,w,c
 18860  013580  6E38               	movwf	btemp,c
 18861  013582  0EFE               	movlw	-2
 18862  013584  50E3               	movf	plusw1,w,c
 18863  013586  2638               	addwf	btemp,f,c
 18864  013588  0EFC               	movlw	-4
 18865  01358A  0060  F0E3  FFE3   	movff	btemp,plusw1
 18866  013590  0EFD               	movlw	-3
 18867  013592  50E3               	movf	plusw1,w,c
 18868  013594  6E38               	movwf	btemp,c
 18869  013596  0EFF               	movlw	-1
 18870  013598  50E3               	movf	plusw1,w,c
 18871  01359A  2238               	addwfc	btemp,f,c
 18872  01359C  0EFD               	movlw	-3
 18873  01359E  0060  F0E3  FFE3   	movff	btemp,plusw1
 18874                           
 18875                           ;stkvar	_k @ sp[(-4)+2]
 18876                           ;stkvar	_n @ sp[(-4)+-6]
 18877  0135A4  0EF6               	movlw	-10
 18878  0135A6  50E3               	movf	plusw1,w,c
 18879  0135A8  6E38               	movwf	btemp,c
 18880  0135AA  0EFE               	movlw	-2
 18881  0135AC  50E3               	movf	plusw1,w,c
 18882  0135AE  5E38               	subwf	btemp,f,c
 18883  0135B0  0EF6               	movlw	-10
 18884  0135B2  0060  F0E3  FFE3   	movff	btemp,plusw1
 18885  0135B8  0EF7               	movlw	-9
 18886  0135BA  50E3               	movf	plusw1,w,c
 18887  0135BC  6E38               	movwf	btemp,c
 18888  0135BE  0EFF               	movlw	-1
 18889  0135C0  50E3               	movf	plusw1,w,c
 18890  0135C2  5A38               	subwfb	btemp,f,c
 18891  0135C4  0EF7               	movlw	-9
 18892  0135C6  0060  F0E3  FFE3   	movff	btemp,plusw1
 18893  0135CC  0EFC               	movlw	252
 18894  0135CE  6E42               	movwf	btemp+10,c
 18895  0135D0  0EFF               	movlw	255
 18896  0135D2  6E43               	movwf	btemp+11,c
 18897                           
 18898                           ;stkvar	_n @ sp[(-4)+-6]
 18899  0135D4  0EF6               	movlw	-10
 18900  0135D6  006F FF8C  F038    	movff	plusw1,btemp
 18901  0135DC  5042               	movf	btemp+10,w,c
 18902  0135DE  1638               	andwf	btemp,f,c
 18903  0135E0  0EF6               	movlw	-10
 18904  0135E2  0060  F0E3  FFE3   	movff	btemp,plusw1
 18905  0135E8  0EF7               	movlw	-9
 18906  0135EA  006F FF8C  F038    	movff	plusw1,btemp
 18907  0135F0  5043               	movf	btemp+11,w,c
 18908  0135F2  1638               	andwf	btemp,f,c
 18909  0135F4  0EF7               	movlw	-9
 18910  0135F6  D02E               	goto	L34
 18911  0135F8                     l12252:
 18912                           
 18913                           ;stkvar	_c @ sp[(-4)+-4]
 18914                           ;stkvar	_s @ sp[(-4)+0]
 18915  0135F8  0EFC               	movlw	-4
 18916  0135FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 18917  013600  0EFD               	movlw	-3
 18918  013602  006F FF8F FFDA     	movff	plusw1,fsr2h
 18919  013608  0EF8               	movlw	-8
 18920  01360A  006F FF8F FFDF     	movff	plusw1,indf2
 18921                           
 18922                           ;stkvar	_n @ sp[(-4)+-6]
 18923  013610  0EF6               	movlw	-10
 18924  013612  006F FF8C  F038    	movff	plusw1,btemp
 18925  013618  0E01               	movlw	1
 18926  01361A  5E38               	subwf	btemp,f,c
 18927  01361C  0EF6               	movlw	-10
 18928  01361E  0060  F0E3  FFE3   	movff	btemp,plusw1
 18929  013624  0EF7               	movlw	-9
 18930  013626  006F FF8C  F038    	movff	plusw1,btemp
 18931  01362C  0E00               	movlw	0
 18932  01362E  5A38               	subwfb	btemp,f,c
 18933  013630  0EF7               	movlw	-9
 18934  013632  0060  F0E3  FFE3   	movff	btemp,plusw1
 18935                           
 18936                           ;stkvar	_s @ sp[(-4)+0]
 18937  013638  0EFC               	movlw	-4
 18938  01363A  50E3               	movf	plusw1,w,c
 18939  01363C  0F01               	addlw	1
 18940  01363E  6E38               	movwf	btemp,c
 18941  013640  0EFC               	movlw	-4
 18942  013642  0060  F0E3  FFE3   	movff	btemp,plusw1
 18943  013648  6A38               	clrf	btemp,c
 18944  01364A  0EFD               	movlw	-3
 18945  01364C  50E3               	movf	plusw1,w,c
 18946  01364E  2038               	addwfc	btemp,w,c
 18947  013650  6E38               	movwf	btemp,c
 18948  013652  0EFD               	movlw	-3
 18949  013654                     L34:
 18950  013654  0060  F0E3  FFE3   	movff	btemp,plusw1
 18951                           
 18952                           ;stkvar	_n @ sp[(-4)+-6]
 18953  01365A  0EF6               	movlw	-10
 18954  01365C  006F FF8C  F038    	movff	plusw1,btemp
 18955  013662  0EF7               	movlw	-9
 18956  013664  50E3               	movf	plusw1,w,c
 18957  013666  1038               	iorwf	btemp,w,c
 18958  013668  A4D8               	btfss	status,2,c
 18959  01366A  D7C6               	goto	l12252
 18960  01366C                     u8170:
 18961                           
 18962                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 18963  01366C  0EF6               	movlw	246
 18964  01366E  26E1               	addwf	fsr1l,f,c
 18965  013670  0EFF               	movlw	255
 18966  013672  22E2               	addwfc	fsr1h,f,c
 18967  013674  0012               	return		;funcret
 18968  013676                     __end_of_memset:
 18969                           	opt callstack 0
 18970                           
 18971 ;; *************** function _printf *****************
 18972 ;; Defined at:
 18973 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;  fmt             2  [STACK] PTR const unsigned char 
 18976 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;  ap              2  [STACK] PTR void [1]
 18979 ;;		 -> ?_printf(2), ?_sprintf(2), 
 18980 ;;  ret             2    0        int 
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  2  [STACK] int 
 18983 ;; Registers used:
 18984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18985 ;; Tracked objects:
 18986 ;;		On entry : 3F/3B
 18987 ;;		On exit  : 3F/0
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18994 ;;Total ram usage:        0 bytes
 18995 ;; Hardware stack levels used:    1
 18996 ;; Hardware stack levels required when called:   11
 18997 ;; This function calls:
 18998 ;;		_vfprintf
 18999 ;; This function is called by:
 19000 ;;		_eaDogM_WriteString
 19001 ;;		_send_lcd_cmd_dma
 19002 ;; This function uses a reentrant model
 19003 ;;
 19004                           
 19005                           	psect	text90
 19006  016434                     __ptext90:
 19007                           	opt callstack 0
 19008  016434                     _printf:
 19009                           	opt callstack 0
 19010                           
 19011                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19012  016434  52E6               	movf	postinc1,f,c
 19013  016436  52E6               	movf	postinc1,f,c
 19014                           
 19015                           ;stkvar	?_printf @ sp[(-2)+-3]
 19016                           
 19017                           ;incstack = 0
 19018  016438  0EFB               	movlw	251
 19019  01643A  24E1               	addwf	fsr1l,w,c
 19020  01643C  6E42               	movwf	btemp+10,c
 19021  01643E  0EFF               	movlw	255
 19022  016440  20E2               	addwfc	fsr1h,w,c
 19023  016442  6E43               	movwf	btemp+11,c
 19024                           
 19025                           ;stkvar	_ap @ sp[(-2)+0]
 19026  016444  0EFF               	movlw	-1
 19027  016446  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19028  01644C  0EFE               	movlw	-2
 19029  01644E  0060  F10B  FFE3   	movff	btemp+10,plusw1
 19030                           
 19031                           ;stkvar	_ap @ sp[(-2)+0]
 19032  016454  0EFE               	movlw	254
 19033  016456  24E1               	addwf	fsr1l,w,c
 19034  016458  6E38               	movwf	btemp,c
 19035  01645A  0EFF               	movlw	255
 19036  01645C  20E2               	addwfc	fsr1h,w,c
 19037  01645E  6E39               	movwf	btemp+1,c
 19038  016460  0060  F0E3  FFE6   	movff	btemp,postinc1
 19039  016466  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 19040                           
 19041                           ;stkvar	_fmt @ sp[(-4)+-3]
 19042  01646C  0EF9               	movlw	-7
 19043  01646E  006F FF8F FFE6     	movff	plusw1,postinc1
 19044  016474  006F FF8F FFE6     	movff	plusw1,postinc1
 19045  01647A  0E00               	movlw	0
 19046  01647C  6EE6               	movwf	postinc1,c
 19047  01647E  0E00               	movlw	0
 19048  016480  6EE6               	movwf	postinc1,c
 19049  016482  ECE1  F0AD         	call	_vfprintf	;wreg free
 19050                           
 19051                           ; BSR set to: 0
 19052                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 19053  016486  52E5               	movf	postdec1,f,c
 19054  016488  52E5               	movf	postdec1,f,c
 19055  01648A  52E5               	movf	postdec1,f,c
 19056  01648C  50E7               	movf	indf1,w,c
 19057  01648E  5EE1               	subwf	fsr1l,f,c
 19058  016490  0E00               	movlw	0
 19059  016492  5AE2               	subwfb	fsr1h,f,c
 19060  016494  0012               	return		;funcret
 19061  016496                     __end_of_printf:
 19062                           	opt callstack 0
 19063                           
 19064 ;; *************** function _sprintf *****************
 19065 ;; Defined at:
 19066 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
 19067 ;; Parameters:    Size  Location     Type
 19068 ;;  s               2  [STACK] PTR unsigned char 
 19069 ;;		 -> D.lcd(512), D(514), V(384), 
 19070 ;;  fmt             2  [STACK] PTR const unsigned char 
 19071 ;;		 -> STR_62(3), STR_61(3), STR_60(19), STR_59(19), 
 19072 ;;		 -> STR_58(19), STR_57(19), STR_56(25), STR_55(26), 
 19073 ;;		 -> STR_54(21), STR_53(23), STR_52(19), STR_51(19), 
 19074 ;;		 -> STR_50(20), STR_49(18), STR_48(20), STR_47(18), 
 19075 ;;		 -> STR_46(20), STR_45(18), STR_44(20), STR_43(22), 
 19076 ;;		 -> STR_42(15), STR_41(15), STR_40(15), STR_39(10), 
 19077 ;;		 -> STR_38(10), STR_37(19), STR_34(21), STR_33(26), 
 19078 ;;		 -> STR_32(26), STR_31(20), STR_29(91), STR_25(29), 
 19079 ;;		 -> STR_24(26), STR_23(21), STR_22(4), STR_21(19), 
 19080 ;;		 -> STR_20(26), STR_19(21), STR_18(20), STR_17(21), 
 19081 ;;		 -> STR_16(21), STR_15(18), STR_14(24), STR_13(24), 
 19082 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(16), 
 19083 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 19084 ;;		 -> STR_2(15), STR_1(17), 
 19085 ;; Auto vars:     Size  Location     Type
 19086 ;;  f               6  [STACK] struct _IO_FILE
 19087 ;;  ap              2  [STACK] PTR void [1]
 19088 ;;		 -> ?_printf(2), ?_sprintf(2), 
 19089 ;;  ret             2    0        int 
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  2  [STACK] int 
 19092 ;; Registers used:
 19093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 3F/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19103 ;;Total ram usage:        0 bytes
 19104 ;; Hardware stack levels used:    1
 19105 ;; Hardware stack levels required when called:   11
 19106 ;; This function calls:
 19107 ;;		_vfprintf
 19108 ;; This function is called by:
 19109 ;;		_main
 19110 ;;		_s10f1_opcmd
 19111 ;;		_ee_logger
 19112 ;;		_check_help
 19113 ;;		_vterm_dump
 19114 ;;		_vterm_sequence
 19115 ;;		_MyeaDogM_WriteStringAtPos
 19116 ;; This function uses a reentrant model
 19117 ;;
 19118                           
 19119                           	psect	text91
 19120  015626                     __ptext91:
 19121                           	opt callstack 0
 19122  015626                     _sprintf:
 19123                           	opt callstack 0
 19124                           
 19125                           ; BSR set to: 0
 19126                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19127  015626  0E08               	movlw	8
 19128  015628  26E1               	addwf	fsr1l,f,c
 19129  01562A  0E00               	movlw	0
 19130  01562C  22E2               	addwfc	fsr1h,f,c
 19131                           
 19132                           ;incstack = 0
 19133  01562E  0EFE               	movlw	254
 19134  015630  6E42               	movwf	btemp+10,c
 19135  015632  0EFF               	movlw	255
 19136  015634  6E43               	movwf	btemp+11,c
 19137                           
 19138                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 19139  015636  0EF5               	movlw	245
 19140  015638  24E1               	addwf	fsr1l,w,c
 19141  01563A  6E40               	movwf	btemp+8,c
 19142  01563C  0EFF               	movlw	255
 19143  01563E  20E2               	addwfc	fsr1h,w,c
 19144  015640  6E41               	movwf	btemp+9,c
 19145  015642  5042               	movf	btemp+10,w,c
 19146  015644  2640               	addwf	btemp+8,f,c
 19147  015646  5043               	movf	btemp+11,w,c
 19148  015648  2241               	addwfc	btemp+9,f,c
 19149                           
 19150                           ;stkvar	_ap @ sp[(-8)+6]
 19151  01564A  0EFF               	movlw	-1
 19152  01564C  0060  F107  FFE3   	movff	btemp+9,plusw1
 19153  015652  0EFE               	movlw	-2
 19154  015654  0060  F103  FFE3   	movff	btemp+8,plusw1
 19155                           
 19156                           ;stkvar	_s @ sp[(-8)+-3]
 19157  01565A  0EF5               	movlw	-11
 19158  01565C  006F FF8C  F042    	movff	plusw1,btemp+10
 19159  015662  0EF6               	movlw	-10
 19160  015664  006F FF8C  F043    	movff	plusw1,btemp+11
 19161                           
 19162                           ;stkvar	_f @ sp[(-8)+0]
 19163  01566A  0EF9               	movlw	-7
 19164  01566C  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19165  015672  0EF8               	movlw	-8
 19166  015674  0060  F10B  FFE3   	movff	btemp+10,plusw1
 19167                           
 19168                           ;stkvar	_f @ sp[(-8)+0]
 19169  01567A  0EFA               	movlw	250
 19170  01567C  24E1               	addwf	fsr1l,w,c
 19171  01567E  6ED9               	movwf	fsr2l,c
 19172  015680  0EFF               	movlw	255
 19173  015682  20E2               	addwfc	fsr1h,w,c
 19174  015684  6EDA               	movwf	fsr2h,c
 19175  015686  0E00               	movlw	0
 19176  015688  6EDE               	movwf	postinc2,c
 19177  01568A  0E00               	movlw	0
 19178  01568C  6EDD               	movwf	postdec2,c
 19179                           
 19180                           ;stkvar	_f @ sp[(-8)+0]
 19181  01568E  0EFC               	movlw	252
 19182  015690  24E1               	addwf	fsr1l,w,c
 19183  015692  6ED9               	movwf	fsr2l,c
 19184  015694  0EFF               	movlw	255
 19185  015696  20E2               	addwfc	fsr1h,w,c
 19186  015698  6EDA               	movwf	fsr2h,c
 19187  01569A  0E00               	movlw	0
 19188  01569C  6EDE               	movwf	postinc2,c
 19189  01569E  0E00               	movlw	0
 19190  0156A0  6EDD               	movwf	postdec2,c
 19191                           
 19192                           ;stkvar	_ap @ sp[(-8)+6]
 19193  0156A2  0EFE               	movlw	254
 19194  0156A4  24E1               	addwf	fsr1l,w,c
 19195  0156A6  6E38               	movwf	btemp,c
 19196  0156A8  0EFF               	movlw	255
 19197  0156AA  20E2               	addwfc	fsr1h,w,c
 19198  0156AC  6E39               	movwf	btemp+1,c
 19199  0156AE  0060  F0E3  FFE6   	movff	btemp,postinc1
 19200  0156B4  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 19201                           
 19202                           ;stkvar	_fmt @ sp[(-10)+-5]
 19203  0156BA  0EF1               	movlw	-15
 19204  0156BC  006F FF8F FFE6     	movff	plusw1,postinc1
 19205  0156C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19206                           
 19207                           ;stkvar	_f @ sp[(-12)+0]
 19208  0156C8  0EF4               	movlw	244
 19209  0156CA  24E1               	addwf	fsr1l,w,c
 19210  0156CC  6E38               	movwf	btemp,c
 19211  0156CE  0EFF               	movlw	255
 19212  0156D0  20E2               	addwfc	fsr1h,w,c
 19213  0156D2  6E39               	movwf	btemp+1,c
 19214  0156D4  0060  F0E3  FFE6   	movff	btemp,postinc1
 19215  0156DA  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 19216  0156E0  ECE1  F0AD         	call	_vfprintf	;wreg free
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;stkvar	_f @ sp[(-8)+0]
 19220  0156E4  0EFA               	movlw	250
 19221  0156E6  24E1               	addwf	fsr1l,w,c
 19222  0156E8  6ED9               	movwf	fsr2l,c
 19223  0156EA  0EFF               	movlw	255
 19224  0156EC  20E2               	addwfc	fsr1h,w,c
 19225  0156EE  6EDA               	movwf	fsr2h,c
 19226  0156F0  006F FF78  F042    	movff	postinc2,btemp+10
 19227  0156F6  006F FF74  F043    	movff	postdec2,btemp+11
 19228                           
 19229                           ;stkvar	_s @ sp[(-8)+-3]
 19230  0156FC  0EF5               	movlw	-11
 19231  0156FE  006F FF8C  F040    	movff	plusw1,btemp+8
 19232  015704  0EF6               	movlw	-10
 19233  015706  006F FF8C  F041    	movff	plusw1,btemp+9
 19234  01570C  5042               	movf	btemp+10,w,c
 19235  01570E  2440               	addwf	btemp+8,w,c
 19236  015710  6ED9               	movwf	fsr2l,c
 19237  015712  5043               	movf	btemp+11,w,c
 19238  015714  2041               	addwfc	btemp+9,w,c
 19239  015716  6EDA               	movwf	fsr2h,c
 19240  015718  0E00               	movlw	0
 19241  01571A  6EDF               	movwf	indf2,c
 19242                           
 19243                           ; BSR set to: 0
 19244                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 4, vargsize = 0
 19245  01571C  0EF8               	movlw	248
 19246  01571E  26E1               	addwf	fsr1l,f,c
 19247  015720  0EFF               	movlw	255
 19248  015722  22E2               	addwfc	fsr1h,f,c
 19249  015724  52E5               	movf	postdec1,f,c
 19250  015726  50E7               	movf	indf1,w,c
 19251  015728  5EE1               	subwf	fsr1l,f,c
 19252  01572A  0E00               	movlw	0
 19253  01572C  5AE2               	subwfb	fsr1h,f,c
 19254  01572E  0012               	return		;funcret
 19255  015730                     __end_of_sprintf:
 19256                           	opt callstack 0
 19257                           
 19258 ;; *************** function _vfprintf *****************
 19259 ;; Defined at:
 19260 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19261 ;; Parameters:    Size  Location     Type
 19262 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19263 ;;		 -> f(6), NULL(0), 
 19264 ;;  fmt             2  [STACK] PTR const unsigned char 
 19265 ;;		 -> STR_62(3), STR_61(3), STR_60(19), STR_59(19), 
 19266 ;;		 -> STR_58(19), STR_57(19), STR_56(25), STR_55(26), 
 19267 ;;		 -> STR_54(21), STR_53(23), STR_52(19), STR_51(19), 
 19268 ;;		 -> STR_50(20), STR_49(18), STR_48(20), STR_47(18), 
 19269 ;;		 -> STR_46(20), STR_45(18), STR_44(20), STR_43(22), 
 19270 ;;		 -> STR_42(15), STR_41(15), STR_40(15), STR_39(10), 
 19271 ;;		 -> STR_38(10), STR_37(19), STR_34(21), STR_33(26), 
 19272 ;;		 -> STR_32(26), STR_31(20), STR_29(91), STR_28(3), 
 19273 ;;		 -> STR_27(3), STR_26(3), STR_25(29), STR_24(26), 
 19274 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 19275 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 19276 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 19277 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 19278 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 19279 ;;		 -> STR_1(17), 
 19280 ;;  ap              2  [STACK] PTR PTR void 
 19281 ;;		 -> ap(2), ap(2), 
 19282 ;; Auto vars:     Size  Location     Type
 19283 ;;  cfmt            2  [STACK] PTR unsigned char 
 19284 ;;		 -> STR_62(3), STR_61(3), STR_60(19), STR_59(19), 
 19285 ;;		 -> STR_58(19), STR_57(19), STR_56(25), STR_55(26), 
 19286 ;;		 -> STR_54(21), STR_53(23), STR_52(19), STR_51(19), 
 19287 ;;		 -> STR_50(20), STR_49(18), STR_48(20), STR_47(18), 
 19288 ;;		 -> STR_46(20), STR_45(18), STR_44(20), STR_43(22), 
 19289 ;;		 -> STR_42(15), STR_41(15), STR_40(15), STR_39(10), 
 19290 ;;		 -> STR_38(10), STR_37(19), STR_34(21), STR_33(26), 
 19291 ;;		 -> STR_32(26), STR_31(20), STR_29(91), STR_28(3), 
 19292 ;;		 -> STR_27(3), STR_26(3), STR_25(29), STR_24(26), 
 19293 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 19294 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 19295 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 19296 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 19297 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 19298 ;;		 -> STR_1(17), 
 19299 ;; Return value:  Size  Location     Type
 19300 ;;                  2  [STACK] int 
 19301 ;; Registers used:
 19302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19303 ;; Tracked objects:
 19304 ;;		On entry : 0/3B
 19305 ;;		On exit  : 3F/0
 19306 ;;		Unchanged: 0/0
 19307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19312 ;;Total ram usage:        0 bytes
 19313 ;; Hardware stack levels used:    1
 19314 ;; Hardware stack levels required when called:   10
 19315 ;; This function calls:
 19316 ;;		_vfpfcnvrt
 19317 ;; This function is called by:
 19318 ;;		_sprintf
 19319 ;;		_printf
 19320 ;; This function uses a reentrant model
 19321 ;;
 19322                           
 19323                           	psect	text92
 19324  015BC2                     __ptext92:
 19325                           	opt callstack 0
 19326  015BC2                     _vfprintf:
 19327                           	opt callstack 0
 19328                           
 19329                           ; BSR set to: 0
 19330                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19331  015BC2  52E6               	movf	postinc1,f,c
 19332  015BC4  52E6               	movf	postinc1,f,c
 19333                           
 19334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 19335                           ;stkvar	_fmt @ sp[(-2)+-4]
 19336                           
 19337                           ;incstack = 0
 19338  015BC6  0EFA               	movlw	-6
 19339  015BC8  006F FF8C  F042    	movff	plusw1,btemp+10
 19340  015BCE  0EFB               	movlw	-5
 19341  015BD0  006F FF8C  F043    	movff	plusw1,btemp+11
 19342                           
 19343                           ;stkvar	_cfmt @ sp[(-2)+0]
 19344  015BD6  0EFF               	movlw	-1
 19345  015BD8  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19346  015BDE  0EFE               	movlw	-2
 19347  015BE0  0060  F10B  FFE3   	movff	btemp+10,plusw1
 19348                           
 19349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 19350  015BE6  0100               	movlb	0	; () banked
 19351  015BE8  6BAB               	clrf	_nout& (0+255),b
 19352  015BEA  6BAC               	clrf	(_nout+1)& (0+255),b
 19353                           
 19354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 19355  015BEC  D021               	goto	l15684
 19356  015BEE                     l15682:
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 19360                           ;stkvar	_ap @ sp[(-2)+-6]
 19361  015BEE  0EF8               	movlw	-8
 19362  015BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 19363  015BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 19364                           
 19365                           ;stkvar	_cfmt @ sp[(-4)+0]
 19366  015BFC  0EFC               	movlw	252
 19367  015BFE  24E1               	addwf	fsr1l,w,c
 19368  015C00  6E38               	movwf	btemp,c
 19369  015C02  0EFF               	movlw	255
 19370  015C04  20E2               	addwfc	fsr1h,w,c
 19371  015C06  6E39               	movwf	btemp+1,c
 19372  015C08  0060  F0E3  FFE6   	movff	btemp,postinc1
 19373  015C0E  0060  F0E7  FFE6   	movff	btemp+1,postinc1
 19374                           
 19375                           ;stkvar	_fp @ sp[(-6)+-2]
 19376  015C14  0EF8               	movlw	-8
 19377  015C16  006F FF8F FFE6     	movff	plusw1,postinc1
 19378  015C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19379  015C22  EC23  F086         	call	_vfpfcnvrt	;wreg free
 19380  015C26  5038               	movf	btemp,w,c
 19381  015C28  0100               	movlb	0	; () banked
 19382  015C2A  27AB               	addwf	_nout& (0+255),f,b
 19383  015C2C  5039               	movf	btemp+1,w,c
 19384  015C2E  23AC               	addwfc	(_nout+1)& (0+255),f,b
 19385  015C30                     l15684:
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 19389                           ;stkvar	_cfmt @ sp[(-2)+0]
 19390  015C30  50E1               	movf	fsr1l,w,c
 19391  015C32  0FFE               	addlw	-2
 19392  015C34  6ED9               	movwf	fsr2l,c
 19393  015C36  50E2               	movf	fsr1h,w,c
 19394  015C38  6EDA               	movwf	fsr2h,c
 19395  015C3A  0EFF               	movlw	255
 19396  015C3C  22DA               	addwfc	fsr2h,f,c
 19397  015C3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19398  015C44  006F FF77 FFF7     	movff	postdec2,tblptrh
 19399  015C4A                     	if	0	;tblptru may be non-zero
 19400  015C4A                     	endif
 19401  015C4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19402  015C4A  0E00               	movlw	low (__mediumconst shr (0+16))
 19403  015C4C  6EF8               	movwf	tblptru,c
 19404  015C4E                     	endif
 19405  015C4E  0008               	tblrd		*
 19406  015C50  50F5               	movf	tablat,w,c
 19407  015C52  0900               	iorlw	0
 19408  015C54  A4D8               	btfss	status,2,c
 19409  015C56  D7CB               	goto	l15682
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 19413  015C58  0060  F2AC  F038   	movff	_nout,btemp
 19414  015C5E  0060  F2B0  F039   	movff	_nout+1,btemp+1
 19415                           
 19416                           ; BSR set to: 0
 19417                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 19418  015C64  0EF8               	movlw	248
 19419  015C66  26E1               	addwf	fsr1l,f,c
 19420  015C68  0EFF               	movlw	255
 19421  015C6A  22E2               	addwfc	fsr1h,f,c
 19422  015C6C  0012               	return		;funcret
 19423  015C6E                     __end_of_vfprintf:
 19424                           	opt callstack 0
 19425                           
 19426 ;; *************** function _vfpfcnvrt *****************
 19427 ;; Defined at:
 19428 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19429 ;; Parameters:    Size  Location     Type
 19430 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19431 ;;		 -> f(6), NULL(0), 
 19432 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 19433 ;;		 -> cfmt(2), 
 19434 ;;  ap              2  [STACK] PTR PTR void 
 19435 ;;		 -> ap(2), ap(2), 
 19436 ;; Auto vars:     Size  Location     Type
 19437 ;;  llu             8  [STACK] unsigned long long 
 19438 ;;  ll              8  [STACK] long long 
 19439 ;;  f               4    0        long long 
 19440 ;;  vp              3    0        PTR void 
 19441 ;;  ct              3    0        unsigned char [3]
 19442 ;;  cp              2  [STACK] PTR unsigned char 
 19443 ;;		 -> ?_printf(2), ?_sprintf(2), STR_36(9), STR_35(12), 
 19444 ;;		 -> T(256), D.lcd(512), D(514), STR_30(6), 
 19445 ;;		 -> STR_7(6), STR_3(6), V(384), 
 19446 ;;  i               2    0        int 
 19447 ;;  done            2    0        int 
 19448 ;;  c               1  [STACK] unsigned char 
 19449 ;; Return value:  Size  Location     Type
 19450 ;;                  2  [STACK] int 
 19451 ;; Registers used:
 19452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19453 ;; Tracked objects:
 19454 ;;		On entry : 0/0
 19455 ;;		On exit  : 0/0
 19456 ;;		Unchanged: 0/0
 19457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19462 ;;Total ram usage:        0 bytes
 19463 ;; Hardware stack levels used:    1
 19464 ;; Hardware stack levels required when called:    9
 19465 ;; This function calls:
 19466 ;;		_ctoa
 19467 ;;		_dtoa
 19468 ;;		_fputc
 19469 ;;		_stoa
 19470 ;;		_strncmp
 19471 ;;		_xtoa
 19472 ;; This function is called by:
 19473 ;;		_vfprintf
 19474 ;; This function uses a reentrant model
 19475 ;;
 19476                           
 19477                           	psect	text93
 19478  010C46                     __ptext93:
 19479                           	opt callstack 0
 19480  010C46                     _vfpfcnvrt:
 19481                           	opt callstack 0
 19482                           
 19483                           ; BSR set to: 0
 19484                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19485  010C46  0E13               	movlw	19
 19486  010C48  26E1               	addwf	fsr1l,f,c
 19487  010C4A  0E00               	movlw	0
 19488  010C4C  22E2               	addwfc	fsr1h,f,c
 19489                           
 19490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 19491                           ;stkvar	_fmt @ sp[(-19)+-4]
 19492                           
 19493                           ;incstack = 0
 19494  010C4E  0EE9               	movlw	-23
 19495  010C50  006F FF8F FFD9     	movff	plusw1,fsr2l
 19496  010C56  0EEA               	movlw	-22
 19497  010C58  006F FF8F FFDA     	movff	plusw1,fsr2h
 19498  010C5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19499  010C64  006F FF77 FFF7     	movff	postdec2,tblptrh
 19500  010C6A                     	if	0	;tblptru may be non-zero
 19501  010C6A                     	endif
 19502  010C6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19503  010C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 19504  010C6C  6EF8               	movwf	tblptru,c
 19505  010C6E                     	endif
 19506  010C6E  0008               	tblrd		*
 19507  010C70  50F5               	movf	tablat,w,c
 19508  010C72  0A25               	xorlw	37
 19509  010C74  A4D8               	btfss	status,2,c
 19510  010C76  D398               	goto	l15670
 19511                           
 19512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 19513                           ;stkvar	_fmt @ sp[(-19)+-4]
 19514  010C78  0EE9               	movlw	-23
 19515  010C7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 19516  010C80  0EEA               	movlw	-22
 19517  010C82  006F FF8F FFDA     	movff	plusw1,fsr2h
 19518  010C88  2ADE               	incf	postinc2,f,c
 19519  010C8A  0E00               	movlw	0
 19520  010C8C  22DD               	addwfc	postdec2,f,c
 19521                           
 19522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 19523  010C8E  6A10               	clrf	_width,c
 19524  010C90  6A11               	clrf	_width+1,c
 19525  010C92  6A14               	clrf	_flags,c
 19526  010C94  6A15               	clrf	_flags+1,c
 19527                           
 19528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 19529  010C96  6812               	setf	_prec,c
 19530  010C98  6813               	setf	_prec+1,c
 19531                           
 19532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 19533                           ;stkvar	_fmt @ sp[(-19)+-4]
 19534  010C9A  0EE9               	movlw	-23
 19535  010C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19536  010CA2  0EEA               	movlw	-22
 19537  010CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19538  010CAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19539  010CB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19540  010CB6                     	if	0	;tblptru may be non-zero
 19541  010CB6                     	endif
 19542  010CB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19543  010CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 19544  010CB8  6EF8               	movwf	tblptru,c
 19545  010CBA                     	endif
 19546  010CBA  0008               	tblrd		*
 19547  010CBC  50F5               	movf	tablat,w,c
 19548  010CBE  0A63               	xorlw	99
 19549  010CC0  A4D8               	btfss	status,2,c
 19550  010CC2  D036               	goto	l15592
 19551                           
 19552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 19553                           ;stkvar	_fmt @ sp[(-19)+-4]
 19554  010CC4  0EE9               	movlw	-23
 19555  010CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19556  010CCC  0EEA               	movlw	-22
 19557  010CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19558  010CD4  2ADE               	incf	postinc2,f,c
 19559  010CD6  0E00               	movlw	0
 19560  010CD8  22DD               	addwfc	postdec2,f,c
 19561                           
 19562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19563                           ;stkvar	_ap @ sp[(-19)+-6]
 19564  010CDA  0EE7               	movlw	-25
 19565  010CDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19566  010CE2  0EE8               	movlw	-24
 19567  010CE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19568  010CEA  0E02               	movlw	2
 19569  010CEC  5EDE               	subwf	postinc2,f,c
 19570  010CEE  0E00               	movlw	0
 19571  010CF0  5ADD               	subwfb	postdec2,f,c
 19572  010CF2  006F FF78  F042    	movff	postinc2,btemp+10
 19573  010CF8  006F FF74  F043    	movff	postdec2,btemp+11
 19574  010CFE  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 19575  010D04  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 19576  010D0A  50DF               	movf	indf2,w,c
 19577  010D0C  6E43               	movwf	btemp+11,c
 19578                           
 19579                           ;stkvar	_c @ sp[(-19)+18]
 19580  010D0E  0EFF               	movlw	-1
 19581  010D10  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19582                           
 19583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 19584                           ;stkvar	_c @ sp[(-19)+18]
 19585  010D16  0EFF               	movlw	-1
 19586  010D18  50E3               	movf	plusw1,w,c
 19587  010D1A  6EE6               	movwf	postinc1,c
 19588                           
 19589                           ;stkvar	_fp @ sp[(-20)+-2]
 19590  010D1C  0EEA               	movlw	-22
 19591  010D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 19592  010D24  006F FF8F FFE6     	movff	plusw1,postinc1
 19593  010D2A  EC1A  F0B0         	call	_ctoa	;wreg free
 19594  010D2E  D366               	goto	l2501
 19595  010D30                     l15592:
 19596                           
 19597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 19598                           ;stkvar	_fmt @ sp[(-19)+-4]
 19599  010D30  0EE9               	movlw	-23
 19600  010D32  006F FF8F FFD9     	movff	plusw1,fsr2l
 19601  010D38  0EEA               	movlw	-22
 19602  010D3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19603  010D40  006F FF7B FFF6     	movff	postinc2,tblptrl
 19604  010D46  006F FF77 FFF7     	movff	postdec2,tblptrh
 19605  010D4C                     	if	0	;tblptru may be non-zero
 19606  010D4C                     	endif
 19607  010D4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19608  010D4C  0E00               	movlw	low (__mediumconst shr (0+16))
 19609  010D4E  6EF8               	movwf	tblptru,c
 19610  010D50                     	endif
 19611  010D50  0008               	tblrd		*
 19612  010D52  50F5               	movf	tablat,w,c
 19613  010D54  0A64               	xorlw	100
 19614  010D56  B4D8               	btfsc	status,2,c
 19615  010D58  D015               	goto	u10600
 19616                           
 19617                           ;stkvar	_fmt @ sp[(-19)+-4]
 19618  010D5A  0EE9               	movlw	-23
 19619  010D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19620  010D62  0EEA               	movlw	-22
 19621  010D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 19622  010D6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19623  010D70  006F FF77 FFF7     	movff	postdec2,tblptrh
 19624  010D76                     	if	0	;tblptru may be non-zero
 19625  010D76                     	endif
 19626  010D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19627  010D76  0E00               	movlw	low (__mediumconst shr (0+16))
 19628  010D78  6EF8               	movwf	tblptru,c
 19629  010D7A                     	endif
 19630  010D7A  0008               	tblrd		*
 19631  010D7C  50F5               	movf	tablat,w,c
 19632  010D7E  0A69               	xorlw	105
 19633  010D80  A4D8               	btfss	status,2,c
 19634  010D82  D075               	goto	l15604
 19635  010D84                     u10600:
 19636                           
 19637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 19638                           ;stkvar	_fmt @ sp[(-19)+-4]
 19639  010D84  0EE9               	movlw	-23
 19640  010D86  006F FF8F FFD9     	movff	plusw1,fsr2l
 19641  010D8C  0EEA               	movlw	-22
 19642  010D8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 19643  010D94  2ADE               	incf	postinc2,f,c
 19644  010D96  0E00               	movlw	0
 19645  010D98  22DD               	addwfc	postdec2,f,c
 19646                           
 19647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 19648                           ;stkvar	_ap @ sp[(-19)+-6]
 19649  010D9A  0EE7               	movlw	-25
 19650  010D9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19651  010DA2  0EE8               	movlw	-24
 19652  010DA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19653  010DAA  0E02               	movlw	2
 19654  010DAC  5EDE               	subwf	postinc2,f,c
 19655  010DAE  0E00               	movlw	0
 19656  010DB0  5ADD               	subwfb	postdec2,f,c
 19657  010DB2  006F FF78  F042    	movff	postinc2,btemp+10
 19658  010DB8  006F FF74  F043    	movff	postdec2,btemp+11
 19659  010DBE  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 19660  010DC4  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 19661  010DCA  006F FF78  F042    	movff	postinc2,btemp+10
 19662  010DD0  006F FF74  F043    	movff	postdec2,btemp+11
 19663                           
 19664                           ;stkvar	_ll @ sp[(-19)+8]
 19665  010DD6  0EF5               	movlw	-11
 19666  010DD8  0060  F10B  FFE3   	movff	btemp+10,plusw1
 19667  010DDE  0EF6               	movlw	-10
 19668  010DE0  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19669  010DE6  6A38               	clrf	btemp,c
 19670  010DE8  BEE3               	btfsc	plusw1,7,c
 19671  010DEA  6838               	setf	btemp,c
 19672  010DEC  0EF7               	movlw	-9
 19673  010DEE  0060  F0E3  FFE3   	movff	btemp,plusw1
 19674  010DF4  0EF8               	movlw	-8
 19675  010DF6  0060  F0E3  FFE3   	movff	btemp,plusw1
 19676  010DFC  0EF9               	movlw	-7
 19677  010DFE  0060  F0E3  FFE3   	movff	btemp,plusw1
 19678  010E04  0EFA               	movlw	-6
 19679  010E06  0060  F0E3  FFE3   	movff	btemp,plusw1
 19680  010E0C  0EFB               	movlw	-5
 19681  010E0E  0060  F0E3  FFE3   	movff	btemp,plusw1
 19682  010E14  0EFC               	movlw	-4
 19683  010E16  0060  F0E3  FFE3   	movff	btemp,plusw1
 19684  010E1C                     l15600:
 19685                           
 19686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 19687                           ;stkvar	_ll @ sp[(-19)+8]
 19688  010E1C  50E1               	movf	fsr1l,w,c
 19689  010E1E  0FF5               	addlw	-11
 19690  010E20  6ED9               	movwf	fsr2l,c
 19691  010E22  50E2               	movf	fsr1h,w,c
 19692  010E24  6EDA               	movwf	fsr2h,c
 19693  010E26  0EFF               	movlw	255
 19694  010E28  22DA               	addwfc	fsr2h,f,c
 19695  010E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 19696  010E30  006F FF7B FFE6     	movff	postinc2,postinc1
 19697  010E36  006F FF7B FFE6     	movff	postinc2,postinc1
 19698  010E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 19699  010E42  006F FF7B FFE6     	movff	postinc2,postinc1
 19700  010E48  006F FF7B FFE6     	movff	postinc2,postinc1
 19701  010E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 19702  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
 19703                           
 19704                           ;stkvar	_fp @ sp[(-27)+-2]
 19705  010E5A  0EE3               	movlw	-29
 19706  010E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19707  010E62  006F FF8F FFE6     	movff	plusw1,postinc1
 19708  010E68  ECF0  F08F         	call	_dtoa	;wreg free
 19709  010E6C  D2C7               	goto	l2501
 19710  010E6E                     l15604:
 19711                           
 19712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 19713  010E6E  0E02               	movlw	2
 19714  010E70  6EE6               	movwf	postinc1,c
 19715  010E72  0E00               	movlw	0
 19716  010E74  6EE6               	movwf	postinc1,c
 19717  010E76  0EEF               	movlw	low STR_63
 19718  010E78  6EE6               	movwf	postinc1,c
 19719  010E7A  0EFF               	movlw	high STR_63
 19720  010E7C  6EE6               	movwf	postinc1,c
 19721                           
 19722                           ;stkvar	_fmt @ sp[(-23)+-4]
 19723  010E7E  0EE5               	movlw	-27
 19724  010E80  006F FF8F FFD9     	movff	plusw1,fsr2l
 19725  010E86  0EE6               	movlw	-26
 19726  010E88  006F FF8F FFDA     	movff	plusw1,fsr2h
 19727  010E8E  006F FF78  F042    	movff	postinc2,btemp+10
 19728  010E94  006F FF74  F043    	movff	postdec2,btemp+11
 19729  010E9A  0060  F10B  FFE6   	movff	btemp+10,postinc1
 19730  010EA0  0060  F10F  FFE6   	movff	btemp+11,postinc1
 19731  010EA6  ECCB  F0A3         	call	_strncmp	;wreg free
 19732  010EAA  5038               	movf	btemp,w,c
 19733  010EAC  1039               	iorwf	btemp+1,w,c
 19734  010EAE  B4D8               	btfsc	status,2,c
 19735  010EB0  D022               	goto	u10620
 19736  010EB2  0E02               	movlw	2
 19737  010EB4  6EE6               	movwf	postinc1,c
 19738  010EB6  0E00               	movlw	0
 19739  010EB8  6EE6               	movwf	postinc1,c
 19740  010EBA  0EF2               	movlw	low STR_67
 19741  010EBC  6EE6               	movwf	postinc1,c
 19742  010EBE  0EFF               	movlw	high STR_67
 19743  010EC0  6EE6               	movwf	postinc1,c
 19744                           
 19745                           ;stkvar	_fmt @ sp[(-23)+-4]
 19746  010EC2  0EE5               	movlw	-27
 19747  010EC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19748  010ECA  0EE6               	movlw	-26
 19749  010ECC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19750  010ED2  006F FF78  F042    	movff	postinc2,btemp+10
 19751  010ED8  006F FF74  F043    	movff	postdec2,btemp+11
 19752  010EDE  0060  F10B  FFE6   	movff	btemp+10,postinc1
 19753  010EE4  0060  F10F  FFE6   	movff	btemp+11,postinc1
 19754  010EEA  ECCB  F0A3         	call	_strncmp	;wreg free
 19755  010EEE  5038               	movf	btemp,w,c
 19756  010EF0  1039               	iorwf	btemp+1,w,c
 19757  010EF2  A4D8               	btfss	status,2,c
 19758  010EF4  D069               	goto	l15616
 19759  010EF6                     u10620:
 19760                           
 19761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 19762                           ;stkvar	_fmt @ sp[(-19)+-4]
 19763  010EF6  0EE9               	movlw	-23
 19764  010EF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19765  010EFE  0EEA               	movlw	-22
 19766  010F00  006F FF8F FFDA     	movff	plusw1,fsr2h
 19767  010F06  0E02               	movlw	2
 19768  010F08  26DE               	addwf	postinc2,f,c
 19769  010F0A  0E00               	movlw	0
 19770  010F0C  22DD               	addwfc	postdec2,f,c
 19771                           
 19772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 19773                           ;stkvar	_ap @ sp[(-19)+-6]
 19774  010F0E  0EE7               	movlw	-25
 19775  010F10  006F FF8F FFD9     	movff	plusw1,fsr2l
 19776  010F16  0EE8               	movlw	-24
 19777  010F18  006F FF8F FFDA     	movff	plusw1,fsr2h
 19778  010F1E  0E04               	movlw	4
 19779  010F20  5EDE               	subwf	postinc2,f,c
 19780  010F22  0E00               	movlw	0
 19781  010F24  5ADD               	subwfb	postdec2,f,c
 19782  010F26  006F FF78  F042    	movff	postinc2,btemp+10
 19783  010F2C  006F FF74  F043    	movff	postdec2,btemp+11
 19784  010F32  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 19785  010F38  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 19786  010F3E  006F FF78  F040    	movff	postinc2,btemp+8
 19787  010F44  006F FF78  F041    	movff	postinc2,btemp+9
 19788  010F4A  006F FF78  F042    	movff	postinc2,btemp+10
 19789  010F50  006F FF78  F043    	movff	postinc2,btemp+11
 19790  010F56  0060  F100  F048   	movff	btemp+8,btemp+16
 19791  010F5C  0060  F104  F049   	movff	btemp+9,btemp+17
 19792  010F62  0060  F108  F04A   	movff	btemp+10,btemp+18
 19793  010F68  0060  F10C  F04B   	movff	btemp+11,btemp+19
 19794  010F6E  6A4C               	clrf	btemp+20,c
 19795  010F70  BE4B               	btfsc	btemp+19,7,c
 19796  010F72  684C               	setf	btemp+20,c
 19797  010F74  0060  F130  F04D   	movff	btemp+20,btemp+21
 19798  010F7A  0060  F130  F04E   	movff	btemp+20,btemp+22
 19799  010F80  0060  F130  F04F   	movff	btemp+20,btemp+23
 19800                           
 19801                           ;stkvar	_ll @ sp[(-19)+8]
 19802  010F86  0EF5               	movlw	-11
 19803  010F88  0060  F123  FFE3   	movff	btemp+16,plusw1
 19804  010F8E  0EF6               	movlw	-10
 19805  010F90  0060  F127  FFE3   	movff	btemp+17,plusw1
 19806  010F96  0EF7               	movlw	-9
 19807  010F98  0060  F12B  FFE3   	movff	btemp+18,plusw1
 19808  010F9E  0EF8               	movlw	-8
 19809  010FA0  0060  F12F  FFE3   	movff	btemp+19,plusw1
 19810  010FA6  0EF9               	movlw	-7
 19811  010FA8  0060  F133  FFE3   	movff	btemp+20,plusw1
 19812  010FAE  0EFA               	movlw	-6
 19813  010FB0  0060  F137  FFE3   	movff	btemp+21,plusw1
 19814  010FB6  0EFB               	movlw	-5
 19815  010FB8  0060  F13B  FFE3   	movff	btemp+22,plusw1
 19816  010FBE  0EFC               	movlw	-4
 19817  010FC0  0060  F13F  FFE3   	movff	btemp+23,plusw1
 19818  010FC6  D72A               	goto	l15600
 19819  010FC8                     l15616:
 19820                           
 19821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 19822                           ;stkvar	_fmt @ sp[(-19)+-4]
 19823  010FC8  0EE9               	movlw	-23
 19824  010FCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 19825  010FD0  0EEA               	movlw	-22
 19826  010FD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 19827  010FD8  006F FF7B FFF6     	movff	postinc2,tblptrl
 19828  010FDE  006F FF77 FFF7     	movff	postdec2,tblptrh
 19829  010FE4                     	if	0	;tblptru may be non-zero
 19830  010FE4                     	endif
 19831  010FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19832  010FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 19833  010FE6  6EF8               	movwf	tblptru,c
 19834  010FE8                     	endif
 19835  010FE8  0008               	tblrd		*
 19836  010FEA  50F5               	movf	tablat,w,c
 19837  010FEC  0A73               	xorlw	115
 19838  010FEE  A4D8               	btfss	status,2,c
 19839  010FF0  D042               	goto	l15626
 19840                           
 19841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 19842                           ;stkvar	_fmt @ sp[(-19)+-4]
 19843  010FF2  0EE9               	movlw	-23
 19844  010FF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19845  010FFA  0EEA               	movlw	-22
 19846  010FFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19847  011002  2ADE               	incf	postinc2,f,c
 19848  011004  0E00               	movlw	0
 19849  011006  22DD               	addwfc	postdec2,f,c
 19850                           
 19851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 19852                           ;stkvar	_ap @ sp[(-19)+-6]
 19853  011008  0EE7               	movlw	-25
 19854  01100A  006F FF8F FFD9     	movff	plusw1,fsr2l
 19855  011010  0EE8               	movlw	-24
 19856  011012  006F FF8F FFDA     	movff	plusw1,fsr2h
 19857  011018  0E02               	movlw	2
 19858  01101A  5EDE               	subwf	postinc2,f,c
 19859  01101C  0E00               	movlw	0
 19860  01101E  5ADD               	subwfb	postdec2,f,c
 19861  011020  006F FF78  F042    	movff	postinc2,btemp+10
 19862  011026  006F FF74  F043    	movff	postdec2,btemp+11
 19863  01102C  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 19864  011032  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 19865  011038  006F FF78  F042    	movff	postinc2,btemp+10
 19866  01103E  006F FF74  F043    	movff	postdec2,btemp+11
 19867                           
 19868                           ;stkvar	_cp @ sp[(-19)+16]
 19869  011044  0EFE               	movlw	-2
 19870  011046  0060  F10F  FFE3   	movff	btemp+11,plusw1
 19871  01104C  0EFD               	movlw	-3
 19872  01104E  0060  F10B  FFE3   	movff	btemp+10,plusw1
 19873                           
 19874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 19875                           ;stkvar	_cp @ sp[(-19)+16]
 19876  011054  0EFD               	movlw	-3
 19877  011056  006F FF8F FFE6     	movff	plusw1,postinc1
 19878  01105C  006F FF8F FFE6     	movff	plusw1,postinc1
 19879                           
 19880                           ;stkvar	_fp @ sp[(-21)+-2]
 19881  011062  0EE9               	movlw	-23
 19882  011064  006F FF8F FFE6     	movff	plusw1,postinc1
 19883  01106A  006F FF8F FFE6     	movff	plusw1,postinc1
 19884  011070  EC3B  F09B         	call	_stoa	;wreg free
 19885  011074  D1C3               	goto	l2501
 19886  011076                     l15626:
 19887                           
 19888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 19889                           ;stkvar	_fmt @ sp[(-19)+-4]
 19890  011076  0EE9               	movlw	-23
 19891  011078  006F FF8F FFD9     	movff	plusw1,fsr2l
 19892  01107E  0EEA               	movlw	-22
 19893  011080  006F FF8F FFDA     	movff	plusw1,fsr2h
 19894  011086  006F FF7B FFF6     	movff	postinc2,tblptrl
 19895  01108C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19896  011092                     	if	0	;tblptru may be non-zero
 19897  011092                     	endif
 19898  011092                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19899  011092  0E00               	movlw	low (__mediumconst shr (0+16))
 19900  011094  6EF8               	movwf	tblptru,c
 19901  011096                     	endif
 19902  011096  0008               	tblrd		*
 19903  011098  50F5               	movf	tablat,w,c
 19904  01109A  0A78               	xorlw	120
 19905  01109C  B4D8               	btfsc	status,2,c
 19906  01109E  D015               	goto	u10650
 19907                           
 19908                           ;stkvar	_fmt @ sp[(-19)+-4]
 19909  0110A0  0EE9               	movlw	-23
 19910  0110A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 19911  0110A8  0EEA               	movlw	-22
 19912  0110AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 19913  0110B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19914  0110B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19915  0110BC                     	if	0	;tblptru may be non-zero
 19916  0110BC                     	endif
 19917  0110BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19918  0110BC  0E00               	movlw	low (__mediumconst shr (0+16))
 19919  0110BE  6EF8               	movwf	tblptru,c
 19920  0110C0                     	endif
 19921  0110C0  0008               	tblrd		*
 19922  0110C2  50F5               	movf	tablat,w,c
 19923  0110C4  0A58               	xorlw	88
 19924  0110C6  A4D8               	btfss	status,2,c
 19925  0110C8  D094               	goto	l15640
 19926  0110CA                     u10650:
 19927                           
 19928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 19929                           ;stkvar	_fmt @ sp[(-19)+-4]
 19930  0110CA  0EE9               	movlw	-23
 19931  0110CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19932  0110D2  0EEA               	movlw	-22
 19933  0110D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19934  0110DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19935  0110E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19936  0110E6                     	if	0	;tblptru may be non-zero
 19937  0110E6                     	endif
 19938  0110E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19939  0110E6  0E00               	movlw	low (__mediumconst shr (0+16))
 19940  0110E8  6EF8               	movwf	tblptru,c
 19941  0110EA                     	endif
 19942                           
 19943                           ;stkvar	_c @ sp[(-19)+18]
 19944  0110EA  0008               	tblrd		*
 19945  0110EC  0EFF               	movlw	-1
 19946  0110EE  006F FFD7 FFE3     	movff	tablat,plusw1
 19947                           
 19948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 19949                           ;stkvar	_fmt @ sp[(-19)+-4]
 19950  0110F4  0EE9               	movlw	-23
 19951  0110F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19952  0110FC  0EEA               	movlw	-22
 19953  0110FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19954  011104  2ADE               	incf	postinc2,f,c
 19955  011106  0E00               	movlw	0
 19956  011108  22DD               	addwfc	postdec2,f,c
 19957                           
 19958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 19959                           ;stkvar	_ap @ sp[(-19)+-6]
 19960  01110A  0EE7               	movlw	-25
 19961  01110C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19962  011112  0EE8               	movlw	-24
 19963  011114  006F FF8F FFDA     	movff	plusw1,fsr2h
 19964  01111A  0E02               	movlw	2
 19965  01111C  5EDE               	subwf	postinc2,f,c
 19966  01111E  0E00               	movlw	0
 19967  011120  5ADD               	subwfb	postdec2,f,c
 19968  011122  006F FF78  F042    	movff	postinc2,btemp+10
 19969  011128  006F FF74  F043    	movff	postdec2,btemp+11
 19970  01112E  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 19971  011134  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 19972  01113A  006F FF78  F042    	movff	postinc2,btemp+10
 19973  011140  006F FF74  F043    	movff	postdec2,btemp+11
 19974  011146  5042               	movf	btemp+10,w,c
 19975  011148  6E48               	movwf	btemp+16,c
 19976  01114A  5043               	movf	btemp+11,w,c
 19977  01114C  6E49               	movwf	btemp+17,c
 19978  01114E  6A4A               	clrf	btemp+18,c
 19979  011150  6A4B               	clrf	btemp+19,c
 19980  011152  6A4C               	clrf	btemp+20,c
 19981  011154  6A4D               	clrf	btemp+21,c
 19982  011156  6A4E               	clrf	btemp+22,c
 19983  011158  6A4F               	clrf	btemp+23,c
 19984                           
 19985                           ;stkvar	_llu @ sp[(-19)+0]
 19986  01115A  0EED               	movlw	-19
 19987  01115C  0060  F123  FFE3   	movff	btemp+16,plusw1
 19988  011162  0EEE               	movlw	-18
 19989  011164  0060  F127  FFE3   	movff	btemp+17,plusw1
 19990  01116A  0EEF               	movlw	-17
 19991  01116C  0060  F12B  FFE3   	movff	btemp+18,plusw1
 19992  011172  0EF0               	movlw	-16
 19993  011174  0060  F12F  FFE3   	movff	btemp+19,plusw1
 19994  01117A  0EF1               	movlw	-15
 19995  01117C  0060  F133  FFE3   	movff	btemp+20,plusw1
 19996  011182  0EF2               	movlw	-14
 19997  011184  0060  F137  FFE3   	movff	btemp+21,plusw1
 19998  01118A  0EF3               	movlw	-13
 19999  01118C  0060  F13B  FFE3   	movff	btemp+22,plusw1
 20000  011192  0EF4               	movlw	-12
 20001  011194  0060  F13F  FFE3   	movff	btemp+23,plusw1
 20002                           
 20003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 20004                           ;stkvar	_c @ sp[(-19)+18]
 20005  01119A  0EFF               	movlw	-1
 20006  01119C  50E3               	movf	plusw1,w,c
 20007  01119E  6EE6               	movwf	postinc1,c
 20008                           
 20009                           ;stkvar	_llu @ sp[(-20)+0]
 20010  0111A0  50E1               	movf	fsr1l,w,c
 20011  0111A2  0FEC               	addlw	-20
 20012  0111A4  6ED9               	movwf	fsr2l,c
 20013  0111A6  50E2               	movf	fsr1h,w,c
 20014  0111A8  6EDA               	movwf	fsr2h,c
 20015  0111AA  0EFF               	movlw	255
 20016  0111AC  22DA               	addwfc	fsr2h,f,c
 20017  0111AE  006F FF7B FFE6     	movff	postinc2,postinc1
 20018  0111B4  006F FF7B FFE6     	movff	postinc2,postinc1
 20019  0111BA  006F FF7B FFE6     	movff	postinc2,postinc1
 20020  0111C0  006F FF7B FFE6     	movff	postinc2,postinc1
 20021  0111C6  006F FF7B FFE6     	movff	postinc2,postinc1
 20022  0111CC  006F FF7B FFE6     	movff	postinc2,postinc1
 20023  0111D2  006F FF7B FFE6     	movff	postinc2,postinc1
 20024  0111D8  006F FF7B FFE6     	movff	postinc2,postinc1
 20025                           
 20026                           ;stkvar	_fp @ sp[(-28)+-2]
 20027  0111DE  0EE2               	movlw	-30
 20028  0111E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20029  0111E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20030  0111EC  EC55  F096         	call	_xtoa	;wreg free
 20031  0111F0  D105               	goto	l2501
 20032  0111F2                     l15640:
 20033                           
 20034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 20035  0111F2  0E02               	movlw	2
 20036  0111F4  6EE6               	movwf	postinc1,c
 20037  0111F6  0E00               	movlw	0
 20038  0111F8  6EE6               	movwf	postinc1,c
 20039  0111FA  0EF5               	movlw	low STR_72
 20040  0111FC  6EE6               	movwf	postinc1,c
 20041  0111FE  0EFF               	movlw	high STR_72
 20042  011200  6EE6               	movwf	postinc1,c
 20043                           
 20044                           ;stkvar	_fmt @ sp[(-23)+-4]
 20045  011202  0EE5               	movlw	-27
 20046  011204  006F FF8F FFD9     	movff	plusw1,fsr2l
 20047  01120A  0EE6               	movlw	-26
 20048  01120C  006F FF8F FFDA     	movff	plusw1,fsr2h
 20049  011212  006F FF78  F042    	movff	postinc2,btemp+10
 20050  011218  006F FF74  F043    	movff	postdec2,btemp+11
 20051  01121E  0060  F10B  FFE6   	movff	btemp+10,postinc1
 20052  011224  0060  F10F  FFE6   	movff	btemp+11,postinc1
 20053  01122A  ECCB  F0A3         	call	_strncmp	;wreg free
 20054  01122E  5038               	movf	btemp,w,c
 20055  011230  1039               	iorwf	btemp+1,w,c
 20056  011232  B4D8               	btfsc	status,2,c
 20057  011234  D022               	goto	u10670
 20058  011236  0E02               	movlw	2
 20059  011238  6EE6               	movwf	postinc1,c
 20060  01123A  0E00               	movlw	0
 20061  01123C  6EE6               	movwf	postinc1,c
 20062  01123E  0EEC               	movlw	low STR_76
 20063  011240  6EE6               	movwf	postinc1,c
 20064  011242  0EFF               	movlw	high STR_76
 20065  011244  6EE6               	movwf	postinc1,c
 20066                           
 20067                           ;stkvar	_fmt @ sp[(-23)+-4]
 20068  011246  0EE5               	movlw	-27
 20069  011248  006F FF8F FFD9     	movff	plusw1,fsr2l
 20070  01124E  0EE6               	movlw	-26
 20071  011250  006F FF8F FFDA     	movff	plusw1,fsr2h
 20072  011256  006F FF78  F042    	movff	postinc2,btemp+10
 20073  01125C  006F FF74  F043    	movff	postdec2,btemp+11
 20074  011262  0060  F10B  FFE6   	movff	btemp+10,postinc1
 20075  011268  0060  F10F  FFE6   	movff	btemp+11,postinc1
 20076  01126E  ECCB  F0A3         	call	_strncmp	;wreg free
 20077  011272  5038               	movf	btemp,w,c
 20078  011274  1039               	iorwf	btemp+1,w,c
 20079  011276  A4D8               	btfss	status,2,c
 20080  011278  D058               	goto	l15654
 20081  01127A                     u10670:
 20082                           
 20083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 20084                           ;stkvar	_fmt @ sp[(-19)+-4]
 20085  01127A  0EE9               	movlw	-23
 20086  01127C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20087  011282  0EEA               	movlw	-22
 20088  011284  006F FF8F FFDA     	movff	plusw1,fsr2h
 20089  01128A  006F FF78  F042    	movff	postinc2,btemp+10
 20090  011290  006F FF74  F043    	movff	postdec2,btemp+11
 20091  011296  0E01               	movlw	1
 20092  011298  2642               	addwf	btemp+10,f,c
 20093  01129A  0E00               	movlw	0
 20094  01129C  2243               	addwfc	btemp+11,f,c
 20095  01129E  0060  F10B  FFF6   	movff	btemp+10,tblptrl
 20096  0112A4  0060  F10F  FFF7   	movff	btemp+11,tblptrh
 20097  0112AA                     	if	0	;tblptru may be non-zero
 20098  0112AA                     	endif
 20099  0112AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20100  0112AA  0E00               	movlw	low (__mediumconst shr (0+16))
 20101  0112AC  6EF8               	movwf	tblptru,c
 20102  0112AE                     	endif
 20103                           
 20104                           ;stkvar	_c @ sp[(-19)+18]
 20105  0112AE  0008               	tblrd		*
 20106  0112B0  0EFF               	movlw	-1
 20107  0112B2  006F FFD7 FFE3     	movff	tablat,plusw1
 20108                           
 20109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 20110                           ;stkvar	_fmt @ sp[(-19)+-4]
 20111  0112B8  0EE9               	movlw	-23
 20112  0112BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 20113  0112C0  0EEA               	movlw	-22
 20114  0112C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 20115  0112C8  0E02               	movlw	2
 20116  0112CA  26DE               	addwf	postinc2,f,c
 20117  0112CC  0E00               	movlw	0
 20118  0112CE  22DD               	addwfc	postdec2,f,c
 20119                           
 20120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 20121                           ;stkvar	_ap @ sp[(-19)+-6]
 20122  0112D0  0EE7               	movlw	-25
 20123  0112D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 20124  0112D8  0EE8               	movlw	-24
 20125  0112DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 20126  0112E0  0E04               	movlw	4
 20127  0112E2  5EDE               	subwf	postinc2,f,c
 20128  0112E4  0E00               	movlw	0
 20129  0112E6  5ADD               	subwfb	postdec2,f,c
 20130  0112E8  006F FF78  F042    	movff	postinc2,btemp+10
 20131  0112EE  006F FF74  F043    	movff	postdec2,btemp+11
 20132  0112F4  0060  F10B  FFD9   	movff	btemp+10,fsr2l
 20133  0112FA  0060  F10F  FFDA   	movff	btemp+11,fsr2h
 20134  011300  006F FF78  F040    	movff	postinc2,btemp+8
 20135  011306  006F FF78  F041    	movff	postinc2,btemp+9
 20136  01130C  006F FF78  F042    	movff	postinc2,btemp+10
 20137  011312  006F FF78  F043    	movff	postinc2,btemp+11
 20138  011318  5040               	movf	btemp+8,w,c
 20139  01131A  6E48               	movwf	btemp+16,c
 20140  01131C  5041               	movf	btemp+9,w,c
 20141  01131E  6E49               	movwf	btemp+17,c
 20142  011320  5042               	movf	btemp+10,w,c
 20143  011322  6E4A               	movwf	btemp+18,c
 20144  011324  5043               	movf	btemp+11,w,c
 20145  011326  6E4B               	movwf	btemp+19,c
 20146  011328  D714               	goto	L35
 20147  01132A                     l15654:
 20148                           
 20149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 20150                           ;stkvar	_fmt @ sp[(-19)+-4]
 20151  01132A  0EE9               	movlw	-23
 20152  01132C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20153  011332  0EEA               	movlw	-22
 20154  011334  006F FF8F FFDA     	movff	plusw1,fsr2h
 20155  01133A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20156  011340  006F FF77 FFF7     	movff	postdec2,tblptrh
 20157  011346                     	if	0	;tblptru may be non-zero
 20158  011346                     	endif
 20159  011346                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20160  011346  0E00               	movlw	low (__mediumconst shr (0+16))
 20161  011348  6EF8               	movwf	tblptru,c
 20162  01134A                     	endif
 20163  01134A  0008               	tblrd		*
 20164  01134C  50F5               	movf	tablat,w,c
 20165  01134E  0A25               	xorlw	37
 20166  011350  A4D8               	btfss	status,2,c
 20167  011352  D01A               	goto	l15664
 20168                           
 20169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 20170                           ;stkvar	_fmt @ sp[(-19)+-4]
 20171  011354  0EE9               	movlw	-23
 20172  011356  006F FF8F FFD9     	movff	plusw1,fsr2l
 20173  01135C  0EEA               	movlw	-22
 20174  01135E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20175  011364  2ADE               	incf	postinc2,f,c
 20176  011366  0E00               	movlw	0
 20177  011368  22DD               	addwfc	postdec2,f,c
 20178                           
 20179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 20180                           ;stkvar	_fp @ sp[(-19)+-2]
 20181  01136A  0EEB               	movlw	-21
 20182  01136C  006F FF8F FFE6     	movff	plusw1,postinc1
 20183  011372  006F FF8F FFE6     	movff	plusw1,postinc1
 20184  011378  0E25               	movlw	37
 20185  01137A  6EE6               	movwf	postinc1,c
 20186  01137C  0E00               	movlw	0
 20187  01137E  6EE6               	movwf	postinc1,c
 20188  011380  EC55  F0A8         	call	_fputc	;wreg free
 20189  011384                     l15660:
 20190                           
 20191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 20192  011384  0E01               	movlw	1
 20193  011386  D00C               	goto	L36
 20194  011388                     l15664:
 20195                           
 20196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 20197                           ;stkvar	_fmt @ sp[(-19)+-4]
 20198  011388  0EE9               	movlw	-23
 20199  01138A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20200  011390  0EEA               	movlw	-22
 20201  011392  006F FF8F FFDA     	movff	plusw1,fsr2h
 20202  011398  2ADE               	incf	postinc2,f,c
 20203  01139A  0E00               	movlw	0
 20204  01139C  22DD               	addwfc	postdec2,f,c
 20205                           
 20206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 20207  01139E  0E00               	movlw	0
 20208  0113A0                     L36:
 20209  0113A0  6E38               	movwf	btemp,c
 20210  0113A2  0E00               	movlw	0
 20211  0113A4  6E39               	movwf	btemp+1,c
 20212  0113A6  D02A               	goto	l2501
 20213  0113A8                     l15670:
 20214                           
 20215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 20216                           ;stkvar	_fp @ sp[(-19)+-2]
 20217  0113A8  0EEB               	movlw	-21
 20218  0113AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20219  0113B0  006F FF8F FFE6     	movff	plusw1,postinc1
 20220                           
 20221                           ;stkvar	_fmt @ sp[(-21)+-4]
 20222  0113B6  0EE7               	movlw	-25
 20223  0113B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20224  0113BE  0EE8               	movlw	-24
 20225  0113C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20226  0113C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20227  0113CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20228  0113D2                     	if	0	;tblptru may be non-zero
 20229  0113D2                     	endif
 20230  0113D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20231  0113D2  0E00               	movlw	low (__mediumconst shr (0+16))
 20232  0113D4  6EF8               	movwf	tblptru,c
 20233  0113D6                     	endif
 20234  0113D6  0008               	tblrd		*
 20235  0113D8  50F5               	movf	tablat,w,c
 20236  0113DA  6EE6               	movwf	postinc1,c
 20237  0113DC  0E00               	movlw	0
 20238  0113DE  6EE6               	movwf	postinc1,c
 20239  0113E0  EC55  F0A8         	call	_fputc	;wreg free
 20240                           
 20241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 20242                           ;stkvar	_fmt @ sp[(-19)+-4]
 20243  0113E4  0EE9               	movlw	-23
 20244  0113E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 20245  0113EC  0EEA               	movlw	-22
 20246  0113EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 20247  0113F4  2ADE               	incf	postinc2,f,c
 20248  0113F6  0E00               	movlw	0
 20249  0113F8  22DD               	addwfc	postdec2,f,c
 20250  0113FA  D7C4               	goto	l15660
 20251  0113FC                     l2501:
 20252                           
 20253                           ; _vfpfcnvrt: autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 20254  0113FC  0EE7               	movlw	231
 20255  0113FE  26E1               	addwf	fsr1l,f,c
 20256  011400  0EFF               	movlw	255
 20257  011402  22E2               	addwfc	fsr1h,f,c
 20258  011404  0012               	return		;funcret
 20259  011406                     __end_of_vfpfcnvrt:
 20260                           	opt callstack 0
 20261                           
 20262 ;; *************** function _xtoa *****************
 20263 ;; Defined at:
 20264 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 20265 ;; Parameters:    Size  Location     Type
 20266 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20267 ;;		 -> f(6), NULL(0), 
 20268 ;;  d               8  [STACK] unsigned long long 
 20269 ;;  x               1  [STACK] unsigned char 
 20270 ;; Auto vars:     Size  Location     Type
 20271 ;;  n               8  [STACK] unsigned long long 
 20272 ;;  c               2  [STACK] int 
 20273 ;;  i               2  [STACK] int 
 20274 ;;  w               2  [STACK] int 
 20275 ;;  p               2  [STACK] int 
 20276 ;; Return value:  Size  Location     Type
 20277 ;;                  2  [STACK] int 
 20278 ;; Registers used:
 20279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20280 ;; Tracked objects:
 20281 ;;		On entry : 0/0
 20282 ;;		On exit  : 0/0
 20283 ;;		Unchanged: 0/0
 20284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20289 ;;Total ram usage:        0 bytes
 20290 ;; Hardware stack levels used:    1
 20291 ;; Hardware stack levels required when called:    8
 20292 ;; This function calls:
 20293 ;;		_isalpha
 20294 ;;		_isupper
 20295 ;;		_pad
 20296 ;;		_toupper
 20297 ;; This function is called by:
 20298 ;;		_vfpfcnvrt
 20299 ;; This function uses a reentrant model
 20300 ;;
 20301                           
 20302                           	psect	text94
 20303  012CAA                     __ptext94:
 20304                           	opt callstack 0
 20305  012CAA                     _xtoa:
 20306                           	opt callstack 0
 20307                           
 20308                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20309  012CAA  0E14               	movlw	20
 20310  012CAC  26E1               	addwf	fsr1l,f,c
 20311  012CAE  0E00               	movlw	0
 20312  012CB0  22E2               	addwfc	fsr1h,f,c
 20313                           
 20314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 20315                           
 20316                           ;incstack = 0
 20317  012CB2  AE13               	btfss	_prec+1,7,c
 20318                           
 20319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 20320  012CB4  9214               	bcf	_flags,1,c
 20321                           
 20322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 20323  012CB6  BE13               	btfsc	_prec+1,7,c
 20324  012CB8  D005               	goto	u10400
 20325  012CBA  5013               	movf	_prec+1,w,c
 20326  012CBC  E110               	bnz	l15510
 20327  012CBE  0412               	decf	_prec,w,c
 20328  012CC0  B0D8               	btfsc	status,0,c
 20329  012CC2  D00D               	goto	l15510
 20330  012CC4                     u10400:
 20331  012CC4  0E01               	movlw	1
 20332  012CC6  6E42               	movwf	btemp+10,c
 20333  012CC8  0E00               	movlw	0
 20334  012CCA  6E43               	movwf	btemp+11,c
 20335                           
 20336                           ;stkvar	_p @ sp[(-20)+18]
 20337  012CCC  0EFE               	movlw	-2
 20338  012CCE  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20339  012CD4  0EFF               	movlw	-1
 20340  012CD6  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20341  012CDC  D008               	goto	l2473
 20342  012CDE                     l15510:
 20343                           
 20344                           ;stkvar	_p @ sp[(-20)+18]
 20345  012CDE  0EFE               	movlw	-2
 20346  012CE0  0060  F04B  FFE3   	movff	_prec,plusw1
 20347  012CE6  0EFF               	movlw	-1
 20348  012CE8  0060  F04F  FFE3   	movff	_prec+1,plusw1
 20349  012CEE                     l2473:
 20350                           
 20351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
 20352                           ;stkvar	_w @ sp[(-20)+16]
 20353  012CEE  0EFC               	movlw	-4
 20354  012CF0  0060  F043  FFE3   	movff	_width,plusw1
 20355  012CF6  0EFD               	movlw	-3
 20356  012CF8  0060  F047  FFE3   	movff	_width+1,plusw1
 20357                           
 20358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 20359  012CFE  A814               	btfss	_flags,4,c
 20360  012D00  D00B               	goto	l15516
 20361                           
 20362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 20363                           ;stkvar	_w @ sp[(-20)+16]
 20364  012D02  50E1               	movf	fsr1l,w,c
 20365  012D04  0FFC               	addlw	-4
 20366  012D06  6ED9               	movwf	fsr2l,c
 20367  012D08  50E2               	movf	fsr1h,w,c
 20368  012D0A  6EDA               	movwf	fsr2h,c
 20369  012D0C  0EFF               	movlw	255
 20370  012D0E  22DA               	addwfc	fsr2h,f,c
 20371  012D10  0EFE               	movlw	254
 20372  012D12  26DE               	addwf	postinc2,f,c
 20373  012D14  0EFF               	movlw	255
 20374  012D16  22DD               	addwfc	postdec2,f,c
 20375  012D18                     l15516:
 20376                           
 20377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
 20378                           ;stkvar	_d @ sp[(-20)+-10]
 20379  012D18  0EE2               	movlw	226
 20380  012D1A  24E1               	addwf	fsr1l,w,c
 20381  012D1C  6ED9               	movwf	fsr2l,c
 20382  012D1E  0EFF               	movlw	255
 20383  012D20  20E2               	addwfc	fsr1h,w,c
 20384  012D22  6EDA               	movwf	fsr2h,c
 20385                           
 20386                           ;stkvar	_n @ sp[(-20)+4]
 20387  012D24  0E08               	movlw	8
 20388  012D26  6E38               	movwf	btemp,c
 20389  012D28  0EF0               	movlw	-16
 20390  012D2A                     us1042999:
 20391  012D2A  006F FF7B FFE3     	movff	postinc2,plusw1
 20392  012D30  28E8               	incf	wreg,w,c
 20393  012D32  2E38               	decfsz	btemp,f,c
 20394  012D34  D7FA               	bra	us1042999
 20395                           
 20396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 20397  012D36  0E1F               	movlw	31
 20398  012D38  6E42               	movwf	btemp+10,c
 20399  012D3A  0E00               	movlw	0
 20400  012D3C  6E43               	movwf	btemp+11,c
 20401                           
 20402                           ;stkvar	_i @ sp[(-20)+14]
 20403  012D3E  0EFA               	movlw	-6
 20404  012D40  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20405  012D46  0EFB               	movlw	-5
 20406  012D48  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20407                           
 20408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 20409  012D4E  0101               	movlb	1	; () banked
 20410  012D50  6BEF               	clrf	(_dbuf+31)& (0+255),b
 20411                           
 20412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20413  012D52  D0EE               	goto	l15554
 20414  012D54                     l15522:
 20415                           
 20416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
 20417                           ;stkvar	_i @ sp[(-20)+14]
 20418  012D54  50E1               	movf	fsr1l,w,c
 20419  012D56  0FFA               	addlw	-6
 20420  012D58  6ED9               	movwf	fsr2l,c
 20421  012D5A  50E2               	movf	fsr1h,w,c
 20422  012D5C  6EDA               	movwf	fsr2h,c
 20423  012D5E  0EFF               	movlw	255
 20424  012D60  22DA               	addwfc	fsr2h,f,c
 20425  012D62  06DE               	decf	postinc2,f,c
 20426  012D64  0E00               	movlw	0
 20427  012D66  5ADD               	subwfb	postdec2,f,c
 20428                           
 20429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 20430                           ;stkvar	_n @ sp[(-20)+4]
 20431  012D68  0EF0               	movlw	-16
 20432  012D6A  006F FF8C  F042    	movff	plusw1,btemp+10
 20433  012D70  0EF1               	movlw	-15
 20434  012D72  006F FF8C  F043    	movff	plusw1,btemp+11
 20435  012D78  0E0F               	movlw	15
 20436  012D7A  1642               	andwf	btemp+10,f,c
 20437  012D7C  0E00               	movlw	0
 20438  012D7E  1643               	andwf	btemp+11,f,c
 20439                           
 20440                           ;stkvar	_c @ sp[(-20)+12]
 20441  012D80  0EF8               	movlw	-8
 20442  012D82  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20443  012D88  0EF9               	movlw	-7
 20444  012D8A  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20445                           
 20446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 20447                           ;stkvar	_c @ sp[(-20)+12]
 20448  012D90  0EF9               	movlw	-7
 20449  012D92  BEE3               	btfsc	plusw1,7,c
 20450  012D94  D00F               	goto	l15530
 20451  012D96  0EF9               	movlw	-7
 20452  012D98  50E3               	movf	plusw1,w,c
 20453  012D9A  E108               	bnz	u10430
 20454  012D9C  0EF8               	movlw	-8
 20455  012D9E  006F FF8C  F038    	movff	plusw1,btemp
 20456  012DA4  0E0A               	movlw	10
 20457  012DA6  5E38               	subwf	btemp,f,c
 20458  012DA8  A0D8               	btfss	status,0,c
 20459  012DAA  D004               	goto	l15530
 20460  012DAC                     u10430:
 20461                           
 20462                           ;stkvar	_c @ sp[(-20)+12]
 20463  012DAC  0EF8               	movlw	-8
 20464  012DAE  50E3               	movf	plusw1,w,c
 20465  012DB0  0F57               	addlw	87
 20466  012DB2  D003               	goto	L37
 20467  012DB4                     l15530:
 20468                           
 20469                           ;stkvar	_c @ sp[(-20)+12]
 20470  012DB4  0EF8               	movlw	-8
 20471  012DB6  50E3               	movf	plusw1,w,c
 20472  012DB8  0F30               	addlw	48
 20473  012DBA                     L37:
 20474  012DBA  6E42               	movwf	btemp+10,c
 20475  012DBC  0EF9               	movlw	-7
 20476  012DBE  006F FF8C  F043    	movff	plusw1,btemp+11
 20477  012DC4  0E00               	movlw	0
 20478  012DC6  2243               	addwfc	btemp+11,f,c
 20479                           
 20480                           ;stkvar	_c @ sp[(-20)+12]
 20481  012DC8  0EF8               	movlw	-8
 20482  012DCA  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20483  012DD0  0EF9               	movlw	-7
 20484  012DD2  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20485  012DD8  0EBF               	movlw	191
 20486  012DDA  6E42               	movwf	btemp+10,c
 20487  012DDC  0EFF               	movlw	255
 20488  012DDE  6E43               	movwf	btemp+11,c
 20489                           
 20490                           ;stkvar	_x @ sp[(-20)+-11]
 20491  012DE0  0EE1               	movlw	-31
 20492  012DE2  50E3               	movf	plusw1,w,c
 20493  012DE4  6E40               	movwf	btemp+8,c
 20494  012DE6  6A41               	clrf	btemp+9,c
 20495  012DE8  5042               	movf	btemp+10,w,c
 20496  012DEA  2640               	addwf	btemp+8,f,c
 20497  012DEC  5043               	movf	btemp+11,w,c
 20498  012DEE  2241               	addwfc	btemp+9,f,c
 20499  012DF0  5041               	movf	btemp+9,w,c
 20500  012DF2  E106               	bnz	u10440
 20501  012DF4  0E1A               	movlw	26
 20502  012DF6  5C40               	subwf	btemp+8,w,c
 20503  012DF8  B0D8               	btfsc	status,0,c
 20504  012DFA  D002               	goto	u10440
 20505  012DFC  0E01               	movlw	1
 20506  012DFE  D001               	goto	u10450
 20507  012E00                     u10440:
 20508  012E00  0E00               	movlw	0
 20509  012E02                     u10450:
 20510  012E02  6E42               	movwf	btemp+10,c
 20511  012E04  6A43               	clrf	btemp+11,c
 20512                           
 20513                           ;stkvar	_xtoa$5311 @ sp[(-20)+2]
 20514  012E06  0EEE               	movlw	-18
 20515  012E08  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20516  012E0E  0EEF               	movlw	-17
 20517  012E10  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20518                           
 20519                           ;stkvar	_xtoa$5311 @ sp[(-20)+2]
 20520  012E16  0EEE               	movlw	-18
 20521  012E18  006F FF8C  F038    	movff	plusw1,btemp
 20522  012E1E  0EEF               	movlw	-17
 20523  012E20  50E3               	movf	plusw1,w,c
 20524  012E22  1038               	iorwf	btemp,w,c
 20525  012E24  B4D8               	btfsc	status,2,c
 20526  012E26  D041               	goto	l15546
 20527  012E28  0E9F               	movlw	159
 20528  012E2A  6E42               	movwf	btemp+10,c
 20529  012E2C  0EFF               	movlw	255
 20530  012E2E  6E43               	movwf	btemp+11,c
 20531                           
 20532                           ;stkvar	_c @ sp[(-20)+12]
 20533  012E30  0EF8               	movlw	-8
 20534  012E32  006F FF8C  F040    	movff	plusw1,btemp+8
 20535  012E38  0EF9               	movlw	-7
 20536  012E3A  006F FF8C  F041    	movff	plusw1,btemp+9
 20537  012E40  0E20               	movlw	32
 20538  012E42  1240               	iorwf	btemp+8,f,c
 20539  012E44  0E00               	movlw	0
 20540  012E46  1241               	iorwf	btemp+9,f,c
 20541  012E48  5042               	movf	btemp+10,w,c
 20542  012E4A  2640               	addwf	btemp+8,f,c
 20543  012E4C  5043               	movf	btemp+11,w,c
 20544  012E4E  2241               	addwfc	btemp+9,f,c
 20545  012E50  5041               	movf	btemp+9,w,c
 20546  012E52  E106               	bnz	u10470
 20547  012E54  0E1A               	movlw	26
 20548  012E56  5C40               	subwf	btemp+8,w,c
 20549  012E58  B0D8               	btfsc	status,0,c
 20550  012E5A  D002               	goto	u10470
 20551  012E5C  0E01               	movlw	1
 20552  012E5E  D001               	goto	u10480
 20553  012E60                     u10470:
 20554  012E60  0E00               	movlw	0
 20555  012E62                     u10480:
 20556  012E62  6E42               	movwf	btemp+10,c
 20557  012E64  6A43               	clrf	btemp+11,c
 20558                           
 20559                           ;stkvar	_xtoa$5312 @ sp[(-20)+0]
 20560  012E66  0EEC               	movlw	-20
 20561  012E68  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20562  012E6E  0EED               	movlw	-19
 20563  012E70  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20564                           
 20565                           ;stkvar	_xtoa$5312 @ sp[(-20)+0]
 20566  012E76  0EEC               	movlw	-20
 20567  012E78  006F FF8C  F038    	movff	plusw1,btemp
 20568  012E7E  0EED               	movlw	-19
 20569  012E80  50E3               	movf	plusw1,w,c
 20570  012E82  1038               	iorwf	btemp,w,c
 20571  012E84  B4D8               	btfsc	status,2,c
 20572  012E86  D011               	goto	l15546
 20573                           
 20574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 20575                           ;stkvar	_c @ sp[(-20)+12]
 20576  012E88  0EF8               	movlw	-8
 20577  012E8A  006F FF8F FFE6     	movff	plusw1,postinc1
 20578  012E90  006F FF8F FFE6     	movff	plusw1,postinc1
 20579  012E96  EC5E  F0B0         	call	_toupper	;wreg free
 20580                           
 20581                           ;stkvar	_c @ sp[(-20)+12]
 20582  012E9A  0EF8               	movlw	-8
 20583  012E9C  0060  F0E3  FFE3   	movff	btemp,plusw1
 20584  012EA2  0EF9               	movlw	-7
 20585  012EA4  0060  F0E7  FFE3   	movff	btemp+1,plusw1
 20586  012EAA                     l15546:
 20587                           
 20588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 20589                           ;stkvar	_c @ sp[(-20)+12]
 20590                           ;stkvar	_i @ sp[(-20)+14]
 20591  012EAA  0EFA               	movlw	-6
 20592  012EAC  006F FF8C  F042    	movff	plusw1,btemp+10
 20593  012EB2  0EFB               	movlw	-5
 20594  012EB4  006F FF8C  F043    	movff	plusw1,btemp+11
 20595  012EBA  0ED0               	movlw	low _dbuf
 20596  012EBC  2442               	addwf	btemp+10,w,c
 20597  012EBE  6ED9               	movwf	fsr2l,c
 20598  012EC0  0E01               	movlw	high _dbuf
 20599  012EC2  2043               	addwfc	btemp+11,w,c
 20600  012EC4  6EDA               	movwf	fsr2h,c
 20601  012EC6  0EF8               	movlw	-8
 20602  012EC8  006F FF8F FFDF     	movff	plusw1,indf2
 20603                           
 20604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
 20605                           ;stkvar	_p @ sp[(-20)+18]
 20606  012ECE  50E1               	movf	fsr1l,w,c
 20607  012ED0  0FFE               	addlw	-2
 20608  012ED2  6ED9               	movwf	fsr2l,c
 20609  012ED4  50E2               	movf	fsr1h,w,c
 20610  012ED6  6EDA               	movwf	fsr2h,c
 20611  012ED8  0EFF               	movlw	255
 20612  012EDA  22DA               	addwfc	fsr2h,f,c
 20613  012EDC  06DE               	decf	postinc2,f,c
 20614  012EDE  0E00               	movlw	0
 20615  012EE0  5ADD               	subwfb	postdec2,f,c
 20616                           
 20617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
 20618                           ;stkvar	_w @ sp[(-20)+16]
 20619  012EE2  50E1               	movf	fsr1l,w,c
 20620  012EE4  0FFC               	addlw	-4
 20621  012EE6  6ED9               	movwf	fsr2l,c
 20622  012EE8  50E2               	movf	fsr1h,w,c
 20623  012EEA  6EDA               	movwf	fsr2h,c
 20624  012EEC  0EFF               	movlw	255
 20625  012EEE  22DA               	addwfc	fsr2h,f,c
 20626  012EF0  06DE               	decf	postinc2,f,c
 20627  012EF2  0E00               	movlw	0
 20628  012EF4  5ADD               	subwfb	postdec2,f,c
 20629                           
 20630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 20631  012EF6  0E04               	movlw	4
 20632  012EF8  6E43               	movwf	btemp+11,c
 20633                           
 20634                           ;stkvar	_n @ sp[(-20)+4]
 20635  012EFA  50E1               	movf	fsr1l,w,c
 20636  012EFC  0FF0               	addlw	-16
 20637  012EFE  6ED9               	movwf	fsr2l,c
 20638  012F00  50E2               	movf	fsr1h,w,c
 20639  012F02  6EDA               	movwf	fsr2h,c
 20640  012F04  0EFF               	movlw	255
 20641  012F06  22DA               	addwfc	fsr2h,f,c
 20642  012F08  2843               	incf	btemp+11,w,c
 20643  012F0A  52DE               	movf	postinc2,f,c
 20644  012F0C  D00F               	goto	u10500
 20645  012F0E                     u10505:
 20646  012F0E  52DE               	movf	postinc2,f,c
 20647  012F10  52DE               	movf	postinc2,f,c
 20648  012F12  52DE               	movf	postinc2,f,c
 20649  012F14  52DE               	movf	postinc2,f,c
 20650  012F16  52DE               	movf	postinc2,f,c
 20651  012F18  52DE               	movf	postinc2,f,c
 20652  012F1A  90D8               	bcf	status,0,c
 20653  012F1C  32DD               	rrcf	postdec2,f,c
 20654  012F1E  32DD               	rrcf	postdec2,f,c
 20655  012F20  32DD               	rrcf	postdec2,f,c
 20656  012F22  32DD               	rrcf	postdec2,f,c
 20657  012F24  32DD               	rrcf	postdec2,f,c
 20658  012F26  32DD               	rrcf	postdec2,f,c
 20659  012F28  32DD               	rrcf	postdec2,f,c
 20660  012F2A  32DE               	rrcf	postinc2,f,c
 20661  012F2C                     u10500:
 20662  012F2C  2EE8               	decfsz	wreg,f,c
 20663  012F2E  D7EF               	goto	u10505
 20664  012F30                     l15554:
 20665                           
 20666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20667                           ;stkvar	_i @ sp[(-20)+14]
 20668  012F30  0EFB               	movlw	-5
 20669  012F32  BEE3               	btfsc	plusw1,7,c
 20670  012F34  D03A               	goto	u10550
 20671  012F36  0EFB               	movlw	-5
 20672  012F38  50E3               	movf	plusw1,w,c
 20673  012F3A  E108               	bnz	u10510
 20674  012F3C  0EFA               	movlw	-6
 20675  012F3E  006F FF8C  F038    	movff	plusw1,btemp
 20676  012F44  0E02               	movlw	2
 20677  012F46  5E38               	subwf	btemp,f,c
 20678  012F48  A0D8               	btfss	status,0,c
 20679  012F4A  D02F               	goto	u10550
 20680  012F4C                     u10510:
 20681                           
 20682                           ;stkvar	_n @ sp[(-20)+4]
 20683  012F4C  0EF0               	movlw	-16
 20684  012F4E  50E3               	movf	plusw1,w,c
 20685  012F50  E115               	bnz	u10521
 20686  012F52  0EF1               	movlw	-15
 20687  012F54  50E3               	movf	plusw1,w,c
 20688  012F56  E112               	bnz	u10521
 20689  012F58  0EF2               	movlw	-14
 20690  012F5A  50E3               	movf	plusw1,w,c
 20691  012F5C  E10F               	bnz	u10521
 20692  012F5E  0EF3               	movlw	-13
 20693  012F60  50E3               	movf	plusw1,w,c
 20694  012F62  E10C               	bnz	u10521
 20695  012F64  0EF4               	movlw	-12
 20696  012F66  50E3               	movf	plusw1,w,c
 20697  012F68  E109               	bnz	u10521
 20698  012F6A  0EF5               	movlw	-11
 20699  012F6C  50E3               	movf	plusw1,w,c
 20700  012F6E  E106               	bnz	u10521
 20701  012F70  0EF6               	movlw	-10
 20702  012F72  50E3               	movf	plusw1,w,c
 20703  012F74  E103               	bnz	u10521
 20704  012F76  0EF7               	movlw	-9
 20705  012F78  50E3               	movf	plusw1,w,c
 20706  012F7A  A4D8               	btfss	status,2,c
 20707  012F7C                     u10521:
 20708  012F7C  D6EB               	goto	l15522
 20709                           
 20710                           ;stkvar	_p @ sp[(-20)+18]
 20711  012F7E  0EFF               	movlw	-1
 20712  012F80  BEE3               	btfsc	plusw1,7,c
 20713  012F82  D007               	goto	u10530
 20714  012F84  0EFF               	movlw	-1
 20715  012F86  50E3               	movf	plusw1,w,c
 20716  012F88  E103               	bnz	u10531
 20717  012F8A  0EFE               	movlw	-2
 20718  012F8C  04E3               	decf	plusw1,w,c
 20719  012F8E  B0D8               	btfsc	status,0,c
 20720  012F90                     u10531:
 20721  012F90  D6E1               	goto	l15522
 20722  012F92                     u10530:
 20723                           
 20724                           ;stkvar	_w @ sp[(-20)+16]
 20725  012F92  0EFD               	movlw	-3
 20726  012F94  BEE3               	btfsc	plusw1,7,c
 20727  012F96  D009               	goto	u10550
 20728  012F98  0EFD               	movlw	-3
 20729  012F9A  50E3               	movf	plusw1,w,c
 20730  012F9C  E104               	bnz	u10540
 20731  012F9E  0EFC               	movlw	-4
 20732  012FA0  04E3               	decf	plusw1,w,c
 20733  012FA2  A0D8               	btfss	status,0,c
 20734  012FA4  D002               	goto	u10550
 20735  012FA6                     u10540:
 20736  012FA6  B214               	btfsc	_flags,1,c
 20737  012FA8  D6D5               	goto	l15522
 20738  012FAA                     u10550:
 20739                           
 20740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 20741  012FAA  A814               	btfss	_flags,4,c
 20742  012FAC  D036               	goto	l15570
 20743                           
 20744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
 20745                           ;stkvar	_i @ sp[(-20)+14]
 20746  012FAE  50E1               	movf	fsr1l,w,c
 20747  012FB0  0FFA               	addlw	-6
 20748  012FB2  6ED9               	movwf	fsr2l,c
 20749  012FB4  50E2               	movf	fsr1h,w,c
 20750  012FB6  6EDA               	movwf	fsr2h,c
 20751  012FB8  0EFF               	movlw	255
 20752  012FBA  22DA               	addwfc	fsr2h,f,c
 20753  012FBC  06DE               	decf	postinc2,f,c
 20754  012FBE  0E00               	movlw	0
 20755  012FC0  5ADD               	subwfb	postdec2,f,c
 20756                           
 20757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 20758                           ;stkvar	_x @ sp[(-20)+-11]
 20759                           ;stkvar	_i @ sp[(-20)+14]
 20760  012FC2  0EFA               	movlw	-6
 20761  012FC4  006F FF8C  F042    	movff	plusw1,btemp+10
 20762  012FCA  0EFB               	movlw	-5
 20763  012FCC  006F FF8C  F043    	movff	plusw1,btemp+11
 20764  012FD2  0ED0               	movlw	low _dbuf
 20765  012FD4  2442               	addwf	btemp+10,w,c
 20766  012FD6  6ED9               	movwf	fsr2l,c
 20767  012FD8  0E01               	movlw	high _dbuf
 20768  012FDA  2043               	addwfc	btemp+11,w,c
 20769  012FDC  6EDA               	movwf	fsr2h,c
 20770  012FDE  0EE1               	movlw	-31
 20771  012FE0  006F FF8F FFDF     	movff	plusw1,indf2
 20772                           
 20773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
 20774                           ;stkvar	_i @ sp[(-20)+14]
 20775  012FE6  50E1               	movf	fsr1l,w,c
 20776  012FE8  0FFA               	addlw	-6
 20777  012FEA  6ED9               	movwf	fsr2l,c
 20778  012FEC  50E2               	movf	fsr1h,w,c
 20779  012FEE  6EDA               	movwf	fsr2h,c
 20780  012FF0  0EFF               	movlw	255
 20781  012FF2  22DA               	addwfc	fsr2h,f,c
 20782  012FF4  06DE               	decf	postinc2,f,c
 20783  012FF6  0E00               	movlw	0
 20784  012FF8  5ADD               	subwfb	postdec2,f,c
 20785                           
 20786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 20787                           ;stkvar	_i @ sp[(-20)+14]
 20788  012FFA  0EFA               	movlw	-6
 20789  012FFC  006F FF8C  F042    	movff	plusw1,btemp+10
 20790  013002  0EFB               	movlw	-5
 20791  013004  006F FF8C  F043    	movff	plusw1,btemp+11
 20792  01300A  0ED0               	movlw	low _dbuf
 20793  01300C  2442               	addwf	btemp+10,w,c
 20794  01300E  6ED9               	movwf	fsr2l,c
 20795  013010  0E01               	movlw	high _dbuf
 20796  013012  2043               	addwfc	btemp+11,w,c
 20797  013014  6EDA               	movwf	fsr2h,c
 20798  013016  0E30               	movlw	48
 20799  013018  6EDF               	movwf	indf2,c
 20800  01301A                     l15570:
 20801                           
 20802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 20803                           ;stkvar	_w @ sp[(-20)+16]
 20804  01301A  0EFC               	movlw	-4
 20805  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 20806  013022  006F FF8F FFE6     	movff	plusw1,postinc1
 20807                           
 20808                           ;stkvar	_i @ sp[(-22)+14]
 20809  013028  0ED0               	movlw	low _dbuf
 20810  01302A  6E42               	movwf	btemp+10,c
 20811  01302C  0E01               	movlw	high _dbuf
 20812  01302E  6E43               	movwf	btemp+11,c
 20813  013030  0EF8               	movlw	-8
 20814  013032  50E3               	movf	plusw1,w,c
 20815  013034  2642               	addwf	btemp+10,f,c
 20816  013036  0EF9               	movlw	-7
 20817  013038  50E3               	movf	plusw1,w,c
 20818  01303A  2243               	addwfc	btemp+11,f,c
 20819  01303C  0060  F10B  FFE6   	movff	btemp+10,postinc1
 20820  013042  0060  F10F  FFE6   	movff	btemp+11,postinc1
 20821                           
 20822                           ;stkvar	_fp @ sp[(-24)+-2]
 20823  013048  0EE6               	movlw	-26
 20824  01304A  006F FF8F FFE6     	movff	plusw1,postinc1
 20825  013050  006F FF8F FFE6     	movff	plusw1,postinc1
 20826  013056  EC78  F0A9         	call	_pad	;wreg free
 20827                           
 20828                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 20829  01305A  0EE1               	movlw	225
 20830  01305C  26E1               	addwf	fsr1l,f,c
 20831  01305E  0EFF               	movlw	255
 20832  013060  22E2               	addwfc	fsr1h,f,c
 20833  013062  0012               	return		;funcret
 20834  013064                     __end_of_xtoa:
 20835                           	opt callstack 0
 20836                           
 20837 ;; *************** function _toupper *****************
 20838 ;; Defined at:
 20839 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
 20840 ;; Parameters:    Size  Location     Type
 20841 ;;  c               2  [STACK] int 
 20842 ;; Auto vars:     Size  Location     Type
 20843 ;;		None
 20844 ;; Return value:  Size  Location     Type
 20845 ;;                  2  [STACK] int 
 20846 ;; Registers used:
 20847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 20848 ;; Tracked objects:
 20849 ;;		On entry : 0/1
 20850 ;;		On exit  : 0/0
 20851 ;;		Unchanged: 0/0
 20852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20857 ;;Total ram usage:        0 bytes
 20858 ;; Hardware stack levels used:    1
 20859 ;; Hardware stack levels required when called:    4
 20860 ;; This function calls:
 20861 ;;		_islower
 20862 ;; This function is called by:
 20863 ;;		_xtoa
 20864 ;; This function uses a reentrant model
 20865 ;;
 20866                           
 20867                           	psect	text95
 20868  0160BC                     __ptext95:
 20869                           	opt callstack 0
 20870  0160BC                     _toupper:
 20871                           	opt callstack 0
 20872                           
 20873                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20874  0160BC  52E6               	movf	postinc1,f,c
 20875  0160BE  52E6               	movf	postinc1,f,c
 20876                           
 20877                           ;stkvar	_c @ sp[(-2)+-2]
 20878                           
 20879                           ;incstack = 0
 20880  0160C0  0EFC               	movlw	-4
 20881  0160C2  50E3               	movf	plusw1,w,c
 20882  0160C4  0F9F               	addlw	159
 20883  0160C6  6E42               	movwf	btemp+10,c
 20884  0160C8  0EFD               	movlw	-3
 20885  0160CA  006F FF8C  F043    	movff	plusw1,btemp+11
 20886  0160D0  0EFF               	movlw	255
 20887  0160D2  2243               	addwfc	btemp+11,f,c
 20888  0160D4  5043               	movf	btemp+11,w,c
 20889  0160D6  E106               	bnz	u7240
 20890  0160D8  0E1A               	movlw	26
 20891  0160DA  5C42               	subwf	btemp+10,w,c
 20892  0160DC  B0D8               	btfsc	status,0,c
 20893  0160DE  D002               	goto	u7240
 20894  0160E0  0E01               	movlw	1
 20895  0160E2  D001               	goto	u7250
 20896  0160E4                     u7240:
 20897  0160E4  0E00               	movlw	0
 20898  0160E6                     u7250:
 20899  0160E6  6E42               	movwf	btemp+10,c
 20900  0160E8  6A43               	clrf	btemp+11,c
 20901                           
 20902                           ;stkvar	_toupper$5896 @ sp[(-2)+0]
 20903  0160EA  0EFE               	movlw	-2
 20904  0160EC  0060  F10B  FFE3   	movff	btemp+10,plusw1
 20905  0160F2  0EFF               	movlw	-1
 20906  0160F4  0060  F10F  FFE3   	movff	btemp+11,plusw1
 20907                           
 20908                           ;stkvar	_toupper$5896 @ sp[(-2)+0]
 20909  0160FA  0EFE               	movlw	-2
 20910  0160FC  006F FF8C  F038    	movff	plusw1,btemp
 20911  016102  0EFF               	movlw	-1
 20912  016104  50E3               	movf	plusw1,w,c
 20913  016106  1038               	iorwf	btemp,w,c
 20914  016108  B4D8               	btfsc	status,2,c
 20915  01610A  D00D               	goto	l11804
 20916                           
 20917                           ;stkvar	_c @ sp[(-2)+-2]
 20918  01610C  0EFC               	movlw	-4
 20919  01610E  006F FF8C  F038    	movff	plusw1,btemp
 20920  016114  0EFD               	movlw	-3
 20921  016116  006F FF8C  F039    	movff	plusw1,btemp+1
 20922  01611C  0E5F               	movlw	95
 20923  01611E  1638               	andwf	btemp,f,c
 20924  016120  0E00               	movlw	0
 20925  016122  1639               	andwf	btemp+1,f,c
 20926  016124  D008               	goto	l3291
 20927  016126                     l11804:
 20928                           
 20929                           ;stkvar	_c @ sp[(-2)+-2]
 20930  016126  0EFC               	movlw	-4
 20931  016128  006F FF8C  F038    	movff	plusw1,btemp
 20932  01612E  0EFD               	movlw	-3
 20933  016130  006F FF8C  F039    	movff	plusw1,btemp+1
 20934  016136                     l3291:
 20935                           
 20936                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20937  016136  52E5               	movf	postdec1,f,c
 20938  016138  52E5               	movf	postdec1,f,c
 20939  01613A  52E5               	movf	postdec1,f,c
 20940  01613C  52E5               	movf	postdec1,f,c
 20941  01613E  0012               	return		;funcret
 20942  016140                     __end_of_toupper:
 20943                           	opt callstack 0
 20944                           
 20945 ;; *************** function _islower *****************
 20946 ;; Defined at:
 20947 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
 20948 ;; Parameters:    Size  Location     Type
 20949 ;;  c               2  [STACK] int 
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;		None
 20952 ;; Return value:  Size  Location     Type
 20953 ;;                  2  [STACK] int 
 20954 ;; Registers used:
 20955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20956 ;; Tracked objects:
 20957 ;;		On entry : 0/0
 20958 ;;		On exit  : 0/0
 20959 ;;		Unchanged: 0/0
 20960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20965 ;;Total ram usage:        0 bytes
 20966 ;; Hardware stack levels used:    1
 20967 ;; Hardware stack levels required when called:    3
 20968 ;; This function calls:
 20969 ;;		Nothing
 20970 ;; This function is called by:
 20971 ;;		_toupper
 20972 ;; This function uses a reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text96
 20976  016B64                     __ptext96:
 20977                           	opt callstack 0
 20978  016B64                     _islower:
 20979                           	opt callstack 19
 20980                           
 20981                           ;stkvar	_c @ sp[(0)+-2]
 20982                           
 20983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20984                           ;incstack = 0
 20985  016B64  0EFE               	movlw	-2
 20986  016B66  50E3               	movf	plusw1,w,c
 20987  016B68  0F9F               	addlw	159
 20988  016B6A  6E42               	movwf	btemp+10,c
 20989  016B6C  0EFF               	movlw	-1
 20990  016B6E  006F FF8C  F043    	movff	plusw1,btemp+11
 20991  016B74  0EFF               	movlw	255
 20992  016B76  2243               	addwfc	btemp+11,f,c
 20993  016B78  5043               	movf	btemp+11,w,c
 20994  016B7A  E106               	bnz	u7130
 20995  016B7C  0E1A               	movlw	26
 20996  016B7E  5C42               	subwf	btemp+10,w,c
 20997  016B80  B0D8               	btfsc	status,0,c
 20998  016B82  D002               	goto	u7130
 20999  016B84  0E01               	movlw	1
 21000  016B86  D001               	goto	u7140
 21001  016B88                     u7130:
 21002  016B88  0E00               	movlw	0
 21003  016B8A                     u7140:
 21004  016B8A  6E38               	movwf	btemp,c
 21005  016B8C  6A39               	clrf	btemp+1,c
 21006                           
 21007                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21008  016B8E  52E5               	movf	postdec1,f,c
 21009  016B90  52E5               	movf	postdec1,f,c
 21010  016B92  0012               	return		;funcret
 21011  016B94                     __end_of_islower:
 21012                           	opt callstack 0
 21013                           
 21014 ;; *************** function _isupper *****************
 21015 ;; Defined at:
 21016 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
 21017 ;; Parameters:    Size  Location     Type
 21018 ;;  c               2  [STACK] int 
 21019 ;; Auto vars:     Size  Location     Type
 21020 ;;		None
 21021 ;; Return value:  Size  Location     Type
 21022 ;;                  2  [STACK] int 
 21023 ;; Registers used:
 21024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21025 ;; Tracked objects:
 21026 ;;		On entry : 0/0
 21027 ;;		On exit  : 0/0
 21028 ;;		Unchanged: 0/0
 21029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21034 ;;Total ram usage:        0 bytes
 21035 ;; Hardware stack levels used:    1
 21036 ;; Hardware stack levels required when called:    3
 21037 ;; This function calls:
 21038 ;;		Nothing
 21039 ;; This function is called by:
 21040 ;;		_xtoa
 21041 ;; This function uses a reentrant model
 21042 ;;
 21043                           
 21044                           	psect	text97
 21045  016B94                     __ptext97:
 21046                           	opt callstack 0
 21047  016B94                     _isupper:
 21048                           	opt callstack 20
 21049                           
 21050                           ;stkvar	_c @ sp[(0)+-2]
 21051                           
 21052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21053                           ;incstack = 0
 21054  016B94  0EFE               	movlw	-2
 21055  016B96  50E3               	movf	plusw1,w,c
 21056  016B98  0FBF               	addlw	191
 21057  016B9A  6E42               	movwf	btemp+10,c
 21058  016B9C  0EFF               	movlw	-1
 21059  016B9E  006F FF8C  F043    	movff	plusw1,btemp+11
 21060  016BA4  0EFF               	movlw	255
 21061  016BA6  2243               	addwfc	btemp+11,f,c
 21062  016BA8  5043               	movf	btemp+11,w,c
 21063  016BAA  E106               	bnz	u7200
 21064  016BAC  0E1A               	movlw	26
 21065  016BAE  5C42               	subwf	btemp+10,w,c
 21066  016BB0  B0D8               	btfsc	status,0,c
 21067  016BB2  D002               	goto	u7200
 21068  016BB4  0E01               	movlw	1
 21069  016BB6  D001               	goto	u7210
 21070  016BB8                     u7200:
 21071  016BB8  0E00               	movlw	0
 21072  016BBA                     u7210:
 21073  016BBA  6E38               	movwf	btemp,c
 21074  016BBC  6A39               	clrf	btemp+1,c
 21075                           
 21076                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21077  016BBE  52E5               	movf	postdec1,f,c
 21078  016BC0  52E5               	movf	postdec1,f,c
 21079  016BC2  0012               	return		;funcret
 21080  016BC4                     __end_of_isupper:
 21081                           	opt callstack 0
 21082                           
 21083 ;; *************** function _isalpha *****************
 21084 ;; Defined at:
 21085 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;  c               2  [STACK] int 
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;		None
 21090 ;; Return value:  Size  Location     Type
 21091 ;;                  2  [STACK] int 
 21092 ;; Registers used:
 21093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 21094 ;; Tracked objects:
 21095 ;;		On entry : 0/0
 21096 ;;		On exit  : 0/0
 21097 ;;		Unchanged: 0/0
 21098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;Total ram usage:        0 bytes
 21104 ;; Hardware stack levels used:    1
 21105 ;; Hardware stack levels required when called:    3
 21106 ;; This function calls:
 21107 ;;		Nothing
 21108 ;; This function is called by:
 21109 ;;		_xtoa
 21110 ;; This function uses a reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text98
 21114  016854                     __ptext98:
 21115                           	opt callstack 0
 21116  016854                     _isalpha:
 21117                           	opt callstack 20
 21118                           
 21119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21120                           ;incstack = 0
 21121  016854  0E9F               	movlw	159
 21122  016856  6E42               	movwf	btemp+10,c
 21123  016858  0EFF               	movlw	255
 21124  01685A  6E43               	movwf	btemp+11,c
 21125                           
 21126                           ;stkvar	_c @ sp[(0)+-2]
 21127  01685C  0EFE               	movlw	-2
 21128  01685E  006F FF8C  F040    	movff	plusw1,btemp+8
 21129  016864  0EFF               	movlw	-1
 21130  016866  006F FF8C  F041    	movff	plusw1,btemp+9
 21131  01686C  0E20               	movlw	32
 21132  01686E  1240               	iorwf	btemp+8,f,c
 21133  016870  0E00               	movlw	0
 21134  016872  1241               	iorwf	btemp+9,f,c
 21135  016874  5042               	movf	btemp+10,w,c
 21136  016876  2640               	addwf	btemp+8,f,c
 21137  016878  5043               	movf	btemp+11,w,c
 21138  01687A  2241               	addwfc	btemp+9,f,c
 21139  01687C  5041               	movf	btemp+9,w,c
 21140  01687E  E106               	bnz	u7220
 21141  016880  0E1A               	movlw	26
 21142  016882  5C40               	subwf	btemp+8,w,c
 21143  016884  B0D8               	btfsc	status,0,c
 21144  016886  D002               	goto	u7220
 21145  016888  0E01               	movlw	1
 21146  01688A  D001               	goto	u7230
 21147  01688C                     u7220:
 21148  01688C  0E00               	movlw	0
 21149  01688E                     u7230:
 21150  01688E  6E38               	movwf	btemp,c
 21151  016890  6A39               	clrf	btemp+1,c
 21152                           
 21153                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21154  016892  52E5               	movf	postdec1,f,c
 21155  016894  52E5               	movf	postdec1,f,c
 21156  016896  0012               	return		;funcret
 21157  016898                     __end_of_isalpha:
 21158                           	opt callstack 0
 21159                           
 21160 ;; *************** function _strncmp *****************
 21161 ;; Defined at:
 21162 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 21163 ;; Parameters:    Size  Location     Type
 21164 ;;  _l              2  [STACK] PTR const unsigned char 
 21165 ;;		 -> STR_62(3), STR_61(3), STR_60(19), STR_59(19), 
 21166 ;;		 -> STR_58(19), STR_57(19), STR_56(25), STR_55(26), 
 21167 ;;		 -> STR_54(21), STR_53(23), STR_52(19), STR_51(19), 
 21168 ;;		 -> STR_50(20), STR_49(18), STR_48(20), STR_47(18), 
 21169 ;;		 -> STR_46(20), STR_45(18), STR_44(20), STR_43(22), 
 21170 ;;		 -> STR_42(15), STR_41(15), STR_40(15), STR_39(10), 
 21171 ;;		 -> STR_38(10), STR_37(19), STR_34(21), STR_33(26), 
 21172 ;;		 -> STR_32(26), STR_31(20), STR_29(91), STR_28(3), 
 21173 ;;		 -> STR_27(3), STR_26(3), STR_25(29), STR_24(26), 
 21174 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 21175 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 21176 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 21177 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 21178 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 21179 ;;		 -> STR_1(17), 
 21180 ;;  _r              2  [STACK] PTR const unsigned char 
 21181 ;;		 -> STR_78(3), STR_74(3), STR_69(3), STR_65(3), 
 21182 ;;  n               2  [STACK] unsigned int 
 21183 ;; Auto vars:     Size  Location     Type
 21184 ;;  r               2  [STACK] PTR const unsigned char 
 21185 ;;		 -> STR_78(3), STR_74(3), STR_69(3), STR_65(3), 
 21186 ;;  l               2  [STACK] PTR const unsigned char 
 21187 ;;		 -> STR_62(3), STR_61(3), STR_60(19), STR_59(19), 
 21188 ;;		 -> STR_58(19), STR_57(19), STR_56(25), STR_55(26), 
 21189 ;;		 -> STR_54(21), STR_53(23), STR_52(19), STR_51(19), 
 21190 ;;		 -> STR_50(20), STR_49(18), STR_48(20), STR_47(18), 
 21191 ;;		 -> STR_46(20), STR_45(18), STR_44(20), STR_43(22), 
 21192 ;;		 -> STR_42(15), STR_41(15), STR_40(15), STR_39(10), 
 21193 ;;		 -> STR_38(10), STR_37(19), STR_34(21), STR_33(26), 
 21194 ;;		 -> STR_32(26), STR_31(20), STR_29(91), STR_28(3), 
 21195 ;;		 -> STR_27(3), STR_26(3), STR_25(29), STR_24(26), 
 21196 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 21197 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 21198 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 21199 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 21200 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 21201 ;;		 -> STR_1(17), 
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  2  [STACK] int 
 21204 ;; Registers used:
 21205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 21206 ;; Tracked objects:
 21207 ;;		On entry : 0/0
 21208 ;;		On exit  : 0/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21215 ;;Total ram usage:        0 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:    3
 21218 ;; This function calls:
 21219 ;;		Nothing
 21220 ;; This function is called by:
 21221 ;;		_vfpfcnvrt
 21222 ;; This function uses a reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text99
 21226  014796                     __ptext99:
 21227                           	opt callstack 0
 21228  014796                     _strncmp:
 21229                           	opt callstack 0
 21230                           
 21231                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21232  014796  52E6               	movf	postinc1,f,c
 21233  014798  52E6               	movf	postinc1,f,c
 21234  01479A  52E6               	movf	postinc1,f,c
 21235  01479C  52E6               	movf	postinc1,f,c
 21236                           
 21237                           ;stkvar	__l @ sp[(-4)+-2]
 21238                           
 21239                           ;incstack = 0
 21240  01479E  0EFA               	movlw	-6
 21241  0147A0  006F FF8C  F042    	movff	plusw1,btemp+10
 21242  0147A6  0EFB               	movlw	-5
 21243  0147A8  006F FF8C  F043    	movff	plusw1,btemp+11
 21244                           
 21245                           ;stkvar	_l @ sp[(-4)+2]
 21246  0147AE  0EFF               	movlw	-1
 21247  0147B0  0060  F10F  FFE3   	movff	btemp+11,plusw1
 21248  0147B6  0EFE               	movlw	-2
 21249  0147B8  0060  F10B  FFE3   	movff	btemp+10,plusw1
 21250                           
 21251                           ;stkvar	__r @ sp[(-4)+-4]
 21252  0147BE  0EF8               	movlw	-8
 21253  0147C0  006F FF8C  F042    	movff	plusw1,btemp+10
 21254  0147C6  0EF9               	movlw	-7
 21255  0147C8  006F FF8C  F043    	movff	plusw1,btemp+11
 21256                           
 21257                           ;stkvar	_r @ sp[(-4)+0]
 21258  0147CE  0EFD               	movlw	-3
 21259  0147D0  0060  F10F  FFE3   	movff	btemp+11,plusw1
 21260  0147D6  0EFC               	movlw	-4
 21261  0147D8  0060  F10B  FFE3   	movff	btemp+10,plusw1
 21262                           
 21263                           ;stkvar	_n @ sp[(-4)+-6]
 21264  0147DE  0EF6               	movlw	-10
 21265  0147E0  006F FF8C  F038    	movff	plusw1,btemp
 21266  0147E6  0E01               	movlw	1
 21267  0147E8  5E38               	subwf	btemp,f,c
 21268  0147EA  0EF6               	movlw	-10
 21269  0147EC  0060  F0E3  FFE3   	movff	btemp,plusw1
 21270  0147F2  0EF7               	movlw	-9
 21271  0147F4  006F FF8C  F038    	movff	plusw1,btemp
 21272  0147FA  0E00               	movlw	0
 21273  0147FC  5A38               	subwfb	btemp,f,c
 21274  0147FE  0EF7               	movlw	-9
 21275  014800  0060  F0E3  FFE3   	movff	btemp,plusw1
 21276  014806  0EF6               	movlw	-10
 21277  014808  28E3               	incf	plusw1,w,c
 21278  01480A  E13F               	bnz	l12102
 21279  01480C  0EF7               	movlw	-9
 21280  01480E  28E3               	incf	plusw1,w,c
 21281  014810  A4D8               	btfss	status,2,c
 21282  014812  D03B               	goto	l12102
 21283  014814  0E00               	movlw	0
 21284  014816  6E38               	movwf	btemp,c
 21285  014818  0E00               	movlw	0
 21286  01481A  6E39               	movwf	btemp+1,c
 21287  01481C  D0B5               	goto	l3276
 21288  01481E                     l12100:
 21289                           
 21290                           ;stkvar	_l @ sp[(-4)+2]
 21291  01481E  0EFE               	movlw	-2
 21292  014820  50E3               	movf	plusw1,w,c
 21293  014822  0F01               	addlw	1
 21294  014824  6E38               	movwf	btemp,c
 21295  014826  0EFE               	movlw	-2
 21296  014828  0060  F0E3  FFE3   	movff	btemp,plusw1
 21297  01482E  6A38               	clrf	btemp,c
 21298  014830  0EFF               	movlw	-1
 21299  014832  50E3               	movf	plusw1,w,c
 21300  014834  2038               	addwfc	btemp,w,c
 21301  014836  6E38               	movwf	btemp,c
 21302  014838  0EFF               	movlw	-1
 21303  01483A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21304                           
 21305                           ;stkvar	_r @ sp[(-4)+0]
 21306  014840  0EFC               	movlw	-4
 21307  014842  50E3               	movf	plusw1,w,c
 21308  014844  0F01               	addlw	1
 21309  014846  6E38               	movwf	btemp,c
 21310  014848  0EFC               	movlw	-4
 21311  01484A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21312  014850  6A38               	clrf	btemp,c
 21313  014852  0EFD               	movlw	-3
 21314  014854  50E3               	movf	plusw1,w,c
 21315  014856  2038               	addwfc	btemp,w,c
 21316  014858  6E38               	movwf	btemp,c
 21317  01485A  0EFD               	movlw	-3
 21318  01485C  0060  F0E3  FFE3   	movff	btemp,plusw1
 21319                           
 21320                           ;stkvar	_n @ sp[(-4)+-6]
 21321  014862  0EF6               	movlw	-10
 21322  014864  006F FF8C  F038    	movff	plusw1,btemp
 21323  01486A  0E01               	movlw	1
 21324  01486C  5E38               	subwf	btemp,f,c
 21325  01486E  0EF6               	movlw	-10
 21326  014870  0060  F0E3  FFE3   	movff	btemp,plusw1
 21327  014876  0EF7               	movlw	-9
 21328  014878  006F FF8C  F038    	movff	plusw1,btemp
 21329  01487E  0E00               	movlw	0
 21330  014880  5A38               	subwfb	btemp,f,c
 21331  014882  0EF7               	movlw	-9
 21332  014884  0060  F0E3  FFE3   	movff	btemp,plusw1
 21333  01488A                     l12102:
 21334                           
 21335                           ;stkvar	_l @ sp[(-4)+2]
 21336  01488A  50E1               	movf	fsr1l,w,c
 21337  01488C  0FFE               	addlw	-2
 21338  01488E  6ED9               	movwf	fsr2l,c
 21339  014890  50E2               	movf	fsr1h,w,c
 21340  014892  6EDA               	movwf	fsr2h,c
 21341  014894  0EFF               	movlw	255
 21342  014896  22DA               	addwfc	fsr2h,f,c
 21343  014898  006F FF7B FFF6     	movff	postinc2,tblptrl
 21344  01489E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21345  0148A4                     	if	0	;tblptru may be non-zero
 21346  0148A4                     	endif
 21347  0148A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21348  0148A4  0E00               	movlw	low (__mediumconst shr (0+16))
 21349  0148A6  6EF8               	movwf	tblptru,c
 21350  0148A8                     	endif
 21351  0148A8  0008               	tblrd		*
 21352  0148AA  50F5               	movf	tablat,w,c
 21353  0148AC  0900               	iorlw	0
 21354  0148AE  B4D8               	btfsc	status,2,c
 21355  0148B0  D044               	goto	u8000
 21356                           
 21357                           ;stkvar	_r @ sp[(-4)+0]
 21358  0148B2  50E1               	movf	fsr1l,w,c
 21359  0148B4  0FFC               	addlw	-4
 21360  0148B6  6ED9               	movwf	fsr2l,c
 21361  0148B8  50E2               	movf	fsr1h,w,c
 21362  0148BA  6EDA               	movwf	fsr2h,c
 21363  0148BC  0EFF               	movlw	255
 21364  0148BE  22DA               	addwfc	fsr2h,f,c
 21365  0148C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21366  0148C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21367  0148CC                     	if	0	;tblptru may be non-zero
 21368  0148CC                     	endif
 21369  0148CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21370  0148CC  0E00               	movlw	low (__mediumconst shr (0+16))
 21371  0148CE  6EF8               	movwf	tblptru,c
 21372  0148D0                     	endif
 21373  0148D0  0008               	tblrd		*
 21374  0148D2  50F5               	movf	tablat,w,c
 21375  0148D4  0900               	iorlw	0
 21376  0148D6  B4D8               	btfsc	status,2,c
 21377  0148D8  D030               	goto	u8000
 21378                           
 21379                           ;stkvar	_n @ sp[(-4)+-6]
 21380  0148DA  0EF6               	movlw	-10
 21381  0148DC  006F FF8C  F038    	movff	plusw1,btemp
 21382  0148E2  0EF7               	movlw	-9
 21383  0148E4  50E3               	movf	plusw1,w,c
 21384  0148E6  1038               	iorwf	btemp,w,c
 21385  0148E8  B4D8               	btfsc	status,2,c
 21386  0148EA  D027               	goto	u8000
 21387                           
 21388                           ;stkvar	_l @ sp[(-4)+2]
 21389  0148EC  50E1               	movf	fsr1l,w,c
 21390  0148EE  0FFE               	addlw	-2
 21391  0148F0  6ED9               	movwf	fsr2l,c
 21392  0148F2  50E2               	movf	fsr1h,w,c
 21393  0148F4  6EDA               	movwf	fsr2h,c
 21394  0148F6  0EFF               	movlw	255
 21395  0148F8  22DA               	addwfc	fsr2h,f,c
 21396  0148FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21397  014900  006F FF77 FFF7     	movff	postdec2,tblptrh
 21398  014906                     	if	0	;tblptru may be non-zero
 21399  014906                     	endif
 21400  014906                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21401  014906  0E00               	movlw	low (__mediumconst shr (0+16))
 21402  014908  6EF8               	movwf	tblptru,c
 21403  01490A                     	endif
 21404  01490A  0008               	tblrd		*
 21405  01490C  006F FFD4  F043    	movff	tablat,btemp+11
 21406                           
 21407                           ;stkvar	_r @ sp[(-4)+0]
 21408  014912  50E1               	movf	fsr1l,w,c
 21409  014914  0FFC               	addlw	-4
 21410  014916  6ED9               	movwf	fsr2l,c
 21411  014918  50E2               	movf	fsr1h,w,c
 21412  01491A  6EDA               	movwf	fsr2h,c
 21413  01491C  0EFF               	movlw	255
 21414  01491E  22DA               	addwfc	fsr2h,f,c
 21415  014920  006F FF7B FFF6     	movff	postinc2,tblptrl
 21416  014926  006F FF77 FFF7     	movff	postdec2,tblptrh
 21417  01492C                     	if	0	;tblptru may be non-zero
 21418  01492C                     	endif
 21419  01492C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21420  01492C  0E00               	movlw	low (__mediumconst shr (0+16))
 21421  01492E  6EF8               	movwf	tblptru,c
 21422  014930                     	endif
 21423  014930  0008               	tblrd		*
 21424  014932  50F5               	movf	tablat,w,c
 21425  014934  1843               	xorwf	btemp+11,w,c
 21426  014936  B4D8               	btfsc	status,2,c
 21427  014938  D772               	goto	l12100
 21428  01493A                     u8000:
 21429                           
 21430                           ;stkvar	_l @ sp[(-4)+2]
 21431  01493A  50E1               	movf	fsr1l,w,c
 21432  01493C  0FFE               	addlw	-2
 21433  01493E  6ED9               	movwf	fsr2l,c
 21434  014940  50E2               	movf	fsr1h,w,c
 21435  014942  6EDA               	movwf	fsr2h,c
 21436  014944  0EFF               	movlw	255
 21437  014946  22DA               	addwfc	fsr2h,f,c
 21438  014948  006F FF7B FFF6     	movff	postinc2,tblptrl
 21439  01494E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21440  014954                     	if	0	;tblptru may be non-zero
 21441  014954                     	endif
 21442  014954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21443  014954  0E00               	movlw	low (__mediumconst shr (0+16))
 21444  014956  6EF8               	movwf	tblptru,c
 21445  014958                     	endif
 21446  014958  0008               	tblrd		*
 21447  01495A  50F5               	movf	tablat,w,c
 21448  01495C  6E38               	movwf	btemp,c
 21449  01495E  6A39               	clrf	btemp+1,c
 21450                           
 21451                           ;stkvar	_r @ sp[(-4)+0]
 21452  014960  50E1               	movf	fsr1l,w,c
 21453  014962  0FFC               	addlw	-4
 21454  014964  6ED9               	movwf	fsr2l,c
 21455  014966  50E2               	movf	fsr1h,w,c
 21456  014968  6EDA               	movwf	fsr2h,c
 21457  01496A  0EFF               	movlw	255
 21458  01496C  22DA               	addwfc	fsr2h,f,c
 21459  01496E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21460  014974  006F FF77 FFF7     	movff	postdec2,tblptrh
 21461  01497A                     	if	0	;tblptru may be non-zero
 21462  01497A                     	endif
 21463  01497A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21464  01497A  0E00               	movlw	low (__mediumconst shr (0+16))
 21465  01497C  6EF8               	movwf	tblptru,c
 21466  01497E                     	endif
 21467  01497E  0008               	tblrd		*
 21468  014980  50F5               	movf	tablat,w,c
 21469  014982  5E38               	subwf	btemp,f,c
 21470  014984  0E00               	movlw	0
 21471  014986  5A39               	subwfb	btemp+1,f,c
 21472  014988                     l3276:
 21473                           
 21474                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 21475  014988  0EF6               	movlw	246
 21476  01498A  26E1               	addwf	fsr1l,f,c
 21477  01498C  0EFF               	movlw	255
 21478  01498E  22E2               	addwfc	fsr1h,f,c
 21479  014990  0012               	return		;funcret
 21480  014992                     __end_of_strncmp:
 21481                           	opt callstack 0
 21482                           
 21483 ;; *************** function _stoa *****************
 21484 ;; Defined at:
 21485 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 21486 ;; Parameters:    Size  Location     Type
 21487 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21488 ;;		 -> f(6), NULL(0), 
 21489 ;;  s               2  [STACK] PTR unsigned char 
 21490 ;;		 -> ?_printf(2), ?_sprintf(2), STR_36(9), STR_35(12), 
 21491 ;;		 -> T(256), D.lcd(512), D(514), STR_30(6), 
 21492 ;;		 -> STR_7(6), STR_3(6), V(384), 
 21493 ;; Auto vars:     Size  Location     Type
 21494 ;;  nuls            7  [STACK] unsigned char [7]
 21495 ;;  l               2  [STACK] int 
 21496 ;;  p               2  [STACK] int 
 21497 ;;  cp              2  [STACK] PTR unsigned char 
 21498 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_36(9), 
 21499 ;;		 -> STR_35(12), T(256), D.lcd(512), D(514), 
 21500 ;;		 -> STR_30(6), STR_7(6), STR_3(6), V(384), 
 21501 ;;  w               2  [STACK] int 
 21502 ;;  i               2  [STACK] int 
 21503 ;; Return value:  Size  Location     Type
 21504 ;;                  2  [STACK] int 
 21505 ;; Registers used:
 21506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21507 ;; Tracked objects:
 21508 ;;		On entry : 0/0
 21509 ;;		On exit  : 0/0
 21510 ;;		Unchanged: 0/0
 21511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21516 ;;Total ram usage:        0 bytes
 21517 ;; Hardware stack levels used:    1
 21518 ;; Hardware stack levels required when called:    6
 21519 ;; This function calls:
 21520 ;;		_fputc
 21521 ;;		_strlen
 21522 ;; This function is called by:
 21523 ;;		_vfpfcnvrt
 21524 ;; This function uses a reentrant model
 21525 ;;
 21526                           
 21527                           	psect	text100
 21528  013676                     __ptext100:
 21529                           	opt callstack 0
 21530  013676                     _stoa:
 21531                           	opt callstack 0
 21532                           
 21533                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21534  013676  0E11               	movlw	17
 21535  013678  26E1               	addwf	fsr1l,f,c
 21536  01367A  0E00               	movlw	0
 21537  01367C  22E2               	addwfc	fsr1h,f,c
 21538                           
 21539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 21540                           
 21541                           ;incstack = 0
 21542  01367E  EE20  F0B5         	lfsr	2,stoa@F1144
 21543                           
 21544                           ;stkvar	_nuls @ sp[(-17)+0]
 21545  013682  0E07               	movlw	7
 21546  013684  6E38               	movwf	btemp,c
 21547  013686  0EEF               	movlw	-17
 21548  013688                     us768999:
 21549  013688  006F FF7B FFE3     	movff	postinc2,plusw1
 21550  01368E  28E8               	incf	wreg,w,c
 21551  013690  2E38               	decfsz	btemp,f,c
 21552  013692  D7FA               	bra	us768999
 21553                           
 21554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 21555                           ;stkvar	_s @ sp[(-17)+-4]
 21556  013694  0EEB               	movlw	-21
 21557  013696  006F FF8C  F042    	movff	plusw1,btemp+10
 21558  01369C  0EEC               	movlw	-20
 21559  01369E  006F FF8C  F043    	movff	plusw1,btemp+11
 21560                           
 21561                           ;stkvar	_cp @ sp[(-17)+11]
 21562  0136A4  0EFB               	movlw	-5
 21563  0136A6  0060  F10F  FFE3   	movff	btemp+11,plusw1
 21564  0136AC  0EFA               	movlw	-6
 21565  0136AE  0060  F10B  FFE3   	movff	btemp+10,plusw1
 21566                           
 21567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 21568                           ;stkvar	_cp @ sp[(-17)+11]
 21569  0136B4  0EFA               	movlw	-6
 21570  0136B6  006F FF8C  F038    	movff	plusw1,btemp
 21571  0136BC  0EFB               	movlw	-5
 21572  0136BE  50E3               	movf	plusw1,w,c
 21573  0136C0  1038               	iorwf	btemp,w,c
 21574  0136C2  A4D8               	btfss	status,2,c
 21575  0136C4  D00E               	goto	l11976
 21576                           
 21577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 21578                           ;stkvar	_nuls @ sp[(-17)+0]
 21579  0136C6  0EEF               	movlw	239
 21580  0136C8  24E1               	addwf	fsr1l,w,c
 21581  0136CA  6E42               	movwf	btemp+10,c
 21582  0136CC  0EFF               	movlw	255
 21583  0136CE  20E2               	addwfc	fsr1h,w,c
 21584  0136D0  6E43               	movwf	btemp+11,c
 21585                           
 21586                           ;stkvar	_cp @ sp[(-17)+11]
 21587  0136D2  0EFB               	movlw	-5
 21588  0136D4  0060  F10F  FFE3   	movff	btemp+11,plusw1
 21589  0136DA  0EFA               	movlw	-6
 21590  0136DC  0060  F10B  FFE3   	movff	btemp+10,plusw1
 21591  0136E2                     l11976:
 21592                           
 21593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 21594                           ;stkvar	_cp @ sp[(-17)+11]
 21595  0136E2  0EFA               	movlw	-6
 21596  0136E4  006F FF8F FFE6     	movff	plusw1,postinc1
 21597  0136EA  006F FF8F FFE6     	movff	plusw1,postinc1
 21598  0136F0  EC34  F0AF         	call	_strlen	;wreg free
 21599                           
 21600                           ;stkvar	_l @ sp[(-17)+7]
 21601  0136F4  0EF6               	movlw	-10
 21602  0136F6  0060  F0E3  FFE3   	movff	btemp,plusw1
 21603  0136FC  0EF7               	movlw	-9
 21604  0136FE  0060  F0E7  FFE3   	movff	btemp+1,plusw1
 21605                           
 21606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 21607                           ;stkvar	_p @ sp[(-17)+9]
 21608  013704  0EF8               	movlw	-8
 21609  013706  0060  F04B  FFE3   	movff	_prec,plusw1
 21610  01370C  0EF9               	movlw	-7
 21611  01370E  0060  F04F  FFE3   	movff	_prec+1,plusw1
 21612                           
 21613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 21614                           ;stkvar	_p @ sp[(-17)+9]
 21615  013714  0EF9               	movlw	-7
 21616  013716  BEE3               	btfsc	plusw1,7,c
 21617  013718  D023               	goto	l2452
 21618                           
 21619                           ;stkvar	_l @ sp[(-17)+7]
 21620                           ;stkvar	_p @ sp[(-17)+9]
 21621  01371A  50E1               	movf	fsr1l,w,c
 21622  01371C  0FF8               	addlw	-8
 21623  01371E  6ED9               	movwf	fsr2l,c
 21624  013720  50E2               	movf	fsr1h,w,c
 21625  013722  6EDA               	movwf	fsr2h,c
 21626  013724  0EFF               	movlw	255
 21627  013726  22DA               	addwfc	fsr2h,f,c
 21628  013728  0EF6               	movlw	-10
 21629  01372A  50E3               	movf	plusw1,w,c
 21630  01372C  5CDE               	subwf	postinc2,w,c
 21631  01372E  50DE               	movf	postinc2,w,c
 21632  013730  0A80               	xorlw	128
 21633  013732  6E38               	movwf	btemp,c
 21634  013734  0EF7               	movlw	-9
 21635  013736  50E3               	movf	plusw1,w,c
 21636  013738  0A80               	xorlw	128
 21637  01373A  5838               	subwfb	btemp,w,c
 21638  01373C  B0D8               	btfsc	status,0,c
 21639  01373E  D010               	goto	l2452
 21640                           
 21641                           ;stkvar	_p @ sp[(-17)+9]
 21642                           ;stkvar	_l @ sp[(-17)+7]
 21643  013740  0EF8               	movlw	-8
 21644  013742  006F FF8C  F038    	movff	plusw1,btemp
 21645  013748  0EF6               	movlw	-10
 21646  01374A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21647  013750  0EF9               	movlw	-7
 21648  013752  006F FF8C  F038    	movff	plusw1,btemp
 21649  013758  0EF7               	movlw	-9
 21650  01375A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21651  013760                     l2452:
 21652                           
 21653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 21654                           ;stkvar	_l @ sp[(-17)+7]
 21655                           ;stkvar	_p @ sp[(-17)+9]
 21656  013760  0EF6               	movlw	-10
 21657  013762  006F FF8C  F038    	movff	plusw1,btemp
 21658  013768  0EF8               	movlw	-8
 21659  01376A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21660  013770  0EF7               	movlw	-9
 21661  013772  006F FF8C  F038    	movff	plusw1,btemp
 21662  013778  0EF9               	movlw	-7
 21663  01377A  0060  F0E3  FFE3   	movff	btemp,plusw1
 21664                           
 21665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 21666                           ;stkvar	_w @ sp[(-17)+13]
 21667  013780  0EFC               	movlw	-4
 21668  013782  0060  F043  FFE3   	movff	_width,plusw1
 21669  013788  0EFD               	movlw	-3
 21670  01378A  0060  F047  FFE3   	movff	_width+1,plusw1
 21671                           
 21672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 21673  013790  A014               	btfss	_flags,0,c
 21674  013792  D01F               	goto	l11996
 21675  013794  D031               	goto	u7730
 21676  013796                     l11992:
 21677                           
 21678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 21679                           ;stkvar	_fp @ sp[(-17)+-2]
 21680  013796  0EED               	movlw	-19
 21681  013798  006F FF8F FFE6     	movff	plusw1,postinc1
 21682  01379E  006F FF8F FFE6     	movff	plusw1,postinc1
 21683  0137A4  0E20               	movlw	32
 21684  0137A6  6EE6               	movwf	postinc1,c
 21685  0137A8  0E00               	movlw	0
 21686  0137AA  6EE6               	movwf	postinc1,c
 21687  0137AC  EC55  F0A8         	call	_fputc	;wreg free
 21688                           
 21689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 21690                           ;stkvar	_l @ sp[(-17)+7]
 21691  0137B0  0EF6               	movlw	-10
 21692  0137B2  50E3               	movf	plusw1,w,c
 21693  0137B4  0F01               	addlw	1
 21694  0137B6  6E38               	movwf	btemp,c
 21695  0137B8  0EF6               	movlw	-10
 21696  0137BA  0060  F0E3  FFE3   	movff	btemp,plusw1
 21697  0137C0  6A38               	clrf	btemp,c
 21698  0137C2  0EF7               	movlw	-9
 21699  0137C4  50E3               	movf	plusw1,w,c
 21700  0137C6  2038               	addwfc	btemp,w,c
 21701  0137C8  6E38               	movwf	btemp,c
 21702  0137CA  0EF7               	movlw	-9
 21703  0137CC  0060  F0E3  FFE3   	movff	btemp,plusw1
 21704  0137D2                     l11996:
 21705                           
 21706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 21707                           ;stkvar	_w @ sp[(-17)+13]
 21708                           ;stkvar	_l @ sp[(-17)+7]
 21709  0137D2  50E1               	movf	fsr1l,w,c
 21710  0137D4  0FF6               	addlw	-10
 21711  0137D6  6ED9               	movwf	fsr2l,c
 21712  0137D8  50E2               	movf	fsr1h,w,c
 21713  0137DA  6EDA               	movwf	fsr2h,c
 21714  0137DC  0EFF               	movlw	255
 21715  0137DE  22DA               	addwfc	fsr2h,f,c
 21716  0137E0  0EFC               	movlw	-4
 21717  0137E2  50E3               	movf	plusw1,w,c
 21718  0137E4  5CDE               	subwf	postinc2,w,c
 21719  0137E6  50DE               	movf	postinc2,w,c
 21720  0137E8  0A80               	xorlw	128
 21721  0137EA  6E38               	movwf	btemp,c
 21722  0137EC  0EFD               	movlw	-3
 21723  0137EE  50E3               	movf	plusw1,w,c
 21724  0137F0  0A80               	xorlw	128
 21725  0137F2  5838               	subwfb	btemp,w,c
 21726  0137F4  A0D8               	btfss	status,0,c
 21727  0137F6  D7CF               	goto	l11992
 21728  0137F8                     u7730:
 21729                           
 21730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 21731                           ;stkvar	_i @ sp[(-17)+15]
 21732  0137F8  0EFE               	movlw	-2
 21733  0137FA  6AE3               	clrf	plusw1,c
 21734  0137FC  0EFF               	movlw	-1
 21735  0137FE  6AE3               	clrf	plusw1,c
 21736                           
 21737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 21738  013800  D045               	goto	l12006
 21739  013802                     l12000:
 21740                           
 21741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 21742                           ;stkvar	_fp @ sp[(-17)+-2]
 21743  013802  0EED               	movlw	-19
 21744  013804  006F FF8F FFE6     	movff	plusw1,postinc1
 21745  01380A  006F FF8F FFE6     	movff	plusw1,postinc1
 21746                           
 21747                           ;stkvar	_cp @ sp[(-19)+11]
 21748  013810  0EF8               	movlw	-8
 21749  013812  006F FF8F FFF6     	movff	plusw1,tblptrl
 21750  013818  0EF9               	movlw	-7
 21751  01381A  006F FF8F FFF7     	movff	plusw1,tblptrh
 21752  013820  0E00               	movlw	low (__mediumconst shr (0+16))
 21753  013822  6EF8               	movwf	tblptru,c
 21754  013824  0E1F               	movlw	(high __ramtop+-1)
 21755  013826  64F7               	cpfsgt	tblptrh,c
 21756  013828  D003               	bra	u7747
 21757  01382A  0008               	tblrd		*
 21758  01382C  50F5               	movf	tablat,w,c
 21759  01382E  D007               	bra	u7740
 21760  013830                     u7747:
 21761  013830  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21762  013836  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21763  01383C  50EF               	movf	indf0,w,c
 21764  01383E                     u7740:
 21765  01383E  6EE6               	movwf	postinc1,c
 21766  013840  0E00               	movlw	0
 21767  013842  6EE6               	movwf	postinc1,c
 21768  013844  EC55  F0A8         	call	_fputc	;wreg free
 21769                           
 21770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 21771                           ;stkvar	_cp @ sp[(-17)+11]
 21772  013848  0EFA               	movlw	-6
 21773  01384A  50E3               	movf	plusw1,w,c
 21774  01384C  0F01               	addlw	1
 21775  01384E  6E38               	movwf	btemp,c
 21776  013850  0EFA               	movlw	-6
 21777  013852  0060  F0E3  FFE3   	movff	btemp,plusw1
 21778  013858  6A38               	clrf	btemp,c
 21779  01385A  0EFB               	movlw	-5
 21780  01385C  50E3               	movf	plusw1,w,c
 21781  01385E  2038               	addwfc	btemp,w,c
 21782  013860  6E38               	movwf	btemp,c
 21783  013862  0EFB               	movlw	-5
 21784  013864  0060  F0E3  FFE3   	movff	btemp,plusw1
 21785                           
 21786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 21787                           ;stkvar	_i @ sp[(-17)+15]
 21788  01386A  0EFE               	movlw	-2
 21789  01386C  50E3               	movf	plusw1,w,c
 21790  01386E  0F01               	addlw	1
 21791  013870  6E38               	movwf	btemp,c
 21792  013872  0EFE               	movlw	-2
 21793  013874  0060  F0E3  FFE3   	movff	btemp,plusw1
 21794  01387A  6A38               	clrf	btemp,c
 21795  01387C  0EFF               	movlw	-1
 21796  01387E  50E3               	movf	plusw1,w,c
 21797  013880  2038               	addwfc	btemp,w,c
 21798  013882  6E38               	movwf	btemp,c
 21799  013884  0EFF               	movlw	-1
 21800  013886  0060  F0E3  FFE3   	movff	btemp,plusw1
 21801  01388C                     l12006:
 21802                           
 21803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 21804                           ;stkvar	_p @ sp[(-17)+9]
 21805                           ;stkvar	_i @ sp[(-17)+15]
 21806  01388C  50E1               	movf	fsr1l,w,c
 21807  01388E  0FFE               	addlw	-2
 21808  013890  6ED9               	movwf	fsr2l,c
 21809  013892  50E2               	movf	fsr1h,w,c
 21810  013894  6EDA               	movwf	fsr2h,c
 21811  013896  0EFF               	movlw	255
 21812  013898  22DA               	addwfc	fsr2h,f,c
 21813  01389A  0EF8               	movlw	-8
 21814  01389C  50E3               	movf	plusw1,w,c
 21815  01389E  5CDE               	subwf	postinc2,w,c
 21816  0138A0  50DE               	movf	postinc2,w,c
 21817  0138A2  0A80               	xorlw	128
 21818  0138A4  6E38               	movwf	btemp,c
 21819  0138A6  0EF9               	movlw	-7
 21820  0138A8  50E3               	movf	plusw1,w,c
 21821  0138AA  0A80               	xorlw	128
 21822  0138AC  5838               	subwfb	btemp,w,c
 21823  0138AE  A0D8               	btfss	status,0,c
 21824  0138B0  D7A8               	goto	l12000
 21825                           
 21826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 21827  0138B2  B014               	btfsc	_flags,0,c
 21828  0138B4  D01F               	goto	l12014
 21829  0138B6  D031               	goto	u7770
 21830  0138B8                     l12010:
 21831                           
 21832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 21833                           ;stkvar	_fp @ sp[(-17)+-2]
 21834  0138B8  0EED               	movlw	-19
 21835  0138BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21836  0138C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21837  0138C6  0E20               	movlw	32
 21838  0138C8  6EE6               	movwf	postinc1,c
 21839  0138CA  0E00               	movlw	0
 21840  0138CC  6EE6               	movwf	postinc1,c
 21841  0138CE  EC55  F0A8         	call	_fputc	;wreg free
 21842                           
 21843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 21844                           ;stkvar	_l @ sp[(-17)+7]
 21845  0138D2  0EF6               	movlw	-10
 21846  0138D4  50E3               	movf	plusw1,w,c
 21847  0138D6  0F01               	addlw	1
 21848  0138D8  6E38               	movwf	btemp,c
 21849  0138DA  0EF6               	movlw	-10
 21850  0138DC  0060  F0E3  FFE3   	movff	btemp,plusw1
 21851  0138E2  6A38               	clrf	btemp,c
 21852  0138E4  0EF7               	movlw	-9
 21853  0138E6  50E3               	movf	plusw1,w,c
 21854  0138E8  2038               	addwfc	btemp,w,c
 21855  0138EA  6E38               	movwf	btemp,c
 21856  0138EC  0EF7               	movlw	-9
 21857  0138EE  0060  F0E3  FFE3   	movff	btemp,plusw1
 21858  0138F4                     l12014:
 21859                           
 21860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 21861                           ;stkvar	_w @ sp[(-17)+13]
 21862                           ;stkvar	_l @ sp[(-17)+7]
 21863  0138F4  50E1               	movf	fsr1l,w,c
 21864  0138F6  0FF6               	addlw	-10
 21865  0138F8  6ED9               	movwf	fsr2l,c
 21866  0138FA  50E2               	movf	fsr1h,w,c
 21867  0138FC  6EDA               	movwf	fsr2h,c
 21868  0138FE  0EFF               	movlw	255
 21869  013900  22DA               	addwfc	fsr2h,f,c
 21870  013902  0EFC               	movlw	-4
 21871  013904  50E3               	movf	plusw1,w,c
 21872  013906  5CDE               	subwf	postinc2,w,c
 21873  013908  50DE               	movf	postinc2,w,c
 21874  01390A  0A80               	xorlw	128
 21875  01390C  6E38               	movwf	btemp,c
 21876  01390E  0EFD               	movlw	-3
 21877  013910  50E3               	movf	plusw1,w,c
 21878  013912  0A80               	xorlw	128
 21879  013914  5838               	subwfb	btemp,w,c
 21880  013916  A0D8               	btfss	status,0,c
 21881  013918  D7CF               	goto	l12010
 21882  01391A                     u7770:
 21883                           
 21884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 21885                           ;stkvar	_l @ sp[(-17)+7]
 21886  01391A  0EF6               	movlw	-10
 21887  01391C  006F FF8C  F038    	movff	plusw1,btemp
 21888  013922  0EF7               	movlw	-9
 21889  013924  006F FF8C  F039    	movff	plusw1,btemp+1
 21890                           
 21891                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21892  01392A  0EEB               	movlw	235
 21893  01392C  26E1               	addwf	fsr1l,f,c
 21894  01392E  0EFF               	movlw	255
 21895  013930  22E2               	addwfc	fsr1h,f,c
 21896  013932  0012               	return		;funcret
 21897  013934                     __end_of_stoa:
 21898                           	opt callstack 0
 21899                           
 21900 ;; *************** function _dtoa *****************
 21901 ;; Defined at:
 21902 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 21903 ;; Parameters:    Size  Location     Type
 21904 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21905 ;;		 -> f(6), NULL(0), 
 21906 ;;  d               8  [STACK] long long 
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;  n               8  [STACK] long long 
 21909 ;;  i               2  [STACK] int 
 21910 ;;  s               2  [STACK] int 
 21911 ;;  w               2  [STACK] int 
 21912 ;;  p               2  [STACK] int 
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  2  [STACK] int 
 21915 ;; Registers used:
 21916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21926 ;;Total ram usage:        0 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; Hardware stack levels required when called:    8
 21929 ;; This function calls:
 21930 ;;		___aodiv
 21931 ;;		___aomod
 21932 ;;		_abs
 21933 ;;		_pad
 21934 ;; This function is called by:
 21935 ;;		_vfpfcnvrt
 21936 ;; This function uses a reentrant model
 21937 ;;
 21938                           
 21939                           	psect	text101
 21940  011FE0                     __ptext101:
 21941                           	opt callstack 0
 21942  011FE0                     _dtoa:
 21943                           	opt callstack 0
 21944                           
 21945                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21946  011FE0  0E12               	movlw	18
 21947  011FE2  26E1               	addwf	fsr1l,f,c
 21948  011FE4  0E00               	movlw	0
 21949  011FE6  22E2               	addwfc	fsr1h,f,c
 21950                           
 21951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21952                           ;stkvar	_d @ sp[(-18)+-10]
 21953                           
 21954                           ;incstack = 0
 21955  011FE8  0EE4               	movlw	228
 21956  011FEA  24E1               	addwf	fsr1l,w,c
 21957  011FEC  6ED9               	movwf	fsr2l,c
 21958  011FEE  0EFF               	movlw	255
 21959  011FF0  20E2               	addwfc	fsr1h,w,c
 21960  011FF2  6EDA               	movwf	fsr2h,c
 21961                           
 21962                           ;stkvar	_n @ sp[(-18)+2]
 21963  011FF4  0E08               	movlw	8
 21964  011FF6  6E38               	movwf	btemp,c
 21965  011FF8  0EF0               	movlw	-16
 21966  011FFA                     us1022999:
 21967  011FFA  006F FF7B FFE3     	movff	postinc2,plusw1
 21968  012000  28E8               	incf	wreg,w,c
 21969  012002  2E38               	decfsz	btemp,f,c
 21970  012004  D7FA               	bra	us1022999
 21971                           
 21972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21973                           ;stkvar	_n @ sp[(-18)+2]
 21974  012006  0EF7               	movlw	-9
 21975  012008  AEE3               	btfss	plusw1,7,c
 21976  01200A  D002               	goto	u10230
 21977  01200C  0E01               	movlw	1
 21978  01200E  D001               	goto	u10240
 21979  012010                     u10230:
 21980  012010  0E00               	movlw	0
 21981  012012                     u10240:
 21982  012012  6E42               	movwf	btemp+10,c
 21983  012014  6A43               	clrf	btemp+11,c
 21984                           
 21985                           ;stkvar	_s @ sp[(-18)+12]
 21986  012016  0EFA               	movlw	-6
 21987  012018  0060  F10B  FFE3   	movff	btemp+10,plusw1
 21988  01201E  0EFB               	movlw	-5
 21989  012020  0060  F10F  FFE3   	movff	btemp+11,plusw1
 21990                           
 21991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21992                           ;stkvar	_s @ sp[(-18)+12]
 21993  012026  0EFA               	movlw	-6
 21994  012028  006F FF8C  F038    	movff	plusw1,btemp
 21995  01202E  0EFB               	movlw	-5
 21996  012030  50E3               	movf	plusw1,w,c
 21997  012032  1038               	iorwf	btemp,w,c
 21998  012034  B4D8               	btfsc	status,2,c
 21999  012036  D025               	goto	u10260
 22000                           
 22001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22002                           ;stkvar	_n @ sp[(-18)+2]
 22003                           ;stkvar	_n @ sp[(-18)+2]
 22004  012038  0EF0               	movlw	-16
 22005  01203A  6CE3               	negf	plusw1,c
 22006  01203C  0EF1               	movlw	-15
 22007  01203E  1EE3               	comf	plusw1,f,c
 22008  012040  0EF2               	movlw	-14
 22009  012042  1EE3               	comf	plusw1,f,c
 22010  012044  0EF3               	movlw	-13
 22011  012046  1EE3               	comf	plusw1,f,c
 22012  012048  0EF4               	movlw	-12
 22013  01204A  1EE3               	comf	plusw1,f,c
 22014  01204C  0EF5               	movlw	-11
 22015  01204E  1EE3               	comf	plusw1,f,c
 22016  012050  0EF6               	movlw	-10
 22017  012052  1EE3               	comf	plusw1,f,c
 22018  012054  0EF7               	movlw	-9
 22019  012056  1EE3               	comf	plusw1,f,c
 22020  012058  E314               	bnc	u10260
 22021  01205A  0EF1               	movlw	-15
 22022  01205C  2AE3               	incf	plusw1,f,c
 22023  01205E  E311               	bnc	u10260
 22024  012060  0EF2               	movlw	-14
 22025  012062  2AE3               	incf	plusw1,f,c
 22026  012064  E30E               	bnc	u10260
 22027  012066  0EF3               	movlw	-13
 22028  012068  2AE3               	incf	plusw1,f,c
 22029  01206A  E30B               	bnc	u10260
 22030  01206C  0EF4               	movlw	-12
 22031  01206E  2AE3               	incf	plusw1,f,c
 22032  012070  E308               	bnc	u10260
 22033  012072  0EF5               	movlw	-11
 22034  012074  2AE3               	incf	plusw1,f,c
 22035  012076  E305               	bnc	u10260
 22036  012078  0EF6               	movlw	-10
 22037  01207A  2AE3               	incf	plusw1,f,c
 22038  01207C  E302               	bnc	u10260
 22039  01207E  0EF7               	movlw	-9
 22040  012080  2AE3               	incf	plusw1,f,c
 22041  012082                     u10260:
 22042                           
 22043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 22044  012082  AE13               	btfss	_prec+1,7,c
 22045                           
 22046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 22047  012084  9214               	bcf	_flags,1,c
 22048                           
 22049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22050  012086  BE13               	btfsc	_prec+1,7,c
 22051  012088  D005               	goto	u10280
 22052  01208A  5013               	movf	_prec+1,w,c
 22053  01208C  E110               	bnz	l15452
 22054  01208E  0412               	decf	_prec,w,c
 22055  012090  B0D8               	btfsc	status,0,c
 22056  012092  D00D               	goto	l15452
 22057  012094                     u10280:
 22058  012094  0E01               	movlw	1
 22059  012096  6E42               	movwf	btemp+10,c
 22060  012098  0E00               	movlw	0
 22061  01209A  6E43               	movwf	btemp+11,c
 22062                           
 22063                           ;stkvar	_p @ sp[(-18)+16]
 22064  01209C  0EFE               	movlw	-2
 22065  01209E  0060  F10B  FFE3   	movff	btemp+10,plusw1
 22066  0120A4  0EFF               	movlw	-1
 22067  0120A6  0060  F10F  FFE3   	movff	btemp+11,plusw1
 22068  0120AC  D008               	goto	l2425
 22069  0120AE                     l15452:
 22070                           
 22071                           ;stkvar	_p @ sp[(-18)+16]
 22072  0120AE  0EFE               	movlw	-2
 22073  0120B0  0060  F04B  FFE3   	movff	_prec,plusw1
 22074  0120B6  0EFF               	movlw	-1
 22075  0120B8  0060  F04F  FFE3   	movff	_prec+1,plusw1
 22076  0120BE                     l2425:
 22077                           
 22078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22079                           ;stkvar	_w @ sp[(-18)+14]
 22080  0120BE  0EFC               	movlw	-4
 22081  0120C0  0060  F043  FFE3   	movff	_width,plusw1
 22082  0120C6  0EFD               	movlw	-3
 22083  0120C8  0060  F047  FFE3   	movff	_width+1,plusw1
 22084                           
 22085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22086                           ;stkvar	_s @ sp[(-18)+12]
 22087  0120CE  0EFA               	movlw	-6
 22088  0120D0  006F FF8C  F038    	movff	plusw1,btemp
 22089  0120D6  0EFB               	movlw	-5
 22090  0120D8  50E3               	movf	plusw1,w,c
 22091  0120DA  1038               	iorwf	btemp,w,c
 22092  0120DC  A4D8               	btfss	status,2,c
 22093  0120DE  D002               	goto	u10300
 22094  0120E0  A414               	btfss	_flags,2,c
 22095  0120E2  D00A               	goto	l15460
 22096  0120E4                     u10300:
 22097                           
 22098                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 22099                           ;stkvar	_w @ sp[(-18)+14]
 22100  0120E4  50E1               	movf	fsr1l,w,c
 22101  0120E6  0FFC               	addlw	-4
 22102  0120E8  6ED9               	movwf	fsr2l,c
 22103  0120EA  50E2               	movf	fsr1h,w,c
 22104  0120EC  6EDA               	movwf	fsr2h,c
 22105  0120EE  0EFF               	movlw	255
 22106  0120F0  22DA               	addwfc	fsr2h,f,c
 22107  0120F2  06DE               	decf	postinc2,f,c
 22108  0120F4  0E00               	movlw	0
 22109  0120F6  5ADD               	subwfb	postdec2,f,c
 22110  0120F8                     l15460:
 22111                           
 22112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22113  0120F8  0E1F               	movlw	31
 22114  0120FA  6E42               	movwf	btemp+10,c
 22115  0120FC  0E00               	movlw	0
 22116  0120FE  6E43               	movwf	btemp+11,c
 22117                           
 22118                           ;stkvar	_i @ sp[(-18)+10]
 22119  012100  0EF8               	movlw	-8
 22120  012102  0060  F10B  FFE3   	movff	btemp+10,plusw1
 22121  012108  0EF9               	movlw	-7
 22122  01210A  0060  F10F  FFE3   	movff	btemp+11,plusw1
 22123                           
 22124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22125  012110  0101               	movlb	1	; () banked
 22126  012112  6BEF               	clrf	(_dbuf+31)& (0+255),b
 22127                           
 22128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22129  012114  D109               	goto	l15474
 22130  012116                     l15464:
 22131                           
 22132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 22133                           ;stkvar	_i @ sp[(-18)+10]
 22134  012116  50E1               	movf	fsr1l,w,c
 22135  012118  0FF8               	addlw	-8
 22136  01211A  6ED9               	movwf	fsr2l,c
 22137  01211C  50E2               	movf	fsr1h,w,c
 22138  01211E  6EDA               	movwf	fsr2h,c
 22139  012120  0EFF               	movlw	255
 22140  012122  22DA               	addwfc	fsr2h,f,c
 22141  012124  06DE               	decf	postinc2,f,c
 22142  012126  0E00               	movlw	0
 22143  012128  5ADD               	subwfb	postdec2,f,c
 22144                           
 22145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22146  01212A  0E0A               	movlw	10
 22147  01212C  6EE6               	movwf	postinc1,c
 22148  01212E  0E00               	movlw	0
 22149  012130  6EE6               	movwf	postinc1,c
 22150  012132  0E00               	movlw	0
 22151  012134  6EE6               	movwf	postinc1,c
 22152  012136  0E00               	movlw	0
 22153  012138  6EE6               	movwf	postinc1,c
 22154  01213A  0E00               	movlw	0
 22155  01213C  6EE6               	movwf	postinc1,c
 22156  01213E  0E00               	movlw	0
 22157  012140  6EE6               	movwf	postinc1,c
 22158  012142  0E00               	movlw	0
 22159  012144  6EE6               	movwf	postinc1,c
 22160  012146  0E00               	movlw	0
 22161  012148  6EE6               	movwf	postinc1,c
 22162                           
 22163                           ;stkvar	_n @ sp[(-26)+2]
 22164  01214A  50E1               	movf	fsr1l,w,c
 22165  01214C  0FE8               	addlw	-24
 22166  01214E  6ED9               	movwf	fsr2l,c
 22167  012150  50E2               	movf	fsr1h,w,c
 22168  012152  6EDA               	movwf	fsr2h,c
 22169  012154  0EFF               	movlw	255
 22170  012156  22DA               	addwfc	fsr2h,f,c
 22171  012158  006F FF7B FFE6     	movff	postinc2,postinc1
 22172  01215E  006F FF7B FFE6     	movff	postinc2,postinc1
 22173  012164  006F FF7B FFE6     	movff	postinc2,postinc1
 22174  01216A  006F FF7B FFE6     	movff	postinc2,postinc1
 22175  012170  006F FF7B FFE6     	movff	postinc2,postinc1
 22176  012176  006F FF7B FFE6     	movff	postinc2,postinc1
 22177  01217C  006F FF7B FFE6     	movff	postinc2,postinc1
 22178  012182  006F FF7B FFE6     	movff	postinc2,postinc1
 22179  012188  EC8C  F0A1         	call	___aomod	;wreg free
 22180  01218C  52E5               	movf	postdec1,f,c
 22181  01218E  006F FF9C  F04F    	movff	indf1,btemp+23
 22182  012194  52E5               	movf	postdec1,f,c
 22183  012196  006F FF9C  F04E    	movff	indf1,btemp+22
 22184  01219C  52E5               	movf	postdec1,f,c
 22185  01219E  006F FF9C  F04D    	movff	indf1,btemp+21
 22186  0121A4  52E5               	movf	postdec1,f,c
 22187  0121A6  006F FF9C  F04C    	movff	indf1,btemp+20
 22188  0121AC  52E5               	movf	postdec1,f,c
 22189  0121AE  006F FF9C  F04B    	movff	indf1,btemp+19
 22190  0121B4  52E5               	movf	postdec1,f,c
 22191  0121B6  006F FF9C  F04A    	movff	indf1,btemp+18
 22192  0121BC  52E5               	movf	postdec1,f,c
 22193  0121BE  006F FF9C  F049    	movff	indf1,btemp+17
 22194  0121C4  52E5               	movf	postdec1,f,c
 22195  0121C6  006F FF9C  F048    	movff	indf1,btemp+16
 22196  0121CC  0EF8               	movlw	248
 22197  0121CE  26E1               	addwf	fsr1l,f,c
 22198  0121D0  0EFF               	movlw	255
 22199  0121D2  22E2               	addwfc	fsr1h,f,c
 22200  0121D4  0060  F120  F042   	movff	btemp+16,btemp+10
 22201  0121DA  0060  F124  F043   	movff	btemp+17,btemp+11
 22202  0121E0  0060  F10B  FFE6   	movff	btemp+10,postinc1
 22203  0121E6  0060  F10F  FFE6   	movff	btemp+11,postinc1
 22204  0121EC  ECE4  F0B3         	call	_abs	;wreg free
 22205  0121F0  0E30               	movlw	48
 22206  0121F2  2638               	addwf	btemp,f,c
 22207                           
 22208                           ;stkvar	_i @ sp[(-18)+10]
 22209  0121F4  0EF8               	movlw	-8
 22210  0121F6  006F FF8C  F042    	movff	plusw1,btemp+10
 22211  0121FC  0EF9               	movlw	-7
 22212  0121FE  006F FF8C  F043    	movff	plusw1,btemp+11
 22213  012204  0ED0               	movlw	low _dbuf
 22214  012206  2442               	addwf	btemp+10,w,c
 22215  012208  6ED9               	movwf	fsr2l,c
 22216  01220A  0E01               	movlw	high _dbuf
 22217  01220C  2043               	addwfc	btemp+11,w,c
 22218  01220E  6EDA               	movwf	fsr2h,c
 22219  012210  0060  F0E3  FFDF   	movff	btemp,indf2
 22220                           
 22221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 22222                           ;stkvar	_p @ sp[(-18)+16]
 22223  012216  50E1               	movf	fsr1l,w,c
 22224  012218  0FFE               	addlw	-2
 22225  01221A  6ED9               	movwf	fsr2l,c
 22226  01221C  50E2               	movf	fsr1h,w,c
 22227  01221E  6EDA               	movwf	fsr2h,c
 22228  012220  0EFF               	movlw	255
 22229  012222  22DA               	addwfc	fsr2h,f,c
 22230  012224  06DE               	decf	postinc2,f,c
 22231  012226  0E00               	movlw	0
 22232  012228  5ADD               	subwfb	postdec2,f,c
 22233                           
 22234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 22235                           ;stkvar	_w @ sp[(-18)+14]
 22236  01222A  50E1               	movf	fsr1l,w,c
 22237  01222C  0FFC               	addlw	-4
 22238  01222E  6ED9               	movwf	fsr2l,c
 22239  012230  50E2               	movf	fsr1h,w,c
 22240  012232  6EDA               	movwf	fsr2h,c
 22241  012234  0EFF               	movlw	255
 22242  012236  22DA               	addwfc	fsr2h,f,c
 22243  012238  06DE               	decf	postinc2,f,c
 22244  01223A  0E00               	movlw	0
 22245  01223C  5ADD               	subwfb	postdec2,f,c
 22246                           
 22247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22248  01223E  0E0A               	movlw	10
 22249  012240  6EE6               	movwf	postinc1,c
 22250  012242  0E00               	movlw	0
 22251  012244  6EE6               	movwf	postinc1,c
 22252  012246  0E00               	movlw	0
 22253  012248  6EE6               	movwf	postinc1,c
 22254  01224A  0E00               	movlw	0
 22255  01224C  6EE6               	movwf	postinc1,c
 22256  01224E  0E00               	movlw	0
 22257  012250  6EE6               	movwf	postinc1,c
 22258  012252  0E00               	movlw	0
 22259  012254  6EE6               	movwf	postinc1,c
 22260  012256  0E00               	movlw	0
 22261  012258  6EE6               	movwf	postinc1,c
 22262  01225A  0E00               	movlw	0
 22263  01225C  6EE6               	movwf	postinc1,c
 22264                           
 22265                           ;stkvar	_n @ sp[(-26)+2]
 22266  01225E  50E1               	movf	fsr1l,w,c
 22267  012260  0FE8               	addlw	-24
 22268  012262  6ED9               	movwf	fsr2l,c
 22269  012264  50E2               	movf	fsr1h,w,c
 22270  012266  6EDA               	movwf	fsr2h,c
 22271  012268  0EFF               	movlw	255
 22272  01226A  22DA               	addwfc	fsr2h,f,c
 22273  01226C  006F FF7B FFE6     	movff	postinc2,postinc1
 22274  012272  006F FF7B FFE6     	movff	postinc2,postinc1
 22275  012278  006F FF7B FFE6     	movff	postinc2,postinc1
 22276  01227E  006F FF7B FFE6     	movff	postinc2,postinc1
 22277  012284  006F FF7B FFE6     	movff	postinc2,postinc1
 22278  01228A  006F FF7B FFE6     	movff	postinc2,postinc1
 22279  012290  006F FF7B FFE6     	movff	postinc2,postinc1
 22280  012296  006F FF7B FFE6     	movff	postinc2,postinc1
 22281  01229C  EC1F  F09F         	call	___aodiv	;wreg free
 22282  0122A0  52E5               	movf	postdec1,f,c
 22283  0122A2  006F FF9C  F04F    	movff	indf1,btemp+23
 22284  0122A8  52E5               	movf	postdec1,f,c
 22285  0122AA  006F FF9C  F04E    	movff	indf1,btemp+22
 22286  0122B0  52E5               	movf	postdec1,f,c
 22287  0122B2  006F FF9C  F04D    	movff	indf1,btemp+21
 22288  0122B8  52E5               	movf	postdec1,f,c
 22289  0122BA  006F FF9C  F04C    	movff	indf1,btemp+20
 22290  0122C0  52E5               	movf	postdec1,f,c
 22291  0122C2  006F FF9C  F04B    	movff	indf1,btemp+19
 22292  0122C8  52E5               	movf	postdec1,f,c
 22293  0122CA  006F FF9C  F04A    	movff	indf1,btemp+18
 22294  0122D0  52E5               	movf	postdec1,f,c
 22295  0122D2  006F FF9C  F049    	movff	indf1,btemp+17
 22296  0122D8  52E5               	movf	postdec1,f,c
 22297  0122DA  006F FF9C  F048    	movff	indf1,btemp+16
 22298  0122E0  0EF8               	movlw	248
 22299  0122E2  26E1               	addwf	fsr1l,f,c
 22300  0122E4  0EFF               	movlw	255
 22301  0122E6  22E2               	addwfc	fsr1h,f,c
 22302                           
 22303                           ;stkvar	_n @ sp[(-18)+2]
 22304  0122E8  0EF0               	movlw	-16
 22305  0122EA  0060  F123  FFE3   	movff	btemp+16,plusw1
 22306  0122F0  0EF1               	movlw	-15
 22307  0122F2  0060  F127  FFE3   	movff	btemp+17,plusw1
 22308  0122F8  0EF2               	movlw	-14
 22309  0122FA  0060  F12B  FFE3   	movff	btemp+18,plusw1
 22310  012300  0EF3               	movlw	-13
 22311  012302  0060  F12F  FFE3   	movff	btemp+19,plusw1
 22312  012308  0EF4               	movlw	-12
 22313  01230A  0060  F133  FFE3   	movff	btemp+20,plusw1
 22314  012310  0EF5               	movlw	-11
 22315  012312  0060  F137  FFE3   	movff	btemp+21,plusw1
 22316  012318  0EF6               	movlw	-10
 22317  01231A  0060  F13B  FFE3   	movff	btemp+22,plusw1
 22318  012320  0EF7               	movlw	-9
 22319  012322  0060  F13F  FFE3   	movff	btemp+23,plusw1
 22320  012328                     l15474:
 22321                           
 22322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22323                           ;stkvar	_i @ sp[(-18)+10]
 22324  012328  0EF9               	movlw	-7
 22325  01232A  BEE3               	btfsc	plusw1,7,c
 22326  01232C  D036               	goto	u10350
 22327  01232E  0EF9               	movlw	-7
 22328  012330  50E3               	movf	plusw1,w,c
 22329  012332  E104               	bnz	u10310
 22330  012334  0EF8               	movlw	-8
 22331  012336  04E3               	decf	plusw1,w,c
 22332  012338  A0D8               	btfss	status,0,c
 22333  01233A  D02F               	goto	u10350
 22334  01233C                     u10310:
 22335                           
 22336                           ;stkvar	_n @ sp[(-18)+2]
 22337  01233C  0EF0               	movlw	-16
 22338  01233E  50E3               	movf	plusw1,w,c
 22339  012340  E115               	bnz	u10321
 22340  012342  0EF1               	movlw	-15
 22341  012344  50E3               	movf	plusw1,w,c
 22342  012346  E112               	bnz	u10321
 22343  012348  0EF2               	movlw	-14
 22344  01234A  50E3               	movf	plusw1,w,c
 22345  01234C  E10F               	bnz	u10321
 22346  01234E  0EF3               	movlw	-13
 22347  012350  50E3               	movf	plusw1,w,c
 22348  012352  E10C               	bnz	u10321
 22349  012354  0EF4               	movlw	-12
 22350  012356  50E3               	movf	plusw1,w,c
 22351  012358  E109               	bnz	u10321
 22352  01235A  0EF5               	movlw	-11
 22353  01235C  50E3               	movf	plusw1,w,c
 22354  01235E  E106               	bnz	u10321
 22355  012360  0EF6               	movlw	-10
 22356  012362  50E3               	movf	plusw1,w,c
 22357  012364  E103               	bnz	u10321
 22358  012366  0EF7               	movlw	-9
 22359  012368  50E3               	movf	plusw1,w,c
 22360  01236A  A4D8               	btfss	status,2,c
 22361  01236C                     u10321:
 22362  01236C  D6D4               	goto	l15464
 22363                           
 22364                           ;stkvar	_p @ sp[(-18)+16]
 22365  01236E  0EFF               	movlw	-1
 22366  012370  BEE3               	btfsc	plusw1,7,c
 22367  012372  D007               	goto	u10330
 22368  012374  0EFF               	movlw	-1
 22369  012376  50E3               	movf	plusw1,w,c
 22370  012378  E103               	bnz	u10331
 22371  01237A  0EFE               	movlw	-2
 22372  01237C  04E3               	decf	plusw1,w,c
 22373  01237E  B0D8               	btfsc	status,0,c
 22374  012380                     u10331:
 22375  012380  D6CA               	goto	l15464
 22376  012382                     u10330:
 22377                           
 22378                           ;stkvar	_w @ sp[(-18)+14]
 22379  012382  0EFD               	movlw	-3
 22380  012384  BEE3               	btfsc	plusw1,7,c
 22381  012386  D009               	goto	u10350
 22382  012388  0EFD               	movlw	-3
 22383  01238A  50E3               	movf	plusw1,w,c
 22384  01238C  E104               	bnz	u10340
 22385  01238E  0EFC               	movlw	-4
 22386  012390  04E3               	decf	plusw1,w,c
 22387  012392  A0D8               	btfss	status,0,c
 22388  012394  D002               	goto	u10350
 22389  012396                     u10340:
 22390  012396  B214               	btfsc	_flags,1,c
 22391  012398  D6BE               	goto	l15464
 22392  01239A                     u10350:
 22393                           
 22394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 22395                           ;stkvar	_s @ sp[(-18)+12]
 22396  01239A  0EFA               	movlw	-6
 22397  01239C  006F FF8C  F038    	movff	plusw1,btemp
 22398  0123A2  0EFB               	movlw	-5
 22399  0123A4  50E3               	movf	plusw1,w,c
 22400  0123A6  1038               	iorwf	btemp,w,c
 22401  0123A8  A4D8               	btfss	status,2,c
 22402  0123AA  D002               	goto	u10370
 22403  0123AC  A414               	btfss	_flags,2,c
 22404  0123AE  D033               	goto	l15498
 22405  0123B0                     u10370:
 22406                           
 22407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 22408                           ;stkvar	_i @ sp[(-18)+10]
 22409  0123B0  50E1               	movf	fsr1l,w,c
 22410  0123B2  0FF8               	addlw	-8
 22411  0123B4  6ED9               	movwf	fsr2l,c
 22412  0123B6  50E2               	movf	fsr1h,w,c
 22413  0123B8  6EDA               	movwf	fsr2h,c
 22414  0123BA  0EFF               	movlw	255
 22415  0123BC  22DA               	addwfc	fsr2h,f,c
 22416  0123BE  06DE               	decf	postinc2,f,c
 22417  0123C0  0E00               	movlw	0
 22418  0123C2  5ADD               	subwfb	postdec2,f,c
 22419                           
 22420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 22421                           ;stkvar	_s @ sp[(-18)+12]
 22422  0123C4  0EFA               	movlw	-6
 22423  0123C6  006F FF8C  F038    	movff	plusw1,btemp
 22424  0123CC  0EFB               	movlw	-5
 22425  0123CE  50E3               	movf	plusw1,w,c
 22426  0123D0  1038               	iorwf	btemp,w,c
 22427  0123D2  A4D8               	btfss	status,2,c
 22428  0123D4  D002               	goto	l15494
 22429  0123D6  0E2B               	movlw	43
 22430  0123D8  D001               	goto	L38
 22431  0123DA                     l15494:
 22432  0123DA  0E2D               	movlw	45
 22433  0123DC                     L38:
 22434  0123DC  6E42               	movwf	btemp+10,c
 22435  0123DE  0E00               	movlw	0
 22436  0123E0  6E43               	movwf	btemp+11,c
 22437                           
 22438                           ;stkvar	_dtoa$5291 @ sp[(-18)+0]
 22439  0123E2  0EEE               	movlw	-18
 22440  0123E4  0060  F10B  FFE3   	movff	btemp+10,plusw1
 22441  0123EA  0EEF               	movlw	-17
 22442  0123EC  0060  F10F  FFE3   	movff	btemp+11,plusw1
 22443                           
 22444                           ;stkvar	_dtoa$5291 @ sp[(-18)+0]
 22445                           ;stkvar	_i @ sp[(-18)+10]
 22446  0123F2  0EF8               	movlw	-8
 22447  0123F4  006F FF8C  F042    	movff	plusw1,btemp+10
 22448  0123FA  0EF9               	movlw	-7
 22449  0123FC  006F FF8C  F043    	movff	plusw1,btemp+11
 22450  012402  0ED0               	movlw	low _dbuf
 22451  012404  2442               	addwf	btemp+10,w,c
 22452  012406  6ED9               	movwf	fsr2l,c
 22453  012408  0E01               	movlw	high _dbuf
 22454  01240A  2043               	addwfc	btemp+11,w,c
 22455  01240C  6EDA               	movwf	fsr2h,c
 22456  01240E  0EEE               	movlw	-18
 22457  012410  006F FF8F FFDF     	movff	plusw1,indf2
 22458  012416                     l15498:
 22459                           
 22460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 22461                           ;stkvar	_w @ sp[(-18)+14]
 22462  012416  0EFC               	movlw	-4
 22463  012418  006F FF8F FFE6     	movff	plusw1,postinc1
 22464  01241E  006F FF8F FFE6     	movff	plusw1,postinc1
 22465                           
 22466                           ;stkvar	_i @ sp[(-20)+10]
 22467  012424  0ED0               	movlw	low _dbuf
 22468  012426  6E42               	movwf	btemp+10,c
 22469  012428  0E01               	movlw	high _dbuf
 22470  01242A  6E43               	movwf	btemp+11,c
 22471  01242C  0EF6               	movlw	-10
 22472  01242E  50E3               	movf	plusw1,w,c
 22473  012430  2642               	addwf	btemp+10,f,c
 22474  012432  0EF7               	movlw	-9
 22475  012434  50E3               	movf	plusw1,w,c
 22476  012436  2243               	addwfc	btemp+11,f,c
 22477  012438  0060  F10B  FFE6   	movff	btemp+10,postinc1
 22478  01243E  0060  F10F  FFE6   	movff	btemp+11,postinc1
 22479                           
 22480                           ;stkvar	_fp @ sp[(-22)+-2]
 22481  012444  0EE8               	movlw	-24
 22482  012446  006F FF8F FFE6     	movff	plusw1,postinc1
 22483  01244C  006F FF8F FFE6     	movff	plusw1,postinc1
 22484  012452  EC78  F0A9         	call	_pad	;wreg free
 22485                           
 22486                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 22487  012456  0EE4               	movlw	228
 22488  012458  26E1               	addwf	fsr1l,f,c
 22489  01245A  0EFF               	movlw	255
 22490  01245C  22E2               	addwfc	fsr1h,f,c
 22491  01245E  0012               	return		;funcret
 22492  012460                     __end_of_dtoa:
 22493                           	opt callstack 0
 22494                           
 22495 ;; *************** function _abs *****************
 22496 ;; Defined at:
 22497 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 22498 ;; Parameters:    Size  Location     Type
 22499 ;;  a               2  [STACK] int 
 22500 ;; Auto vars:     Size  Location     Type
 22501 ;;		None
 22502 ;; Return value:  Size  Location     Type
 22503 ;;                  2  [STACK] int 
 22504 ;; Registers used:
 22505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 22506 ;; Tracked objects:
 22507 ;;		On entry : 0/1
 22508 ;;		On exit  : 0/0
 22509 ;;		Unchanged: 0/0
 22510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22515 ;;Total ram usage:        0 bytes
 22516 ;; Hardware stack levels used:    1
 22517 ;; Hardware stack levels required when called:    3
 22518 ;; This function calls:
 22519 ;;		Nothing
 22520 ;; This function is called by:
 22521 ;;		_dtoa
 22522 ;; This function uses a reentrant model
 22523 ;;
 22524                           
 22525                           	psect	text102
 22526  0167C8                     __ptext102:
 22527                           	opt callstack 0
 22528  0167C8                     _abs:
 22529                           	opt callstack 20
 22530                           
 22531                           ;stkvar	_a @ sp[(0)+-2]
 22532                           
 22533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22534                           ;incstack = 0
 22535  0167C8  0EFF               	movlw	-1
 22536  0167CA  BEE3               	btfsc	plusw1,7,c
 22537  0167CC  D007               	goto	u7190
 22538  0167CE  0EFF               	movlw	-1
 22539  0167D0  50E3               	movf	plusw1,w,c
 22540  0167D2  E112               	bnz	l11782
 22541  0167D4  0EFE               	movlw	-2
 22542  0167D6  04E3               	decf	plusw1,w,c
 22543  0167D8  B0D8               	btfsc	status,0,c
 22544  0167DA  D00E               	goto	l11782
 22545  0167DC                     u7190:
 22546                           
 22547                           ;stkvar	_a @ sp[(0)+-2]
 22548  0167DC  0EFE               	movlw	-2
 22549  0167DE  006F FF8C  F038    	movff	plusw1,btemp
 22550  0167E4  1E38               	comf	btemp,f,c
 22551  0167E6  0EFF               	movlw	-1
 22552  0167E8  006F FF8C  F039    	movff	plusw1,btemp+1
 22553  0167EE  1E39               	comf	btemp+1,f,c
 22554  0167F0  2A38               	incf	btemp,f,c
 22555  0167F2  B4D8               	btfsc	status,2,c
 22556  0167F4  2A39               	incf	btemp+1,f,c
 22557  0167F6  D008               	goto	l3202
 22558  0167F8                     l11782:
 22559                           
 22560                           ;stkvar	_a @ sp[(0)+-2]
 22561  0167F8  0EFE               	movlw	-2
 22562  0167FA  006F FF8C  F038    	movff	plusw1,btemp
 22563  016800  0EFF               	movlw	-1
 22564  016802  006F FF8C  F039    	movff	plusw1,btemp+1
 22565  016808                     l3202:
 22566                           
 22567                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 22568  016808  52E5               	movf	postdec1,f,c
 22569  01680A  52E5               	movf	postdec1,f,c
 22570  01680C  0012               	return		;funcret
 22571  01680E                     __end_of_abs:
 22572                           	opt callstack 0
 22573                           
 22574 ;; *************** function ___aomod *****************
 22575 ;; Defined at:
 22576 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;  dividend        8  [STACK] long long 
 22579 ;;  divisor         8  [STACK] long long 
 22580 ;; Auto vars:     Size  Location     Type
 22581 ;;  sign            1  [STACK] unsigned char 
 22582 ;;  counter         1  [STACK] unsigned char 
 22583 ;; Return value:  Size  Location     Type
 22584 ;;                  8  [STACK] long long 
 22585 ;; Registers used:
 22586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22587 ;; Tracked objects:
 22588 ;;		On entry : 0/1
 22589 ;;		On exit  : 0/0
 22590 ;;		Unchanged: 0/0
 22591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;Total ram usage:        0 bytes
 22597 ;; Hardware stack levels used:    1
 22598 ;; Hardware stack levels required when called:    3
 22599 ;; This function calls:
 22600 ;;		Nothing
 22601 ;; This function is called by:
 22602 ;;		_dtoa
 22603 ;; This function uses a reentrant model
 22604 ;;
 22605                           
 22606                           	psect	text103
 22607  014318                     __ptext103:
 22608                           	opt callstack 0
 22609  014318                     ___aomod:
 22610                           	opt callstack 0
 22611                           
 22612                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 22613  014318  52E6               	movf	postinc1,f,c
 22614  01431A  52E6               	movf	postinc1,f,c
 22615                           
 22616                           ;stkvar	_sign @ sp[(-2)+0]
 22617                           
 22618                           ;incstack = 0
 22619  01431C  0EFE               	movlw	-2
 22620  01431E  6AE3               	clrf	plusw1,c
 22621                           
 22622                           ;stkvar	_dividend @ sp[(-2)+-8]
 22623  014320  0EFD               	movlw	-3
 22624  014322  AEE3               	btfss	plusw1,7,c
 22625  014324  D028               	goto	l11860
 22626                           
 22627                           ;stkvar	_dividend @ sp[(-2)+-8]
 22628                           ;stkvar	_dividend @ sp[(-2)+-8]
 22629  014326  0EF6               	movlw	-10
 22630  014328  6CE3               	negf	plusw1,c
 22631  01432A  0EF7               	movlw	-9
 22632  01432C  1EE3               	comf	plusw1,f,c
 22633  01432E  0EF8               	movlw	-8
 22634  014330  1EE3               	comf	plusw1,f,c
 22635  014332  0EF9               	movlw	-7
 22636  014334  1EE3               	comf	plusw1,f,c
 22637  014336  0EFA               	movlw	-6
 22638  014338  1EE3               	comf	plusw1,f,c
 22639  01433A  0EFB               	movlw	-5
 22640  01433C  1EE3               	comf	plusw1,f,c
 22641  01433E  0EFC               	movlw	-4
 22642  014340  1EE3               	comf	plusw1,f,c
 22643  014342  0EFD               	movlw	-3
 22644  014344  1EE3               	comf	plusw1,f,c
 22645  014346  E314               	bnc	u7400
 22646  014348  0EF7               	movlw	-9
 22647  01434A  2AE3               	incf	plusw1,f,c
 22648  01434C  E311               	bnc	u7400
 22649  01434E  0EF8               	movlw	-8
 22650  014350  2AE3               	incf	plusw1,f,c
 22651  014352  E30E               	bnc	u7400
 22652  014354  0EF9               	movlw	-7
 22653  014356  2AE3               	incf	plusw1,f,c
 22654  014358  E30B               	bnc	u7400
 22655  01435A  0EFA               	movlw	-6
 22656  01435C  2AE3               	incf	plusw1,f,c
 22657  01435E  E308               	bnc	u7400
 22658  014360  0EFB               	movlw	-5
 22659  014362  2AE3               	incf	plusw1,f,c
 22660  014364  E305               	bnc	u7400
 22661  014366  0EFC               	movlw	-4
 22662  014368  2AE3               	incf	plusw1,f,c
 22663  01436A  E302               	bnc	u7400
 22664  01436C  0EFD               	movlw	-3
 22665  01436E  2AE3               	incf	plusw1,f,c
 22666  014370                     u7400:
 22667                           
 22668                           ;stkvar	_sign @ sp[(-2)+0]
 22669  014370  0EFE               	movlw	-2
 22670  014372  6AE3               	clrf	plusw1,c
 22671  014374  2AE3               	incf	plusw1,f,c
 22672  014376                     l11860:
 22673                           
 22674                           ;stkvar	_divisor @ sp[(-2)+-16]
 22675  014376  0EF5               	movlw	-11
 22676  014378  AEE3               	btfss	plusw1,7,c
 22677  01437A  D025               	goto	u7420
 22678                           
 22679                           ;stkvar	_divisor @ sp[(-2)+-16]
 22680                           ;stkvar	_divisor @ sp[(-2)+-16]
 22681  01437C  0EEE               	movlw	-18
 22682  01437E  6CE3               	negf	plusw1,c
 22683  014380  0EEF               	movlw	-17
 22684  014382  1EE3               	comf	plusw1,f,c
 22685  014384  0EF0               	movlw	-16
 22686  014386  1EE3               	comf	plusw1,f,c
 22687  014388  0EF1               	movlw	-15
 22688  01438A  1EE3               	comf	plusw1,f,c
 22689  01438C  0EF2               	movlw	-14
 22690  01438E  1EE3               	comf	plusw1,f,c
 22691  014390  0EF3               	movlw	-13
 22692  014392  1EE3               	comf	plusw1,f,c
 22693  014394  0EF4               	movlw	-12
 22694  014396  1EE3               	comf	plusw1,f,c
 22695  014398  0EF5               	movlw	-11
 22696  01439A  1EE3               	comf	plusw1,f,c
 22697  01439C  E314               	bnc	u7420
 22698  01439E  0EEF               	movlw	-17
 22699  0143A0  2AE3               	incf	plusw1,f,c
 22700  0143A2  E311               	bnc	u7420
 22701  0143A4  0EF0               	movlw	-16
 22702  0143A6  2AE3               	incf	plusw1,f,c
 22703  0143A8  E30E               	bnc	u7420
 22704  0143AA  0EF1               	movlw	-15
 22705  0143AC  2AE3               	incf	plusw1,f,c
 22706  0143AE  E30B               	bnc	u7420
 22707  0143B0  0EF2               	movlw	-14
 22708  0143B2  2AE3               	incf	plusw1,f,c
 22709  0143B4  E308               	bnc	u7420
 22710  0143B6  0EF3               	movlw	-13
 22711  0143B8  2AE3               	incf	plusw1,f,c
 22712  0143BA  E305               	bnc	u7420
 22713  0143BC  0EF4               	movlw	-12
 22714  0143BE  2AE3               	incf	plusw1,f,c
 22715  0143C0  E302               	bnc	u7420
 22716  0143C2  0EF5               	movlw	-11
 22717  0143C4  2AE3               	incf	plusw1,f,c
 22718  0143C6                     u7420:
 22719                           
 22720                           ;stkvar	_divisor @ sp[(-2)+-16]
 22721  0143C6  0EEE               	movlw	-18
 22722  0143C8  50E3               	movf	plusw1,w,c
 22723  0143CA  E116               	bnz	u7430
 22724  0143CC  0EEF               	movlw	-17
 22725  0143CE  50E3               	movf	plusw1,w,c
 22726  0143D0  E113               	bnz	u7430
 22727  0143D2  0EF0               	movlw	-16
 22728  0143D4  50E3               	movf	plusw1,w,c
 22729  0143D6  E110               	bnz	u7430
 22730  0143D8  0EF1               	movlw	-15
 22731  0143DA  50E3               	movf	plusw1,w,c
 22732  0143DC  E10D               	bnz	u7430
 22733  0143DE  0EF2               	movlw	-14
 22734  0143E0  50E3               	movf	plusw1,w,c
 22735  0143E2  E10A               	bnz	u7430
 22736  0143E4  0EF3               	movlw	-13
 22737  0143E6  50E3               	movf	plusw1,w,c
 22738  0143E8  E107               	bnz	u7430
 22739  0143EA  0EF4               	movlw	-12
 22740  0143EC  50E3               	movf	plusw1,w,c
 22741  0143EE  E104               	bnz	u7430
 22742  0143F0  0EF5               	movlw	-11
 22743  0143F2  50E3               	movf	plusw1,w,c
 22744  0143F4  B4D8               	btfsc	status,2,c
 22745  0143F6  D075               	goto	u7460
 22746  0143F8                     u7430:
 22747                           
 22748                           ;stkvar	_counter @ sp[(-2)+1]
 22749  0143F8  0EFF               	movlw	-1
 22750  0143FA  6AE3               	clrf	plusw1,c
 22751  0143FC  D012               	goto	L39
 22752  0143FE                     l11868:
 22753                           
 22754                           ;stkvar	_divisor @ sp[(-2)+-16]
 22755  0143FE  90D8               	bcf	status,0,c
 22756  014400  0EEE               	movlw	-18
 22757  014402  36E3               	rlcf	plusw1,f,c
 22758  014404  0EEF               	movlw	-17
 22759  014406  36E3               	rlcf	plusw1,f,c
 22760  014408  0EF0               	movlw	-16
 22761  01440A  36E3               	rlcf	plusw1,f,c
 22762  01440C  0EF1               	movlw	-15
 22763  01440E  36E3               	rlcf	plusw1,f,c
 22764  014410  0EF2               	movlw	-14
 22765  014412  36E3               	rlcf	plusw1,f,c
 22766  014414  0EF3               	movlw	-13
 22767  014416  36E3               	rlcf	plusw1,f,c
 22768  014418  0EF4               	movlw	-12
 22769  01441A  36E3               	rlcf	plusw1,f,c
 22770  01441C  0EF5               	movlw	-11
 22771  01441E  36E3               	rlcf	plusw1,f,c
 22772                           
 22773                           ;stkvar	_counter @ sp[(-2)+1]
 22774  014420  0EFF               	movlw	-1
 22775  014422                     L39:
 22776  014422  2AE3               	incf	plusw1,f,c
 22777                           
 22778                           ;stkvar	_divisor @ sp[(-2)+-16]
 22779  014424  0EF5               	movlw	-11
 22780  014426  AEE3               	btfss	plusw1,7,c
 22781  014428  D7EA               	goto	l11868
 22782  01442A                     u7440:
 22783                           
 22784                           ;stkvar	_divisor @ sp[(-2)+-16]
 22785                           ;stkvar	_dividend @ sp[(-2)+-8]
 22786  01442A  50E1               	movf	fsr1l,w,c
 22787  01442C  0FF6               	addlw	-10
 22788  01442E  6ED9               	movwf	fsr2l,c
 22789  014430  50E2               	movf	fsr1h,w,c
 22790  014432  6EDA               	movwf	fsr2h,c
 22791  014434  0EFF               	movlw	255
 22792  014436  22DA               	addwfc	fsr2h,f,c
 22793  014438  0EEE               	movlw	-18
 22794  01443A  50E3               	movf	plusw1,w,c
 22795  01443C  5CDE               	subwf	postinc2,w,c
 22796  01443E  0EEF               	movlw	-17
 22797  014440  50E3               	movf	plusw1,w,c
 22798  014442  58DE               	subwfb	postinc2,w,c
 22799  014444  0EF0               	movlw	-16
 22800  014446  50E3               	movf	plusw1,w,c
 22801  014448  58DE               	subwfb	postinc2,w,c
 22802  01444A  0EF1               	movlw	-15
 22803  01444C  50E3               	movf	plusw1,w,c
 22804  01444E  58DE               	subwfb	postinc2,w,c
 22805  014450  0EF2               	movlw	-14
 22806  014452  50E3               	movf	plusw1,w,c
 22807  014454  58DE               	subwfb	postinc2,w,c
 22808  014456  0EF3               	movlw	-13
 22809  014458  50E3               	movf	plusw1,w,c
 22810  01445A  58DE               	subwfb	postinc2,w,c
 22811  01445C  0EF4               	movlw	-12
 22812  01445E  50E3               	movf	plusw1,w,c
 22813  014460  58DE               	subwfb	postinc2,w,c
 22814  014462  0EF5               	movlw	-11
 22815  014464  50E3               	movf	plusw1,w,c
 22816  014466  58DE               	subwfb	postinc2,w,c
 22817  014468  A0D8               	btfss	status,0,c
 22818  01446A  D01F               	goto	l11876
 22819                           
 22820                           ;stkvar	_divisor @ sp[(-2)+-16]
 22821                           ;stkvar	_dividend @ sp[(-2)+-8]
 22822  01446C  50E1               	movf	fsr1l,w,c
 22823  01446E  0FF6               	addlw	-10
 22824  014470  6ED9               	movwf	fsr2l,c
 22825  014472  50E2               	movf	fsr1h,w,c
 22826  014474  6EDA               	movwf	fsr2h,c
 22827  014476  0EFF               	movlw	255
 22828  014478  22DA               	addwfc	fsr2h,f,c
 22829  01447A  0EEE               	movlw	-18
 22830  01447C  50E3               	movf	plusw1,w,c
 22831  01447E  5EDE               	subwf	postinc2,f,c
 22832  014480  0EEF               	movlw	-17
 22833  014482  50E3               	movf	plusw1,w,c
 22834  014484  5ADE               	subwfb	postinc2,f,c
 22835  014486  0EF0               	movlw	-16
 22836  014488  50E3               	movf	plusw1,w,c
 22837  01448A  5ADE               	subwfb	postinc2,f,c
 22838  01448C  0EF1               	movlw	-15
 22839  01448E  50E3               	movf	plusw1,w,c
 22840  014490  5ADE               	subwfb	postinc2,f,c
 22841  014492  0EF2               	movlw	-14
 22842  014494  50E3               	movf	plusw1,w,c
 22843  014496  5ADE               	subwfb	postinc2,f,c
 22844  014498  0EF3               	movlw	-13
 22845  01449A  50E3               	movf	plusw1,w,c
 22846  01449C  5ADE               	subwfb	postinc2,f,c
 22847  01449E  0EF4               	movlw	-12
 22848  0144A0  50E3               	movf	plusw1,w,c
 22849  0144A2  5ADE               	subwfb	postinc2,f,c
 22850  0144A4  0EF5               	movlw	-11
 22851  0144A6  50E3               	movf	plusw1,w,c
 22852  0144A8  5ADE               	subwfb	postinc2,f,c
 22853  0144AA                     l11876:
 22854                           
 22855                           ;stkvar	_divisor @ sp[(-2)+-16]
 22856  0144AA  90D8               	bcf	status,0,c
 22857  0144AC  0EF5               	movlw	-11
 22858  0144AE  32E3               	rrcf	plusw1,f,c
 22859  0144B0  0EF4               	movlw	-12
 22860  0144B2  32E3               	rrcf	plusw1,f,c
 22861  0144B4  0EF3               	movlw	-13
 22862  0144B6  32E3               	rrcf	plusw1,f,c
 22863  0144B8  0EF2               	movlw	-14
 22864  0144BA  32E3               	rrcf	plusw1,f,c
 22865  0144BC  0EF1               	movlw	-15
 22866  0144BE  32E3               	rrcf	plusw1,f,c
 22867  0144C0  0EF0               	movlw	-16
 22868  0144C2  32E3               	rrcf	plusw1,f,c
 22869  0144C4  0EEF               	movlw	-17
 22870  0144C6  32E3               	rrcf	plusw1,f,c
 22871  0144C8  0EEE               	movlw	-18
 22872  0144CA  32E3               	rrcf	plusw1,f,c
 22873                           
 22874                           ;stkvar	_counter @ sp[(-2)+1]
 22875  0144CC  0EFF               	movlw	-1
 22876  0144CE  50E3               	movf	plusw1,w,c
 22877  0144D0  6E38               	movwf	btemp,c
 22878  0144D2  0E01               	movlw	1
 22879  0144D4  5E38               	subwf	btemp,f,c
 22880  0144D6  0EFF               	movlw	-1
 22881  0144D8  0060  F0E3  FFE3   	movff	btemp,plusw1
 22882  0144DE  A4D8               	btfss	status,2,c
 22883  0144E0  D7A4               	goto	u7440
 22884  0144E2                     u7460:
 22885                           
 22886                           ;stkvar	_sign @ sp[(-2)+0]
 22887  0144E2  0EFE               	movlw	-2
 22888  0144E4  50E3               	movf	plusw1,w,c
 22889  0144E6  B4D8               	btfsc	status,2,c
 22890  0144E8  D025               	goto	u7480
 22891                           
 22892                           ;stkvar	_dividend @ sp[(-2)+-8]
 22893                           ;stkvar	_dividend @ sp[(-2)+-8]
 22894  0144EA  0EF6               	movlw	-10
 22895  0144EC  6CE3               	negf	plusw1,c
 22896  0144EE  0EF7               	movlw	-9
 22897  0144F0  1EE3               	comf	plusw1,f,c
 22898  0144F2  0EF8               	movlw	-8
 22899  0144F4  1EE3               	comf	plusw1,f,c
 22900  0144F6  0EF9               	movlw	-7
 22901  0144F8  1EE3               	comf	plusw1,f,c
 22902  0144FA  0EFA               	movlw	-6
 22903  0144FC  1EE3               	comf	plusw1,f,c
 22904  0144FE  0EFB               	movlw	-5
 22905  014500  1EE3               	comf	plusw1,f,c
 22906  014502  0EFC               	movlw	-4
 22907  014504  1EE3               	comf	plusw1,f,c
 22908  014506  0EFD               	movlw	-3
 22909  014508  1EE3               	comf	plusw1,f,c
 22910  01450A  E314               	bnc	u7480
 22911  01450C  0EF7               	movlw	-9
 22912  01450E  2AE3               	incf	plusw1,f,c
 22913  014510  E311               	bnc	u7480
 22914  014512  0EF8               	movlw	-8
 22915  014514  2AE3               	incf	plusw1,f,c
 22916  014516  E30E               	bnc	u7480
 22917  014518  0EF9               	movlw	-7
 22918  01451A  2AE3               	incf	plusw1,f,c
 22919  01451C  E30B               	bnc	u7480
 22920  01451E  0EFA               	movlw	-6
 22921  014520  2AE3               	incf	plusw1,f,c
 22922  014522  E308               	bnc	u7480
 22923  014524  0EFB               	movlw	-5
 22924  014526  2AE3               	incf	plusw1,f,c
 22925  014528  E305               	bnc	u7480
 22926  01452A  0EFC               	movlw	-4
 22927  01452C  2AE3               	incf	plusw1,f,c
 22928  01452E  E302               	bnc	u7480
 22929  014530  0EFD               	movlw	-3
 22930  014532  2AE3               	incf	plusw1,f,c
 22931  014534                     u7480:
 22932                           
 22933                           ;stkvar	_dividend @ sp[(-2)+-8]
 22934  014534  0EF6               	movlw	246
 22935  014536  24E1               	addwf	fsr1l,w,c
 22936  014538  6ED9               	movwf	fsr2l,c
 22937  01453A  0EFF               	movlw	255
 22938  01453C  20E2               	addwfc	fsr1h,w,c
 22939  01453E  6EDA               	movwf	fsr2h,c
 22940                           
 22941                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22942  014540  0E08               	movlw	8
 22943  014542  6E38               	movwf	btemp,c
 22944  014544  0EF6               	movlw	-10
 22945  014546                     us749999:
 22946  014546  006F FF7B FFE3     	movff	postinc2,plusw1
 22947  01454C  28E8               	incf	wreg,w,c
 22948  01454E  2E38               	decfsz	btemp,f,c
 22949  014550  D7FA               	bra	us749999
 22950                           
 22951                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22952  014552  52E5               	movf	postdec1,f,c
 22953  014554  52E5               	movf	postdec1,f,c
 22954  014556  0012               	return		;funcret
 22955  014558                     __end_of___aomod:
 22956                           	opt callstack 0
 22957                           
 22958 ;; *************** function ___aodiv *****************
 22959 ;; Defined at:
 22960 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 22961 ;; Parameters:    Size  Location     Type
 22962 ;;  dividend        8  [STACK] long long 
 22963 ;;  divisor         8  [STACK] long long 
 22964 ;; Auto vars:     Size  Location     Type
 22965 ;;  quotient        8  [STACK] long long 
 22966 ;;  sign            1  [STACK] unsigned char 
 22967 ;;  counter         1  [STACK] unsigned char 
 22968 ;; Return value:  Size  Location     Type
 22969 ;;                  8  [STACK] long long 
 22970 ;; Registers used:
 22971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22972 ;; Tracked objects:
 22973 ;;		On entry : 0/1
 22974 ;;		On exit  : 0/0
 22975 ;;		Unchanged: 0/0
 22976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22981 ;;Total ram usage:        0 bytes
 22982 ;; Hardware stack levels used:    1
 22983 ;; Hardware stack levels required when called:    3
 22984 ;; This function calls:
 22985 ;;		Nothing
 22986 ;; This function is called by:
 22987 ;;		_dtoa
 22988 ;; This function uses a reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text104
 22992  013E3E                     __ptext104:
 22993                           	opt callstack 0
 22994  013E3E                     ___aodiv:
 22995                           	opt callstack 0
 22996                           
 22997                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22998  013E3E  0E0A               	movlw	10
 22999  013E40  26E1               	addwf	fsr1l,f,c
 23000  013E42  0E00               	movlw	0
 23001  013E44  22E2               	addwfc	fsr1h,f,c
 23002                           
 23003                           ;stkvar	_sign @ sp[(-10)+8]
 23004                           
 23005                           ;incstack = 0
 23006  013E46  0EFE               	movlw	-2
 23007  013E48  6AE3               	clrf	plusw1,c
 23008                           
 23009                           ;stkvar	_divisor @ sp[(-10)+-16]
 23010  013E4A  0EED               	movlw	-19
 23011  013E4C  AEE3               	btfss	plusw1,7,c
 23012  013E4E  D028               	goto	l11816
 23013                           
 23014                           ;stkvar	_divisor @ sp[(-10)+-16]
 23015                           ;stkvar	_divisor @ sp[(-10)+-16]
 23016  013E50  0EE6               	movlw	-26
 23017  013E52  6CE3               	negf	plusw1,c
 23018  013E54  0EE7               	movlw	-25
 23019  013E56  1EE3               	comf	plusw1,f,c
 23020  013E58  0EE8               	movlw	-24
 23021  013E5A  1EE3               	comf	plusw1,f,c
 23022  013E5C  0EE9               	movlw	-23
 23023  013E5E  1EE3               	comf	plusw1,f,c
 23024  013E60  0EEA               	movlw	-22
 23025  013E62  1EE3               	comf	plusw1,f,c
 23026  013E64  0EEB               	movlw	-21
 23027  013E66  1EE3               	comf	plusw1,f,c
 23028  013E68  0EEC               	movlw	-20
 23029  013E6A  1EE3               	comf	plusw1,f,c
 23030  013E6C  0EED               	movlw	-19
 23031  013E6E  1EE3               	comf	plusw1,f,c
 23032  013E70  E314               	bnc	u7280
 23033  013E72  0EE7               	movlw	-25
 23034  013E74  2AE3               	incf	plusw1,f,c
 23035  013E76  E311               	bnc	u7280
 23036  013E78  0EE8               	movlw	-24
 23037  013E7A  2AE3               	incf	plusw1,f,c
 23038  013E7C  E30E               	bnc	u7280
 23039  013E7E  0EE9               	movlw	-23
 23040  013E80  2AE3               	incf	plusw1,f,c
 23041  013E82  E30B               	bnc	u7280
 23042  013E84  0EEA               	movlw	-22
 23043  013E86  2AE3               	incf	plusw1,f,c
 23044  013E88  E308               	bnc	u7280
 23045  013E8A  0EEB               	movlw	-21
 23046  013E8C  2AE3               	incf	plusw1,f,c
 23047  013E8E  E305               	bnc	u7280
 23048  013E90  0EEC               	movlw	-20
 23049  013E92  2AE3               	incf	plusw1,f,c
 23050  013E94  E302               	bnc	u7280
 23051  013E96  0EED               	movlw	-19
 23052  013E98  2AE3               	incf	plusw1,f,c
 23053  013E9A                     u7280:
 23054                           
 23055                           ;stkvar	_sign @ sp[(-10)+8]
 23056  013E9A  0EFE               	movlw	-2
 23057  013E9C  6AE3               	clrf	plusw1,c
 23058  013E9E  2AE3               	incf	plusw1,f,c
 23059  013EA0                     l11816:
 23060                           
 23061                           ;stkvar	_dividend @ sp[(-10)+-8]
 23062  013EA0  0EF5               	movlw	-11
 23063  013EA2  AEE3               	btfss	plusw1,7,c
 23064  013EA4  D027               	goto	l11822
 23065                           
 23066                           ;stkvar	_dividend @ sp[(-10)+-8]
 23067                           ;stkvar	_dividend @ sp[(-10)+-8]
 23068  013EA6  0EEE               	movlw	-18
 23069  013EA8  6CE3               	negf	plusw1,c
 23070  013EAA  0EEF               	movlw	-17
 23071  013EAC  1EE3               	comf	plusw1,f,c
 23072  013EAE  0EF0               	movlw	-16
 23073  013EB0  1EE3               	comf	plusw1,f,c
 23074  013EB2  0EF1               	movlw	-15
 23075  013EB4  1EE3               	comf	plusw1,f,c
 23076  013EB6  0EF2               	movlw	-14
 23077  013EB8  1EE3               	comf	plusw1,f,c
 23078  013EBA  0EF3               	movlw	-13
 23079  013EBC  1EE3               	comf	plusw1,f,c
 23080  013EBE  0EF4               	movlw	-12
 23081  013EC0  1EE3               	comf	plusw1,f,c
 23082  013EC2  0EF5               	movlw	-11
 23083  013EC4  1EE3               	comf	plusw1,f,c
 23084  013EC6  E314               	bnc	u7300
 23085  013EC8  0EEF               	movlw	-17
 23086  013ECA  2AE3               	incf	plusw1,f,c
 23087  013ECC  E311               	bnc	u7300
 23088  013ECE  0EF0               	movlw	-16
 23089  013ED0  2AE3               	incf	plusw1,f,c
 23090  013ED2  E30E               	bnc	u7300
 23091  013ED4  0EF1               	movlw	-15
 23092  013ED6  2AE3               	incf	plusw1,f,c
 23093  013ED8  E30B               	bnc	u7300
 23094  013EDA  0EF2               	movlw	-14
 23095  013EDC  2AE3               	incf	plusw1,f,c
 23096  013EDE  E308               	bnc	u7300
 23097  013EE0  0EF3               	movlw	-13
 23098  013EE2  2AE3               	incf	plusw1,f,c
 23099  013EE4  E305               	bnc	u7300
 23100  013EE6  0EF4               	movlw	-12
 23101  013EE8  2AE3               	incf	plusw1,f,c
 23102  013EEA  E302               	bnc	u7300
 23103  013EEC  0EF5               	movlw	-11
 23104  013EEE  2AE3               	incf	plusw1,f,c
 23105  013EF0                     u7300:
 23106                           
 23107                           ;stkvar	_sign @ sp[(-10)+8]
 23108  013EF0  0EFE               	movlw	-2
 23109  013EF2  70E3               	btg	plusw1,0,c
 23110  013EF4                     l11822:
 23111                           
 23112                           ;stkvar	_quotient @ sp[(-10)+0]
 23113  013EF4  0E07               	movlw	7
 23114  013EF6  6E38               	movwf	btemp,c
 23115  013EF8  0EF6               	movlw	-10
 23116  013EFA                     u7311:
 23117  013EFA  6AE3               	clrf	plusw1,c
 23118  013EFC  2AE8               	incf	wreg,f,c
 23119  013EFE  0638               	decf	btemp,f,c
 23120  013F00  E2FC               	bc	u7311
 23121                           
 23122                           ;stkvar	_divisor @ sp[(-10)+-16]
 23123  013F02  0EE6               	movlw	-26
 23124  013F04  50E3               	movf	plusw1,w,c
 23125  013F06  E116               	bnz	u7320
 23126  013F08  0EE7               	movlw	-25
 23127  013F0A  50E3               	movf	plusw1,w,c
 23128  013F0C  E113               	bnz	u7320
 23129  013F0E  0EE8               	movlw	-24
 23130  013F10  50E3               	movf	plusw1,w,c
 23131  013F12  E110               	bnz	u7320
 23132  013F14  0EE9               	movlw	-23
 23133  013F16  50E3               	movf	plusw1,w,c
 23134  013F18  E10D               	bnz	u7320
 23135  013F1A  0EEA               	movlw	-22
 23136  013F1C  50E3               	movf	plusw1,w,c
 23137  013F1E  E10A               	bnz	u7320
 23138  013F20  0EEB               	movlw	-21
 23139  013F22  50E3               	movf	plusw1,w,c
 23140  013F24  E107               	bnz	u7320
 23141  013F26  0EEC               	movlw	-20
 23142  013F28  50E3               	movf	plusw1,w,c
 23143  013F2A  E104               	bnz	u7320
 23144  013F2C  0EED               	movlw	-19
 23145  013F2E  50E3               	movf	plusw1,w,c
 23146  013F30  B4D8               	btfsc	status,2,c
 23147  013F32  D088               	goto	u7350
 23148  013F34                     u7320:
 23149                           
 23150                           ;stkvar	_counter @ sp[(-10)+9]
 23151  013F34  0EFF               	movlw	-1
 23152  013F36  6AE3               	clrf	plusw1,c
 23153  013F38  D012               	goto	L40
 23154  013F3A                     l11828:
 23155                           
 23156                           ;stkvar	_divisor @ sp[(-10)+-16]
 23157  013F3A  90D8               	bcf	status,0,c
 23158  013F3C  0EE6               	movlw	-26
 23159  013F3E  36E3               	rlcf	plusw1,f,c
 23160  013F40  0EE7               	movlw	-25
 23161  013F42  36E3               	rlcf	plusw1,f,c
 23162  013F44  0EE8               	movlw	-24
 23163  013F46  36E3               	rlcf	plusw1,f,c
 23164  013F48  0EE9               	movlw	-23
 23165  013F4A  36E3               	rlcf	plusw1,f,c
 23166  013F4C  0EEA               	movlw	-22
 23167  013F4E  36E3               	rlcf	plusw1,f,c
 23168  013F50  0EEB               	movlw	-21
 23169  013F52  36E3               	rlcf	plusw1,f,c
 23170  013F54  0EEC               	movlw	-20
 23171  013F56  36E3               	rlcf	plusw1,f,c
 23172  013F58  0EED               	movlw	-19
 23173  013F5A  36E3               	rlcf	plusw1,f,c
 23174                           
 23175                           ;stkvar	_counter @ sp[(-10)+9]
 23176  013F5C  0EFF               	movlw	-1
 23177  013F5E                     L40:
 23178  013F5E  2AE3               	incf	plusw1,f,c
 23179                           
 23180                           ;stkvar	_divisor @ sp[(-10)+-16]
 23181  013F60  0EED               	movlw	-19
 23182  013F62  AEE3               	btfss	plusw1,7,c
 23183  013F64  D7EA               	goto	l11828
 23184  013F66                     u7330:
 23185                           
 23186                           ;stkvar	_quotient @ sp[(-10)+0]
 23187  013F66  90D8               	bcf	status,0,c
 23188  013F68  0EF6               	movlw	-10
 23189  013F6A  36E3               	rlcf	plusw1,f,c
 23190  013F6C  0EF7               	movlw	-9
 23191  013F6E  36E3               	rlcf	plusw1,f,c
 23192  013F70  0EF8               	movlw	-8
 23193  013F72  36E3               	rlcf	plusw1,f,c
 23194  013F74  0EF9               	movlw	-7
 23195  013F76  36E3               	rlcf	plusw1,f,c
 23196  013F78  0EFA               	movlw	-6
 23197  013F7A  36E3               	rlcf	plusw1,f,c
 23198  013F7C  0EFB               	movlw	-5
 23199  013F7E  36E3               	rlcf	plusw1,f,c
 23200  013F80  0EFC               	movlw	-4
 23201  013F82  36E3               	rlcf	plusw1,f,c
 23202  013F84  0EFD               	movlw	-3
 23203  013F86  36E3               	rlcf	plusw1,f,c
 23204                           
 23205                           ;stkvar	_divisor @ sp[(-10)+-16]
 23206                           ;stkvar	_dividend @ sp[(-10)+-8]
 23207  013F88  50E1               	movf	fsr1l,w,c
 23208  013F8A  0FEE               	addlw	-18
 23209  013F8C  6ED9               	movwf	fsr2l,c
 23210  013F8E  50E2               	movf	fsr1h,w,c
 23211  013F90  6EDA               	movwf	fsr2h,c
 23212  013F92  0EFF               	movlw	255
 23213  013F94  22DA               	addwfc	fsr2h,f,c
 23214  013F96  0EE6               	movlw	-26
 23215  013F98  50E3               	movf	plusw1,w,c
 23216  013F9A  5CDE               	subwf	postinc2,w,c
 23217  013F9C  0EE7               	movlw	-25
 23218  013F9E  50E3               	movf	plusw1,w,c
 23219  013FA0  58DE               	subwfb	postinc2,w,c
 23220  013FA2  0EE8               	movlw	-24
 23221  013FA4  50E3               	movf	plusw1,w,c
 23222  013FA6  58DE               	subwfb	postinc2,w,c
 23223  013FA8  0EE9               	movlw	-23
 23224  013FAA  50E3               	movf	plusw1,w,c
 23225  013FAC  58DE               	subwfb	postinc2,w,c
 23226  013FAE  0EEA               	movlw	-22
 23227  013FB0  50E3               	movf	plusw1,w,c
 23228  013FB2  58DE               	subwfb	postinc2,w,c
 23229  013FB4  0EEB               	movlw	-21
 23230  013FB6  50E3               	movf	plusw1,w,c
 23231  013FB8  58DE               	subwfb	postinc2,w,c
 23232  013FBA  0EEC               	movlw	-20
 23233  013FBC  50E3               	movf	plusw1,w,c
 23234  013FBE  58DE               	subwfb	postinc2,w,c
 23235  013FC0  0EED               	movlw	-19
 23236  013FC2  50E3               	movf	plusw1,w,c
 23237  013FC4  58DE               	subwfb	postinc2,w,c
 23238  013FC6  A0D8               	btfss	status,0,c
 23239  013FC8  D021               	goto	l11840
 23240                           
 23241                           ;stkvar	_divisor @ sp[(-10)+-16]
 23242                           ;stkvar	_dividend @ sp[(-10)+-8]
 23243  013FCA  50E1               	movf	fsr1l,w,c
 23244  013FCC  0FEE               	addlw	-18
 23245  013FCE  6ED9               	movwf	fsr2l,c
 23246  013FD0  50E2               	movf	fsr1h,w,c
 23247  013FD2  6EDA               	movwf	fsr2h,c
 23248  013FD4  0EFF               	movlw	255
 23249  013FD6  22DA               	addwfc	fsr2h,f,c
 23250  013FD8  0EE6               	movlw	-26
 23251  013FDA  50E3               	movf	plusw1,w,c
 23252  013FDC  5EDE               	subwf	postinc2,f,c
 23253  013FDE  0EE7               	movlw	-25
 23254  013FE0  50E3               	movf	plusw1,w,c
 23255  013FE2  5ADE               	subwfb	postinc2,f,c
 23256  013FE4  0EE8               	movlw	-24
 23257  013FE6  50E3               	movf	plusw1,w,c
 23258  013FE8  5ADE               	subwfb	postinc2,f,c
 23259  013FEA  0EE9               	movlw	-23
 23260  013FEC  50E3               	movf	plusw1,w,c
 23261  013FEE  5ADE               	subwfb	postinc2,f,c
 23262  013FF0  0EEA               	movlw	-22
 23263  013FF2  50E3               	movf	plusw1,w,c
 23264  013FF4  5ADE               	subwfb	postinc2,f,c
 23265  013FF6  0EEB               	movlw	-21
 23266  013FF8  50E3               	movf	plusw1,w,c
 23267  013FFA  5ADE               	subwfb	postinc2,f,c
 23268  013FFC  0EEC               	movlw	-20
 23269  013FFE  50E3               	movf	plusw1,w,c
 23270  014000  5ADE               	subwfb	postinc2,f,c
 23271  014002  0EED               	movlw	-19
 23272  014004  50E3               	movf	plusw1,w,c
 23273  014006  5ADE               	subwfb	postinc2,f,c
 23274                           
 23275                           ;stkvar	_quotient @ sp[(-10)+0]
 23276  014008  0EF6               	movlw	-10
 23277  01400A  80E3               	bsf	plusw1,0,c
 23278  01400C                     l11840:
 23279                           
 23280                           ;stkvar	_divisor @ sp[(-10)+-16]
 23281  01400C  90D8               	bcf	status,0,c
 23282  01400E  0EED               	movlw	-19
 23283  014010  32E3               	rrcf	plusw1,f,c
 23284  014012  0EEC               	movlw	-20
 23285  014014  32E3               	rrcf	plusw1,f,c
 23286  014016  0EEB               	movlw	-21
 23287  014018  32E3               	rrcf	plusw1,f,c
 23288  01401A  0EEA               	movlw	-22
 23289  01401C  32E3               	rrcf	plusw1,f,c
 23290  01401E  0EE9               	movlw	-23
 23291  014020  32E3               	rrcf	plusw1,f,c
 23292  014022  0EE8               	movlw	-24
 23293  014024  32E3               	rrcf	plusw1,f,c
 23294  014026  0EE7               	movlw	-25
 23295  014028  32E3               	rrcf	plusw1,f,c
 23296  01402A  0EE6               	movlw	-26
 23297  01402C  32E3               	rrcf	plusw1,f,c
 23298                           
 23299                           ;stkvar	_counter @ sp[(-10)+9]
 23300  01402E  0EFF               	movlw	-1
 23301  014030  50E3               	movf	plusw1,w,c
 23302  014032  6E38               	movwf	btemp,c
 23303  014034  0E01               	movlw	1
 23304  014036  5E38               	subwf	btemp,f,c
 23305  014038  0EFF               	movlw	-1
 23306  01403A  0060  F0E3  FFE3   	movff	btemp,plusw1
 23307  014040  A4D8               	btfss	status,2,c
 23308  014042  D791               	goto	u7330
 23309  014044                     u7350:
 23310                           
 23311                           ;stkvar	_sign @ sp[(-10)+8]
 23312  014044  0EFE               	movlw	-2
 23313  014046  50E3               	movf	plusw1,w,c
 23314  014048  B4D8               	btfsc	status,2,c
 23315  01404A  D025               	goto	u7370
 23316                           
 23317                           ;stkvar	_quotient @ sp[(-10)+0]
 23318                           ;stkvar	_quotient @ sp[(-10)+0]
 23319  01404C  0EF6               	movlw	-10
 23320  01404E  6CE3               	negf	plusw1,c
 23321  014050  0EF7               	movlw	-9
 23322  014052  1EE3               	comf	plusw1,f,c
 23323  014054  0EF8               	movlw	-8
 23324  014056  1EE3               	comf	plusw1,f,c
 23325  014058  0EF9               	movlw	-7
 23326  01405A  1EE3               	comf	plusw1,f,c
 23327  01405C  0EFA               	movlw	-6
 23328  01405E  1EE3               	comf	plusw1,f,c
 23329  014060  0EFB               	movlw	-5
 23330  014062  1EE3               	comf	plusw1,f,c
 23331  014064  0EFC               	movlw	-4
 23332  014066  1EE3               	comf	plusw1,f,c
 23333  014068  0EFD               	movlw	-3
 23334  01406A  1EE3               	comf	plusw1,f,c
 23335  01406C  E314               	bnc	u7370
 23336  01406E  0EF7               	movlw	-9
 23337  014070  2AE3               	incf	plusw1,f,c
 23338  014072  E311               	bnc	u7370
 23339  014074  0EF8               	movlw	-8
 23340  014076  2AE3               	incf	plusw1,f,c
 23341  014078  E30E               	bnc	u7370
 23342  01407A  0EF9               	movlw	-7
 23343  01407C  2AE3               	incf	plusw1,f,c
 23344  01407E  E30B               	bnc	u7370
 23345  014080  0EFA               	movlw	-6
 23346  014082  2AE3               	incf	plusw1,f,c
 23347  014084  E308               	bnc	u7370
 23348  014086  0EFB               	movlw	-5
 23349  014088  2AE3               	incf	plusw1,f,c
 23350  01408A  E305               	bnc	u7370
 23351  01408C  0EFC               	movlw	-4
 23352  01408E  2AE3               	incf	plusw1,f,c
 23353  014090  E302               	bnc	u7370
 23354  014092  0EFD               	movlw	-3
 23355  014094  2AE3               	incf	plusw1,f,c
 23356  014096                     u7370:
 23357                           
 23358                           ;stkvar	_quotient @ sp[(-10)+0]
 23359  014096  0EF6               	movlw	246
 23360  014098  24E1               	addwf	fsr1l,w,c
 23361  01409A  6ED9               	movwf	fsr2l,c
 23362  01409C  0EFF               	movlw	255
 23363  01409E  20E2               	addwfc	fsr1h,w,c
 23364  0140A0  6EDA               	movwf	fsr2h,c
 23365                           
 23366                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 23367  0140A2  0E08               	movlw	8
 23368  0140A4  6E38               	movwf	btemp,c
 23369  0140A6  0EEE               	movlw	-18
 23370  0140A8                     us738999:
 23371  0140A8  006F FF7B FFE3     	movff	postinc2,plusw1
 23372  0140AE  28E8               	incf	wreg,w,c
 23373  0140B0  2E38               	decfsz	btemp,f,c
 23374  0140B2  D7FA               	bra	us738999
 23375                           
 23376                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 23377  0140B4  0EF6               	movlw	246
 23378  0140B6  26E1               	addwf	fsr1l,f,c
 23379  0140B8  0EFF               	movlw	255
 23380  0140BA  22E2               	addwfc	fsr1h,f,c
 23381  0140BC  0012               	return		;funcret
 23382  0140BE                     __end_of___aodiv:
 23383                           	opt callstack 0
 23384                           
 23385 ;; *************** function _ctoa *****************
 23386 ;; Defined at:
 23387 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23390 ;;		 -> f(6), NULL(0), 
 23391 ;;  c               1  [STACK] unsigned char 
 23392 ;; Auto vars:     Size  Location     Type
 23393 ;;  w               2  [STACK] int 
 23394 ;;  l               2    0        int 
 23395 ;; Return value:  Size  Location     Type
 23396 ;;                  2  [STACK] int 
 23397 ;; Registers used:
 23398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23399 ;; Tracked objects:
 23400 ;;		On entry : 0/0
 23401 ;;		On exit  : 0/0
 23402 ;;		Unchanged: 0/0
 23403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;Total ram usage:        0 bytes
 23409 ;; Hardware stack levels used:    1
 23410 ;; Hardware stack levels required when called:    8
 23411 ;; This function calls:
 23412 ;;		_pad
 23413 ;; This function is called by:
 23414 ;;		_vfpfcnvrt
 23415 ;; This function uses a reentrant model
 23416 ;;
 23417                           
 23418                           	psect	text105
 23419  016034                     __ptext105:
 23420                           	opt callstack 0
 23421  016034                     _ctoa:
 23422                           	opt callstack 0
 23423                           
 23424                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23425  016034  52E6               	movf	postinc1,f,c
 23426  016036  52E6               	movf	postinc1,f,c
 23427                           
 23428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 23429                           
 23430                           ;incstack = 0
 23431  016038  5010               	movf	_width,w,c
 23432  01603A  1011               	iorwf	_width+1,w,c
 23433  01603C  A4D8               	btfss	status,2,c
 23434  01603E  D009               	goto	l15426
 23435                           
 23436                           ;stkvar	_w @ sp[(-2)+0]
 23437  016040  0EFE               	movlw	-2
 23438  016042  0060  F043  FFE3   	movff	_width,plusw1
 23439  016048  0EFF               	movlw	-1
 23440  01604A  0060  F047  FFE3   	movff	_width+1,plusw1
 23441  016050  D016               	goto	l15428
 23442  016052                     l15426:
 23443  016052  0EFF               	movlw	255
 23444  016054  6E42               	movwf	btemp+10,c
 23445  016056  0EFF               	movlw	255
 23446  016058  6E43               	movwf	btemp+11,c
 23447  01605A  0060  F040  F040   	movff	_width,btemp+8
 23448  016060  0060  F044  F041   	movff	_width+1,btemp+9
 23449  016066  5042               	movf	btemp+10,w,c
 23450  016068  2640               	addwf	btemp+8,f,c
 23451  01606A  5043               	movf	btemp+11,w,c
 23452  01606C  2241               	addwfc	btemp+9,f,c
 23453                           
 23454                           ;stkvar	_w @ sp[(-2)+0]
 23455  01606E  0EFE               	movlw	-2
 23456  016070  0060  F103  FFE3   	movff	btemp+8,plusw1
 23457  016076  0EFF               	movlw	-1
 23458  016078  0060  F107  FFE3   	movff	btemp+9,plusw1
 23459  01607E                     l15428:
 23460                           
 23461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 23462                           ;stkvar	_c @ sp[(-2)+-3]
 23463  01607E  0EFB               	movlw	-5
 23464  016080  006F FF8C  F1D0    	movff	plusw1,_dbuf
 23465                           
 23466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 23467  016086  0101               	movlb	1	; () banked
 23468  016088  6BD1               	clrf	(_dbuf+1)& (0+255),b
 23469                           
 23470                           ; BSR set to: 1
 23471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 23472                           ;stkvar	_w @ sp[(-2)+0]
 23473  01608A  0EFE               	movlw	-2
 23474  01608C  006F FF8F FFE6     	movff	plusw1,postinc1
 23475  016092  006F FF8F FFE6     	movff	plusw1,postinc1
 23476  016098  0ED0               	movlw	low _dbuf
 23477  01609A  6EE6               	movwf	postinc1,c
 23478  01609C  0E01               	movlw	high _dbuf
 23479  01609E  6EE6               	movwf	postinc1,c
 23480                           
 23481                           ;stkvar	_fp @ sp[(-6)+-2]
 23482  0160A0  0EF8               	movlw	-8
 23483  0160A2  006F FF8F FFE6     	movff	plusw1,postinc1
 23484  0160A8  006F FF8F FFE6     	movff	plusw1,postinc1
 23485  0160AE  EC78  F0A9         	call	_pad	;wreg free
 23486                           
 23487                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 23488  0160B2  0EFB               	movlw	251
 23489  0160B4  26E1               	addwf	fsr1l,f,c
 23490  0160B6  0EFF               	movlw	255
 23491  0160B8  22E2               	addwfc	fsr1h,f,c
 23492  0160BA  0012               	return		;funcret
 23493  0160BC                     __end_of_ctoa:
 23494                           	opt callstack 0
 23495                           
 23496 ;; *************** function _pad *****************
 23497 ;; Defined at:
 23498 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 23499 ;; Parameters:    Size  Location     Type
 23500 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23501 ;;		 -> f(6), NULL(0), 
 23502 ;;  buf             2  [STACK] PTR unsigned char 
 23503 ;;		 -> dbuf(32), 
 23504 ;;  p               2  [STACK] int 
 23505 ;; Auto vars:     Size  Location     Type
 23506 ;;  w               2  [STACK] int 
 23507 ;;  i               2  [STACK] int 
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  2  [STACK] int 
 23510 ;; Registers used:
 23511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23512 ;; Tracked objects:
 23513 ;;		On entry : 0/1
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23521 ;;Total ram usage:        0 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; Hardware stack levels required when called:    7
 23524 ;; This function calls:
 23525 ;;		_fputc
 23526 ;;		_fputs
 23527 ;;		_strlen
 23528 ;; This function is called by:
 23529 ;;		_ctoa
 23530 ;;		_dtoa
 23531 ;;		_xtoa
 23532 ;; This function uses a reentrant model
 23533 ;;
 23534                           
 23535                           	psect	text106
 23536  0152F0                     __ptext106:
 23537                           	opt callstack 0
 23538  0152F0                     _pad:
 23539                           	opt callstack 0
 23540                           
 23541                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23542  0152F0  52E6               	movf	postinc1,f,c
 23543  0152F2  52E6               	movf	postinc1,f,c
 23544  0152F4  52E6               	movf	postinc1,f,c
 23545  0152F6  52E6               	movf	postinc1,f,c
 23546                           
 23547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23548                           
 23549                           ;incstack = 0
 23550  0152F8  A014               	btfss	_flags,0,c
 23551  0152FA  D010               	goto	l15404
 23552                           
 23553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23554                           ;stkvar	_fp @ sp[(-4)+-2]
 23555  0152FC  0EFA               	movlw	-6
 23556  0152FE  006F FF8F FFE6     	movff	plusw1,postinc1
 23557  015304  006F FF8F FFE6     	movff	plusw1,postinc1
 23558                           
 23559                           ;stkvar	_buf @ sp[(-6)+-4]
 23560  01530A  0EF6               	movlw	-10
 23561  01530C  006F FF8F FFE6     	movff	plusw1,postinc1
 23562  015312  006F FF8F FFE6     	movff	plusw1,postinc1
 23563  015318  EC85  F0AF         	call	_fputs	;wreg free
 23564  01531C                     l15404:
 23565                           
 23566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23567                           ;stkvar	_p @ sp[(-4)+-6]
 23568  01531C  0EF7               	movlw	-9
 23569  01531E  BEE3               	btfsc	plusw1,7,c
 23570  015320  D011               	goto	l15408
 23571                           
 23572                           ;stkvar	_p @ sp[(-4)+-6]
 23573                           ;stkvar	_w @ sp[(-4)+0]
 23574  015322  0EF6               	movlw	-10
 23575  015324  006F FF8C  F038    	movff	plusw1,btemp
 23576  01532A  0EFC               	movlw	-4
 23577  01532C  0060  F0E3  FFE3   	movff	btemp,plusw1
 23578  015332  0EF7               	movlw	-9
 23579  015334  006F FF8C  F038    	movff	plusw1,btemp
 23580  01533A  0EFD               	movlw	-3
 23581  01533C  0060  F0E3  FFE3   	movff	btemp,plusw1
 23582  015342  D004               	goto	l2405
 23583  015344                     l15408:
 23584                           
 23585                           ;stkvar	_w @ sp[(-4)+0]
 23586  015344  0EFC               	movlw	-4
 23587  015346  6AE3               	clrf	plusw1,c
 23588  015348  0EFD               	movlw	-3
 23589  01534A  6AE3               	clrf	plusw1,c
 23590  01534C                     l2405:
 23591                           
 23592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23593                           ;stkvar	_i @ sp[(-4)+2]
 23594  01534C  0EFE               	movlw	-2
 23595  01534E  6AE3               	clrf	plusw1,c
 23596  015350  0EFF               	movlw	-1
 23597  015352  6AE3               	clrf	plusw1,c
 23598                           
 23599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23600  015354  D01E               	goto	l15414
 23601  015356                     l15410:
 23602                           
 23603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23604                           ;stkvar	_fp @ sp[(-4)+-2]
 23605  015356  0EFA               	movlw	-6
 23606  015358  006F FF8F FFE6     	movff	plusw1,postinc1
 23607  01535E  006F FF8F FFE6     	movff	plusw1,postinc1
 23608  015364  0E20               	movlw	32
 23609  015366  6EE6               	movwf	postinc1,c
 23610  015368  0E00               	movlw	0
 23611  01536A  6EE6               	movwf	postinc1,c
 23612  01536C  EC55  F0A8         	call	_fputc	;wreg free
 23613                           
 23614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23615                           ;stkvar	_i @ sp[(-4)+2]
 23616  015370  0EFE               	movlw	-2
 23617  015372  50E3               	movf	plusw1,w,c
 23618  015374  0F01               	addlw	1
 23619  015376  6E38               	movwf	btemp,c
 23620  015378  0EFE               	movlw	-2
 23621  01537A  0060  F0E3  FFE3   	movff	btemp,plusw1
 23622  015380  6A38               	clrf	btemp,c
 23623  015382  0EFF               	movlw	-1
 23624  015384  50E3               	movf	plusw1,w,c
 23625  015386  2038               	addwfc	btemp,w,c
 23626  015388  6E38               	movwf	btemp,c
 23627  01538A  0EFF               	movlw	-1
 23628  01538C  0060  F0E3  FFE3   	movff	btemp,plusw1
 23629  015392                     l15414:
 23630                           
 23631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23632                           ;stkvar	_w @ sp[(-4)+0]
 23633                           ;stkvar	_i @ sp[(-4)+2]
 23634  015392  50E1               	movf	fsr1l,w,c
 23635  015394  0FFE               	addlw	-2
 23636  015396  6ED9               	movwf	fsr2l,c
 23637  015398  50E2               	movf	fsr1h,w,c
 23638  01539A  6EDA               	movwf	fsr2h,c
 23639  01539C  0EFF               	movlw	255
 23640  01539E  22DA               	addwfc	fsr2h,f,c
 23641  0153A0  0EFC               	movlw	-4
 23642  0153A2  50E3               	movf	plusw1,w,c
 23643  0153A4  5CDE               	subwf	postinc2,w,c
 23644  0153A6  50DE               	movf	postinc2,w,c
 23645  0153A8  0A80               	xorlw	128
 23646  0153AA  6E38               	movwf	btemp,c
 23647  0153AC  0EFD               	movlw	-3
 23648  0153AE  50E3               	movf	plusw1,w,c
 23649  0153B0  0A80               	xorlw	128
 23650  0153B2  5838               	subwfb	btemp,w,c
 23651  0153B4  A0D8               	btfss	status,0,c
 23652  0153B6  D7CF               	goto	l15410
 23653                           
 23654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23655  0153B8  B014               	btfsc	_flags,0,c
 23656  0153BA  D010               	goto	l15418
 23657                           
 23658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23659                           ;stkvar	_fp @ sp[(-4)+-2]
 23660  0153BC  0EFA               	movlw	-6
 23661  0153BE  006F FF8F FFE6     	movff	plusw1,postinc1
 23662  0153C4  006F FF8F FFE6     	movff	plusw1,postinc1
 23663                           
 23664                           ;stkvar	_buf @ sp[(-6)+-4]
 23665  0153CA  0EF6               	movlw	-10
 23666  0153CC  006F FF8F FFE6     	movff	plusw1,postinc1
 23667  0153D2  006F FF8F FFE6     	movff	plusw1,postinc1
 23668  0153D8  EC85  F0AF         	call	_fputs	;wreg free
 23669  0153DC                     l15418:
 23670                           
 23671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23672                           ;stkvar	_w @ sp[(-4)+0]
 23673                           ;stkvar	_buf @ sp[(-4)+-4]
 23674  0153DC  0EF8               	movlw	-8
 23675  0153DE  006F FF8F FFE6     	movff	plusw1,postinc1
 23676  0153E4  006F FF8F FFE6     	movff	plusw1,postinc1
 23677  0153EA  EC34  F0AF         	call	_strlen	;wreg free
 23678  0153EE  0EFC               	movlw	-4
 23679  0153F0  50E3               	movf	plusw1,w,c
 23680  0153F2  2638               	addwf	btemp,f,c
 23681  0153F4  0EFD               	movlw	-3
 23682  0153F6  50E3               	movf	plusw1,w,c
 23683  0153F8  2239               	addwfc	btemp+1,f,c
 23684                           
 23685                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 23686  0153FA  0EF6               	movlw	246
 23687  0153FC  26E1               	addwf	fsr1l,f,c
 23688  0153FE  0EFF               	movlw	255
 23689  015400  22E2               	addwfc	fsr1h,f,c
 23690  015402  0012               	return		;funcret
 23691  015404                     __end_of_pad:
 23692                           	opt callstack 0
 23693                           
 23694 ;; *************** function _strlen *****************
 23695 ;; Defined at:
 23696 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 23697 ;; Parameters:    Size  Location     Type
 23698 ;;  s               2  [STACK] PTR const unsigned char 
 23699 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 23700 ;;		 -> STR_36(9), STR_35(12), T(256), D.lcd(512), 
 23701 ;;		 -> D(514), STR_30(6), STR_7(6), STR_3(6), 
 23702 ;;		 -> V.terminal(160), V(384), 
 23703 ;; Auto vars:     Size  Location     Type
 23704 ;;  a               2  [STACK] PTR const unsigned char 
 23705 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 23706 ;;		 -> STR_36(9), STR_35(12), T(256), D.lcd(512), 
 23707 ;;		 -> D(514), STR_30(6), STR_7(6), STR_3(6), 
 23708 ;;		 -> V.terminal(160), V(384), 
 23709 ;; Return value:  Size  Location     Type
 23710 ;;                  2  [STACK] unsigned int 
 23711 ;; Registers used:
 23712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 23713 ;; Tracked objects:
 23714 ;;		On entry : 0/0
 23715 ;;		On exit  : 0/0
 23716 ;;		Unchanged: 0/0
 23717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23722 ;;Total ram usage:        0 bytes
 23723 ;; Hardware stack levels used:    1
 23724 ;; Hardware stack levels required when called:    3
 23725 ;; This function calls:
 23726 ;;		Nothing
 23727 ;; This function is called by:
 23728 ;;		_eaDogM_WriteString
 23729 ;;		_pad
 23730 ;;		_stoa
 23731 ;; This function uses a reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text107
 23735  015E68                     __ptext107:
 23736                           	opt callstack 0
 23737  015E68                     _strlen:
 23738                           	opt callstack 0
 23739                           
 23740                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23741  015E68  52E6               	movf	postinc1,f,c
 23742  015E6A  52E6               	movf	postinc1,f,c
 23743                           
 23744                           ;stkvar	_s @ sp[(-2)+-2]
 23745                           
 23746                           ;incstack = 0
 23747  015E6C  0EFC               	movlw	-4
 23748  015E6E  006F FF8C  F042    	movff	plusw1,btemp+10
 23749  015E74  0EFD               	movlw	-3
 23750  015E76  006F FF8C  F043    	movff	plusw1,btemp+11
 23751                           
 23752                           ;stkvar	_a @ sp[(-2)+0]
 23753  015E7C  0EFF               	movlw	-1
 23754  015E7E  0060  F10F  FFE3   	movff	btemp+11,plusw1
 23755  015E84  0EFE               	movlw	-2
 23756  015E86  0060  F10B  FFE3   	movff	btemp+10,plusw1
 23757  015E8C  D011               	goto	l11738
 23758  015E8E                     l11736:
 23759                           
 23760                           ;stkvar	_s @ sp[(-2)+-2]
 23761  015E8E  0EFC               	movlw	-4
 23762  015E90  50E3               	movf	plusw1,w,c
 23763  015E92  0F01               	addlw	1
 23764  015E94  6E38               	movwf	btemp,c
 23765  015E96  0EFC               	movlw	-4
 23766  015E98  0060  F0E3  FFE3   	movff	btemp,plusw1
 23767  015E9E  6A38               	clrf	btemp,c
 23768  015EA0  0EFD               	movlw	-3
 23769  015EA2  50E3               	movf	plusw1,w,c
 23770  015EA4  2038               	addwfc	btemp,w,c
 23771  015EA6  6E38               	movwf	btemp,c
 23772  015EA8  0EFD               	movlw	-3
 23773  015EAA  0060  F0E3  FFE3   	movff	btemp,plusw1
 23774  015EB0                     l11738:
 23775                           
 23776                           ;stkvar	_s @ sp[(-2)+-2]
 23777  015EB0  0EFC               	movlw	-4
 23778  015EB2  006F FF8F FFF6     	movff	plusw1,tblptrl
 23779  015EB8  0EFD               	movlw	-3
 23780  015EBA  006F FF8F FFF7     	movff	plusw1,tblptrh
 23781  015EC0  0E00               	movlw	low (__mediumconst shr (0+16))
 23782  015EC2  6EF8               	movwf	tblptru,c
 23783  015EC4  0E1F               	movlw	(high __ramtop+-1)
 23784  015EC6  64F7               	cpfsgt	tblptrh,c
 23785  015EC8  D003               	bra	u7107
 23786  015ECA  0008               	tblrd		*
 23787  015ECC  50F5               	movf	tablat,w,c
 23788  015ECE  D007               	bra	u7100
 23789  015ED0                     u7107:
 23790  015ED0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23791  015ED6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23792  015EDC  50EF               	movf	indf0,w,c
 23793  015EDE                     u7100:
 23794  015EDE  0900               	iorlw	0
 23795  015EE0  A4D8               	btfss	status,2,c
 23796  015EE2  D7D5               	goto	l11736
 23797                           
 23798                           ;stkvar	_a @ sp[(-2)+0]
 23799                           ;stkvar	_s @ sp[(-2)+-2]
 23800  015EE4  0EFC               	movlw	-4
 23801  015EE6  006F FF8C  F038    	movff	plusw1,btemp
 23802  015EEC  0EFD               	movlw	-3
 23803  015EEE  006F FF8C  F039    	movff	plusw1,btemp+1
 23804  015EF4  0EFE               	movlw	-2
 23805  015EF6  50E3               	movf	plusw1,w,c
 23806  015EF8  5E38               	subwf	btemp,f,c
 23807  015EFA  0EFF               	movlw	-1
 23808  015EFC  50E3               	movf	plusw1,w,c
 23809  015EFE  5A39               	subwfb	btemp+1,f,c
 23810                           
 23811                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23812  015F00  52E5               	movf	postdec1,f,c
 23813  015F02  52E5               	movf	postdec1,f,c
 23814  015F04  52E5               	movf	postdec1,f,c
 23815  015F06  52E5               	movf	postdec1,f,c
 23816  015F08  0012               	return		;funcret
 23817  015F0A                     __end_of_strlen:
 23818                           	opt callstack 0
 23819                           
 23820 ;; *************** function _fputs *****************
 23821 ;; Defined at:
 23822 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;  s               2  [STACK] PTR const unsigned char 
 23825 ;;		 -> dbuf(32), 
 23826 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23827 ;;		 -> f(6), NULL(0), 
 23828 ;; Auto vars:     Size  Location     Type
 23829 ;;  i               2  [STACK] int 
 23830 ;;  c               1  [STACK] unsigned char 
 23831 ;; Return value:  Size  Location     Type
 23832 ;;                  2  [STACK] int 
 23833 ;; Registers used:
 23834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23835 ;; Tracked objects:
 23836 ;;		On entry : 0/1
 23837 ;;		On exit  : 0/0
 23838 ;;		Unchanged: 0/0
 23839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23844 ;;Total ram usage:        0 bytes
 23845 ;; Hardware stack levels used:    1
 23846 ;; Hardware stack levels required when called:    6
 23847 ;; This function calls:
 23848 ;;		_fputc
 23849 ;; This function is called by:
 23850 ;;		_pad
 23851 ;; This function uses a reentrant model
 23852 ;;
 23853                           
 23854                           	psect	text108
 23855  015F0A                     __ptext108:
 23856                           	opt callstack 0
 23857  015F0A                     _fputs:
 23858                           	opt callstack 0
 23859                           
 23860                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23861  015F0A  52E6               	movf	postinc1,f,c
 23862  015F0C  52E6               	movf	postinc1,f,c
 23863  015F0E  52E6               	movf	postinc1,f,c
 23864                           
 23865                           ;stkvar	_i @ sp[(-3)+0]
 23866                           
 23867                           ;incstack = 0
 23868  015F10  0EFD               	movlw	-3
 23869  015F12  6AE3               	clrf	plusw1,c
 23870  015F14  0EFE               	movlw	-2
 23871  015F16  6AE3               	clrf	plusw1,c
 23872  015F18  D01F               	goto	l15398
 23873  015F1A                     l15394:
 23874                           
 23875                           ;stkvar	_fp @ sp[(-3)+-4]
 23876  015F1A  0EF9               	movlw	-7
 23877  015F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 23878  015F22  006F FF8F FFE6     	movff	plusw1,postinc1
 23879                           
 23880                           ;stkvar	_c @ sp[(-5)+2]
 23881  015F28  0EFD               	movlw	-3
 23882  015F2A  50E3               	movf	plusw1,w,c
 23883  015F2C  6EE6               	movwf	postinc1,c
 23884  015F2E  0E00               	movlw	0
 23885  015F30  6EE6               	movwf	postinc1,c
 23886  015F32  EC55  F0A8         	call	_fputc	;wreg free
 23887                           
 23888                           ;stkvar	_i @ sp[(-3)+0]
 23889  015F36  0EFD               	movlw	-3
 23890  015F38  50E3               	movf	plusw1,w,c
 23891  015F3A  0F01               	addlw	1
 23892  015F3C  6E38               	movwf	btemp,c
 23893  015F3E  0EFD               	movlw	-3
 23894  015F40  0060  F0E3  FFE3   	movff	btemp,plusw1
 23895  015F46  6A38               	clrf	btemp,c
 23896  015F48  0EFE               	movlw	-2
 23897  015F4A  50E3               	movf	plusw1,w,c
 23898  015F4C  2038               	addwfc	btemp,w,c
 23899  015F4E  6E38               	movwf	btemp,c
 23900  015F50  0EFE               	movlw	-2
 23901  015F52  0060  F0E3  FFE3   	movff	btemp,plusw1
 23902  015F58                     l15398:
 23903                           
 23904                           ;stkvar	_i @ sp[(-3)+0]
 23905  015F58  0EFD               	movlw	-3
 23906  015F5A  006F FF8C  F042    	movff	plusw1,btemp+10
 23907  015F60  0EFE               	movlw	-2
 23908  015F62  006F FF8C  F043    	movff	plusw1,btemp+11
 23909                           
 23910                           ;stkvar	_s @ sp[(-3)+-2]
 23911  015F68  0EFB               	movlw	-5
 23912  015F6A  006F FF8C  F040    	movff	plusw1,btemp+8
 23913  015F70  0EFC               	movlw	-4
 23914  015F72  006F FF8C  F041    	movff	plusw1,btemp+9
 23915  015F78  5042               	movf	btemp+10,w,c
 23916  015F7A  2440               	addwf	btemp+8,w,c
 23917  015F7C  6ED9               	movwf	fsr2l,c
 23918  015F7E  5043               	movf	btemp+11,w,c
 23919  015F80  2041               	addwfc	btemp+9,w,c
 23920  015F82  6EDA               	movwf	fsr2h,c
 23921  015F84  50DF               	movf	indf2,w,c
 23922  015F86  6E43               	movwf	btemp+11,c
 23923                           
 23924                           ;stkvar	_c @ sp[(-3)+2]
 23925  015F88  0EFF               	movlw	-1
 23926  015F8A  0060  F10F  FFE3   	movff	btemp+11,plusw1
 23927  015F90  0EFF               	movlw	-1
 23928  015F92  50E3               	movf	plusw1,w,c
 23929  015F94  A4D8               	btfss	status,2,c
 23930  015F96  D7C1               	goto	l15394
 23931                           
 23932                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23933  015F98  0EF9               	movlw	249
 23934  015F9A  26E1               	addwf	fsr1l,f,c
 23935  015F9C  0EFF               	movlw	255
 23936  015F9E  22E2               	addwfc	fsr1h,f,c
 23937  015FA0  0012               	return		;funcret
 23938  015FA2                     __end_of_fputs:
 23939                           	opt callstack 0
 23940                           
 23941 ;; *************** function _fputc *****************
 23942 ;; Defined at:
 23943 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;  c               2  [STACK] int 
 23946 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23947 ;;		 -> f(6), NULL(0), 
 23948 ;; Auto vars:     Size  Location     Type
 23949 ;;		None
 23950 ;; Return value:  Size  Location     Type
 23951 ;;                  2  [STACK] int 
 23952 ;; Registers used:
 23953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23954 ;; Tracked objects:
 23955 ;;		On entry : 0/0
 23956 ;;		On exit  : 0/0
 23957 ;;		Unchanged: 0/0
 23958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;Total ram usage:        0 bytes
 23964 ;; Hardware stack levels used:    1
 23965 ;; Hardware stack levels required when called:    5
 23966 ;; This function calls:
 23967 ;;		_putch
 23968 ;; This function is called by:
 23969 ;;		_pad
 23970 ;;		_stoa
 23971 ;;		_vfpfcnvrt
 23972 ;;		_fputs
 23973 ;; This function uses a reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text109
 23977  0150AA                     __ptext109:
 23978                           	opt callstack 0
 23979  0150AA                     _fputc:
 23980                           	opt callstack 16
 23981                           
 23982                           ;stkvar	_fp @ sp[(0)+-4]
 23983                           
 23984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23985                           ;incstack = 0
 23986  0150AA  0EFC               	movlw	-4
 23987  0150AC  006F FF8C  F038    	movff	plusw1,btemp
 23988  0150B2  0EFD               	movlw	-3
 23989  0150B4  50E3               	movf	plusw1,w,c
 23990  0150B6  1038               	iorwf	btemp,w,c
 23991  0150B8  B4D8               	btfsc	status,2,c
 23992  0150BA  D009               	goto	u7070
 23993                           
 23994                           ;stkvar	_fp @ sp[(0)+-4]
 23995  0150BC  0EFC               	movlw	-4
 23996  0150BE  006F FF8C  F038    	movff	plusw1,btemp
 23997  0150C4  0EFD               	movlw	-3
 23998  0150C6  50E3               	movf	plusw1,w,c
 23999  0150C8  1038               	iorwf	btemp,w,c
 24000  0150CA  A4D8               	btfss	status,2,c
 24001  0150CC  D006               	goto	l11724
 24002  0150CE                     u7070:
 24003                           
 24004                           ;stkvar	_c @ sp[(0)+-2]
 24005  0150CE  0EFE               	movlw	-2
 24006  0150D0  50E3               	movf	plusw1,w,c
 24007  0150D2  6EE6               	movwf	postinc1,c
 24008  0150D4  ECF2  F0B8         	call	_putch	;wreg free
 24009  0150D8  D075               	goto	l3236
 24010  0150DA                     l11724:
 24011                           
 24012                           ;stkvar	_fp @ sp[(0)+-4]
 24013  0150DA  0EFC               	movlw	-4
 24014  0150DC  006F FF8C  F042    	movff	plusw1,btemp+10
 24015  0150E2  0EFD               	movlw	-3
 24016  0150E4  006F FF8C  F043    	movff	plusw1,btemp+11
 24017  0150EA  0E04               	movlw	4
 24018  0150EC  2442               	addwf	btemp+10,w,c
 24019  0150EE  6ED9               	movwf	fsr2l,c
 24020  0150F0  0E00               	movlw	0
 24021  0150F2  2043               	addwfc	btemp+11,w,c
 24022  0150F4  6EDA               	movwf	fsr2h,c
 24023  0150F6  50DE               	movf	postinc2,w,c
 24024  0150F8  10DE               	iorwf	postinc2,w,c
 24025  0150FA  B4D8               	btfsc	status,2,c
 24026  0150FC  D026               	goto	u7090
 24027                           
 24028                           ;stkvar	_fp @ sp[(0)+-4]
 24029  0150FE  0EFC               	movlw	-4
 24030  015100  006F FF8C  F042    	movff	plusw1,btemp+10
 24031  015106  0EFD               	movlw	-3
 24032  015108  006F FF8C  F043    	movff	plusw1,btemp+11
 24033  01510E  0E04               	movlw	4
 24034  015110  2442               	addwf	btemp+10,w,c
 24035  015112  6ED9               	movwf	fsr2l,c
 24036  015114  0E00               	movlw	0
 24037  015116  2043               	addwfc	btemp+11,w,c
 24038  015118  6EDA               	movwf	fsr2h,c
 24039                           
 24040                           ;stkvar	_fp @ sp[(0)+-4]
 24041  01511A  0EFC               	movlw	-4
 24042  01511C  006F FF8C  F042    	movff	plusw1,btemp+10
 24043  015122  0EFD               	movlw	-3
 24044  015124  006F FF8C  F043    	movff	plusw1,btemp+11
 24045  01512A  0E02               	movlw	2
 24046  01512C  2442               	addwf	btemp+10,w,c
 24047  01512E  6EE9               	movwf	fsr0l,c
 24048  015130  0E00               	movlw	0
 24049  015132  2043               	addwfc	btemp+11,w,c
 24050  015134  6EEA               	movwf	fsr0h,c
 24051  015136  50DE               	movf	postinc2,w,c
 24052  015138  5CEE               	subwf	postinc0,w,c
 24053  01513A  50EE               	movf	postinc0,w,c
 24054  01513C  0A80               	xorlw	128
 24055  01513E  6E38               	movwf	btemp,c
 24056  015140  50DE               	movf	postinc2,w,c
 24057  015142  0A80               	xorlw	128
 24058  015144  5838               	subwfb	btemp,w,c
 24059  015146  B0D8               	btfsc	status,0,c
 24060  015148  D03D               	goto	l3236
 24061  01514A                     u7090:
 24062                           
 24063                           ;stkvar	_c @ sp[(0)+-2]
 24064                           ;stkvar	_fp @ sp[(0)+-4]
 24065  01514A  0EFC               	movlw	-4
 24066  01514C  006F FF8C  F042    	movff	plusw1,btemp+10
 24067  015152  0EFD               	movlw	-3
 24068  015154  006F FF8C  F043    	movff	plusw1,btemp+11
 24069  01515A  0E02               	movlw	2
 24070  01515C  2442               	addwf	btemp+10,w,c
 24071  01515E  6ED9               	movwf	fsr2l,c
 24072  015160  0E00               	movlw	0
 24073  015162  2043               	addwfc	btemp+11,w,c
 24074  015164  6EDA               	movwf	fsr2h,c
 24075  015166  006F FF78  F042    	movff	postinc2,btemp+10
 24076  01516C  006F FF74  F043    	movff	postdec2,btemp+11
 24077                           
 24078                           ;stkvar	_fp @ sp[(0)+-4]
 24079  015172  0EFC               	movlw	-4
 24080  015174  006F FF8F FFD9     	movff	plusw1,fsr2l
 24081  01517A  0EFD               	movlw	-3
 24082  01517C  006F FF8F FFDA     	movff	plusw1,fsr2h
 24083  015182  006F FF78  F040    	movff	postinc2,btemp+8
 24084  015188  006F FF74  F041    	movff	postdec2,btemp+9
 24085  01518E  5042               	movf	btemp+10,w,c
 24086  015190  2440               	addwf	btemp+8,w,c
 24087  015192  6ED9               	movwf	fsr2l,c
 24088  015194  5043               	movf	btemp+11,w,c
 24089  015196  2041               	addwfc	btemp+9,w,c
 24090  015198  6EDA               	movwf	fsr2h,c
 24091  01519A  0EFE               	movlw	-2
 24092  01519C  006F FF8F FFDF     	movff	plusw1,indf2
 24093                           
 24094                           ;stkvar	_fp @ sp[(0)+-4]
 24095  0151A2  0EFC               	movlw	-4
 24096  0151A4  006F FF8C  F042    	movff	plusw1,btemp+10
 24097  0151AA  0EFD               	movlw	-3
 24098  0151AC  006F FF8C  F043    	movff	plusw1,btemp+11
 24099  0151B2  0E02               	movlw	2
 24100  0151B4  2442               	addwf	btemp+10,w,c
 24101  0151B6  6ED9               	movwf	fsr2l,c
 24102  0151B8  0E00               	movlw	0
 24103  0151BA  2043               	addwfc	btemp+11,w,c
 24104  0151BC  6EDA               	movwf	fsr2h,c
 24105  0151BE  2ADE               	incf	postinc2,f,c
 24106  0151C0  0E00               	movlw	0
 24107  0151C2  22DD               	addwfc	postdec2,f,c
 24108  0151C4                     l3236:
 24109                           
 24110                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24111  0151C4  52E5               	movf	postdec1,f,c
 24112  0151C6  52E5               	movf	postdec1,f,c
 24113  0151C8  52E5               	movf	postdec1,f,c
 24114  0151CA  52E5               	movf	postdec1,f,c
 24115  0151CC  0012               	return		;funcret
 24116  0151CE                     __end_of_fputc:
 24117                           	opt callstack 0
 24118                           
 24119 ;; *************** function _putch *****************
 24120 ;; Defined at:
 24121 ;;		line 155 in file "eadog.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  c               1  [STACK] unsigned char 
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;		None
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1  [STACK] void 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;Total ram usage:        0 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:    4
 24142 ;; This function calls:
 24143 ;;		_ringBufS_put_dma
 24144 ;; This function is called by:
 24145 ;;		_fputc
 24146 ;; This function uses a reentrant model
 24147 ;;
 24148                           
 24149                           	psect	text110
 24150  0171E4                     __ptext110:
 24151                           	opt callstack 0
 24152  0171E4                     _putch:
 24153                           	opt callstack 16
 24154                           
 24155                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 24156                           ;stkvar	_c @ sp[(0)+-1]
 24157                           
 24158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24159                           ;incstack = 0
 24160  0171E4  0EFF               	movlw	-1
 24161  0171E6  50E3               	movf	plusw1,w,c
 24162  0171E8  6EE6               	movwf	postinc1,c
 24163  0171EA  0060  F22F  FFE6   	movff	_spi_link+6,postinc1
 24164  0171F0  0060  F233  FFE6   	movff	_spi_link+7,postinc1
 24165  0171F6  EC37  F0AE         	call	_ringBufS_put_dma	;wreg free
 24166                           
 24167                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 24168  0171FA  52E5               	movf	postdec1,f,c
 24169  0171FC  0012               	return		;funcret
 24170  0171FE                     __end_of_putch:
 24171                           	opt callstack 0
 24172                           
 24173 ;; *************** function _ringBufS_put_dma *****************
 24174 ;; Defined at:
 24175 ;;		line 67 in file "ringbufs.c"
 24176 ;; Parameters:    Size  Location     Type
 24177 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24178 ;;		 -> ring_buf1(67), 
 24179 ;;  c               1  [STACK] const unsigned char 
 24180 ;; Auto vars:     Size  Location     Type
 24181 ;;		None
 24182 ;; Return value:  Size  Location     Type
 24183 ;;                  1  [STACK] void 
 24184 ;; Registers used:
 24185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24186 ;; Tracked objects:
 24187 ;;		On entry : 0/0
 24188 ;;		On exit  : 0/0
 24189 ;;		Unchanged: 0/0
 24190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24195 ;;Total ram usage:        0 bytes
 24196 ;; Hardware stack levels used:    1
 24197 ;; Hardware stack levels required when called:    3
 24198 ;; This function calls:
 24199 ;;		Nothing
 24200 ;; This function is called by:
 24201 ;;		_putch
 24202 ;; This function uses a reentrant model
 24203 ;;
 24204                           
 24205                           	psect	text111
 24206  015C6E                     __ptext111:
 24207                           	opt callstack 0
 24208  015C6E                     _ringBufS_put_dma:
 24209                           	opt callstack 16
 24210                           
 24211                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 24212                           ;stkvar	__this @ sp[(0)+-2]
 24213                           
 24214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24215                           ;incstack = 0
 24216  015C6E  0EFE               	movlw	-2
 24217  015C70  006F FF8C  F042    	movff	plusw1,btemp+10
 24218  015C76  0EFF               	movlw	-1
 24219  015C78  006F FF8C  F043    	movff	plusw1,btemp+11
 24220  015C7E  0E42               	movlw	66
 24221  015C80  2442               	addwf	btemp+10,w,c
 24222  015C82  6ED9               	movwf	fsr2l,c
 24223  015C84  0E00               	movlw	0
 24224  015C86  2043               	addwfc	btemp+11,w,c
 24225  015C88  6EDA               	movwf	fsr2h,c
 24226  015C8A  0E40               	movlw	64
 24227  015C8C  60DF               	cpfslt	indf2,c
 24228  015C8E  D040               	goto	l1678
 24229                           
 24230                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24231                           ;stkvar	_c @ sp[(0)+-3]
 24232                           ;stkvar	__this @ sp[(0)+-2]
 24233  015C90  0EFE               	movlw	-2
 24234  015C92  006F FF8C  F042    	movff	plusw1,btemp+10
 24235  015C98  0EFF               	movlw	-1
 24236  015C9A  006F FF8C  F043    	movff	plusw1,btemp+11
 24237  015CA0  0E40               	movlw	64
 24238  015CA2  2442               	addwf	btemp+10,w,c
 24239  015CA4  6ED9               	movwf	fsr2l,c
 24240  015CA6  0E00               	movlw	0
 24241  015CA8  2043               	addwfc	btemp+11,w,c
 24242  015CAA  6EDA               	movwf	fsr2h,c
 24243  015CAC  50DF               	movf	indf2,w,c
 24244  015CAE  6E43               	movwf	btemp+11,c
 24245                           
 24246                           ;stkvar	__this @ sp[(0)+-2]
 24247  015CB0  0EFE               	movlw	-2
 24248  015CB2  006F FF8C  F040    	movff	plusw1,btemp+8
 24249  015CB8  0EFF               	movlw	-1
 24250  015CBA  006F FF8C  F041    	movff	plusw1,btemp+9
 24251  015CC0  5043               	movf	btemp+11,w,c
 24252  015CC2  2440               	addwf	btemp+8,w,c
 24253  015CC4  6ED9               	movwf	fsr2l,c
 24254  015CC6  0E00               	movlw	0
 24255  015CC8  2041               	addwfc	btemp+9,w,c
 24256  015CCA  6EDA               	movwf	fsr2h,c
 24257  015CCC  0EFD               	movlw	-3
 24258  015CCE  006F FF8F FFDF     	movff	plusw1,indf2
 24259                           
 24260                           ;ringbufs.c: 71:   ++_this->head;
 24261                           ;stkvar	__this @ sp[(0)+-2]
 24262  015CD4  0EFE               	movlw	-2
 24263  015CD6  006F FF8C  F042    	movff	plusw1,btemp+10
 24264  015CDC  0EFF               	movlw	-1
 24265  015CDE  006F FF8C  F043    	movff	plusw1,btemp+11
 24266  015CE4  0E40               	movlw	64
 24267  015CE6  2442               	addwf	btemp+10,w,c
 24268  015CE8  6ED9               	movwf	fsr2l,c
 24269  015CEA  0E00               	movlw	0
 24270  015CEC  2043               	addwfc	btemp+11,w,c
 24271  015CEE  6EDA               	movwf	fsr2h,c
 24272  015CF0  2ADF               	incf	indf2,f,c
 24273                           
 24274                           ;ringbufs.c: 72:   ++_this->count;
 24275                           ;stkvar	__this @ sp[(0)+-2]
 24276  015CF2  0EFE               	movlw	-2
 24277  015CF4  006F FF8C  F042    	movff	plusw1,btemp+10
 24278  015CFA  0EFF               	movlw	-1
 24279  015CFC  006F FF8C  F043    	movff	plusw1,btemp+11
 24280  015D02  0E42               	movlw	66
 24281  015D04  2442               	addwf	btemp+10,w,c
 24282  015D06  6ED9               	movwf	fsr2l,c
 24283  015D08  0E00               	movlw	0
 24284  015D0A  2043               	addwfc	btemp+11,w,c
 24285  015D0C  6EDA               	movwf	fsr2h,c
 24286  015D0E  2ADF               	incf	indf2,f,c
 24287  015D10                     l1678:
 24288                           
 24289                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 24290  015D10  52E5               	movf	postdec1,f,c
 24291  015D12  52E5               	movf	postdec1,f,c
 24292  015D14  52E5               	movf	postdec1,f,c
 24293  015D16  0012               	return		;funcret
 24294  015D18                     __end_of_ringBufS_put_dma:
 24295                           	opt callstack 0
 24296                           
 24297 ;; *************** function _get_vterm_ptr *****************
 24298 ;; Defined at:
 24299 ;;		line 122 in file "mconfig.c"
 24300 ;; Parameters:    Size  Location     Type
 24301 ;;  line            1  [STACK] unsigned char 
 24302 ;;  vterm           1  [STACK] unsigned char 
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;		None
 24305 ;; Return value:  Size  Location     Type
 24306 ;;                  2  [STACK] PTR unsigned char 
 24307 ;; Registers used:
 24308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24309 ;; Tracked objects:
 24310 ;;		On entry : 0/0
 24311 ;;		On exit  : 0/0
 24312 ;;		Unchanged: 0/0
 24313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;Total ram usage:        0 bytes
 24319 ;; Hardware stack levels used:    1
 24320 ;; Hardware stack levels required when called:    3
 24321 ;; This function calls:
 24322 ;;		Nothing
 24323 ;; This function is called by:
 24324 ;;		_main
 24325 ;;		_check_help
 24326 ;;		_vterm_dump
 24327 ;;		_vterm_sequence
 24328 ;;		_MyeaDogM_WriteStringAtPos
 24329 ;; This function uses a reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text112
 24333  016BC4                     __ptext112:
 24334                           	opt callstack 0
 24335  016BC4                     _get_vterm_ptr:
 24336                           	opt callstack 24
 24337                           
 24338                           ;mconfig.c: 122: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 123: {;mco
      +                          nfig.c: 124:  return D.lcd[vterm & 0x03][line & 0x03];
 24339                           ;stkvar	_vterm @ sp[(0)+-2]
 24340                           
 24341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24342                           ;incstack = 0
 24343  016BC4  0EFE               	movlw	-2
 24344  016BC6  50E3               	movf	plusw1,w,c
 24345  016BC8  0B03               	andlw	3
 24346  016BCA  0D80               	mullw	128
 24347  016BCC  0E00               	movlw	low _D
 24348  016BCE  6E38               	movwf	btemp,c
 24349  016BD0  0E07               	movlw	high _D
 24350  016BD2  6E39               	movwf	btemp+1,c
 24351  016BD4  50F3               	movf	prodl,w,c
 24352  016BD6  2638               	addwf	btemp,f,c
 24353  016BD8  50F4               	movf	prodh,w,c
 24354  016BDA  2239               	addwfc	btemp+1,f,c
 24355                           
 24356                           ;stkvar	_line @ sp[(0)+-1]
 24357  016BDC  0EFF               	movlw	-1
 24358  016BDE  50E3               	movf	plusw1,w,c
 24359  016BE0  0B03               	andlw	3
 24360  016BE2  0D20               	mullw	32
 24361  016BE4  50F3               	movf	prodl,w,c
 24362  016BE6  2638               	addwf	btemp,f,c
 24363  016BE8  50F4               	movf	prodh,w,c
 24364  016BEA  2239               	addwfc	btemp+1,f,c
 24365                           
 24366                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24367  016BEC  52E5               	movf	postdec1,f,c
 24368  016BEE  52E5               	movf	postdec1,f,c
 24369  016BF0  0012               	return		;funcret
 24370  016BF2                     __end_of_get_vterm_ptr:
 24371                           	opt callstack 0
 24372                           
 24373 ;; *************** function _TimerDone *****************
 24374 ;; Defined at:
 24375 ;;		line 20 in file "timers.c"
 24376 ;; Parameters:    Size  Location     Type
 24377 ;;  timer           1  [STACK] const unsigned char 
 24378 ;; Auto vars:     Size  Location     Type
 24379 ;;		None
 24380 ;; Return value:  Size  Location     Type
 24381 ;;                  1  [STACK] _Bool 
 24382 ;; Registers used:
 24383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24384 ;; Tracked objects:
 24385 ;;		On entry : 0/3C
 24386 ;;		On exit  : 0/0
 24387 ;;		Unchanged: 0/0
 24388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24393 ;;Total ram usage:        0 bytes
 24394 ;; Hardware stack levels used:    1
 24395 ;; Hardware stack levels required when called:    3
 24396 ;; This function calls:
 24397 ;;		Nothing
 24398 ;; This function is called by:
 24399 ;;		_main
 24400 ;;		_m_protocol
 24401 ;;		_r_protocol
 24402 ;;		_t_protocol
 24403 ;;		_secs_II_message
 24404 ;;		_secs_gem_state
 24405 ;;		_WaitMs
 24406 ;;		_help_button
 24407 ;;		_check_help
 24408 ;;		_MyeaDogM_WriteStringAtPos
 24409 ;;		_set_display_info
 24410 ;; This function uses a reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text113
 24414  016FEA                     __ptext113:
 24415                           	opt callstack 0
 24416  016FEA                     _TimerDone:
 24417                           	opt callstack 24
 24418                           
 24419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24420                           ;incstack = 0
 24421  016FEA  0004               	clrwdt		;# 
 24422                           
 24423                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24424                           ;stkvar	_timer @ sp[(0)+-1]
 24425  016FEC  0EFF               	movlw	-1
 24426  016FEE  50E3               	movf	plusw1,w,c
 24427  016FF0  0D02               	mullw	2
 24428  016FF2  50F3               	movf	prodl,w,c
 24429  016FF4  0F60               	addlw	low _tickCount
 24430  016FF6  6ED9               	movwf	fsr2l,c
 24431  016FF8  6ADA               	clrf	fsr2h,c
 24432  016FFA  50DE               	movf	postinc2,w,c
 24433  016FFC  10DE               	iorwf	postinc2,w,c
 24434  016FFE  A4D8               	btfss	status,2,c
 24435  017000  D002               	goto	l12334
 24436                           
 24437                           ;timers.c: 24:   return 1;
 24438  017002  0E01               	movlw	1
 24439  017004  D001               	goto	L41
 24440  017006                     l12334:
 24441                           
 24442                           ;timers.c: 26:  return 0;
 24443  017006  0E00               	movlw	0
 24444  017008                     L41:
 24445  017008  6E38               	movwf	btemp,c
 24446                           
 24447                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24448  01700A  52E5               	movf	postdec1,f,c
 24449  01700C  0012               	return		;funcret
 24450  01700E                     __end_of_TimerDone:
 24451                           	opt callstack 0
 24452                           
 24453 ;; *************** function _INT0_ISR *****************
 24454 ;; Defined at:
 24455 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;		None
 24458 ;; Auto vars:     Size  Location     Type
 24459 ;;		None
 24460 ;; Return value:  Size  Location     Type
 24461 ;;                  1    wreg      void 
 24462 ;; Registers used:
 24463 ;;		wreg, status,2, status,0, pclath, tosl
 24464 ;; Tracked objects:
 24465 ;;		On entry : 0/0
 24466 ;;		On exit  : 0/0
 24467 ;;		Unchanged: 0/0
 24468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24473 ;;Total ram usage:        0 bytes
 24474 ;; Hardware stack levels used:    1
 24475 ;; Hardware stack levels required when called:    2
 24476 ;; This function calls:
 24477 ;;		_INT0_CallBack
 24478 ;; This function is called by:
 24479 ;;		Interrupt level 2
 24480 ;; This function uses a non-reentrant model
 24481 ;;
 24482                           
 24483                           	psect	text114
 24484  0172E0                     __ptext114:
 24485                           	opt callstack 0
 24486  0172E0                     _INT0_ISR:
 24487                           	opt callstack 15
 24488                           
 24489                           ;incstack = 0
 24490  0172E0  EE14  F38A         	lfsr	1,___inthi_sp
 24491                           
 24492                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 24493  0172E4  0139               	movlb	57	; () banked
 24494  0172E6  91A1               	bcf	161,0,b	;volatile
 24495                           
 24496                           ; BSR set to: 57
 24497                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 24498  0172E8  EC3C  F0B8         	call	_INT0_CallBack	;wreg free
 24499  0172EC  0011               	retfie		f
 24500  0172EE                     __end_of_INT0_ISR:
 24501                           	opt callstack 0
 24502                           
 24503 ;; *************** function _INT0_CallBack *****************
 24504 ;; Defined at:
 24505 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 24506 ;; Parameters:    Size  Location     Type
 24507 ;;		None
 24508 ;; Auto vars:     Size  Location     Type
 24509 ;;		None
 24510 ;; Return value:  Size  Location     Type
 24511 ;;                  1  [STACK] void 
 24512 ;; Registers used:
 24513 ;;		wreg, status,2, status,0, pclath, tosl
 24514 ;; Tracked objects:
 24515 ;;		On entry : 3F/39
 24516 ;;		On exit  : 0/0
 24517 ;;		Unchanged: 0/0
 24518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24523 ;;Total ram usage:        0 bytes
 24524 ;; Hardware stack levels used:    1
 24525 ;; Hardware stack levels required when called:    1
 24526 ;; This function calls:
 24527 ;;		Absolute function
 24528 ;;		_INT0_DefaultInterruptHandler
 24529 ;; This function is called by:
 24530 ;;		_INT0_ISR
 24531 ;; This function uses a reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text115
 24535  017078                     __ptext115:
 24536                           	opt callstack 0
 24537  017078                     _INT0_CallBack:
 24538                           	opt callstack 15
 24539                           
 24540                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 24541                           
 24542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24543                           ;incstack = 0
 24544  017078  500D               	movf	_INT0_InterruptHandler,w,c
 24545  01707A  100E               	iorwf	_INT0_InterruptHandler+1,w,c
 24546  01707C  100F               	iorwf	_INT0_InterruptHandler+2,w,c
 24547  01707E  B4D8               	btfsc	status,2,c
 24548  017080  0012               	return	
 24549                           
 24550                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 24551  017082  D801               	call	u207_48
 24552  017084  0012               	return	
 24553  017086                     u207_48:
 24554  017086  0005               	push	
 24555  017088  6EFA               	movwf	pclath,c
 24556  01708A  500D               	movf	_INT0_InterruptHandler,w,c
 24557  01708C  6EFD               	movwf	tosl,c
 24558  01708E  500E               	movf	_INT0_InterruptHandler+1,w,c
 24559  017090  6EFE               	movwf	tosh,c
 24560  017092  500F               	movf	_INT0_InterruptHandler+2,w,c
 24561  017094  6EFF               	movwf	tosu,c
 24562  017096  50FA               	movf	pclath,w,c
 24563  017098  0012               	return		;indir
 24564  01709A                     __end_of_INT0_CallBack:
 24565                           	opt callstack 0
 24566                           
 24567 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24568 ;; Defined at:
 24569 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;		None
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1  [STACK] void 
 24576 ;; Registers used:
 24577 ;;		None
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/39
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24587 ;;Total ram usage:        0 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		_EXT_INT_Initialize
 24593 ;;		_INT0_CallBack
 24594 ;; This function uses a reentrant model
 24595 ;;
 24596                           
 24597                           	psect	text116
 24598  017384                     __ptext116:
 24599                           	opt callstack 0
 24600  017384                     _INT0_DefaultInterruptHandler:
 24601                           	opt callstack 15
 24602                           
 24603                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24604                           
 24605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24606                           ;incstack = 0
 24607  017384  0012               	return		;funcret
 24608  017386                     __end_of_INT0_DefaultInterruptHandler:
 24609                           	opt callstack 0
 24610                           
 24611 ;; *************** function _INT1_ISR *****************
 24612 ;; Defined at:
 24613 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;		None
 24616 ;; Auto vars:     Size  Location     Type
 24617 ;;		None
 24618 ;; Return value:  Size  Location     Type
 24619 ;;                  1    wreg      void 
 24620 ;; Registers used:
 24621 ;;		wreg, status,2, status,0, pclath, tosl
 24622 ;; Tracked objects:
 24623 ;;		On entry : 0/0
 24624 ;;		On exit  : 0/0
 24625 ;;		Unchanged: 0/0
 24626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;Total ram usage:        0 bytes
 24632 ;; Hardware stack levels used:    1
 24633 ;; Hardware stack levels required when called:    2
 24634 ;; This function calls:
 24635 ;;		_INT1_CallBack
 24636 ;; This function is called by:
 24637 ;;		Interrupt level 2
 24638 ;; This function uses a non-reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text117
 24642  0172F0                     __ptext117:
 24643                           	opt callstack 0
 24644  0172F0                     _INT1_ISR:
 24645                           	opt callstack 15
 24646                           
 24647                           ;incstack = 0
 24648  0172F0  EE14  F38A         	lfsr	1,___inthi_sp
 24649                           
 24650                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 24651  0172F4  0139               	movlb	57	; () banked
 24652  0172F6  91A5               	bcf	165,0,b	;volatile
 24653                           
 24654                           ; BSR set to: 57
 24655                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 24656  0172F8  EC4D  F0B8         	call	_INT1_CallBack	;wreg free
 24657  0172FC  0011               	retfie		f
 24658  0172FE                     __end_of_INT1_ISR:
 24659                           	opt callstack 0
 24660                           
 24661 ;; *************** function _INT1_CallBack *****************
 24662 ;; Defined at:
 24663 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;		None
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;		None
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1  [STACK] void 
 24670 ;; Registers used:
 24671 ;;		wreg, status,2, status,0, pclath, tosl
 24672 ;; Tracked objects:
 24673 ;;		On entry : 3F/39
 24674 ;;		On exit  : 0/0
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;Total ram usage:        0 bytes
 24682 ;; Hardware stack levels used:    1
 24683 ;; Hardware stack levels required when called:    1
 24684 ;; This function calls:
 24685 ;;		Absolute function
 24686 ;;		_INT1_DefaultInterruptHandler
 24687 ;; This function is called by:
 24688 ;;		_INT1_ISR
 24689 ;; This function uses a reentrant model
 24690 ;;
 24691                           
 24692                           	psect	text118
 24693  01709A                     __ptext118:
 24694                           	opt callstack 0
 24695  01709A                     _INT1_CallBack:
 24696                           	opt callstack 15
 24697                           
 24698                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 24699                           
 24700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24701                           ;incstack = 0
 24702  01709A  500A               	movf	_INT1_InterruptHandler,w,c
 24703  01709C  100B               	iorwf	_INT1_InterruptHandler+1,w,c
 24704  01709E  100C               	iorwf	_INT1_InterruptHandler+2,w,c
 24705  0170A0  B4D8               	btfsc	status,2,c
 24706  0170A2  0012               	return	
 24707                           
 24708                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 24709  0170A4  D801               	call	u209_48
 24710  0170A6  0012               	return	
 24711  0170A8                     u209_48:
 24712  0170A8  0005               	push	
 24713  0170AA  6EFA               	movwf	pclath,c
 24714  0170AC  500A               	movf	_INT1_InterruptHandler,w,c
 24715  0170AE  6EFD               	movwf	tosl,c
 24716  0170B0  500B               	movf	_INT1_InterruptHandler+1,w,c
 24717  0170B2  6EFE               	movwf	tosh,c
 24718  0170B4  500C               	movf	_INT1_InterruptHandler+2,w,c
 24719  0170B6  6EFF               	movwf	tosu,c
 24720  0170B8  50FA               	movf	pclath,w,c
 24721  0170BA  0012               	return		;indir
 24722  0170BC                     __end_of_INT1_CallBack:
 24723                           	opt callstack 0
 24724                           
 24725 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24726 ;; Defined at:
 24727 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 24728 ;; Parameters:    Size  Location     Type
 24729 ;;		None
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;		None
 24732 ;; Return value:  Size  Location     Type
 24733 ;;                  1  [STACK] void 
 24734 ;; Registers used:
 24735 ;;		None
 24736 ;; Tracked objects:
 24737 ;;		On entry : 0/39
 24738 ;;		On exit  : 0/0
 24739 ;;		Unchanged: 0/0
 24740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;Total ram usage:        0 bytes
 24746 ;; Hardware stack levels used:    1
 24747 ;; This function calls:
 24748 ;;		Nothing
 24749 ;; This function is called by:
 24750 ;;		_EXT_INT_Initialize
 24751 ;;		_INT1_CallBack
 24752 ;; This function uses a reentrant model
 24753 ;;
 24754                           
 24755                           	psect	text119
 24756  017386                     __ptext119:
 24757                           	opt callstack 0
 24758  017386                     _INT1_DefaultInterruptHandler:
 24759                           	opt callstack 15
 24760                           
 24761                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24762                           
 24763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24764                           ;incstack = 0
 24765  017386  0012               	return		;funcret
 24766  017388                     __end_of_INT1_DefaultInterruptHandler:
 24767                           	opt callstack 0
 24768                           
 24769 ;; *************** function _INT2_ISR *****************
 24770 ;; Defined at:
 24771 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;		None
 24774 ;; Auto vars:     Size  Location     Type
 24775 ;;		None
 24776 ;; Return value:  Size  Location     Type
 24777 ;;                  1    wreg      void 
 24778 ;; Registers used:
 24779 ;;		wreg, status,2, status,0, pclath, tosl
 24780 ;; Tracked objects:
 24781 ;;		On entry : 0/0
 24782 ;;		On exit  : 0/0
 24783 ;;		Unchanged: 0/0
 24784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24789 ;;Total ram usage:        0 bytes
 24790 ;; Hardware stack levels used:    1
 24791 ;; Hardware stack levels required when called:    2
 24792 ;; This function calls:
 24793 ;;		_INT2_CallBack
 24794 ;; This function is called by:
 24795 ;;		Interrupt level 2
 24796 ;; This function uses a non-reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text120
 24800  017300                     __ptext120:
 24801                           	opt callstack 0
 24802  017300                     _INT2_ISR:
 24803                           	opt callstack 15
 24804                           
 24805                           ;incstack = 0
 24806  017300  EE14  F38A         	lfsr	1,___inthi_sp
 24807                           
 24808                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 24809  017304  0139               	movlb	57	; () banked
 24810  017306  9BA7               	bcf	167,5,b	;volatile
 24811                           
 24812                           ; BSR set to: 57
 24813                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 24814  017308  EC5E  F0B8         	call	_INT2_CallBack	;wreg free
 24815  01730C  0011               	retfie		f
 24816  01730E                     __end_of_INT2_ISR:
 24817                           	opt callstack 0
 24818                           
 24819 ;; *************** function _INT2_CallBack *****************
 24820 ;; Defined at:
 24821 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;		None
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;		None
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  1  [STACK] void 
 24828 ;; Registers used:
 24829 ;;		wreg, status,2, status,0, pclath, tosl
 24830 ;; Tracked objects:
 24831 ;;		On entry : 3F/39
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24839 ;;Total ram usage:        0 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:    1
 24842 ;; This function calls:
 24843 ;;		Absolute function
 24844 ;;		_INT2_DefaultInterruptHandler
 24845 ;; This function is called by:
 24846 ;;		_INT2_ISR
 24847 ;; This function uses a reentrant model
 24848 ;;
 24849                           
 24850                           	psect	text121
 24851  0170BC                     __ptext121:
 24852                           	opt callstack 0
 24853  0170BC                     _INT2_CallBack:
 24854                           	opt callstack 15
 24855                           
 24856                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 24857                           
 24858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24859                           ;incstack = 0
 24860  0170BC  5007               	movf	_INT2_InterruptHandler,w,c
 24861  0170BE  1008               	iorwf	_INT2_InterruptHandler+1,w,c
 24862  0170C0  1009               	iorwf	_INT2_InterruptHandler+2,w,c
 24863  0170C2  B4D8               	btfsc	status,2,c
 24864  0170C4  0012               	return	
 24865                           
 24866                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 24867  0170C6  D801               	call	u211_48
 24868  0170C8  0012               	return	
 24869  0170CA                     u211_48:
 24870  0170CA  0005               	push	
 24871  0170CC  6EFA               	movwf	pclath,c
 24872  0170CE  5007               	movf	_INT2_InterruptHandler,w,c
 24873  0170D0  6EFD               	movwf	tosl,c
 24874  0170D2  5008               	movf	_INT2_InterruptHandler+1,w,c
 24875  0170D4  6EFE               	movwf	tosh,c
 24876  0170D6  5009               	movf	_INT2_InterruptHandler+2,w,c
 24877  0170D8  6EFF               	movwf	tosu,c
 24878  0170DA  50FA               	movf	pclath,w,c
 24879  0170DC  0012               	return		;indir
 24880  0170DE                     __end_of_INT2_CallBack:
 24881                           	opt callstack 0
 24882                           
 24883 ;; *************** function _INT2_DefaultInterruptHandler *****************
 24884 ;; Defined at:
 24885 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 24886 ;; Parameters:    Size  Location     Type
 24887 ;;		None
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;		None
 24890 ;; Return value:  Size  Location     Type
 24891 ;;                  1  [STACK] void 
 24892 ;; Registers used:
 24893 ;;		None
 24894 ;; Tracked objects:
 24895 ;;		On entry : 0/39
 24896 ;;		On exit  : 0/0
 24897 ;;		Unchanged: 0/0
 24898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24903 ;;Total ram usage:        0 bytes
 24904 ;; Hardware stack levels used:    1
 24905 ;; This function calls:
 24906 ;;		Nothing
 24907 ;; This function is called by:
 24908 ;;		_EXT_INT_Initialize
 24909 ;;		_INT2_CallBack
 24910 ;; This function uses a reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text122
 24914  017388                     __ptext122:
 24915                           	opt callstack 0
 24916  017388                     _INT2_DefaultInterruptHandler:
 24917                           	opt callstack 15
 24918                           
 24919                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24920                           
 24921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24922                           ;incstack = 0
 24923  017388  0012               	return		;funcret
 24924  01738A                     __end_of_INT2_DefaultInterruptHandler:
 24925                           	opt callstack 0
 24926                           
 24927 ;; *************** function _Default_ISR *****************
 24928 ;; Defined at:
 24929 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24930 ;; Parameters:    Size  Location     Type
 24931 ;;		None
 24932 ;; Auto vars:     Size  Location     Type
 24933 ;;		None
 24934 ;; Return value:  Size  Location     Type
 24935 ;;                  1    wreg      void 
 24936 ;; Registers used:
 24937 ;;		None
 24938 ;; Tracked objects:
 24939 ;;		On entry : 0/0
 24940 ;;		On exit  : 0/0
 24941 ;;		Unchanged: 0/0
 24942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24947 ;;Total ram usage:        0 bytes
 24948 ;; Hardware stack levels used:    1
 24949 ;; This function calls:
 24950 ;;		Nothing
 24951 ;; This function is called by:
 24952 ;;		Interrupt level 2
 24953 ;; This function uses a non-reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text123
 24957  017378                     __ptext123:
 24958                           	opt callstack 0
 24959  017378                     _Default_ISR:
 24960                           	opt callstack 17
 24961                           
 24962                           ;incstack = 0
 24963  017378  EE14  F38A         	lfsr	1,___inthi_sp
 24964  01737C  0011               	retfie		f
 24965  01737E                     __end_of_Default_ISR:
 24966                           	opt callstack 0
 24967                           
 24968 ;; *************** function _ADCC_ISR *****************
 24969 ;; Defined at:
 24970 ;;		line 307 in file "mcc_generated_files/adcc.c"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;		None
 24975 ;; Return value:  Size  Location     Type
 24976 ;;                  1    wreg      void 
 24977 ;; Registers used:
 24978 ;;		wreg, status,2, status,0, pclath, tosl
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24988 ;;Total ram usage:        0 bytes
 24989 ;; Hardware stack levels used:    1
 24990 ;; Hardware stack levels required when called:    1
 24991 ;; This function calls:
 24992 ;;		Absolute function
 24993 ;;		_ADCC_DefaultInterruptHandler
 24994 ;; This function is called by:
 24995 ;;		Interrupt level 2
 24996 ;; This function uses a non-reentrant model
 24997 ;;
 24998                           
 24999                           	psect	text124
 25000  016BF4                     __ptext124:
 25001                           	opt callstack 0
 25002  016BF4                     _ADCC_ISR:
 25003                           	opt callstack 16
 25004                           
 25005                           ;incstack = 0
 25006  016BF4  EE14  F38A         	lfsr	1,___inthi_sp
 25007                           
 25008                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 25009  016BF8  0139               	movlb	57	; () banked
 25010  016BFA  95A1               	bcf	161,2,b	;volatile
 25011                           
 25012                           ; BSR set to: 57
 25013                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 25014  016BFC  0100               	movlb	0	; () banked
 25015  016BFE  51A2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 25016  016C00  11A3               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 25017  016C02  11A4               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 25018  016C04  B4D8               	btfsc	status,2,c
 25019  016C06  0011               	retfie		f
 25020                           
 25021                           ; BSR set to: 0
 25022                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 25023  016C08  D801               	call	i2u657_48
 25024  016C0A  0011               	retfie		f
 25025  016C0C                     i2u657_48:
 25026  016C0C  0005               	push	
 25027  016C0E  6EFA               	movwf	pclath,c
 25028  016C10  51A2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 25029  016C12  6EFD               	movwf	tosl,c
 25030  016C14  51A3               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 25031  016C16  6EFE               	movwf	tosh,c
 25032  016C18  51A4               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 25033  016C1A  6EFF               	movwf	tosu,c
 25034  016C1C  50FA               	movf	pclath,w,c
 25035  016C1E  0012               	return		;indir
 25036  016C20                     __end_of_ADCC_ISR:
 25037                           	opt callstack 0
 25038                           
 25039 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25040 ;; Defined at:
 25041 ;;		line 320 in file "mcc_generated_files/adcc.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;		None
 25044 ;; Auto vars:     Size  Location     Type
 25045 ;;		None
 25046 ;; Return value:  Size  Location     Type
 25047 ;;                  1  [STACK] void 
 25048 ;; Registers used:
 25049 ;;		None
 25050 ;; Tracked objects:
 25051 ;;		On entry : 3F/0
 25052 ;;		On exit  : 0/0
 25053 ;;		Unchanged: 0/0
 25054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;Total ram usage:        0 bytes
 25060 ;; Hardware stack levels used:    1
 25061 ;; This function calls:
 25062 ;;		Nothing
 25063 ;; This function is called by:
 25064 ;;		_ADCC_Initialize
 25065 ;;		_ADCC_ISR
 25066 ;; This function uses a reentrant model
 25067 ;;
 25068                           
 25069                           	psect	text125
 25070  01738A                     __ptext125:
 25071                           	opt callstack 0
 25072  01738A                     _ADCC_DefaultInterruptHandler:
 25073                           	opt callstack 16
 25074                           
 25075                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25076                           
 25077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25078                           ;incstack = 0
 25079  01738A  0012               	return		;funcret
 25080  01738C                     __end_of_ADCC_DefaultInterruptHandler:
 25081                           	opt callstack 0
 25082                           
 25083 ;; *************** function _UART1_tx_vect_isr *****************
 25084 ;; Defined at:
 25085 ;;		line 200 in file "mcc_generated_files/uart1.c"
 25086 ;; Parameters:    Size  Location     Type
 25087 ;;		None
 25088 ;; Auto vars:     Size  Location     Type
 25089 ;;		None
 25090 ;; Return value:  Size  Location     Type
 25091 ;;                  1    wreg      void 
 25092 ;; Registers used:
 25093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25094 ;; Tracked objects:
 25095 ;;		On entry : 0/0
 25096 ;;		On exit  : 0/0
 25097 ;;		Unchanged: 0/0
 25098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25103 ;;Total ram usage:        0 bytes
 25104 ;; Hardware stack levels used:    1
 25105 ;; Hardware stack levels required when called:    1
 25106 ;; This function calls:
 25107 ;;		Absolute function
 25108 ;;		_UART1_Transmit_ISR
 25109 ;; This function is called by:
 25110 ;;		Interrupt level 2
 25111 ;; This function uses a non-reentrant model
 25112 ;;
 25113                           
 25114                           	psect	text126
 25115  016F4C                     __ptext126:
 25116                           	opt callstack 0
 25117  016F4C                     _UART1_tx_vect_isr:
 25118                           	opt callstack 16
 25119                           
 25120                           ;incstack = 0
 25121  016F4C  EE14  F38A         	lfsr	1,___inthi_sp
 25122                           
 25123                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 25124  016F50  0100               	movlb	0	; () banked
 25125  016F52  51A5               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 25126  016F54  11A6               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 25127  016F56  11A7               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 25128  016F58  B4D8               	btfsc	status,2,c
 25129  016F5A  0011               	retfie		f
 25130                           
 25131                           ; BSR set to: 0
 25132                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 25133  016F5C  D801               	call	i2u659_48
 25134  016F5E  0011               	retfie		f
 25135  016F60                     i2u659_48:
 25136  016F60  0005               	push	
 25137  016F62  6EFA               	movwf	pclath,c
 25138  016F64  51A5               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 25139  016F66  6EFD               	movwf	tosl,c
 25140  016F68  51A6               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 25141  016F6A  6EFE               	movwf	tosh,c
 25142  016F6C  51A7               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 25143  016F6E  6EFF               	movwf	tosu,c
 25144  016F70  50FA               	movf	pclath,w,c
 25145  016F72  0012               	return		;indir
 25146  016F74                     __end_of_UART1_tx_vect_isr:
 25147                           	opt callstack 0
 25148                           
 25149 ;; *************** function _UART1_Transmit_ISR *****************
 25150 ;; Defined at:
 25151 ;;		line 214 in file "mcc_generated_files/uart1.c"
 25152 ;; Parameters:    Size  Location     Type
 25153 ;;		None
 25154 ;; Auto vars:     Size  Location     Type
 25155 ;;		None
 25156 ;; Return value:  Size  Location     Type
 25157 ;;                  1  [STACK] void 
 25158 ;; Registers used:
 25159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25160 ;; Tracked objects:
 25161 ;;		On entry : 3F/0
 25162 ;;		On exit  : 3B/39
 25163 ;;		Unchanged: 0/0
 25164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25169 ;;Total ram usage:        0 bytes
 25170 ;; Hardware stack levels used:    1
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_UART1_Initialize
 25175 ;;		_UART1_tx_vect_isr
 25176 ;; This function uses a reentrant model
 25177 ;;
 25178                           
 25179                           	psect	text127
 25180  016C20                     __ptext127:
 25181                           	opt callstack 0
 25182  016C20                     _UART1_Transmit_ISR:
 25183                           	opt callstack 16
 25184                           
 25185                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25186                           
 25187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25188                           ;incstack = 0
 25189  016C20  0E40               	movlw	64
 25190  016C22  602E               	cpfslt	_uart1TxBufferRemaining,c
 25191  016C24  D010               	goto	l609
 25192                           
 25193                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25194  016C26  0E40               	movlw	low _uart1TxBuffer
 25195  016C28  242F               	addwf	_uart1TxTail,w,c	;volatile
 25196  016C2A  6ED9               	movwf	fsr2l,c
 25197  016C2C  6ADA               	clrf	fsr2h,c
 25198  016C2E  0E02               	movlw	high _uart1TxBuffer
 25199  016C30  22DA               	addwfc	fsr2h,f,c
 25200  016C32  50DF               	movf	indf2,w,c
 25201  016C34  013D               	movlb	61	; () banked
 25202  016C36  6FEA               	movwf	234,b	;volatile
 25203                           
 25204                           ; BSR set to: 61
 25205  016C38  2A2F               	incf	_uart1TxTail,f,c	;volatile
 25206                           
 25207                           ; BSR set to: 61
 25208                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25209  016C3A  0E3F               	movlw	63
 25210  016C3C  642F               	cpfsgt	_uart1TxTail,c
 25211  016C3E  D001               	goto	l9698
 25212                           
 25213                           ; BSR set to: 61
 25214                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 25215  016C40  6A2F               	clrf	_uart1TxTail,c	;volatile
 25216  016C42                     l9698:
 25217                           
 25218                           ; BSR set to: 61
 25219                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 25220  016C42  2A2E               	incf	_uart1TxBufferRemaining,f,c	;volatile
 25221                           
 25222                           ;mcc_generated_files/uart1.c: 223:  } else {
 25223  016C44  0012               	return	
 25224  016C46                     l609:
 25225                           
 25226                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 25227  016C46  0139               	movlb	57	; () banked
 25228  016C48  9993               	bcf	147,4,b	;volatile
 25229                           
 25230                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25231  016C4A  0012               	return		;funcret
 25232  016C4C                     __end_of_UART1_Transmit_ISR:
 25233                           	opt callstack 0
 25234                           
 25235 ;; *************** function _UART1_rx_vect_isr *****************
 25236 ;; Defined at:
 25237 ;;		line 207 in file "mcc_generated_files/uart1.c"
 25238 ;; Parameters:    Size  Location     Type
 25239 ;;		None
 25240 ;; Auto vars:     Size  Location     Type
 25241 ;;		None
 25242 ;; Return value:  Size  Location     Type
 25243 ;;                  1    wreg      void 
 25244 ;; Registers used:
 25245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25246 ;; Tracked objects:
 25247 ;;		On entry : 0/0
 25248 ;;		On exit  : 0/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25255 ;;Total ram usage:        0 bytes
 25256 ;; Hardware stack levels used:    1
 25257 ;; Hardware stack levels required when called:    1
 25258 ;; This function calls:
 25259 ;;		Absolute function
 25260 ;;		_UART1_Receive_ISR
 25261 ;; This function is called by:
 25262 ;;		Interrupt level 2
 25263 ;; This function uses a non-reentrant model
 25264 ;;
 25265                           
 25266                           	psect	text128
 25267  016F74                     __ptext128:
 25268                           	opt callstack 0
 25269  016F74                     _UART1_rx_vect_isr:
 25270                           	opt callstack 16
 25271                           
 25272                           ;incstack = 0
 25273  016F74  EE14  F38A         	lfsr	1,___inthi_sp
 25274                           
 25275                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 25276  016F78  0100               	movlb	0	; () banked
 25277  016F7A  51A8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 25278  016F7C  11A9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 25279  016F7E  11AA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 25280  016F80  B4D8               	btfsc	status,2,c
 25281  016F82  0011               	retfie		f
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 25285  016F84  D801               	call	i2u661_48
 25286  016F86  0011               	retfie		f
 25287  016F88                     i2u661_48:
 25288  016F88  0005               	push	
 25289  016F8A  6EFA               	movwf	pclath,c
 25290  016F8C  51A8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 25291  016F8E  6EFD               	movwf	tosl,c
 25292  016F90  51A9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 25293  016F92  6EFE               	movwf	tosh,c
 25294  016F94  51AA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 25295  016F96  6EFF               	movwf	tosu,c
 25296  016F98  50FA               	movf	pclath,w,c
 25297  016F9A  0012               	return		;indir
 25298  016F9C                     __end_of_UART1_rx_vect_isr:
 25299                           	opt callstack 0
 25300                           
 25301 ;; *************** function _UART1_Receive_ISR *****************
 25302 ;; Defined at:
 25303 ;;		line 230 in file "mcc_generated_files/uart1.c"
 25304 ;; Parameters:    Size  Location     Type
 25305 ;;		None
 25306 ;; Auto vars:     Size  Location     Type
 25307 ;;		None
 25308 ;; Return value:  Size  Location     Type
 25309 ;;                  1  [STACK] void 
 25310 ;; Registers used:
 25311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25312 ;; Tracked objects:
 25313 ;;		On entry : 3F/0
 25314 ;;		On exit  : 0/0
 25315 ;;		Unchanged: 0/0
 25316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25321 ;;Total ram usage:        0 bytes
 25322 ;; Hardware stack levels used:    1
 25323 ;; This function calls:
 25324 ;;		Nothing
 25325 ;; This function is called by:
 25326 ;;		_UART1_Initialize
 25327 ;;		_UART1_rx_vect_isr
 25328 ;; This function uses a reentrant model
 25329 ;;
 25330                           
 25331                           	psect	text129
 25332  01713A                     __ptext129:
 25333                           	opt callstack 0
 25334  01713A                     _UART1_Receive_ISR:
 25335                           	opt callstack 16
 25336                           
 25337                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25338                           
 25339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25340                           ;incstack = 0
 25341  01713A  0E00               	movlw	low _uart1RxBuffer
 25342  01713C  242D               	addwf	_uart1RxHead,w,c	;volatile
 25343  01713E  6ED9               	movwf	fsr2l,c
 25344  017140  6ADA               	clrf	fsr2h,c
 25345  017142  0E04               	movlw	high _uart1RxBuffer
 25346  017144  22DA               	addwfc	fsr2h,f,c
 25347  017146  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25348  01714C  2A2D               	incf	_uart1RxHead,f,c	;volatile
 25349                           
 25350                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25351  01714E  282D               	incf	_uart1RxHead,w,c
 25352  017150  B4D8               	btfsc	status,2,c
 25353                           
 25354                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 25355  017152  6A2D               	clrf	_uart1RxHead,c	;volatile
 25356                           
 25357                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 25358  017154  2A2B               	incf	_uart1RxCount,f,c	;volatile
 25359                           
 25360                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25361  017156  0012               	return		;funcret
 25362  017158                     __end_of_UART1_Receive_ISR:
 25363                           	opt callstack 0
 25364                           
 25365 ;; *************** function _UART2_tx_vect_isr *****************
 25366 ;; Defined at:
 25367 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;		None
 25370 ;; Auto vars:     Size  Location     Type
 25371 ;;		None
 25372 ;; Return value:  Size  Location     Type
 25373 ;;                  1    wreg      void 
 25374 ;; Registers used:
 25375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25376 ;; Tracked objects:
 25377 ;;		On entry : 0/0
 25378 ;;		On exit  : 0/0
 25379 ;;		Unchanged: 0/0
 25380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;Total ram usage:        0 bytes
 25386 ;; Hardware stack levels used:    1
 25387 ;; Hardware stack levels required when called:    1
 25388 ;; This function calls:
 25389 ;;		Absolute function
 25390 ;;		_UART2_Transmit_ISR
 25391 ;; This function is called by:
 25392 ;;		Interrupt level 2
 25393 ;; This function uses a non-reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text130
 25397  016F9C                     __ptext130:
 25398                           	opt callstack 0
 25399  016F9C                     _UART2_tx_vect_isr:
 25400                           	opt callstack 16
 25401                           
 25402                           ;incstack = 0
 25403  016F9C  EE14  F38A         	lfsr	1,___inthi_sp
 25404                           
 25405                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25406  016FA0  5001               	movf	_UART2_TxInterruptHandler,w,c
 25407  016FA2  1002               	iorwf	_UART2_TxInterruptHandler+1,w,c
 25408  016FA4  1003               	iorwf	_UART2_TxInterruptHandler+2,w,c
 25409  016FA6  B4D8               	btfsc	status,2,c
 25410  016FA8  0011               	retfie		f
 25411                           
 25412                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25413  016FAA  D801               	call	i2u663_48
 25414  016FAC  0011               	retfie		f
 25415  016FAE                     i2u663_48:
 25416  016FAE  0005               	push	
 25417  016FB0  6EFA               	movwf	pclath,c
 25418  016FB2  5001               	movf	_UART2_TxInterruptHandler,w,c
 25419  016FB4  6EFD               	movwf	tosl,c
 25420  016FB6  5002               	movf	_UART2_TxInterruptHandler+1,w,c
 25421  016FB8  6EFE               	movwf	tosh,c
 25422  016FBA  5003               	movf	_UART2_TxInterruptHandler+2,w,c
 25423  016FBC  6EFF               	movwf	tosu,c
 25424  016FBE  50FA               	movf	pclath,w,c
 25425  016FC0  0012               	return		;indir
 25426  016FC2                     __end_of_UART2_tx_vect_isr:
 25427                           	opt callstack 0
 25428                           
 25429 ;; *************** function _UART2_Transmit_ISR *****************
 25430 ;; Defined at:
 25431 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25432 ;; Parameters:    Size  Location     Type
 25433 ;;		None
 25434 ;; Auto vars:     Size  Location     Type
 25435 ;;		None
 25436 ;; Return value:  Size  Location     Type
 25437 ;;                  1  [STACK] void 
 25438 ;; Registers used:
 25439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25440 ;; Tracked objects:
 25441 ;;		On entry : 0/0
 25442 ;;		On exit  : 3B/39
 25443 ;;		Unchanged: 0/0
 25444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;Total ram usage:        0 bytes
 25450 ;; Hardware stack levels used:    1
 25451 ;; This function calls:
 25452 ;;		Nothing
 25453 ;; This function is called by:
 25454 ;;		_UART2_Initialize
 25455 ;;		_UART2_tx_vect_isr
 25456 ;; This function uses a reentrant model
 25457 ;;
 25458                           
 25459                           	psect	text131
 25460  016C4C                     __ptext131:
 25461                           	opt callstack 0
 25462  016C4C                     _UART2_Transmit_ISR:
 25463                           	opt callstack 16
 25464                           
 25465                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25466                           
 25467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25468                           ;incstack = 0
 25469  016C4C  0E40               	movlw	64
 25470  016C4E  6028               	cpfslt	_uart2TxBufferRemaining,c
 25471  016C50  D010               	goto	l729
 25472                           
 25473                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25474  016C52  0E00               	movlw	low _uart2TxBuffer
 25475  016C54  2429               	addwf	_uart2TxTail,w,c	;volatile
 25476  016C56  6ED9               	movwf	fsr2l,c
 25477  016C58  6ADA               	clrf	fsr2h,c
 25478  016C5A  0E02               	movlw	high _uart2TxBuffer
 25479  016C5C  22DA               	addwfc	fsr2h,f,c
 25480  016C5E  50DF               	movf	indf2,w,c
 25481  016C60  013D               	movlb	61	; () banked
 25482  016C62  6FD2               	movwf	210,b	;volatile
 25483                           
 25484                           ; BSR set to: 61
 25485  016C64  2A29               	incf	_uart2TxTail,f,c	;volatile
 25486                           
 25487                           ; BSR set to: 61
 25488                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25489  016C66  0E3F               	movlw	63
 25490  016C68  6429               	cpfsgt	_uart2TxTail,c
 25491  016C6A  D001               	goto	l9720
 25492                           
 25493                           ; BSR set to: 61
 25494                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25495  016C6C  6A29               	clrf	_uart2TxTail,c	;volatile
 25496  016C6E                     l9720:
 25497                           
 25498                           ; BSR set to: 61
 25499                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25500  016C6E  2A28               	incf	_uart2TxBufferRemaining,f,c	;volatile
 25501                           
 25502                           ;mcc_generated_files/uart2.c: 224:     }
 25503  016C70  0012               	return	
 25504  016C72                     l729:
 25505                           
 25506                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25507  016C72  0139               	movlb	57	; () banked
 25508  016C74  9796               	bcf	150,3,b	;volatile
 25509                           
 25510                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25511  016C76  0012               	return		;funcret
 25512  016C78                     __end_of_UART2_Transmit_ISR:
 25513                           	opt callstack 0
 25514                           
 25515 ;; *************** function _UART2_rx_vect_isr *****************
 25516 ;; Defined at:
 25517 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;		None
 25520 ;; Auto vars:     Size  Location     Type
 25521 ;;		None
 25522 ;; Return value:  Size  Location     Type
 25523 ;;                  1    wreg      void 
 25524 ;; Registers used:
 25525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25526 ;; Tracked objects:
 25527 ;;		On entry : 0/0
 25528 ;;		On exit  : 0/0
 25529 ;;		Unchanged: 0/0
 25530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25535 ;;Total ram usage:        0 bytes
 25536 ;; Hardware stack levels used:    1
 25537 ;; Hardware stack levels required when called:    1
 25538 ;; This function calls:
 25539 ;;		Absolute function
 25540 ;;		_UART2_Receive_ISR
 25541 ;; This function is called by:
 25542 ;;		Interrupt level 2
 25543 ;; This function uses a non-reentrant model
 25544 ;;
 25545                           
 25546                           	psect	text132
 25547  016FC4                     __ptext132:
 25548                           	opt callstack 0
 25549  016FC4                     _UART2_rx_vect_isr:
 25550                           	opt callstack 16
 25551                           
 25552                           ;incstack = 0
 25553  016FC4  EE14  F38A         	lfsr	1,___inthi_sp
 25554                           
 25555                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25556  016FC8  5004               	movf	_UART2_RxInterruptHandler,w,c
 25557  016FCA  1005               	iorwf	_UART2_RxInterruptHandler+1,w,c
 25558  016FCC  1006               	iorwf	_UART2_RxInterruptHandler+2,w,c
 25559  016FCE  B4D8               	btfsc	status,2,c
 25560  016FD0  0011               	retfie		f
 25561                           
 25562                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25563  016FD2  D801               	call	i2u665_48
 25564  016FD4  0011               	retfie		f
 25565  016FD6                     i2u665_48:
 25566  016FD6  0005               	push	
 25567  016FD8  6EFA               	movwf	pclath,c
 25568  016FDA  5004               	movf	_UART2_RxInterruptHandler,w,c
 25569  016FDC  6EFD               	movwf	tosl,c
 25570  016FDE  5005               	movf	_UART2_RxInterruptHandler+1,w,c
 25571  016FE0  6EFE               	movwf	tosh,c
 25572  016FE2  5006               	movf	_UART2_RxInterruptHandler+2,w,c
 25573  016FE4  6EFF               	movwf	tosu,c
 25574  016FE6  50FA               	movf	pclath,w,c
 25575  016FE8  0012               	return		;indir
 25576  016FEA                     __end_of_UART2_rx_vect_isr:
 25577                           	opt callstack 0
 25578                           
 25579 ;; *************** function _UART2_Receive_ISR *****************
 25580 ;; Defined at:
 25581 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25582 ;; Parameters:    Size  Location     Type
 25583 ;;		None
 25584 ;; Auto vars:     Size  Location     Type
 25585 ;;		None
 25586 ;; Return value:  Size  Location     Type
 25587 ;;                  1  [STACK] void 
 25588 ;; Registers used:
 25589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25590 ;; Tracked objects:
 25591 ;;		On entry : 0/0
 25592 ;;		On exit  : 0/0
 25593 ;;		Unchanged: 0/0
 25594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25599 ;;Total ram usage:        0 bytes
 25600 ;; Hardware stack levels used:    1
 25601 ;; This function calls:
 25602 ;;		Nothing
 25603 ;; This function is called by:
 25604 ;;		_UART2_Initialize
 25605 ;;		_UART2_rx_vect_isr
 25606 ;; This function uses a reentrant model
 25607 ;;
 25608                           
 25609                           	psect	text133
 25610  017158                     __ptext133:
 25611                           	opt callstack 0
 25612  017158                     _UART2_Receive_ISR:
 25613                           	opt callstack 16
 25614                           
 25615                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25616                           
 25617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25618                           ;incstack = 0
 25619  017158  0E00               	movlw	low _uart2RxBuffer
 25620  01715A  2427               	addwf	_uart2RxHead,w,c	;volatile
 25621  01715C  6ED9               	movwf	fsr2l,c
 25622  01715E  6ADA               	clrf	fsr2h,c
 25623  017160  0E05               	movlw	high _uart2RxBuffer
 25624  017162  22DA               	addwfc	fsr2h,f,c
 25625  017164  006F F743 FFDF     	movff	15824,indf2	;volatile
 25626  01716A  2A27               	incf	_uart2RxHead,f,c	;volatile
 25627                           
 25628                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25629  01716C  2827               	incf	_uart2RxHead,w,c
 25630  01716E  B4D8               	btfsc	status,2,c
 25631                           
 25632                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25633  017170  6A27               	clrf	_uart2RxHead,c	;volatile
 25634                           
 25635                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25636  017172  2A25               	incf	_uart2RxCount,f,c	;volatile
 25637                           
 25638                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25639  017174  0012               	return		;funcret
 25640  017176                     __end_of_UART2_Receive_ISR:
 25641                           	opt callstack 0
 25642                           
 25643 ;; *************** function _TMR6_ISR *****************
 25644 ;; Defined at:
 25645 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;		None
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1    wreg      void 
 25652 ;; Registers used:
 25653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25654 ;; Tracked objects:
 25655 ;;		On entry : 0/0
 25656 ;;		On exit  : 0/0
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25663 ;;Total ram usage:        1 bytes
 25664 ;; Hardware stack levels used:    1
 25665 ;; Hardware stack levels required when called:    2
 25666 ;; This function calls:
 25667 ;;		_TMR6_CallBack
 25668 ;; This function is called by:
 25669 ;;		Interrupt level 2
 25670 ;; This function uses a non-reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text134
 25674  017200                     __ptext134:
 25675                           	opt callstack 0
 25676  017200                     _TMR6_ISR:
 25677                           	opt callstack 15
 25678                           
 25679                           ;incstack = 0
 25680  017200  0060  F0E0  F05D   	movff	btemp,??_TMR6_ISR
 25681  017206  EE14  F38A         	lfsr	1,___inthi_sp
 25682                           
 25683                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 25684  01720A  0139               	movlb	57	; () banked
 25685  01720C  91A9               	bcf	169,0,b	;volatile
 25686                           
 25687                           ; BSR set to: 57
 25688                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 25689  01720E  EC07  F0B8         	call	_TMR6_CallBack	;wreg free
 25690  017212  0060  F174  F038   	movff	??_TMR6_ISR,btemp
 25691  017218  0011               	retfie		f
 25692  01721A                     __end_of_TMR6_ISR:
 25693                           	opt callstack 0
 25694                           
 25695 ;; *************** function _TMR6_CallBack *****************
 25696 ;; Defined at:
 25697 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;		None
 25700 ;; Auto vars:     Size  Location     Type
 25701 ;;		None
 25702 ;; Return value:  Size  Location     Type
 25703 ;;                  1  [STACK] void 
 25704 ;; Registers used:
 25705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25706 ;; Tracked objects:
 25707 ;;		On entry : 3F/39
 25708 ;;		On exit  : 0/0
 25709 ;;		Unchanged: 0/0
 25710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25715 ;;Total ram usage:        0 bytes
 25716 ;; Hardware stack levels used:    1
 25717 ;; Hardware stack levels required when called:    1
 25718 ;; This function calls:
 25719 ;;		Absolute function
 25720 ;;		_TMR6_DefaultInterruptHandler
 25721 ;; This function is called by:
 25722 ;;		_TMR6_ISR
 25723 ;; This function uses a reentrant model
 25724 ;;
 25725                           
 25726                           	psect	text135
 25727  01700E                     __ptext135:
 25728                           	opt callstack 0
 25729  01700E                     _TMR6_CallBack:
 25730                           	opt callstack 15
 25731                           
 25732                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 25733                           
 25734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25735                           ;incstack = 0
 25736  01700E  0100               	movlb	0	; () banked
 25737  017010  519F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25738  017012  11A0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25739  017014  11A1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25740  017016  B4D8               	btfsc	status,2,c
 25741  017018  0012               	return	
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 25745  01701A  D801               	call	u568_48
 25746  01701C  0012               	return	
 25747  01701E                     u568_48:
 25748  01701E  0005               	push	
 25749  017020  6EFA               	movwf	pclath,c
 25750  017022  519F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25751  017024  6EFD               	movwf	tosl,c
 25752  017026  51A0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25753  017028  6EFE               	movwf	tosh,c
 25754  01702A  51A1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25755  01702C  6EFF               	movwf	tosu,c
 25756  01702E  50FA               	movf	pclath,w,c
 25757  017030  0012               	return		;indir
 25758  017032                     __end_of_TMR6_CallBack:
 25759                           	opt callstack 0
 25760                           
 25761 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25762 ;; Defined at:
 25763 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25764 ;; Parameters:    Size  Location     Type
 25765 ;;		None
 25766 ;; Auto vars:     Size  Location     Type
 25767 ;;  i               1  [STACK] unsigned char 
 25768 ;; Return value:  Size  Location     Type
 25769 ;;                  1  [STACK] void 
 25770 ;; Registers used:
 25771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25772 ;; Tracked objects:
 25773 ;;		On entry : 3F/0
 25774 ;;		On exit  : 0/0
 25775 ;;		Unchanged: 0/0
 25776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25781 ;;Total ram usage:        0 bytes
 25782 ;; Hardware stack levels used:    1
 25783 ;; This function calls:
 25784 ;;		Nothing
 25785 ;; This function is called by:
 25786 ;;		_TMR6_Initialize
 25787 ;;		_TMR6_CallBack
 25788 ;; This function uses a reentrant model
 25789 ;;
 25790                           
 25791                           	psect	text136
 25792  01680E                     __ptext136:
 25793                           	opt callstack 0
 25794  01680E                     _TMR6_DefaultInterruptHandler:
 25795                           	opt callstack 0
 25796                           
 25797                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25798  01680E  52E6               	movf	postinc1,f,c
 25799                           
 25800                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25801                           ;stkvar	_i @ sp[(-1)+0]
 25802                           
 25803                           ;incstack = 0
 25804  016810  0EFF               	movlw	-1
 25805  016812  6AE3               	clrf	plusw1,c
 25806  016814                     l8962:
 25807                           
 25808                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25809                           ;stkvar	_i @ sp[(-1)+0]
 25810  016814  0EFF               	movlw	-1
 25811  016816  50E3               	movf	plusw1,w,c
 25812  016818  0D02               	mullw	2
 25813  01681A  50F3               	movf	prodl,w,c
 25814  01681C  0F60               	addlw	low _tickCount
 25815  01681E  6ED9               	movwf	fsr2l,c
 25816  016820  6ADA               	clrf	fsr2h,c
 25817  016822  50DE               	movf	postinc2,w,c
 25818  016824  10DE               	iorwf	postinc2,w,c
 25819  016826  B4D8               	btfsc	status,2,c
 25820  016828  D00A               	goto	l8966
 25821                           
 25822                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25823                           ;stkvar	_i @ sp[(-1)+0]
 25824  01682A  0EFF               	movlw	-1
 25825  01682C  50E3               	movf	plusw1,w,c
 25826  01682E  0D02               	mullw	2
 25827  016830  50F3               	movf	prodl,w,c
 25828  016832  0F60               	addlw	low _tickCount
 25829  016834  6ED9               	movwf	fsr2l,c
 25830  016836  6ADA               	clrf	fsr2h,c
 25831  016838  06DE               	decf	postinc2,f,c
 25832  01683A  0E00               	movlw	0
 25833  01683C  5ADD               	subwfb	postdec2,f,c
 25834  01683E                     l8966:
 25835                           
 25836                           ;mcc_generated_files/tmr6.c: 207:  }
 25837                           ;stkvar	_i @ sp[(-1)+0]
 25838  01683E  0EFF               	movlw	-1
 25839  016840  2AE3               	incf	plusw1,f,c
 25840                           
 25841                           ;stkvar	_i @ sp[(-1)+0]
 25842  016842  0EFF               	movlw	-1
 25843  016844  006F FF8C  F038    	movff	plusw1,btemp
 25844  01684A  0E0B               	movlw	11
 25845  01684C  6438               	cpfsgt	btemp,c
 25846  01684E  D7E2               	goto	l8962
 25847                           
 25848                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25849  016850  52E5               	movf	postdec1,f,c
 25850  016852  0012               	return		;funcret
 25851  016854                     __end_of_TMR6_DefaultInterruptHandler:
 25852                           	opt callstack 0
 25853                           
 25854 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25855 ;; Defined at:
 25856 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;		None
 25859 ;; Auto vars:     Size  Location     Type
 25860 ;;		None
 25861 ;; Return value:  Size  Location     Type
 25862 ;;                  1    wreg      void 
 25863 ;; Registers used:
 25864 ;;		None
 25865 ;; Tracked objects:
 25866 ;;		On entry : 0/0
 25867 ;;		On exit  : 3F/0
 25868 ;;		Unchanged: 0/0
 25869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25874 ;;Total ram usage:        0 bytes
 25875 ;; Hardware stack levels used:    1
 25876 ;; This function calls:
 25877 ;;		Nothing
 25878 ;; This function is called by:
 25879 ;;		Interrupt level 2
 25880 ;; This function uses a non-reentrant model
 25881 ;;
 25882                           
 25883                           	psect	text137
 25884  0172B4                     __ptext137:
 25885                           	opt callstack 0
 25886  0172B4                     _DMA1_DMASCNT_ISR:
 25887                           	opt callstack 17
 25888                           
 25889                           ;incstack = 0
 25890  0172B4  EE14  F38A         	lfsr	1,___inthi_sp
 25891                           
 25892                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25893  0172B8  0139               	movlb	57	; () banked
 25894  0172BA  91A2               	bcf	162,0,b	;volatile
 25895                           
 25896                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25897  0172BC  0100               	movlb	0	; () banked
 25898  0172BE  9785               	bcf	_spi_link& (0+255),3,b	;volatile
 25899                           
 25900                           ; BSR set to: 0
 25901                           
 25902                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 25903  0172C0  94BE               	bcf	16318,2,c	;volatile
 25904                           
 25905                           ; BSR set to: 0
 25906  0172C2  0011               	retfie		f
 25907  0172C4                     __end_of_DMA1_DMASCNT_ISR:
 25908                           	opt callstack 0
 25909                           
 25910 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25911 ;; Defined at:
 25912 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;		None
 25915 ;; Auto vars:     Size  Location     Type
 25916 ;;		None
 25917 ;; Return value:  Size  Location     Type
 25918 ;;                  1    wreg      void 
 25919 ;; Registers used:
 25920 ;;		None
 25921 ;; Tracked objects:
 25922 ;;		On entry : 0/0
 25923 ;;		On exit  : 3F/39
 25924 ;;		Unchanged: 0/0
 25925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25930 ;;Total ram usage:        0 bytes
 25931 ;; Hardware stack levels used:    1
 25932 ;; This function calls:
 25933 ;;		Nothing
 25934 ;; This function is called by:
 25935 ;;		Interrupt level 2
 25936 ;; This function uses a non-reentrant model
 25937 ;;
 25938                           
 25939                           	psect	text138
 25940  017318                     __ptext138:
 25941                           	opt callstack 0
 25942  017318                     _DMA1_DMADCNT_ISR:
 25943                           	opt callstack 17
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;incstack = 0
 25947  017318  EE14  F38A         	lfsr	1,___inthi_sp
 25948                           
 25949                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25950  01731C  0139               	movlb	57	; () banked
 25951  01731E  93A2               	bcf	162,1,b	;volatile
 25952                           
 25953                           ; BSR set to: 57
 25954  017320  0011               	retfie		f
 25955  017322                     __end_of_DMA1_DMADCNT_ISR:
 25956                           	opt callstack 0
 25957                           
 25958 ;; *************** function _DMA1_DMAA_ISR *****************
 25959 ;; Defined at:
 25960 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25961 ;; Parameters:    Size  Location     Type
 25962 ;;		None
 25963 ;; Auto vars:     Size  Location     Type
 25964 ;;		None
 25965 ;; Return value:  Size  Location     Type
 25966 ;;                  1    wreg      void 
 25967 ;; Registers used:
 25968 ;;		None
 25969 ;; Tracked objects:
 25970 ;;		On entry : 0/0
 25971 ;;		On exit  : 3F/39
 25972 ;;		Unchanged: 0/0
 25973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;Total ram usage:        0 bytes
 25979 ;; Hardware stack levels used:    1
 25980 ;; This function calls:
 25981 ;;		Nothing
 25982 ;; This function is called by:
 25983 ;;		Interrupt level 2
 25984 ;; This function uses a non-reentrant model
 25985 ;;
 25986                           
 25987                           	psect	text139
 25988  017324                     __ptext139:
 25989                           	opt callstack 0
 25990  017324                     _DMA1_DMAA_ISR:
 25991                           	opt callstack 17
 25992                           
 25993                           ; BSR set to: 57
 25994                           ;incstack = 0
 25995  017324  EE14  F38A         	lfsr	1,___inthi_sp
 25996                           
 25997                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25998  017328  0139               	movlb	57	; () banked
 25999  01732A  97A2               	bcf	162,3,b	;volatile
 26000                           
 26001                           ; BSR set to: 57
 26002  01732C  0011               	retfie		f
 26003  01732E                     __end_of_DMA1_DMAA_ISR:
 26004                           	opt callstack 0
 26005                           
 26006 ;; *************** function _DMA1_DMAOR_ISR *****************
 26007 ;; Defined at:
 26008 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26009 ;; Parameters:    Size  Location     Type
 26010 ;;		None
 26011 ;; Auto vars:     Size  Location     Type
 26012 ;;		None
 26013 ;; Return value:  Size  Location     Type
 26014 ;;                  1    wreg      void 
 26015 ;; Registers used:
 26016 ;;		None
 26017 ;; Tracked objects:
 26018 ;;		On entry : 0/0
 26019 ;;		On exit  : 3F/39
 26020 ;;		Unchanged: 0/0
 26021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;Total ram usage:        0 bytes
 26027 ;; Hardware stack levels used:    1
 26028 ;; This function calls:
 26029 ;;		Nothing
 26030 ;; This function is called by:
 26031 ;;		Interrupt level 2
 26032 ;; This function uses a non-reentrant model
 26033 ;;
 26034                           
 26035                           	psect	text140
 26036  017330                     __ptext140:
 26037                           	opt callstack 0
 26038  017330                     _DMA1_DMAOR_ISR:
 26039                           	opt callstack 17
 26040                           
 26041                           ; BSR set to: 57
 26042                           ;incstack = 0
 26043  017330  EE14  F38A         	lfsr	1,___inthi_sp
 26044                           
 26045                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26046  017334  0139               	movlb	57	; () banked
 26047  017336  95A2               	bcf	162,2,b	;volatile
 26048                           
 26049                           ; BSR set to: 57
 26050  017338  0011               	retfie		f
 26051  01733A                     __end_of_DMA1_DMAOR_ISR:
 26052                           	opt callstack 0
 26053                           
 26054 ;; *************** function _TMR5_ISR *****************
 26055 ;; Defined at:
 26056 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26057 ;; Parameters:    Size  Location     Type
 26058 ;;		None
 26059 ;; Auto vars:     Size  Location     Type
 26060 ;;		None
 26061 ;; Return value:  Size  Location     Type
 26062 ;;                  1    wreg      void 
 26063 ;; Registers used:
 26064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26065 ;; Tracked objects:
 26066 ;;		On entry : 0/0
 26067 ;;		On exit  : 0/0
 26068 ;;		Unchanged: 0/0
 26069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26072 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26074 ;;Total ram usage:        3 bytes
 26075 ;; Hardware stack levels used:    1
 26076 ;; Hardware stack levels required when called:    2
 26077 ;; This function calls:
 26078 ;;		_TMR5_CallBack
 26079 ;;		_TMR5_WriteTimer
 26080 ;; This function is called by:
 26081 ;;		Interrupt level 2
 26082 ;; This function uses a non-reentrant model
 26083 ;;
 26084                           
 26085                           	psect	text141
 26086  0165FC                     __ptext141:
 26087                           	opt callstack 0
 26088  0165FC                     _TMR5_ISR:
 26089                           	opt callstack 15
 26090                           
 26091                           ; BSR set to: 57
 26092                           ;incstack = 0
 26093  0165FC  0060  F10C  F0E2   	movff	btemp+11,??_TMR5_ISR+2
 26094  016602  EE14  F38A         	lfsr	1,___inthi_sp
 26095                           
 26096                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26097  016606  0139               	movlb	57	; () banked
 26098  016608  9DA8               	bcf	168,6,b	;volatile
 26099                           
 26100                           ; BSR set to: 57
 26101                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26102  01660A  0060  F073  FFE6   	movff	_timer5ReloadVal,postinc1
 26103  016610  0060  F077  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26104  016616  EC8D  F0B4         	call	_TMR5_WriteTimer	;wreg free
 26105                           
 26106                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26107  01661A  EE23  F04D         	lfsr	2,_V+383	;volatile
 26108  01661E  50DF               	movf	indf2,w,c
 26109  016620  0100               	movlb	0	; () banked
 26110  016622  6FE0               	movwf	??_TMR5_ISR& (0+255),b
 26111  016624  6BE1               	clrf	(??_TMR5_ISR+1)& (0+255),b
 26112  016626  0E05               	movlw	5
 26113  016628  27E0               	addwf	??_TMR5_ISR& (0+255),f,b
 26114  01662A  0E00               	movlw	0
 26115  01662C  23E1               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 26116  01662E  4A1A               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 26117  016630  2A1B               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 26118  016632  51E0               	movf	??_TMR5_ISR& (0+255),w,b
 26119  016634  5C1A               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 26120  016636  51E1               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 26121  016638  581B               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 26122  01663A  A0D8               	btfss	status,0,c
 26123  01663C  D004               	goto	i2l1157
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26127  01663E  EC19  F0B8         	call	_TMR5_CallBack	;wreg free
 26128                           
 26129                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26130  016642  6A1A               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 26131  016644  6A1B               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 26132  016646                     i2l1157:
 26133  016646  0060  F388  F043   	movff	??_TMR5_ISR+2,btemp+11
 26134  01664C  0011               	retfie		f
 26135  01664E                     __end_of_TMR5_ISR:
 26136                           	opt callstack 0
 26137                           
 26138 ;; *************** function _TMR5_WriteTimer *****************
 26139 ;; Defined at:
 26140 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26141 ;; Parameters:    Size  Location     Type
 26142 ;;  timerVal        2  [STACK] unsigned short 
 26143 ;; Auto vars:     Size  Location     Type
 26144 ;;		None
 26145 ;; Return value:  Size  Location     Type
 26146 ;;                  1  [STACK] void 
 26147 ;; Registers used:
 26148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26149 ;; Tracked objects:
 26150 ;;		On entry : 3F/39
 26151 ;;		On exit  : 0/0
 26152 ;;		Unchanged: 0/0
 26153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26158 ;;Total ram usage:        0 bytes
 26159 ;; Hardware stack levels used:    1
 26160 ;; This function calls:
 26161 ;;		Nothing
 26162 ;; This function is called by:
 26163 ;;		_TMR5_ISR
 26164 ;; This function uses a reentrant model
 26165 ;;
 26166                           
 26167                           	psect	text142
 26168  01691A                     __ptext142:
 26169                           	opt callstack 0
 26170  01691A                     _TMR5_WriteTimer:
 26171                           	opt callstack 16
 26172                           
 26173                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26174                           
 26175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26176                           ;incstack = 0
 26177  01691A  A49A               	btfss	16282,2,c	;volatile
 26178  01691C  D00F               	goto	l9746
 26179                           
 26180                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26181  01691E  909A               	bcf	16282,0,c	;volatile
 26182                           
 26183                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26184                           ;stkvar	_timerVal @ sp[(0)+-2]
 26185  016920  0EFF               	movlw	255
 26186  016922  24E1               	addwf	fsr1l,w,c
 26187  016924  6ED9               	movwf	fsr2l,c
 26188  016926  0EFF               	movlw	255
 26189  016928  20E2               	addwfc	fsr1h,w,c
 26190  01692A  6EDA               	movwf	fsr2h,c
 26191  01692C  50DF               	movf	indf2,w,c
 26192  01692E  6E99               	movwf	16281,c	;volatile
 26193                           
 26194                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26195                           ;stkvar	_timerVal @ sp[(0)+-2]
 26196  016930  0EFE               	movlw	-2
 26197  016932  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26198                           
 26199                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26200  016938  809A               	bsf	16282,0,c	;volatile
 26201                           
 26202                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26203  01693A  D00C               	goto	l1140
 26204  01693C                     l9746:
 26205                           
 26206                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26207                           ;stkvar	_timerVal @ sp[(0)+-2]
 26208  01693C  0EFF               	movlw	255
 26209  01693E  24E1               	addwf	fsr1l,w,c
 26210  016940  6ED9               	movwf	fsr2l,c
 26211  016942  0EFF               	movlw	255
 26212  016944  20E2               	addwfc	fsr1h,w,c
 26213  016946  6EDA               	movwf	fsr2h,c
 26214  016948  50DF               	movf	indf2,w,c
 26215  01694A  6E99               	movwf	16281,c	;volatile
 26216                           
 26217                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26218                           ;stkvar	_timerVal @ sp[(0)+-2]
 26219  01694C  0EFE               	movlw	-2
 26220  01694E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26221  016954                     l1140:
 26222                           
 26223                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26224  016954  52E5               	movf	postdec1,f,c
 26225  016956  52E5               	movf	postdec1,f,c
 26226  016958  0012               	return		;funcret
 26227  01695A                     __end_of_TMR5_WriteTimer:
 26228                           	opt callstack 0
 26229                           
 26230 ;; *************** function _TMR5_CallBack *****************
 26231 ;; Defined at:
 26232 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26233 ;; Parameters:    Size  Location     Type
 26234 ;;		None
 26235 ;; Auto vars:     Size  Location     Type
 26236 ;;		None
 26237 ;; Return value:  Size  Location     Type
 26238 ;;                  1  [STACK] void 
 26239 ;; Registers used:
 26240 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26241 ;; Tracked objects:
 26242 ;;		On entry : 3F/0
 26243 ;;		On exit  : 0/0
 26244 ;;		Unchanged: 0/0
 26245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;Total ram usage:        0 bytes
 26251 ;; Hardware stack levels used:    1
 26252 ;; Hardware stack levels required when called:    1
 26253 ;; This function calls:
 26254 ;;		Absolute function
 26255 ;;		_TMR5_DefaultInterruptHandler
 26256 ;; This function is called by:
 26257 ;;		_TMR5_ISR
 26258 ;; This function uses a reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text143
 26262  017032                     __ptext143:
 26263                           	opt callstack 0
 26264  017032                     _TMR5_CallBack:
 26265                           	opt callstack 15
 26266                           
 26267                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26268                           
 26269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26270                           ;incstack = 0
 26271  017032  0100               	movlb	0	; () banked
 26272  017034  519C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26273  017036  119D               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26274  017038  119E               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26275  01703A  B4D8               	btfsc	status,2,c
 26276  01703C  0012               	return	
 26277                           
 26278                           ; BSR set to: 0
 26279                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26280  01703E  D801               	call	u571_48
 26281  017040  0012               	return	
 26282  017042                     u571_48:
 26283  017042  0005               	push	
 26284  017044  6EFA               	movwf	pclath,c
 26285  017046  519C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26286  017048  6EFD               	movwf	tosl,c
 26287  01704A  519D               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26288  01704C  6EFE               	movwf	tosh,c
 26289  01704E  519E               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26290  017050  6EFF               	movwf	tosu,c
 26291  017052  50FA               	movf	pclath,w,c
 26292  017054  0012               	return		;indir
 26293  017056                     __end_of_TMR5_CallBack:
 26294                           	opt callstack 0
 26295                           
 26296 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26297 ;; Defined at:
 26298 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26299 ;; Parameters:    Size  Location     Type
 26300 ;;		None
 26301 ;; Auto vars:     Size  Location     Type
 26302 ;;		None
 26303 ;; Return value:  Size  Location     Type
 26304 ;;                  1  [STACK] void 
 26305 ;; Registers used:
 26306 ;;		wreg, status,2, status,0, btemp+11
 26307 ;; Tracked objects:
 26308 ;;		On entry : 3F/0
 26309 ;;		On exit  : 0/0
 26310 ;;		Unchanged: 0/0
 26311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26316 ;;Total ram usage:        0 bytes
 26317 ;; Hardware stack levels used:    1
 26318 ;; This function calls:
 26319 ;;		Nothing
 26320 ;; This function is called by:
 26321 ;;		_TMR5_Initialize
 26322 ;;		_TMR5_CallBack
 26323 ;; This function uses a reentrant model
 26324 ;;
 26325                           
 26326                           	psect	text144
 26327  01721A                     __ptext144:
 26328                           	opt callstack 0
 26329  01721A                     _TMR5_DefaultInterruptHandler:
 26330                           	opt callstack 15
 26331                           
 26332                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26333                           
 26334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26335                           ;incstack = 0
 26336  01721A  A0BE               	btfss	16318,0,c	;volatile
 26337  01721C  D002               	goto	u531_40
 26338  01721E  0E01               	movlw	1
 26339  017220  D001               	goto	u531_46
 26340  017222                     u531_40:
 26341  017222  0E00               	movlw	0
 26342  017224                     u531_46:
 26343  017224  0AFF               	xorlw	255
 26344  017226  6E43               	movwf	btemp+11,c
 26345  017228  50BE               	movf	16318,w,c	;volatile
 26346  01722A  1843               	xorwf	btemp+11,w,c
 26347  01722C  0BFE               	andlw	-2
 26348  01722E  1843               	xorwf	btemp+11,w,c
 26349  017230  6EBE               	movwf	16318,c	;volatile
 26350                           
 26351                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26352  017232  0012               	return		;funcret
 26353  017234                     __end_of_TMR5_DefaultInterruptHandler:
 26354                           	opt callstack 0
 26355                           
 26356                           ;
 26357                           ; Interrupt Vector Table @ 0x8
 26358                           ;
 26359                           
 26360                           	psect	ivt0x8
 26361  000008                     __pivt0x8:
 26362                           	opt callstack 0
 26363  000008                     ivt0x8_base:
 26364                           	opt callstack 0
 26365                           
 26366                           ; Vector 0 : SWINT
 26367  000008  5CDE               	dw	_Default_ISR shr (0+2)
 26368                           
 26369                           ; Vector 1 : HLVD
 26370  00000A  5CDE               	dw	_Default_ISR shr (0+2)
 26371                           
 26372                           ; Vector 2 : OSF
 26373  00000C  5CDE               	dw	_Default_ISR shr (0+2)
 26374                           
 26375                           ; Vector 3 : CSW
 26376  00000E  5CDE               	dw	_Default_ISR shr (0+2)
 26377                           
 26378                           ; Vector 4 : NVM
 26379  000010  5CDE               	dw	_Default_ISR shr (0+2)
 26380                           
 26381                           ; Vector 5 : SCAN
 26382  000012  5CDE               	dw	_Default_ISR shr (0+2)
 26383                           
 26384                           ; Vector 6 : CRC
 26385  000014  5CDE               	dw	_Default_ISR shr (0+2)
 26386                           
 26387                           ; Vector 7 : IOC
 26388  000016  5CDE               	dw	_Default_ISR shr (0+2)
 26389                           
 26390                           ; Vector 8 : INT0
 26391  000018  5CB8               	dw	_INT0_ISR shr (0+2)
 26392                           
 26393                           ; Vector 9 : ZCD
 26394  00001A  5CDE               	dw	_Default_ISR shr (0+2)
 26395                           
 26396                           ; Vector 10 : AD
 26397  00001C  5AFD               	dw	_ADCC_ISR shr (0+2)
 26398                           
 26399                           ; Vector 11 : ADT
 26400  00001E  5CDE               	dw	_Default_ISR shr (0+2)
 26401                           
 26402                           ; Vector 12 : CMP1
 26403  000020  5CDE               	dw	_Default_ISR shr (0+2)
 26404                           
 26405                           ; Vector 13 : SMT1
 26406  000022  5CDE               	dw	_Default_ISR shr (0+2)
 26407                           
 26408                           ; Vector 14 : SMT1PRA
 26409  000024  5CDE               	dw	_Default_ISR shr (0+2)
 26410                           
 26411                           ; Vector 15 : SMT1PRW
 26412  000026  5CDE               	dw	_Default_ISR shr (0+2)
 26413                           
 26414                           ; Vector 16 : DMA1SCNT
 26415  000028  5CAD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26416                           
 26417                           ; Vector 17 : DMA1DCNT
 26418  00002A  5CC6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26419                           
 26420                           ; Vector 18 : DMA1OR
 26421  00002C  5CCC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26422                           
 26423                           ; Vector 19 : DMA1A
 26424  00002E  5CC9               	dw	_DMA1_DMAA_ISR shr (0+2)
 26425                           
 26426                           ; Vector 20 : SPI1RX
 26427  000030  5CDE               	dw	_Default_ISR shr (0+2)
 26428                           
 26429                           ; Vector 21 : SPI1TX
 26430  000032  5CDE               	dw	_Default_ISR shr (0+2)
 26431                           
 26432                           ; Vector 22 : SPI1
 26433  000034  5CDE               	dw	_Default_ISR shr (0+2)
 26434                           
 26435                           ; Vector 23 : I2C1RX
 26436  000036  5CDE               	dw	_Default_ISR shr (0+2)
 26437                           
 26438                           ; Vector 24 : I2C1TX
 26439  000038  5CDE               	dw	_Default_ISR shr (0+2)
 26440                           
 26441                           ; Vector 25 : I2C1
 26442  00003A  5CDE               	dw	_Default_ISR shr (0+2)
 26443                           
 26444                           ; Vector 26 : I2C1E
 26445  00003C  5CDE               	dw	_Default_ISR shr (0+2)
 26446                           
 26447                           ; Vector 27 : U1RX
 26448  00003E  5BDD               	dw	_UART1_rx_vect_isr shr (0+2)
 26449                           
 26450                           ; Vector 28 : U1TX
 26451  000040  5BD3               	dw	_UART1_tx_vect_isr shr (0+2)
 26452                           
 26453                           ; Vector 29 : U1E
 26454  000042  5CDE               	dw	_Default_ISR shr (0+2)
 26455                           
 26456                           ; Vector 30 : U1
 26457  000044  5CDE               	dw	_Default_ISR shr (0+2)
 26458                           
 26459                           ; Vector 31 : TMR0
 26460  000046  5CDE               	dw	_Default_ISR shr (0+2)
 26461                           
 26462                           ; Vector 32 : TMR1
 26463  000048  5CDE               	dw	_Default_ISR shr (0+2)
 26464                           
 26465                           ; Vector 33 : TMR1G
 26466  00004A  5CDE               	dw	_Default_ISR shr (0+2)
 26467                           
 26468                           ; Vector 34 : TMR2
 26469  00004C  5CDE               	dw	_Default_ISR shr (0+2)
 26470                           
 26471                           ; Vector 35 : CCP1
 26472  00004E  5CDE               	dw	_Default_ISR shr (0+2)
 26473                           
 26474                           ; Vector 36 : Undefined
 26475  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26476                           
 26477                           ; Vector 37 : NCO1
 26478  000052  5CDE               	dw	_Default_ISR shr (0+2)
 26479                           
 26480                           ; Vector 38 : CWG1
 26481  000054  5CDE               	dw	_Default_ISR shr (0+2)
 26482                           
 26483                           ; Vector 39 : CLC1
 26484  000056  5CDE               	dw	_Default_ISR shr (0+2)
 26485                           
 26486                           ; Vector 40 : INT1
 26487  000058  5CBC               	dw	_INT1_ISR shr (0+2)
 26488                           
 26489                           ; Vector 41 : CMP2
 26490  00005A  5CDE               	dw	_Default_ISR shr (0+2)
 26491                           
 26492                           ; Vector 42 : DMA2SCNT
 26493  00005C  5CDE               	dw	_Default_ISR shr (0+2)
 26494                           
 26495                           ; Vector 43 : DMA2DCNT
 26496  00005E  5CDE               	dw	_Default_ISR shr (0+2)
 26497                           
 26498                           ; Vector 44 : DMA2OR
 26499  000060  5CDE               	dw	_Default_ISR shr (0+2)
 26500                           
 26501                           ; Vector 45 : DMA2A
 26502  000062  5CDE               	dw	_Default_ISR shr (0+2)
 26503                           
 26504                           ; Vector 46 : I2C2RX
 26505  000064  5CDE               	dw	_Default_ISR shr (0+2)
 26506                           
 26507                           ; Vector 47 : I2C2TX
 26508  000066  5CDE               	dw	_Default_ISR shr (0+2)
 26509                           
 26510                           ; Vector 48 : I2C2
 26511  000068  5CDE               	dw	_Default_ISR shr (0+2)
 26512                           
 26513                           ; Vector 49 : I2C2E
 26514  00006A  5CDE               	dw	_Default_ISR shr (0+2)
 26515                           
 26516                           ; Vector 50 : U2RX
 26517  00006C  5BF1               	dw	_UART2_rx_vect_isr shr (0+2)
 26518                           
 26519                           ; Vector 51 : U2TX
 26520  00006E  5BE7               	dw	_UART2_tx_vect_isr shr (0+2)
 26521                           
 26522                           ; Vector 52 : U2E
 26523  000070  5CDE               	dw	_Default_ISR shr (0+2)
 26524                           
 26525                           ; Vector 53 : U2
 26526  000072  5CDE               	dw	_Default_ISR shr (0+2)
 26527                           
 26528                           ; Vector 54 : TMR3
 26529  000074  5CDE               	dw	_Default_ISR shr (0+2)
 26530                           
 26531                           ; Vector 55 : TMR3G
 26532  000076  5CDE               	dw	_Default_ISR shr (0+2)
 26533                           
 26534                           ; Vector 56 : TMR4
 26535  000078  5CDE               	dw	_Default_ISR shr (0+2)
 26536                           
 26537                           ; Vector 57 : CCP2
 26538  00007A  5CDE               	dw	_Default_ISR shr (0+2)
 26539                           
 26540                           ; Vector 58 : Undefined
 26541  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26542                           
 26543                           ; Vector 59 : CWG2
 26544  00007E  5CDE               	dw	_Default_ISR shr (0+2)
 26545                           
 26546                           ; Vector 60 : CLC2
 26547  000080  5CDE               	dw	_Default_ISR shr (0+2)
 26548                           
 26549                           ; Vector 61 : INT2
 26550  000082  5CC0               	dw	_INT2_ISR shr (0+2)
 26551                           
 26552                           ; Vector 62 : Undefined
 26553  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26554                           
 26555                           ; Vector 63 : Undefined
 26556  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26557                           
 26558                           ; Vector 64 : Undefined
 26559  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26560                           
 26561                           ; Vector 65 : Undefined
 26562  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26563                           
 26564                           ; Vector 66 : Undefined
 26565  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26566                           
 26567                           ; Vector 67 : Undefined
 26568  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26569                           
 26570                           ; Vector 68 : Undefined
 26571  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26572                           
 26573                           ; Vector 69 : Undefined
 26574  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26575                           
 26576                           ; Vector 70 : TMR5
 26577  000094  597F               	dw	_TMR5_ISR shr (0+2)
 26578                           
 26579                           ; Vector 71 : TMR5G
 26580  000096  5CDE               	dw	_Default_ISR shr (0+2)
 26581                           
 26582                           ; Vector 72 : TMR6
 26583  000098  5C80               	dw	_TMR6_ISR shr (0+2)
 26584                           
 26585                           ; Vector 73 : CCP3
 26586  00009A  5CDE               	dw	_Default_ISR shr (0+2)
 26587                           
 26588                           ; Vector 74 : CWG3
 26589  00009C  5CDE               	dw	_Default_ISR shr (0+2)
 26590                           
 26591                           ; Vector 75 : CLC3
 26592  00009E  5CDE               	dw	_Default_ISR shr (0+2)
 26593                           
 26594                           ; Vector 76 : Undefined
 26595  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26596                           
 26597                           ; Vector 77 : Undefined
 26598  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26599                           
 26600                           ; Vector 78 : Undefined
 26601  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26602                           
 26603                           ; Vector 79 : Undefined
 26604  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26605                           
 26606                           ; Vector 80 : CCP4
 26607  0000A8  5CDE               	dw	_Default_ISR shr (0+2)
 26608                           
 26609                           ; Vector 81 : CLC4
 26610  0000AA  5CDE               	dw	_Default_ISR shr (0+2)
 26611  0000AC                     ivt0x8_undefint:
 26612                           	opt callstack 0
 26613  0000AC  00FF               	reset	
 26614                           
 26615                           	psect	text145
 26616  000000                     __ptext145:
 26617                           	opt callstack 0
 26618                           
 26619                           	psect	rparam
 26620  0000                     
 26621                           	psect	temp
 26622  000038                     btemp:
 26623                           	opt callstack 0
 26624  000038                     	ds	32
 26625  0000                     wtemp0	set	btemp
 26626  0000                     wtemp1	set	btemp+2
 26627  0000                     wtemp2	set	btemp+4
 26628  0000                     wtemp3	set	btemp+6
 26629  0000                     wtemp4	set	btemp+8
 26630  0000                     wtemp5	set	btemp+10
 26631  0000                     wtemp8	set	btemp+1
 26632  0000                     ttemp0	set	btemp
 26633  0000                     ttemp1	set	btemp+3
 26634  0000                     ttemp2	set	btemp+6
 26635  0000                     ttemp3	set	btemp+9
 26636  0000                     ttemp5	set	btemp+1
 26637  0000                     ttemp6	set	btemp+4
 26638  0000                     ttemp7	set	btemp+8
 26639  0000                     ltemp0	set	btemp
 26640  0000                     ltemp1	set	btemp+4
 26641  0000                     ltemp2	set	btemp+8
 26642  0000                     lltemp0	set	btemp
 26643  0000                     lltemp1	set	btemp+8
 26644  0000                     lltemp2	set	btemp+16
 26645  0000                     lltemp3	set	btemp+24
 26646                           tosu	equ	0x3FFF
 26647                           tosh	equ	0x3FFE
 26648                           tosl	equ	0x3FFD
 26649                           stkptr	equ	0x3FFC
 26650                           pclatu	equ	0x3FFB
 26651                           pclath	equ	0x3FFA
 26652                           pcl	equ	0x3FF9
 26653                           tblptru	equ	0x3FF8
 26654                           tblptrh	equ	0x3FF7
 26655                           tblptrl	equ	0x3FF6
 26656                           tablat	equ	0x3FF5
 26657                           prodh	equ	0x3FF4
 26658                           prodl	equ	0x3FF3
 26659                           indf0	equ	0x3FEF
 26660                           postinc0	equ	0x3FEE
 26661                           postdec0	equ	0x3FED
 26662                           preinc0	equ	0x3FEC
 26663                           plusw0	equ	0x3FEB
 26664                           fsr0h	equ	0x3FEA
 26665                           fsr0l	equ	0x3FE9
 26666                           wreg	equ	0x3FE8
 26667                           indf1	equ	0x3FE7
 26668                           postinc1	equ	0x3FE6
 26669                           postdec1	equ	0x3FE5
 26670                           preinc1	equ	0x3FE4
 26671                           plusw1	equ	0x3FE3
 26672                           fsr1h	equ	0x3FE2
 26673                           fsr1l	equ	0x3FE1
 26674                           bsr	equ	0x3FE0
 26675                           indf2	equ	0x3FDF
 26676                           postinc2	equ	0x3FDE
 26677                           postdec2	equ	0x3FDD
 26678                           preinc2	equ	0x3FDC
 26679                           plusw2	equ	0x3FDB
 26680                           fsr2h	equ	0x3FDA
 26681                           fsr2l	equ	0x3FD9
 26682                           status	equ	0x3FD8


Data Sizes:
    Strings     871
    Constant    72
    Data        1324
    BSS         1918
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      61
    BANK0           160      3     131
    BANK1           256      0     240
    BANK2           256      0     254
    BANK3           256      0     179
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_78(CODE[3]), STR_74(CODE[3]), STR_69(CODE[3]), STR_65(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_78(CODE[3]), STR_74(CODE[3]), STR_69(CODE[3]), STR_65(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[25]), STR_55(CODE[26]), 
		 -> STR_54(CODE[21]), STR_53(CODE[23]), STR_52(CODE[19]), STR_51(CODE[19]), 
		 -> STR_50(CODE[20]), STR_49(CODE[18]), STR_48(CODE[20]), STR_47(CODE[18]), 
		 -> STR_46(CODE[20]), STR_45(CODE[18]), STR_44(CODE[20]), STR_43(CODE[22]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), STR_40(CODE[15]), STR_39(CODE[10]), 
		 -> STR_38(CODE[10]), STR_37(CODE[19]), STR_34(CODE[21]), STR_33(CODE[26]), 
		 -> STR_32(CODE[26]), STR_31(CODE[20]), STR_29(CODE[91]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), 
		 -> STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), 
		 -> STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[25]), STR_55(CODE[26]), 
		 -> STR_54(CODE[21]), STR_53(CODE[23]), STR_52(CODE[19]), STR_51(CODE[19]), 
		 -> STR_50(CODE[20]), STR_49(CODE[18]), STR_48(CODE[20]), STR_47(CODE[18]), 
		 -> STR_46(CODE[20]), STR_45(CODE[18]), STR_44(CODE[20]), STR_43(CODE[22]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), STR_40(CODE[15]), STR_39(CODE[10]), 
		 -> STR_38(CODE[10]), STR_37(CODE[19]), STR_34(CODE[21]), STR_33(CODE[26]), 
		 -> STR_32(CODE[26]), STR_31(CODE[20]), STR_29(CODE[91]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), 
		 -> STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), 
		 -> STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 514
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_36(CODE[9]), STR_35(CODE[12]), T(BANK6[256]), D.lcd(BIGRAM[512]), 
		 -> D(BIGRAM[514]), STR_30(CODE[6]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V.terminal(BIGRAM[160]), V(BIGRAM[384]), 

    a	PTR const unsigned char  size(2) Largest target is 514
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_36(CODE[9]), STR_35(CODE[12]), T(BANK6[256]), D.lcd(BIGRAM[512]), 
		 -> D(BIGRAM[514]), STR_30(CODE[6]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V.terminal(BIGRAM[160]), V(BIGRAM[384]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[25]), STR_55(CODE[26]), 
		 -> STR_54(CODE[21]), STR_53(CODE[23]), STR_52(CODE[19]), STR_51(CODE[19]), 
		 -> STR_50(CODE[20]), STR_49(CODE[18]), STR_48(CODE[20]), STR_47(CODE[18]), 
		 -> STR_46(CODE[20]), STR_45(CODE[18]), STR_44(CODE[20]), STR_43(CODE[22]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), STR_40(CODE[15]), STR_39(CODE[10]), 
		 -> STR_38(CODE[10]), STR_37(CODE[19]), STR_34(CODE[21]), STR_33(CODE[26]), 
		 -> STR_32(CODE[26]), STR_31(CODE[20]), STR_29(CODE[91]), STR_25(CODE[29]), 
		 -> STR_24(CODE[26]), STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), 
		 -> STR_20(CODE[26]), STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), V(BIGRAM[384]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), V(BIGRAM[384]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5818_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D(BIGRAM[514]), V(BIGRAM[384]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D(BIGRAM[514]), V(BIGRAM[384]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[25]), STR_55(CODE[26]), 
		 -> STR_54(CODE[21]), STR_53(CODE[23]), STR_52(CODE[19]), STR_51(CODE[19]), 
		 -> STR_50(CODE[20]), STR_49(CODE[18]), STR_48(CODE[20]), STR_47(CODE[18]), 
		 -> STR_46(CODE[20]), STR_45(CODE[18]), STR_44(CODE[20]), STR_43(CODE[22]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), STR_40(CODE[15]), STR_39(CODE[10]), 
		 -> STR_38(CODE[10]), STR_37(CODE[19]), STR_34(CODE[21]), STR_33(CODE[26]), 
		 -> STR_32(CODE[26]), STR_31(CODE[20]), STR_29(CODE[91]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), 
		 -> STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), 
		 -> STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 91
		 -> STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[25]), STR_55(CODE[26]), 
		 -> STR_54(CODE[21]), STR_53(CODE[23]), STR_52(CODE[19]), STR_51(CODE[19]), 
		 -> STR_50(CODE[20]), STR_49(CODE[18]), STR_48(CODE[20]), STR_47(CODE[18]), 
		 -> STR_46(CODE[20]), STR_45(CODE[18]), STR_44(CODE[20]), STR_43(CODE[22]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), STR_40(CODE[15]), STR_39(CODE[10]), 
		 -> STR_38(CODE[10]), STR_37(CODE[19]), STR_34(CODE[21]), STR_33(CODE[26]), 
		 -> STR_32(CODE[26]), STR_31(CODE[20]), STR_29(CODE[91]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), 
		 -> STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), 
		 -> STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_36(CODE[9]), STR_35(CODE[12]), 
		 -> T(BANK6[256]), D.lcd(BIGRAM[512]), D(BIGRAM[514]), STR_30(CODE[6]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BIGRAM[384]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_36(CODE[9]), STR_35(CODE[12]), 
		 -> T(BANK6[256]), D.lcd(BIGRAM[512]), D(BIGRAM[514]), STR_30(CODE[6]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BIGRAM[384]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_36(CODE[9]), 
		 -> STR_35(CODE[12]), T(BANK6[256]), D.lcd(BIGRAM[512]), D(BIGRAM[514]), 
		 -> STR_30(CODE[6]), STR_7(CODE[6]), STR_3(CODE[6]), V(BIGRAM[384]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), V(BIGRAM[384]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_36(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_35(CODE[12]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    F17409.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    F17409.header	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    block.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    block.header	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    block	PTR struct response_type size(1) Largest target is 9
		 -> secs_II_message@block(COMRAM[7]), 

    S.block.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    S.block.header	PTR unsigned char  size(2) Largest target is 480
		 -> S.message(BIGRAM[36]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H53(BANK3[112]), H33(BANK0[36]), H26(BANK2[29]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), H12(BANK2[30]), 
		 -> H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H53(BANK3[112]), H33(BANK0[36]), H26(BANK2[29]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), H12(BANK2[30]), 
		 -> H10(BANK1[91]), 

    t_link	PTR enum E16753 size(2) Largest target is 384
		 -> V(BIGRAM[384]), 

    S3329response_type$reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    F17383.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H33(BANK0[36]), H12(BANK2[30]), H10(BANK1[91]), 

    S3329response_type$header	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    F17383.header	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[64]), H12(BANK2[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16753 size(2) Largest target is 384
		 -> V(BIGRAM[384]), 

    m_link	PTR enum E16753 size(2) Largest target is 384
		 -> V(BIGRAM[384]), 

    m_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    byte_block	PTR unsigned char  size(2) Largest target is 480
		 -> S(BIGRAM[460]), H53(BANK3[112]), H33(BANK0[36]), H26(BANK2[29]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), H12(BANK2[30]), 
		 -> H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), V(BIGRAM[384]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), V(BIGRAM[384]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), D(BIGRAM[514]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S2028spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S2028spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  296996
          _MyeaDogM_WriteStringAtPos
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                         _hb_message
                       _init_display
                         _m_protocol
                      _mode_lamp_dim
                         _r_protocol
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _t_protocol
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2   31997
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1304
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     229
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      9     2      7   29799
                   _DATAEE_WriteByte
                         _StartTimer
                          _TimerDone
                       _display_info
                       _gem_messages
                          _parse_sid
                        _s10f1_opcmd
                  _sequence_messages
                   _set_display_info
              _set_temp_display_help
                     _vterm_sequence
 ---------------------------------------------------------------------------------
 (3) _vterm_sequence                                       0     0      0   14325
                      _get_vterm_ptr
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sequence_messages                                    1     0      1      93
                         _StartTimer
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0   14263
                           _parse_ll
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _parse_ll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _parse_sid                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _gem_messages                                         2     0      2     124
                         _StartTimer
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2   17065
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2   17603
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2     217
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _secs_II_monitor_message                              6     2      4   15643
                          _ee_logger
 ---------------------------------------------------------------------------------
 (3) _ee_logger                                            8     2      6   14755
                   _DATAEE_WriteByte
                         _StartTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     130
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   15233
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           0     0      0   91013
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   45213
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (3) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (1) _MyeaDogM_WriteStringAtPos                            4     0      4   76310
                          _TimerDone
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   31064
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   30720
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   15191
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   15403
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   13933
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             26    10     16   14263
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   13757
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           39    33      6   13307
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    3302
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3779
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    2016
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1878
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     728
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyeaDogM_WriteStringAtPos
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _get_vterm_ptr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_gem_state
       _StartTimer
       _TimerDone
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_gem_state
       _StartTimer
       _TimerDone
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _DATAEE_WriteByte
       _StartTimer
       _TimerDone
       _display_info
       _gem_messages
         _StartTimer
       _parse_sid
       _s10f1_opcmd
         _parse_ll
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
       _sequence_messages
         _StartTimer
       _set_display_info
         _TimerDone
       _set_temp_display_help
       _vterm_sequence
         _get_vterm_ptr
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     64F      69       19.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0     100      17      100.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B3      11       69.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      83       5       81.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     65F      58        0.0%
DATA                 0      0     CAE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul  6 23:45:16 2019

                    _SPI1_Exchange8bit 70FE               __end_of_set_display_info 70FE  
                                    _D 0700                                      _S 0902  
                                    _T 0600                                      _V 0ACE  
     __end_of_TMR5_SetInterruptHandler 6EAC              __end_of_UART2_is_rx_ready 7352  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 7342                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 02C3  
                                  _H13 015B                                    _H14 01AF  
                                  _H17 019B                                    _H33 00BC  
                                  _H26 02E1                                    _H53 0300  
                                  l200 7288                                    l711 6970  
                                  l609 6C46                                    l729 6C72  
                                  l589 68F0                                    l863 710C  
                                  _GIE 01FE97                                    _abs 67C8  
                                  _pad 52F0                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 71CA                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7078                           _run_checksum 6CF4  
                   _UART1_Transmit_ISR 6C20                          __CFG_BBEN$OFF 000000  
     __size_of_secs_II_monitor_message 0154                    __end_of_s10f1_opcmd 4796  
                        _INT1_CallBack 709A                           __CFG_ZCD$OFF 000000  
                                 _H254 0C4E                                   l2000 61C0  
                                 l1140 6954                                   l2007 61D2  
                                 l1080 634E                                   l2130 1E34  
                                 l2132 1E74                                   l1421 0A92  
                                 l2126 1DE2                                   l1414 0964  
                                 l1407 07EA                                   l2240 6ADC  
                                 l2128 1DFC                                   l2129 1E18  
                                 l1417 09A0                                   l3202 6808  
                                 l2146 52E6                                   l2082 1FDA  
                                 l1434 0AFC                                   l2405 534C  
                                 l2501 13FC                                   l2317 5622  
                                 l2069 5920                                   l1453 0B28  
                                 l1381 0350                                   l1390 04AE  
                                 l1374 01F8                                   l1366 0044  
                                 l1383 03EA                                   l1536 6558  
                                 l1392 0534                                   l2425 20BE  
                                 l1394 053E                                   l2179 4F72  
                                 l3236 51C4                                   l2452 3760  
                                 l2365 70FA                                   l2199 4CF8  
                                 l1904 3068                                   l2473 2CEE  
                                 l1682 602C                                   l3291 6136  
                                 l3276 4988                                   l1678 5D10  
                                 l1918 3218                                   l1863 24C8  
                                 l1961 668C                                   l1970 4314  
                                 l1939 3BB2                                   l1797 14BE  
                                 l1983 614C                                   l1967 40C8  
                                 _HC33 FC4F                                   l9020 6D00  
                                 l9720 6C6E                                   l8912 69D6  
                                 l8936 699A                                   l9746 693C  
                                 l8962 6814                                   l8966 683E  
                                 STR_1 FF84                                   STR_2 FFB4  
                                 STR_3 FFE2                                   l9698 6C42  
                                 STR_4 FF62                                   STR_5 FF73  
                                 STR_6 FFB4                                   STR_7 FFE2  
                                 STR_8 FF51                                   STR_9 FF95  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 _T2PR 003FAB                                   u5210 6378  
                                 _T6PR 003F93                                   u5235 63AC  
                                 u7100 5EDE                                   u5236 63AE  
                                 u5228 637A                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u8000 493A  
                                 u7200 6BB8                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u7210 6BBA  
                                 u7130 6B88                                   _PMD6 0039C6  
                                 u7107 5ED0                                   _PMD7 0039C7  
                                 u7300 3EF0                                   u7220 688C  
                                 u7140 6B8A                                   u7070 50CE  
                                 u7230 688E                                   u7311 3EFA  
                                 u7320 3F34                                   u7400 4370  
                                 u7240 60E4                                   u8200 630E  
                                 u7090 514A                                   u7330 3F66  
                                 u7250 60E6                                   u7420 43C6  
                                 u7350 4044                                   u7430 43F8  
                                 u7190 67DC                                   u7280 3E9A  
                                 u7440 442A                                   u8208 6310  
                                 u8400 411E                                   u8225 635E  
                                 u7370 4096                                   u8170 366C  
                                 u8226 6360                                   u8410 413C  
                                 u7460 44E2                                   u8420 415A  
                                 u4885 68C8                                   u8430 4178  
                                 u7480 4534                                   u7730 37F8  
                                 u8370 5AD8                                   u7740 383E  
                                 u8380 40E2                                   u8390 4100  
                                 u8631 5896                                   u7770 391A  
                                 u7747 3830                                   u8840 39BE  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 70BC  
                     __end_of_ADCC_ISR 6C20                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01D0                                   _ctoa 6034  
                                 _main 0000                                   _dtoa 1FE0  
                                 _seed 00AD                                   _prec 0012  
                                 _nout 00AB                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3676                                   btemp 0038  
                                 _xtoa 2CAA      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 001C  
            __end_of_SPI1_Exchange8bit 711C                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 6F74                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005D  
            __size_of_DATAEE_WriteByte 0068             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 72EE                       __end_of_INT1_ISR 72FE  
                     __end_of_INT2_ISR 730E         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 5D18          __end_of_OSCILLATOR_Initialize 728E  
                                l12000 3802                                  l12010 38B8  
                                l12100 481E                                  l12014 38F4  
                                l12006 388C                                  l12102 488A  
                                l12232 3422                                  l12252 35F8  
                                l12244 354A                                  l12420 6912  
                                l12334 7006                                  l12238 34E0  
                                l13400 3A8E                                  l12418 6910  
                                l11724 50DA                                  l11804 6126  
                                l13412 3AE2                                  l13404 3AA8  
                                PRLOCK 0039EF                                  l11822 3EF4  
                                l12390 61A8                                  l12382 6154  
                                l13430 3B64                                  l13422 3B2A  
                                l13414 3B0A                                  l11736 5E8E  
                                l11840 400C                                  l11816 3EA0  
                                l12560 42BA                                  l12456 6990  
                                l13432 3B8C                                  l11738 5EB0  
                                l16002 4E94                                  l12386 615C  
                                l12570 42DE                                  l12458 6992  
                                l13418 3B10                                  l11828 3F3A  
                                l11860 4376                                  l13460 6A46  
                                l12476 6AE6                                  l16012 4F0A  
                                l16004 4EB4                                  l11782 67F8  
                                l16014 4F2A                                  l16022 4F34  
                                l13438 3B92                                  l13456 6A2E  
                                l12760 5876                                  l12568 42C4  
                                l16112 1BD6                                  l12496 5A3A  
                                l13392 39D4                                  l15410 5356  
                                l16026 4F4E                                  l12922 4CC6  
                                l12770 590A                                  l12586 61DC  
                                l16210 1D5A                                  l17010 0036  
                                l15404 531C                                  l11876 44AA  
                                l11868 43FE                                  l12932 4CF4  
                                l16132 1C5A                                  l16124 1C10  
                                l15414 5392                                  l15510 2CDE  
                                l12942 4D1E                                  l16150 1C78  
                                l16126 1C3C                                  l16070 1B0C  
                                l17014 007A                                  l15408 5344  
                                l11992 3796                                  l11976 36E2  
                                l15600 0E1C                                  l12960 4D6E  
                                l12952 4D62                                  l12936 4CFC  
                                l12928 4CEC                                  l12768 58F4  
                                l16224 1D66                                  l16208 1D34  
                                l16152 1C98                                  l16072 1B1E  
                                l17120 05FA                                  l17008 002E  
                                l15418 53DC                                  l15426 6052  
                                l15530 2DB4                                  l15522 2D54  
                                l12954 4D66                                  l12946 4D40  
                                l12938 4D18                                  l16226 1DA4  
                                l16170 1CB6                                  l16066 1AF4  
                                l16330 1FA2                                  l17202 09AA  
                                l17130 0676                                  l15428 607E  
                                l15460 20F8                                  l15452 20AE  
                                l11996 37D2                                  l15516 2D18  
                                l15604 0E6E                                  l12972 4D7A  
                                l12964 4D72                                  l12956 4D6A  
                                l16420 2464                                  l16244 1DF4  
                                l16228 1DAC                                  l16316 1F88  
                                l16180 1CF0                                  l16172 1CD0  
                                l16092 1B7E                                  l17220 0B04  
                                l17204 09DA                                  l17132 06C6  
                                l17108 04F8                                  l17212 0A9C  
                                l12974 4DAC                                  l16270 1E50  
                                l16086 1B60                                  l17118 05C4  
                                l17214 0AC8                                  l15464 2116  
                                l15640 11F2                                  l15616 0FC8  
                                l16520 2742                                  l15800 4620  
                                l17232 0B64                                  l17224 0B30  
                                l17208 0A18                                  l17072 038E  
                                l17056 027E                                  l15394 5F1A  
                                l15474 2328                                  l15570 301A  
                                l15546 2EAA                                  l15554 2F30  
                                l15626 1076                                  l12986 4DD8  
                                l12978 4DBC                                  l12994 4DEC  
                                l16506 270A                                  l16442 2502  
                                l16098 1B9C                                  l16610 30A0  
                                l17250 0C34                                  l17058 02D0  
                                l15660 1384                                  l12996 4E12  
                                l16508 270E                                  l15820 466C  
                                l15812 4646                                  l16292 1EFE  
                                l16188 1D10                                  l16700 3304  
                                l17180 0850                                  l17092 0416  
                                l17084 03F2                                  l15398 5F58  
                                l15494 23DA                                  l15654 132A  
                                l15670 13A8                                  l16550 282A  
                                l16470 25B4                                  l16454 254A  
                                l15830 469C                                  l15806 462A  
                                l16286 1E88                                  l16622 30E8  
                                l16710 336E                                  l17238 0C02  
                                l17182 08CA                                  l17174 07E0  
                                l17158 0744                                  l15664 1388  
                                l15592 0D30                                  l16720 140A  
                                l16544 2808                                  l16456 2560  
                                l15824 4676                                  l15920 29A0  
                                l16296 1F22                                  l16704 330E  
                                l16640 3170                                  l16624 30FA  
                                l17192 0954                                  l17096 0426  
                                l17088 03FA                                  l15498 2416  
                                l15682 5BEE                                  l15738 5E1A  
                                l16554 2836                                  l16490 2662  
                                l16482 2610                                  l16474 25D2  
                                l16562 2848                                  l15842 46CC  
                                l15826 4696                                  l15818 4664  
                                l15930 2BC6                                  l15922 29FE  
                                l16298 1F66                                  l16634 3144  
                                l15684 5C30                                  l16580 544E  
                                l16820 1664                                  l16812 1622  
                                l16548 2826                                  l16564 2892  
                                l15844 46EC                                  l15836 46BA  
                                l15924 2A5C                                  l15916 28B0  
                                l16652 31E6                                  l16644 319C  
                                l16708 3324                                  l16590 54E0  
                                l15942 51DA                                  l16734 1464  
                                l16494 2692                                  l16486 2634  
                                l15870 4760                                  l15838 46C2  
                                l15790 45FC                                  l15782 45CC  
                                l15926 2ABE                                  l15918 2942  
                                l15934 2C68                                  l16584 5494  
                                l16840 1732                                  l16824 1692  
                                l16816 1640                                  l15848 46F2  
                                l15784 45D4                                  l15776 45AE  
                                l15768 4590                                  l15928 2B44  
                                l16672 326A                                  l16664 323E  
                                l16930 19E0                                  l15866 475A  
                                l15858 4728                                  l15794 4602  
                                l16682 3296                                  l16588 54A8  
                                l16596 5500                                  l16940 1A00  
                                l16932 19E4                                  l16908 1916  
                                l16828 16C2                                  l16852 177A  
                                l16772 155E                                  l15788 45DC  
                                l16692 32D8                                  l16668 325E  
                                l16934 19EC                                  l16838 172E  
                                l16758 1500                                  l16694 32E2  
                                l15968 553A                                  l15992 4E5C  
                                l16936 19F0                                  l16928 19CA  
                                l16880 1842                                  l16872 17F0  
                                l16944 1A16                                  l16696 32F8  
                                l15994 4E8A                                  l16938 19F8  
                                l16786 15BC                                  l16946 1A60  
                                l16698 32FC                                  l15988 4E54  
                                l16884 1872                                  l16876 1814  
                                l16868 17D2                                  l16894 18DE  
                                l16984 4AFA                                  l16896 18E2  
                      __end_of___aodiv 40BE                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 4558                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 FE6B  
                                STR_11 FE2C                                  STR_12 FE17  
                                STR_20 FD5D                                  STR_21 FEF6  
                                STR_13 FDA8                                  STR_22 FFE8  
                                STR_14 FD90                                  STR_15 FF3F  
                                STR_31 FEA8                                  STR_23 FE41  
                                STR_24 FD5D                                  STR_40 FFA5  
                                STR_16 FE56                                  STR_32 FD43  
                                STR_41 FFA5                                  STR_17 FE6B  
                                STR_33 FD29                                  STR_25 FCF2  
                        __CFG_WDTE$OFF 000000                                  STR_50 FE80  
                                STR_42 FFA5                                  STR_26 FFFB  
                                STR_18 FEBC                                  STR_34 FE02  
                                STR_51 FED0                                  STR_19 FE56  
                                STR_27 FFF8                                  STR_35 FFC3  
                                STR_43 FDD7                                  STR_60 FCDF  
                                STR_36 FFD9                                  STR_52 FEE3  
                                STR_44 FE94                                  STR_61 FFFB  
                                STR_45 FF2D                                  STR_37 FED0  
                                STR_53 FDC0                                  STR_29 FC97  
                                STR_62 FFFB                                  STR_38 FFCF  
                                STR_46 FE80                                  STR_54 FDED  
                                STR_39 FFCF                                  STR_63 FFEF  
                                STR_47 FF1B                                  STR_55 FD0F  
                                STR_48 FE80                                  STR_72 FFF5  
                                STR_56 FD77                                  _ADRPT 003EEC  
                                STR_57 FCDF                                  STR_65 FFEF  
                                STR_49 FF09                                  STR_58 FCDF  
                                STR_74 FFF5                                  STR_59 FCDF  
                                STR_67 FFF2                                  STR_76 FFEC  
                                STR_69 FFF2                                  STR_78 FFEC  
                                u11010 1F0C                                  u10300 20E4  
                                u10310 233C                                  u10230 2010  
                                u10240 2012                                  u10400 2CC4  
                                u10321 236C                                  u10330 2382  
                                u10331 2380                                  u10340 2396  
                                u10260 2082                                  u10500 2F2C  
                                u11028 1F0E                                  u11205 279A  
                                u10350 239A                                  u10510 2F4C  
                                u10430 2DAC                                  u11230 540C  
                                u11206 279C                                  u11215 27AA  
                                u10280 2094                                  u10440 2E00  
                                u10600 0D84                                  u11216 27AC  
                                u10521 2F7C                                  u10505 2F0E  
                                u10370 23B0                                  u10530 2F92  
                                u10450 2E02                                  u10531 2F90  
                                u10540 2FA6                                  u10620 0EF6  
                                u10700 5DFA                                  u11236 540E  
                                u10550 2FAA                                  u10470 2E60  
                                u10480 2E62                                  u11361 3190  
                                u10650 10CA                                  u10810 46B4  
                                u10730 45A8                                  _U1P1H 003DED  
                                u11195 278A                                  u11196 278C  
                                _U1P2H 003DEF                                  u10670 127A  
                                u10830 470A                                  u10750 45C6  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _T2CON 003FAC                                  _U1P2L 003DEE  
                                u11490 14CE                                  u10850 4740  
                                u10770 461A                                  _U1P3L 003DF0  
                                u10870 4778                                  u10790 465E  
                                _U2P1L 003DD4                                  u10960 1A94  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                u10966 1A96                                  u11775 1956  
                                _T5CLK 003F9D                                  u11776 1958  
                                u11785 1966                                  u11786 1968  
                                u11795 1976                                  u11796 1978  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _T2TMR 003FAA  
                                _U1UIR 003DF8                                  _T2RST 003FAF  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005D  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
              secs_gem_state@equipment 001E                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 7378  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 6F4C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 664E  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 721A  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 0022  
                                _flags 0014                                  _fputc 50AA  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 6898  
                                _fputs 5F0A                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005D                                  _srand 6B30  
                                _width 0010                                  _putch 71E4  
                      __end_of_islower 6B94               _INT1_SetInterruptHandler 6ED4  
                      __end_of_isupper 6BC4                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 0038                                  ltemp1 003C  
                                ltemp2 0040               __size_of_DMA1_Initialize 006A  
                                plusw0 003FEB                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0038  
                                ttemp1 003B                                  ttemp2 003E  
                                ttemp3 0041                                  ttemp5 0039  
                                ttemp6 003C                                  ttemp7 0040  
                       _secs_gem_state 4CC4                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 6E34            _UART1_SetRxInterruptHandler 6E0C  
                                wtemp0 0038                                  wtemp1 003A  
                                wtemp2 003C                                  wtemp3 003E  
                                wtemp4 0040                                  wtemp5 0042  
                                wtemp8 0039                        __end_of_sprintf 5730  
                      __end_of_strncmp 4992                        __end_of_toupper 6140  
                  ??_UART1_tx_vect_isr 005D              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 6F9C               __size_of_SPI1_Initialize 0016  
                         __end_of_HC33 FC97                        _TMR5_Initialize 6782  
                __end_of_ringBufS_init 6D94                        __initialization 4B44  
                    _UART2_rx_vect_isr 6FC4                           __end_of_ctoa 60BC  
                         __end_of_main 0C46                           __end_of_dtoa 2460  
                         __end_of_stoa 3934             __size_of_UART2_is_rx_ready 0008  
                         __end_of_xtoa 3064                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005D             __size_of_UART2_is_tx_ready 0008  
              __end_of_TMR2_Initialize 71E4       secs_II_monitor_message@store1_13 0059  
     secs_II_monitor_message@store6_11 0058               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 6E84                          __activetblptr 000003  
                          _s10f1_opcmd 4558              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005D  
            __end_of_UART1_tx_vect_isr 6F74                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 6E34                        _PWM8_Initialize 7262  
                     _UART1_Initialize 63D0                      _UART2_tx_vect_isr 6F9C  
                   _UART2_Transmit_ISR 6C4C                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                   __end_of_gem_messages 5926  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 6898                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005D  
                               _MD1SRC 003CFC                 __end_of_secs_gem_state 4E28  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003C  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1157 6646  
                       __CFG_WDTCCS$SC 000000                                 u211_48 70CA  
                               u207_48 7086                                 u209_48 70A8  
                     _mode_lamp_bright 72D2                                 _SCANPR 0039F7  
                               u531_40 7222                                 u531_46 7224  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               u571_48 7042                                 _OSCFRQ 0039DF  
                               u568_48 701E                                 _NVMDAT 0039E3  
            _MyeaDogM_WriteStringAtPos 5404               __end_of_send_lcd_cmd_dma 65FC  
                  ??_UART2_tx_vect_isr 005D              __end_of_UART2_rx_vect_isr 6FEA  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 730E  
                     _UART2_Initialize 6496                                 _WaitMs 6AC4  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 5FA2  
                               _memset 338A                   __size_of_help_button 003C  
                               clear_0 4C42                                 clear_1 4C56  
                               clear_2 4C6A                                 clear_3 4C7C  
                               clear_4 4C88                                 clear_5 4C94  
                               clear_6 4CA0                                 clear_7 4CAC  
                               _printf 6434                     _eaDogM_WriteString 5DC0  
                     __end_of_parse_ll 61B4                              ?_ADCC_ISR 005D  
                               _strlen 5E68                     __size_of_TimerDone 0024  
                         __pdataBIGRAM 0ACE                        _ADCC_Initialize 6738  
                       _PMD_Initialize 728E   __end_of_INT2_DefaultInterruptHandler 738A  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 7388  
                         __pdataCOMRAM 0058              __end_of_UART2_tx_vect_isr 6FC2  
                               lltemp0 0038                                 lltemp1 0040  
                               lltemp2 0048                                 lltemp3 0050  
                         __mediumconst FC4E                _secs_II_monitor_message 4E28  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 65A8  
                     __end_of_vfprintf 5C6E                             _StartTimer 6A4C  
                      _CLC1_Initialize 7056          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 67C8                      _SYSTEM_Initialize 669E  
                           __accesstop 0060                __end_of__initialization 4CBE  
                            ?_INT0_ISR 005D                              ?_INT1_ISR 005D  
                            ?_INT2_ISR 005D                   __end_of_display_help 736A  
                 __end_of_display_info 7362              __end_of_CLKREF_Initialize 7318  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0028  
                      _TMR5_WriteTimer 691A                  _set_temp_display_help 72A2  
               __end_of_ringBufS_flush 6034                         __pcstackCOMRAM 005D  
                           ___inthi_sp 138A                           __pidataBANK0 6C78  
                         __pidataBANK1 5AF2                           __pidataBANK2 6A88  
                         __pidataBANK3 6228                           __pidataBANK6 5730  
                            ?_TMR5_ISR 005D                              ?_TMR6_ISR 005D  
                     _DATAEE_WriteByte 6302                         ivt0x8_undefint 00AC  
                        __end_of_fputc 51CE                          __end_of_fputs 5FA2  
                   __size_of_ee_logger 0122        secs_II_monitor_message@store1_1 005A  
                        __end_of_srand 6B64                  __end_of_TMR5_CallBack 7056  
                        __end_of_putch 71FE                __end_of_PWM8_Initialize 7278  
              __end_of_TMR6_Initialize 6E5C                 __end_of_PMD_Initialize 72A2  
              __size_of_block_checksum 00E2                             ??_ADCC_ISR 005D  
                __end_of_TMR6_CallBack 7032            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0028                          _DMA1_DMAA_ISR 7324  
     __end_of_INT2_SetInterruptHandler 6ED4                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0004              __end_of_SYSTEM_Initialize 66EC  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 7192                             __pbssBANK0 0060  
                           __pbssBANK1 01D0                             __pbssBANK2 0200  
                           __pbssBANK3 0370                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             _check_help 4992  
                _INT0_InterruptHandler 000D                             ??_INT0_ISR 005D  
                           ??_INT1_ISR 005D                             ??_INT2_ISR 005D  
                    __end_of_TimerDone 700E                       _DMA1_DMADCNT_ISR 7318  
            __size_of_UART1_put_buffer 0028             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                             _hb_message 664E  
                __end_of_wait_lcd_done 71CA                     __size_of_parse_sid 0074  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 6E84  
              __end_of_ADCC_Initialize 6782                             ??_TMR5_ISR 00E0  
                           ??_TMR6_ISR 005D                     __size_of_secs_send 0288  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
                              _DMA1SSZ 003BF7                                _DMA2SSZ 003BD7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 713A                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005D                       _DMA1_DMASCNT_ISR 72B4  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001E                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 7078                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005D  
                 __size_of_UART1_Write 0040                  __size_of_gem_messages 00F6  
            __size_of_UART2_put_buffer 0028             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 07C0                                _SPI1CLK 003D1C  
                          r_protocol@d 005B                                _SPI1RXB 003D10  
                              _NVMADRH 0039E1                                _NVMADRL 0039E0  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
                              _NVMCON2 0039E6                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
               __end_of_DSM_Initialize 71AE                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 695A                      __end_of_ee_logger 52F0  
                   __end_of_UART1_Read 6A10                     __end_of_UART2_Read 69D4  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                        _mode_lamp_dim 7234                                __Lparam 0000  
             __end_of_UART1_Initialize 6434                        __size_of_WaitMs 0036  
                              ___aodiv 3E3E                                ___aomod 4318  
   __size_of_MyeaDogM_WriteStringAtPos 0112                             _m_protocol 1406  
                         _gem_messages 5830              __end_of_UART1_Receive_ISR 7158  
                 __end_of_init_display 5A10                                __pcinit 4B44  
             __end_of_mode_lamp_bright 72E0                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 72C4                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 0000                                __ptext1 3064  
                              __ptext2 3934                                __ptext3 5A10  
                              __ptext4 6CA4                                __ptext5 733A  
                              __ptext6 695A                                __ptext7 6CCC  
                              __ptext8 7342                                __ptext9 1A7C  
                    _UART2_Receive_ISR 7158                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                _OSCILLATOR_Initialize 7278                           __size_of_abs 0046  
                              _r_block 0078                           __size_of_pad 0114  
                              _isalpha 6854                                us738999 40A8  
                              us749999 4546                                us768999 3688  
                              _mode_sw 0024                                _islower 6B64  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 64F4                                _isupper 6B94  
                   m_protocol@rxData_l 0023                      __end_of_parse_sid 6228  
           __size_of_SYSTEM_Initialize 004E                                _sprintf 5626  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 4796                                _toupper 60BC  
                 end_of_initialization 4CBE                      __end_of_secs_send 3BBC  
             _INT2_SetInterruptHandler 6EAC               __size_of_secs_II_message 0564  
                           _r_protocol 2460    __end_of_UART1_SetTxInterruptHandler 6E0C  
          _UART1_SetTxInterruptHandler 6DE4        __end_of_secs_II_monitor_message 4F7C  
  __end_of_UART2_SetRxInterruptHandler 6DE4            _UART2_SetRxInterruptHandler 6DBC  
                    __end_of_set_vterm 713A                             _t_protocol 3064  
                    __end_of_vfpfcnvrt 1406                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 7376              __end_of_UART2_Receive_ISR 7176  
                       wdtdelay@dcount 0098                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005E                         _block_checksum 5A10  
                _INT1_InterruptHandler 000A                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 6E5C                           _display_help 7362  
                _TMR5_InterruptHandler 009C                           _display_info 735A  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002C  
  __end_of_ADCC_SetADIInterruptHandler 6F4C            _ADCC_SetADIInterruptHandler 6F24  
                           _update_lcd 5516                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                __size_of_vterm_sequence 03FC  
             __end_of_DATAEE_WriteByte 636A                        _DMA1_Initialize 6298  
                      _SPI1_Initialize 724C                  __end_of_get_vterm_ptr 6BF2  
                     _UART1_put_buffer 6CCC                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                    r_protocol@b_block 0016                      _sequence_messages 40BE  
                       __end_of_WaitMs 6AFA           __end_of_INTERRUPT_Initialize 63D0  
               __end_of_block_checksum 5AF2                             _vterm_dump 4F7C  
 __end_of_INT0_DefaultInterruptHandler 7386  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 7384             __size_of_UART1_Receive_ISR 001E  
                      _DMA2_Initialize 64F4                          __pidataBIGRAM 3BBC  
                        __pidataCOMRAM 737E                      __size_of_TMR5_ISR 0052  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 01B2  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3676  
                       __end_of_printf 6496               __end_of_DMA1_DMADCNT_ISR 7322  
          __size_of_PWM8_LoadDutyValue 0042                       _UART2_put_buffer 6CA4  
                __end_of_INT0_CallBack 709A                         __end_of_strlen 5F0A  
                  start_initialization 4B44   __end_of_TMR5_DefaultInterruptHandler 7234  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 721A  
      __size_of_PIN_MANAGER_Initialize 00A8                            __end_of_abs 680E  
                __end_of_INT1_CallBack 70BC              __size_of_set_display_info 0020  
                          __end_of_pad 5404                   __size_of_Default_ISR 0006  
                  __size_of_hb_message 0050                   __end_of_send_lcd_cmd 6D6C  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 70DE  
                 secs_II_message@block 0031                          _uart1RxBuffer 0400  
                        _uart2RxBuffer 0500                          _uart1TxBuffer 0240  
             __end_of_DMA1_DMASCNT_ISR 72C4                          _uart2TxBuffer 0200  
                       _DMA1_DMAOR_ISR 7330              __end_of_sequence_messages 4318  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A8                              _TimerDone 6FEA  
                        _ringBufS_init 6D6C                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00B5  
                          __pdataBANK1 0100                            __pdataBANK2 02C3  
                          __pdataBANK3 0300                            __pdataBANK6 0600  
           __size_of_UART2_Receive_ISR 001E             __end_of_EXT_INT_Initialize 6738  
                      run_checksum@sum 0018                    __end_of_help_button 6A4C  
      __end_of_eaDogM_WriteStringAtPos 6B30                            __pbssBIGRAM 0700  
              __end_of_DMA1_Initialize 6302                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 6F24                   __size_of_s10f1_opcmd 023E  
                        __pcstackBANK0 00E0               __size_of_TMR2_Initialize 001A  
              __end_of_SPI1_Initialize 7262               _UART1_RxInterruptHandler 00A8  
             _UART2_TxInterruptHandler 0001                    __size_of_m_protocol 0676  
            __size_of_ringBufS_put_dma 00AA                           _init_display 5926  
               __end_of_DMA1_DMAOR_ISR 733A                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0007                  _TMR6_InterruptHandler 009F  
                            _ee_logger 51CE                 __size_of_TMR6_CallBack 0024  
              __end_of_DMA2_Initialize 654E                 _PIN_MANAGER_Initialize 5D18  
                    __size_of_parse_ll 0074                   __end_of_wait_lcd_set 7370  
                        __pmediumconst FC4E                              __ptext100 3676  
                            __ptext101 1FE0                              __ptext110 71E4  
                            __ptext102 67C8                              __ptext111 5C6E  
                            __ptext103 4318                              __ptext120 7300  
                            __ptext112 6BC4                              __ptext104 3E3E  
                            __ptext121 70BC                              __ptext113 6FEA  
                            __ptext105 6034                              __ptext130 6F9C  
                            __ptext122 7388                              __ptext114 72E0  
                            __ptext106 52F0                              __ptext131 6C4C  
                            __ptext123 7378                              __ptext115 7078  
                            __ptext107 5E68                              __ptext140 7330  
                            __ptext132 6FC4                              __ptext124 6BF4  
                            __ptext116 7384                              __ptext108 5F0A  
                            __ptext141 65FC                              __ptext133 7158  
                            __ptext125 738A                              __ptext117 72F0  
                            __ptext109 50AA                              __ptext142 691A  
                            __ptext134 7200                              __ptext126 6F4C  
                            __ptext118 709A                              __ptext143 7032  
                            __ptext135 700E                              __ptext127 6C20  
                            __ptext119 7386                              __ptext144 721A  
                            __ptext136 680E                              __ptext128 6F74  
                            __ptext145 0000                              __ptext137 72B4  
                            __ptext129 713A                              __ptext138 7318  
                            __ptext139 7324                     __end_of_StartTimer 6A88  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00AC  
                             _ADCC_ISR 6BF4                    __size_of_r_protocol 044E  
               __CFG_BBSIZE$BBSIZE_512 000000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA2CON0 003BDC                               _DMA2CON1 003BDD  
                             _DMA2AIRQ 003BDE                               _DMA1SIRQ 003BFF  
                             _DMA2SIRQ 003BDF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0326                         _vterm_sequence 28AE  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 0098  
                       __size_of_srand 0034                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 636A  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                            _parse_sid 61B4                        ?_DMA1_DMAOR_ISR 005D  
                             _INT0_ISR 72E0                               _INT1_ISR 72F0  
                             _INT2_ISR 7300                               _LATBbits 003FBB  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE                               _LATFbits 003FBF  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 3934  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0060  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
           __size_of_sequence_messages 025A                              _ring_buf1 0280  
                            _ring_buf2 0370                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             i2u661_48 6F88                               _PIR8bits 0039A8  
                             i2u663_48 6FAE                               _PIR9bits 0039A9  
                             i2u665_48 6FD6                               i2u657_48 6C0C  
                             i2u659_48 6F60               __size_of_TMR5_Initialize 0046  
                            _set_vterm 711C                    __size_of_update_lcd 0110  
                          _help_button 6A10             __end_of_UART1_Transmit_ISR 6C4C  
                             _TMR5_ISR 65FC                               _TMR6_ISR 7200  
                            _port_data 01C0                              _vfpfcnvrt 0C46  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 7032  
                   __end_of_check_help 4B44                              _start_lcd 7370  
            __size_of_send_lcd_cmd_dma 0054                          _TMR6_CallBack 700E  
             __end_of_UART1_put_buffer 6CF4                  __size_of_send_lcd_cmd 0028  
               __end_of_vterm_sequence 2CAA      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 691A                    __end_of_UART2_Write 6998  
                     _set_display_info 70DE               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 0028                     __end_of_hb_message 669E  
                          _INTCON0bits 003FD2                              copy_data0 4B58  
                            copy_data1 4B7E                              copy_data2 4BA4  
                            copy_data3 4BC6                              copy_data4 4BE8  
                            copy_data5 4C0A                              copy_data6 4C2C  
             _INT0_SetInterruptHandler 6EFC                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 002E    __end_of_UART2_SetTxInterruptHandler 6DBC  
          _UART2_SetTxInterruptHandler 6D94                           _uart1RxCount 002B  
             __end_of_UART2_put_buffer 6CCC                           _uart2RxCount 0025  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 6D1C  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 71AE                           _send_lcd_cmd 6D44  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 7176                  __end_of_DMA1_DMAA_ISR 732E  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005D  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 72D2  
                     __size_of_isalpha 0044                               __pivt0x8 0008  
                     __size_of_islower 0030                     ??_DMA1_DMADCNT_ISR 005E  
                             __ptext10 28AE                               __ptext11 40BE  
                             __ptext20 4CC4                               __ptext12 4558  
                             __ptext21 4E28                               __ptext13 6140  
                             __ptext30 6D1C                               __ptext22 51CE  
                             __ptext14 61B4                               __ptext31 6D44  
                             __ptext23 6302                               __ptext15 5830  
                             __ptext40 72A2                               __ptext32 70FE  
                             __ptext24 6CF4                               __ptext16 6B30  
                             __ptext41 70DE                               __ptext33 6D6C  
                             __ptext25 734A                               __ptext17 2460  
                             __ptext50 6496                               __ptext42 7234  
                             __ptext34 664E                               __ptext26 6998  
                             __ptext18 68DA                               __ptext51 6D94  
                             __ptext43 72D2                               __ptext35 72C4  
                             __ptext27 7352                               __ptext19 1406  
                             __ptext60 71CA                               __ptext52 6DBC  
                             __ptext44 6898                               __ptext36 4992  
                             __ptext28 69D4                               __ptext61 724C  
                             __ptext53 63D0                               __ptext45 6A10  
                             __ptext37 4F7C                               __ptext29 5926  
                             __ptext70 6ED4                               __ptext62 7262  
                             __ptext54 6DE4                               __ptext46 6A4C  
                             __ptext38 6AC4                               __ptext71 6EFC  
                             __ptext63 728E                               __ptext55 6E0C  
                             __ptext47 735A                               __ptext39 711C  
                             __ptext80 5516                               __ptext72 7192  
                             __ptext64 5D18                               __ptext56 6E34  
                             __ptext48 7362                               __ptext81 6AFA  
                             __ptext73 64F4                               __ptext65 7278  
                             __ptext57 6E5C                               __ptext49 669E  
                             __ptext90 6434                               __ptext82 65A8  
                             __ptext74 6298                               __ptext66 7176  
                             __ptext58 6782                               __ptext91 5626  
                             __ptext83 71AE                               __ptext75 730E  
                             __ptext67 636A                               __ptext59 6E84  
                             __ptext92 5BC2                               __ptext84 654E  
                             __ptext76 7056                               __ptext68 66EC  
                             __ptext93 0C46                               __ptext85 5DC0  
                             __ptext77 6738                               __ptext69 6EAC  
                             __ptext94 2CAA                               __ptext86 736A  
                             __ptext78 6F24                               __ptext95 60BC  
                             __ptext87 7370                               __ptext79 5404  
                             __ptext96 6B64                               __ptext88 5FA2  
                             __ptext97 6B94                               __ptext89 338A  
                             __ptext98 6854                               __ptext99 4796  
                     __size_of_isupper 0030                               us1022999 1FFA  
                      _secs_II_message 1A7C                               us1042999 2D2A  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 010A  
                             us1099999 1AFE                       __size_of_strncmp 01FC  
                     __size_of_toupper 0084                       _ringBufS_put_dma 5C6E  
                   __end_of_m_protocol 1A7C                          __size_of_ctoa 0088  
                        __size_of_main 0C46                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 03BA                               _parse_ll 6140  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005D  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 00A2                              stoa@F1144 00B5  
                   ??_DMA1_DMASCNT_ISR 005E                               _spi_link 0085  
                             _wdtdelay 654E             __end_of_UART2_Transmit_ISR 6C78  
                             _vfprintf 5BC2                    secs_gem_state@block 001F  
                    _UART1_is_rx_ready 7352             __end_of_PWM8_LoadDutyValue 68DA  
                          _UART1_Write 68DA   __end_of_INT1_DefaultInterruptHandler 7388  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 7386  
                          _UART2_Write 695A                      _UART1_is_tx_ready 7342  
                      r_protocol@retry 005C                      t_protocol@requeue 0020  
    __end_of_MyeaDogM_WriteStringAtPos 5516                          ??_Default_ISR 005D  
                   __end_of_r_protocol 28AE                            _uart1RxHead 002D  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0030  
                          _uart2RxHead 0027                            _uart1RxTail 002C  
                          _NVMCON1bits 0039E5                            _uart2TxHead 002A  
                          _uart1TxTail 002F                            _uart2RxTail 0026  
                          _uart2TxTail 0029                           _wait_lcd_set 736A  
                   _EXT_INT_Initialize 66EC   __end_of_TMR6_DefaultInterruptHandler 6854  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 680E  
                   __end_of_t_protocol 338A   __end_of_ADCC_DefaultInterruptHandler 738C  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 738A  
                             intlevel2 0000                      _send_lcd_cmd_long 6D1C  
       __size_of_set_temp_display_help 0012          __end_of_set_temp_display_help 72B4  
              __size_of_secs_gem_state 0164                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 5E68                  __end_of_mode_lamp_dim 724C  
              __end_of_NCO1_Initialize 7192                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 735A                             _UART1_Read 69D4  
               __size_of_INT1_CallBack 0022                             _UART2_Read 6998  
                   __end_of_update_lcd 5626              __end_of_UART1_is_tx_ready 734A  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 734A  
               _uart2TxBufferRemaining 0028                      _UART2_is_tx_ready 733A  
                     _send_lcd_cmd_dma 65A8                  TMR5_ISR@CountCallBack 001A  
              __end_of_secs_II_message 1FE0       __end_of_INT1_SetInterruptHandler 6EFC  
            __size_of_UART1_Initialize 0064                        t_protocol@block 0091  
                     ??_DMA1_DMAOR_ISR 005E               _UART1_TxInterruptHandler 00A5  
                      t_protocol@retry 0021              __end_of_send_lcd_cmd_long 6D44  
                  __end_of_Default_ISR 737E         __end_of_PIN_MANAGER_Initialize 5DC0  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 50AA  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 6AFA  
                        _get_vterm_ptr 6BC4              __size_of_UART2_Initialize 005E  
